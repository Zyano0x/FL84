#pragma once

// Dumped with Dumper-7!


namespace SDK
{
	//---------------------------------------------------------------------------------------------------------------------
	// ENUMS
	//---------------------------------------------------------------------------------------------------------------------

	enum class ERoleSkillOperation : uint8
	{
		None = 0,
		ToNormal = 1,
		ClearCD = 2,
		ResetCD = 3,
		Forbid = 4,
		Unforbid = 5,
		ERoleSkillOperation_MAX = 6,
	};

	enum class EBattleEndType : uint8
	{
		None = 0,
		BattleOver = 1,
		PlayerNotEnough = 2,
		BeginTimeOut = 3,
		Abandoned = 4,
		EBattleEndType_MAX = 5,
	};

	enum class ESCTournamentType : uint8
	{
		None = 0,
		SingleRace = 1,
		PointRace = 2,
		KnockoutRace = 3,
		ESCTournamentType_MAX = 4,
	};

	enum class ESCRoomType : uint8
	{
		None = 0,
		Normal = 1,
		Tournament = 2,
		TournamentReply = 3,
		ESCRoomType_MAX = 4,
	};

	enum class ESCMInGameState : uint8
	{
		None = 0,
		InPrepare = 1,
		InBattle = 2,
		InBattleEnd = 3,
		ESCMInGameState_MAX = 4,
	};

	enum class ESCMHostType : uint8
	{
		Global = 0,
		Side = 1,
		Player = 2,
		ESCMHostType_MAX = 3,
	};

	enum class ESCMDataRankType : uint8
	{
		None = 0,
		Ascending = 1,
		AscendingReplace = 2,
		Descending = 3,
		DescendingReplace = 4,
		ESCMDataRankType_MAX = 5,
	};

	enum class ESCMDataChangeType : uint8
	{
		Add = 0,
		Change = 1,
		Delete = 2,
		DeleteAll = 3,
		ESCMDataChangeType_MAX = 4,
	};

	enum class EStatisticsType : uint8
	{
		None = 0,
		DSTime = 1,
		G_UnBattleEndPlayerCount = 2,
		G_UnBattleEndSideCount = 3,
		S_KillCount = 4,
		S_KillDownCount = 5,
		S_AssistCount = 6,
		S_DeathCount = 7,
		S_SaveCount = 8,
		S_UnBattleEndPlayerCount = 9,
		G_KillNum = 10,
		G_KillDown = 11,
		KillNum = 12,
		KillNumToRealPlayer = 13,
		P_KillStreak = 14,
		KillStreakHistory = 15,
		CharacterKillNumWithID = 16,
		KillDownNum = 17,
		AssistNum = 18,
		KillNpcNum = 19,
		KillMonster = 20,
		KillPlayer = 21,
		KillTeammate = 22,
		KillDownTeammate = 23,
		TotalWeaponKillNum = 24,
		WeaponAssistWithID = 25,
		WeaponKillNumWithID = 26,
		KillNumWithIDByVechile = 27,
		TotalVehicleKillNum = 28,
		RevengeNum = 29,
		AccurateKillTimes = 30,
		AccurateKillDownTimes = 31,
		WeaponSkillKillNum = 32,
		PunchKill = 33,
		AreaKillNum_Bubble = 34,
		DeathNum = 35,
		DyingCount = 36,
		DyingByNpc = 37,
		DyingByMonster = 38,
		DeathByVechile = 39,
		DeathByBombingArea = 40,
		CauseDamage = 41,
		CauseDamageToRealPlayer = 42,
		WeaponDamageWithIDToPlayer = 43,
		WeaponDamageWithTypeToPlayer = 44,
		VechileDamageWithIDToPlayer = 45,
		TotalVehicleDamage = 46,
		ReceivedDamage = 47,
		DamageByAI = 48,
		DamageByMonster = 49,
		DamageToMonster = 50,
		DamageToNpc = 51,
		AccurateDamage = 52,
		AttackTimes = 53,
		HitTimes = 54,
		HitedTimes = 55,
		AccurateDameageTimes = 56,
		BeAccurateDameageTimes = 57,
		LifeTime = 58,
		HealSelf = 59,
		SaveCount = 60,
		TeammateHeal = 61,
		ReceivedHeal = 62,
		ResurrectionCount = 63,
		CarSkillCount = 64,
		VechileDistance = 65,
		TotalVechileDistance = 66,
		VehicleTime = 67,
		UseVehicleTypes = 68,
		LastUseVehicleID = 69,
		TakeTheCarOfEnemy = 70,
		DriveCarInAirTime = 71,
		DriveHoverCarInWaterDistance = 72,
		WeaponID1 = 73,
		WeaponID2 = 74,
		WeaponLevel1 = 75,
		WeaponLevel2 = 76,
		UseWeaponSkillNum = 77,
		WeaponUseStartTimeWithID = 78,
		WeaponUseTimeWithID = 79,
		MaxGodWeaponNum = 80,
		CollectEnergy = 81,
		EscapeTimes = 82,
		CollectBoxNum = 83,
		CollectBoxNumWithHighQuality = 84,
		FlyCount = 85,
		ArmorUseCount = 86,
		ShieldRechargeCount = 87,
		EChestOpenNumForID = 88,
		DeathPos = 89,
		LandingPos = 90,
		LandingTime = 91,
		DropoutEvent = 92,
		DropoutTime = 93,
		MedicineUseCount = 94,
		RadarUseCount = 95,
		P_BattleResult = 96,
		OpenAirBoxNum = 97,
		KillInAirNum = 98,
		KillDownInAirNum = 99,
		ResurrectionNum = 100,
		ResurrectionCapsule = 101,
		TeamFriendRevive = 102,
		BuyESElectricNum = 103,
		CarFireCount = 104,
		HangTimeDuration = 105,
		SkydiveLandingDuration = 106,
		SwimDistance = 107,
		DanceCount = 108,
		PosionWalkDistance = 109,
		ShieldExpGainCount = 110,
		UpgradeShieldCount = 111,
		UpgradeRedShieldCount = 112,
		JumpBoardUseCount = 113,
		TerminaterCount = 114,
		UltimateSkillUseCount = 115,
		TacticalSkillUseCount = 116,
		UltimateSkillDamage = 117,
		TacticalSkillDamage = 118,
		UltimateSkillTakenDamage = 119,
		TacticalSkillTakenDamage = 120,
		UltimateSkillKillNum = 121,
		TacticalSkillKillNum = 122,
		HasHighlight = 123,
		WeaponID3 = 124,
		BackpackItems = 125,
		CurrentWeaponID = 126,
		MAX = 127,
	};

	enum class ERecordingType : uint8
	{
		None = 0,
		Local = 1,
		NormalMatch = 2,
		Tournament = 3,
		LiveWatchOnly = 4,
		LocalHighlight = 5,
		ERecordingType_MAX = 6,
	};

	enum class EReplayManagerState : uint8
	{
		Initializing = 0,
		Idle = 1,
		Recording = 2,
		PlayingTryToStart = 3,
		PlayingStarted = 4,
		PlayingLoadLevelsStarted = 5,
		PlayingLevelLoaded = 6,
		PlayingStreamReadied = 7,
		Playing = 8,
		PlayingAtEnd = 9,
		EReplayManagerState_MAX = 10,
	};

	enum class EReplayPlayingFinishReason : uint8
	{
		Normal = 0,
		GMForce = 1,
		StreamerDownloadChunkTimeout = 2,
		StreamerServiceUnavailable = 3,
		EReplayPlayingFinishReason_MAX = 4,
	};

	enum class EMultiplePassMaterialChangeCompatibilityMode : uint8
	{
		Compatible = 0,
		Incompatible = 1,
		CompatibleWithSpecifiedPriorityTags = 2,
		IncompatibleWithSpecifiedPriorityTags = 3,
		EMultiplePassMaterialChangeCompatibilityMode_MAX = 4,
	};

	enum class EMaterialChangeConflictResolveStrategy : uint8
	{
		KeepAll = 0,
		KeepNew = 1,
		KeepOld = 2,
		EMaterialChangeConflictResolveStrategy_MAX = 3,
	};

	enum class EWalkMode : uint8
	{
		Idle = 0,
		Run = 1,
		Sprint = 2,
		CrouchIdle = 3,
		CrouchRun = 4,
		CrouchSprint = 5,
		Crawl = 6,
		EWalkMode_MAX = 7,
	};

	enum class EAirMoveMode : uint8
	{
		None = 0,
		Jump = 1,
		JetFly = 2,
		Cruise = 3,
		Skydive = 4,
		Launch = 5,
		Fall = 6,
		Fly = 7,
		WallRun = 8,
		EAirMoveMode_MAX = 9,
	};

	enum class EClientMoveTrustType : uint8
	{
		TrustLocation = 0,
		TrustLocationAndMovementMode = 1,
		EClientMoveTrustType_MAX = 2,
	};

	enum class EBoolean : uint8
	{
		BranchFalse = 0,
		BranchTrue = 1,
		EBoolean_MAX = 2,
	};

	enum class EActorRegisterType : uint8
	{
		EART_None = 0,
		EART_Character = 1,
		EART_Vehicle = 2,
		EART_Turret = 4,
		EART_TreasureBox = 8,
		EART_ChargingPile = 16,
		EART_Summon = 32,
		EART_HumanoidTarget = 64,
		EART_Water = 128,
		EART_MAX = 129,
	};

	enum class ESolarNetMode : uint8
	{
		NM_Standalone = 0,
		NM_DedicatedServer = 1,
		NM_ListenServer = 2,
		NM_Client = 3,
		NM_MAX = 4,
		NM_Unknown = 5,
	};

	enum class ESolarPlayStage : uint8
	{
		None = 0,
		Login = 1,
		Lobby = 2,
		Battle = 3,
		Settlement = 4,
		PlaceHolder1 = 5,
		PlaceHolder2 = 6,
		PlaceHolder3 = 7,
		ESolarPlayStage_MAX = 8,
	};

	enum class EItemModifyResult : uint8
	{
		Succeed = 0,
		Overflow = 1,
		Deficient = 2,
		IllegalParam = 3,
		Error = 4,
		EItemModifyResult_MAX = 5,
	};

	enum class EEnergyUsage : uint8
	{
		Box = 0,
		Weapon = 1,
		Ability = 2,
		Jet = 3,
		Pile = 4,
		Armor = 5,
		Shield = 6,
		Sky = 7,
		RadarStation = 8,
		ElectricShop = 9,
		DeathBox = 10,
		EEnergyUsage_MAX = 11,
	};

	enum class EItemAppearanceType : uint8
	{
		EApprenace_None = 0,
		EApprenace_Outline = 1,
		EApprenace_Float = 2,
		EApprenace_All = 3,
		EApprenace_MAX = 4,
	};

	enum class EItemType : int32
	{
		NONE = 0,
		SHIELD = 101,
		ARMOR = 102,
		BULLET = 103,
		CARIRIDGE_BAG = 104,
		ARMOR_MATERIAL = 105,
		ENERGY_MODULE = 106,
		EXTRA_ENERGY = 107,
		RADAR_OPERATOR = 108,
		BACKPACK_ENERGY = 109,
		BACKUP_ENERGY = 110,
		SHIELD_RECHARGER = 112,
		BACKPACK_ITEM = 113,
		WEAPON_PARTS = 114,
		JETPACK_MODULE_HORIZONTAL = 111,
		JETPACK_MODULE_VERTICAL = 115,
		REVIVE_ITEM = 116,
		TREASUREBOX = 120,
		AIRDROPBOX = 121,
		DEATHBOX = 122,
		NEUTRAL_CARD = 130,
		SHIELD_UPGRADE_MATERIAL = 148,
		EXP_ITEM = 149,
		WEAPON = 151,
		WEAPON_SKIN = 171,
		BACKPACK = 201,
		TAILFLAME = 202,
		CARDPOSE = 203,
		CARDBACKGROUND = 204,
		CAPSULE = 251,
		CHAR_SKIN_MIN = 301,
		CHAR_ANIMATION_MVP = 302,
		CHAR_SKIN_MAX = 350,
		CHARACTER = 351,
		EXPERIENCE = 401,
		GIFTBAG = 404,
		CHARACTER_TRIALCARD = 405,
		CHARACTERSKIN_TRIALCARD = 406,
		ACTIVENESS = 411,
		WEAPONSKIN_TRIALCARD = 412,
		GIFTBAG_ONBACKPACK = 414,
		BACKPACK_TRIALCARD = 415,
		TAILFLAME_TRIALCARD = 416,
		DIAMOND_VOUCHER = 417,
		LOTCOIN = 421,
		ZOMBORG = 422,
		WISHCOIN = 423,
		SURPRISECOIN = 424,
		TOKEN = 430,
		BUSINESSCARDFRAME = 432,
		AVATARFRAME = 434,
		CHARACTER_SHARD = 435,
		CHARACTER_SKIN_SHARD = 436,
		WEAPON_SKIN_SHARD = 437,
		BACKPACK_SHARD = 438,
		TAILFLAME_SHARD = 439,
		CAPSULE_SHARD = 440,
		VEHICLE_SKIN_SHARD = 441,
		ACCOUNT_AVATAR = 443,
		EMOTE = 444,
		SIGNIN_CARD = 447,
		RAFFLE_TICKET = 448,
		HOMEBUILD = 501,
		HOMEINSTALLATION = 502,
		HOMEITEM = 503,
		HOMEDRAWING = 504,
		HOMEPART = 505,
		HOMEDEVICE = 506,
		HOMEMAX = 520,
		VEHICLE_SKIN = 701,
		SUPPLYBOX = 801,
		DISPLAY_ITEM = 999,
		EItemType_MAX = 1000,
	};

	enum class EWeaponSlotType : uint8
	{
		EWeaponSlotType_UnArm = -1,
		EWeaponSlotType_Primary = 0,
		EWeaponSlotType_Secondary = 1,
		EWeaponSlotType_Tertiary = 2,
		EWeaponSlotType_MAX = 3,
	};

	enum class EGmType : uint8
	{
		Fetch = 0,
		Discard = 1,
		ClearBackPack = 2,
		Use = 3,
		RemoveWeapon = 4,
		EGmType_MAX = 5,
	};

	enum class EEnergyState : uint8
	{
		NORMAL = 0,
		SKY = 1,
		PILE = 2,
		BOX = 4,
		E2M = 8,
		M2E = 16,
		EEnergyState_MAX = 17,
	};

	enum class ESocialActionType : uint8
	{
		None = 0,
		Like = 1,
		Unlike = 2,
		Gift = 3,
		SendTask = 4,
		IncreaseTaskLevel = 5,
		FinishTask = 6,
		ESocialActionType_MAX = 7,
	};

	enum class EInteractiveTaskType : uint8
	{
		None = 0,
		KillWithWeaponType = 1,
		KillWithAnyVehicle = 2,
		KillByFist = 3,
		OpenAirdrop = 4,
		EInteractiveTaskType_MAX = 5,
	};

	enum class ESocialCurrencyType : uint8
	{
		None = 0,
		Gold = 1,
		Diamond = 2,
		ESocialCurrencyType_MAX = 3,
	};

	enum class EFindSpectateTargetType : uint8
	{
		Teammate = 0,
		PlayerKiller = 1,
		AIKiller = 2,
		AllNonBot = 3,
		All = 4,
		EFindSpectateTargetType_MAX = 5,
	};

	enum class EVehicleWeaponScopeType : uint8
	{
		None = 0,
		Magnifier_X2 = 1,
		Magnifier_X4 = 2,
		Magnifier_X8 = 3,
		Max = 4,
	};

	enum class ESpectatePhase : uint8
	{
		NotSpectate = 0,
		LookAtSelfDeathBox = 1,
		SpectateTeammates = 2,
		BlockWhenAllTeammatesDead = 3,
		SpectateAllPlayers = 4,
		ESpectatePhase_MAX = 5,
	};

	enum class ESolarTablesEnum_BattleUpgradeEffectType : uint8
	{
		MaxHp = 0,
		BulletDamage = 1,
		CharacterSkillDamage = 2,
		VehicleWeaponDamage = 3,
		VehicleSkillDamage = 4,
		VehicleStrikeDamage = 5,
		CharacterPunchDamage = 6,
		CharacterUpgradeDamage = 7,
		_Count = 8,
		ESolarTablesEnum_MAX = 9,
	};

	enum class EPlayerStateRepType : uint8
	{
		Character = 0,
		Controller = 1,
		EPlayerStateRepType_MAX = 2,
	};

	enum class EPlayerChangedGoldResult : uint8
	{
		None = 0,
		Success = 1,
		GoldIsNotEnough = 2,
		NetworkError = 3,
		EPlayerChangedGoldResult_MAX = 4,
	};

	enum class EPlayerChangedGoldType : uint8
	{
		None = 0,
		CostedGold = 1,
		ReceivedGold = 2,
		EPlayerChangedGoldType_MAX = 3,
	};

	enum class EExpBehaviorType : uint8
	{
		None = 0,
		Kill = 1,
		Assist = 2,
		Damage = 3,
		Pickup = 4,
		Survival = 5,
		Spawner = 6,
		Device = 7,
		TreasureBox = 8,
		DeathBox = 9,
		Airdrop = 10,
		EExpBehaviorType_MAX = 11,
	};

	enum class EInteractableType : uint8
	{
		FIRECIRCLE = 0,
		JUMPPAD = 1,
		VEHICLEPAD = 2,
		RADARSTATION = 3,
		ELECTRICSHOP = 4,
		CHARGINGPILE = 5,
		SHIELDUPGRADEITEM = 6,
		MAX = 7,
	};

	enum class EWorldMarkType : uint8
	{
		ITEM = 0,
		INVALID = 1,
		WARNING = 2,
		MINIMAP = 3,
		BIGMAP = 4,
		VEHICLE = 5,
		INTERACTABLEACTOR = 6,
		QUICKCHATWHEEL = 7,
		ATTACHED = 8,
		MAX = 9,
	};

	enum class ECharacterStateInGame : uint8
	{
		None = 0,
		InVehicle = 1,
		Dying = 2,
		Dead = 4,
		MaxState = 7,
		ECharacterStateInGame_MAX = 8,
	};

	enum class EPlayerStateInGame : uint8
	{
		None = 0,
		AppHasDeactivated = 1,
		AppHasReactivated = 2,
		Talking = 4,
		MaxState = 7,
		EPlayerStateInGame_MAX = 8,
	};

	enum class EPlayerNetStateInGame : uint8
	{
		None = 0,
		Online = 1,
		Offline = 2,
		EPlayerNetStateInGame_MAX = 3,
	};

	enum class ETeamType : uint8
	{
		PlayerTeam = 0,
		AITeam = 1,
		OnlyPlayerTeam = 2,
		EmptyTeam = 3,
		AnyTeam = 4,
		ETeamType_MAX = 5,
	};

	enum class ETalentState : uint8
	{
		Activating = 0,
		CoolingDown = 1,
		Unactivated = 2,
		Invalid = 3,
		ETalentState_MAX = 4,
	};

	enum class EAppLifetimeState : uint8
	{
		NONE = 0,
		NORMAL = 1,
		Background = 2,
		Deactive = 3,
		Terminated = 4,
		EAppLifetimeState_MAX = 5,
	};

	enum class ESkydivingState : uint8
	{
		NotStarted = 0,
		PreStart = 1,
		InProgress = 2,
		Completed = 3,
		ESkydivingState_MAX = 4,
	};

	enum class ESCMPlayerOutPath : uint8
	{
		None = 0,
		OutFromSettingUI = 1,
		OutBySelf = 2,
		KickOutByServer = 3,
		OBSwitchScene = 4,
		ESCMPlayerOutPath_MAX = 5,
	};

	enum class ESCMPlayerPunishType : uint8
	{
		None = 0,
		HangUp = 1,
		DropOut = 2,
		IsolationPool = 3,
		KillTeammate = 4,
		ESCMPlayerPunishType_MAX = 5,
	};

	enum class EReplayCameraMode : uint8
	{
		None = 0,
		ThirdPersonMode = 1,
		LockMode = 2,
		FreeMode = 3,
		LookAtMode = 4,
		CircularMode = 5,
		EReplayCameraMode_MAX = 6,
	};

	enum class ESkydiveStage : uint8
	{
		None = 0,
		Flying = 1,
		Landing = 2,
		ESkydiveStage_MAX = 3,
	};

	enum class ESolarCharacterType : uint8
	{
		ESolarCharacterType_None = 0,
		ESolarCharacterType_Player = 1,
		ESolarCharacterType_Bot = 2,
		ESolarCharacterType_Monster = 3,
		ESolarCharacterType_MAX = 4,
	};

	enum class ECharacterSoundOpt : uint8
	{
		None = 0,
		Shield_Hit_1P = 1,
		Shield_Hit_3P = 2,
		Shield_Broken_1P = 3,
		Shield_Broken_3P = 4,
		Vehicle_Speedboard_1P = 5,
		Body_Hit_With_Bullet_Common_1P = 6,
		Body_Hit_By_Bullet_Common_1P = 7,
		Body_Hit_With_Punch_Common_1P = 8,
		Body_Hit_By_Punch_Common_1P = 9,
		Headshot_1P = 10,
		Headshot_Kill_UI = 11,
		Shot_Down_UI = 12,
		Shot_Down_1P = 13,
		Shot_Down_3P = 14,
		Shot_Down_3P_Enemy = 15,
		Death_UI = 16,
		Death_1P = 17,
		Death_3P = 18,
		Airborne_Fall_Start_1P = 19,
		Water_Fall_1P = 20,
		Water_Fall_3P = 21,
		Water_Fall_3P_Enemy = 22,
		Squat_1P = 23,
		Squat_3P = 24,
		Squat_3P_Enemy = 25,
		Stop_Climb_1P = 26,
		Stop_Climb_3P = 27,
		Stop_Climb_3P_Enemy = 28,
		Loop_Knapsack_Solar_Percent_1P = 29,
		Stop_Knapsack_Solar_Percent_1P = 30,
		Knapsack_Solar_Charging_Done_1P = 31,
		Knapsack_Solar_On_1P = 32,
		Knapsack_Solar_Off_1P = 33,
		Sniper_B01_Skill_On_1P = 34,
		Sniper_B01_Skill_Off_1P = 35,
		B9A04_Skill_Loop_1P = 36,
		B9A04_Skill_Loop_3P = 37,
		B9A04_Skill_Loop_3P_Enemy = 38,
		B9A04_Skill_Loop_End_1P = 39,
		B9A04_Skill_Loop_End_3P = 40,
		B9A04_Skill_Loop_End_3P_Enemy = 41,
		Knapsack_Landing_1P = 42,
		Knapsack_Landing_3P = 43,
		Knapsack_Landing_3P_Enemy = 44,
		Knapsack_Fly_Water_1P = 45,
		Knapsack_Fly_Water_3P = 46,
		Knapsack_Fly_Water_3P_Enemy = 47,
		Play_Shield_OneSet_1P = 48,
		Play_Shield_OneSet_3P = 49,
		Play_Shield_OneSet_3P_Enemy = 50,
		Play_Shield_Charging_1P = 51,
		Play_Shield_Multi_Charging_1P = 52,
		Play_Shield_Charging_3P = 53,
		Play_Shield_Charging_3P_Enemy = 54,
		Play_Shield_Charged_1P = 55,
		Play_Shield_Charged_3P = 56,
		Play_Shield_Charged_3P_Enemy = 57,
		Play_Shield_Charge_To_Max_1P = 58,
		Play_Shield_Charge_To_Max_3P = 59,
		Play_Shield_Charge_To_Max_3P_Enemy = 60,
		Play_Shield_Charge_Break_1P = 61,
		Play_Shield_Charge_Break_3P = 62,
		Play_Shield_Charge_Break_3P_Enemy = 63,
		Play_Hit_By_EMP_1P = 64,
		Play_Hit_By_EMP_3P = 65,
		Play_Hit_By_EMP_3P_Enemy = 66,
		Stop_Hit_By_EMP_1P = 67,
		Stop_Hit_By_EMP_3P = 68,
		Stop_Hit_By_EMP_3P_Enemy = 69,
		Play_Monster_Appear = 70,
		Play_Monster_Die = 71,
		Play_Heal_Wrap_1P = 72,
		Play_Heal_Wrap_3P = 73,
		Play_Heal_Wrap_3P_Enemy = 74,
		Stop_Heal_Wrap_1P = 75,
		Stop_Heal_Wrap_3P = 76,
		Stop_Heal_Wrap_3P_Enemy = 77,
		Play_Heal_Wrap_Cancel_1P = 78,
		Play_Heal_Wrap_Cancel_3P = 79,
		Play_Heal_Wrap_Cancel_3P_Enemy = 80,
		Play_Heal_Wrap_Complete_1P = 81,
		Play_Heal_Wrap_Complete_3P = 82,
		Play_Heal_Wrap_Complete_3P_Enemy = 83,
		Stop_Shield_Charging_1P = 84,
		Stop_Shield_Charging_3P = 85,
		Stop_Shield_Charging_3P_Enemy = 86,
		Mark_Select_Dial_UI = 87,
		Mark_Select_Pin_UI = 88,
		Mark_Select_Cancel_UI = 89,
		Mark_Select_Common_UI = 90,
		Mark_Danger_UI = 91,
		Play_Skill_Fast_Reload = 92,
		Play_char_skill_passive_targetlock = 93,
		Max = 94,
	};

	enum class EWeaponType : uint8
	{
		AssualtRifle = 0,
		Submachinegun = 1,
		Shotgun = 2,
		Sniper = 3,
		VehicleMounted = 4,
		ItemWeapon = 5,
		SummonWeapon = 6,
		AntiVehicle = 7,
		Unarm = 8,
		Unknown = 9,
		EWeaponType_MAX = 10,
	};

	enum class ESCMDamageType : uint8
	{
		Point = 0,
		Poison = 1,
		Bomb = 2,
		AirDrop = 3,
		Dying = 4,
		VehicleHit = 5,
		VehicleExplosion = 6,
		Weapon = 7,
		UnarmWeapon = 8,
		VehicleWeapon = 9,
		SummonWeapon = 10,
		VehicleAbility = 11,
		WeaponAbility = 12,
		HelplessDeathVerge = 13,
		DeathVergeInWater = 14,
		GMCmd = 15,
		BackToLobby = 16,
		AppEnterBackground = 17,
		LongTimeDisconnect = 18,
		ClassSkill = 19,
		TacticalSkill = 20,
		ESCMDamageType_MAX = 21,
	};

	enum class EDamageResultType : uint8
	{
		Normal = 0,
		Down = 1,
		Die = 2,
		EDamageResultType_MAX = 3,
	};

	enum class EHealthChangeType : uint8
	{
		Normal = 0,
		Self = 1,
		Ability = 2,
		Ability_Deadly = 3,
		Item = 4,
		Teammate = 5,
		Environment = 6,
		EHealthChangeType_MAX = 7,
	};

	enum class ESolarAttributeType : uint8
	{
		ESolarAttributeType_None = 0,
		ESolarAttributeType_BasePhysicalDamage = 1,
		ESolarAttributeType_BaseEnergyDamage = 2,
		ESolarAttributeType_Health = 3,
		ESolarAttributeType_DeadlyDamage = 4,
		ESolarAttributeType_Energy = 5,
		ESolarAttributeType_Shield = 6,
		ESolarAttributeType_Weapon = 7,
		ESolarAttributeType_Mark = 8,
		ESolarAttributeType_MaxHealth = 9,
		ESolarAttributeType_MaxItemPile = 10,
		ESolarAttributeType_MoveSpeed = 11,
		ESolarAttributeType_ShieldRechargeCost = 12,
		ESolarAttributeType_Max = 13,
	};

	enum class EShieldUpgradeInteractAckType : uint8
	{
		Success = 0,
		ItemReachLimit = 1,
		AlreadyInteracted = 2,
		SuccessWithReconnect = 3,
		EShieldUpgradeInteractAckType_MAX = 4,
	};

	enum class EShieldCancelRechargeReason : uint8
	{
		None = 0,
		StopAutoRecharge = 1,
		EShieldCancelRechargeReason_MAX = 2,
	};

	enum class ESolarHitType : uint8
	{
		None = 0,
		Character_Hit = 1,
		Character_Kill = 2,
		Character_BreakArmor = 3,
		Character_BreakShield = 4,
		Character_PendingKill = 5,
		Character_Headshot = 6,
		Character_HitShield = 7,
		Character_HitArmor = 8,
		Character_HitDown = 9,
		Character_HeadshotKill = 10,
		Vehicle_Hit = 51,
		Vehicle_HitWeakness = 52,
		ESolarHitType_MAX = 53,
	};

	enum class EPlayerWeaponMsgType : uint8
	{
		EPlayerWeaponMsgType_HitPawn = 0,
		EPlayerWeaponMsgType_PlayerAssist = 1,
		EPlayerWeaponMsgType_NpcAssist = 2,
		EPlayerWeaponMsgType_SafeAreaUpdate = 3,
		EPlayerWeaponMsgType_ForbidShooting = 4,
		EPlayerWeaponMsgType_AddExp = 5,
		EPlayerWeaponMsgType_Max = 6,
	};

	enum class EShieldRechargeState : uint8
	{
		AutoRecharge = 0,
		ManualRecharge = 1,
		None = 2,
		EShieldRechargeState_MAX = 3,
	};

	enum class ECharacterOperation : uint8
	{
		ECharacterOperation_None = 0,
		ECharacterOperation_OpenScope = 1,
		ECharacterOperation_CloseScope = 2,
		ECharacterOperation_OpenScopeInstant = 3,
		ECharacterOperation_MAX = 4,
	};

	enum class EItemChangeType : uint8
	{
		Default = 0,
		PickUp = 1,
		Drop = 2,
		EItemChangeType_MAX = 3,
	};

	enum class ECustomJumpType : uint8
	{
		None = 0,
		Jump = 1,
		Launch = 2,
		ECustomJumpType_MAX = 3,
	};

	enum class EDriveState : uint8
	{
		None = 0,
		Driver = 1,
		Passenger = 2,
		EDriveState_MAX = 3,
	};

	enum class ERoleSkillStatus : uint8
	{
		Normal = 0,
		InCD = 1,
		Forbidden = 2,
		ERoleSkillStatus_MAX = 3,
	};

	enum class ESpecAnimInstType : uint8
	{
		Base = 0,
		Vehicle = 1,
		OneHandThrow = 2,
		KeepFiring = 3,
		Gatling = 4,
		CardsThrow = 5,
		DuckRolling = 6,
		ESpecAnimInstType_MAX = 7,
	};

	enum class EWeaponPartType : uint8
	{
		Muzzle = 0,
		Scope = 1,
		Clip = 2,
		Rune = 3,
		Grip = 4,
		GunStock = 5,
		Scope2x = 6,
		Scope4x = 7,
		Scope8x = 8,
		MAX = 9,
	};

	enum class EVelocityStatus : uint8
	{
		Any = 0,
		Stationary = 1,
		Moving = 2,
		EVelocityStatus_MAX = 3,
	};

	enum class EShieldWidgetState : uint8
	{
		None = 0,
		PreAdd = 1,
		DoAdd = 2,
		CancelAdd = 3,
		DoSub = 4,
		EShieldWidgetState_MAX = 5,
	};

	enum class EEnterBattleType : uint8
	{
		OnHit = 0,
		OnWeaponFire = 1,
		NotEnter = 2,
		EEnterBattleType_MAX = 3,
	};

	enum class EShieldState : uint8
	{
		NONE = 0,
		SPAWN = 1,
		NORMAL = 2,
		RECHARGE = 3,
		BREAK = 4,
		PILE = 5,
		MAX = 6,
	};

	enum class ESolarTreatmentState : uint8
	{
		None = 0,
		Treating = 1,
		End = 2,
		ESolarTreatmentState_MAX = 3,
	};

	enum class EShieldSoundType : uint8
	{
		StartRecharge = 0,
		Charging = 1,
		Charged = 2,
		ChargedToMax = 3,
		ChargeBreak = 4,
		ShieldHitted = 5,
		ShieldBroken = 6,
		StopRecharge = 7,
		MultiCharging = 8,
		EShieldSoundType_MAX = 9,
	};

	enum class EShieldSoundEventType : uint8
	{
		Type_1P = 0,
		Type_3P = 1,
		Type_3P_Enemy = 2,
		Type_MAX = 3,
	};

	enum class EIdleTurnType : uint8
	{
		Turn_Idle = 0,
		Turn_Left = 1,
		Turn_Right = 2,
		Turn_MAX = 3,
	};

	enum class ETreasureBoxState : uint8
	{
		None = 0,
		Close = 1,
		Open = 2,
		ETreasureBoxState_MAX = 3,
	};

	enum class EWallRunState : uint8
	{
		WallRunning = 0,
		Success = 1,
		EWallRunState_MAX = 2,
	};

	enum class ESkillAnimRightHandType : uint8
	{
		Default = 0,
		Card = 1,
		ESkillAnimRightHandType_MAX = 2,
	};

	enum class ESkillAnimType : uint8
	{
		None = 0,
		SkillWithoutAnim = 1,
		OneHandThrow = 2,
		DoubleHandsThrow = 3,
		KeepFiring = 4,
		Gatling = 5,
		CardsThrow = 6,
		DuckRolling = 7,
		ESkillAnimType_MAX = 8,
	};

	enum class ECruiseState : uint8
	{
		None = 0,
		Boarded = 1,
		CruisePendingStarted = 2,
		CruiseStarted = 3,
		ParachuteAllowed = 4,
		ParachutePendingStarted = 5,
		ParachuteStarted = 6,
		End = 7,
		Max = 8,
	};

	enum class EJetFlyType : uint8
	{
		None = 0,
		VerticalJetFly = 1,
		HorizontalJetFly = 2,
		CustomJetFly = 3,
		EJetFlyType_MAX = 4,
	};

	enum class ERescueState : uint8
	{
		EState_None = 0,
		EState_Dying = 1,
		EState_Rescuing = 2,
		EState_BeingRescue = 3,
		EState_MAX = 4,
	};

	enum class EBackpackPropellingMode : uint8
	{
		Default = 0,
		Skydive = 1,
		EBackpackPropellingMode_MAX = 2,
	};

	enum class EFXJetType : uint8
	{
		JetDefault = 0,
		JetSingle = 1,
		JetLoop = 2,
		VerticalLaunch = 3,
		WallRun = 4,
		EFXJetType_MAX = 5,
	};

	enum class ECharacterBodyScaleType : uint8
	{
		None = 0,
		Woman = 1,
		Man = 2,
		DuckMan = 3,
		SmallWoman = 4,
		ECharacterBodyScaleType_MAX = 5,
	};

	enum class EAirDropOpenState : uint8
	{
		Closed = 0,
		Opening = 1,
		Opened = 2,
		EAirDropOpenState_MAX = 3,
	};

	enum class EAirDropMovementState : uint8
	{
		None = 0,
		Waiting = 1,
		Falling = 2,
		Landed = 3,
		Removed = 4,
		EAirDropMovementState_MAX = 5,
	};

	enum class EAlertDirection : uint8
	{
		Forward = 0,
		Backward = 1,
		Left = 2,
		Right = 3,
		EAlertDirection_MAX = 4,
	};

	enum class EShotMomentFlag : uint8
	{
		Shotting = 0,
		Hit = 1,
		Killed = 2,
		Invalid = 3,
		EShotMomentFlag_MAX = 4,
	};

	enum class EShotModeFlag : uint8
	{
		Orgin = 0,
		D3d = 1,
		Dwm = 2,
		Rand = 3,
		EShotModeFlag_MAX = 4,
	};

	enum class ESolarInputMode : uint8
	{
		GameOnly = 0,
		GameAndUI = 1,
		UIOnly = 2,
		ESolarInputMode_MAX = 3,
	};

	enum class EPassiveTriggeredVoice : int32
	{
		NOVOICE = 0,
		TakeIt = 1002,
		Alright = 1003,
		GotIt = 1004,
		MarkLocation = 1005,
		AirdropsDelivering = 4001,
		AirdropsDelivered = 4002,
		Remaining3EnemySuqads = 4003,
		Remaining2EnemySuqads = 4004,
		Remaining1EnemySuqads = 4005,
		SafeZoneRetract30s = 4006,
		ResurrectionPeriodEnded = 4007,
		WelcomeToFarlight84 = 4008,
		AirdropsArriveIn60 = 4009,
		AirdropsArriveIn45 = 4010,
		AirdropsArriveIn30 = 4011,
		CharAppear = 5000,
		UsingMedicine = 5001,
		AddingShield = 5002,
		Reloading = 5003,
		HelpingTeammate = 5004,
		HitEnemy = 5005,
		KillEnemy = 5006,
		DestroyOtherTeam = 5007,
		ReviveTeammate = 5008,
		TakeDamage = 5009,
		Defeated = 5010,
		GetKilled = 5011,
		TeammataDefeated = 5012,
		TooFarApart = 5013,
		Charging50 = 5014,
		ChargingFinish = 5015,
		BecomeKillLeader = 5016,
		BackInTheFight = 5017,
		ParachuteFollowMe = 5018,
		ParachuteStartJump = 5019,
		NeedWeapons = 2009,
		NeedVehicle = 2010,
		NeedMuzzle = 3001,
		NeedGrip = 3002,
		NeedMagazine = 3003,
		NeedStock = 3004,
		NeedScope = 3005,
		NeedShield = 3006,
		NeedBatteryPack = 3007,
		NeedHorizontalCooldown = 3008,
		NeedVerticalCooldown = 3009,
		NeedSMGAmmo = 3010,
		NeedShutGunAmmo = 3011,
		NeedRifleAmmo = 3012,
		NeedSniperAmmo = 3013,
		NeedMedKit = 3014,
		NeedShieldRestorer = 3015,
		NeedSpecialWeapon = 3016,
		NeedRespawnPod = 3017,
		NeedBigShield = 3018,
		UseSuperSkill = 5021,
		Level1 = 2301,
		Level2 = 2303,
		Level3 = 2303,
		Level4 = 2304,
		Level5 = 2305,
		EPassiveTriggeredVoice_MAX = 5022,
	};

	enum class EInputSwitchType : uint8
	{
		ActionBinding = 0,
		ActionRemove = 1,
		AxisBinding = 2,
		AxisRemove = 3,
		EInputSwitchType_MAX = 4,
	};

	enum class EVehicleClass : uint8
	{
		All = 0,
		Wheeled = 1,
		Legged = 2,
		Hover = 3,
		EVehicleClass_MAX = 4,
	};

	enum class EWeaponUIType : uint8
	{
		All = 0,
		AssualtRifle = 1,
		Submachinegun = 2,
		Shotgun = 3,
		Sniper = 4,
		Others = 5,
		EWeaponUIType_MAX = 6,
	};

	enum class ECustomParamValueType : uint8
	{
		None = 0,
		Bool = 1,
		Int = 2,
		Float = 3,
		Enum_S = 4,
		Enum_M = 5,
		AvailableWeapons = 6,
		AvailableVehicles = 7,
		ECustomParamValueType_MAX = 8,
	};

	enum class ERemovedReasonType : uint8
	{
		None = 0,
		TimeOut = 1,
		Abandoned = 2,
		OwnerKick = 3,
		NotEnough = 4,
		ERemovedReasonType_MAX = 5,
	};

	enum class EResurrectionState : uint8
	{
		Alive = 0,
		WaitingTeammatesHelp = 1,
		TimeOut = 2,
		AllTeammatesDied = 3,
		LeaveBattle = 4,
		EResurrectionState_MAX = 5,
	};

	enum class ESCMPlayerOutType : uint8
	{
		None = 0,
		SelfLogout = 1,
		BattleEnd = 2,
		SelfEnd = 3,
		OfflineEnd = 4,
		Cheating = 5,
		Abnormal = 6,
		ESCMPlayerOutType_MAX = 7,
	};

	enum class EFileDownloadError : uint8
	{
		None = 0,
		ConnectFailed = 1,
		RequestHeadFailed = 2,
		CreateFileFailed = 3,
		DownloadFailed = 4,
		WriteFailed = 5,
		DeleteOldFailed = 6,
		MoveFailed = 7,
		EFileDownloadError_MAX = 8,
	};

	enum class EDownloadFailedStep : uint8
	{
		DownloadServerListFailed = 0,
		DownloadPakListFailed = 1,
		DownloadPakFileFailed = 2,
		MountPakFileFailed = 3,
		EDownloadFailedStep_MAX = 4,
	};

	enum class ESolarIgnoreCollisionType : uint8
	{
		EnergyShield = 0,
		ESolarIgnoreCollisionType_MAX = 1,
	};

	enum class EPickupItemType : uint8
	{
		None = 0,
		Normal = 1,
		TreasureBox = 2,
		DeathBox = 3,
		HomeItem = 4,
		EPickupItemType_MAX = 5,
	};

	enum class EJetFlyForbiddenType : uint8
	{
		Water = 0,
		Climb = 1,
		EJetFlyForbiddenType_MAX = 2,
	};

	enum class ECountDownState : uint8
	{
		CD_Normal = 0,
		CD_Buff = 1,
		CD_MAX = 2,
	};

	enum class EHitTraceType : uint8
	{
		Default = 0,
		Sniper = 1,
		Melee = 2,
		Vehicle = 3,
		EHitTraceType_MAX = 4,
	};

	enum class EInputButton : uint8
	{
		EInputButton_None = 0,
		EInputButton_Jump = 1,
		EInputButton_RechargeShield = 2,
		EInputButton_BigRechargeShield = 3,
		EInputButton_Crouch = 4,
		EInputButton_JetVertical = 5,
		EInputButton_JetHorizontal = 6,
		EInputButton_Fire = 7,
		EInputButton_LeftFire = 8,
		EInputButton_AltFire = 9,
		EInputButton_QuickAds = 10,
		EInputButton_FreeLook = 11,
		EInputButton_Interact = 12,
		EInputButton_InteractAlternative = 13,
		EInputButton_Reload = 14,
		EInputButton_TogglePrimaryWeapon = 15,
		EInputButton_ToggleSecondaryWeapon = 16,
		EInputButton_ToggleTertiaryWeapon = 17,
		EInputButton_TogglePrimaryWeapon_Checkbox = 18,
		EInputButton_ToggleSecondaryWeapon_Checkbox = 19,
		EInputButton_ToggleTertiaryWeapon_Checkbox = 20,
		EInputButton_ToggleGunsight = 21,
		EInputButton_Gunsight = 22,
		EInputButton_SprintFreeOnPC = 23,
		EInputButton_SprintFreeOnMobile = 24,
		EInputButton_SprintLock = 25,
		EInputButton_Equip1 = 26,
		EInputButton_Equip2 = 27,
		EInputButton_Map = 28,
		EInputButton_Eject = 29,
		EInputButton_OutVehicle = 30,
		EInputButton_Backpack = 31,
		EInputButton_UseMedicine = 32,
		EInputButton_UseRecommendItem = 33,
		EInputButton_Pickup = 34,
		EInputButton_TogglePickup = 35,
		EInputButton_SwitchFireMode = 36,
		EInputButton_SwitchToSeat1 = 37,
		EInputButton_SwitchToSeat2 = 38,
		EInputButton_SwitchToSeat3 = 39,
		EInputButton_SwitchToSeat4 = 40,
		EInputButton_VehicleAbility1 = 41,
		EInputButton_VehicleAbility2 = 42,
		EInputButton_RoleSkillSuper = 43,
		EInputButton_RoleSkillTactical = 44,
		EInputButton_ShieldUpgrade = 45,
		EInputButton_ShieldUpgradeCancel = 46,
		EInputButton_Max = 47,
	};

	enum class EKillParamsCompressInfo : uint16
	{
		Default = 0,
		bKillLeaderChange = 1,
		bKillLeaderShutDown = 2,
		bRevenge = 4,
		bShutDown = 8,
		bDown = 16,
		bClearTeam = 32,
		bKillDefender = 64,
		bKillerDead = 128,
		bHitHead = 256,
		bKillLeaderKill = 512,
		EKillParamsCompressInfo_MAX = 513,
	};

	enum class ESpectateReferToState : uint8
	{
		Invalid = 0,
		Enter = 1,
		Change = 2,
		Exit = 3,
		ESpectateReferToState_MAX = 4,
	};

	enum class EVehicleInterationUIState : uint8
	{
		None = 0,
		Repair = 1,
		Drive = 2,
		Passenger = 4,
		Backpacker = 8,
		EVehicleInterationUIState_MAX = 9,
	};

	enum class ETransformerType : uint8
	{
		Wheeled = 0,
		Legged = 1,
		Max = 2,
	};

	enum class EPlayerNamePanelScale : uint8
	{
		ExtraSmallSize = 0,
		SmallSize = 1,
		DefaultSize = 2,
		LargeSize = 3,
		ExtraLargeSize = 4,
		EPlayerNamePanelScale_MAX = 5,
	};

	enum class EBattleOBHUDType : uint8
	{
		None = 0,
		SpectatePlayer = 1,
		FreeView = 2,
		Director = 3,
		EBattleOBHUDType_MAX = 4,
	};

	enum class EReplayActivityHeatKillUseType : uint8
	{
		None = 0,
		Weapon = 1,
		Vehicle = 2,
		Skill = 3,
		EReplayActivityHeatKillUseType_MAX = 4,
	};

	enum class EPlayerActivityHeatType : uint8
	{
		None = 0,
		Parachute = 1,
		ResurrectionParachute = 2,
		KillDown = 3,
		MultiKill = 4,
		BeKillDown = 5,
		Death = 6,
		Win = 7,
		Max = 8,
	};

	enum class EOBPlayerHeadInfoWidgetStyle : uint8
	{
		NearMode = 0,
		MiddleMode = 1,
		FarMode = 2,
		MAX = 3,
	};

	enum class EUIPanelName : uint8
	{
		None = 0,
		SolarBattleControll = 1,
		WorldMarkPanel = 2,
		WeaponCrosshairPanel = 3,
		SolarBattle_Backpack = 4,
		Separate_Discarded_MultiItem = 5,
		HUD_ElectricShop = 6,
		BigMapUMG = 7,
		HUD_CustomizedNotice = 8,
		UI_Settings = 9,
		UI_OB_Root = 10,
		UI_OB_GlobalControl = 11,
		UI_OB_BigMap = 12,
		UI_OB_Settlement = 13,
		UI_OB_Settlement_InputMask = 14,
		UI_OB_HeadInfo = 15,
		UI_OB_ShortKeyboard = 16,
		UI_OpeningShow = 17,
		UI_Eliminate = 18,
		UI_Skill_Scan = 19,
		UI_HeroPick = 20,
		JobEffectDetailPanel = 21,
		UI_BuffEffectScreenPanel = 22,
		UI_TestCustomPanel = 23,
		Solarland_DevDebugUI_Widget = 24,
		UI_Highlight_Overview = 25,
		EUIPanelName_MAX = 26,
	};

	enum class EWidgetBackKeyType : uint8
	{
		Invalid = 0,
		FromKey = 1,
		FromClose = 2,
		EWidgetBackKeyType_MAX = 3,
	};

	enum class EInputCapture : uint8
	{
		EIC_None = 0,
		EIC_Start = 1,
		EIC_End = 2,
		EIC_Move = 4,
		EIC_Transient = 3,
		EIC_All = 7,
		EIC_MAX = 8,
	};

	enum class EWidgetScope : uint8
	{
		World = 0,
		Global = 1,
		EWidgetScope_MAX = 2,
	};

	enum class EWidgetLayerLevel : uint8
	{
		NormalWidget = 0,
		SameLevelCacheWidget = 1,
		SameLevelReplaceWidget = 2,
		CloseAllBackKeyWidget = 3,
		CloseAllBackKeyAndNormalWidget = 4,
		EWidgetLayerLevel_MAX = 5,
	};

	enum class ESolarSupportLanguages : uint8
	{
		DefaultLanguage = 0,
		SimplifiedChinese = 1,
		TraditionalChinese = 2,
		Arabic = 3,
		German = 4,
		English = 5,
		Spanish = 6,
		French = 7,
		Hindi = 8,
		Indonesian = 9,
		Italian = 10,
		Japanese = 11,
		Korean = 12,
		Malay = 13,
		Polish = 14,
		Portuguese = 15,
		Russian = 16,
		Thai = 17,
		Turkish = 18,
		Vietnamese = 19,
		Tagalog = 20,
		PO = 253,
		OP = 254,
		ESolarSupportLanguages_MAX = 255,
	};

	enum class EImageURLDownloadState : uint8
	{
		NotStarted = 0,
		Processing = 1,
		Success = 2,
		Failed = 3,
		EImageURLDownloadState_MAX = 4,
	};

	enum class ECustomGameModeTypeForUI : uint8
	{
		Type_Default = 0,
		Type_Sabotage = 1,
		Type_MAX = 2,
	};

	enum class EShopWeaponUpgradeState : uint8
	{
		Upgrade_None = 0,
		Upgrade_Enable = 1,
		Upgrade_Max = 2,
		Upgrade_NotEnoughEnergy = 3,
	};

	enum class EActionWheelOperateType : uint8
	{
		NeedClick = 0,
		AutoCommand = 1,
		EActionWheelOperateType_MAX = 2,
	};

	enum class EActionWheelCommandType : uint8
	{
		None = 0,
		UseItem = 1,
		WorldMark = 2,
		UseSticker = 3,
		PlayAnimation = 4,
		Max = 5,
	};

	enum class EActorMaterialChangeRebuildReason : uint8
	{
		OriginalMeshChanged = 0,
		MeshAddedOrRemoved = 1,
		EActorMaterialChangeRebuildReason_MAX = 2,
	};

	enum class EMaterialChangeTextureOverrideMode : uint8
	{
		None = 0,
		OverrideAllTextures = 1,
		OverrideSpecifiedTextures = 2,
		EMaterialChangeTextureOverrideMode_MAX = 3,
	};

	enum class EMaterialParameterTypeFlags : uint8
	{
		None = 0,
		Scaler = 1,
		Vector = 2,
		Texture = 4,
		Font = 8,
		AllWithoutFont = 7,
		All = 15,
		EMaterialParameterTypeFlags_MAX = 16,
	};

	enum class EMaterialParameterType2 : uint8
	{
		Scaler = 0,
		Vector = 1,
		Texture = 2,
		Font = 3,
		EMaterialParameterType2_MAX = 4,
	};

	enum class EMaterialChangeType : uint8
	{
		Normal = 0,
		MultiplePass = 1,
		EMaterialChangeType_MAX = 2,
	};

	enum class EActorParticleEffectAttachOption : uint8
	{
		None = 0,
		AttachToActor = 1,
		AttachToMesh = 2,
		EActorParticleEffectAttachOption_MAX = 3,
	};

	enum class EOperator : uint8
	{
		IDLE = 0,
		ADD = 1,
		MINUS = 2,
		CANCEL = 3,
		EOperator_MAX = 4,
	};

	enum class EBulletTraceTargetType : uint8
	{
		None = 0,
		Character = 1,
		Vehicle = 4,
		SummonItem = 8,
		EBulletTraceTargetType_MAX = 9,
	};

	enum class EBounceType : uint8
	{
		NONE = 0,
		ONCE = 1,
		STICK = 2,
		MAX = 3,
	};

	enum class ETriggerType : uint8
	{
		KEY_DOWN = 0,
		KEY_UP = 1,
		KEY_HOLD = 2,
		MAX = 3,
	};

	enum class EHoldActionType : uint8
	{
		HT_Charge = 0,
		HT_Projectile = 1,
		HT_None = 2,
		HT_MAX = 3,
	};

	enum class EVirtualBulletType : uint8
	{
		LinearBullet = 0,
		CurveBullet = 1,
		GravityBullet = 2,
		TracingBullet = 3,
		EVirtualBulletType_MAX = 4,
	};

	enum class ETrajectoryType : uint8
	{
		LINE = 0,
		LINE_GRAVITY = 1,
		CURVE = 2,
		CANISTER = 3,
		BEAM = 4,
		Rocket = 5,
		VirtualBullet = 6,
		MAX = 7,
	};

	enum class EWeaponSkillChargedState : uint8
	{
		PREPARE = 0,
		START = 1,
		COMPLETECHARGE = 2,
		EXECUTE = 3,
		EWeaponSkillChargedState_MAX = 4,
	};

	enum class EFireMethodType : uint8
	{
		BULLET = 0,
		SKILL = 1,
		SUMMONBULLET = 2,
		MAX = 3,
	};

	enum class ECostFireType : uint8
	{
		DESCRETE = 0,
		CONTINUOUS = 1,
		MAX = 2,
	};

	enum class EShootingSoundOpt : uint8
	{
		EShootingSound_SINGLE_1P = 0,
		EShootingSound_SINGLE_3P = 1,
		EShootingSound_SINGLE_3P_ENEMY = 2,
		EShootingSound_AUTO_1P = 3,
		EShootingSound_AUTO_3P = 4,
		EShootingSound_AUTO_3P_ENEMY = 5,
		EShootingSound_BURST_1P = 6,
		EShootingSound_BURST_3P = 7,
		EShootingSound_BURST_3P_ENEMY = 8,
		EShootingSound_FIRE_LAST_1P = 9,
		EShootingSound_FIRE_LAST_3P = 10,
		EShootingSound_SKILL_CAST_1P = 11,
		EShootingSound_SKILL_CAST_3P = 12,
		EShootingSound_LAND_COMMON_HIT_3P = 13,
		EShootingSound_SKILL_FX_START_1P = 14,
		EShootingSound_SKILL_FX_START_3P = 15,
		EShootingSound_SHIELD_HIT_1P = 16,
		EShootingSound_SHIELD_HIT_3P = 17,
		EShootingSound_SHIELD_BROKEN_1P = 18,
		EShootingSound_SHIELD_BROKEN_3P = 19,
		EShootingSound_BODY_HIT_1P = 20,
		EShootingSound_BODY_HIT_3P = 21,
		EShootingSound_FIRE_OVERLOAD_1P = 22,
		EShootingSound_FIRE_OVERLOAD_3P = 23,
		EShootingSound_Fly_Loop = 24,
		EShootingSound_Fly_Once = 25,
		EShootingSound_Vehicle_Gun_On = 26,
		EShootingSound_Vehicle_Gun_Off = 27,
		EShootingSound_Smoke_Loop = 28,
		EShootingSound_B9A04Skill = 29,
		EShootingSound_Reload_1P_1 = 30,
		EShootingSound_Reload_3P_1 = 31,
		EShootingSound_Reload_1P_2 = 32,
		EShootingSound_Reload_3P_2 = 33,
		EShootingSound_Reload_1P_3 = 34,
		EShootingSound_Reload_3P_3 = 35,
		EShootingSound_Bolt_1P = 36,
		EShootingSound_Bolt_3P = 37,
		EShootingSound_MAX = 38,
	};

	enum class EShootingOpt : uint8
	{
		EShootingOpt_SINGLE = 0,
		EShootingOpt_AUTO = 1,
		EShootingOpt_BURST = 2,
		EShootingOpt_MAX = 3,
	};

	enum class EFootEffectType : uint8
	{
		Effect_None = 0,
		Effect_Water = 1,
		Effect_MAX = 2,
	};

	enum class EAttributeSubBehavior : uint8
	{
		Apply = 0,
		Cancel = 1,
		Update = 2,
		EAttributeSubBehavior_MAX = 3,
	};

	enum class EBackPackTransitionAnimState : uint8
	{
		TransitionAnimStateDefault = 0,
		SkyCharge2NoCharge_NoFly = 535,
		SkyCharge2NoEnergy_NoFly = 545,
		SkyCharge2NoCharge_Fly = 636,
		SkyCharge2NoEnergy_Fly = 646,
		SkyCharge2NoCharge_IntoFly = 536,
		SkyCharge2NoEnergy_IntoFly = 546,
		NoCharge2SkyCharge_NoFly = 3505,
		NoEnergy2SkyCharge_NoFly = 4505,
		NoCharge2SkyCharge_Fly = 3606,
		NoEnergy2SkyCharge_Fly = 4606,
		NoCharge2SkyCharge_OutFly = 3605,
		NoEnergy2SkyCharge_OutFly = 4605,
		PileCharge2NoCharge_NoFly = 1535,
		PileCharge2NoEnergy_NoFly = 1545,
		PileCharge2NoCharge_Fly = 1636,
		PileCharge2NoEnergy_Fly = 1646,
		PileCharge2NoCharge_IntoFly = 1536,
		PileCharge2NoEnergy_IntoFly = 1546,
		NoCharge2PileCharge_NoFly = 3515,
		NoEnergy2PileCharge_NoFly = 4515,
		NoCharge2PileCharge_Fly = 3616,
		NoEnergy2PileCharge_Fly = 4616,
		NoCharge2PileCharge_OutFly = 3615,
		NoEnergy2PileCharge_OutFly = 4615,
		BoxCharge2NoCharge_NoFly = 2535,
		BoxCharge2NoEnergy_NoFly = 2545,
		BoxCharge2NoCharge_Fly = 2636,
		BoxCharge2NoEnergy_Fly = 2646,
		BoxCharge2NoCharge_IntoFly = 2536,
		BoxCharge2NoEnergy_IntoFly = 2546,
		NoCharge2BoxCharge_NoFly = 3525,
		NoEnergy2BoxCharge_NoFly = 4525,
		NoCharge2BoxCharge_Fly = 3626,
		NoEnergy2BoxCharge_Fly = 4626,
		NoCharge2BoxCharge_OutFly = 3625,
		NoEnergy2BoxCharge_OutFly = 4625,
		NoCharge2NoEnergy_NoFly = 3545,
		NoCharge2NoEnergy_IntoFly = 3546,
		NoEnergy2NoCharge_NoFly = 4535,
		NoEnergy2NoCharge_OutFly = 4635,
		EBackPackTransitionAnimState_MAX = 4636,
	};

	enum class EBackPackFixedAnimState : uint8
	{
		FixedAnimStateDefault = 0,
		FixedSkyChargeNoFly = 5,
		FixedPileChargeNoFly = 15,
		FixedBoxChargeNoFly = 25,
		FixedNoChargeNoFly = 35,
		FixedNoEnergyNoFly = 45,
		FixedSkyChargeIsFly = 6,
		FixedPileChargeIsFly = 16,
		FixedBoxChargeIsFly = 26,
		FixedNoChargeIsFly = 36,
		FixedNoEnergyIsFly = 46,
		EBackPackFixedAnimState_MAX = 47,
	};

	enum class EBackPackAnimSubType : uint8
	{
		SkyChargeNoFly = 1,
		PileChargeNoFly = 2,
		BoxChargeNoFly = 3,
		NoChargeNoFly = 4,
		NoEnergyNoFly = 5,
		SkyChargeIsFly = 6,
		PileChargeIsFly = 7,
		BoxChargeIsFly = 8,
		NoChargeIsFly = 9,
		NoEnergyIsFly = 10,
		Charge2NoCharge_NoFly = 50,
		Charge2NoEnergy_NoFly = 51,
		Charge2NoCharge_Fly = 52,
		Charge2NoEnergy_Fly = 53,
		Charge2NoCharge_IntoFly = 54,
		Charge2NoEnergy_IntoFly = 55,
		NoCharge2Charge_NoFly = 56,
		NoEnergy2Charge_NoFly = 57,
		NoCharge2Charge_Fly = 58,
		NoEnergy2Charge_Fly = 59,
		NoCharge2Charge_OutFly = 60,
		NoEnergy2Charge_OutFly = 61,
		NoCharge2NoEnergy_NoFly = 62,
		NoCharge2NoEnergy_IntoFly = 63,
		NoEnergy2NoCharge_NoFly = 64,
		NoEnergy2NoCharge_OutFly = 65,
		ETypeDefault = 0,
		EBackPackAnimSubType_MAX = 66,
	};

	enum class EBackPackAnimType : uint8
	{
		SkyCharge = 0,
		PileCharge = 1,
		BoxCharge = 2,
		NoCharge = 3,
		NoEnergy = 4,
		NoFly = 5,
		IsFly = 6,
		EBackPackAnimType_MAX = 7,
	};

	enum class EBattleRoyalTimeLineEnum : uint8
	{
		None = 0,
		CreateBombingZone = 1,
		CreateAirdrop = 2,
		ModifyEnvironmentState = 3,
		EBattleRoyalTimeLineEnum_MAX = 4,
	};

	enum class EBattleUpgradeEffectCategory : uint8
	{
		None = 0,
		Attack = 1,
		Defence = 2,
		Speed = 3,
		Bag = 4,
		Cooldown = 5,
		PlaceHolder1 = 6,
		PlaceHolder2 = 7,
		PlaceHolder3 = 8,
		PlaceHolder4 = 9,
		EBattleUpgradeEffectCategory_MAX = 10,
	};

	enum class EBombingZoneState : uint8
	{
		Waiting = 0,
		Firing = 1,
		Ending = 2,
		End = 3,
		EBombingZoneState_MAX = 4,
	};

	enum class EBotAttrOperator : uint8
	{
		Equal = 0,
		Greater = 1,
		Less = 2,
		EBotAttrOperator_MAX = 3,
	};

	enum class EBotAttrValueType : uint8
	{
		Current = 0,
		Max = 1,
		Percent = 2,
	};

	enum class EBotAttrType : uint8
	{
		Health = 0,
		Shield = 1,
		Energy = 2,
		Difficulty = 3,
		EBotAttrType_MAX = 4,
	};

	enum class EBotCheckCondition : uint8
	{
		AlwaysPass = 0,
		ReadyFight = 1,
		CanJetVertical = 2,
		CanJetHorizontal = 3,
		ReadyWeaponSkill = 4,
		IsIndependent = 5,
		EBotCheckCondition_MAX = 6,
	};

	enum class EBotCheckAIServer : uint8
	{
		AlwaysPass = 0,
		AIServerIsOnline = 1,
		EBotCheckAIServer_MAX = 2,
	};

	enum class EBotCheckNgaiMLAction : uint8
	{
		AlwaysPass = 0,
		DoOnceFire = 1,
		DoJump = 2,
		DoJetVertical = 3,
		DoJetForward = 4,
		DoUseRoleSkillOne = 5,
		DoUseRoleSkillTwo = 6,
		DoContinueFire = 7,
		DoMoveTo = 8,
		DoUseMedicine = 9,
		DoUseShieldRecharger = 10,
		DoVehicleFire = 11,
		DoUseVehicleFirstSkill = 12,
		DoUseVehicleSecondSkill = 13,
		EBotCheckNgaiMLAction_MAX = 14,
	};

	enum class EBotCheckState : uint8
	{
		Falling = 0,
		Driving = 1,
		Passager = 2,
		Swiming = 3,
		Dying = 4,
		Dead = 5,
		WeaponReloading = 6,
		ShootAiming = 7,
		SiegeVehicleLocated = 8,
		BeingRescued = 9,
		Cruising = 10,
		Skydiving = 11,
		EBotCheckState_MAX = 12,
	};

	enum class EDistanceComparison : uint8
	{
		Equal = 0,
		Greater = 1,
		Less = 2,
		EDistanceComparison_MAX = 3,
	};

	enum class ESameScreenEffectHandleType : uint8
	{
		Ignore = 0,
		StopPrev = 1,
		ESameScreenEffectHandleType_MAX = 2,
	};

	enum class EBuffEffectTagType : uint8
	{
		None = 0,
		TopHalfPart = 1,
		BottomHalfPart = 2,
		TwoSidePart = 3,
		BorderPart = 4,
		FullPart = 5,
		EBuffEffectTagType_MAX = 6,
	};

	enum class EBuffEffectDurationType : uint8
	{
		Instant = 0,
		HasDuration = 1,
		EBuffEffectDurationType_MAX = 2,
	};

	enum class ELevelLoadType : uint8
	{
		ClientAntServer = 0,
		ClientOnly = 1,
		ServerOnly = 2,
		ELevelLoadType_MAX = 3,
	};

	enum class EVaultType : uint8
	{
		None = 0,
		Step = 1,
		Step_Cross = 2,
		Step_Sprint = 3,
		Step_Sprint_Cross = 4,
		Vault = 5,
		Vault_Cross = 6,
		Vault_Sprint = 7,
		Vault_Sprint_Cross = 8,
		Climb = 9,
		Climb_Cross = 10,
		Climb_Sprint = 11,
		Climb_Sprint_Cross = 12,
		Climb_Water = 13,
		HighClimb = 14,
		HighClimb_Cross = 15,
		HighClimb_Sprint = 16,
		HighClimb_Sprint_Cross = 17,
		WallRun = 18,
		WallRunFailed = 19,
		EVaultType_MAX = 20,
	};

	enum class EObstacleDetectorType : uint8
	{
		Knee = 0,
		Waist = 1,
		Chest = 2,
		Overhead = 3,
		Nullifier = 7,
		EObstacleDetectorType_MAX = 8,
	};

	enum class EActorEffectAffectedActorType : uint8
	{
		CharacterOnly = 0,
		All = 1,
		EActorEffectAffectedActorType_MAX = 2,
	};

	enum class ECueContentVisibleTargetFlag : uint8
	{
		None = 0,
		Self = 1,
		Teammate = 2,
		Other = 4,
		Observer = 8,
		Anyone = 15,
		ECueContentVisibleTargetFlag_MAX = 16,
	};

	enum class ECueContentPlayTiming : uint8
	{
		OnExecute = 0,
		OnActive = 1,
		WhileActive = 2,
		OnRemove = 3,
		OnCustomEvent = 4,
		ECueContentPlayTiming_MAX = 5,
	};

	enum class EUseType : uint8
	{
		NORMAL = 0,
		HANDSETTING = 101,
		EUseType_MAX = 102,
	};

	enum class EWeaponEquipSlot : uint8
	{
		None = 0,
		First = 1,
		Second = 2,
		EWeaponEquipSlot_MAX = 3,
	};

	enum class ECrossHairState : uint8
	{
		None = 0,
		Normal = 1,
		Reload = 2,
		Overload = 3,
		Forbid = 4,
		ECrossHairState_MAX = 5,
	};

	enum class ESpreadType : uint8
	{
		Absolute = 0,
		Relative = 1,
		ESpreadType_MAX = 2,
	};

	enum class ECrossHairSpecialFireState : uint8
	{
		PrepareFire = 0,
		ActivateFire = 1,
		KeepFiring = 2,
		EndFire = 3,
		ECrossHairSpecialFireState_MAX = 4,
	};

	enum class ECurvedEffectControllerStopMode : uint8
	{
		KeepCurrentProgress = 0,
		SetProgressToBegin = 1,
		SetProgressToEnd = 2,
		ECurvedEffectControllerStopMode_MAX = 3,
	};

	enum class ECustomNoticeColor : uint8
	{
		None = 0,
		Red = 1,
		Green = 2,
		Blue = 3,
		Yellow = 4,
		ECustomNoticeColor_MAX = 5,
	};

	enum class ECustomNoticeType : uint8
	{
		SmallNotice = 0,
		MediumNotice = 1,
		BigNotice = 2,
		KillEffectNotice = 3,
		GlobalKillNotice = 4,
		LocalKillNotice = 5,
		PickUpNotice = 6,
		WeaponExpNotice = 7,
		EquipReplaceNotice = 8,
		TaskNotice = 9,
		ECustomNoticeType_MAX = 10,
	};

	enum class EUsePlayerType : uint8
	{
		Self = 0,
		Teammate = 1,
		Enemy = 2,
		EUsePlayerType_MAX = 3,
	};

	enum class EUseEmojiScene : uint8
	{
		None = 0,
		Lobby = 1,
		Battle = 2,
		EUseEmojiScene_MAX = 3,
	};

	enum class EAnimationType : uint8
	{
		Overload = 0,
		Overlay = 1,
		EAnimationType_MAX = 2,
	};

	enum class EWeaponInfiniteAmmoMode : uint8
	{
		Default = 0,
		InfiniteClip = 1,
		InfinitePkg = 2,
		InfiniteBoth = 3,
		EWeaponInfiniteAmmoMode_MAX = 4,
	};

	enum class EJetAltitudeLimitationMode : uint8
	{
		Default = 0,
		Home = 1,
		EJetAltitudeLimitationMode_MAX = 2,
	};

	enum class EWeaponVibrateFactor : uint8
	{
		Off = 0,
		Low = 1,
		Middle = 2,
		High = 3,
		EWeaponVibrateFactor_MAX = 4,
	};

	enum class EWeaponVibrateType : uint8
	{
		None = 0,
		Fire = 1,
		Reload_GetOld = 2,
		Reload_Restore = 3,
		Bolt = 4,
		Charge = 5,
		EWeaponVibrateType_MAX = 6,
	};

	enum class EGameplayVibrateIntensity : uint8
	{
		Off = 0,
		Low = 10,
		Middle = 20,
		High = 30,
		EGameplayVibrateIntensity_MAX = 31,
	};

	enum class EGameplayVibrateCategory : uint8
	{
		None = 0,
		SelfBeingHit = 1,
		SelfJetpackFlying = 2,
		SelfContinuousDamaged = 3,
		TriggerCharacterDown = 4,
		TriggerCharacterDie = 5,
		EGameplayVibrateCategory_MAX = 6,
	};

	enum class ESCMDataGatherType_Settle : uint8
	{
		None = 0,
		Self = 1,
		Side = 2,
		All = 3,
		ESCMDataGatherType_MAX = 4,
	};

	enum class ESCMDataReplicateType : uint8
	{
		None = 0,
		RepOwner = 1,
		RepSide = 2,
		RepGlobal = 3,
		ESCMDataReplicateType_MAX = 4,
	};

	enum class ESCMRankCheckType : uint8
	{
		New = 0,
		Change = 1,
		Delete = 2,
		ESCMRankCheckType_MAX = 3,
	};

	enum class ESCMDataSetType : uint8
	{
		None = 0,
		Array = 1,
		Map = 2,
		ESCMDataSetType_MAX = 3,
	};

	enum class ESCMDataType : uint8
	{
		None = 0,
		Byte = 1,
		Int = 2,
		Float = 3,
		Bool = 4,
		FVector = 5,
		FString = 6,
		ESCMDataType_MAX = 7,
	};

	enum class EGaugeType : uint8
	{
		None = 0,
		Degree_360 = 1,
		Degree_180 = 2,
		Degree_90 = 3,
		DownUp = 4,
		LeftRight = 5,
		EGaugeType_MAX = 6,
	};

	enum class EAimOffsetAdjustType : uint8
	{
		None = 0,
		AdjustPitch = 1,
		AdjustYaw = 2,
		AdjustBoth = 3,
		EAimOffsetAdjustType_MAX = 4,
	};

	enum class EAimTraceOriginType : uint8
	{
		Default = 0,
		Muzzle = 1,
		Camera = 2,
		EAimTraceOriginType_MAX = 3,
	};

	enum class EPosture : uint8
	{
		Stand = 0,
		Crouch = 1,
		EPosture_MAX = 2,
	};

	enum class EUIHeroPickListCellState : uint8
	{
		Show = 0,
		Lock = 1,
		Forbidden = 2,
		EUIHeroPickListCellState_MAX = 3,
	};

	enum class EHeroOwnedType : uint8
	{
		Own = 0,
		OwnForNow = 1,
		NotOwn = 2,
		EHeroOwnedType_MAX = 3,
	};

	enum class EHeroPickType : uint8
	{
		AllSidePlayer = 0,
		SpecificPlayer = 1,
		AllPlayer = 2,
		EHeroPickType_MAX = 3,
	};

	enum class EUIHeroPickPlayerState : uint8
	{
		Waiting = 0,
		Selecting = 1,
		Confirm = 2,
		Done = 3,
		EUIHeroPickPlayerState_MAX = 4,
	};

	enum class EHomeJetPackflag : uint8
	{
		NONE = 0,
		Horizontal = 1,
		Vertical = 2,
		Stop = 3,
		EHomeJetPackflag_MAX = 4,
	};

	enum class ESkillStateType : uint8
	{
		Normal = 0,
		CD = 1,
		NoneSkill = 2,
		ESkillStateType_MAX = 3,
	};

	enum class EKeyMappingStatus : uint8
	{
		EMPTY = 0,
		BASE = 1,
		OTHER = 2,
		OTHERANDBASE = 3,
		INVALID = 4,
		DONE = 5,
		EKeyMappingStatus_MAX = 6,
	};

	enum class EKillNoticeType : uint8
	{
		BeKillLeader = 0,
		ShutDownKillLeader = 1,
		Revenge = 2,
		ShutDown = 3,
		CumulativeKill = 4,
		Down = 5,
		ClearTeam = 6,
		KillDefender = 7,
		SelfKillNotify = 8,
		KillLeaderChange = 9,
		KillLeaderShutDown = 10,
		GlobalKillNotify = 11,
		EKillNoticeType_MAX = 12,
	};

	enum class EMapCellSelectionAccess : uint8
	{
		Can = 0,
		Cannot = 1,
		EMapCellSelectionAccess_MAX = 2,
	};

	enum class EMassInvState : uint8
	{
		Begin = 0,
		Prepare = 1,
		Normal = 2,
		Sprint = 3,
		End = 4,
		EMassInvState_MAX = 5,
	};

	enum class EMapState : uint8
	{
		Idle = 0,
		FOVScale = 1,
		EMapState_MAX = 2,
	};

	enum class EMapFOVParamType : uint8
	{
		VehicleSpeed = 0,
		PoisonCircle = 1,
		EMapFOVParamType_MAX = 2,
	};

	enum class EMapFOVState : uint8
	{
		Default = 0,
		Fov1 = 1,
		Fov2 = 2,
		EMapFOVState_MAX = 3,
	};

	enum class EAirdropStatus : uint8
	{
		Default = 0,
		Coming = 1,
		Available = 2,
		Opening = 3,
		Opened = 4,
		EAirdropStatus_MAX = 5,
	};

	enum class EMeshWidgetDisplayType : uint8
	{
		Icon = 0,
		Flash = 1,
		Diffuse = 2,
		EMeshWidgetDisplayType_MAX = 3,
	};

	enum class EMeshProgressType : uint8
	{
		Normal = 0,
		Damage = 1,
		Background = 2,
		EMeshProgressType_MAX = 3,
	};

	enum class E_Type_OB_Scoreboard : uint8
	{
		OB_Settlement = 0,
		OB_InGame = 1,
		Lobby_League_Settlement = 2,
		Lobby_CreateRoom_Settlement = 3,
		E_Type_OB_MAX = 4,
	};

	enum class ERoleWidgetStatus : uint8
	{
		Normal = 0,
		InCD = 1,
		Forbidden = 2,
		SkillContinuous = 3,
		ERoleWidgetStatus_MAX = 4,
	};

	enum class ERoleWidgetType : uint8
	{
		Super = 0,
		Tactical = 1,
		ERoleWidgetType_MAX = 2,
	};

	enum class ESCMMapElementVisibilityType : uint8
	{
		Visible = 0,
		Hidden = 1,
		ESCMMapElementVisibilityType_MAX = 2,
	};

	enum class ESCMMapElementStateType : uint8
	{
		Normal = 0,
		Suspend = 1,
		ESCMMapElementStateType_MAX = 2,
	};

	enum class ESCMMapElementType : uint8
	{
		PlayerStart = 0,
		ItemSpawner = 1,
		AirDrop = 2,
		ChargingPile = 3,
		JumpPad = 4,
		CarPad = 5,
		Vehicle = 6,
		Poison = 7,
		Custom = 8,
		ESCMMapElementType_MAX = 9,
	};

	enum class EMatchType : uint8
	{
		NONE = 0,
		Team = 1,
		AverageSide = 2,
		SingleSide = 3,
		EMatchType_MAX = 4,
	};

	enum class ESCMPlayerType : uint8
	{
		None = 0,
		Player = 1,
		BotAI = 2,
		Monster = 3,
		ESCMPlayerType_MAX = 4,
	};

	enum class ESCMPlayerState : uint8
	{
		None = 0,
		PreLogin = 1,
		NotJoin = 2,
		InBattle = 4,
		Suspend = 8,
		BattleEnd = 16,
		ESCMPlayerState_MAX = 17,
	};

	enum class ESCMPlayerGameRole : uint8
	{
		StandBy = 0,
		OBPlayer = 1,
		Player = 2,
		Spectator = 3,
		ESCMPlayerGameRole_MAX = 4,
	};

	enum class EPlayerResurrectType : uint8
	{
		NONE = 0,
		SelfResurrectionCoin = 1,
		RequestTeamResurrect = 2,
		EPlayerResurrectType_MAX = 3,
	};

	enum class EPlayerPawnType : uint8
	{
		NONE = 0,
		Character = 1,
		Vehicle = 2,
		Other = 3,
		EPlayerPawnType_MAX = 4,
	};

	enum class EDownloadState : uint8
	{
		None = 0,
		Downloading = 1,
		Successful = 2,
		Failed = 3,
		EDownloadState_MAX = 4,
	};

	enum class EShieldUpgradeItemShopOpenState : uint8
	{
		Closed = 0,
		Opening = 1,
		Open = 2,
		Closing = 3,
		EShieldUpgradeItemShopOpenState_MAX = 4,
	};

	enum class ESolarWeaponBrand : uint8
	{
		WeaponBrand_None = 0,
		WeaponBrand_9A = 1,
		WeaponBrand_Wasteland = 2,
		WeaponBrand_Murphy = 3,
		WeaponBrand_Prism = 4,
		WeaponBrand_MAX = 5,
	};

	enum class ERoleAbilityVoiceTriggerTiming : uint8
	{
		None = 0,
		Active = 1,
		Commit = 2,
		ERoleAbilityVoiceTriggerTiming_MAX = 3,
	};

	enum class ESolarAbilityInstanceType : uint8
	{
		ESolarAbilityInstanceType_Multiple = 0,
		ESolarAbilityInstanceType_SingleReplace = 1,
		ESolarAbilityInstanceType_SingleYield = 2,
		ESolarAbilityInstanceType_Max = 3,
	};

	enum class ESolarAttributeDurationType : uint8
	{
		Instant = 0,
		HasDuration = 1,
		Infinite = 2,
		ESolarAttributeDurationType_MAX = 3,
	};

	enum class ESolarAttributeValueSourceType : uint8
	{
		Value = 0,
		FromConfig = 1,
		ESolarAttributeValueSourceType_MAX = 2,
	};

	enum class EAchievementCondition : uint8
	{
		None = 0,
		AchTSubAchievement = 1,
		AchTMinuteKill = 2,
		AchTUseVehicle = 3,
		AchTHPKill = 4,
		AchTLimitWin = 5,
		AchTDyingWin = 6,
		AchTAssistWin = 7,
		AchTRescue = 8,
		AchTLevel = 9,
		AchTSkyKill = 10,
		AchTOnlyLiveWin = 11,
		AchTFirstKill = 12,
		AchTBlindSniper = 13,
		AchTFriendNum = 14,
		AchTOpenBoxNum = 15,
		AchTenemyVehicle = 16,
		AchTDie = 17,
		AchTMarsWin = 18,
		AchTFistKill = 19,
		AchTAirUmbrella = 20,
		AchTAirTrapeze = 21,
		AchTAirSpeed = 22,
		AchTBubbleKill = 23,
		AchTCharacterNum = 24,
		AchAdvancedWeapon = 25,
		AchTBombingDie = 26,
		AchTRevengeKill = 27,
		EAchievementCondition_MAX = 28,
	};

	enum class EAchievementReportType : uint8
	{
		None = 0,
		SingleBattlle = 1,
		MultiBattle = 2,
		NoBattle = 3,
		EAchievementReportType_MAX = 4,
	};

	enum class ESigninItemState : uint8
	{
		Got = 0,
		UnGot = 1,
		No = 2,
		ESigninItemState_MAX = 3,
	};

	enum class EWidgetOverrideParamType : uint8
	{
		None = 0,
		Text = 1,
		Image = 2,
		Custom = 3,
		GameplayTag = 4,
		EWidgetOverrideParamType_MAX = 5,
	};

	enum class EWidgetLoadType : uint8
	{
		Start = 0,
		Delay = 1,
		EWidgetLoadType_MAX = 2,
	};

	enum class EProgressBoardChannelState : uint8
	{
		None = 0,
		Add = 1,
		Minus = 2,
		HoldOn = 3,
		EProgressBoardChannelState_MAX = 4,
	};

	enum class EAirPlaneAnimState : uint8
	{
		Normal = 0,
		TakingOff = 1,
		Cruising = 2,
		EAirPlaneAnimState_MAX = 3,
	};

	enum class ESolarAIValueCompareOp : uint8
	{
		Equal = 0,
		Greater = 1,
		Less = 2,
		ESolarAIValueCompareOp_MAX = 3,
	};

	enum class ESolarAudioDetailCatalog : uint8
	{
		SADC_Common = 0,
		SADC_Music = 1,
		SADC_UI = 2,
		SADC_Gun = 3,
		SADC_Vehicle = 4,
		SADC_Object = 5,
		SADC_Character = 6,
		SADC_Voice = 7,
		SADC_VoiceEx = 8,
		SADC_MAX = 9,
	};

	enum class ESolarAudioDetailUnloadMode : uint8
	{
		SADU_NeverUnload = 0,
		SADU_SwitchLevel = 1,
		SADU_Manual = 2,
		SADU_EnterOtherScene = 3,
		SADU_LeaveLobby = 4,
		SADU_LeaveTutorial = 5,
		SADU_LeaveHome = 6,
		SADU_LeaveWaiting = 7,
		SADU_LeaveGame = 8,
		SADU_DontCare = 9,
		SADU_MAX = 10,
	};

	enum class ESolarAudioDetailLoadMode : uint8
	{
		SADL_BeginPlay = 0,
		SADL_OnDemand = 1,
		SADL_EnterBindScene = 2,
		SADL_EnterLobby = 3,
		SADL_EnterTutorial = 4,
		SADL_EnterHome = 5,
		SADL_EnterWaiting = 6,
		SADL_EnterGame = 7,
		SADL_NeverLoad = 8,
		SADL_MAX = 9,
	};

	enum class EBankLoadState : uint8
	{
		NotLoaded = 0,
		Loaded = 1,
		AsyncLoading = 2,
		AsyncUnloading = 3,
		EBankLoadState_MAX = 4,
	};

	enum class EInVehicleState : uint8
	{
		None = 0,
		Driving = 1,
		Riding = 2,
		StickingOut = 3,
		EInVehicleState_MAX = 4,
	};

	enum class ECruiseAnimState : uint8
	{
		None = 0,
		Looping = 1,
		Leaving = 2,
		End = 3,
		ECruiseAnimState_MAX = 4,
	};

	enum class ECharacterMontage : uint8
	{
		Invalid = 0,
		Bolt = 1,
		Equip = 2,
		PreFire = 3,
		Rechamber = 4,
		Fire1 = 5,
		Reload = 6,
		ReloadWithBolt = 7,
		Max = 8,
	};

	enum class EVehicleAnimationType : uint8
	{
		None = 0,
		Suv = 1,
		Sports = 2,
		MotorBike = 3,
		Hover = 4,
		Legged = 5,
		IronMan = 6,
		Backpacker = 7,
		EVehicleAnimationType_MAX = 8,
	};

	enum class EDriveTurnType : uint8
	{
		EDriveTurnType_Idle = 0,
		EDriveTurnType_Left = 1,
		EDriveTurnType_Right = 2,
		EDriveTurnType_MAX = 3,
	};

	enum class EWeaponStatus : uint8
	{
		NoWeapon = 0,
		Peace = 1,
		Aiming = 2,
		EWeaponStatus_MAX = 3,
	};

	enum class EAnoAntiDataType : uint8
	{
		Unknown = 0,
		SecAntiDataFlow = 1,
		SecAttackFlow = 2,
		EAnoAntiDataType_MAX = 3,
	};

	enum class EItemLoadPriority : uint8
	{
		DEFAULT = 0,
		ITEM_MIN = 1,
		ITEM_MAX = 99,
		WEAPON_MIN = 100,
		WEAPON_MAX = 199,
		VEHICLE_MIN = 200,
		VEHICLE_MAX = 299,
		CHARACTER_MIN = 300,
		CHARACTER_MAX = 399,
		CLASS_PRIORITY = 4294967295,
		EItemLoadPriority_MAX = 4294967296,
	};

	enum class EAutoSaveType : uint8
	{
		Weapon = 0,
		ItemActor = 1,
		EAutoSaveType_MAX = 2,
	};

	enum class ESolarBotMemberState : uint8
	{
		None = 0,
		Leader = 1,
		OnCall = 2,
		Separate = 3,
		Leaving = 4,
		Invalid = 5,
		ESolarBotMemberState_MAX = 6,
	};

	enum class ESolarAITagStateTimeType : uint8
	{
		DurationInCurrentState = 0,
		TimeSinceLastExitToState = 1,
		ESolarAITagStateTimeType_MAX = 2,
	};

	enum class EBotInteractCondition : uint8
	{
		Invalid = 0,
		NeedToResponsePoison = 1,
		FoundEnemyActor = 2,
		TeammateKillEnemy = 3,
		WeAreTheChampion = 4,
		TeammateMarkTargetLocation = 5,
		TeammateMarkTargetDangerPoint = 6,
		TeammateMarkTargetItem = 7,
		TeammateMarkTargetFootstep = 8,
		TeammateMarkFollowHe = 9,
		TeammateMarkGetOnVehicle = 10,
		TeammateMarkNeedVehicle = 11,
		TeammateMarkNeedWeapon = 12,
		TeammateMarkNeedHelp = 13,
		TeammateMarkAttack = 14,
		TeammateMarkDefend = 15,
		MockEnemy = 16,
		MockDyingEnemy = 17,
		EnterDying = 18,
		BoringEnough = 19,
		EBotInteractCondition_MAX = 20,
	};

	enum class EBotFocusType : uint8
	{
		FocusToNothing = 0,
		FocusToActor = 1,
		FocusToPoint = 2,
		FocusToDirection = 3,
		EBotFocusType_MAX = 4,
	};

	enum class EBotAIType : uint8
	{
		BehaviorTree = 0,
		ImitationLearning = 1,
		ReinforcementLearning = 2,
		MAX = 3,
	};

	enum class EPopLocationType : uint8
	{
		Default = 0,
		ShowFight = 1,
		Guarantee = 2,
		EPopLocationType_MAX = 3,
	};

	enum class ESolarBotTimelineTriggerAction : uint8
	{
		None = 0,
		Add = 1,
		Remove = 2,
		Clear = 3,
		ESolarBotTimelineTriggerAction_MAX = 4,
	};

	enum class ESolarBotTimelineFilterParameterType : uint8
	{
		None = 0,
		MoreThan = 1,
		LessThan = 2,
		Equal = 3,
		NotEqual = 4,
		Contain = 5,
		NotContain = 6,
		Radius = 7,
		Target = 8,
		ESolarBotTimelineFilterParameterType_MAX = 9,
	};

	enum class ESolarBotTimelineFilterType : uint8
	{
		None = 0,
		RankPoint = 1,
		Equipment = 2,
		Disengagement = 3,
		KillNum = 4,
		DamageNum = 5,
		ItemNum = 6,
		SkillCoolingDown = 7,
		SurroundingTeammate = 8,
		SurroundingEnemy = 9,
		ESolarBotTimelineFilterType_MAX = 10,
	};

	enum class ESolarBotTimelineAIDataSettingType : uint8
	{
		None = 0,
		Health = 1,
		Shield = 2,
		ESolarBotTimelineAIDataSettingType_MAX = 3,
	};

	enum class ESolarBotTimelineWeaponPartType : uint8
	{
		None = 0,
		Muzzle = 1,
		Grip = 2,
		Clip = 3,
		Scope = 4,
		GunStock = 5,
		ESolarBotTimelineWeaponPartType_MAX = 6,
	};

	enum class ESolarBotTimelineEquipmentSettingType : uint8
	{
		None = 0,
		PrimaryWeapon = 1,
		SecondaryWeapon = 2,
		Shield = 3,
		VerticalJet = 4,
		HorizontalJet = 5,
		SummonGun = 6,
		ESolarBotTimelineEquipmentSettingType_MAX = 7,
	};

	enum class ESolarBotTimelineTriggerType : uint8
	{
		None = 0,
		Timeline = 1,
		Guarantee = 2,
		ESolarBotTimelineTriggerType_MAX = 3,
	};

	enum class EBotOnVehicleFireType : uint8
	{
		EBotOnVehicleFireType_None = 0,
		EBotOnVehicleFireType_FireOn = 1,
		EBotOnVehicleFireType_FireOnDelayOff = 2,
		EBotOnVehicleFireType_MAX = 3,
	};

	enum class EBotOnVehicleStopType : uint8
	{
		EBotOnVehicleStopType_None = 0,
		EBotOnVehicleStopType_Delay = 1,
		EBotOnVehicleStopType_Stop = 2,
		EBotOnVehicleStopType_MAX = 3,
	};

	enum class EBotFirePolicy : uint8
	{
		AlwaysFire = 0,
		FirstRoughMoveDone = 1,
		FirstPreciseMoveDone = 2,
		PreciseMoveOrGreater = 3,
		FollowMoveOrGreater = 4,
		OnlyWhenHitSimulatedTarget = 5,
		OnlyWhenHitLockedTarget = 6,
		EBotFirePolicy_MAX = 7,
	};

	enum class EBotActionState : uint8
	{
		EBotActionState_Sprite = 0,
		EBotActionState_Crouch = 1,
		EBotActionState_GunAim = 2,
		EBotActionState_MAX = 3,
	};

	enum class EBotBunkerType : uint8
	{
		Invalid = 0,
		FullSize = 1,
		HalfSize = 2,
		EBotBunkerType_MAX = 3,
	};

	enum class EBotTeamVehicleDrivePolicy : uint8
	{
		DirectlyMove = 0,
		HoldAndWaitPassenger = 1,
		MoveAndTakePassenger = 2,
		EBotTeamVehicleDrivePolicy_MAX = 3,
	};

	enum class EPoisonResponseType : uint8
	{
		NoResponse = 0,
		LowPriority = 1,
		HighPriority = 2,
		Immediately = 3,
		EPoisonResponseType_MAX = 4,
	};

	enum class ESolarTaskScoringItemType : uint8
	{
		None = 0,
		CurrentHP = 1,
		IfSelfInBattle = 2,
		IfSelfInSafeArea = 3,
		IfSelfInPoisonCircle = 4,
		TimeToEnterSafeArea = 5,
		TimeToEnterPoisonCircleXPoisonDamage = 6,
		IfRelativeActorInSafeArea = 7,
		IfRelativeActorInPoisonCircle = 8,
		IfRescueTargetIsPlayer = 9,
		TimeToMovetoRescueTarget = 10,
		DistanceFromRescueTargetToSafeArea = 11,
		DistanceFromRescueTargetToPoisonCircleXPoisonDamage = 12,
		IfRescuingThisTarget = 13,
		IfRescuingOtherTarget = 14,
		TimePoisonToRescueTarget = 15,
		CurrentPoisonDamage = 16,
		ESolarTaskScoringItemType_MAX = 17,
	};

	enum class ESolarTeamTaskType : uint8
	{
		RescueTeammate = 0,
		ESolarTeamTaskType_MAX = 1,
	};

	enum class EJetTaskFinishMode : uint8
	{
		AfterResponded = 0,
		AfterDone = 1,
		EJetTaskFinishMode_MAX = 2,
	};

	enum class EJetPackMode : uint8
	{
		Horizontal = 0,
		Vertical = 1,
		EJetPackMode_MAX = 2,
	};

	enum class EJumpTaskFinishMode : uint8
	{
		AfterResponded = 0,
		AfterApex = 1,
		AfterDone = 2,
		EJumpTaskFinishMode_MAX = 3,
	};

	enum class EBotShootTargetType : uint8
	{
		Player = 0,
		Bot = 1,
		Vehicle = 2,
		Monster = 3,
		EBotShootTargetType_MAX = 4,
	};

	enum class ECruiseStatePrivate : uint8
	{
		None = 0,
		Start = 1,
		CanParachute = 2,
		ForceParachute = 3,
		End = 4,
		ECruiseStatePrivate_MAX = 5,
	};

	enum class ERoleAbilityCancelPhase : uint8
	{
		None = 0,
		Pressing = 1,
		Continuous = 2,
		All = 3,
		ERoleAbilityCancelPhase_MAX = 4,
	};

	enum class ECharacterRoleAbilityEnum : uint8
	{
		Super = 0,
		Tactical = 1,
		Count = 2,
		CharacterRoleAbilityEnum_MAX = 3,
	};

	enum class EMovementComponentEnableType : uint8
	{
		Default = 0,
		Dying = 1,
		OnLevelStreaming = 2,
		EMovementComponentEnableType_MAX = 3,
	};

	enum class EAntiCheatGameEvents : uint8
	{
		ServerFire = 0,
		ServerHit = 1,
		ServerKill = 2,
		ServerKilled = 3,
		ClientFire = 4,
		ClientHit = 5,
		ClientKill = 6,
		ClientKilled = 7,
		ClientHitDown = 8,
		ClientBeHitDown = 9,
		EventMax = 10,
		EAntiCheatGameEvents_MAX = 11,
	};

	enum class EAnimReloadNotifyType : uint8
	{
		InHand = 0,
		InHandAndDrop = 1,
		GetOld = 2,
		InPocket = 3,
		Restore = 4,
		SpawnFakeOldClip = 5,
		PhysicsDropOldClip = 6,
		SpawnFakeNewClip = 7,
		RestoreClip = 8,
		EAnimReloadNotifyType_MAX = 9,
	};

	enum class EWeaponSystemState : uint8
	{
		None = 0,
		PreReload = 1,
		PreOpenScope = 2,
		PreCloseScope = 3,
		PreFire = 4,
		PreSwitchWeapon = 5,
		PreDropCurrentWeapon = 6,
		PreFireOverload = 7,
		PreNeedBolt = 8,
		PreCharging = 9,
		PreReplaceWeapon = 10,
		PrePickupWeapon = 11,
		PreSwapWeapon = 12,
		Max = 13,
	};

	enum class ECamShakeType : uint8
	{
		Default = 0,
		JumpBegin = 1,
		JumpEndLight = 2,
		JumpEndHeavy = 3,
		FullBodyMeleeWithTarget = 4,
		FullBodyMeleeWithoutTarget = 5,
		TacticalDodgeForward = 6,
		TacticalDodgeBackward = 7,
		TacticalDodgeLeft = 8,
		TacticalDodgeRight = 9,
		ECamShakeType_MAX = 10,
	};

	enum class EGunsightCameraSwitchMode : uint8
	{
		CloseScope = 0,
		CloseShoulderShot = 1,
		OpenShoulderShot = 2,
		OpenScope = 3,
		EGunsightCameraSwitchMode_MAX = 4,
	};

	enum class ESolarCameraSmoothType : uint8
	{
		Default = 0,
		Instant = 1,
		Constant = 2,
		EaseOut = 3,
		EaseInEaseOut = 4,
		FloatCurve = 5,
		ESolarCameraSmoothType_MAX = 6,
	};

	enum class EReconnectionStatus : uint8
	{
		None = 0,
		Reconnecting = 1,
		Reconnected = 2,
		EReconnectionStatus_MAX = 3,
	};

	enum class EAnimDirection : uint8
	{
		AnimNone = 0,
		AnimForward = 1,
		AnimBackward = 2,
		AnimLeft = 3,
		AnimRight = 4,
		EAnimDirection_MAX = 5,
	};

	enum class ESkydiveEffectLifetime : uint8
	{
		DuringFlying = 0,
		DuringLanding = 1,
		DuringWholeSkydiving = 2,
		ESkydiveEffectLifetime_MAX = 3,
	};

	enum class EUpdateWarmServiceEventType : uint8
	{
		None = 0,
		CharacterUpgrade = 1,
		WeaponUpgrade = 2,
		ShieldUpgrade = 3,
		SuperAbilityReady = 4,
		TacticalAbilityReady = 5,
		BattleStation = 6,
		EUpdateWarmServiceEventType_MAX = 7,
	};

	enum class EMassInVisibilityWarningType : uint8
	{
		None = 0,
		Character = 1,
		Vehicle = 2,
		EMassInVisibilityWarningType_MAX = 3,
	};

	enum class EHitRecoverType : uint8
	{
		EHRT_Normal = 0,
		EHRT_DeathVerge = 1,
		EHRT_MAX = 2,
	};

	enum class EBResurrectionState : uint8
	{
		NoneState = 0,
		WaitForApply = 1,
		NotApply = 2,
		Resurrected = 3,
		WaitForResurrect = 4,
		GiveUp = 5,
		Timeout = 6,
		AllTeammatesDied = 7,
		EBResurrectionState_MAX = 8,
	};

	enum class EDroppedItemType : uint8
	{
		Weapons = 0,
		WeaponParts = 1,
		Consumables = 2,
		Equipments = 3,
		EDroppedItemType_MAX = 4,
	};

	enum class EBagScopeSlotType : uint8
	{
		None = 0,
		Primary = 10,
		Second = 11,
		Bag = 12,
		EBagScopeSlotType_MAX = 13,
	};

	enum class EBagGridType : uint8
	{
		None = 0,
		Pick = 1,
		Normal = 2,
		Lock = 3,
		Fix = 4,
		EBagGridType_MAX = 5,
	};

	enum class ETreatmentSoundType : uint8
	{
		Healing = 0,
		Cancel = 1,
		StopHealing = 2,
		Completed = 3,
		ETreatmentSoundType_MAX = 4,
	};

	enum class EShieldAutoRechargeStopReason : uint8
	{
		SwitchShield = 0,
		OnWeaponFire = 1,
		OnHit = 2,
		Die = 3,
		ShieldFull = 4,
		ManualRecharge = 5,
		EShieldAutoRechargeStopReason_MAX = 6,
	};

	enum class ECharacterStateForWeapon : uint8
	{
		Unknown = 0,
		Standing = 1,
		Crouching = 2,
		Running = 3,
		Sprinting = 4,
		Jumping = 5,
		Flying = 6,
		ECharacterStateForWeapon_MAX = 7,
	};

	enum class EPoseMode : uint8
	{
		Stand = 0,
		Crouch = 1,
		Crawl = 2,
		Skydive = 3,
		EPoseMode_MAX = 4,
	};

	enum class EPickUpTargetType : uint8
	{
		Invalid = 0,
		Item = 1,
		Weapon = 2,
		TreasureItem = 3,
		HomeItem = 4,
		BoxHomeItem = 5,
		EPickUpTargetType_MAX = 6,
	};

	enum class ESolarExpBehaviorType : uint8
	{
		SurvivalTime = 1,
		Kills = 2,
		Assists = 3,
		Selfhealing = 4,
		TeammateHealing = 5,
		Unpacking = 6,
		CollectElectricity = 7,
		PickExpPack = 8,
		EveryDamageDealt = 9,
		ESolarExpBehaviorType_MAX = 10,
	};

	enum class EClassLevelUpRewardType : uint8
	{
		BattleUpgradeEffect = 0,
		UpgradeSkill1 = 1,
		UpgradeSkill2 = 2,
		ClassCommonPassiveSkill = 3,
		ClassSpecificPassiveSkill = 4,
		Max = 5,
	};

	enum class EClassType : uint8
	{
		None = 0,
		Assault = 1,
		Defence = 2,
		Support = 3,
		Scout = 4,
		EClassType_MAX = 5,
	};

	enum class ESolarCrosshairType : uint8
	{
		Weapon = 0,
		Feedback = 1,
		BulletContainer = 2,
		ESolarCrosshairType_MAX = 3,
	};

	enum class ESolarDamageTextType : uint8
	{
		DamageTextType_None = 0,
		DamageTextType_Common = 1,
		DamageTextType_Headshot = 2,
		DamageTextType_HitShield = 3,
		DamageTextType_HeadshotWithShield = 4,
		DamageTextType_HitVehicle = 5,
		DamageTextType_HitVehicleWeak = 6,
		DamageTextType_BrokenShiled = 7,
		DamageTextType_BrokenShieldWithHeadShot = 8,
		DamageTextType_MAX = 9,
	};

	enum class EShopStatisticType : uint8
	{
		OnActivated = 0,
		OnUpgradeWeapon = 1,
		OnPurchaseItem = 2,
		OnItemRefresh = 3,
		OnUpgradeShield = 4,
		EShopStatisticType_MAX = 5,
	};

	enum class EShopModelAnimType : uint8
	{
		Idle = 0,
		Upgrade = 1,
		Purchase = 2,
		EShopModelAnimType_MAX = 3,
	};

	enum class EAIVehicleState : uint8
	{
		AIVehicleState_None = 0,
		AIVehicleState_Forward = 1,
		AIVehicleState_ReverseSolveBlock = 2,
		AIVehicleState_SolveBlockFoward = 3,
		AIVehicleState_ReverseToTarget = 4,
		AIVehicleState_MAX = 5,
	};

	enum class EAntiCheatReportType : uint8
	{
		Player = 0,
		Weapon = 1,
		Vehicle = 2,
		EAntiCheatReportType_MAX = 3,
	};

	enum class ENgaiMLType : uint8
	{
		None = 0,
		OnlyImitationLearning = 1,
		OnlyReinforcementLearning = 2,
		Both = 3,
		ENgaiMLType_MAX = 4,
	};

	enum class EActiveEffectDurationChangeProxy : uint8
	{
		MaintainCurrent = 0,
		MaintainRemain = 1,
		ScalingCurrent = 2,
		EActiveEffectDurationChangeProxy_MAX = 3,
	};

	enum class ESolarGAInputID : uint8
	{
		None = 0,
		Jump = 1,
		Crouch = 2,
		Sprint = 3,
		JetVertical = 4,
		JetHorizontal = 5,
		Parachute = 6,
		SkydiveAccelerate = 7,
		Fire = 8,
		OutVehicle = 9,
		SkillTest = 10,
		RoleSkillOne = 11,
		RoleSkillTwo = 12,
		ESolarGAInputID_MAX = 13,
	};

	enum class ELogChannel : uint8
	{
		General = 0,
		Mode = 1,
		Hunt = 2,
		BattleRoyal = 3,
		Weapon = 4,
		Character = 5,
		Vehicle = 6,
		Camera = 7,
		Animation = 8,
		Physics = 9,
		Inventory = 10,
		World = 11,
		ELogChannel_MAX = 12,
	};

	enum class EConfigVersion : uint8
	{
		BeforeCustomVersionWasAdded = 0,
		FixedCanAutoSteering = 1,
		VersionPlusOne = 2,
		LatestVersion = 1,
		EConfigVersion_MAX = 3,
	};

	enum class EBasicSettingBool : uint8
	{
		NotInit = 0,
		Off = 1,
		On = 2,
		EBasicSettingBool_MAX = 3,
	};

	enum class ESolarTouchAccMode : uint8
	{
		Velocity = 0,
		Constant = 1,
		Distance = 2,
		ESolarTouchAccMode_MAX = 3,
	};

	enum class ESolarAudioMode : uint8
	{
		PushToTalk = 0,
		FreeToTalk = 1,
		ESolarAudioMode_MAX = 2,
	};

	enum class ESolarSoundQuality : uint8
	{
		NotInit = 0,
		Low = 1,
		High = 2,
		Ultra = 3,
		ESolarSoundQuality_MAX = 4,
	};

	enum class ESolarWeaponDoScopeMode : uint8
	{
		Click = 0,
		Press = 1,
		Mixed = 2,
		ESolarWeaponDoScopeMode_MAX = 3,
	};

	enum class EWheeledVehicleDriveUserType : uint8
	{
		DirectionalInput = 0,
		SteeringInput = 1,
		JoyStickInput = 2,
		EWheeledVehicleDriveUserType_MAX = 3,
	};

	enum class ESolarDamageTextDisplayModeType : uint8
	{
		DamageTextDisplayMode_Off = 0,
		DamageTextDisplayMode_Stacked = 1,
		DamageTextDisplayMode_Floating = 2,
		DamageTextDisplayMode_Combined = 3,
		DamageTextDisplayMode_MAX = 4,
	};

	enum class ESolarGameUserSettingPart : uint8
	{
		PickupSettings = 0,
		GraphicsSettings = 1,
		WeaponSettings = 2,
		LanguageSettings = 3,
		SoundSettings = 4,
		BasicSettings = 5,
		SensitivitySettings = 6,
		ShakeSettings = 7,
		DriverSettings = 8,
		ChatOperatorSettings = 9,
		SensitivitySettingsKeyboard = 10,
		SensitivitySettingsGamepad = 11,
		KeyboardControlSettings = 12,
		GamepadSettings = 13,
		GamepadAdvancedSettings = 14,
		All = 15,
		ESolarGameUserSettingPart_MAX = 16,
	};

	enum class EGraphicQualitySelect : uint8
	{
		Default = 0,
		Lobby = 1,
		InGame = 2,
		EGraphicQualitySelect_MAX = 3,
	};

	enum class ESolarChatOperatorType : uint8
	{
		All = 0,
		Team = 1,
		Off = 2,
		ESolarChatOperatorType_MAX = 3,
	};

	enum class ESolarShakeMainType : uint8
	{
		OFF = 0,
		LOW = 1,
		MEDIUM = 2,
		HIGH = 3,
		ESolarShakeMainType_MAX = 4,
	};

	enum class ESolarGyroscopeChooseType : uint8
	{
		DefaultGyroscope = 0,
		ALWAYS = 1,
		FOCUS = 2,
		NEVER = 3,
		ESolarGyroscopeChooseType_MAX = 4,
	};

	enum class ESolarSprintModeType : uint8
	{
		Default = 0,
		Pressing = 1,
		Toggle = 2,
		Auto = 3,
		ESolarSprintModeType_MAX = 4,
	};

	enum class ESolarAimModeType : uint8
	{
		Default = 0,
		Change = 1,
		Press = 2,
		ESolarAimModeType_MAX = 3,
	};

	enum class ESolarColorTheme : uint8
	{
		ESCT_Default = 0,
		ESCT_Bright = 1,
		ESCT_Soft = 2,
		ESCT_Cold = 3,
		ESCT_MAX = 4,
	};

	enum class ESolarFrameRateLevel : uint8
	{
		ESFRL_NONE = 0,
		ESFRL_Low = 1,
		ESFRL_Mid = 2,
		ESFRL_High = 3,
		ESFRL_HighEnd = 4,
		ESFRL_EXTREME = 5,
		ESFRL_MAX = 6,
	};

	enum class ESolarContentScaleFactorLevel : uint8
	{
		ESCSFL_NONE = 0,
		ESCSFL_Low = 1,
		ESCSFL_Mid = 2,
		ESCSFL_High = 3,
		ESCSFL_HighEnd = 4,
		ESCSFL_MAX = 5,
	};

	enum class ESolarDeviceType : uint8
	{
		ESDT_Invalid = 0,
		ESDT_Windows = 1,
		ESDT_Android = 2,
		ESDT_IOS = 3,
		ESDT_Other = 4,
		ESDT_MAX = 5,
	};

	enum class ESolarDeviceLevel : uint8
	{
		ESDL_Invalid = 0,
		ESDL_Level1 = 1,
		ESDL_Level2 = 2,
		ESDL_Level3 = 3,
		ESDL_Level4 = 4,
		ESDL_Level5 = 5,
		ESDL_Level6 = 6,
		ESDL_Level7 = 7,
		ESDL_VALUE_MIN = 1,
		ESDL_VALUE_MAX = 7,
		ESDL_MAX = 8,
	};

	enum class ESolarGraphicsQualityLevel : uint8
	{
		ESGQL_Invalid = 0,
		ESGQL_Level1 = 1,
		ESGQL_Level2 = 2,
		ESGQL_Level3 = 3,
		ESGQL_Level4 = 4,
		ESGQL_Level5 = 5,
		ESGQL_Level6 = 6,
		ESGQL_Level7 = 7,
		ESGQL_VALUE_MIN = 1,
		ESGQL_VALUE_MAX = 7,
		ESGQL_MAX = 8,
	};

	enum class EHomeCameraMode : uint8
	{
		Normal = 0,
		Ceiling = 1,
		Panoramic = 2,
		Orthographic = 3,
		EHomeCameraMode_MAX = 4,
	};

	enum class EHomeLoadingChangeType : int32
	{
		NONE = 0,
		OPEN = 1,
		CLOSE = 2,
		EHomeLoadingChangeType_MAX = 3,
	};

	enum class EHomeOperationType : int32
	{
		NONE = 0,
		CREATE = 1,
		UPDATE = 2,
		REMOVE = 3,
		EHomeOperationType_MAX = 4,
	};

	enum class EHomeDragUIType : uint8
	{
		NONE = 0,
		ARROW = 1,
		ROUND = 2,
		EHomeDragUIType_MAX = 3,
	};

	enum class EHomeActorOwner : int32
	{
		NOBODY = 0,
		SELF = 1,
		OTHERS = 2,
		EHomeActorOwner_MAX = 3,
	};

	enum class EHomeActorSurfaceDir : int32
	{
		NONE = 0,
		FORWARD = 1,
		BACKWARD = 2,
		LEFT = 3,
		RIGHT = 4,
		UP = 5,
		DOWN = 6,
		EHomeActorSurfaceDir_MAX = 7,
	};

	enum class EHomeActor_SecondType : int32
	{
		NONE = 0,
		CONSTRUCT_BASE = 1,
		CONSTRUCT_FLOOR = 2,
		CONSTRUCT_WALL = 3,
		DEVICE_ON_FLOOR = 4,
		DEVICE_ON_WALL = 5,
		DEVICE_ON_CEILING = 6,
		EHomeActor_MAX = 7,
	};

	enum class EHomeActor_FirstType : int32
	{
		NONE = 0,
		CONSTRUCT = 1,
		DEVICE = 2,
		EHomeActor_MAX = 3,
	};

	enum class EHoverCraftHitType : uint8
	{
		Default = 0,
		HoverCraftVehicle = 1,
		HoverVehicle = 2,
		LeggedVehicle = 3,
		WheeledVehicle = 4,
		EHoverCraftHitType_MAX = 5,
	};

	enum class EHoverVehicleVFXType : uint8
	{
		Forward = 0,
		Backward = 1,
		Right = 2,
		Left = 3,
		Max = 4,
	};

	enum class EInputKeyMappingType : uint8
	{
		KeyAndMouse1 = 0,
		KeyAndMouse2 = 1,
		Gamepad = 2,
		Count = 3,
		EInputKeyMappingType_MAX = 4,
	};

	enum class EInputActionContextType : uint8
	{
		Pawn = 0,
		Controller = 1,
		LevelScriptActor = 2,
		UserWidget = 3,
		Count = 4,
		EInputActionContextType_MAX = 5,
	};

	enum class EGamepadDPad : uint8
	{
		None = 0,
		Reset = 1,
		Up = 2,
		Down = 3,
		Right = 4,
		Left = 5,
		EGamepadDPad_MAX = 6,
	};

	enum class EInputActionFlags : uint8
	{
		None = 0,
		FlagBigMap = 1,
		FlagBackpack = 2,
		FlagChatWheel = 3,
		FlagParachute = 4,
		FlagSpectate = 5,
		FlagTeamDeath = 6,
		FlagBlockAll = 31,
		FlagMax = 32,
		EInputActionFlags_MAX = 33,
	};

	enum class ESolarInteractionType : uint8
	{
		Invalid = 0,
		RescueTeammate = 1,
		ReviveTeammate = 2,
		OpenAirdrop = 3,
		ESolarInteractionType_MAX = 4,
	};

	enum class ESolarItemShowType : uint8
	{
		NOTSHOW = 0,
		SHOW = 1,
		ESolarItemShowType_MAX = 2,
	};

	enum class ESolarRedHintType : uint8
	{
		ZERO = 0,
		SHOW = 1,
		HIDE = 2,
		ESolarRedHintType_MAX = 3,
	};

	enum class ESolarItemOwnType : uint8
	{
		ZERO = 0,
		NOOWN = 1,
		OWN = 2,
		ESolarItemOwnType_MAX = 3,
	};

	enum class ESolarItemBuyType : uint8
	{
		ZERO = 0,
		NOBUY = 1,
		BUY = 2,
		CANTBUY = 3,
		ESolarItemBuyType_MAX = 4,
	};

	enum class ESolarItemUseType : uint8
	{
		ZERO = 0,
		NOUSE = 1,
		USING = 2,
		ESolarItemUseType_MAX = 3,
	};

	enum class ESolarItemLimitType : uint8
	{
		ZERO = 0,
		NOLIMIT = 1,
		LIMITING = 2,
		ESolarItemLimitType_MAX = 3,
	};

	enum class ESolarItemMarkType : uint8
	{
		ZERO = 0,
		NOMARK = 1,
		MARKED = 2,
		ESolarItemMarkType_MAX = 3,
	};

	enum class ESolarItemDownloadType : uint8
	{
		ZERO = 0,
		NOTDOWNLOAD = 1,
		DOWNLOADING = 2,
		DOWNLOADED = 3,
		PAUSING = 4,
		ESolarItemDownloadType_MAX = 5,
	};

	enum class ESolarItemLockType : uint8
	{
		ZERO = 0,
		NOLOCK = 1,
		LOCKED = 2,
		TEMPUNLOCK = 3,
		ESolarItemLockType_MAX = 4,
	};

	enum class ESolarItemSelectType : uint8
	{
		ZERO = 0,
		NOTSELECT = 1,
		SELECTED = 2,
		ESolarItemSelectType_MAX = 3,
	};

	enum class ESolarItemQualityType : uint8
	{
		ZERO = 0,
		N = 1,
		R = 2,
		SR = 3,
		SSR = 4,
		SSRPLUS = 5,
		ESolarItemQualityType_MAX = 6,
	};

	enum class ESpecialItemID : uint8
	{
		NONE = 0,
		CARIRIDGE_BAG = 1040101,
		REVIVE_ITEM = 1160501,
		RADAR_SCANNER = 1080101,
		SHIELD_RECHARGER = 1120100,
		SHIELD_BIG_RECHARGER = 1120101,
		AMMO_ASSAULT_RIFLE = 1030101,
		AMMO_RIFLE = 1030102,
		AMMO_SNIPER = 1030103,
		AMMO_SHOTGUN = 1030104,
		SHIELD_UPGRADE_MATERIAL = 148023,
		EXP_ITEM = 149022,
		ESpecialItemID_MAX = 1160502,
	};

	enum class EItemConfirmID : uint8
	{
		DropExtraEnergyConfirmID = 110003,
		ReplaceExtraEnergyConfirmID = 110004,
		DropEnergyModuleConfirmID = 110007,
		ReplaceEnergyModuleConfirmID = 110008,
		EItemConfirmID_MAX = 110009,
	};

	enum class EItemLocalTextID : uint8
	{
		LevelNumTextID = 40,
		EItemLocalTextID_MAX = 41,
	};

	enum class EItemNoticeID : uint8
	{
		BoxBeUsing = 900016,
		CantEquipThisScope = 900080,
		CantEquipThisPart = 900081,
		WillEquipLowLevelScope = 900082,
		WillEquipLowLevelPart = 900083,
		HasBetterPart = 900084,
		HasBetterScope = 900085,
		GetItem = 900003,
		GetHomeItem = 900005,
		EquipReplace = 900091,
		DropItemNotAutoPickup = 900094,
		ItemMaxPile = 900095,
		ReviveItemMaxPile = 900104,
		CantPickupReviveItem = 900105,
		EItemNoticeID_MAX = 900106,
	};

	enum class ESpawnStage : uint8
	{
		STAGE_NONE = 0,
		STAGE_READY = 1,
		STAGE_BATTLE = 2,
		STAGE_ALL = 3,
		STAGE_MAX = 4,
	};

	enum class EOutcomeType : uint8
	{
		None = 0,
		Single = 1,
		Pool = 2,
		DynamicPool = 3,
		EOutcomeType_MAX = 4,
	};

	enum class EItemSourceType : uint8
	{
		None = 0,
		DeathTreasureBox = 1,
		TreasureBox = 2,
		AirDropTreasureBox = 3,
		Max = 4,
	};

	enum class EItemDiscardState : uint8
	{
		EItemDiscardState_DEFAULT = 0,
		EItemDiscardState_DEATHBOX = 1,
		EItemDiscardState_MAX = 2,
	};

	enum class EItemState : uint8
	{
		EItemState_NONE = 0,
		EItemState_POSSESS = 1,
		EItemState_DISCARD = 2,
		EItemState_MAX = 3,
	};

	enum class EItemQualityType : uint8
	{
		None = 0,
		White = 1,
		Green = 2,
		Blue = 3,
		Purple = 4,
		Orange = 5,
		Red = 6,
		EItemQualityType_MAX = 7,
	};

	enum class ESpawnerLevel : uint8
	{
		LEVEL_0 = 0,
		LEVEL_1 = 1,
		LEVEL_2 = 2,
		LEVEL_3 = 3,
		LEVEL_MAX = 4,
	};

	enum class ESpawnerType : uint8
	{
		NONE = 0,
		NORMAL = 1,
		TREASUREBOX = 2,
		AIRDROP = 3,
		VEHICLE = 4,
		ESpawnerType_MAX = 5,
	};

	enum class EWalkingDirection : uint8
	{
		None = 0,
		Forward = 1,
		Backward = 2,
		Left = 4,
		Right = 8,
		EWalkingDirection_MAX = 9,
	};

	enum class EVehicleShrinkCapsuleExtent : uint8
	{
		SHRINK_None = 0,
		SHRINK_RadiusCustom = 1,
		SHRINK_HeightCustom = 2,
		SHRINK_AllCustom = 3,
		SHRINK_MAX = 4,
	};

	enum class EVehicleLocomotionState : uint8
	{
		Walk = 0,
		Run = 1,
		Sprint = 2,
		Max = 3,
	};

	enum class ESolarBuildConfiguration : uint8
	{
		Unknown = 0,
		Debug = 1,
		Development = 2,
		Shipping = 3,
		Test = 4,
		ESolarBuildConfiguration_MAX = 5,
	};

	enum class EElementVisibilityType : uint8
	{
		Visible = 0,
		Hidden = 1,
		EElementVisibilityType_MAX = 2,
	};

	enum class EElementStateType : uint8
	{
		Normal = 0,
		Suspend = 1,
		EElementStateType_MAX = 2,
	};

	enum class ESolarMapElementPropertyType : uint8
	{
		String = 0,
		Float = 1,
		Int = 2,
		Bool = 3,
		ESolarMapElementPropertyType_MAX = 4,
	};

	enum class ESGameMode_ElementType : uint8
	{
		PlayerStart = 0,
		ItemSpawner = 1,
		AirDrop = 2,
		ChargingPile = 3,
		JumpPad = 4,
		CarPad = 5,
		Vehicle = 6,
		Poison = 7,
		Custom = 8,
		ESGameMode_MAX = 9,
	};

	enum class EMapDarkDataType : uint8
	{
		POISONCIRCLE = 0,
		EMapDarkDataType_MAX = 1,
	};

	enum class EMapAirlineType : uint8
	{
		Default = 0,
		Capsule = 1,
		Airdrop = 2,
		EMapAirlineType_MAX = 3,
	};

	enum class EDirection : uint8
	{
		TOP = 0,
		BOTTOM = 1,
		LEFT = 2,
		RIGHT = 3,
		EDirection_MAX = 4,
	};

	enum class EBattlePromptType : uint8
	{
		None = 0,
		Player = 1,
		Vehicle = 4,
		Move = 8,
		Fire = 16,
		HeavyWeapon = 32,
		Crouch = 64,
		Skydive = 128,
		PlayerStep = 9,
		VehicleMove = 12,
		PlayerCrouchMove = 73,
		PlayerSkydive = 137,
		PlayerFire = 17,
		VehicleFire = 20,
		PlayerHeavyFire = 49,
		VehicleHeavyFire = 52,
		EBattlePromptType_MAX = 138,
	};

	enum class EMarkerType : uint8
	{
		NONE = 0,
		ENEMYSTEP = 101,
		ENEMYFIGHT = 102,
		AIRDROPBOX = 103,
		REDZONE = 104,
		VEHICLEVOICE = 105,
		VEHICLEMARK = 106,
		ENEMYLAUNCH = 107,
		VEHICLELAUNCH = 108,
		SKILLBUFFMARK = 109,
		RADARCharacter = 110,
		RADARCharacterWithAngle = 111,
		RADARVehicle = 112,
		RADARTreasureBox = 113,
		RADARChargingPile = 114,
		RADAR = 115,
		ELECTRICSHOP = 116,
		PARACHUTE = 117,
		RESPAWN = 118,
		SHIELDUPGRADEITEMSHOP = 119,
		ReviveTeammate = 120,
		EMarkerType_MAX = 121,
	};

	enum class EMovablePadLimitationFlag : uint8
	{
		None = 0,
		NoPress = 1,
		NoRelease = 2,
		NoMove = 4,
		NoPressAndRelease = 3,
		NoPressAndMove = 5,
		NoReleaseAndMove = 6,
		EMovablePadLimitationFlag_MAX = 7,
	};

	enum class ENavLinkType : uint8
	{
		Jet = 0,
		Vault = 1,
		None = 2,
		ENavLinkType_MAX = 3,
	};

	enum class EOwnerType : uint8
	{
		None = 0,
		Vehicle = 1,
		TreasureBox = 2,
		EOwnerType_MAX = 3,
	};

	enum class ERestState : uint8
	{
		AT_REST = 0,
		JUST_STARTED_MOVING = 1,
		MOVING = 2,
		ERestState_MAX = 3,
	};

	enum class EExtrapolationMode : uint8
	{
		UNLIMITED = 0,
		LIMITED = 1,
		NONE = 2,
		EExtrapolationMode_MAX = 3,
	};

	enum class ESyncMode : uint8
	{
		NONE = 0,
		X = 1,
		Y = 2,
		Z = 4,
		XY = 3,
		XZ = 5,
		YZ = 6,
		XYZ = 7,
		ESyncMode_MAX = 8,
	};

	enum class ENightComesState : uint8
	{
		None = 0,
		Begin = 1,
		Ongoing = 2,
		End = 3,
		ENightComesState_MAX = 4,
	};

	enum class EPerceivableEffectAreaTendency : uint8
	{
		Hostile = 0,
		Neutral = 1,
		Friendly = 2,
		EPerceivableEffectAreaTendency_MAX = 3,
	};

	enum class EPerceivableEffectAreaType : uint8
	{
		Unknow = 0,
		SmokeGrenade = 1,
		NightCome = 2,
		AutomaticTurret = 3,
		BlackHole = 4,
		Incendiary = 5,
		EnergyBubble = 6,
		SummonWall = 7,
		UAVShield = 8,
		UAVRescue = 9,
		HealPile = 10,
		EPerceivableEffectAreaType_MAX = 11,
	};

	enum class EPickupListItemType : uint8
	{
		None = 0,
		Single = 1,
		Merge = 2,
		Customize = 3,
		EPickupListItemType_MAX = 4,
	};

	enum class ESolarPileType : uint8
	{
		ChargingPile = 0,
		HealPile = 1,
		ESolarPileType_MAX = 2,
	};

	enum class EChargingChannel : uint8
	{
		MAIN = 0,
		EXTRA = 1,
		EChargingChannel_MAX = 2,
	};

	enum class EPileHealingType : uint8
	{
		None = 0,
		Health = 1,
		Armor = 2,
		EPileHealingType_MAX = 3,
	};

	enum class ELevelTickType : uint8
	{
		LEVELTICK_TimeOnly = 0,
		LEVELTICK_ViewportsOnly = 1,
		LEVELTICK_All = 2,
		LEVELTICK_PauseTick = 3,
		LEVELTICK_MAX = 4,
	};

	enum class EInteractiveFlag : uint8
	{
		None = 0,
		DanceLearder = 1,
		EInteractiveFlag_MAX = 2,
	};

	enum class ESolarPlayerSensitivitysType : uint8
	{
		None = 0,
		HoldWeaponSensitivity = 1,
		WeaponShootSensitivity = 2,
		WeaponShoulderNoShotSensitivity = 3,
		WeaponShoulderShotSensitivity = 4,
		WeaponSkillSensitivity = 5,
		SightSensitivity = 6,
		ScopeSensitivity = 7,
		ScopeShootSensitivity = 8,
		VehicleDriverSensitivity = 9,
		VehicleFireSensitivity = 10,
		SuperSkillSensitivity = 11,
		TacticalSkillSensitivity = 12,
		ESolarPlayerSensitivitysType_MAX = 13,
	};

	enum class EWeaponRVCmd : uint8
	{
		Cmd_None = 0,
		LocalHold = 1,
		OtherHold = 2,
		Dropped = 4,
		ReplacePart = 8,
		SkinRefresh = 16,
		EWeaponRVCmd_MAX = 17,
	};

	enum class EPreservedBotType : uint8
	{
		OnCall = 0,
		WaitingForSend = 1,
		Killer = 2,
		WaitingToDie = 3,
		EPreservedBotType_MAX = 4,
	};

	enum class ESolarProjBulletCollisionType : uint8
	{
		Shape = 0,
		Box = 1,
		ESolarProjBulletCollisionType_MAX = 2,
	};

	enum class ERadarType : uint8
	{
		ERT_WholeMap = 0,
		ERT_FollowSpawner = 1,
		ERT_FixedRound = 2,
		ERT_UAV = 3,
		ERT_OneTimeScan = 4,
		ERT_MAX = 5,
	};

	enum class ERedHintPath : uint8
	{
		None = 0,
		Root = 1,
		Social = 2,
		Arsenal = 3,
		Arsenal_Weapon = 4,
		Arsenal_Skin = 5,
		Arsenal_Part = 6,
		Shop = 7,
		Mail = 8,
		Capsulers = 9,
		Capsulers_Detail = 10,
		Capsulers_Story = 11,
		Capsulers_Skin = 12,
		Capsulers_LevelUp = 13,
		Capsulers_Pose = 14,
		Capsulers_PoseTab = 15,
		Capsulers_BG = 16,
		Capsulers_BGTab = 17,
		WareHouse = 18,
		Task = 19,
		Activity = 20,
		RankFight = 21,
		Achievement = 22,
		EditBusinessCard = 23,
		PlayerInfo = 24,
		GameMode = 25,
		Raffle = 26,
		Vehicle = 27,
		Vehicle_Skin = 28,
		Clan = 29,
		ClanPermission = 30,
		Collection = 31,
		Tournament = 32,
		VipCard = 33,
		ClanMember = 34,
		Max = 35,
	};

	enum class ERedHintValueType : uint8
	{
		Single = 0,
		MultiValue = 1,
		ERedHintValueType_MAX = 2,
	};

	enum class ECharacterSkydivingState : uint8
	{
		EveryBattle = 0,
		Flying = 1,
		Skydiving = 2,
		Landing = 3,
		Num = 4,
		ECharacterSkydivingState_MAX = 5,
	};

	enum class EReplayDamageSourceType : uint8
	{
		None = 0,
		Weapon = 1,
		Vehicle = 2,
		Skill = 3,
		EReplayDamageSourceType_MAX = 4,
	};

	enum class ENarrateActivityType : uint8
	{
		None = 0,
		OnEngage = 1,
		OnScramble = 2,
		WeaponKnockdown = 3,
		VehicleKnockdown = 4,
		AbilityKnockdown = 5,
		OnKilled = 6,
		OnPickUpItem = 7,
		OnDriveVehicle = 8,
		OnGameStart = 9,
		OnChangeScene = 10,
		OnTeamEliminate = 11,
		OnReaperKilled = 12,
		OnVictory = 13,
		OnMultiKill = 14,
		OnChatInformative = 15,
		OnGameEnd = 16,
		OnInterrupt = 17,
		OnCheatKickOut = 18,
		ENarrateActivityType_MAX = 19,
	};

	enum class EAutoDirectorActivityType : uint8
	{
		None = 0,
		PlayerWeaponHit = 1,
		PlayerWeaponDown = 2,
		PlayerWeaponKill = 3,
		PickupItem = 4,
		DriveVehicle = 5,
		VehicleWeaponHit = 6,
		VehicleWeaponDown = 7,
		VehicleWeaponKill = 8,
		BandagePlayer = 9,
		RevivePlayer = 10,
		UseTacticalAbility = 11,
		UseUltimateAbility = 12,
		AbilityDown = 13,
		AbilityKill = 14,
		EAutoDirectorActivityType_MAX = 15,
	};

	enum class EAutoDirectorCameraMode : uint8
	{
		Free = 0,
		Follow = 1,
		EAutoDirectorCameraMode_MAX = 2,
	};

	enum class EReplayFindSpectateTargetApproach : uint8
	{
		None = 0,
		SuggestTarget = 1,
		LastTarget = 2,
		ClosestToCamera = 3,
		FirstInPlayerList = 4,
		EReplayFindSpectateTargetApproach_MAX = 5,
	};

	enum class EPlayerHighlightMarkType : uint8
	{
		B = 0,
		A = 1,
		S = 2,
		Ex = 3,
		Max = 4,
	};

	enum class EClassRepNodeMapping : uint8
	{
		Missing = 0,
		NotRouted = 1,
		CustomRelevancy = 2,
		RelevantAllConnections = 3,
		Spatialize_Static = 4,
		Spatialize_Dynamic = 5,
		Spatialize_Dormancy = 6,
		EClassRepNodeMapping_MAX = 7,
	};

	enum class EIncreaseAndDecreaseTransitionMode : uint8
	{
		Continuously = 0,
		BreakAndKeepLast = 1,
		EIncreaseAndDecreaseTransitionMode_MAX = 2,
	};

	enum class EActorInSafeAreaStatus : uint8
	{
		InSafeArea = 0,
		InPoisonArea = 1,
		OutPoisonArea = 2,
		EActorInSafeAreaStatus_MAX = 3,
	};

	enum class ESafeAreaStatus : uint8
	{
		WaittingForStart = 0,
		WaittingForShrink = 1,
		Shrink = 2,
		ShrinkEnd = 3,
		Pause = 4,
		End = 5,
		ESafeAreaStatus_MAX = 6,
	};

	enum class ENeverShowDuration : int32
	{
		Day = 0,
		Week = 1,
		Month = 2,
		Year = 3,
		Never = 4,
		None = 5,
		ENeverShowDuration_MAX = 6,
	};

	enum class EShieldUpgradeItemShopState : uint8
	{
		None = 0,
		Upgrading = 1,
		Done = 2,
		EShieldUpgradeItemShopState_MAX = 3,
	};

	enum class EParticleOptimization : uint8
	{
		Origin = 0,
		LowPriorityOptimization = 1,
		MidPriorityOptimization = 2,
		HighPriorityOptimization = 3,
		UltraHighPriorityOptimization = 4,
		EParticleOptimization_MAX = 5,
	};

	enum class ESolarEMPParticleType : uint8
	{
		FadeIn = 0,
		FadeOut = 1,
		Loop = 2,
		ESolarEMPParticleType_MAX = 3,
	};

	enum class ESolarEMPForceFieldState : uint8
	{
		None = 0,
		Ready = 1,
		Active = 2,
		End = 3,
		ESolarEMPForceFieldState_MAX = 4,
	};

	enum class ESolarSurroundLightningApplyType : uint8
	{
		SurroundLightningApplyType_Character = 0,
		SurroundLightningApplyType_Vehicle = 1,
		SurroundLightningApplyType_Other = 2,
		SurroundLightningApplyType_MAX = 3,
	};

	enum class ESpectatorMode : uint8
	{
		DeathWatch = 0,
		Replay = 1,
		ESpectatorMode_MAX = 2,
	};

	enum class ETabControlListStyle : uint8
	{
		None = 0,
		Text = 1,
		Icon = 2,
		ETabControlListStyle_MAX = 3,
	};

	enum class ETabControlListSlotType : uint8
	{
		Leaf = 0,
		Compound = 1,
		ETabControlListSlotType_MAX = 2,
	};

	enum class ESolarTablesEnum_CalculatingSign : uint8
	{
		Plus = 0,
		Multiplication = 1,
		Equal = 2,
		_Count = 3,
		ESolarTablesEnum_MAX = 4,
	};

	enum class ESolarTablesEnum_PartsType : uint8
	{
		Muzzle = 0,
		Scope = 1,
		Clip = 2,
		Runes = 3,
		Grip = 4,
		GunStock = 5,
		Scope2x = 6,
		Scope4x = 7,
		Scope8x = 8,
		_Count = 9,
		ESolarTablesEnum_MAX = 10,
	};

	enum class ESolarTablesEnum_AccessoryType : uint8
	{
		WeaponParts = 0,
		WeaponAmmo = 1,
		_Count = 2,
		ESolarTablesEnum_MAX = 3,
	};

	enum class ESolarTablesEnum_FireCostType : uint8
	{
		Descrete = 0,
		Continuous = 1,
		_Count = 2,
		ESolarTablesEnum_MAX = 3,
	};

	enum class ESolarTablesEnum_TriggerType : uint8
	{
		KeyDown = 0,
		KeyUp = 1,
		KeyHold = 2,
		_Count = 3,
		ESolarTablesEnum_MAX = 4,
	};

	enum class ESolarTablesEnum_TrajectoryType : uint8
	{
		Line = 0,
		LineGravity = 1,
		Curve = 2,
		Canister = 3,
		Beam = 4,
		Rocket = 5,
		VirtualBullet = 6,
		_Count = 7,
		ESolarTablesEnum_MAX = 8,
	};

	enum class ESolarTablesEnum_FireMethodType : uint8
	{
		Bullet = 0,
		Skill = 1,
		SummonBullet = 2,
		_Count = 3,
		ESolarTablesEnum_MAX = 4,
	};

	enum class ESolarTablesEnum_WeaponType : uint8
	{
		AssualtRifle = 0,
		Submachinegun = 1,
		Shotgun = 2,
		Sniper = 3,
		Vehicle = 4,
		ItemWeapon = 5,
		SummonWeapon = 6,
		AntiVehicle = 7,
		_Count = 8,
		ESolarTablesEnum_MAX = 9,
	};

	enum class ESolarTablesEnum_TrigerType : uint8
	{
		GameTime = 0,
		AliveCount = 1,
		RealTime = 2,
		MatchRoundTime = 3,
		GameWorldTime = 4,
		_Count = 5,
		ESolarTablesEnum_MAX = 6,
	};

	enum class ESolarTablesEnum_CategoryType : uint8
	{
		CategoryType_None = 0,
		CategoryType_Reco = 1,
		CategoryType_Character = 2,
		CategoryType_CharacterSkin = 3,
		CategoryType_WeaponSkin = 4,
		CategoryType_Capsule = 5,
		CategoryType_Bag = 6,
		CategoryType_Tail = 7,
		CategoryType_Home = 8,
		CategoryType_Others = 9,
		_Count = 10,
		ESolarTablesEnum_MAX = 11,
	};

	enum class ESolarTablesEnum_ShareType : uint8
	{
		ActionType_None = 0,
		ShareType_RankShare = 1,
		ShareType_BattlePassShare = 2,
		ShareType_AchieveItemShare = 3,
		ShareType_ScoreShare = 4,
		ShareType_LoginActivityShare = 5,
		ShareType_MedalShare = 6,
		ShareType_UserGrowthShare = 7,
		ShareType_FollowCommunity = 8,
		ShareType_PersonalHistory = 9,
		_Count = 10,
		ESolarTablesEnum_MAX = 11,
	};

	enum class ESolarTablesEnum_LobbyMatchEnterType : uint8
	{
		CanClick = 0,
		PartialClick = 1,
		ForbidClick = 2,
		_Count = 3,
		ESolarTablesEnum_MAX = 4,
	};

	enum class ESolarTablesEnum_StackType : uint8
	{
		StackByQTY = 0,
		StackByTime = 1,
		_Count = 2,
		ESolarTablesEnum_MAX = 3,
	};

	enum class ESolarTablesEnum_InputTriggerType : uint8
	{
		InputTriggerPressed = 0,
		InputTriggerTap = 1,
		InputTriggerDoubleTap = 2,
		InputTriggerHold = 3,
		_Count = 4,
		ESolarTablesEnum_MAX = 5,
	};

	enum class ESolarTablesEnum_InputRelatedType : uint8
	{
		InputRelatedNone = 0,
		Input_F = 1,
		InputRelated2 = 2,
		InputRelated3 = 3,
		InputRelated4 = 4,
		InputRelated5 = 5,
		InputRelated6 = 6,
		InputRelated7 = 7,
		InputRelated8 = 8,
		InputRelated9 = 9,
		InputRelated10 = 10,
		Input_J = 11,
		_Count = 12,
		ESolarTablesEnum_MAX = 13,
	};

	enum class ESolarTablesEnum_InputContextType : uint8
	{
		InputCommon = 0,
		InputPlayer = 1,
		InputVehicle = 2,
		InputOB = 3,
		InputPlayerSkill = 4,
		InputActionWheel = 5,
		_Count = 6,
		ESolarTablesEnum_MAX = 7,
	};

	enum class ESolarTablesEnum_InputTabType : uint8
	{
		InputTabPlayer = 0,
		InputTabVehicle = 1,
		InputTabOB = 2,
		InputTabMisc = 3,
		_Count = 4,
		ESolarTablesEnum_MAX = 5,
	};

	enum class ESolarTablesEnum_InputCtrlType : uint8
	{
		InputCtrlHide = 0,
		InputCtrlShow = 1,
		InputCtrlCustom = 2,
		_Count = 3,
		ESolarTablesEnum_MAX = 4,
	};

	enum class ESolarTablesEnum_InputActionType : uint8
	{
		Action = 0,
		Axis = 1,
		_Count = 2,
		ESolarTablesEnum_MAX = 3,
	};

	enum class ESolarTablesEnum_InputGroupType : uint8
	{
		InputNone = 0,
		InputKeyF = 1,
		InputKeyG = 2,
		InputKeyP = 3,
		_Count = 4,
		ESolarTablesEnum_MAX = 5,
	};

	enum class ESolarTablesEnum_GamepadCtrlType : uint8
	{
		GamepadCtrlHide = 0,
		GamepadCtrlShowOnly = 1,
		GamepadCtrlCustom = 2,
		GamepadCtrlCustomAndCom = 3,
		_Count = 4,
		ESolarTablesEnum_MAX = 5,
	};

	enum class ESolarTablesEnum_InputGamepadType : uint8
	{
		InputGamepadOneKey = 0,
		InputGamepadComKey = 1,
		InputGamepadFreeComKey = 2,
		_Count = 3,
		ESolarTablesEnum_MAX = 4,
	};

	enum class ESolarTablesEnum_ClassModeType : uint8
	{
		CLASS_MODE_NONE = 0,
		CLASS_MODE_V13_3 = 1,
		CLASS_MODE_UniqueSkill = 2,
		CLASS_MODE_RoleGrow = 3,
		_Count = 4,
		ESolarTablesEnum_MAX = 5,
	};

	enum class ESolarTablesEnum_ExcuterType : uint8
	{
		AirDrop = 0,
		GasCircle = 1,
		Bomb = 2,
		_Count = 3,
		ESolarTablesEnum_MAX = 4,
	};

	enum class ESolarTablesEnum_DisplayType : uint8
	{
		None = 0,
		Tips = 1,
		Window = 2,
		_Count = 3,
		ESolarTablesEnum_MAX = 4,
	};

	enum class ESolarTablesEnum_ChestType : uint8
	{
		AirDrop = 0,
		ElecChest = 1,
		_Count = 2,
		ESolarTablesEnum_MAX = 3,
	};

	enum class ESolarTablesEnum_Duration : uint8
	{
		Day = 0,
		Week = 1,
		Month = 2,
		Year = 3,
		Never = 4,
		None = 5,
		_Count = 6,
		ESolarTablesEnum_MAX = 7,
	};

	enum class ESolarTablesEnum_CharacterLevelUpType : uint8
	{
		Health = 0,
		Damage = 1,
		Movement = 2,
		FlyCooldown = 3,
		_Count = 4,
		ESolarTablesEnum_MAX = 5,
	};

	enum class ESolarTablesEnum_CharacterType : uint8
	{
		None = 0,
		Assault = 1,
		Defence = 2,
		Support = 3,
		Scout = 4,
		_Count = 5,
		ESolarTablesEnum_MAX = 6,
	};

	enum class ESolarTablesEnum_BehaviorType : uint8
	{
		SurvivalTime = 0,
		Kills = 1,
		Assists = 2,
		Selfhealing = 3,
		TeammateHealing = 4,
		Unpacking = 5,
		CollectElectricity = 6,
		PickExpPack = 7,
		EveryDamageDealt = 8,
		NpcKills = 9,
		NpcAssists = 10,
		_Count = 11,
		ESolarTablesEnum_MAX = 12,
	};

	enum class ESolarTablesEnum_Enum_Behavior : uint8
	{
		Behavior1 = 0,
		Behavior2 = 1,
		Behavior3 = 2,
		Behavior4 = 3,
		Behavior5 = 4,
		Behavior6 = 5,
		Behavior7 = 6,
		Behavior8 = 7,
		Behavior9 = 8,
		Behavior10 = 9,
		Behavior11 = 10,
		_Count = 11,
		ESolarTablesEnum_Enum_MAX = 12,
	};

	enum class ESolarTablesEnum_ActionType : uint8
	{
		ActionType_None = 0,
		ActionType_OpenGift = 1,
		ActionType_Charge = 2,
		ActionType_Battle = 3,
		ActionType_Mail = 4,
		ActionType_ShopBuy = 5,
		ActionType_DailyTask = 6,
		ActionType_Activity = 7,
		ActionType_Guid = 8,
		ActionType_GM = 9,
		ActionType_BattleBag = 10,
		ActionType_ItemUse = 11,
		ActionType_Refund = 12,
		ActionType_BattleDouble = 13,
		ActionType_UnitProf = 14,
		ActionType_SanctuaryBuild = 15,
		ActionType_SanctuaryFacility = 16,
		ActionType_Weapon_Upgrade = 17,
		ActionType_Activereward = 18,
		ActionType_ComposeItem = 19,
		ActionType_LoginReward = 20,
		ActionType_NewUserLogin = 21,
		ActionType_HomeDailyTask = 22,
		ActionType_BattlePass = 23,
		ActionType_LevelReward = 24,
		ActionType_HomeUpgrade = 25,
		ActionType_BattlePassRepeat = 26,
		ActionType_TopUP = 27,
		ActionType_Achievement = 28,
		ActionType_LuckDraw = 29,
		ActionType_BattlePassShare = 30,
		ActionType_CDKey = 31,
		ActionType_HalfMonthLogin = 32,
		ActionType_MonthlyEvent = 33,
		ActionType_FriendEvent = 34,
		ActionType_WeekChanllenge = 35,
		ActionType_RoomCard = 36,
		ActionType_BindAccount = 37,
		ActionType_UserGrowthEvent = 38,
		ActionType_SendGift = 39,
		ActionType_SellItem = 40,
		ActionType_CollectRedeem = 41,
		ActionType_RandomPack = 42,
		ActionType_Clan = 43,
		ActionType_Bet = 44,
		ActionType_BetBonus = 45,
		ActionType_BetReturn = 46,
		ActionType_CarouselDraw = 47,
		ActionType_WeekFree = 48,
		ActionType_TutorialLevelReward = 49,
		ActionType_TournamentMiss = 50,
		ActionType_TournamentReward = 51,
		ActionType_RankingCard = 52,
		ActionType_BattleSupplyBox = 53,
		ActionType_BattlePassMission = 54,
		ActionType_SupplyBox = 55,
		ActionType_VipcardReceive = 56,
		ActionType_VipcardSign = 57,
		ActionType_Vipcard = 58,
		ActionType_Signcard = 59,
		ActionType_ChangeName = 60,
		_Count = 61,
		ESolarTablesEnum_MAX = 62,
	};

	enum class ETaskPage : uint8
	{
		TPNone = 0,
		TPDaily = 1,
		TPGrow = 2,
		TPHomeDaily = 3,
		TPSeason = 4,
		TPPassDaily = 5,
		TPPassWelfare = 6,
		TPPassWeek = 7,
		TPMonthlyDaily = 8,
		TPMonthlyWeek = 9,
		TPHalMonth = 10,
		TPWeekChallenge = 11,
		TPShareCodeDaily = 12,
		TPShareCodePersonal = 13,
		TPShareCodeFriend = 14,
		TPCollectRedeem = 15,
		ETaskPage_MAX = 16,
	};

	enum class ETaskStatus : uint8
	{
		Runing = 0,
		Completed = 1,
		ReceiveAward = 2,
		ETaskStatus_MAX = 3,
	};

	enum class EBurstMethod : uint8
	{
		ParabCurveFitting = 0,
		GoldenSpiral = 1,
		EBurstMethod_MAX = 2,
	};

	enum class ECostType : uint8
	{
		NONE = 0,
		ELECTRONIC = 1,
		ECostType_MAX = 2,
	};

	enum class ETreasureBoxSpawnType : uint8
	{
		SingleRandom = 0,
		Group = 1,
		ETreasureBoxSpawnType_MAX = 2,
	};

	enum class ETutorialUIType : uint8
	{
		None = 0,
		Common = 1,
		Special = 2,
		ETutorialUIType_MAX = 3,
	};

	enum class ELevelRewardStatus : uint8
	{
		NotClaimed = 0,
		Claimed = 1,
		Disable = 2,
		ELevelRewardStatus_MAX = 3,
	};

	enum class EWidgetPlayAnimationFlag : uint8
	{
		None = 0,
		Finish = 1,
		EWidgetPlayAnimationFlag_MAX = 2,
	};

	enum class EWidgetInteractionFlag : uint8
	{
		None = 0,
		Pressed = 1,
		Released = 2,
		Clicked = 3,
		EWidgetInteractionFlag_MAX = 4,
	};

	enum class ETutorialStage : uint8
	{
		None = 0,
		Lobby = 1,
		BattleField = 2,
		Home = 3,
		TutorialLevel = 4,
		ETutorialStage_MAX = 5,
	};

	enum class ETutorialUIParent : uint8
	{
		Parent = 0,
		UnderBattleRoot = 1,
		BattleRoot = 2,
		BattleRootGuide = 3,
		MiddleRoot = 4,
		CommonRoot = 5,
		Map = 6,
		BattleNoticeRoot = 7,
		Guide = 8,
		PopRoot = 9,
		TipsRoot = 10,
		NoticeRoot = 11,
		Loading = 12,
		Reconnecting = 13,
		ExternalToolsRoot = 255,
		ETutorialUIParent_MAX = 256,
	};

	enum class ETutorialConditionType : uint8
	{
		None = 0,
		Trigger = 1,
		Interrupt = 2,
		Finish = 3,
		ForeverClose = 4,
		ETutorialConditionType_MAX = 5,
	};

	enum class ETutorialType : uint8
	{
		TEvent = 0,
		TTick = 1,
		ETutorialType_MAX = 2,
	};

	enum class ETutorialTriggerType : uint8
	{
		TickActivateTutorials = 0,
		AlreadyTriggeredMaxCount = 1,
		HasSpecifiedItem = 2,
		HasTakenDamage = 3,
		PlayerAcountLevel = 4,
		SprintingContinuously = 5,
		JumpBegin = 8,
		ShieldNotFull = 17,
		WidgetClicked = 19,
		CanUseSpecifiedVehicleAbility = 20,
		CanUseSpecifiedVehicleWeapon = 21,
		AirDropBoxLanded = 22,
		NearAirDropBox = 23,
		OpenBigMapUMG = 24,
		CanUseSpecifiedWeaponAbility = 25,
		CanOpenTreasureBox = 29,
		PlayerInTargetStage = 30,
		EquipSpecifiedWeapon = 34,
		FeatureUnlock = 35,
		ApproachTreasureBox = 36,
		BotAIDying = 38,
		RunningStep = 39,
		HasSpecifiedEquipmentByType = 40,
		TutorialLevelDone = 42,
		WeaponSlotHasSpecifiedItem = 45,
		HasUIPanelOpened = 48,
		SpecifiedPlayerProficiency = 53,
		PlayerUpgradeBattleLevel = 54,
		ETutorialTriggerType_MAX = 55,
	};

	enum class EPlayerProficiency : uint8
	{
		None = 0,
		Rookie = 1,
		FPS = 2,
		Veteran = 3,
		EPlayerProficiency_MAX = 4,
	};

	enum class EUAVRescueState : uint8
	{
		None = 0,
		Idle = 1,
		Heal = 2,
		Navigate = 3,
		Rescue = 4,
		EUAVRescueState_MAX = 5,
	};

	enum class EWidgetPassiveMode : uint8
	{
		Normal = 0,
		Passive_Buff = 1,
		Passive_Debuff = 2,
		EWidgetPassiveMode_MAX = 3,
	};

	enum class EVehicleRotateAnimationType : uint8
	{
		None = 0,
		Right_90 = 1,
		Right_180 = 2,
		Left_90 = 3,
		Left_180 = 4,
		Right = 5,
		Left = 6,
		EVehicleRotateAnimationType_MAX = 7,
	};

	enum class EVehicleAnimationState : uint8
	{
		None = 0,
		Jump = 1,
		Dash = 2,
		EVehicleAnimationState_MAX = 3,
	};

	enum class EVehicleSpawnSourceType : uint8
	{
		CommonSpawn = 0,
		VehicleSummonWeapon = 1,
		EVehicleSpawnSourceType_MAX = 2,
	};

	enum class EEnterWaterVFX : uint8
	{
		HorizontalLightEffect = 0,
		HorizontalHeavyEffect = 1,
		VerticalLightEffect = 2,
		VerticalHeavyEffect = 3,
		MAX = 4,
	};

	enum class EVehicleControlUIType : uint8
	{
		Vehicle = 0,
		Character = 1,
		EVehicleControlUIType_MAX = 2,
	};

	enum class EIronManHandPart : uint8
	{
		LeftHand = 0,
		RightHand = 1,
		EIronManHandPart_MAX = 2,
	};

	enum class EIronManSoundEvent : uint8
	{
		LaserHit = 0,
		EIronManSoundEvent_MAX = 1,
	};

	enum class EPlayerInputMask : uint8
	{
		Invalidated = 0,
		VehicleBraking = 1,
		VehicleTrumpet = 2,
		VehicleAutoMove = 4,
		All = 7,
		EPlayerInputMask_MAX = 8,
	};

	enum class EAssistLockState : uint8
	{
		None = 0,
		PreEnterAssistLock = 1,
		EnterAssistLock = 2,
		HoldAssistLock = 3,
		LeaveAssistLock = 4,
		EAssistLockState_MAX = 5,
	};

	enum class EVehicleRotateCondition : uint8
	{
		None = 0,
		Forward = 1,
		Backward = 2,
		Right = 4,
		Left = 8,
		All = 15,
		EVehicleRotateCondition_MAX = 16,
	};

	enum class EVehicleOpenTips : uint8
	{
		FloorCanNotOpen = 0,
		SpeedCanNotOpen = 1,
		EVehicleOpenTips_MAX = 2,
	};

	enum class ESiegeVehicleAnimation : uint8
	{
		CloseIdle = 0,
		OpenIdle = 1,
		Fire = 2,
		ESiegeVehicleAnimation_MAX = 3,
	};

	enum class EVehicleDamageStatus : uint8
	{
		Normal = 0,
		Damaged = 1,
		SeriouslyDamaged = 2,
		BrokenDanger = 3,
		Broken = 4,
		MAX = 5,
	};

	enum class ERocketFireMode : uint8
	{
		NomalFire = 0,
		PrecisionFire = 1,
		Max = 2,
	};

	enum class EVehiclePageType : uint8
	{
		Lobby = 0,
		VehicleBag = 1,
		BattlePass = 2,
		LuckDraw = 3,
		GetReward = 4,
		GrowTask = 5,
		Shop = 6,
		CarouselDraw = 7,
		SupplyBoxDetail = 8,
		SupplyBoxRaffle = 9,
		Max = 10,
	};

	enum class EVehicleSpawnType : uint8
	{
		SingleRandom = 0,
		Group = 1,
		EVehicleSpawnType_MAX = 2,
	};

	enum class EVehicleState : uint8
	{
		None = 0,
		Ground = 1,
		Air = 2,
		Sliding = 3,
		EVehicleState_MAX = 4,
	};

	enum class ESolarWeaponSpreadState : uint8
	{
		Standby = 0,
		Approach = 1,
		Recover = 2,
		ESolarWeaponSpreadState_MAX = 3,
	};

	enum class ESolarBlackHoleParticle : uint8
	{
		ForceField = 0,
		CoreFadeIn = 1,
		CoreFadeOut = 2,
		CoreLoop = 3,
		CoreHit = 4,
		Explode = 5,
		CharacterDebuff = 6,
		ESolarBlackHoleParticle_MAX = 7,
	};

	enum class ESolarBlackHoleState : uint8
	{
		None = 0,
		Startup = 1,
		Ready = 2,
		Active = 3,
		End = 4,
		ESolarBlackHoleState_MAX = 5,
	};

	enum class EWeaponOverloadState : uint8
	{
		NormalDecrease = 0,
		FireSuspend = 1,
		ForceOverload = 2,
		EWeaponOverloadState_MAX = 3,
	};

	enum class EWeaponFireModeType : uint8
	{
		EWeaponFireModeType_UnArm = -1,
		EWeaponFireModeType_Primary = 0,
		EWeaponFireModeType_Secondary = 1,
		EWeaponFireModeType_Tertiary = 2,
		EWeaponFireModeType_MAX = 3,
	};

	enum class EWeaponScopeType : uint8
	{
		None = 0,
		ScopeX0 = 1,
		ScopeX1 = 2,
		ScopeX2 = 3,
		ScopeX3 = 4,
		ScopeX4 = 5,
		ScopeX6 = 6,
		ScopeX8 = 7,
		Count = 8,
		EWeaponScopeType_MAX = 9,
	};

	enum class EGearState : uint8
	{
		Reverse = 0,
		Neutral = 1,
		Forward = 2,
		EGearState_MAX = 3,
	};

	enum class EInputEventHandleType : uint8
	{
		Unhandle = 0,
		SimulateKey = 1,
		BroadcastEvent = 2,
		SimulateTouch = 4,
		NoKeyOnly = 6,
		NoEventOnly = 5,
		NoTouchOnly = 3,
		HandleAll = 7,
		EInputEventHandleType_MAX = 8,
	};

	enum class ETouchMovePriority : uint8
	{
		Highest = 0,
		Higher = 1,
		Normal = 2,
		Lower = 3,
		Lowest = 4,
		ETouchMovePriority_MAX = 5,
	};

	enum class EZiplineSide : uint8
	{
		None = 0,
		Cable = 1,
		A = 2,
		B = 3,
		EZiplineSide_MAX = 4,
	};

	enum class EZiplineType : uint8
	{
		Horizontal = 0,
		Vertical = 1,
		EZiplineType_MAX = 2,
	};

	enum class ESolarImageProgressHalfCirclePrivotType : uint8
	{
		MidLeft = 0,
		MidRight = 1,
		MidBottom = 2,
		MidTop = 4,
		ESolarImageProgressHalfCirclePrivotType_MAX = 5,
	};

	enum class ESolarImageProgressQuaterCirclePrivotType : uint8
	{
		LeftBottom = 0,
		RightBottom = 1,
		LeftTop = 16,
		RightTop = 17,
		ESolarImageProgressQuaterCirclePrivotType_MAX = 18,
	};

	enum class ESolarImageProgressLineDirType : uint8
	{
		Horizantal = 0,
		Vertical = 1,
		ESolarImageProgressLineDirType_MAX = 2,
	};

	enum class ESolarImageProgressType : uint8
	{
		None = 0,
		Line = 1,
		QuarterCircle = 2,
		HalfCircle = 3,
		Circle = 4,
		ESolarImageProgressType_MAX = 5,
	};

	enum class ESolarImageFillType : uint8
	{
		Normal = 0,
		Mirror = 1,
		Quarter = 2,
		ESolarImageFillType_MAX = 3,
	};

	enum class ESolarSummonDeathReason : uint8
	{
		SelfTimeDecay = 0,
		SelfLifeDecay = 1,
		OtherDestroy = 2,
		ESolarSummonDeathReason_MAX = 3,
	};

	enum class ESolarSummonSoundType : uint8
	{
		SummonSoundType_1P = 0,
		SummonSoundType_3P = 1,
		SummonSoundType_3P_Enemy = 2,
		SummonSoundType_MAX = 3,
	};

	enum class ESplineMeshType : uint8
	{
		DEFAULT = 0,
		START = 1,
		END = 2,
		ESplineMeshType_MAX = 3,
	};

	enum class ETweenInterpolationType : uint8
	{
		Easing = 0,
		Curve = 1,
		ETweenInterpolationType_MAX = 2,
	};

	enum class EDefenderTeamType : uint8
	{
		MyTeam = 0,
		DefenderTeam = 1,
		EDefenderTeamType_MAX = 2,
	};

	enum class EPlayerWidgetState : uint8
	{
		NORMAL = 0,
		DRIVER = 1,
		PASSGNER = 2,
		EQUIPVEHICLEWEAPON = 3,
		CRUISING = 4,
		PATACHUTING = 5,
		SWIMMING = 6,
		MAX = 7,
	};

	enum class EUIRoot : uint8
	{
		None = 0,
		UnderBattleRoot = 1,
		BattleRoot = 2,
		BattleRootGuide = 3,
		MiddleRoot = 4,
		CommonRoot = 5,
		Map = 6,
		BattleNoticeRoot = 7,
		Guide = 8,
		PopRoot = 9,
		TipsRoot = 10,
		NoticeRoot = 11,
		Loading = 12,
		Reconnecting = 13,
		ExternalToolsRoot = 255,
		EUIRoot_MAX = 256,
	};

	enum class ELocalNoticeType : uint8
	{
		Revenge = 0,
		KillDown = 1,
		ClearTeam = 2,
		ShutDown = 3,
		KillDefender = 4,
		ELocalNoticeType_MAX = 5,
	};

	enum class EUIWeaponPartState : uint8
	{
		NotEquip = 0,
		Equipped = 1,
		CantEquip = 2,
		EUIWeaponPartState_MAX = 3,
	};

	enum class EWidgetVisibilityFlags : uint8
	{
		None = 0,
		ChatSwitch = 1,
		ChatMsgSending = 2,
		ConnectionState = 3,
		TalentState = 4,
		TalentValidation = 5,
		EWidgetVisibilityFlags_MAX = 6,
	};

	enum class EStealthParamType : uint8
	{
		None = 0,
		Type_1P = 1,
		Type_3P = 2,
		Type_3P_Enemy = 3,
		EStealthParamType_MAX = 4,
	};

	enum class EWholeShieldState : uint8
	{
		Begin = 0,
		InProgress = 1,
		End = 2,
		EWholeShieldState_MAX = 3,
	};

	enum class EWeaponAnimState : uint8
	{
		Idle = 0,
		Fire = 1,
		AltFire = 2,
		Reload = 3,
		Overload = 4,
		OpenScope = 5,
		CloseScope = 6,
		Bolt = 7,
		Preview = 8,
		Summon = 9,
		EWeaponAnimState_MAX = 10,
	};

	enum class ESolarWeaponLODState : uint8
	{
		Hold = 0,
		OpenScope = 1,
		Discard = 2,
		ESolarWeaponLODState_MAX = 3,
	};

	enum class EWeaponSkinType : uint8
	{
		Material = 0,
		Mesh = 1,
		EWeaponSkinType_MAX = 2,
	};

	enum class EWeaponMechanicalSideFlag : uint32
	{
		None = 0,
		OnGround = 2,
		Unequip = 4,
		OpenScope = 8,
		ForceFiring = 16,
		ChargedFire = 32,
		NeedBolt = 64,
		GatlingRolling = 128,
		DetectedWall = 256,
		NeedRechamber = 512,
		NoAmmoReserved = 1024,
		EWeaponMechanicalSideFlag_MAX = 1025,
	};

	enum class EWeaponMechanicalUniqueState : uint8
	{
		None = 0,
		Idle = 1,
		PreFire = 2,
		RealFire = 3,
		Rechamber = 4,
		Reloading = 5,
		Bolting = 6,
		Charging = 7,
		Overloading = 8,
		KeyUPHolding = 9,
		EWeaponMechanicalUniqueState_MAX = 10,
	};

	enum class EWeaponUpgradeType : uint8
	{
		EWeaponUpgradeType_Part = 0,
		EWeaponUpgradeType_SecondaryAmmo = 1,
		EWeaponUpgradeType_MAX = 2,
	};

	enum class EWeaponNetToClientProto : uint8
	{
		CSkin_RefreshSkin = 0,
		CUpgrade_UpLevel = 1,
		CUpgrade_ExpRefresh = 2,
		CUpgrade_ReplaceUpgradeRoute = 3,
		CParts_ReplacePart = 4,
		CParts_ReplaceAmmo = 5,
		CParts_InitFinish = 6,
		CAnimation_RefreshState = 7,
		EWeaponNetToClientProto_MAX = 8,
	};

	enum class EWeaponNetToServerProto : uint8
	{
		SUpgrade_AddExp = 0,
		SParts_Hold = 1,
		SAnimation_RefreshState = 2,
		EWeaponNetToServerProto_MAX = 3,
	};

	enum class EWeaponPartVisibilityChangeFlag : uint8
	{
		Default = 0,
		BySignificance = 1,
		EWeaponPartVisibilityChangeFlag_MAX = 2,
	};

	enum class EFixedValueMode : uint8
	{
		Raw = 0,
		Increment = 1,
		EFixedValueMode_MAX = 2,
	};

	enum class EWeaponSkewAdjustmentType : uint8
	{
		Pitch = 0,
		Yaw = 1,
		Roll = 2,
		XOffset = 3,
		YOffset = 4,
		ZOffset = 5,
		EWeaponSkewAdjustmentType_MAX = 6,
	};

	enum class EWeaponSkewInputType : uint8
	{
		PitchSpeed = 0,
		YawSpeed = 1,
		HorizontalSpeed = 2,
		VerticalSpeed = 3,
		EWeaponSkewInputType_MAX = 4,
	};

	enum class ESprayingRecoveryMode : uint8
	{
		SyncWithRecoil = 0,
		RecoverByCurve = 1,
		ESprayingRecoveryMode_MAX = 2,
	};

	enum class EWeaponAttributeParamType : uint8
	{
		ParamA = 0,
		ParamB = 1,
		ParamC = 2,
		ParamD = 3,
		EWeaponAttributeParamType_MAX = 4,
	};

	enum class ESpreadScaleDecreaseMode : uint8
	{
		DecreaseByFixedSpeed = 0,
		DecreaseByFixedTime = 1,
		ESpreadScaleDecreaseMode_MAX = 2,
	};

	enum class ESolarWeaponFireInputButtonState : uint8
	{
		FireWaiting = 0,
		FirePressed = 1,
		CancelWaiting = 2,
		CancelPressed = 3,
		Invalid = 4,
		ESolarWeaponFireInputButtonState_MAX = 5,
	};

	enum class EWSCurWeaponUpdateType : uint8
	{
		Switch = 0,
		PartUpdate = 1,
		EWSCurWeaponUpdateType_MAX = 2,
	};

	enum class ECheckFireResultType : uint8
	{
		None = 0,
		Fire = 1,
		Reload = 2,
		OpenScope = 3,
		CloseScope = 4,
		Charge = 5,
		EndCharge = 6,
		ECheckFireResultType_MAX = 7,
	};

	enum class EOperateScopeStateReason : uint8
	{
		None = 0,
		OpenScopeButton = 1,
		OpenQuickAds = 2,
		Open = 3,
		CloseReload = 16,
		CloseBolt = 32,
		Close = 48,
		AllFlag = 51,
		EOperateScopeStateReason_MAX = 52,
	};

	enum class EBehaviorExpID : uint8
	{
		Default = 0,
		KillPlayer = 2,
		AssistPlayer = 3,
		DamageExp = 9,
		KillNpc = 11,
		AssistNpc = 12,
		EBehaviorExpID_MAX = 13,
	};

	enum class EClientRecieveProto : uint8
	{
		PickUpWeapon = 0,
		DropWeapon = 1,
		SwitchWeaponFinish = 2,
		ReplaceWeapon = 3,
		WeaponDataUpdate = 4,
		AddExpMsg = 5,
		ClearWeapons = 6,
		ReloadCompleted = 7,
		EClientRecieveProto_MAX = 8,
	};

	enum class EServerRecieveProto : uint8
	{
		SwitchWeapon = 0,
		Reload = 1,
		ShowOrHideCurrent = 2,
		GameStaticsWeaponSkill = 3,
		DropItemWeapon = 4,
		ReplaceUpgradeRoute = 5,
		SwapWeapon = 6,
		EServerRecieveProto_MAX = 7,
	};

	enum class EAIPlayerServerRecieveProto : uint8
	{
		PickUpWeapon = 0,
		EAIPlayerServerRecieveProto_MAX = 1,
	};

	enum class EAIPlayerClientRecieveProto : uint8
	{
		PickUpWeapon = 0,
		SwitchWeapon = 1,
		EAIPlayerClientRecieveProto_MAX = 2,
	};

	enum class EVehicleWeaponServerRecieveProto : uint8
	{
		Reload = 0,
		StartReload = 1,
		EVehicleWeaponServerRecieveProto_MAX = 2,
	};

	enum class EWeaponSystemVehicleState : uint8
	{
		PreCharging = 0,
		PreFire = 1,
		PreReload = 2,
		PreOpenScope = 3,
		PreCloseScope = 4,
		PreFireOverload = 5,
		EWeaponSystemVehicleState_MAX = 6,
	};

	enum class EWeaponSystemVehicleProto : uint8
	{
		EWeaponSystemVehicleProto_Equip = 0,
		EWeaponSystemVehicleProto_UnEquip = 1,
		EWeaponSystemVehicleProto_StartReload = 2,
		EWeaponSystemVehicleProto_MAX = 3,
	};

	enum class EMarkButtonState : uint8
	{
		Normal = 0,
		Pressed = 1,
		Selecting = 2,
		Canceled = 3,
		Respond = 4,
		EMarkButtonState_MAX = 5,
	};


	//---------------------------------------------------------------------------------------------------------------------
	// STRUCTS
	//---------------------------------------------------------------------------------------------------------------------

	// 0x58 (0x58 - 0x0)
	// ScriptStruct Solarland.GameStartConditionList
	struct FGameStartConditionList
	{
	public:
		uint8                                        Pad_316A[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		struct FGameplayTagContainer                 ServerStartConditionList;                          // 0x8(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
		struct FGameplayTagContainer                 ClientStartConditionList;                          // 0x28(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
		class AGameStateBase* Owner;                                             // 0x48(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		uint8                                        Pad_316B[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x10 (0x10 - 0x0)
	// ScriptStruct Solarland.PrePooledBundle
	struct FPrePooledBundle
	{
	public:
		class FName                                  ClassPath;                                         // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        Number;                                            // 0x8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bNeedOnClient;                                     // 0xC(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bNeedOnServer;                                     // 0xD(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_316C[0x2];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x10 (0x10 - 0x0)
	// ScriptStruct Solarland.TournamentData
	struct FTournamentData
	{
	public:
		int32                                        StartTime;                                         // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        DelayTime;                                         // 0x4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        Turn;                                              // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class ESCTournamentType                 TournamentType;                                    // 0xC(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_316D[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x78 (0x78 - 0x0)
	// ScriptStruct Solarland.CustomRoomData
	struct FCustomRoomData
	{
	public:
		class FString                                Name;                                              // 0x0(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int64                                        MinPlayerLimit;                                    // 0x10(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int64                                        MaxPlayerLimit;                                    // 0x18(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                OwnerID;                                           // 0x20(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Passwd;                                            // 0x30(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        LevelLimit;                                        // 0x40(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_316E[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		int64                                        ShowID;                                            // 0x48(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int64                                        MaxOBPlayerLimit;                                  // 0x50(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bIsEnabledSwapPos;                                 // 0x58(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bIsEnabledInvite;                                  // 0x59(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bIsEnableTeamJoin;                                 // 0x5A(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class ESCRoomType                       RoomType;                                          // 0x5B(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FTournamentData                       TournamentData;                                    // 0x5C(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		int32                                        RewardPoolID;                                      // 0x6C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        RewardPoolPrizeType;                               // 0x70(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_316F[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x28 (0x28 - 0x0)
	// ScriptStruct Solarland.KnockoutParams
	struct FKnockoutParams
	{
	public:
		float                                        KnockoutKillPoint;                                 // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3170[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TArray<float>                                KnockoutRankPoints;                                // 0x8(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        KnockoutDamagePoint;                               // 0x18(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        KnockoutDamageTakenPoint;                          // 0x1C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        ScalarParam;                                       // 0x20(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3171[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x30 (0x30 - 0x0)
	// ScriptStruct Solarland.SCMJobData
	struct FSCMJobData
	{
	public:
		class FString                                JobName;                                           // 0x0(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        MaxCount;                                          // 0x10(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        MatchCount;                                        // 0x14(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        CurrentMatchCount;                                 // 0x18(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3172[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TArray<class ASCMPlayerState*>               JobPlayerList;                                     // 0x20(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x60 (0x60 - 0x0)
	// ScriptStruct Solarland.SCMSideData
	struct FSCMSideData
	{
	public:
		TArray<class ASCMPlayerState*>               SidePlayerList;                                    // 0x0(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<struct FSCMJobData>                   JobMap;                                            // 0x10(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		FMulticastInlineDelegateProperty_            OnPlayerJoinSideEvent;                             // 0x20(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
		FMulticastInlineDelegateProperty_            OnPlayerQuitSideEvent;                             // 0x30(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
		class FString                                SideName;                                          // 0x40(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        TeamID;                                            // 0x50(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3173[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		int32                                        AssignableNum;                                     // 0x54(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         IsSideSettle;                                      // 0x58(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3174[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x18 (0x18 - 0x0)
	// ScriptStruct Solarland.SCMRankData
	struct FSCMRankData
	{
	public:
		class FString                                HostID;                                            // 0x0(0x10)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        Rank;                                              // 0x10(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        Value;                                             // 0x14(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x18 (0x18 - 0x0)
	// ScriptStruct Solarland.SCMRankInfo
	struct FSCMRankInfo
	{
	public:
		class FString                                RankName;                                          // 0x0(0x10)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class ESCMDataRankType                  RankType;                                          // 0x10(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class ESCMHostType                      HostType;                                          // 0x11(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3175[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x10 (0x10 - 0x0)
	// ScriptStruct Solarland.StartRecordingParams
	struct FStartRecordingParams
	{
	public:
		bool                                         bWithLevelStreamingFixes;                          // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bEnableCheckpoint;                                 // 0x1(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3176[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		uint32                                       RecordHz;                                          // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        CheckpointInterval;                                // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        ChunkInterval;                                     // 0xC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x40 (0x40 - 0x0)
	// ScriptStruct Solarland.AddMultiplePassMaterialChangeParams
	struct FAddMultiplePassMaterialChangeParams
	{
	public:
		struct FGameplayTag                          PriorityTag;                                       // 0x0(0x8)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class EMaterialChangeConflictResolveStrategy ResolveStrategy;                                   // 0x8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class EMultiplePassMaterialChangeCompatibilityMode CompatibilityMode;                                 // 0x9(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3177[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		struct FGameplayTagContainer                 SpecifiedPriorityTags;                             // 0x10(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
		uint8                                        bNeedMultiplePass : 1;                             // Mask: 0x1, PropSize: 0x10x30(0x1)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        bForceFrontFaceCull : 1;                           // Mask: 0x2, PropSize: 0x10x30(0x1)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        bIgnoreTranslucentSection : 1;                     // Mask: 0x4, PropSize: 0x10x30(0x1)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        bIgnoreMaskedSection : 1;                          // Mask: 0x8, PropSize: 0x10x30(0x1)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        bTreatAsBackgroundForOcclusion : 1;                // Mask: 0x10, PropSize: 0x10x30(0x1)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        bUseAsOccluder : 1;                                // Mask: 0x20, PropSize: 0x10x30(0x1)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        bIgnoreOcclusionCull : 1;                          // Mask: 0x40, PropSize: 0x10x30(0x1)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        bRenderMainPassStencil : 1;                        // Mask: 0x80, PropSize: 0x10x30(0x1)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3178[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		int32                                        MainPassDepthStencilValue;                         // 0x34(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        TranslucencySortPriority;                          // 0x38(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3179[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x38 (0x38 - 0x0)
	// ScriptStruct Solarland.SolarClientAdjustPositionInfo
	struct FSolarClientAdjustPositionInfo
	{
	public:
		uint8                                        Pad_317A[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
		class UPrimitiveComponent* NewBase;                                           // 0x20(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_317B[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0xC (0xC - 0x0)
	// ScriptStruct Solarland.CustomJumpParams
	struct FCustomJumpParams
	{
	public:
		float                                        JumpHeight;                                        // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        JumpTime;                                          // 0x4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        JumpDelay;                                         // 0x8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x50 (0x50 - 0x0)
	// ScriptStruct Solarland.ScreenshotConfig
	struct FScreenshotConfig
	{
	public:
		bool                                         EnableOnCurrentReportGameCheating;                 // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_317C[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		int32                                        MaxCountInRound;                                   // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                ScreenshotMoment;                                  // 0x8(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        ScreenshotInterval;                                // 0x18(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        ScreenshotWidth;                                   // 0x1C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        ScreenshotQuality;                                 // 0x20(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_317D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class FString                                ImageSaveType;                                     // 0x28(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                ScreenshotMode;                                    // 0x38(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        ImageMaxSize;                                      // 0x48(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_317E[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x40 (0x40 - 0x0)
	// ScriptStruct Solarland.AntiCheatSetting
	struct FAntiCheatSetting
	{
	public:
		int64                                        ID;                                                // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int64                                        ValueType;                                         // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		double                                       ValueStart;                                        // 0x10(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		double                                       ValueEnd;                                          // 0x18(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int64                                        Tolerance;                                         // 0x20(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int64                                        ProbeInterval;                                     // 0x28(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                VariableName;                                      // 0x30(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x50 (0x50 - 0x0)
	// ScriptStruct Solarland.RegistedActorContainer
	struct FRegistedActorContainer
	{
	public:
		uint8                                        Pad_317F[0x50];                                    // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0xAC (0xB8 - 0xC)
	// ScriptStruct Solarland.SolarItemData
	struct FSolarItemData : public FFastArraySerializerItem
	{
	public:
		int32                                        ItemID;                                            // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int64                                        ThisID;                                            // 0x10(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Name;                                              // 0x18(0x10)(Edit, BlueprintVisible, ZeroConstructor, RepSkip, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Icon;                                              // 0x28(0x10)(Edit, BlueprintVisible, ZeroConstructor, RepSkip, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Info;                                              // 0x38(0x10)(Edit, BlueprintVisible, ZeroConstructor, RepSkip, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        Count;                                             // 0x48(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class EItemType                         ItemType;                                          // 0x4C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        Quality;                                           // 0x50(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        MaxPile;                                           // 0x54(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         IfReplace;                                         // 0x58(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3180[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class FString                                AbilityBP;                                         // 0x60(0x10)(Edit, BlueprintVisible, ZeroConstructor, RepSkip, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                ItemBP;                                            // 0x70(0x10)(Edit, BlueprintVisible, ZeroConstructor, RepSkip, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        DropTime;                                          // 0x80(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        UnPickupTime;                                      // 0x84(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         IsRecommend;                                       // 0x88(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bDirty;                                            // 0x89(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         IsPickupLock;                                      // 0x8A(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3181[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		int64                                        UserId;                                            // 0x90(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        Level;                                             // 0x98(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        Prize;                                             // 0x9C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        CurValue;                                          // 0xA0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         UseOnPickup;                                       // 0xA4(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class EItemAppearanceType               AppearanceType;                                    // 0xA5(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bUpdateOverlap;                                    // 0xA6(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3182[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		int32                                        SourceType;                                        // 0xA8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3183[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x80 (0x88 - 0x8)
	// ScriptStruct Solarland.InteractiveTaskConfig
	struct FInteractiveTaskConfig : public FTableRowBase
	{
	public:
		int32                                        TaskID;                                            // 0x8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        GiftID;                                            // 0xC(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        TaskName;                                          // 0x10(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3184[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class FString                                Describe;                                          // 0x18(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        TaskUpgradeDescribe;                               // 0x28(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3185[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		struct FSoftObjectPath                       TaskIcon;                                          // 0x30(0x18)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class ESocialCurrencyType               CurrencyType;                                      // 0x48(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3186[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		int32                                        MaxTaskLevel;                                      // 0x4C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<int32>                                TaskTarget;                                        // 0x50(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<int32>                                UpgradePrice;                                      // 0x60(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<int32>                                TaskReward;                                        // 0x70(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class EInteractiveTaskType              TaskType;                                          // 0x80(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3187[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		int32                                        Param;                                             // 0x84(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x20 (0x20 - 0x0)
	// ScriptStruct Solarland.SpectateConditions
	struct FSpectateConditions
	{
	public:
		bool                                         bCanBeSpectate;                                    // 0x0(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bCanBeSpectateByHostilePlayer;                     // 0x1(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bCanBeSpectateByFriendlyPlayer;                    // 0x2(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bCanISpectateBot;                                  // 0x3(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bCanISpectateHostilePlayers;                       // 0x4(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3188[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		float                                        LookAtSelfDeathBoxCountDown;                       // 0x8(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3189[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TArray<enum class EFindSpectateTargetType>   FindSpectateTargetPolicy;                          // 0x10(0x10)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x28 (0x28 - 0x0)
	// ScriptStruct Solarland.SpectateReportInfo
	struct FSpectateReportInfo
	{
	public:
		uint32                                       RankLevelID;                                       // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_318A[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class FString                                TargetUserID;                                      // 0x8(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        TargetType;                                        // 0x18(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_318B[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		uint32                                       SpectateElapsedTime;                               // 0x1C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Type;                                              // 0x20(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_318C[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x30 (0x30 - 0x0)
	// ScriptStruct Solarland.VehicleSpectateInfo
	struct FVehicleSpectateInfo
	{
	public:
		TWeakObjectPtr<class ASolarVehiclePawn>      SpectateVehicle;                                   // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TWeakObjectPtr<class ASolarVehicleWeapon>    SpectateVehicleWeapon;                             // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class EVehicleWeaponScopeType           VehicleWeaponScopeType;                            // 0x10(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_318D[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TWeakObjectPtr<class ASolarPlayerWeapon>     SpectatePlayerWeapon;                              // 0x14(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        ScopeId;                                           // 0x1C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<int32>                                WeaponIDs;                                         // 0x20(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x8 (0x8 - 0x0)
	// ScriptStruct Solarland.BattleUpgradeEffectParamData
	struct FBattleUpgradeEffectParamData
	{
	public:
		enum class ESolarTablesEnum_BattleUpgradeEffectType EffectType;                                        // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_318E[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		int32                                        ParameterSum;                                      // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x2C (0x2C - 0x0)
	// ScriptStruct Solarland.RepCountdownData
	struct FRepCountdownData
	{
	public:
		int32                                        RepTimes;                                          // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        RepTextID;                                         // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        RepPassiveTextID;                                  // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        RepPassiveCharacterID;                             // 0xC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        RepDuration;                                       // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        RepRemaining;                                      // 0x14(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        RepAmount;                                         // 0x18(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        RepStartTime;                                      // 0x1C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        RepEndTime;                                        // 0x20(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        RepCancel;                                         // 0x24(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        RemainingTime;                                     // 0x28(0x4)(ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x18 (0x18 - 0x0)
	// ScriptStruct Solarland.CharacterRoleAbilityInfo
	struct FCharacterRoleAbilityInfo
	{
	public:
		bool                                         bHasAbility;                                       // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_318F[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		bool                                         bIsCountingDown;                                   // 0x2(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3190[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		float                                        StartCDTime;                                       // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        TotalCDTime;                                       // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        State;                                             // 0xC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3191[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		bool                                         bOngoing;                                          // 0x14(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3192[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x8 (0x8 - 0x0)
	// ScriptStruct Solarland.ReplicateMaxPileData
	struct FReplicateMaxPileData
	{
	public:
		int32                                        ItemID;                                            // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        MaxPile;                                           // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0xC (0xC - 0x0)
	// ScriptStruct Solarland.ReplicateItemData
	struct FReplicateItemData
	{
	public:
		int32                                        ItemID;                                            // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        Count;                                             // 0x4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        Slot;                                              // 0x8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x28 (0x28 - 0x0)
	// ScriptStruct Solarland.GiftSenderInfo
	struct FGiftSenderInfo
	{
	public:
		int32                                        Gold;                                              // 0x0(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        Diamond;                                           // 0x4(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                PlayerName;                                        // 0x8(0x10)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                PlayerId;                                          // 0x18(0x10)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x78 (0x78 - 0x0)
	// ScriptStruct Solarland.InteractiveTaskStatus
	struct FInteractiveTaskStatus
	{
	public:
		int32                                        TaskID;                                            // 0x0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        CurLevel;                                          // 0x4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        ProgressValue;                                     // 0x8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        TargetValue;                                       // 0xC(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        Param;                                             // 0x10(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bAvailableToNxtLevel;                              // 0x14(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3193[0x53];                                    // Fixing Size After Last Property  [ Dumper-7 ]
		TArray<struct FGiftSenderInfo>               TaskGiftPlayerInfo;                                // 0x68(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x50 (0x50 - 0x0)
	// ScriptStruct Solarland.WorldMarkData
	struct FWorldMarkData
	{
	public:
		struct FVector                               WorldPos;                                          // 0x0(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector2D                             ScreenCoordinate;                                  // 0xC(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class EWorldMarkType                    Type;                                              // 0x14(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3194[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		int32                                        ItemID;                                            // 0x18(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3195[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		int64                                        ItemInstanceId;                                    // 0x20(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        NameLocID;                                         // 0x28(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3196[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class FString                                IconImg;                                           // 0x30(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        WeaponLevel;                                       // 0x40(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class EInteractableType                 InteractableType;                                  // 0x44(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3197[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		int32                                        OuterBoxThisID;                                    // 0x48(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        MarkTimeStamp;                                     // 0x4C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x10 (0x10 - 0x0)
	// ScriptStruct Solarland.MedalInfo
	struct FMedalInfo
	{
	public:
		int32                                        MedalID;                                           // 0x0(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        MedalType;                                         // 0x4(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        MedalPos;                                          // 0x8(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        MedalLv;                                           // 0xC(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x8 (0x8 - 0x0)
	// ScriptStruct Solarland.ShieldInfo
	struct FShieldInfo
	{
	public:
		int32                                        ShieldID;                                          // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        CurValue;                                          // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x48 (0x48 - 0x0)
	// ScriptStruct Solarland.BattleCharacterData
	struct FBattleCharacterData
	{
	public:
		int32                                        CharacterId;                                       // 0x0(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        SkinId;                                            // 0x4(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        CharacterLevel;                                    // 0x8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        TalentID;                                          // 0xC(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        UseTimes;                                          // 0x10(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        CardPose;                                          // 0x14(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        Cardbackground;                                    // 0x18(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        CharacterExp;                                      // 0x1C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        Title;                                             // 0x20(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3198[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		int64                                        Expired;                                           // 0x28(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        CombatCore;                                        // 0x30(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        BagId;                                             // 0x34(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        TailFlameId;                                       // 0x38(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        CapsuleActorId;                                    // 0x3C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3199[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x8 (0x8 - 0x0)
	// ScriptStruct Solarland.SolarBattleWeaponData
	struct FSolarBattleWeaponData
	{
	public:
		int32                                        Weaponid;                                          // 0x0(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        SkinId;                                            // 0x4(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x58 (0x58 - 0x0)
	// ScriptStruct Solarland.ExposeLocationMap
	struct FExposeLocationMap
	{
	public:
		TMap<class ASolarPlayerState*, int32>        InnerMap;                                          // 0x0(0x50)(Protected, NativeAccessSpecifierProtected)
		class ASolarPlayerState* Owner;                                             // 0x50(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	};

	// 0xD8 (0xD8 - 0x0)
	// ScriptStruct Solarland.SettlementTempData
	struct FSettlementTempData
	{
	public:
		int32                                        TotalAccountExp;                                   // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        AccountLevel;                                      // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_319A[0x50];                                    // Fixing Size After Last Property  [ Dumper-7 ]
		int32                                        CurCharacterLevel;                                 // 0x58(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        TotalCharacterExp;                                 // 0x5C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bCharExpFull;                                      // 0x60(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bHaveRankData;                                     // 0x61(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_319B[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		int32                                        RankBeforeScore;                                   // 0x64(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        RankAfterScore;                                    // 0x68(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        RankSurviveScore;                                  // 0x6C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        RankBeforeSurviveScore;                            // 0x70(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        RankDefeatScore;                                   // 0x74(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        RankBeforeDefeatScore;                             // 0x78(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        RankDefeatRatio;                                   // 0x7C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        RankLegend;                                        // 0x80(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        RankProtectType;                                   // 0x84(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         IsRankFight;                                       // 0x85(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_319C[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		int32                                        WinninScoreID;                                     // 0x88(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        BattlePassID;                                      // 0x8C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        BattlePassAddExp;                                  // 0x90(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        BattlePassExp;                                     // 0x94(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<int32>                                BattlePassTaskID;                                  // 0x98(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<int32>                                BattlePassTaskWeek;                                // 0xA8(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<int32>                                BattlePassTaskAdd;                                 // 0xB8(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<int32>                                BattlePassTaskVal;                                 // 0xC8(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x18 (0x18 - 0x0)
	// ScriptStruct Solarland.KillEnemySnapshot
	struct FKillEnemySnapshot
	{
	public:
		uint8                                        Pad_319D[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x8 (0x8 - 0x0)
	// ScriptStruct Solarland.SettlementReward
	struct FSettlementReward
	{
	public:
		int32                                        ItemID;                                            // 0x0(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        Amount;                                            // 0x4(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x18 (0x18 - 0x0)
	// ScriptStruct Solarland.SettlementCrateReward
	struct FSettlementCrateReward
	{
	public:
		int64                                        CrateID;                                           // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<struct FSettlementReward>             Items;                                             // 0x8(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x40 (0x40 - 0x0)
	// ScriptStruct Solarland.SettlementParam_ExtraRewardInfo
	struct FSettlementParam_ExtraRewardInfo
	{
	public:
		int32                                        TextID;                                            // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_319E[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class FString                                LocVariable;                                       // 0x8(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Content;                                           // 0x18(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                ItemList;                                          // 0x28(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        Order;                                             // 0x38(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_319F[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x1C (0x1C - 0x0)
	// ScriptStruct Solarland.LastBattleInfo
	struct FLastBattleInfo
	{
	public:
		float                                        MvpScore;                                          // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        KillNum;                                           // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        HitDown;                                           // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        AssistNum;                                         // 0xC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        RescueNum;                                         // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        AliveTime;                                         // 0x14(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        CauseDamage;                                       // 0x18(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x38 (0x38 - 0x0)
	// ScriptStruct Solarland.ExpRankMedalData
	struct FExpRankMedalData
	{
	public:
		class FString                                Area;                                              // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Country;                                           // 0x10(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        Rank;                                              // 0x20(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        CharacterId;                                       // 0x24(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        CharacterType;                                     // 0x28(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        RankScore;                                         // 0x2C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        RankType;                                          // 0x30(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        AutoID;                                            // 0x34(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x14 (0x14 - 0x0)
	// ScriptStruct Solarland.HitTraceInfo
	struct FHitTraceInfo
	{
	public:
		struct FVector_NetQuantizeNormal             TraceDirection;                                    // 0x0(0xC)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        Damage;                                            // 0xC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class EWeaponType                       WeaponType;                                        // 0x10(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bIsVehicleHitTrace;                                // 0x11(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_31A0[0x2];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x4 (0x4 - 0x0)
	// ScriptStruct Solarland.SpawnedActorHandle
	struct FSpawnedActorHandle
	{
	public:
		uint32                                       Handle;                                            // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	};

	// 0x68 (0x110 - 0xA8)
	// ScriptStruct Solarland.SolarPointDamageEvent
	struct FSolarPointDamageEvent : public FPointDamageEvent
	{
	public:
		bool                                         bBreakShield;                                      // 0xA8(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bIgnoreShield;                                     // 0xA9(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_31A1[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		float                                        ActualShieldDamage;                                // 0xAC(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bBreakArmor;                                       // 0xB0(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bIgnoreArmor;                                      // 0xB1(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_31A2[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		float                                        ActualArmorDamage;                                 // 0xB4(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class ESolarAttributeType               SolarAttributeType;                                // 0xB8(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bPreFakeInvincible;                                // 0xB9(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class EHealthChangeType                 HealthChangeType;                                  // 0xBA(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_31A3[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class ASolarAbility* DamageAbility;                                     // 0xC0(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class USolarAbilityEffect* DamageAbilityEffect;                               // 0xC8(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class EDamageResultType                 ResultType;                                        // 0xD0(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bJustForShield;                                    // 0xD1(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bCanDamageTeamate;                                 // 0xD2(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_31A4[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		int32                                        UseWeaponID;                                       // 0xD4(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class ESCMDamageType                    DamageType;                                        // 0xD8(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_31A5[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TWeakObjectPtr<class AActor>                 DamageCauser;                                      // 0xDC(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_31A6[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class FString                                HitBoneName;                                       // 0xF0(0x10)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        bHitVehicleWeakPoint : 1;                          // Mask: 0x1, PropSize: 0x10x100(0x1)(BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        bHitHumanoidTargetHead : 1;                        // Mask: 0x2, PropSize: 0x10x100(0x1)(BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_31A7[0xF];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x1 (0x1 - 0x0)
	// ScriptStruct Solarland.ReconnectionParams
	struct FReconnectionParams
	{
	public:
		bool                                         bIsCrouched;                                       // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x18 (0x18 - 0x0)
	// ScriptStruct Solarland.PlayerWeaponMsg
	struct FPlayerWeaponMsg
	{
	public:
		enum class EPlayerWeaponMsgType              MsgType;                                           // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_31A8[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class FString                                MsgDetail;                                         // 0x8(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x18 (0x18 - 0x0)
	// ScriptStruct Solarland.ScannedInfo_NetQuantize
	struct FScannedInfo_NetQuantize
	{
	public:
		uint32                                       UniqueId;                                          // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        TargetType;                                        // 0x4(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_31A9[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		uint32                                       VehicleID;                                         // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector_NetQuantize                   TargetLocation;                                    // 0xC(0xC)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x20 (0x20 - 0x0)
	// ScriptStruct Solarland.RestoreAbilityInfo
	struct FRestoreAbilityInfo
	{
	public:
		struct FGameplayAbilitySpecHandle            Handle;                                            // 0x0(0x4)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_31AA[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		struct FPredictionKey                        ActivationPredictionKey;                           // 0x8(0x18)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x1C (0x1C - 0x0)
	// ScriptStruct Solarland.BackpackStatisticsInfo
	struct FBackpackStatisticsInfo
	{
	public:
		bool                                         IsVertical;                                        // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_31AB[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		struct FVector                               PlayerStartLocation;                               // 0x4(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector                               PlayerEndLocation;                                 // 0x10(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x10 (0x10 - 0x0)
	// ScriptStruct Solarland.SoundGroupPlayContext
	struct FSoundGroupPlayContext
	{
	public:
		class ASolarCharacter* Instigator;                                        // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class ASolarCharacter* LocalCharacter;                                    // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x18 (0x18 - 0x0)
	// ScriptStruct Solarland.OrnamentMontageInfo
	struct FOrnamentMontageInfo
	{
	public:
		class UAnimMontage* ActiveMontage;                                     // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FGameplayTag                          OrnamentTag;                                       // 0x8(0x8)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        bForcePlayBit : 1;                                 // Mask: 0x1, PropSize: 0x10x10(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_31AC[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x50 (0x50 - 0x0)
	// ScriptStruct Solarland.ShieldSoundData
	struct FShieldSoundData
	{
	public:
		TMap<enum class EShieldSoundEventType, enum class ECharacterSoundOpt> SoundData;                                         // 0x0(0x50)(BlueprintVisible, NativeAccessSpecifierPublic)
	};

	// 0x10 (0x10 - 0x0)
	// ScriptStruct Solarland.VehicleEjectParams
	struct FVehicleEjectParams
	{
	public:
		float                                        EjectTime;                                         // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        EjectDistance;                                     // 0x4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        EjectBreakableTime;                                // 0x8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        EjectCameraFadeOutTime;                            // 0xC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x1C (0x28 - 0xC)
	// ScriptStruct Solarland.BattleUpgradeEffect
	struct FBattleUpgradeEffect : public FFastArraySerializerItem
	{
	public:
		int32                                        Level;                                             // 0xC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        EffectID;                                          // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_31AD[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TArray<int32>                                EffectCandidate;                                   // 0x18(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x18 (0x120 - 0x108)
	// ScriptStruct Solarland.BattleUpgradeEffectContainer
	struct FBattleUpgradeEffectContainer : public FFastArraySerializer
	{
	public:
		TArray<struct FBattleUpgradeEffect>          DataArray;                                         // 0x108(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class ASolarCharacter* Owner;                                             // 0x118(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x10 (0x10 - 0x0)
	// ScriptStruct Solarland.BoardedVehicleInfo
	struct FBoardedVehicleInfo
	{
	public:
		class ASolarVehiclePawn* BoardedVehicle;                                    // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        BoardedSeatIndex;                                  // 0x8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_31AE[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x68 (0x68 - 0x0)
	// ScriptStruct Solarland.CriticalHitInfo
	struct FCriticalHitInfo
	{
	public:
		class ASolarPlayerState* Instigator;                                        // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        Damage;                                            // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        DamageTime;                                        // 0xC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        LastDamageWeaponID;                                // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_31AF[0x54];                                    // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x1C (0x28 - 0xC)
	// ScriptStruct Solarland.RadarDataSpec
	struct FRadarDataSpec : public FFastArraySerializerItem
	{
	public:
		struct FGameplayAbilitySpecHandle            RadarHandle;                                       // 0xC(0x4)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        RadarType;                                         // 0x10(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_31B0[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		struct FVector2D                             RadarRange;                                        // 0x14(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_31B1[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class APawn* RadarSpawner;                                      // 0x20(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x18 (0x120 - 0x108)
	// ScriptStruct Solarland.RadarDataSpecContainer
	struct FRadarDataSpecContainer : public FFastArraySerializer
	{
	public:
		TArray<struct FRadarDataSpec>                Radars;                                            // 0x108(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class USolarRadarComponent* Owner;                                             // 0x118(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x10 (0x10 - 0x0)
	// ScriptStruct Solarland.CharacterOperationEvent
	struct FCharacterOperationEvent
	{
	public:
		enum class ECharacterOperation               Name;                                              // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_31B2[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class UObject* Target;                                            // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0xC (0xC - 0x0)
	// ScriptStruct Solarland.BackpackJetPrepelInfo
	struct FBackpackJetPrepelInfo
	{
	public:
		bool                                         IsPropelling;                                      // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_31B3[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		int32                                        PropellingCounter;                                 // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class EFXJetType                        JetType;                                           // 0x8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bCheckGround;                                      // 0x9(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_31B4[0x2];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x10 (0x10 - 0x0)
	// ScriptStruct Solarland.OrnamentCompAndVisibilityConfigPair
	struct FOrnamentCompAndVisibilityConfigPair
	{
	public:
		TWeakObjectPtr<class USceneComponent>        OrnamentComp;                                      // 0x0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		class UOrnamentComponentVisibilityConfig* VisibilityConfig;                                  // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	};

	// 0x58 (0x58 - 0x0)
	// ScriptStruct Solarland.CharacterTagListenerForOrnamentComp
	struct FCharacterTagListenerForOrnamentComp
	{
	public:
		TSet<struct FOrnamentCompAndVisibilityConfigPair> OrnamentCompPairs;                                 // 0x0(0x50)(ContainsInstancedReference, NativeAccessSpecifierPrivate)
		uint8                                        Pad_31B5[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x1C (0x1C - 0x0)
	// ScriptStruct Solarland.FixedAntiCheatData
	struct FFixedAntiCheatData
	{
	public:
		int32                                        FOV;                                               // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class EAspectRatioAxisConstraint        AxisConstraint;                                    // 0x4(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bAssistAim;                                        // 0x5(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_31B6[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		struct FVector                               HeadBoneScale;                                     // 0x8(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         CurrWeaponRecoil;                                  // 0x14(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_31B7[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		float                                        LatestTimeDiscrepancyError;                        // 0x18(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x28 (0x28 - 0x0)
	// ScriptStruct Solarland.SolarGameModeInfo
	struct FSolarGameModeInfo
	{
	public:
		int32                                        GameModeId;                                        // 0x0(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_31B8[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class FString                                MapName;                                           // 0x8(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        NumMode;                                           // 0x18(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        PlayerCount;                                       // 0x1C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        TeamCount;                                         // 0x20(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_31B9[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x428 (0x428 - 0x0)
	// ScriptStruct Solarland.SolarPlayerReport
	struct FSolarPlayerReport
	{
	public:
		class FString                                PlayerId;                                          // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint64                                       UserId;                                            // 0x10(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                NickName;                                          // 0x18(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        CharacterId;                                       // 0x28(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        SkinId;                                            // 0x2C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        PlayerRank;                                        // 0x30(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        Gender;                                            // 0x34(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        AccountFlag;                                       // 0x38(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        TeamRank;                                          // 0x3C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        TeamID;                                            // 0x40(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        PosInTeam;                                         // 0x44(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bHasHangUpBehavior;                                // 0x48(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_31BA[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		int32                                        KillNum;                                           // 0x4C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        KillNumToRealPlayer;                               // 0x50(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_31BB[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TArray<int32>                                VehicleKillNum_ID;                                 // 0x58(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<int32>                                VehicleKillNum_Value;                              // 0x68(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        KillTeammate;                                      // 0x78(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        KillInAirNum;                                      // 0x7C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        KillDownInAirNum;                                  // 0x80(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        WeaponSkillKillNum;                                // 0x84(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        P_KillStreak;                                      // 0x88(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_31BC[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TArray<int32>                                KillStreakHistory;                                 // 0x90(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        RevengeNum;                                        // 0xA0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        DeathNum;                                          // 0xA4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        KillDownNum;                                       // 0xA8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        KillDownTeammate;                                  // 0xAC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        AccurateDamage;                                    // 0xB0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        AccurateDameageTimes;                              // 0xB4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        AccurateKillTimes;                                 // 0xB8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        AccurateKillDownTimes;                             // 0xBC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        CauseDamage;                                       // 0xC0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        CauseDamageToRealPlayer;                           // 0xC4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        ReceivedDamage;                                    // 0xC8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        AssistNum;                                         // 0xCC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        CollectEnergy;                                     // 0xD0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        BuyESElectricNum;                                  // 0xD4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        ResurrectionCapsule;                               // 0xD8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        TeamFriendRevive;                                  // 0xDC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        ReceivedHeal;                                      // 0xE0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        HealSelf;                                          // 0xE4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        TeammateHeal;                                      // 0xE8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        OpenAirBoxNum;                                     // 0xEC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        LifeTime;                                          // 0xF0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        SaveCount;                                         // 0xF4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        FlyCount;                                          // 0xF8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        VehicleTime;                                       // 0xFC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        CurCharacterLevel;                                 // 0x100(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        TotalCharacterExp;                                 // 0x104(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bCharExpFull;                                      // 0x108(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_31BD[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TArray<int32>                                CharacterExpReason;                                // 0x110(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        CharacterExp;                                      // 0x120(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        AccountExp;                                        // 0x124(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        TotalAccountExp;                                   // 0x128(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        AccountLevel;                                      // 0x12C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bHaveRankData;                                     // 0x130(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_31BE[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		int32                                        RankID;                                            // 0x134(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        RankBeforeScore;                                   // 0x138(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        RankSurviveScore;                                  // 0x13C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        RankBeforeSurviveScore;                            // 0x140(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        RankDefeatScore;                                   // 0x144(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        RankBeforeDefeatScore;                             // 0x148(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        RankDefeatRatio;                                   // 0x14C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        RankAfterScore;                                    // 0x150(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        RankLegend;                                        // 0x154(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        RankProtectType;                                   // 0x158(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         IsRankFight;                                       // 0x159(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_31BF[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		int32                                        WinninScoreID;                                     // 0x15C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        Zomborg;                                           // 0x160(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        MvpScore;                                          // 0x164(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        KDA;                                               // 0x168(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         IsAce;                                             // 0x16C(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         IsVictory;                                         // 0x16D(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         IsValid;                                           // 0x16E(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_31C0[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TArray<int32>                                SettlementItems;                                   // 0x170(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<class FString>                        StringExtraRewards;                                // 0x180(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<int32>                                SendGiftGold;                                      // 0x190(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<int32>                                SendGiftDiamond;                                   // 0x1A0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<class FString>                        SendGiftPlayerName;                                // 0x1B0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<class FString>                        SendGiftPlayerID;                                  // 0x1C0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<int32>                                WeaponExpIds;                                      // 0x1D0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<int32>                                WeaponLevel;                                       // 0x1E0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<int32>                                CurWeaponExp;                                      // 0x1F0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<int32>                                WeaponExps;                                        // 0x200(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<int32>                                WeaponKillNum_ID;                                  // 0x210(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<float>                                WeaponKillNum_Value;                               // 0x220(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<int32>                                WeaponDamage_ID;                                   // 0x230(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<float>                                WeaponDamage_Value;                                // 0x240(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<int32>                                VehicleDamage_ID;                                  // 0x250(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<float>                                VehicleDamage_Value;                               // 0x260(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<int32>                                VehicleDistance_ID;                                // 0x270(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<int32>                                VehicleDistance_Value;                             // 0x280(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        SettlementConfigID;                                // 0x290(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        GameModeSubID;                                     // 0x294(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                KillerPlayerId;                                    // 0x298(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint64                                       KillerUserId;                                      // 0x2A8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                KillerNickName;                                    // 0x2B0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                KillerOS;                                          // 0x2C0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                OS;                                                // 0x2D0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<int32>                                CharacterKillNumIDs;                               // 0x2E0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<int32>                                CharacterKillNumValues;                            // 0x2F0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        WarmType;                                          // 0x300(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_31C1[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TArray<int32>                                AchievementIDs;                                    // 0x308(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<int32>                                AchievementValues;                                 // 0x318(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        LikeValue;                                         // 0x328(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_31C2[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TArray<int32>                                StrategyConditionIDs;                              // 0x330(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        SettlementDisplayStrategyID;                       // 0x340(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        LastUseVehicleID;                                  // 0x344(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<class FString>                        SavedTeammateIDArr;                                // 0x348(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<int32>                                SavedTeammateBonusArr;                             // 0x358(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<uint8>                                SettlementRewards;                                 // 0x368(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<uint8>                                CrateRewardData;                                   // 0x378(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                ClanId;                                            // 0x388(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        KnockoutPoints;                                    // 0x398(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bIsKnockoutPointsValid;                            // 0x39C(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_31C3[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		int32                                        BattlePassAddExp;                                  // 0x3A0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        BattlePassExp;                                     // 0x3A4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        BattlePassID;                                      // 0x3A8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_31C4[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TArray<int32>                                BattlePassTaskWeek;                                // 0x3B0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<int32>                                BattlePassTaskID;                                  // 0x3C0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<int32>                                BattlePassTaskAdd;                                 // 0x3D0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<int32>                                BattlePassTaskVal;                                 // 0x3E0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<int32>                                UsedCharacterIDs;                                  // 0x3F0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        CardPose;                                          // 0x400(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        Cardbackground;                                    // 0x404(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        SameClanCnt;                                       // 0x408(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        CombatCore;                                        // 0x40C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         IsCheater;                                         // 0x410(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_31C5[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TArray<uint8>                                SettlePunishTypes;                                 // 0x418(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x28 (0x28 - 0x0)
	// ScriptStruct Solarland.SolarDamageText
	struct FSolarDamageText
	{
	public:
		bool                                         bHitHead;                                          // 0x0(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bHitShield;                                        // 0x1(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bBrokenShield;                                     // 0x2(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_31C6[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		int32                                        Damage;                                            // 0x4(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TWeakObjectPtr<class AActor>                 Target;                                            // 0x8(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TWeakObjectPtr<class AActor>                 Source;                                            // 0x10(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector                               HitLocation;                                       // 0x18(0xC)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint32                                       TargetUniqueID;                                    // 0x24(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x40 (0x40 - 0x0)
	// ScriptStruct Solarland.ScreenshotSetting
	struct FScreenshotSetting
	{
	public:
		bool                                         EnableOnCurrentReportGameCheating;                 // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_31C7[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		int32                                        MaxCountInRound;                                   // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<bool>                                 ScreenshotMoment;                                  // 0x8(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        ScreenshotInterval;                                // 0x18(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        ScreenshotWidth;                                   // 0x1C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        ScreenshotQuality;                                 // 0x20(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_31C8[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class FString                                ImageSaveType;                                     // 0x28(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class EShotModeFlag                     ScreenshotMode;                                    // 0x38(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_31C9[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		int32                                        ImageMaxSize;                                      // 0x3C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x10 (0x10 - 0x0)
	// ScriptStruct Solarland.SolarInputModeDataBase
	struct FSolarInputModeDataBase
	{
	public:
		uint8                                        Pad_31CA[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x18 (0x18 - 0x0)
	// ScriptStruct Solarland.LocTextParam
	struct FLocTextParam
	{
	public:
		class FString                                ParamName;                                         // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        LocTextID;                                         // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_31CB[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x78 (0x78 - 0x0)
	// ScriptStruct Solarland.SShotImageInfo
	struct FSShotImageInfo
	{
	public:
		class FString                                UserId;                                            // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                PlayerId;                                          // 0x10(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                BattleID;                                          // 0x20(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int64                                        ScreenshotTime;                                    // 0x30(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        ImageSize;                                         // 0x38(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        ImageWidth;                                        // 0x3C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        ImageHeight;                                       // 0x40(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_31CC[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class FString                                ImageType;                                         // 0x48(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                ImageBuffer;                                       // 0x58(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_31CD[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x20 (0x20 - 0x0)
	// ScriptStruct Solarland.GameplayHitInfo
	struct FGameplayHitInfo
	{
	public:
		uint8                                        Pad_31CE[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x58 (0x58 - 0x0)
	// ScriptStruct Solarland.CustomParamConfig
	struct FCustomParamConfig
	{
	public:
		int32                                        DisplayName;                                       // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        Category;                                          // 0x4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        Desc;                                              // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class ECustomParamValueType             ValueType;                                         // 0xC(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_31CF[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class FString                                DefaultValue;                                      // 0x10(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<class FString>                        ValueRange;                                        // 0x20(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TSoftClassPtr<class UUserWidget>             StyleClass;                                        // 0x30(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x20 (0x20 - 0x0)
	// ScriptStruct Solarland.UserSetting
	struct FUserSetting
	{
	public:
		uint8                                        Pad_31D0[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x18 (0x18 - 0x0)
	// ScriptStruct Solarland.SideAttribute
	struct FSideAttribute
	{
	public:
		float                                        Value;                                             // 0x0(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_31D1[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TArray<class ASCMPlayerState*>               Contributors;                                      // 0x8(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x8C (0x98 - 0xC)
	// ScriptStruct Solarland.SideAttributeSet
	struct FSideAttributeSet : public FFastArraySerializerItem
	{
	public:
		uint8                                        Pad_31D2[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class FString                                SideName;                                          // 0x10(0x10)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FSideAttribute                        SideTreatmentDurationReductionMultiple;            // 0x20(0x18)(BlueprintVisible, NativeAccessSpecifierPublic)
		struct FSideAttribute                        SideShieldChargeDurationReductionMultiple;         // 0x38(0x18)(BlueprintVisible, NativeAccessSpecifierPublic)
		struct FSideAttribute                        SideBigShieldChargeDurationReductionMultiple;      // 0x50(0x18)(BlueprintVisible, NativeAccessSpecifierPublic)
		struct FSideAttribute                        SideItemDiscountMultiple;                          // 0x68(0x18)(BlueprintVisible, NativeAccessSpecifierPublic)
		struct FSideAttribute                        SideItemAdditionMultiple;                          // 0x80(0x18)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	};

	// 0x18 (0x120 - 0x108)
	// ScriptStruct Solarland.SideAttributeSetArray
	struct FSideAttributeSetArray : public FFastArraySerializer
	{
	public:
		uint8                                        Pad_31D3[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TArray<struct FSideAttributeSet>             AttributeSets_Internal;                            // 0x110(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	};

	// 0x30 (0x30 - 0x0)
	// ScriptStruct Solarland.DownloadFileInfo
	struct FDownloadFileInfo
	{
	public:
		class FString                                URL;                                               // 0x0(0x10)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Filename;                                          // 0x10(0x10)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                HashStr;                                           // 0x20(0x10)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x20 (0x20 - 0x0)
	// ScriptStruct Solarland.LocalFileInfo
	struct FLocalFileInfo
	{
	public:
		class FString                                Dir;                                               // 0x0(0x10)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Filename;                                          // 0x10(0x10)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x50 (0x50 - 0x0)
	// ScriptStruct Solarland.ItemCountsList
	struct FItemCountsList
	{
	public:
		TMap<enum class EPickupItemType, int32>      Type2IntMap;                                       // 0x0(0x50)(NativeAccessSpecifierPublic)
	};

	// 0x30 (0x30 - 0x0)
	// ScriptStruct Solarland.InteractionTriggerInfo
	struct FInteractionTriggerInfo
	{
	public:
		struct FGameplayTag                          GameplayTag;                                       // 0x0(0x8)(BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_31D4[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x50 (0x50 - 0x0)
	// ScriptStruct Solarland.HUDNoticeParams
	struct FHUDNoticeParams
	{
	public:
		TMap<class FString, class FString>           Params;                                            // 0x0(0x50)(NativeAccessSpecifierPublic)
	};

	// 0x48 (0x48 - 0x0)
	// ScriptStruct Solarland.CountDownInfo
	struct FCountDownInfo
	{
	public:
		int32                                        TextID;                                            // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        Time;                                              // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        RemainingTime;                                     // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bShowBtn;                                          // 0xC(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_31D5[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		int32                                        PassiveTextID;                                     // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FGameplayTag                          GameplayTag;                                       // 0x14(0x8)(BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_31D6[0x24];                                    // Fixing Size After Last Property  [ Dumper-7 ]
		int32                                        ContributorCharacterId;                            // 0x40(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		enum class ECountDownState                   State;                                             // 0x44(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		uint8                                        Pad_31D7[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x98 (0x98 - 0x0)
	// ScriptStruct Solarland.KillInfo
	struct FKillInfo
	{
	public:
		class FString                                KillerPlayerId;                                    // 0x0(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        KillerSkinID;                                      // 0x10(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        KillerTeamID;                                      // 0x14(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                KillerName;                                        // 0x18(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        KillerFlag;                                        // 0x28(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_31E6[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class FString                                VictimPlayerID;                                    // 0x30(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        VictimSkinID;                                      // 0x40(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        VictimTeamID;                                      // 0x44(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                VictimName;                                        // 0x48(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        VictimFlag;                                        // 0x58(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_31E7[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class FString                                KillIcon;                                          // 0x60(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                KillLeaderID;                                      // 0x70(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class EKillParamsCompressInfo           KillParamsCompressInfo;                            // 0x80(0x2)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_31E8[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		int32                                        KillNum;                                           // 0x84(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        WeaponSkinID;                                      // 0x88(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        KillerVipType;                                     // 0x8C(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        VictimVipType;                                     // 0x8D(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class ECommonInputType                  KillerInputType;                                   // 0x8E(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class ECommonInputType                  VictimInputType;                                   // 0x8F(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bDown;                                             // 0x90(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_31E9[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0xC (0xC - 0x0)
	// ScriptStruct Solarland.ReplayActivityKillDetail
	struct FReplayActivityKillDetail
	{
	public:
		float                                        KillTime;                                          // 0x0(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class EReplayActivityHeatKillUseType    KillUseType;                                       // 0x4(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_31EA[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		int32                                        KillToolID;                                        // 0x8(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x30 (0x30 - 0x0)
	// ScriptStruct Solarland.ReplayActivityHeatFragment
	struct FReplayActivityHeatFragment
	{
	public:
		int32                                        FragmentId;                                        // 0x0(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class EPlayerActivityHeatType           ActivityHeatType;                                  // 0x4(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_31EB[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		float                                        TotalScore;                                        // 0x8(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        BeginTime;                                         // 0xC(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        EndTime;                                           // 0x10(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_31EC[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TArray<struct FReplayActivityKillDetail>     ActivityKillDetails;                               // 0x18(0x10)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        KillNum;                                           // 0x28(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        ActivityHotTime;                                   // 0x2C(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x40 (0x40 - 0x0)
	// ScriptStruct Solarland.PlayAnimationParams
	struct FPlayAnimationParams
	{
	public:
		uint8                                        Pad_31ED[0x40];                                    // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x60 (0x60 - 0x0)
	// ScriptStruct Solarland.BattleUpgradeEffectCategoryColorSet
	struct FBattleUpgradeEffectCategoryColorSet
	{
	public:
		struct FLinearColor                          BannerCategoryTextColor;                           // 0x0(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FLinearColor                          BannerIconColor;                                   // 0x10(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FLinearColor                          BannerBorderColor;                                 // 0x20(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FLinearColor                          BannerBackgroundColor;                             // 0x30(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FLinearColor                          BadgeIconColor;                                    // 0x40(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FLinearColor                          BadgeBackgroundColor;                              // 0x50(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x18 (0x18 - 0x0)
	// ScriptStruct Solarland.ElectricShopItem
	struct FElectricShopItem
	{
	public:
		int32                                        ItemID;                                            // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        Prize;                                             // 0x4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        Num;                                               // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        ProductID;                                         // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        CoolDown;                                          // 0x10(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        Generation;                                        // 0x14(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x4 (0x4 - 0x0)
	// ScriptStruct Solarland.WrappedLocalTextID
	struct FWrappedLocalTextID
	{
	public:
		int32                                        LocalTextId;                                       // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x38 (0x38 - 0x0)
	// ScriptStruct Solarland.ActionWheelCommand
	struct FActionWheelCommand
	{
	public:
		enum class EActionWheelCommandType           CommandType;                                       // 0x0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_31EE[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class FString                                ConfigKey;                                         // 0x8(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FWrappedLocalTextID                   DisplayName;                                       // 0x18(0x4)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_31EF[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		struct FSoftObjectPath                       Icon;                                              // 0x20(0x18)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x70 (0x70 - 0x0)
	// ScriptStruct Solarland.ActionWheelStyle
	struct FActionWheelStyle
	{
	public:
		struct FLinearColor                          BlackgroundColor;                                  // 0x0(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FLinearColor                          InnerCircleColor;                                  // 0x10(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FLinearColor                          BlackgroundSelectedColor;                          // 0x20(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FLinearColor                          InnerCircleSelectedColor;                          // 0x30(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FLinearColor                          WheelGradientColor;                                // 0x40(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FLinearColor                          WheelSelectedGradientColor;                        // 0x50(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector2D                             IconSize;                                          // 0x60(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        IconOffset;                                        // 0x68(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        SelectedIconOffset;                                // 0x6C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0xD0 (0xD8 - 0x8)
	// ScriptStruct Solarland.ActionWheelConfig
	struct FActionWheelConfig : public FTableRowBase
	{
	public:
		int32                                        Groupid;                                           // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FWrappedLocalTextID                   Title;                                             // 0xC(0x4)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        StyleID;                                           // 0x10(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_31F0[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class FString                                WheelDes;                                          // 0x18(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        DisplayDelay;                                      // 0x28(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector2D                             Offset;                                            // 0x2C(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_31F1[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TSubclassOf<class UActionWheelWidgetFunctionBase> WheelFunctionBP;                                   // 0x38(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                InputActionName;                                   // 0x40(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class EActionWheelOperateType           OperateType;                                       // 0x50(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_31F2[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		struct FActionWheelStyle                     ActionWheelStyle;                                  // 0x54(0x70)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
		uint8                                        Pad_31F3[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TArray<struct FActionWheelCommand>           ActionWheelCommands;                               // 0xC8(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x48 (0x48 - 0x0)
	// ScriptStruct Solarland.MaterialFilter
	struct FMaterialFilter
	{
	public:
		bool                                         bIgnoreChangeability;                              // 0x0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_31F4[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TArray<class UMeshComponent*>                IncludingMeshes;                                   // 0x8(0x10)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<int32>                                IncludingMaterialIndices;                          // 0x18(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<class UMeshComponent*>                ExcludingMeshes;                                   // 0x28(0x10)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<int32>                                ExcludingMaterialIndices;                          // 0x38(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x8 (0x8 - 0x0)
	// ScriptStruct Solarland.MaterialChangeHandle
	struct FMaterialChangeHandle
	{
	public:
		uint8                                        Pad_31F5[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x68 (0x68 - 0x0)
	// ScriptStruct Solarland.MultiplePassMaterialChange
	struct FMultiplePassMaterialChange
	{
	public:
		TSoftObjectPtr<class UMaterialInterface>     SourceMaterial;                                    // 0x0(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FAddMultiplePassMaterialChangeParams  Params;                                            // 0x28(0x40)(Edit, NativeAccessSpecifierPublic)
	};

	// 0x28 (0x28 - 0x0)
	// ScriptStruct Solarland.AddMaterialChangeParams
	struct FAddMaterialChangeParams
	{
	public:
		uint8                                        Pad_31F6[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		struct FGameplayTag                          PriorityTag;                                       // 0x8(0x8)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class EMaterialChangeConflictResolveStrategy ResolveStrategy;                                   // 0x10(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class EMaterialChangeTextureOverrideMode TextureOverrideMode;                               // 0x11(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_31F7[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TArray<class FName>                          TextureParameterNamesToOverride;                   // 0x18(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x50 (0x50 - 0x0)
	// ScriptStruct Solarland.NormalMaterialChange
	struct FNormalMaterialChange
	{
	public:
		TSoftObjectPtr<class UMaterialInterface>     SourceMaterial;                                    // 0x0(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FAddMaterialChangeParams              Params;                                            // 0x28(0x28)(Edit, NativeAccessSpecifierPublic)
	};

	// 0x10 (0x10 - 0x0)
	// ScriptStruct Solarland.MaterialChangePriorityGroup
	struct FMaterialChangePriorityGroup
	{
	public:
		TArray<struct FGameplayTag>                  Tags;                                              // 0x0(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x30 (0x30 - 0x0)
	// ScriptStruct Solarland.ForceChangeMaterialInfos
	struct FForceChangeMaterialInfos
	{
	public:
		struct FGameplayTagContainer                 MaterialPriorityTags;                              // 0x0(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
		TArray<struct FSoftObjectPath>               MaterialPaths;                                     // 0x20(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x20 (0x20 - 0x0)
	// ScriptStruct Solarland.MaterialParameterFilter
	struct FMaterialParameterFilter
	{
	public:
		TArray<class FName>                          IncludingNames;                                    // 0x0(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<class FName>                          ExcludingNames;                                    // 0x10(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x38 (0x38 - 0x0)
	// ScriptStruct Solarland.MaterialChange
	struct FMaterialChange
	{
	public:
		uint8                                        Pad_31F8[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
		TArray<class UMaterialInterface*>            Materials;                                         // 0x28(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x50 (0x50 - 0x0)
	// ScriptStruct Solarland.MeshMaterialInfo
	struct FMeshMaterialInfo
	{
	public:
		uint8                                        Pad_31F9[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
		TArray<struct FMaterialChange>               NormalMaterialChanges;                             // 0x18(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_31FA[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
		TArray<struct FMaterialChange>               MultiplePassMaterialChanges;                       // 0x40(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x10 (0x10 - 0x0)
	// ScriptStruct Solarland.LimitedMeshContainer
	struct FLimitedMeshContainer
	{
	public:
		TArray<class UMeshComponent*>                Meshes;                                            // 0x0(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x160 (0x160 - 0x0)
	// ScriptStruct Solarland.ActorMaterialInfo
	struct FActorMaterialInfo
	{
	public:
		uint8                                        Pad_31FB[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
		TMap<struct FMaterialChangeHandle, class UMaterialInterface*> SourceMaterials;                                   // 0x10(0x50)(NativeAccessSpecifierPublic)
		TMap<struct FMaterialChangeHandle, struct FAddMaterialChangeParams> NormalParams;                                      // 0x60(0x50)(NativeAccessSpecifierPublic)
		TMap<struct FMaterialChangeHandle, struct FAddMultiplePassMaterialChangeParams> MultiplePassParams;                                // 0xB0(0x50)(NativeAccessSpecifierPublic)
		TMap<struct FMaterialChangeHandle, struct FLimitedMeshContainer> LimitedMeshes;                                     // 0x100(0x50)(ContainsInstancedReference, NativeAccessSpecifierPublic)
		TArray<struct FMeshMaterialInfo>             MeshMaterials;                                     // 0x150(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x8 (0x8 - 0x0)
	// ScriptStruct Solarland.ActorParticleEffectSpawnHandle
	struct FActorParticleEffectSpawnHandle
	{
	public:
		uint8                                        Pad_31FC[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x70 (0x70 - 0x0)
	// ScriptStruct Solarland.ActorParticleEffectSpawnInfo
	struct FActorParticleEffectSpawnInfo
	{
	public:
		TSoftObjectPtr<class UParticleSystem>        ParticleSystem;                                    // 0x0(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class EActorParticleEffectAttachOption  AttachOption;                                      // 0x28(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_31FD[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class FName                                  AttachPointName;                                   // 0x2C(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class EAttachLocation                   LocationType;                                      // 0x34(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_31FE[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		struct FVector                               Location;                                          // 0x38(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FRotator                              Rotation;                                          // 0x44(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		struct FVector                               Scale;                                             // 0x50(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bAutoActivate;                                     // 0x5C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bAutoDestroy;                                      // 0x5D(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bEnablePooling;                                    // 0x5E(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bAbsoluteRotation;                                 // 0x5F(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<class FName>                          ComponentTags;                                     // 0x60(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x28 (0x28 - 0x0)
	// ScriptStruct Solarland.AirlineData
	struct FAirlineData
	{
	public:
		float                                        AirlineHeight;                                     // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        AirlineSpeed;                                      // 0x4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector2D                             StartPoint;                                        // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector2D                             EndPoint;                                          // 0x10(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector2D                             RealStartPoint;                                    // 0x18(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector2D                             RealEndPoint;                                      // 0x20(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x20 (0x20 - 0x0)
	// ScriptStruct Solarland.MapAirlineData
	struct FMapAirlineData
	{
	public:
		int32                                        MapID;                                             // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        Height;                                            // 0x4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        Speed;                                             // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_31FF[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TArray<struct FAirlineData>                  AirlineDataList;                                   // 0x10(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0xC0 (0xC0 - 0x0)
	// ScriptStruct Solarland.FireChargeData
	struct FFireChargeData
	{
	public:
		bool                                         IfContinuousCharge;                                // 0x0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3200[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		float                                        ChargeTime;                                        // 0x4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class UCurveFloat* ChargeDamageRadiusCurve;                           // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class UCurveFloat* ChargeDamageMagnificationCurve;                    // 0x10(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         IfPenetrable;                                      // 0x18(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3201[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class UAmmoConfig* OverrideAmmo;                                      // 0x20(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        OverrideAmmoID;                                    // 0x28(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3202[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class FString                                ChargeSoundName;                                   // 0x30(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                ChargeSoundEnemyName;                              // 0x40(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                FireSoundName;                                     // 0x50(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                FireSoundEnemyName;                                // 0x60(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         IfBurst;                                           // 0x70(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3203[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class UCurveFloat* BulletBurstCountCurve;                             // 0x78(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         IfCostToChargeScale;                               // 0x80(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3204[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		int32                                        FireCostFullShot;                                  // 0x84(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         IfForceFullShotCost;                               // 0x88(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bNeedPlayCameraShake;                              // 0x89(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3205[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class UCurveFloat* AmmoSpeedScaleCurve;                               // 0x90(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class UCurveFloat* AmmoEffectXScaleCurve;                             // 0x98(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class UCurveFloat* AmmoEffectYZScaleCurve;                            // 0xA0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class UCurveFloat* OverloadCurve;                                     // 0xA8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        ChargeAnimationRate;                               // 0xB0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3206[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class UCurveFloat* DeflectionAngleCurve;                              // 0xB8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x40 (0x40 - 0x0)
	// ScriptStruct Solarland.TracerBulletData
	struct FTracerBulletData
	{
	public:
		float                                        DeflectionAnglePerSec;                             // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        MaximumDetectionAngle;                             // 0x4(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        HomingRange;                                       // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bTraceTargetOnly;                                  // 0xC(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3207[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class FString                                TracingTargetWarningSound;                         // 0x10(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                TracingTargetWarningRTPC;                          // 0x20(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                TracingAuthorPromptSound;                          // 0x30(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x24 (0x24 - 0x0)
	// ScriptStruct Solarland.AmmonRecoilCrossHair
	struct FAmmonRecoilCrossHair
	{
	public:
		float                                        VMaxDistanceOffSetScale;                           // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        VVibrationDurationScale;                           // 0x4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        VSingleOffSetScale;                                // 0x8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        VContinuousOffSetScale;                            // 0xC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        HMaxDistanceOffSetScale;                           // 0x10(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        HVibrationDurationScale;                           // 0x14(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        HSingleOffSetScale;                                // 0x18(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        HContinuousOffSetScale;                            // 0x1C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        HOffSetProbabilityScale;                           // 0x20(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x28 (0x28 - 0x0)
	// ScriptStruct Solarland.AmmonRecoilStruct
	struct FAmmonRecoilStruct
	{
	public:
		float                                        CostTime;                                          // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3208[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class UCurveFloat* RecoilRangeCurve;                                  // 0x8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        APointCurveKeyIndex;                               // 0x10(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        APointMin;                                         // 0x14(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        APointMax;                                         // 0x18(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        BPointCurveKeyIndex;                               // 0x1C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        BPointMin;                                         // 0x20(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        BPointMax;                                         // 0x24(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x10 (0x38 - 0x28)
	// ScriptStruct Solarland.AmmonRecoilScopeRoll
	struct FAmmonRecoilScopeRoll : public FAmmonRecoilStruct
	{
	public:
		class UCurveFloat* RollProbabilityCurve;                              // 0x28(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class UCurveFloat* ContinuousFireWeightCurve;                         // 0x30(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0xB8 (0xB8 - 0x0)
	// ScriptStruct Solarland.AmmonRecoilScope
	struct FAmmonRecoilScope
	{
	public:
		bool                                         EnableScopeVibration;                              // 0x0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         EnableCrossHairVibration;                          // 0x1(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         EnableScopeRoll;                                   // 0x2(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3209[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		float                                        ScopeVMaxDistanceOffSet;                           // 0x4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        ScopeVVibrationDuration;                           // 0x8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_320A[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class UCurveFloat* ScopeVSingleOffSetCurve;                           // 0x10(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class UCurveFloat* ScopeVContinuousOffSetCurve;                       // 0x18(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        ScopeVContinuousFallingDuration;                   // 0x20(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_320B[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class UCurveFloat* ScopeVContinuousFallingCurve;                      // 0x28(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        ScopeVContinuousFallingPointIndex;                 // 0x30(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        ScopeHMaxDistanceOffSet;                           // 0x34(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        ScopeHVibrationDuration;                           // 0x38(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_320C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class UCurveFloat* ScopeHSingleOffSetCurve;                           // 0x40(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class UCurveFloat* ScopeHContinuousOffSetCurve;                       // 0x48(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class UCurveFloat* ScopeHOffSetProbabilityCurve;                      // 0x50(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FAmmonRecoilCrossHair                 CrossHairScaleSettings;                            // 0x58(0x24)(Edit, NoDestructor, NativeAccessSpecifierPublic)
		uint8                                        Pad_320D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		struct FAmmonRecoilScopeRoll                 ScopeRollSettings;                                 // 0x80(0x38)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	};

	// 0x18 (0x40 - 0x28)
	// ScriptStruct Solarland.AmmonRecoilRollStruct
	struct FAmmonRecoilRollStruct : public FAmmonRecoilStruct
	{
	public:
		class UCurveFloat* RollProbabilityCurve;                              // 0x28(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        ADSRollCOP;                                        // 0x30(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_320E[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class UCurveFloat* ContinuousFireWeightCurve;                         // 0x38(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x8 (0x30 - 0x28)
	// ScriptStruct Solarland.AmmonVerticalRecoilStruct
	struct FAmmonVerticalRecoilStruct : public FAmmonRecoilStruct
	{
	public:
		class UCurveFloat* ContinuousFireWeightCurve;                         // 0x28(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x8 (0x30 - 0x28)
	// ScriptStruct Solarland.AmmonHorizontalRecoilStruct
	struct FAmmonHorizontalRecoilStruct : public FAmmonRecoilStruct
	{
	public:
		class UCurveVector* ContinuousFireInfoCurve;                           // 0x28(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x40 (0x40 - 0x0)
	// ScriptStruct Solarland.FootEffect
	struct FFootEffect
	{
	public:
		enum class EFootEffectType                   Type;                                              // 0x0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_320F[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class UParticleSystem* PSTemplate;                                        // 0x8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TSoftObjectPtr<class UParticleSystem>        PSTemplateSoft;                                    // 0x10(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FName                                  SocketName;                                        // 0x38(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x40 (0x40 - 0x0)
	// ScriptStruct Solarland.AttachedMeshInfo
	struct FAttachedMeshInfo
	{
	public:
		class UStaticMesh* MeshResource;                                      // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FName                                  SocketName;                                        // 0x8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FTransform                            TransformOffset;                                   // 0x10(0x30)(Edit, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	};

	// 0xC (0xC - 0x0)
	// ScriptStruct Solarland.AttributeSubSetting
	struct FAttributeSubSetting
	{
	public:
		bool                                         bUsingAttributeSub;                                // 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class EAttributeSubBehavior             Behavior;                                          // 0x1(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3210[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		int32                                        AttributeSubID;                                    // 0x4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        Value;                                             // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x18 (0x18 - 0x0)
	// ScriptStruct Solarland.BattlePassLevelInfo
	struct FBattlePassLevelInfo
	{
	public:
		uint8                                        Pad_3211[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0xC (0xC - 0x0)
	// ScriptStruct Solarland.BattlePassLevelItem
	struct FBattlePassLevelItem
	{
	public:
		uint8                                        Pad_3212[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x30 (0x30 - 0x0)
	// ScriptStruct Solarland.PromptElemInfo
	struct FPromptElemInfo
	{
	public:
		enum class EBattlePromptType                 Type;                                              // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3213[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		struct FVector2D                             ArrowPosition;                                     // 0x4(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector2D                             IconPosition;                                      // 0xC(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        ArrowColorFactor;                                  // 0x14(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        ArrowLengthFactor;                                 // 0x18(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        IconFactor;                                        // 0x1C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        Distance;                                          // 0x20(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        Angle;                                             // 0x24(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bBlocked;                                          // 0x28(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3214[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		int32                                        UVIdx;                                             // 0x2C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x10 (0x18 - 0x8)
	// ScriptStruct Solarland.BattleRoyalTimeLineDTRow
	struct FBattleRoyalTimeLineDTRow : public FTableRowBase
	{
	public:
		float                                        StartTime;                                         // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class EBattleRoyalTimeLineEnum          OperationType;                                     // 0xC(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3215[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		int32                                        Parameter;                                         // 0x10(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3216[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x64 (0x64 - 0x0)
	// ScriptStruct Solarland.BattleUpgradeEffectCategoryConfig
	struct FBattleUpgradeEffectCategoryConfig
	{
	public:
		int32                                        TitleLocalTextID;                                  // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FBattleUpgradeEffectCategoryColorSet  ColorSet;                                          // 0x4(0x60)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	};

	// 0xC (0xC - 0x0)
	// ScriptStruct Solarland.BattleUpgradeEffectConfigParam
	struct FBattleUpgradeEffectConfigParam
	{
	public:
		struct FGameplayTag                          GameplayTag;                                       // 0x0(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        Scale;                                             // 0x8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x88 (0x90 - 0x8)
	// ScriptStruct Solarland.BattleUpgradeEffectConfig
	struct FBattleUpgradeEffectConfig : public FTableRowBase
	{
	public:
		enum class ESolarTablesEnum_BattleUpgradeEffectType Type;                                              // 0x8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class EBattleUpgradeEffectCategory      Category;                                          // 0x9(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3217[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TSoftClassPtr<class UGameplayEffect>         EffectClass;                                       // 0x10(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<struct FBattleUpgradeEffectConfigParam> Parameters;                                        // 0x38(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FWrappedLocalTextID                   DescriptionLocalText;                              // 0x48(0x4)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3218[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TSoftObjectPtr<class UTexture2D>             Icon;                                              // 0x50(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                ShortNumberDisplayFormat;                          // 0x78(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FWrappedLocalTextID                   TitleLocalText;                                    // 0x88(0x4)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FWrappedLocalTextID                   IntroductionLocalText;                             // 0x8C(0x4)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x1C (0x1C - 0x0)
	// ScriptStruct Solarland.BombingZoneBomb
	struct FBombingZoneBomb
	{
	public:
		float                                        Radius;                                            // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        MaxDamage;                                         // 0x4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        MinDamage;                                         // 0x8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        VehicleMaxDamage;                                  // 0xC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        VehicleMinDamage;                                  // 0x10(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        InVehicleDamageScale;                              // 0x14(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        LandingTime;                                       // 0x18(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x60 (0x60 - 0x0)
	// ScriptStruct Solarland.BombingZone
	struct FBombingZone
	{
	public:
		int32                                        InstanceID;                                        // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        ConfigId;                                          // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        Radius;                                            // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        Duration;                                          // 0xC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        MinBomb;                                           // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        MaxBomb;                                           // 0x14(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector                               Location;                                          // 0x18(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FBombingZoneBomb                      Bomb;                                              // 0x24(0x1C)(ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		enum class EBombingZoneState                 State;                                             // 0x40(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3219[0x1F];                                    // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x10 (0x10 - 0x0)
	// ScriptStruct Solarland.BuffEffectActorElemList
	struct FBuffEffectActorElemList
	{
	public:
		TArray<class UBuffEffectActorElem*>          ElemList;                                          // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x68 (0x70 - 0x8)
	// ScriptStruct Solarland.ScreenEffectConfig
	struct FScreenEffectConfig : public FTableRowBase
	{
	public:
		class FString                                EffectType;                                        // 0x8(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                EffectName;                                        // 0x18(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                State;                                             // 0x28(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class EBuffEffectTagType                TagType;                                           // 0x38(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bMatReplace;                                       // 0x39(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class EBuffEffectDurationType           DurationType;                                      // 0x3A(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_321A[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		float                                        DurationTime;                                      // 0x3C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TSoftClassPtr<class USolarScreenEffectWidget> ScreenWidgetPath;                                  // 0x40(0x28)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class ESameScreenEffectHandleType       SameEffectHandleType;                              // 0x68(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_321B[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		float                                        MinIntervalForSameScreenEffect;                    // 0x6C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x68 (0x68 - 0x0)
	// ScriptStruct Solarland.BuffEffectActorParam
	struct FBuffEffectActorParam
	{
	public:
		TSoftObjectPtr<class UParticleSystem>        ActorParticlePath;                                 // 0x0(0x28)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FName                                  SocketName;                                        // 0x28(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector                               LocationOffset;                                    // 0x30(0xC)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FRotator                              RotationOffset;                                    // 0x3C(0xC)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		struct FVector                               Scale;                                             // 0x48(0xC)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class EAttachLocation                   LocationType;                                      // 0x54(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bAutoActivate;                                     // 0x55(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         Attached;                                          // 0x56(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bAbsoluteRotation;                                 // 0x57(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<class FName>                          ComponentTags;                                     // 0x58(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x30 (0x38 - 0x8)
	// ScriptStruct Solarland.BuffEffectTableRow
	struct FBuffEffectTableRow : public FTableRowBase
	{
	public:
		class FName                                  EffectType;                                        // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FName                                  EffectName;                                        // 0x10(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FName                                  State;                                             // 0x18(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bMatReplace;                                       // 0x20(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class EBuffEffectDurationType           DurationType;                                      // 0x21(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_321C[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		float                                        DurationTime;                                      // 0x24(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<struct FBuffEffectActorParam>         ActorEffectParams;                                 // 0x28(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x90 (0x90 - 0x0)
	// ScriptStruct Solarland.ScreenEffectInstance
	struct FScreenEffectInstance
	{
	public:
		uint8                                        Pad_321D[0x90];                                    // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x60 (0x60 - 0x0)
	// ScriptStruct Solarland.ScreenEffectGroup
	struct FScreenEffectGroup
	{
	public:
		TMap<int32, struct FScreenEffectInstance>    InstantScreenEffects;                              // 0x0(0x50)(NativeAccessSpecifierPublic)
		TArray<struct FScreenEffectInstance>         DurationScreenEffects;                             // 0x50(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x18 (0x18 - 0x0)
	// ScriptStruct Solarland.ScreenEffectWidgetCacheInfo
	struct FScreenEffectWidgetCacheInfo
	{
	public:
		TSubclassOf<class USolarScreenEffectWidget>  WidgetClass;                                       // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<class USolarScreenEffectWidget*>      WidgetInstances;                                   // 0x8(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x18 (0x18 - 0x0)
	// ScriptStruct Solarland.ActiveCameraShakeWithCurve
	struct FActiveCameraShakeWithCurve
	{
	public:
		class UCameraShakeWithCurve* ShakeInstance;                                     // 0x0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_321E[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x18 (0x18 - 0x0)
	// ScriptStruct Solarland.CameraShakeWithCurveTemplatePool
	struct FCameraShakeWithCurveTemplatePool
	{
	public:
		uint8                                        Pad_321F[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TArray<class UCameraShakeWithCurve*>         PooledShakes;                                      // 0x8(0x10)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x10 (0x10 - 0x0)
	// ScriptStruct Solarland.CameraShakeWithCurvePool
	struct FCameraShakeWithCurvePool
	{
	public:
		TArray<class UCameraShakeWithCurve*>         PooledShakes;                                      // 0x0(0x10)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x10 (0x10 - 0x0)
	// ScriptStruct Solarland.CruiseFormation
	struct FCruiseFormation
	{
	public:
		TArray<struct FVector>                       LocationList;                                      // 0x0(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x10 (0x10 - 0x0)
	// ScriptStruct Solarland.EchelonFormation
	struct FEchelonFormation
	{
	public:
		TArray<struct FVector>                       LocationList;                                      // 0x0(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x8 (0x8 - 0x0)
	// ScriptStruct Solarland.SettlePageParam
	struct FSettlePageParam
	{
	public:
		int32                                        WeaponExpSettlmentNum;                             // 0x0(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         IsRankFight;                                       // 0x4(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3220[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x10 (0x10 - 0x0)
	// ScriptStruct Solarland.DataManagerConfig
	struct FDataManagerConfig
	{
	public:
		class UDataTable* GeneralDataTable;                                  // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class UDataTable* DataTable;                                         // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x28 (0x28 - 0x0)
	// ScriptStruct Solarland.FinalsBGMData
	struct FFinalsBGMData
	{
	public:
		bool                                         bEnableFinalsBGM;                                  // 0x0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        FinalsBGMSafeAreaIndex;                            // 0x1(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        FinalsBGMPlayTeamCount;                            // 0x2(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        FinalsBGMStopTeamCount;                            // 0x3(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3221[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class FString                                FinalsBGMName_Play;                                // 0x8(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                FinalsBGMName_Stop;                                // 0x18(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x20 (0x20 - 0x0)
	// ScriptStruct Solarland.SCMElementMapConfig
	struct FSCMElementMapConfig
	{
	public:
		struct FSoftObjectPath                       ElementLevel;                                      // 0x0(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         LoadWithLevel;                                     // 0x18(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class ELevelLoadType                    LoadType;                                          // 0x19(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3222[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x80 (0x80 - 0x0)
	// ScriptStruct Solarland.SCMMapConfig
	struct FSCMMapConfig
	{
	public:
		class FString                                Desc;                                              // 0x0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FSoftObjectPath                       LevelMap;                                          // 0x10(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        MiniMapId;                                         // 0x28(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         IsStreaming;                                       // 0x2C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3223[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TMap<class FString, struct FSCMElementMapConfig> ElementGroups;                                     // 0x30(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	};

	// 0x8 (0x8 - 0x0)
	// ScriptStruct Solarland.AirDropSkillData
	struct FAirDropSkillData
	{
	public:
		float                                        GameSeconds;                                       // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        OutcomeID;                                         // 0x4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x10 (0x10 - 0x0)
	// ScriptStruct Solarland.AirDropSkillDatas
	struct FAirDropSkillDatas
	{
	public:
		TArray<struct FAirDropSkillData>             OutcomeSetting;                                    // 0x0(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x1D8 (0x1D8 - 0x0)
	// ScriptStruct Solarland.MissileSwarmSkillConfig
	struct FMissileSwarmSkillConfig
	{
	public:
		bool                                         bShowDebug;                                        // 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bAimDetectWorldStatic;                             // 0x1(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3224[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		struct FVector                               BlockDetectSpace;                                  // 0x4(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector                               BlockDetectSpaceCenterOffset;                      // 0x10(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FIntPoint                             MissileSumMatrix;                                  // 0x1C(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3225[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		struct FRuntimeFloatCurve                    AimDistanceCurve;                                  // 0x28(0x88)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
		float                                        FallingAimMaxAddition;                             // 0xB0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3226[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		struct FRuntimeFloatCurve                    FallingAimAdditionPitchCurve;                      // 0xB8(0x88)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
		struct FRuntimeFloatCurve                    FallingAimScalePitchCurve;                         // 0x140(0x88)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
		struct FVector2D                             AimField;                                          // 0x1C8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        AimUpwardDistance;                                 // 0x1D0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        AimDownwardDistance;                               // 0x1D4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x10 (0x10 - 0x0)
	// ScriptStruct Solarland.TacticalDodgeDirectionConfig
	struct FTacticalDodgeDirectionConfig
	{
	public:
		class UAnimMontage* Montage;                                           // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class ECamShakeType                     CameraShake;                                       // 0x8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3227[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x8 (0x10 - 0x8)
	// ScriptStruct Solarland.TacticalDodgeParams
	struct FTacticalDodgeParams : public FGameplayAbilityTargetData
	{
	public:
		int32                                        MontageIndex;                                      // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        FaceYaw;                                           // 0xC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x60 (0x60 - 0x0)
	// ScriptStruct Solarland.BaseFollowExtentByTag
	struct FBaseFollowExtentByTag
	{
	public:
		struct FGameplayTagRequirements              TagRequirements;                                   // 0x0(0x50)(Edit, NativeAccessSpecifierPublic)
		struct FVector2D                             BaseFollowTriggerExtent;                           // 0x50(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector2D                             BaseFollowStopExtent;                              // 0x58(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x48 (0x48 - 0x0)
	// ScriptStruct Solarland.WeaponAssistAimTargetConfig
	struct FWeaponAssistAimTargetConfig
	{
	public:
		struct FVector2D                             BaseFollowTriggerExtent;                           // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector2D                             BaseFollowStopExtent;                              // 0x8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<struct FBaseFollowExtentByTag>        BaseFollowExtentByTags;                            // 0x10(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector2D                             TargetVelocityFollowTriggerExtent;                 // 0x20(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector2D                             LockAimingExtent;                                  // 0x28(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector2D                             GlobalSensitivityScaleTriggerExtent;               // 0x30(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3228[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0xD8 (0xD8 - 0x0)
	// ScriptStruct Solarland.CharacterAssistAimTargetConfig
	struct FCharacterAssistAimTargetConfig
	{
	public:
		struct FWeaponAssistAimTargetConfig          Standing;                                          // 0x0(0x48)(Edit, NativeAccessSpecifierPublic)
		struct FWeaponAssistAimTargetConfig          Crouching;                                         // 0x48(0x48)(Edit, NativeAccessSpecifierPublic)
		struct FWeaponAssistAimTargetConfig          Crawling;                                          // 0x90(0x48)(Edit, NativeAccessSpecifierPublic)
	};

	// 0x8 (0x8 - 0x0)
	// ScriptStruct Solarland.CharacterBodyScaleConfig
	struct FCharacterBodyScaleConfig
	{
	public:
		float                                        CapsuleHeight;                                     // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        MeshOriginHeight;                                  // 0x4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x88 (0x88 - 0x0)
	// ScriptStruct Solarland.ParticleSystemContent
	struct FParticleSystemContent
	{
	public:
		struct FActorParticleEffectSpawnInfo         SpawnInfo;                                         // 0x0(0x70)(Edit, NativeAccessSpecifierPublic)
		bool                                         bStopOnEnd;                                        // 0x70(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3229[0x17];                                    // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x20 (0x20 - 0x0)
	// ScriptStruct Solarland.ActorEffectContent
	struct FActorEffectContent
	{
	public:
		TSubclassOf<class UActorEffect>              ActorEffectClass;                                  // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class EActorEffectAffectedActorType     AffectedActorType;                                 // 0x8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bHideFX;                                           // 0x9(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_322A[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		struct FGameplayTag                          VisibilityFlagTag;                                 // 0xC(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_322B[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x14 (0x14 - 0x0)
	// ScriptStruct Solarland.BuffEffectContent
	struct FBuffEffectContent
	{
	public:
		class FName                                  BuffEffectID;                                      // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bStopOnEnd;                                        // 0x8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_322C[0xB];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x8 (0x8 - 0x0)
	// ScriptStruct Solarland.SoundContent
	struct FSoundContent
	{
	public:
		class FName                                  SoundGroupName;                                    // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0xA8 (0xA8 - 0x0)
	// ScriptStruct Solarland.CueContent
	struct FCueContent
	{
	public:
		enum class ECueContentPlayTiming             PlayTiming;                                        // 0x0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_322D[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class FName                                  CustomEvent;                                       // 0x4(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        VisibleTargetFlag;                                 // 0xC(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_322E[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		struct FGameplayTagRequirements              PlayTagRequirements;                               // 0x10(0x50)(Edit, NativeAccessSpecifierPublic)
		TArray<struct FActorEffectContent>           ActorEffectContents;                               // 0x60(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<struct FBuffEffectContent>            BuffEffectContents;                                // 0x70(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<struct FSoundContent>                 SoundContents;                                     // 0x80(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<struct FParticleSystemContent>        ParticleSystemContents;                            // 0x90(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_322F[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x28 (0x28 - 0x0)
	// ScriptStruct Solarland.CharacterSpecializedComponentInfo
	struct FCharacterSpecializedComponentInfo
	{
	public:
		TArray<enum class ENetRole>                  ValidRoles;                                        // 0x0(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bEnableReplication;                                // 0x10(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3230[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TArray<TSubclassOf<class UActorComponent>>   ComponentClasses;                                  // 0x18(0x10)(Edit, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x10 (0x10 - 0x0)
	// ScriptStruct Solarland.CharacterSpecializedComponentInfos
	struct FCharacterSpecializedComponentInfos
	{
	public:
		TArray<struct FCharacterSpecializedComponentInfo> ComponentInfos;                                    // 0x0(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x10 (0x10 - 0x0)
	// ScriptStruct Solarland.MontageDataByCharacterSkin
	struct FMontageDataByCharacterSkin
	{
	public:
		int32                                        CharacterSkinID;                                   // 0x0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3231[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class UAnimMontage* Montage;                                           // 0x8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x20 (0x20 - 0x0)
	// ScriptStruct Solarland.MontageDataByCharacter
	struct FMontageDataByCharacter
	{
	public:
		int32                                        CharacterId;                                       // 0x0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3232[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class UAnimMontage* Montage;                                           // 0x8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<struct FMontageDataByCharacterSkin>   SkinSpecificData;                                  // 0x10(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x40 (0x48 - 0x8)
	// ScriptStruct Solarland.CharacterMontageMappingData
	struct FCharacterMontageMappingData : public FTableRowBase
	{
	public:
		struct FGameplayTag                          MontageTag;                                        // 0x8(0x8)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class UAnimMontage* MaleMontage;                                       // 0x10(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class UAnimMontage* FemaleMontage;                                     // 0x18(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<struct FMontageDataByCharacter>       CharacterSpecificData;                             // 0x20(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class UDataTable* WeaponSpecificDataTable;                           // 0x30(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3233[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x8 (0x50 - 0x48)
	// ScriptStruct Solarland.EmotionMontageMappingData
	struct FEmotionMontageMappingData : public FCharacterMontageMappingData
	{
	public:
		bool                                         bShowWeapon;                                       // 0x48(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3234[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		float                                        CameraZOffset;                                     // 0x4C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x18 (0x18 - 0x0)
	// ScriptStruct Solarland.MontageDataByWeaponSkin
	struct FMontageDataByWeaponSkin
	{
	public:
		int32                                        WeaponSkinID;                                      // 0x0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3235[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class UAnimMontage* MaleMontage;                                       // 0x8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class UAnimMontage* FemaleMontage;                                     // 0x10(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x28 (0x30 - 0x8)
	// ScriptStruct Solarland.MontageDataByWeapon
	struct FMontageDataByWeapon : public FTableRowBase
	{
	public:
		int32                                        Weaponid;                                          // 0x8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3236[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class UAnimMontage* MaleMontage;                                       // 0x10(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class UAnimMontage* FemaleMontage;                                     // 0x18(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<struct FMontageDataByWeaponSkin>      SkinSpecificData;                                  // 0x20(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x80 (0x80 - 0x0)
	// ScriptStruct Solarland.ChildActorOrnamentConfig
	struct FChildActorOrnamentConfig
	{
	public:
		struct FSoftClassPath                        OrnamentRes;                                       // 0x0(0x18)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		class FName                                  OrnamentAttachSocket;                              // 0x18(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		struct FTransform                            OrnamentRelativeTransform;                         // 0x20(0x30)(Edit, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
		struct FSoftObjectPath                       OrnamentVisibilityConfig;                          // 0x50(0x18)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		TArray<class FName>                          OrnamentComponentTags;                             // 0x68(0x10)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		uint8                                        Pad_3237[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0xA0 (0xA0 - 0x0)
	// ScriptStruct Solarland.SkeletalMeshOrnamentConfig
	struct FSkeletalMeshOrnamentConfig
	{
	public:
		struct FSoftObjectPath                       OrnamentRes;                                       // 0x0(0x18)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		struct FSoftClassPath                        OrnamentABPRes;                                    // 0x18(0x18)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		class FName                                  OrnamentAttachSocket;                              // 0x30(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		uint8                                        Pad_3238[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		struct FTransform                            OrnamentRelativeTransform;                         // 0x40(0x30)(Edit, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
		struct FSoftObjectPath                       OrnamentVisibilityConfig;                          // 0x70(0x18)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		TArray<class FName>                          OrnamentComponentTags;                             // 0x88(0x10)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		uint8                                        Pad_3239[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x80 (0x80 - 0x0)
	// ScriptStruct Solarland.StaticMeshOrnamentConfig
	struct FStaticMeshOrnamentConfig
	{
	public:
		struct FSoftObjectPath                       OrnamentRes;                                       // 0x0(0x18)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		class FName                                  OrnamentAttachSocket;                              // 0x18(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		struct FTransform                            OrnamentRelativeTransform;                         // 0x20(0x30)(Edit, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
		struct FSoftObjectPath                       OrnamentVisibilityConfig;                          // 0x50(0x18)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		TArray<class FName>                          OrnamentComponentTags;                             // 0x68(0x10)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		uint8                                        Pad_323A[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x88 (0x88 - 0x0)
	// ScriptStruct Solarland.ChooseWeaponItemData
	struct FChooseWeaponItemData
	{
	public:
		class FName                                  RowName;                                           // 0x0(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        Weaponid;                                          // 0x8(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        WeaponTypeId;                                      // 0xC(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        WeaponSkinID;                                      // 0x10(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bCollected;                                        // 0x14(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_323B[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TArray<int32>                                AvailableScopes;                                   // 0x18(0x10)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        DefaultScope;                                      // 0x28(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_323C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TSet<enum class EWeaponEquipSlot>            SelectedSlots;                                     // 0x30(0x50)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
		int32                                        SelectedScope;                                     // 0x80(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_323D[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x4 (0x4 - 0x0)
	// ScriptStruct Solarland.ChooseWeaponItemState
	struct FChooseWeaponItemState
	{
	public:
		bool                                         bCollected;                                        // 0x0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bSelected;                                         // 0x1(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bSelectedBySlot1;                                  // 0x2(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bSelectedBySlot2;                                  // 0x3(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x10 (0x10 - 0x0)
	// ScriptStruct Solarland.NodeElement
	struct FNodeElement
	{
	public:
		class UWidget* Widget;                                            // 0x0(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class ESlateVisibility                  Visible;                                           // 0x8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bIsContainer;                                      // 0x9(0x1)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_323E[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x28 (0x28 - 0x0)
	// ScriptStruct Solarland.NodeContainer
	struct FNodeContainer
	{
	public:
		struct FNodeElement                          ThisNode;                                          // 0x0(0x10)(Edit, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
		bool                                         bRoot;                                             // 0x10(0x1)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_323F[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TArray<struct FNodeElement>                  ChildsNode;                                        // 0x18(0x10)(Edit, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x18 (0x18 - 0x0)
	// ScriptStruct Solarland.NodeContainerItem
	struct FNodeContainerItem
	{
	public:
		class UCanvasPanel* RootContainerPanel;                                // 0x0(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<struct FNodeContainer>                ContainerArray;                                    // 0x8(0x10)(Edit, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x10 (0x10 - 0x0)
	// ScriptStruct Solarland.StateItemStruct
	struct FStateItemStruct
	{
	public:
		class UWidget* CrosshairChildWidget;                              // 0x0(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class ESlateVisibility                  VisibilityType;                                    // 0x8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3240[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x18 (0x18 - 0x0)
	// ScriptStruct Solarland.StateMapItemStruct
	struct FStateMapItemStruct
	{
	public:
		TArray<struct FStateItemStruct>              ChildWidgetConfigList;                             // 0x0(0x10)(Edit, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bLoadChildWidgetTool;                              // 0x10(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3241[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x48 (0x48 - 0x0)
	// ScriptStruct Solarland.UICrossHairSpreadStruct
	struct FUICrossHairSpreadStruct
	{
	public:
		class UWidget* TargetWidget;                                      // 0x0(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class ESpreadType                       SpreadType;                                        // 0x8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bPosition;                                         // 0x9(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3242[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		float                                        Angle;                                             // 0xC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         Pos_UseCustomizeFunc;                              // 0x10(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bScale;                                            // 0x11(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3243[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		struct FVector2D                             ScaleFactor;                                       // 0x14(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         Scale_UseCustomizeFunc;                            // 0x1C(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bRenderAngle;                                      // 0x1D(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3244[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		float                                        RenderAngleFactor;                                 // 0x20(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         Angle_UseCustomizeFunc;                            // 0x24(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3245[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		struct FVector2D                             OrginalVector;                                     // 0x28(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		struct FVector2D                             OrginalScale;                                      // 0x30(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		float                                        OrginalAngle;                                      // 0x38(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		struct FVector2D                             Dir;                                               // 0x3C(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		uint8                                        Pad_3246[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x28 (0x28 - 0x0)
	// ScriptStruct Solarland.UICrossHairAimColorStruct
	struct FUICrossHairAimColorStruct
	{
	public:
		class UImage* TargetImg;                                         // 0x0(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FLinearColor                          TargetColor;                                       // 0x8(0x10)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3247[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x4 (0x4 - 0x0)
	// ScriptStruct Solarland.CrosshairLayout
	struct FCrosshairLayout
	{
	public:
		float                                        InitSpread;                                        // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x30 (0x30 - 0x0)
	// ScriptStruct Solarland.CrosshairSprite
	struct FCrosshairSprite
	{
	public:
		struct FSoftObjectPath                       Normal;                                            // 0x0(0x18)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FSoftObjectPath                       Energy;                                            // 0x18(0x18)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x18 (0x20 - 0x8)
	// ScriptStruct Solarland.CustomNoticeImageRow
	struct FCustomNoticeImageRow : public FTableRowBase
	{
	public:
		class FString                                Remark;                                            // 0x8(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class UTexture2D* NoticeIcon;                                        // 0x18(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x38 (0x40 - 0x8)
	// ScriptStruct Solarland.CustomNoticeRow
	struct FCustomNoticeRow : public FTableRowBase
	{
	public:
		class FString                                Remark;                                            // 0x8(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        NoticeText;                                        // 0x18(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class ECustomNoticeType                 NoticeType;                                        // 0x1C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3248[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		float                                        NoticeTime;                                        // 0x20(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class ECustomNoticeColor                NoticeColor;                                       // 0x24(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3249[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TSubclassOf<class UUINoticeBase>             NoticeClass;                                       // 0x28(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                NoticeIcon;                                        // 0x30(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x1 (0x1 - 0x0)
	// ScriptStruct Solarland.CustomNoticeID
	struct FCustomNoticeID
	{
	public:
		uint8                                        Pad_324A[0x1];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x1C (0x1C - 0x0)
	// ScriptStruct Solarland.BoxChargingInfo
	struct FBoxChargingInfo
	{
	public:
		uint8                                        Pad_324B[0x1C];                                    // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x28 (0x28 - 0x0)
	// ScriptStruct Solarland.TerminatorNotifyUIConfig
	struct FTerminatorNotifyUIConfig
	{
	public:
		int32                                        LocalizationID;                                    // 0x0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_324C[0x14];                                    // Fixing Size After Last Property  [ Dumper-7 ]
		TSubclassOf<class UUINoticeBase>             TerminatorNotifyUI;                                // 0x18(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class ECustomNoticeType                 NoticeType;                                        // 0x20(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_324D[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		float                                        NoticeTime;                                        // 0x24(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x50 (0x50 - 0x0)
	// ScriptStruct Solarland.StaticMeshOverride
	struct FStaticMeshOverride
	{
	public:
		TSoftObjectPtr<class UStaticMesh>            MeshOverride;                                      // 0x0(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TSoftObjectPtr<class UMaterialInstance>      MaterialOverride;                                  // 0x28(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0xA0 (0xA0 - 0x0)
	// ScriptStruct Solarland.DuckRollingCharacterHitConfig
	struct FDuckRollingCharacterHitConfig
	{
	public:
		float                                        MinSelfSpeed;                                      // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_324E[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TSubclassOf<class USolarCharacterGameplayAbility> EnableCharacterHitAbility;                         // 0x8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class UParticleSystem* SpeedEffect;                                       // 0x10(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_324F[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		struct FTransform                            SpeedEffectRelativeTransform;                      // 0x20(0x30)(Edit, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		float                                        PushUpAngle;                                       // 0x50(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        UpBoundingRatio;                                   // 0x54(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector                               PushBoxExtent;                                     // 0x58(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3250[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class UCurveFloat* PushSpeedCurve;                                    // 0x68(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bTeleportTargetOnPush;                             // 0x70(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3251[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		float                                        MinRelativeSpeedForDamage;                         // 0x74(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        MinIntervalForDamage;                              // 0x78(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        BaseDamage;                                        // 0x7C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class UCurveFloat* RelativeSpeedToDamageMultiplierCurve;              // 0x80(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class UParticleSystem* HitEffect;                                         // 0x88(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                HitSoundEvent;                                     // 0x90(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x8 (0x10 - 0x8)
	// ScriptStruct Solarland.EmojiBubbleConfig
	struct FEmojiBubbleConfig : public FTableRowBase
	{
	public:
		TSubclassOf<class USolarUserWidget>          EmojiClassType;                                    // 0x8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x8 (0x8 - 0x0)
	// ScriptStruct Solarland.BoxBurstItemConfig
	struct FBoxBurstItemConfig
	{
	public:
		class UDataTable* ConfigTable;                                       // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x30 (0x38 - 0x8)
	// ScriptStruct Solarland.BurstItemSplitConfig
	struct FBurstItemSplitConfig : public FTableRowBase
	{
	public:
		int32                                        ID;                                                // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3252[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TArray<int32>                                Piles;                                             // 0x10(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<float>                                ModelScale;                                        // 0x20(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        MaxPileNum;                                        // 0x30(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3253[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x8 (0x8 - 0x0)
	// ScriptStruct Solarland.ExpItemReduceRate
	struct FExpItemReduceRate
	{
	public:
		class UDataTable* ConfigTable;                                       // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x8 (0x10 - 0x8)
	// ScriptStruct Solarland.ExpItemReduceRateConfig
	struct FExpItemReduceRateConfig : public FTableRowBase
	{
	public:
		int32                                        DeathCount;                                        // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        Rate;                                              // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x10 (0x10 - 0x0)
	// ScriptStruct Solarland.ExpItemConfig
	struct FExpItemConfig
	{
	public:
		class UDataTable* ConfigTable;                                       // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class UDataTable* KilledConfigTable;                                 // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x10 (0x18 - 0x8)
	// ScriptStruct Solarland.ExpItemCountConfig
	struct FExpItemCountConfig : public FTableRowBase
	{
	public:
		int32                                        Lv;                                                // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        ExpItemCount;                                      // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        ShieldMatMaxCount;                                 // 0x10(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3254[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x30 (0x30 - 0x0)
	// ScriptStruct Solarland.FeedbackSingleData
	struct FFeedbackSingleData
	{
	public:
		class UUserWidget* AnimationWidget;                                   // 0x0(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FName                                  AnimationName;                                     // 0x8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        AnimationPlaySpeed;                                // 0x10(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        AnimationStartTime;                                // 0x14(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        AnimationAgainStartTime;                           // 0x18(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        AnimationLoopNumber;                               // 0x1C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FName                                  AudioName;                                         // 0x20(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class EAnimationType                    AnimationType;                                     // 0x28(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3255[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x38 (0x40 - 0x8)
	// ScriptStruct Solarland.SCMJobManagerRow
	struct FSCMJobManagerRow : public FTableRowBase
	{
	public:
		class FString                                Side;                                              // 0x8(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Job;                                               // 0x18(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        Count;                                             // 0x28(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        MatchCount;                                        // 0x2C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Desc;                                              // 0x30(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x10 (0x10 - 0x0)
	// ScriptStruct Solarland.SElementLevelStreaming
	struct FSElementLevelStreaming
	{
	public:
		bool                                         LoadWithLevel;                                     // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class ELevelLoadType                    LoadType;                                          // 0x1(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3256[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class ULevelStreamingDynamic* LevelStreamingDynamic;                             // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x68 (0x68 - 0x0)
	// ScriptStruct Solarland.LoadingScreenLevelData
	struct FLoadingScreenLevelData
	{
	public:
		struct FVector                               BackupLevelStreamingLocation;                      // 0x0(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3257[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TSet<struct FSoftObjectPath>                 LockupLevels;                                      // 0x10(0x50)(Edit, NativeAccessSpecifierPublic)
		float                                        LockupLevelMaxSquaredXYDistance;                   // 0x60(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3258[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x28 (0x28 - 0x0)
	// ScriptStruct Solarland.VibratePlayParams
	struct FVibratePlayParams
	{
	public:
		class FString                                ClipToPlay;                                        // 0x0(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        Duration;                                          // 0x10(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        Loop;                                              // 0x14(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        Priority;                                          // 0x18(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        Interval;                                          // 0x1C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        Amplitude;                                         // 0x20(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3259[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x18 (0x18 - 0x0)
	// ScriptStruct Solarland.ChargeVibratePlayParams
	struct FChargeVibratePlayParams
	{
	public:
		float                                        ChargingIntervalTime;                              // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_325A[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class UCurveFloat* ChargingFactorCurve;                               // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class UCurveFloat* FireFactorCurve;                                   // 0x10(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x78 (0x80 - 0x8)
	// ScriptStruct Solarland.WeaponVibrateDTRow
	struct FWeaponVibrateDTRow : public FTableRowBase
	{
	public:
		class FString                                WeaponDesc;                                        // 0x8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TMap<enum class EWeaponVibrateType, struct FVibratePlayParams> WeaponVibrateMap;                                  // 0x18(0x50)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
		struct FChargeVibratePlayParams              ChargeVibrateData;                                 // 0x68(0x18)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	};

	// 0x50 (0x50 - 0x0)
	// ScriptStruct Solarland.VibrateIntensityPlayParams
	struct FVibrateIntensityPlayParams
	{
	public:
		TMap<enum class EGameplayVibrateIntensity, struct FVibratePlayParams> IntensityMap;                                      // 0x0(0x50)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	};

	// 0x18 (0x18 - 0x0)
	// ScriptStruct Solarland.SCMRankListMulticast
	struct FSCMRankListMulticast
	{
	public:
		int32                                        BeginRank;                                         // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        EndRank;                                           // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		FMulticastInlineDelegateProperty_            RankListChangeMulticast;                           // 0x8(0x10)(ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	};

	// 0x1C (0x1C - 0x0)
	// ScriptStruct Solarland.SCMRankEventHandle
	struct FSCMRankEventHandle
	{
	public:
		int32                                        BeginRank;                                         // 0x0(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        EndRank;                                           // 0x4(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		FDelegateProperty_                           RankListChangeEvent;                               // 0x8(0x10)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)
		int32                                        Index;                                             // 0x18(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x20 (0x20 - 0x0)
	// ScriptStruct Solarland.SCMChangeDataArray
	struct FSCMChangeDataArray
	{
	public:
		TArray<enum class ESCMDataChangeType>        ChangeType;                                        // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<uint32>                               ChangeIndexArray;                                  // 0x10(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x20 (0x20 - 0x0)
	// ScriptStruct Solarland.SCMChangeDataMap
	struct FSCMChangeDataMap
	{
	public:
		TArray<enum class ESCMDataChangeType>        ChangeType;                                        // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<class FString>                        ChangeKeyArray;                                    // 0x10(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0xF0 (0xF0 - 0x0)
	// ScriptStruct Solarland.HostChangeData
	struct FHostChangeData
	{
	public:
		TMap<class FString, enum class ESCMDataChangeType> DataChangeMap;                                     // 0x0(0x50)(NativeAccessSpecifierPublic)
		TMap<class FString, struct FSCMChangeDataArray> ArrayChangeMap;                                    // 0x50(0x50)(NativeAccessSpecifierPublic)
		TMap<class FString, struct FSCMChangeDataMap> MapChangeMap;                                      // 0xA0(0x50)(NativeAccessSpecifierPublic)
	};

	// 0x18 (0x18 - 0x0)
	// ScriptStruct Solarland.SCMSaveDataBase
	struct FSCMSaveDataBase
	{
	public:
		class FString                                Name;                                              // 0x0(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class ESCMDataType                      Type;                                              // 0x10(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class ESCMDataReplicateType             RepType;                                           // 0x11(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_325B[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x8 (0x20 - 0x18)
	// ScriptStruct Solarland.SCMSaveData
	struct FSCMSaveData : public FSCMSaveDataBase
	{
	public:
		uint8                                        Pad_325C[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x10 (0x28 - 0x18)
	// ScriptStruct Solarland.SCMArrayData
	struct FSCMArrayData : public FSCMSaveDataBase
	{
	public:
		uint8                                        Pad_325D[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x50 (0x68 - 0x18)
	// ScriptStruct Solarland.SCMMapData
	struct FSCMMapData : public FSCMSaveDataBase
	{
	public:
		uint8                                        Pad_325E[0x50];                                    // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x488 (0x488 - 0x0)
	// ScriptStruct Solarland.SCMHostData
	struct FSCMHostData
	{
	public:
		struct FHostChangeData                       DataChangeToGlobal;                                // 0x0(0xF0)(NativeAccessSpecifierPublic)
		struct FHostChangeData                       DataChangeToSide;                                  // 0xF0(0xF0)(NativeAccessSpecifierPublic)
		struct FHostChangeData                       DataChangeToSelf;                                  // 0x1E0(0xF0)(NativeAccessSpecifierPublic)
		TMap<class FString, struct FSCMSaveData>     DataMap;                                           // 0x2D0(0x50)(NativeAccessSpecifierPublic)
		TMap<class FString, struct FSCMArrayData>    ArrayDataMap;                                      // 0x320(0x50)(NativeAccessSpecifierPublic)
		TMap<class FString, struct FSCMMapData>      MapDataMap;                                        // 0x370(0x50)(NativeAccessSpecifierPublic)
		uint8                                        Pad_325F[0xA0];                                    // Fixing Size After Last Property  [ Dumper-7 ]
		FMulticastInlineDelegateProperty_            SCMDataChangeDelegate;                             // 0x460(0x10)(ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
		class FString                                Name;                                              // 0x470(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class ESCMHostType                      HostType;                                          // 0x480(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3260[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x38 (0x38 - 0x0)
	// ScriptStruct Solarland.SCMRepData
	struct FSCMRepData
	{
	public:
		class FString                                Name;                                              // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class ESCMDataType                      Type;                                              // 0x10(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class ESCMDataChangeType                DataChangeType;                                    // 0x11(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3261[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		int32                                        VInt;                                              // 0x14(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        VFloat;                                            // 0x18(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector_NetQuantize100                VVector;                                           // 0x1C(0xC)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                VString;                                           // 0x28(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x78 (0x78 - 0x0)
	// ScriptStruct Solarland.SCMRepDataArray
	struct FSCMRepDataArray
	{
	public:
		class FString                                Name;                                              // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class ESCMDataType                      Type;                                              // 0x10(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3262[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TArray<enum class ESCMDataChangeType>        ChangeTypeArray;                                   // 0x18(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<uint32>                               ChangeIndexArray;                                  // 0x28(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<int32>                                VInt;                                              // 0x38(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<float>                                VFloat;                                            // 0x48(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<struct FVector_NetQuantize100>        VVector;                                           // 0x58(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<class FString>                        VString;                                           // 0x68(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x78 (0x78 - 0x0)
	// ScriptStruct Solarland.SCMRepDataMap
	struct FSCMRepDataMap
	{
	public:
		class FString                                Name;                                              // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class ESCMDataType                      Type;                                              // 0x10(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3263[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TArray<enum class ESCMDataChangeType>        ChangeTypeArray;                                   // 0x18(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<class FString>                        KeyArray;                                          // 0x28(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<int32>                                VInt;                                              // 0x38(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<float>                                VFloat;                                            // 0x48(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<struct FVector_NetQuantize100>        VVector;                                           // 0x58(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<class FString>                        VString;                                           // 0x68(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x48 (0x48 - 0x0)
	// ScriptStruct Solarland.SCMReplicateHostData
	struct FSCMReplicateHostData
	{
	public:
		enum class ESCMHostType                      HostType;                                          // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3264[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class FString                                HostID;                                            // 0x8(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<struct FSCMRepData>                   RepDataArray;                                      // 0x18(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<struct FSCMRepDataArray>              RepArrDataArray;                                   // 0x28(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<struct FSCMRepDataMap>                RepMapDataArray;                                   // 0x38(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x80 (0x88 - 0x8)
	// ScriptStruct Solarland.SCMDataBoardRow
	struct FSCMDataBoardRow : public FTableRowBase
	{
	public:
		enum class ESCMDataType                      Type;                                              // 0x8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class ESCMDataSetType                   DataSetType;                                       // 0x9(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3265[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class FString                                Default;                                           // 0x10(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<class FString>                        DefaultArray;                                      // 0x20(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TMap<class FString, class FString>           DefaultMap;                                        // 0x30(0x50)(Edit, NativeAccessSpecifierPublic)
		enum class ESCMHostType                      HostType;                                          // 0x80(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class ESCMDataReplicateType             ReplicateType;                                     // 0x81(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class ESCMDataGatherType_Settle         SettleGatherType;                                  // 0x82(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class ESCMDataRankType                  Rank;                                              // 0x83(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3266[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x10 (0x98 - 0x88)
	// ScriptStruct Solarland.SCMGeneralDataBoardRow
	struct FSCMGeneralDataBoardRow : public FSCMDataBoardRow
	{
	public:
		enum class EStatisticsType                   MapNameType;                                       // 0x88(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3267[0xF];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0xC (0xC - 0x0)
	// ScriptStruct Solarland.AssitLockBoneWeight
	struct FAssitLockBoneWeight
	{
	public:
		class FName                                  BoneName;                                          // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        BoneWeight;                                        // 0x8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x18 (0x18 - 0x0)
	// ScriptStruct Solarland.WeaponAttributeGameplayTags
	struct FWeaponAttributeGameplayTags
	{
	public:
		struct FGameplayTag                          Spread;                                            // 0x0(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FGameplayTag                          HorizontalRecoil;                                  // 0x8(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FGameplayTag                          VerticalRecoil;                                    // 0x10(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x28 (0x30 - 0x8)
	// ScriptStruct Solarland.GuidanceConditionTableRow
	struct FGuidanceConditionTableRow : public FTableRowBase
	{
	public:
		uint8                                        TriggerType;                                       // 0x8(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3268[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TArray<class FString>                        Parameters;                                        // 0x10(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Description;                                       // 0x20(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x10 (0x18 - 0x8)
	// ScriptStruct Solarland.GyroscopeDeviceModel
	struct FGyroscopeDeviceModel : public FTableRowBase
	{
	public:
		class FString                                NotHavingGyroscopeDeviceModelName;                 // 0x8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x18 (0x20 - 0x8)
	// ScriptStruct Solarland.GyroscopeSensitivity
	struct FGyroscopeSensitivity : public FTableRowBase
	{
	public:
		class FString                                Axle;                                              // 0x8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        GyroscopeSensitivityArray;                         // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3269[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x8 (0x10 - 0x8)
	// ScriptStruct Solarland.GyroscopeDTRow
	struct FGyroscopeDTRow : public FTableRowBase
	{
	public:
		int32                                        ID;                                                // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        GyroscopeFactor;                                   // 0xC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x20 (0x20 - 0x0)
	// ScriptStruct Solarland.PlayerSelectInfo
	struct FPlayerSelectInfo
	{
	public:
		class ASolarPlayerState* Player;                                            // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        PlayerPos;                                         // 0x8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        CharacterId;                                       // 0xC(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        SkinId;                                            // 0x10(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        HeroExpLevel;                                      // 0x14(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         HasConfirm;                                        // 0x18(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_326A[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		float                                        PlayerSelectTime;                                  // 0x1C(0x4)(ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x8 (0x8 - 0x0)
	// ScriptStruct Solarland.AIPickHeroInfo
	struct FAIPickHeroInfo
	{
	public:
		int32                                        CharacterId;                                       // 0x0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        SkinId;                                            // 0x4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x50 (0x50 - 0x0)
	// ScriptStruct Solarland.ServerMoveData
	struct FServerMoveData
	{
	public:
		float                                        Timestamp;                                         // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_326B[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		int64                                        ServerTimeStamp;                                   // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector                               Acceleration;                                      // 0x10(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector                               Velocity;                                          // 0x1C(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector                               Loction;                                           // 0x28(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        CompressedMoveFlags;                               // 0x34(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        RollByte;                                          // 0x35(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_326C[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		uint32                                       YawPitchInt;                                       // 0x38(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        MovementMode;                                      // 0x3C(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_326D[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		uint32                                       FullBodyAnimationState;                            // 0x40(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint32                                       MontageAnimState;                                  // 0x44(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        JetPackFlag;                                       // 0x48(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bValid;                                            // 0x49(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_326E[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x8 (0x8 - 0x0)
	// ScriptStruct Solarland.SolarAerialReconnaissanceConfig
	struct FSolarAerialReconnaissanceConfig
	{
	public:
		int32                                        MarkMaximum;                                       // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bMarkTeamMode;                                     // 0x4(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_326F[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x578 (0x580 - 0x8)
	// ScriptStruct Solarland.RichHlinkRow
	struct FRichHlinkRow : public FTableRowBase
	{
	public:
		struct FHyperlinkStyle                       HlinkStyle;                                        // 0x8(0x578)(Edit, NativeAccessSpecifierPublic)
	};

	// 0x8 (0x8 - 0x0)
	// ScriptStruct Solarland.InGameLevelingConfig
	struct FInGameLevelingConfig
	{
	public:
		class UDataTable* ExpTable;                                          // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x8 (0x10 - 0x8)
	// ScriptStruct Solarland.InGameExpConifg
	struct FInGameExpConifg : public FTableRowBase
	{
	public:
		int32                                        Lv;                                                // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        Exp;                                               // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x8 (0x8 - 0x0)
	// ScriptStruct Solarland.JobManagerConfig
	struct FJobManagerConfig
	{
	public:
		class UDataTable* JobTable;                                          // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x10 (0x18 - 0x8)
	// ScriptStruct Solarland.KeyMapDisplayRowInfo
	struct FKeyMapDisplayRowInfo : public FTableRowBase
	{
	public:
		class FString                                DisplayName;                                       // 0x8(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x90 (0x98 - 0x8)
	// ScriptStruct Solarland.KeyMappingRowInfo
	struct FKeyMappingRowInfo : public FTableRowBase
	{
	public:
		class FString                                Label;                                             // 0x8(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                ActionDisplayName;                                 // 0x18(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                ActionName;                                        // 0x28(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         Continuity;                                        // 0x38(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3270[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		float                                        Scale;                                             // 0x3C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                RealAction;                                        // 0x40(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<class FString>                        FirstDefaultKeys;                                  // 0x50(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<class FString>                        SecondDefaultKeys;                                 // 0x60(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Description;                                       // 0x70(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<class FString>                        RelatedActions;                                    // 0x80(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         Stationary;                                        // 0x90(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3271[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x10 (0x10 - 0x0)
	// ScriptStruct Solarland.KeyMappingJsonData
	struct FKeyMappingJsonData
	{
	public:
		TArray<struct FKeyMappingRowInfo>            JsonData;                                          // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x30 (0x30 - 0x0)
	// ScriptStruct Solarland.KillInfoMessage
	struct FKillInfoMessage
	{
	public:
		uint8                                        Pad_3272[0x30];                                    // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x8 (0x8 - 0x0)
	// ScriptStruct Solarland.KillEffectExtraInfo
	struct FKillEffectExtraInfo
	{
	public:
		uint8                                        Pad_3273[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0xC (0xC - 0x0)
	// ScriptStruct Solarland.KillExtraInfo
	struct FKillExtraInfo
	{
	public:
		uint8                                        Pad_3274[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x58 (0x58 - 0x0)
	// ScriptStruct Solarland.EShopDisplayData
	struct FEShopDisplayData
	{
	public:
		int32                                        ItemID;                                            // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        Price;                                             // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        UndiscountedPrice;                                 // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        Num;                                               // 0xC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        ProductID;                                         // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        CoolDown;                                          // 0x14(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        Generation;                                        // 0x18(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bIsRecommend;                                      // 0x1C(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3275[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class FString                                Name;                                              // 0x20(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Icon;                                              // 0x30(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Info;                                              // 0x40(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        Quality;                                           // 0x50(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        ItemType;                                          // 0x54(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0xB8 (0xB8 - 0x0)
	// ScriptStruct Solarland.ULoadingDataEntry
	struct FULoadingDataEntry
	{
	public:
		struct FSoftObjectPath                       LoadingBg;                                         // 0x0(0x18)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<int32>                                TipIntArray;                                       // 0x18(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<struct FWrappedLocalTextID>           TipLocalTitleArray;                                // 0x28(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<struct FWrappedLocalTextID>           TipLocalLeftArray;                                 // 0x38(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<struct FWrappedLocalTextID>           TipLocalMidArray;                                  // 0x48(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<struct FWrappedLocalTextID>           TipLocalRightArray;                                // 0x58(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<class FString>                        TipArray;                                          // 0x68(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<class FString>                        TipTitleArray;                                     // 0x78(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<class FString>                        TipLeftArray;                                      // 0x88(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<class FString>                        TipMidArray;                                       // 0x98(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<class FString>                        TipRightArray;                                     // 0xA8(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x90 (0x90 - 0x0)
	// ScriptStruct Solarland.MassInvStateTransitionData
	struct FMassInvStateTransitionData
	{
	public:
		float                                        TransitionTime;                                    // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3276[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		struct FRuntimeFloatCurve                    TransitionCurve;                                   // 0x8(0x88)(Edit, NativeAccessSpecifierPublic)
	};

	// 0x28 (0x28 - 0x0)
	// ScriptStruct Solarland.MassInvMaterialParams
	struct FMassInvMaterialParams
	{
	public:
		float                                        PatternResolution;                                 // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        Detail;                                            // 0x4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        MaskBlend;                                         // 0x8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        Opacity;                                           // 0xC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        StealthAdjust;                                     // 0x10(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        Tilling;                                           // 0x14(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FLinearColor                          BaseColor;                                         // 0x18(0x10)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x78 (0x78 - 0x0)
	// ScriptStruct Solarland.MassInvStateMaterialParams
	struct FMassInvStateMaterialParams
	{
	public:
		struct FMassInvMaterialParams                PrepareParams;                                     // 0x0(0x28)(Edit, NoDestructor, NativeAccessSpecifierPublic)
		struct FMassInvMaterialParams                NormalParams;                                      // 0x28(0x28)(Edit, NoDestructor, NativeAccessSpecifierPublic)
		struct FMassInvMaterialParams                SprintParams;                                      // 0x50(0x28)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	};

	// 0x58 (0x58 - 0x0)
	// ScriptStruct Solarland.MatchResult_Player
	struct FMatchResult_Player
	{
	public:
		class FString                                PlayerId;                                          // 0x0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                PlayerName;                                        // 0x10(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        AvatarID;                                          // 0x20(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        FightCharacterID;                                  // 0x24(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        FightCharacterSkinID;                              // 0x28(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3277[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		struct FSoftObjectPath                       SkinConfigPath;                                    // 0x30(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                CharacterName;                                     // 0x48(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x18 (0x18 - 0x0)
	// ScriptStruct Solarland.MatchResult_Group
	struct FMatchResult_Group
	{
	public:
		int32                                        Groupid;                                           // 0x0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3278[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TArray<struct FMatchResult_Player>           Players;                                           // 0x8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x80 (0x80 - 0x0)
	// ScriptStruct Solarland.MatchResult
	struct FMatchResult
	{
	public:
		class FString                                BattleID;                                          // 0x0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                BattleAddr;                                        // 0x10(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Token;                                             // 0x20(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        ModeID;                                            // 0x30(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        RuleID;                                            // 0x34(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                SelfPlayerID;                                      // 0x38(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<struct FMatchResult_Group>            Groups;                                            // 0x48(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                MapName;                                           // 0x58(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FSoftObjectPath                       MapPath;                                           // 0x68(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x18 (0x18 - 0x0)
	// ScriptStruct Solarland.MaterialVariableChange
	struct FMaterialVariableChange
	{
	public:
		class FName                                  Variable;                                          // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        FromValue;                                         // 0x8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        ToValue;                                           // 0xC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        BeginProgress;                                     // 0x10(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        EndProgress;                                       // 0x14(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x10 (0x10 - 0x0)
	// ScriptStruct Solarland.MapMarkElem
	struct FMapMarkElem
	{
	public:
		class UMapMarkBase* MapMark;                                           // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bUsing;                                            // 0x8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3279[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x10 (0x10 - 0x0)
	// ScriptStruct Solarland.MapMarkElemArray
	struct FMapMarkElemArray
	{
	public:
		TArray<struct FMapMarkElem>                  MapMarkElems;                                      // 0x0(0x10)(Edit, BlueprintVisible, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x18 (0x18 - 0x0)
	// ScriptStruct Solarland.ConfigMiniMapMeshWidgetData
	struct FConfigMiniMapMeshWidgetData
	{
	public:
		float                                        TimeSpeed;                                         // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        IconTexId;                                         // 0x4(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        ColorOpacityIndex;                                 // 0x5(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_327A[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		struct FVector2D                             OpacityCoeff;                                      // 0x8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector2D                             ScaleAndRipplingCoeff;                             // 0x10(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x48 (0x48 - 0x0)
	// ScriptStruct Solarland.AirdropMeshWidgetData
	struct FAirdropMeshWidgetData
	{
	public:
		struct FConfigMiniMapMeshWidgetData          IconData;                                          // 0x0(0x18)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
		struct FConfigMiniMapMeshWidgetData          DiffuseData;                                       // 0x18(0x18)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
		struct FConfigMiniMapMeshWidgetData          FlashData;                                         // 0x30(0x18)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	};

	// 0x18 (0x18 - 0x0)
	// ScriptStruct Solarland.MiniMapData
	struct FMiniMapData
	{
	public:
		bool                                         bUseAsBigMap;                                      // 0x0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bOverride;                                         // 0x1(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_327B[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		float                                        MinFOV;                                            // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        MaxFOV;                                            // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        CurrentFOV;                                        // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector2D                             MapSize;                                           // 0x10(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x98 (0x98 - 0x0)
	// ScriptStruct Solarland.MissileBullet
	struct FMissileBullet
	{
	public:
		uint8                                        Pad_327C[0x60];                                    // Fixing Size After Last Property  [ Dumper-7 ]
		class UParticleSystemComponent* BulletEffect;                                      // 0x60(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class UParticleSystemComponent* RibbonTrajectoryEffect;                            // 0x68(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_327D[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
		class AMissileSwarmLauncher* Launcher;                                          // 0x80(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		uint8                                        Pad_327E[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x2C (0x2C - 0x0)
	// ScriptStruct Solarland.MissileSwarmSpawnParameter
	struct FMissileSwarmSpawnParameter
	{
	public:
		struct FVector                               EjectRelativeLoc;                                  // 0x0(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FRotator                              EjectRot;                                          // 0xC(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		float                                        Delay;                                             // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_327F[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x4 (0x4 - 0x0)
	// ScriptStruct Solarland.FireUniqueID
	struct FFireUniqueID
	{
	public:
		uint32                                       Data;                                              // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x2C (0x2C - 0x0)
	// ScriptStruct Solarland.MissileBulletSpawnParameter
	struct FMissileBulletSpawnParameter
	{
	public:
		struct FFireUniqueID                         FireUniqueID;                                      // 0x0(0x4)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector                               EjectLoc;                                          // 0x4(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector                               EjectDir;                                          // 0x10(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector                               TargetLoc;                                         // 0x1C(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        EjectTimeStamp;                                    // 0x28(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x40 (0x40 - 0x0)
	// ScriptStruct Solarland.DetailedListViewInfo
	struct FDetailedListViewInfo
	{
	public:
		bool                                         bIsUsingStructInfo;                                // 0x0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bIsCheater;                                        // 0x1(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bIsMVP;                                            // 0x2(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3280[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class FString                                PlayerName;                                        // 0x8(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        KillNum;                                           // 0x18(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        AssistNum;                                         // 0x1C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        CauseDamage;                                       // 0x20(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        ReceivedDamage;                                    // 0x24(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        HealSelf;                                          // 0x28(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        ReceivedHeal;                                      // 0x2C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        LifeTime;                                          // 0x30(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        MvpScore;                                          // 0x34(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        FlagID;                                            // 0x38(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class ECommonInputType                  InputType;                                         // 0x3C(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3281[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x38 (0x38 - 0x0)
	// ScriptStruct Solarland.DetailedTeamListViewInfo
	struct FDetailedTeamListViewInfo
	{
	public:
		int32                                        TeamID;                                            // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3282[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class FString                                TeamName;                                          // 0x8(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        Rank;                                              // 0x18(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        Point;                                             // 0x1C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint32                                       PreliminaryRank;                                   // 0x20(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3283[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TArray<struct FDetailedListViewInfo>         PlayerDetailInfos;                                 // 0x28(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x1C (0x1C - 0x0)
	// ScriptStruct Solarland.ProgressMeshData
	struct FProgressMeshData
	{
	public:
		float                                        Progress;                                          // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FLinearColor                          Color;                                             // 0x4(0x10)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector2D                             Offset;                                            // 0x14(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0xF8 (0xF8 - 0x0)
	// ScriptStruct Solarland.ConfigMeshData
	struct FConfigMeshData
	{
	public:
		bool                                         bTeamVisible;                                      // 0x0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3284[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		int32                                        TeamID;                                            // 0x4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector2D                             TenOffset;                                         // 0x8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector2D                             OneOffset;                                         // 0x10(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FLinearColor                          MainColor;                                         // 0x18(0x10)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FLinearColor                          ViceColor;                                         // 0x28(0x10)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bShieldVisible;                                    // 0x38(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3285[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		struct FProgressMeshData                     Shield;                                            // 0x3C(0x1C)(Edit, NoDestructor, NativeAccessSpecifierPublic)
		struct FProgressMeshData                     ShieldDamage;                                      // 0x58(0x1C)(Edit, NoDestructor, NativeAccessSpecifierPublic)
		struct FProgressMeshData                     ShieldBG;                                          // 0x74(0x1C)(Edit, NoDestructor, NativeAccessSpecifierPublic)
		bool                                         bHPVisible;                                        // 0x90(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3286[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		struct FProgressMeshData                     HP;                                                // 0x94(0x1C)(Edit, NoDestructor, NativeAccessSpecifierPublic)
		struct FProgressMeshData                     HPDamage;                                          // 0xB0(0x1C)(Edit, NoDestructor, NativeAccessSpecifierPublic)
		struct FProgressMeshData                     HPBG;                                              // 0xCC(0x1C)(Edit, NoDestructor, NativeAccessSpecifierPublic)
		struct FVector2D                             ScreenOffset;                                      // 0xE8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3287[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x60 (0x60 - 0x0)
	// ScriptStruct Solarland.ReplayPlayerOverviewData
	struct FReplayPlayerOverviewData
	{
	public:
		class FString                                PlayerName;                                        // 0x0(0x10)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                HeroName;                                          // 0x10(0x10)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TSoftObjectPtr<class UTexture2D>             SkinResourcePtr;                                   // 0x20(0x28)(BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        PlayerNum;                                         // 0x48(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3288[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class FString                                GameModeName;                                      // 0x50(0x10)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x10 (0x10 - 0x0)
	// ScriptStruct Solarland.TeamPlayerNavArray
	struct FTeamPlayerNavArray
	{
	public:
		TArray<class UOBPlayerNavWidget*>            NavArray;                                          // 0x0(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x28 (0x28 - 0x0)
	// ScriptStruct Solarland.CupViewInfo
	struct FCupViewInfo
	{
	public:
		class FString                                TournamentName;                                    // 0x0(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                TournamentIcon;                                    // 0x10(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        GameModeId;                                        // 0x20(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        RuleID;                                            // 0x24(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x220 (0x220 - 0x0)
	// ScriptStruct Solarland.OpponentPerspectiveMaterialParams
	struct FOpponentPerspectiveMaterialParams
	{
	public:
		struct FRuntimeFloatCurve                    OpacityCurve;                                      // 0x0(0x88)(Edit, NativeAccessSpecifierPublic)
		struct FRuntimeFloatCurve                    OutlineSizeCurve;                                  // 0x88(0x88)(Edit, NativeAccessSpecifierPublic)
		struct FRuntimeFloatCurve                    OpacityScaleByFOVCurve;                            // 0x110(0x88)(Edit, NativeAccessSpecifierPublic)
		struct FRuntimeFloatCurve                    OutlineSizeScaleByFOVCurve;                        // 0x198(0x88)(Edit, NativeAccessSpecifierPublic)
	};

	// 0x270 (0x270 - 0x0)
	// ScriptStruct Solarland.OpponentPerspectiveMaterialParamsConditional
	struct FOpponentPerspectiveMaterialParamsConditional
	{
	public:
		struct FGameplayTagRequirements              OpponentTagRequirements;                           // 0x0(0x50)(Edit, NativeAccessSpecifierPublic)
		struct FOpponentPerspectiveMaterialParams    MaterialParams;                                    // 0x50(0x220)(Edit, NativeAccessSpecifierPublic)
	};

	// 0x20 (0x20 - 0x0)
	// ScriptStruct Solarland.PassiveSkillLevelDescription
	struct FPassiveSkillLevelDescription
	{
	public:
		struct FWrappedLocalTextID                   InnerDescriptionLocalTextID;                       // 0x0(0x4)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FWrappedLocalTextID                   ShortDescriptionLocalTextID;                       // 0x4(0x4)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FSoftObjectPath                       InnerIconPath;                                     // 0x8(0x18)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0xC (0xC - 0x0)
	// ScriptStruct Solarland.BackpackAnimInfo
	struct FBackpackAnimInfo
	{
	public:
		int32                                        StartFrame;                                        // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        EndFrame;                                          // 0x4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        Length;                                            // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x18 (0x18 - 0x0)
	// ScriptStruct Solarland.SwitchEffectInfo
	struct FSwitchEffectInfo
	{
	public:
		class UMeshComponent* MeshComp;                                          // 0x0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<class UMaterialInstanceDynamic*>      EffectMat;                                         // 0x8(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0xB8 (0xC0 - 0x8)
	// ScriptStruct Solarland.RookieGuidanceTableRow
	struct FRookieGuidanceTableRow : public FTableRowBase
	{
	public:
		uint8                                        Groupid;                                           // 0x8(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Tag;                                               // 0x9(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         IfBindedWidget;                                    // 0xA(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3289[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class FString                                TriggerCondition;                                  // 0x10(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        TriggerDelayTime;                                  // 0x20(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        TriggerStage;                                      // 0x24(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_328A[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class FString                                GuideBPName;                                       // 0x28(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector2D                             GuideBPLocation;                                   // 0x38(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        GuideBPScale;                                      // 0x40(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_328B[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class FString                                RelatedUI;                                         // 0x48(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector2D                             RelatedUILocation;                                 // 0x58(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        RelatedUIScale;                                    // 0x60(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        LocTextID;                                         // 0x64(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector2D                             LocTextLocation;                                   // 0x68(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        LocTextDuration;                                   // 0x70(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_328C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class FString                                EndCondition;                                      // 0x78(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        EndDelayTime;                                      // 0x88(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_328D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class FString                                InterruptCondition;                                // 0x90(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        SingleRoundTriggerMax;                             // 0xA0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        TotalTriggerMax;                                   // 0xA1(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_328E[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class FString                                FinishCondition;                                   // 0xA8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         IfUpload;                                          // 0xB8(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         IfMandatory;                                       // 0xB9(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_328F[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x20 (0x20 - 0x0)
	// ScriptStruct Solarland.BuildingData
	struct FBuildingData
	{
	public:
		class FString                                BuildingLocation;                                  // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                BuildingIconName;                                  // 0x10(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x20 (0x20 - 0x0)
	// ScriptStruct Solarland.ChargingZone
	struct FChargingZone
	{
	public:
		float                                        Level1;                                            // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        Level2;                                            // 0x4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        Level3;                                            // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        Level4;                                            // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3290[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x50 (0x478 - 0x428)
	// ScriptStruct Solarland.SCustomMode_PlayerReport
	struct FSCustomMode_PlayerReport : public FSolarPlayerReport
	{
	public:
		TMap<int32, int32>                           RewardItems;                                       // 0x428(0x50)(NativeAccessSpecifierPublic)
	};

	// 0x28 (0x28 - 0x0)
	// ScriptStruct Solarland.SeparatedPackageInfo
	struct FSeparatedPackageInfo
	{
	public:
		int32                                        SeparetedPkgID;                                    // 0x0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3291[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TArray<int32>                                ChunksInPkg;                                       // 0x8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<int32>                                DependentPkgID;                                    // 0x18(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x40 (0x40 - 0x0)
	// ScriptStruct Solarland.SettlementStageConfig
	struct FSettlementStageConfig
	{
	public:
		TSoftClassPtr<class USolarUWSettlementBase>  Page_Die;                                          // 0x0(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        Page_SkipIndex;                                    // 0x28(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3292[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TArray<TSoftClassPtr<class USolarUWSettlementBase>> SettlementStage;                                   // 0x30(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x78 (0x80 - 0x8)
	// ScriptStruct Solarland.SettlementConfig
	struct FSettlementConfig : public FTableRowBase
	{
	public:
		int32                                        SettlementID;                                      // 0x8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3293[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		struct FSettlementStageConfig                StageConfig;                                       // 0x10(0x40)(Edit, NativeAccessSpecifierPublic)
		TSoftClassPtr<class ASettlementFormula>      Formula;                                           // 0x50(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         IsValidData;                                       // 0x78(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3294[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x18 (0x18 - 0x0)
	// ScriptStruct Solarland.SettlementParam_Zomborg
	struct FSettlementParam_Zomborg
	{
	public:
		class ASolarPlayerState* PS;                                                // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        LifeTime;                                          // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        PlayerRank;                                        // 0xC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        GoldPunishRate;                                    // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3295[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0xC (0xC - 0x0)
	// ScriptStruct Solarland.SettlementParam_PageParam
	struct FSettlementParam_PageParam
	{
	public:
		bool                                         IsMVP;                                             // 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         IsAce;                                             // 0x1(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         IsVictory;                                         // 0x2(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3296[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		int32                                        WeaponExpSettlmentNum;                             // 0x4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         IsRankFight;                                       // 0x8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3297[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x18 (0x18 - 0x0)
	// ScriptStruct Solarland.SettlementParam_KDA
	struct FSettlementParam_KDA
	{
	public:
		class ASolarPlayerState* PS;                                                // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        KillNum;                                           // 0x8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        DeathNum;                                          // 0xC(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        AssitNum;                                          // 0x10(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3298[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x28 (0x28 - 0x0)
	// ScriptStruct Solarland.SettlementParam_MVP
	struct FSettlementParam_MVP
	{
	public:
		class ASolarPlayerState* PS;                                                // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        KillNum;                                           // 0x8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        DownNum;                                           // 0xC(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        AssitNum;                                          // 0x10(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        SaveNum;                                           // 0x14(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        LifeTime;                                          // 0x18(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        DamageValue;                                       // 0x1C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        Rank;                                              // 0x20(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3299[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x20 (0x20 - 0x0)
	// ScriptStruct Solarland.SettlementParam_WeaponExp
	struct FSettlementParam_WeaponExp
	{
	public:
		class ASolarPlayerState* PS;                                                // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        UseTime;                                           // 0x8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        WeaponKillNum;                                     // 0xC(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        WeaponAssitNum;                                    // 0x10(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        ExpRatio;                                          // 0x14(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        EXPPunishRatio;                                    // 0x18(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_329A[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x38 (0x38 - 0x0)
	// ScriptStruct Solarland.SettlementParam_CommonExp
	struct FSettlementParam_CommonExp
	{
	public:
		class ASolarPlayerState* PS;                                                // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        KillNum;                                           // 0x8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        DownNum;                                           // 0xC(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        AssitNum;                                          // 0x10(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        SaveNum;                                           // 0x14(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        LifeTime;                                          // 0x18(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        DamageValue;                                       // 0x1C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        Rank;                                              // 0x20(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        EXPPunishRatio;                                    // 0x24(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        CoinPunishRatio;                                   // 0x28(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        RankCorePunish;                                    // 0x2C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        BaseExp;                                           // 0x30(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        ExpRatio;                                          // 0x34(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x1C (0x1C - 0x0)
	// ScriptStruct Solarland.ShootingTargetRing
	struct FShootingTargetRing
	{
	public:
		float                                        Radius;                                            // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        Score;                                             // 0x4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FLinearColor                          ColorHUD;                                          // 0x8(0x10)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FColor                                Color3D;                                           // 0x18(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x60 (0x60 - 0x0)
	// ScriptStruct Solarland.SolarWeaponFireSocketData
	struct FSolarWeaponFireSocketData
	{
	public:
		TArray<class FName>                          MultiBulletSocketNames;                            // 0x0(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		TArray<class FName>                          MuzzleSocketNames;                                 // 0x10(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		TArray<class FName>                          AdsMuzzleSocketNames;                              // 0x20(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		TArray<class FName>                          MuzzleBlockCheckSocketNames;                       // 0x30(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		TArray<class FName>                          MultiCastShellSocketNames;                         // 0x40(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
		TArray<class FName>                          AdsMultiCastShellSocketNames;                      // 0x50(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	};

	// 0xA (0xA - 0x0)
	// ScriptStruct Solarland.SolarWeaponFireInputRespondConfig
	struct FSolarWeaponFireInputRespondConfig
	{
	public:
		uint8                                        Pad_329B[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		bool                                         bAutoCloseScope;                                   // 0x1(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bShootAtPress;                                     // 0x2(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bShootAtPressAutoScope;                            // 0x3(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bCanAutoShootWhilePress;                           // 0x4(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bCanAutoShootWhilePressAutoScope;                  // 0x5(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bCanShootWhileScoping;                             // 0x6(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bCanShootWhileScopingAutoScope;                    // 0x7(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bCanManuallyCanceled;                              // 0x8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bCanManuallyCanceledAutoScope;                     // 0x9(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x18 (0x18 - 0x0)
	// ScriptStruct Solarland.SolarNoAmmoAlertWidgetLayout
	struct FSolarNoAmmoAlertWidgetLayout
	{
	public:
		bool                                         bOverrideLayout;                                   // 0x0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_329C[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		struct FVector2D                             Offset;                                            // 0x4(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        SpinAngle;                                         // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector2D                             Scale;                                             // 0x10(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x38 (0x38 - 0x0)
	// ScriptStruct Solarland.SolarWeaponCrosshairData
	struct FSolarWeaponCrosshairData
	{
	public:
		uint8                                        HasReload;                                         // 0x0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        HasForbid;                                         // 0x1(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        HasOverload;                                       // 0x2(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        HasChargeProgress;                                 // 0x3(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        HasFeedback;                                       // 0x4(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class EWeaponType                       WeaponType;                                        // 0x5(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bIsEnergyType;                                     // 0x6(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_329D[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TSubclassOf<class UUserWidget>               CrossHairWidget;                                   // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TSubclassOf<class UUserWidget>               BulletContainerWidget;                             // 0x10(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TSubclassOf<class UUserWidget>               WeaponRechamberWidget;                             // 0x18(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FSolarNoAmmoAlertWidgetLayout         AmmoAlertWidgetLayout;                             // 0x20(0x18)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	};

	// 0xD8 (0xD8 - 0x0)
	// ScriptStruct Solarland.MoveSpeedReduceCurveConfig
	struct FMoveSpeedReduceCurveConfig
	{
	public:
		struct FGameplayTagRequirements              TagRequirements;                                   // 0x0(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
		struct FRuntimeFloatCurve                    MoveSpeedReduceCurveOnHoldingWeapon;               // 0x50(0x88)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	};

	// 0x20 (0x20 - 0x0)
	// ScriptStruct Solarland.LaunchDeviceInfo
	struct FLaunchDeviceInfo
	{
	public:
		bool                                         bIsUsing;                                          // 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_329E[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class FName                                  LaunchPadLocSocketName;                            // 0x4(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FName                                  PrepareEffectLocSocketName;                        // 0xC(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_329F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class UParticleSystemComponent* AvailableDeviceEffect;                             // 0x18(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x18 (0x18 - 0x0)
	// ScriptStruct Solarland.ReplicateEffectData
	struct FReplicateEffectData
	{
	public:
		struct FSoftObjectPath                       IconPath;                                          // 0x0(0x18)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0xA0 (0xA0 - 0x0)
	// ScriptStruct Solarland.SolarAttributeModifier
	struct FSolarAttributeModifier
	{
	public:
		enum class ESolarAttributeType               SolarAttributeType;                                // 0x0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class ESolarAttributeDurationType       AttributeDurationType;                             // 0x1(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class ESolarAttributeValueSourceType    AttributeDurationSourceType;                       // 0x2(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_32A0[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		float                                        AttributeModifyDuration;                           // 0x4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                AttributeModifyDurationSourceKey;                  // 0x8(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        AttributeModifyMinDistance;                        // 0x18(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        AttributeModifyMaxDistance;                        // 0x1C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class UCurveFloat* AttributeDistanceScaleCurve;                       // 0x20(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         AttributeUseTargetValue;                           // 0x28(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_32A1[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		float                                        AttributeTargetValue;                              // 0x2C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class ESolarAttributeValueSourceType    AttributeChangeValueSourceType;                    // 0x30(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_32A2[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		float                                        AttributeChangeValue;                              // 0x34(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        AttributeChangeValueForVehicle;                    // 0x38(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_32A3[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class FString                                AttributeChangeValueSourceKey;                     // 0x40(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         AttributeChangeValueIsMultiplier;                  // 0x50(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_32A4[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		enum class ESolarAttributeValueSourceType    AttributeChangeSpeedSourceType;                    // 0x58(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_32A5[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class FString                                AttributeChangeSpeedSourceKey;                     // 0x60(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        AttributeChangeSpeed;                              // 0x70(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         AttributeApplyChargingScale;                       // 0x74(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_32A6[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TArray<int32>                                AttributeExtraIntParam;                            // 0x78(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<float>                                AttributeExtraFloatParam;                          // 0x88(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_32A7[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x40 (0x40 - 0x0)
	// ScriptStruct Solarland.GameplayAbilityRepAnimMontageForMesh
	struct FGameplayAbilityRepAnimMontageForMesh
	{
	public:
		class USkeletalMeshComponent* Mesh;                                              // 0x0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FGameplayAbilityRepAnimMontage        RepMontageInfo;                                    // 0x8(0x38)(NoDestructor, NativeAccessSpecifierPublic)
	};

	// 0x38 (0x38 - 0x0)
	// ScriptStruct Solarland.GameplayAbilityLocalAnimMontageForMesh
	struct FGameplayAbilityLocalAnimMontageForMesh
	{
	public:
		class USkeletalMeshComponent* Mesh;                                              // 0x0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FGameplayAbilityLocalAnimMontage      LocalMontageInfo;                                  // 0x8(0x30)(NoDestructor, NativeAccessSpecifierPublic)
	};

	// 0xC (0xC - 0x0)
	// ScriptStruct Solarland.AchievementResult
	struct FAchievementResult
	{
	public:
		int32                                        AchievementID;                                     // 0x0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        ProgressValue;                                     // 0x4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         IsUnlock;                                          // 0x8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class EAchievementReportType            AchievementReportType;                             // 0x9(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_32A8[0x2];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x28 (0x28 - 0x0)
	// ScriptStruct Solarland.AchievementContext
	struct FAchievementContext
	{
	public:
		uint8                                        Pad_32A9[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class FString                                TargetValueName;                                   // 0x8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                HandleFunctionName;                                // 0x18(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x38 (0x40 - 0x8)
	// ScriptStruct Solarland.AchievementHandle
	struct FAchievementHandle : public FTableRowBase
	{
	public:
		enum class EAchievementCondition             ConditionType;                                     // 0x8(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_32AA[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class FString                                TargetValueName;                                   // 0x10(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                HandleFunctionName;                                // 0x20(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Desc;                                              // 0x30(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0xF0 (0xF0 - 0x0)
	// ScriptStruct Solarland.WidgetOverrideParam
	struct FWidgetOverrideParam
	{
	public:
		enum class EWidgetOverrideParamType          Type;                                              // 0x0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_32AB[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class FName                                  ChildName;                                         // 0x4(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bEnableLocText;                                    // 0xC(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_32AC[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class FText                                  Text;                                              // 0x10(0x18)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
		int32                                        LocTextID;                                         // 0x28(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_32AD[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		struct FSlateBrush                           Brush;                                             // 0x30(0x98)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
		class FString                                CustomParameter;                                   // 0xC8(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FGameplayTag                          GameplayTag;                                       // 0xD8(0x8)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<class FString>                        MetaData;                                          // 0xE0(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x18 (0x18 - 0x0)
	// ScriptStruct Solarland.PlaygroundEffect
	struct FPlaygroundEffect
	{
	public:
		class UParticleSystem* Particle;                                          // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        SpawnDelay;                                        // 0x8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_32AE[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class UParticleSystemComponent* Handle;                                            // 0x10(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x20 (0x20 - 0x0)
	// ScriptStruct Solarland.AirdropParas
	struct FAirdropParas
	{
	public:
		TSubclassOf<class ASolarTreasureBoxSpawner>  SolarTreasureBoxSpawnerClass;                      // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        OutcomeID;                                         // 0x8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        ChestID;                                           // 0xC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        ChestSpawnID;                                      // 0x10(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector                               Scale;                                             // 0x14(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x34 (0x34 - 0x0)
	// ScriptStruct Solarland.RouteInfo
	struct FRouteInfo
	{
	public:
		struct FVector                               RouteStart;                                        // 0x0(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector                               RouteEnd;                                          // 0xC(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        RouteLength;                                       // 0x18(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector                               RouteDirection;                                    // 0x1C(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector                               AirdropLocation;                                   // 0x28(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x30 (0x30 - 0x0)
	// ScriptStruct Solarland.AirshipConfig
	struct FAirshipConfig
	{
	public:
		float                                        MoveSpeed;                                         // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        MoveSpeedAfterAirdrop;                             // 0x4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        RouteHeight;                                       // 0x8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        RouteMinLength;                                    // 0xC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        StartDistToAirdropMinLength;                       // 0x10(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        FurthestDistAfterAirdrop;                          // 0x14(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        DecelerateDistance;                                // 0x18(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        AccelerateDistance;                                // 0x1C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        HoveringDurance;                                   // 0x20(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_32AF[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class UCurveFloat* FogDensityCurve;                                   // 0x28(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x30 (0x30 - 0x0)
	// ScriptStruct Solarland.AIQueryTeammateEvent
	struct FAIQueryTeammateEvent
	{
	public:
		class UAIPerceptionComponent* QueryingTeammate;                                  // 0x0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class UAIPerceptionComponent* TeammateBeingQueried;                              // 0x8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class AActor* Target;                                            // 0x10(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_32B0[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x18 (0x18 - 0x0)
	// ScriptStruct Solarland.RadarDetectConfig
	struct FRadarDetectConfig
	{
	public:
		TSubclassOf<class AActor>                    DetectActorType;                                   // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        DetectRadius;                                      // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        LossRadius;                                        // 0xC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        ScanInterval;                                      // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_32B1[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x20 (0x20 - 0x0)
	// ScriptStruct Solarland.SolarAITagStateTransition
	struct FSolarAITagStateTransition
	{
	public:
		struct FGameplayTag                          FromStateTag;                                      // 0x0(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FGameplayTag                          ToStateTag;                                        // 0x8(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<class USolarAICondition*>             TransConditions;                                   // 0x10(0x10)(Edit, ExportObject, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0xC (0xC - 0x0)
	// ScriptStruct Solarland.SolarAIValueCompare
	struct FSolarAIValueCompare
	{
	public:
		enum class ESolarAIValueCompareOp            Operator;                                          // 0x0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_32B2[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		float                                        ComparedValue;                                     // 0x4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        EqualThreshold;                                    // 0x8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x14 (0x14 - 0x0)
	// ScriptStruct Solarland.SolarAudioDetail
	struct FSolarAudioDetail
	{
	public:
		class FName                                  BankName;                                          // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FName                                  BindScene;                                         // 0x8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class ESolarAudioDetailLoadMode         LoadStrategy;                                      // 0x10(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class ESolarAudioDetailUnloadMode       UnloadStrategy;                                    // 0x11(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class ESolarAudioDetailCatalog          ResCatalog;                                        // 0x12(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_32B3[0x1];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x50 (0x50 - 0x0)
	// ScriptStruct Solarland.SolarAkBankInfo
	struct FSolarAkBankInfo
	{
	public:
		uint8                                        Pad_32B4[0x50];                                    // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x40 (0x40 - 0x0)
	// ScriptStruct Solarland.AkEventLocation
	struct FAkEventLocation
	{
	public:
		uint8                                        Pad_32B5[0x40];                                    // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x18 (0x18 - 0x0)
	// ScriptStruct Solarland.AkEventData
	struct FAkEventData
	{
	public:
		uint8                                        Pad_32B6[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x8 (0x8 - 0x0)
	// ScriptStruct Solarland.JetPackPoseSpeedRange
	struct FJetPackPoseSpeedRange
	{
	public:
		float                                        Min;                                               // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        Max;                                               // 0x4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x84 (0x84 - 0x0)
	// ScriptStruct Solarland.LeftHandGripConfig
	struct FLeftHandGripConfig
	{
	public:
		struct FRotator                              HandL;                                             // 0x0(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		struct FRotator                              Thumbl01;                                          // 0xC(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		struct FRotator                              Thumbl02;                                          // 0x18(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		struct FRotator                              Index01;                                           // 0x24(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		struct FRotator                              Index02;                                           // 0x30(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		struct FRotator                              Middle01;                                          // 0x3C(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		struct FRotator                              Middle02;                                          // 0x48(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		struct FRotator                              Ring01;                                            // 0x54(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		struct FRotator                              Ring02;                                            // 0x60(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		struct FRotator                              Pinky01;                                           // 0x6C(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		struct FRotator                              Pinky02;                                           // 0x78(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	};

	// 0x10 (0x10 - 0x0)
	// ScriptStruct Solarland.PreloadBundle
	struct FPreloadBundle
	{
	public:
		class FName                                  FolderPath;                                        // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FName                                  ClassName;                                         // 0x8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0xC (0xC - 0x0)
	// ScriptStruct Solarland.SolarAttributeConfig
	struct FSolarAttributeConfig
	{
	public:
		float                                        MinValue;                                          // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        MaxValue;                                          // 0x4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        BaseValue;                                         // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x8 (0x8 - 0x0)
	// ScriptStruct Solarland.SolarAttributeSubReplicateData
	struct FSolarAttributeSubReplicateData
	{
	public:
		int32                                        AttributeID;                                       // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        AttributeValue;                                    // 0x4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x18 (0x18 - 0x0)
	// ScriptStruct Solarland.SolarAttributeSubModifierData
	struct FSolarAttributeSubModifierData
	{
	public:
		enum class EGameplayModOp                    ModifierOp;                                        // 0x0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_32B7[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		float                                        Magnitude;                                         // 0x4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bIsEnabled;                                        // 0x8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_32B8[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		int32                                        ModifierID;                                        // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FName                                  ModifierName;                                      // 0x10(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x3C (0x3C - 0x0)
	// ScriptStruct Solarland.AutoNavLinkSetting
	struct FAutoNavLinkSetting
	{
	public:
		float                                        TraceLength;                                       // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        MaxHeight;                                         // 0x4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        MinDistSquard;                                     // 0x8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        TestAgentHalfHeight;                               // 0xC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        TestAgentRadius;                                   // 0x10(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        AgentPassSphereRadius;                             // 0x14(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        MinPassWidth;                                      // 0x18(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        MaxStepHeight;                                     // 0x1C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector                               FinalSnapExtent;                                   // 0x20(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        ProjectNavigationError;                            // 0x2C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        VaultDetectDistance;                               // 0x30(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        VaultDetectDeltaDistance;                          // 0x34(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        VerticalError;                                     // 0x38(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0xA0 (0xA8 - 0x8)
	// ScriptStruct Solarland.BackpackTrailAssemblingParams
	struct FBackpackTrailAssemblingParams : public FTableRowBase
	{
	public:
		TSoftObjectPtr<class UParticleSystem>        TrailParticle;                                     // 0x8(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TSoftObjectPtr<class UParticleSystem>        WallRunTrailParticle;                              // 0x30(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TSoftObjectPtr<class UParticleSystem>        OffgasParticle;                                    // 0x58(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TSoftObjectPtr<class UParticleSystem>        WallRunOffgasParticle;                             // 0x80(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x50 (0x58 - 0x8)
	// ScriptStruct Solarland.BackpackFXDataDTRow
	struct FBackpackFXDataDTRow : public FTableRowBase
	{
	public:
		TMap<class FName, struct FSoftObjectPath>    FXPathMap;                                         // 0x8(0x50)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	};

	// 0x14 (0x14 - 0x0)
	// ScriptStruct Solarland.BotResponseSetting
	struct FBotResponseSetting
	{
	public:
		float                                        PersonalCD;                                        // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        TeamCD;                                            // 0x4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        MinTimeDelay;                                      // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        MaxTimeDelay;                                      // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        TriggeredProbability;                              // 0x10(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x88 (0x88 - 0x0)
	// ScriptStruct Solarland.BotEmojiSetting
	struct FBotEmojiSetting
	{
	public:
		TMap<int32, float>                           EmojiPool;                                         // 0x0(0x50)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
		struct FGameplayTagContainer                 TagsRequested;                                     // 0x50(0x20)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
		float                                        PersonalCD;                                        // 0x70(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        TeamCD;                                            // 0x74(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        MinTimeDelay;                                      // 0x78(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        MaxTimeDelay;                                      // 0x7C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        TriggeredProbability;                              // 0x80(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_32B9[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0xC0 (0xC0 - 0x0)
	// ScriptStruct Solarland.SolarBotMemberInfo
	struct FSolarBotMemberInfo
	{
	public:
		TWeakObjectPtr<class ASolarBotAIController>  BotController;                                     // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class ESolarBotMemberState              MemberState;                                       // 0x8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_32BA[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TArray<enum class ESolarTablesEnum_CharacterType> PreferPickHeroTypes;                               // 0x10(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TMap<enum class EBotInteractCondition, float> MemberEmojiTimeStamp;                              // 0x20(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
		TMap<enum class EBotInteractCondition, float> MemberResponseTimeStamp;                           // 0x70(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
	};

	// 0xD0 (0xD0 - 0x0)
	// ScriptStruct Solarland.SolarBotTeamInfo
	struct FSolarBotTeamInfo
	{
	public:
		bool                                         bIsActive;                                         // 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_32BB[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		int32                                        TeamID;                                            // 0x4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector                               TeamPosition;                                      // 0x8(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        SeparateDistance;                                  // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        ReturnDistance;                                    // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bPlayerNeedPraise;                                 // 0x1C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bHasInitByTeamConfig;                              // 0x1D(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_32BC[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TArray<struct FSolarBotMemberInfo>           MemberInfos;                                       // 0x20(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TMap<enum class EBotInteractCondition, float> TeamEmojiTimeStamp;                                // 0x30(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
		TMap<enum class EBotInteractCondition, float> TeamResponseTimeStamp;                             // 0x80(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
	};

	// 0x18 (0x18 - 0x0)
	// ScriptStruct Solarland.BotFocusInfo
	struct FBotFocusInfo
	{
	public:
		uint8                                        Pad_32BD[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x18 (0x18 - 0x0)
	// ScriptStruct Solarland.BotBonusDropConfig
	struct FBotBonusDropConfig
	{
	public:
		float                                        ActiveTime;                                        // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        DeactiveTime;                                      // 0x4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        NumOfAmmo;                                         // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        KitId;                                             // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        NumOfKit;                                          // 0x10(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        NumOfElectricity;                                  // 0x14(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x50 (0x50 - 0x0)
	// ScriptStruct Solarland.SolarBotTimelineEquipmentArray
	struct FSolarBotTimelineEquipmentArray
	{
	public:
		TMap<int32, int32>                           IDArray;                                           // 0x0(0x50)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	};

	// 0xF0 (0xF0 - 0x0)
	// ScriptStruct Solarland.SolarBotTimelineAIItemSetting
	struct FSolarBotTimelineAIItemSetting
	{
	public:
		TMap<enum class ESolarBotTimelineEquipmentSettingType, struct FSolarBotTimelineEquipmentArray> Equipment;                                         // 0x0(0x50)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
		TMap<int32, struct FIntPoint>                Consumable;                                        // 0x50(0x50)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
		TMap<enum class ESolarBotTimelineWeaponPartType, struct FSolarBotTimelineEquipmentArray> WeaponPart;                                        // 0xA0(0x50)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	};

	// 0xF8 (0xF8 - 0x0)
	// ScriptStruct Solarland.TimeItemsSetting
	struct FTimeItemsSetting
	{
	public:
		float                                        TriggerTime;                                       // 0x0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_32BE[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		struct FSolarBotTimelineAIItemSetting        Items;                                             // 0x8(0xF0)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	};

	// 0x28 (0x28 - 0x0)
	// ScriptStruct Solarland.WarmTargetState
	struct FWarmTargetState
	{
	public:
		float                                        BoringValue;                                       // 0x0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        ServedTimes;                                       // 0x4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bNeedWarmService;                                  // 0x8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        KillPlayerNum;                                     // 0x9(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        KillBotNum;                                        // 0xA(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_32BF[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		float                                        LastBattleTime;                                    // 0xC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        CurTraceRecordIdx;                                 // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_32C0[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TArray<struct FVector>                       TraceRecords;                                      // 0x18(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x10 (0x10 - 0x0)
	// ScriptStruct Solarland.TraceRecord
	struct FTraceRecord
	{
	public:
		TArray<struct FVector>                       TargetTrace;                                       // 0x0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x40 (0x40 - 0x0)
	// ScriptStruct Solarland.PopParameter
	struct FPopParameter
	{
	public:
		TArray<class ASolarPlayerState*>             WarmTargets;                                       // 0x0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector                               PopLocation;                                       // 0x10(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_32C1[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TArray<struct FTraceRecord>                  TargetTraces;                                      // 0x20(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class UEnvQuery* TeleportLocEQS;                                    // 0x30(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class EEnvQueryRunMode                  TeleportLocEQSRunMode;                             // 0x38(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bForcePop;                                         // 0x39(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_32C2[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x60 (0x60 - 0x0)
	// ScriptStruct Solarland.PopTask
	struct FPopTask
	{
	public:
		TArray<class ASolarPlayerState*>             WarmBots;                                          // 0x0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class UEnvQuery* SeparateLocEQS;                                    // 0x10(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class EEnvQueryRunMode                  SeparateLocEQSRunMode;                             // 0x18(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_32C3[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		struct FPopParameter                         PreSetting;                                        // 0x20(0x40)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	};

	// 0x30 (0x38 - 0x8)
	// ScriptStruct Solarland.SolarBotTimelineGameSetting
	struct FSolarBotTimelineGameSetting : public FTableRowBase
	{
	public:
		int32                                        MaxiumTeam;                                        // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_32C4[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class FString                                Comment;                                           // 0x10(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class UDataTable* Action;                                            // 0x20(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class UDataTable* Item;                                              // 0x28(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class UDataTable* Downsize;                                          // 0x30(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x10 (0x18 - 0x8)
	// ScriptStruct Solarland.SolarBotTimelineDownsizingTrigger
	struct FSolarBotTimelineDownsizingTrigger : public FTableRowBase
	{
	public:
		int32                                        StartTime;                                         // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        EndTime;                                           // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        Min;                                               // 0x10(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        Max;                                               // 0x14(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0xF8 (0x100 - 0x8)
	// ScriptStruct Solarland.SolarBotTimelineUpdateItemTrigger
	struct FSolarBotTimelineUpdateItemTrigger : public FTableRowBase
	{
	public:
		int32                                        StartTime;                                         // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_32C5[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		struct FSolarBotTimelineAIItemSetting        AIItemSetting;                                     // 0x10(0xF0)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	};

	// 0x58 (0x58 - 0x0)
	// ScriptStruct Solarland.SolarBotTimelineFilterItem
	struct FSolarBotTimelineFilterItem
	{
	public:
		enum class ESolarBotTimelineFilterType       Type;                                              // 0x0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_32C6[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TMap<enum class ESolarBotTimelineFilterParameterType, class FString> Parameter;                                         // 0x8(0x50)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	};

	// 0x10 (0x10 - 0x0)
	// ScriptStruct Solarland.SolarBotTimelineFilterGroup
	struct FSolarBotTimelineFilterGroup
	{
	public:
		TArray<struct FSolarBotTimelineFilterItem>   FilterItem;                                        // 0x0(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x10 (0x10 - 0x0)
	// ScriptStruct Solarland.SolarBotTimelineFilter
	struct FSolarBotTimelineFilter
	{
	public:
		TArray<struct FSolarBotTimelineFilterGroup>  FilterGroup;                                       // 0x0(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x18 (0x18 - 0x0)
	// ScriptStruct Solarland.SolarBotTimelineVehicleSetting
	struct FSolarBotTimelineVehicleSetting
	{
	public:
		bool                                         bHasVehicle;                                       // 0x0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_32C7[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TArray<int32>                                VehicleIDs;                                        // 0x8(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x170 (0x170 - 0x0)
	// ScriptStruct Solarland.SolarBotAISetting
	struct FSolarBotAISetting
	{
	public:
		class USolarBotAIConfig* BotConfigPreset;                                   // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FSolarBotTimelineVehicleSetting       VehicleInfo;                                       // 0x8(0x18)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
		int32                                        CharacterId;                                       // 0x20(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        SkinId;                                            // 0x24(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TMap<enum class ESolarBotTimelineAIDataSettingType, struct FIntPoint> AIDataSetting;                                     // 0x28(0x50)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
		struct FSolarBotTimelineAIItemSetting        AIItemSetting;                                     // 0x78(0xF0)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
		bool                                         bSetWarmTarget;                                    // 0x168(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_32C8[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x18 (0x18 - 0x0)
	// ScriptStruct Solarland.SolarBotTimelineAIGroupSetting
	struct FSolarBotTimelineAIGroupSetting
	{
	public:
		TArray<struct FSolarBotAISetting>            Group;                                             // 0x0(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bGetBestChoice;                                    // 0x10(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_32C9[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x18 (0x18 - 0x0)
	// ScriptStruct Solarland.SolarBotTimelineWave
	struct FSolarBotTimelineWave
	{
	public:
		TArray<struct FSolarBotTimelineAIGroupSetting> AIGroupSetting;                                    // 0x0(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class EPopLocationType                  PopLocationType;                                   // 0x10(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_32CA[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		int32                                        Timeout;                                           // 0x14(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x48 (0x50 - 0x8)
	// ScriptStruct Solarland.SolarBotTimelineTrigger
	struct FSolarBotTimelineTrigger : public FTableRowBase
	{
	public:
		enum class ESolarBotTimelineTriggerType      TriggerType;                                       // 0x8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        InstanceID;                                        // 0x9(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_32CB[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		float                                        AbsoluteTriggerTime;                               // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        RelativeTriggerTime;                               // 0x10(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        MinNumSurvivalBots;                                // 0x14(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        ForceStartTime;                                    // 0x18(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        ForceEndTime;                                      // 0x1C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FSolarBotTimelineFilter               Filter;                                            // 0x20(0x10)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
		int32                                        MaxNumRetry;                                       // 0x30(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        IntervalRetry;                                     // 0x34(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<struct FSolarBotTimelineWave>         Waves;                                             // 0x38(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_32CC[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x2 (0x2 - 0x0)
	// ScriptStruct Solarland.SolarBotWavePopSetting
	struct FSolarBotWavePopSetting
	{
	public:
		enum class EPopLocationType                  PopLocationType;                                   // 0x0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bUsingWarmTargetForward;                           // 0x1(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x14 (0x14 - 0x0)
	// ScriptStruct Solarland.SolarBotTimelineTeleCenterSetting
	struct FSolarBotTimelineTeleCenterSetting
	{
	public:
		bool                                         SetTeleCenter;                                     // 0x0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_32CD[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		struct FIntPoint                             TeleportRadius;                                    // 0x4(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FIntPoint                             TeleportAngle;                                     // 0xC(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x1C (0x1C - 0x0)
	// ScriptStruct Solarland.SolarBotUseSniperPosConfig
	struct FSolarBotUseSniperPosConfig
	{
	public:
		int32                                        MinNumSpawnerHasSearched;                          // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        MinElapsedReachedZone;                             // 0x4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        MinEnemyDistance;                                  // 0x8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        MinNumBeHitAbandonPos;                             // 0xC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        MaxDurationOccupyPos;                              // 0x10(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        MaxDurationReachedPos;                             // 0x14(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        IntervalUseNextPos;                                // 0x18(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x10 (0x10 - 0x0)
	// ScriptStruct Solarland.BotFireConfig
	struct FBotFireConfig
	{
	public:
		float                                        ShootDisperse;                                     // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        HitRate;                                           // 0x4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        ActiveDamageRate;                                  // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        ActiveDamageFactor;                                // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x58 (0x58 - 0x0)
	// ScriptStruct Solarland.SolarBotShootConfig
	struct FSolarBotShootConfig
	{
	public:
		enum class EBotFirePolicy                    FirePolicy;                                        // 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_32CE[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		float                                        FollowInterpSpeed;                                 // 0x4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        AntiHorizRecoilStrenghth;                          // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        AntiVertRecoilStrenghth;                           // 0xC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        LockHeightOffset;                                  // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        AimInterpSpeed;                                    // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        MaxFollowDeltaAngle;                               // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        MaxPreciseMoveAngle;                               // 0x1C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        RoughMoveMaxAngle;                                 // 0x20(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        FollowMoveSpeed;                                   // 0x24(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        PreciseMoveSpeed;                                  // 0x28(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        RoughMoveSpeed;                                    // 0x2C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        LockMoveSpeed;                                     // 0x30(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        PreciseMoveDeviationYaw;                           // 0x34(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        PreciseMoveDeviationPitch;                         // 0x38(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        RoughMoveDeviationYaw;                             // 0x3C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        RoughMoveDeviationPitch;                           // 0x40(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        LockMoveMaxDeltaYaw;                               // 0x44(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        LockMoveMaxDeltaPitch;                             // 0x48(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        RoughMoveReactionTime;                             // 0x4C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        PreciseMoveReactionTime;                           // 0x50(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        MaxFollowUnreachTime;                              // 0x54(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x158 (0x158 - 0x0)
	// ScriptStruct Solarland.SolarBotBattleConfig
	struct FSolarBotBattleConfig
	{
	public:
		struct FBotFireConfig                        DefaultFireConfig;                                 // 0x0(0x10)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
		struct FBotFireConfig                        FireConfigToBot;                                   // 0x10(0x10)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
		TMap<enum class EWeaponType, struct FBotFireConfig> WeaponFireConfigs;                                 // 0x20(0x50)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
		TMap<enum class EWeaponType, struct FBotFireConfig> WeaponFireConfigsToBot;                            // 0x70(0x50)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
		struct FBotFireConfig                        VehicleFireConfig;                                 // 0xC0(0x10)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
		struct FBotFireConfig                        VehicleFireConfigToBot;                            // 0xD0(0x10)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
		bool                                         bPreventFatalDamageToPlayer;                       // 0xE0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_32CF[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		float                                        DamageFactorToVehicle;                             // 0xE4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        DamageFactorToBotVehicle;                          // 0xE8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        DamageFactorToSummonItem;                          // 0xEC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        DamageFactorToBotSummonItem;                       // 0xF0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        BotAIAttackRange;                                  // 0xF4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        BotAIAttackRangeUnArm;                             // 0xF8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bEnableShootSimulator;                             // 0xFC(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_32D0[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		struct FSolarBotShootConfig                  DefaultShootConfig;                                // 0x100(0x58)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	};

	// 0x44 (0x44 - 0x0)
	// ScriptStruct Solarland.SolarBotLootSearchConfig
	struct FSolarBotLootSearchConfig
	{
	public:
		float                                        HPRatioToUseMedicine;                              // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        ShieldRatioToRecharge;                             // 0x4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        MaxSearchRangeNearbyPlayer;                        // 0x8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        MinSearchRangeNearbyPlayer;                        // 0xC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        RadiusTolerance;                                   // 0x10(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector2D                             NearbyEnemyOuterFactorRange;                       // 0x14(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector2D                             NearbyEnemyInnerFactorRange;                       // 0x1C(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector2D                             NearbyEnemyCountRange;                             // 0x24(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector2D                             NearbySpawnerOuterFactorRange;                     // 0x2C(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector2D                             NearbySpawnerInnerFactorRange;                     // 0x34(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector2D                             NearbySpawnerCountRange;                           // 0x3C(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x20 (0x20 - 0x0)
	// ScriptStruct Solarland.SolarBotLootWeaponFeedConfig
	struct FSolarBotLootWeaponFeedConfig
	{
	public:
		float                                        MaxNoWeaponTime;                                   // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_32D1[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TArray<int32>                                FeedWeaponIDs;                                     // 0x8(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        CheckPlayerSightInterval;                          // 0x18(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bStartFeedAfterSearchedAnySpawner;                 // 0x1C(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_32D2[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x44 (0x44 - 0x0)
	// ScriptStruct Solarland.SolarBotLootValuationConfig
	struct FSolarBotLootValuationConfig
	{
	public:
		float                                        MoveCostFactor;                                    // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        DistSelfToSpawnerFactor;                           // 0x4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        DistSpawnerOffsetFactor;                           // 0x8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        AvgDistSpawnerToTeammatesFactor;                   // 0xC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        AssualtRifleBaseValue;                             // 0x10(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        ShotgunBaseValue;                                  // 0x14(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        SubmachinegunBaseValue;                            // 0x18(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        SniperBaseValue;                                   // 0x1C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        WeaponQualityValue;                                // 0x20(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        AmmoBaseValue;                                     // 0x24(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        AmmoMatchFactor;                                   // 0x28(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        ShieldBaseValue;                                   // 0x2C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        ShieldQualityValue;                                // 0x30(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        JetpackModuleBaseValue;                            // 0x34(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        JetpackModuleQualityValue;                         // 0x38(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        MedkitBaseValue;                                   // 0x3C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        MedkitHPRatioFactor;                               // 0x40(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x6C (0x6C - 0x0)
	// ScriptStruct Solarland.SolarBotThreatConfig
	struct FSolarBotThreatConfig
	{
	public:
		float                                        ThreatUpdateInterval;                              // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        AttackTriggerThreshold;                            // 0x4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        CancelAttackTriggerThreshold;                      // 0x8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        SwitchTargetDifferenceValue;                       // 0xC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        DistanceThreshold;                                 // 0x10(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        DistanceThresholdInSmoke;                          // 0x14(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        PeripheralVisionAngleDegrees;                      // 0x18(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        SightIncreaseBase;                                 // 0x1C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        SightIncreaseDistanceFactor;                       // 0x20(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        SightDecreaseBase;                                 // 0x24(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        SightDecreaseDistanceFactor;                       // 0x28(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        SightDecreaseMax;                                  // 0x2C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        SightMaxValue;                                     // 0x30(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        HearingAddBase;                                    // 0x34(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        HearingAddDistanceFactor;                          // 0x38(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        HearingDecreasePerTick;                            // 0x3C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        HearingMaxValue;                                   // 0x40(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        HitSoundAlertRange;                                // 0x44(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        BotThreatFactor;                                   // 0x48(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        PlayerThreatFactor;                                // 0x4C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        DeathVergeFactor;                                  // 0x50(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        MassInvisibilityPrepareFactor;                     // 0x54(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        MaxDistanceThreatFactor;                           // 0x58(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        DistanceThreatFactorDecayRate;                     // 0x5C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        AccompanyThreatMaxValue;                           // 0x60(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        AccompanyThreatAddBase;                            // 0x64(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        AccompanyDecreasePerTick;                          // 0x68(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x8 (0x8 - 0x0)
	// ScriptStruct Solarland.SolarBotSafeAreaConfig
	struct FSolarBotSafeAreaConfig
	{
	public:
		float                                        EstimateAdjustFactor;                              // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        SafeAreaRadiusEx;                                  // 0x4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x24 (0x24 - 0x0)
	// ScriptStruct Solarland.SolarBotSkyDivingConfig
	struct FSolarBotSkyDivingConfig
	{
	public:
		float                                        DecisionAltitude;                                  // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        RandomLandingRadius;                               // 0x4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        RandomDelayCancelFollow;                           // 0x8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        FollowAcceptDistance;                              // 0xC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        AbandonCheckAltitude;                              // 0x10(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        CheckEnemyRange;                                   // 0x14(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        CheckEnemyCount;                                   // 0x18(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        OuterRandomLandingRadius;                          // 0x1C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        InnerRandomLandingRadius;                          // 0x20(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x60 (0x68 - 0x8)
	// ScriptStruct Solarland.SolarBotGameTeamSetting
	struct FSolarBotGameTeamSetting : public FTableRowBase
	{
	public:
		TMap<class USolarBotTeamConfig*, float>      TeamConfigWeightMap;                               // 0x8(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
		TArray<class USolarBotAIConfig*>             CandidateBotConfigs;                               // 0x58(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x18 (0x18 - 0x0)
	// ScriptStruct Solarland.SolarBotTeamHeroPickFormation
	struct FSolarBotTeamHeroPickFormation
	{
	public:
		bool                                         bFormatByCharType;                                 // 0x0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_32D3[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TArray<enum class ESolarTablesEnum_CharacterType> CharTypeFormation;                                 // 0x8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x50 (0x50 - 0x0)
	// ScriptStruct Solarland.SolarBotTeamBuildRule
	struct FSolarBotTeamBuildRule
	{
	public:
		TMap<struct FGameplayTag, float>             TagWeights;                                        // 0x0(0x50)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	};

	// 0x28 (0x28 - 0x0)
	// ScriptStruct Solarland.BotMemberDebugInfo
	struct FBotMemberDebugInfo
	{
	public:
		struct FVector                               MemberLocation;                                    // 0x0(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_32D4[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class FString                                IDStr;                                             // 0x10(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class ESolarBotMemberState              MemberState;                                       // 0x20(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_32D5[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x18 (0x18 - 0x0)
	// ScriptStruct Solarland.BotTeamDebugInfo
	struct FBotTeamDebugInfo
	{
	public:
		int32                                        TeamID;                                            // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_32D6[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TArray<struct FBotMemberDebugInfo>           MemberDebugInfos;                                  // 0x8(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x50 (0x50 - 0x0)
	// ScriptStruct Solarland.SolarTaskScoringItem
	struct FSolarTaskScoringItem
	{
	public:
		TMap<enum class ESolarTaskScoringItemType, float> ScoringItemMap;                                    // 0x0(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	};

	// 0x14 (0x14 - 0x0)
	// ScriptStruct Solarland.SolarScoringItemStruct
	struct FSolarScoringItemStruct
	{
	public:
		TWeakObjectPtr<class ASolarBotAIController>  BotController;                                     // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TWeakObjectPtr<class AActor>                 RelativeActor;                                     // 0x8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        Score;                                             // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x28 (0x28 - 0x0)
	// ScriptStruct Solarland.ByteBuffer
	struct FByteBuffer
	{
	public:
		uint8                                        Pad_32D7[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x20 (0x20 - 0x0)
	// ScriptStruct Solarland.BoardingSpotInfo
	struct FBoardingSpotInfo
	{
	public:
		struct FVector                               SpotLocation;                                      // 0x0(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_32D8[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class ASolarPlayerState* BoardingPlayer;                                    // 0x10(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class ASolarPlayerState* LeaderPlayer;                                      // 0x18(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x10 (0x10 - 0x0)
	// ScriptStruct Solarland.EchelonFormationUnit
	struct FEchelonFormationUnit
	{
	public:
		TArray<struct FBoardingSpotInfo>             EchelonFormation;                                  // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x50 (0x50 - 0x0)
	// ScriptStruct Solarland.TeamFormationUnit
	struct FTeamFormationUnit
	{
	public:
		TMap<uint8, struct FEchelonFormationUnit>    TeamFormation;                                     // 0x0(0x50)(NativeAccessSpecifierPublic)
	};

	// 0x44 (0x44 - 0x0)
	// ScriptStruct Solarland.UsingAirlineData
	struct FUsingAirlineData
	{
	public:
		int32                                        MapID;                                             // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector                               StartPoint;                                        // 0x4(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector                               EndPoint;                                          // 0x10(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector2D                             Direction;                                         // 0x1C(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        Speed;                                             // 0x24(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        Height;                                            // 0x28(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector                               CanParachutePoint;                                 // 0x2C(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector                               ForceParachutePoint;                               // 0x38(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x10 (0x10 - 0x0)
	// ScriptStruct Solarland.BoarderInfo
	struct FBoarderInfo
	{
	public:
		class ASolarCharacter* Boarder;                                           // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        BoarderTeamID;                                     // 0x8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        BoarderTeamSize;                                   // 0xC(0x4)(ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x4 (0x4 - 0x0)
	// ScriptStruct Solarland.HotFixAntiCheatData
	struct FHotFixAntiCheatData
	{
	public:
		float                                        BulletSpread;                                      // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x28 (0x30 - 0x8)
	// ScriptStruct Solarland.SoundEventRow
	struct FSoundEventRow : public FTableRowBase
	{
	public:
		enum class ECharacterSoundOpt                SoundOpt;                                          // 0x8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_32D9[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class FString                                SoundName;                                         // 0x10(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                EventName;                                         // 0x20(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x30 (0x30 - 0x0)
	// ScriptStruct Solarland.CharacterSound
	struct FCharacterSound
	{
	public:
		class FString                                SoundOptPlayer;                                    // 0x0(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                SoundOptTeammate;                                  // 0x10(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                SoundOptEnemy;                                     // 0x20(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x38 (0x38 - 0x0)
	// ScriptStruct Solarland.CamEffectSettings
	struct FCamEffectSettings
	{
	public:
		float                                        FadeIn;                                            // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        FadeOut;                                           // 0x4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        Duration;                                          // 0x8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bEnableOffset;                                     // 0xC(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_32DA[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class UCurveVector* OffsetCurve;                                       // 0x10(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bEnableRotation;                                   // 0x18(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_32DB[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class UCurveVector* RotationCurve;                                     // 0x20(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bEnableFOV;                                        // 0x28(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_32DC[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class UCurveFloat* FOVCurve;                                          // 0x30(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x20 (0x20 - 0x0)
	// ScriptStruct Solarland.CameraSettings
	struct FCameraSettings
	{
	public:
		float                                        DistanceToTarget;                                  // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        CameraFOV;                                         // 0x4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector                               TargetOffset;                                      // 0x8(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector                               CameraOffset;                                      // 0x14(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x0 (0x110 - 0x110)
	// ScriptStruct Solarland.SolarTacticalSkillDamageEvent
	struct FSolarTacticalSkillDamageEvent : public FSolarPointDamageEvent
	{
	public:
	};

	// 0x0 (0x110 - 0x110)
	// ScriptStruct Solarland.SolarClassSkillDamageEvent
	struct FSolarClassSkillDamageEvent : public FSolarPointDamageEvent
	{
	public:
	};

	// 0x0 (0x110 - 0x110)
	// ScriptStruct Solarland.WeaponAbilityDamageEvent
	struct FWeaponAbilityDamageEvent : public FSolarPointDamageEvent
	{
	public:
	};

	// 0x20 (0x130 - 0x110)
	// ScriptStruct Solarland.VehicleAbilityDamageEvent
	struct FVehicleAbilityDamageEvent : public FSolarPointDamageEvent
	{
	public:
		class FString                                AbilityName;                                       // 0x110(0x10)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                AbilityTextType;                                   // 0x120(0x10)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x8 (0x118 - 0x110)
	// ScriptStruct Solarland.SummonWeaponDamageEvent
	struct FSummonWeaponDamageEvent : public FSolarPointDamageEvent
	{
	public:
		TWeakObjectPtr<class ASolarCharacter>        SourceWeaponHolder;                                // 0x110(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x10 (0x120 - 0x110)
	// ScriptStruct Solarland.SolarWeaponDamageEvent
	struct FSolarWeaponDamageEvent : public FSolarPointDamageEvent
	{
	public:
		int32                                        Weaponid;                                          // 0x110(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        WeaponLv;                                          // 0x114(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        ItemID;                                            // 0x118(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_32DD[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x8 (0x128 - 0x120)
	// ScriptStruct Solarland.VehicleWeaponDamageEvent
	struct FVehicleWeaponDamageEvent : public FSolarWeaponDamageEvent
	{
	public:
		int32                                        VehicleID;                                         // 0x120(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_32DE[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x0 (0x110 - 0x110)
	// ScriptStruct Solarland.UnarmWeaponDamageEvent
	struct FUnarmWeaponDamageEvent : public FSolarPointDamageEvent
	{
	public:
	};

	// 0x8 (0x118 - 0x110)
	// ScriptStruct Solarland.VhicleExplosionDamageEvent
	struct FVhicleExplosionDamageEvent : public FSolarPointDamageEvent
	{
	public:
		int32                                        VehicleID;                                         // 0x110(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_32DF[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x8 (0x118 - 0x110)
	// ScriptStruct Solarland.VehicleHitDamageEvent
	struct FVehicleHitDamageEvent : public FSolarPointDamageEvent
	{
	public:
		int32                                        VehicleID;                                         // 0x110(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_32E0[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x0 (0x110 - 0x110)
	// ScriptStruct Solarland.SolarSystemDamage
	struct FSolarSystemDamage : public FSolarPointDamageEvent
	{
	public:
	};

	// 0x0 (0x110 - 0x110)
	// ScriptStruct Solarland.GMCmdDamageEvent
	struct FGMCmdDamageEvent : public FSolarSystemDamage
	{
	public:
	};

	// 0x0 (0x110 - 0x110)
	// ScriptStruct Solarland.DeathVergeInWaterDamageEvent
	struct FDeathVergeInWaterDamageEvent : public FSolarSystemDamage
	{
	public:
	};

	// 0x0 (0x110 - 0x110)
	// ScriptStruct Solarland.HelplessDeathVergeDamageEvent
	struct FHelplessDeathVergeDamageEvent : public FSolarSystemDamage
	{
	public:
	};

	// 0x0 (0x110 - 0x110)
	// ScriptStruct Solarland.DyingDamageEvent
	struct FDyingDamageEvent : public FSolarSystemDamage
	{
	public:
	};

	// 0x0 (0x110 - 0x110)
	// ScriptStruct Solarland.SolarAirDropDamageEvent
	struct FSolarAirDropDamageEvent : public FSolarSystemDamage
	{
	public:
	};

	// 0x0 (0x110 - 0x110)
	// ScriptStruct Solarland.SolarBombDamageEvent
	struct FSolarBombDamageEvent : public FSolarSystemDamage
	{
	public:
	};

	// 0x0 (0x110 - 0x110)
	// ScriptStruct Solarland.SolarPoisonDamageEvent
	struct FSolarPoisonDamageEvent : public FSolarSystemDamage
	{
	public:
	};

	// 0x10 (0x10 - 0x0)
	// ScriptStruct Solarland.SolarGameplayEffectConfig
	struct FSolarGameplayEffectConfig
	{
	public:
		TSubclassOf<class UGameplayEffect>           GameplayEffectClass;                               // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bRemoveOnEnd;                                      // 0x8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_32E1[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		int32                                        Level;                                             // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x50 (0x50 - 0x0)
	// ScriptStruct Solarland.TempUndesignedAttributeMap
	struct FTempUndesignedAttributeMap
	{
	public:
		TMap<class FName, float>                     Value;                                             // 0x0(0x50)(NativeAccessSpecifierPublic)
	};

	// 0x20 (0x20 - 0x0)
	// ScriptStruct Solarland.TeammateHUDPreset
	struct FTeammateHUDPreset
	{
	public:
		TSubclassOf<class UUserWidget>               TeammateHUDClass;                                  // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bUseDesireSize;                                    // 0x8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_32E2[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		struct FVector2D                             DrawSize;                                          // 0xC(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        ZOrder;                                            // 0x14(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        DisplayMaxDistance;                                // 0x18(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_32E3[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x50 (0x50 - 0x0)
	// ScriptStruct Solarland.InjectorMeshPreset
	struct FInjectorMeshPreset
	{
	public:
		struct FSoftObjectPath                       InjectorMeshPath;                                  // 0x0(0x18)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_32E4[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		struct FTransform                            InjectorRelativeTrans;                             // 0x20(0x30)(Edit, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	};

	// 0x50 (0x50 - 0x0)
	// ScriptStruct Solarland.VehicleRepairToolMeshPreset
	struct FVehicleRepairToolMeshPreset
	{
	public:
		struct FSoftObjectPath                       MeshPath;                                          // 0x0(0x18)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_32E5[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		struct FTransform                            RelativeTrans;                                     // 0x20(0x30)(Edit, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	};

	// 0x50 (0x50 - 0x0)
	// ScriptStruct Solarland.TreasureBoxOperatorMeshPreset
	struct FTreasureBoxOperatorMeshPreset
	{
	public:
		struct FGameplayTag                          StaticOrnamentMeshTag;                             // 0x0(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FSoftObjectPath                       TreasureBoxOperatorMeshPath;                       // 0x8(0x18)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FTransform                            TreasureBoxOperatorRelativeTrans;                  // 0x20(0x30)(Edit, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	};

	// 0x120 (0x120 - 0x0)
	// ScriptStruct Solarland.OperatorMeshPreset
	struct FOperatorMeshPreset
	{
	public:
		TSoftObjectPtr<class UParticleSystem>        ShieldRepairFXResourceSoft;                        // 0x0(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector                               ShieldRepairFXRelativeLocation;                    // 0x28(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_32E6[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TSoftObjectPtr<class UParticleSystem>        ShieldMultiRecoverFXResourceSoft;                  // 0x38(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector                               ShieldMultiRecoverFXRelativeLocation;              // 0x60(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_32E7[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		struct FSoftObjectPath                       ShieldOperatorMeshPath;                            // 0x70(0x18)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FSoftObjectPath                       ShieldOperatorBigMeshPath;                         // 0x88(0x18)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FTransform                            ShieldOperatorRelativeTrans;                       // 0xA0(0x30)(Edit, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		struct FSoftObjectPath                       ShieldUpgradeOperatorMeshPath;                     // 0xD0(0x18)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_32E8[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		struct FTransform                            ShieldUpgradeOperatorRelativeTrans;                // 0xF0(0x30)(Edit, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	};

	// 0x50 (0x50 - 0x0)
	// ScriptStruct Solarland.WaterEffectPreset
	struct FWaterEffectPreset
	{
	public:
		TSoftObjectPtr<class UParticleSystem>        EffectResource;                                    // 0x0(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FName                                  DefaultTrackSocket;                                // 0x28(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FName                                  FTrackSocket;                                      // 0x30(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FName                                  BTrackSocket;                                      // 0x38(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FName                                  LTrackSocket;                                      // 0x40(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FName                                  RTrackSocket;                                      // 0x48(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x70 (0x70 - 0x0)
	// ScriptStruct Solarland.SkydivingEffectPreset
	struct FSkydivingEffectPreset
	{
	public:
		TSoftObjectPtr<class UParticleSystem>        EffectResource;                                    // 0x0(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_32E9[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		struct FTransform                            AttachmentOffset;                                  // 0x30(0x30)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		class FName                                  AttachmentSocket;                                  // 0x60(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class ESkydiveEffectLifetime            LifeTime;                                          // 0x68(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_32EA[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x8 (0x8 - 0x0)
	// ScriptStruct Solarland.BagRequirementData
	struct FBagRequirementData
	{
	public:
		int32                                        ItemID;                                            // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        Count;                                             // 0x4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0xC8 (0xC8 - 0x0)
	// ScriptStruct Solarland.ReplicateBagGridData
	struct FReplicateBagGridData
	{
	public:
		struct FSolarItemData                        ItemData;                                          // 0x0(0xB8)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
		enum class EBagGridType                      GridType;                                          // 0xB8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_32EB[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		int32                                        BagGrade;                                          // 0xBC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        Index;                                             // 0xC0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         IsRequirementTag;                                  // 0xC4(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_32EC[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x18 (0x18 - 0x0)
	// ScriptStruct Solarland.ReplicateBagGradeData
	struct FReplicateBagGradeData
	{
	public:
		int32                                        BagGrade;                                          // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_32ED[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TArray<struct FReplicateBagGridData>         BagGridDataArray;                                  // 0x8(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x38 (0x38 - 0x0)
	// ScriptStruct Solarland.ShieldEffect
	struct FShieldEffect
	{
	public:
		TSoftObjectPtr<class UParticleSystem>        ShieldEffect;                                      // 0x0(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector                               EffectScale;                                       // 0x28(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_32EE[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x10 (0x10 - 0x0)
	// ScriptStruct Solarland.CharacterMovementSimulationOptions
	struct FCharacterMovementSimulationOptions
	{
	public:
		bool                                         bEnabled;                                          // 0x0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_32EF[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		float                                        NetworkMaxSmoothUpdateDistance;                    // 0x4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        NetworkNoSmoothUpdateDistance;                     // 0x8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        NetworkSimulatedSmoothLocationTime;                // 0xC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0xC (0xC - 0x0)
	// ScriptStruct Solarland.CharacterMovementNetworkOptions
	struct FCharacterMovementNetworkOptions
	{
	public:
		bool                                         bEnabled;                                          // 0x0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bServerAcceptClientAuthoritativePosition;          // 0x1(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bIgnoreClientMovementErrorChecksAndCorrection;     // 0x2(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_32F0[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		float                                        MaxLocationDifferenceToTrustClientMove;            // 0x4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class EClientMoveTrustType              ClientMoveTrustType;                               // 0x8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_32F1[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x18 (0x20 - 0x8)
	// ScriptStruct Solarland.SideDataParams
	struct FSideDataParams : public FGameplayAbilityTargetData
	{
	public:
		class FString                                SideName;                                          // 0x8(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        TeamID;                                            // 0x18(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_32F2[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x10 (0x18 - 0x8)
	// ScriptStruct Solarland.RadarSpawnParams
	struct FRadarSpawnParams : public FGameplayAbilityTargetData
	{
	public:
		struct FVector                               SpawnLocation;                                     // 0x8(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_32F3[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x8 (0x10 - 0x8)
	// ScriptStruct Solarland.VehicleHitchingParams
	struct FVehicleHitchingParams : public FGameplayAbilityTargetData
	{
	public:
		int32                                        VehicleTypeID;                                     // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_32F4[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x10 (0x18 - 0x8)
	// ScriptStruct Solarland.ZiplineData
	struct FZiplineData : public FGameplayAbilityTargetData
	{
	public:
		class ASolarZiplineObj* ZiplineObj;                                        // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class EZiplineSide                      BeginningSide;                                     // 0x10(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_32F5[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x20 (0x28 - 0x8)
	// ScriptStruct Solarland.CustomJetFlyParams
	struct FCustomJetFlyParams : public FGameplayAbilityTargetData
	{
	public:
		struct FVector_NetQuantizeNormal             DashDirection;                                     // 0x8(0xC)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        DashTime;                                          // 0x14(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        DashDistance;                                      // 0x18(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        DashBreakableTime;                                 // 0x1C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        DashCameraFadeOutTime;                             // 0x20(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_32F6[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x8 (0x10 - 0x8)
	// ScriptStruct Solarland.DanceData
	struct FDanceData : public FGameplayAbilityTargetData
	{
	public:
		int32                                        DanceID;                                           // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_32F7[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x20 (0x28 - 0x8)
	// ScriptStruct Solarland.HitRecoverData
	struct FHitRecoverData : public FGameplayAbilityTargetData
	{
	public:
		float                                        StartTime;                                         // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector                               StartLocation;                                     // 0xC(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector                               Direction;                                         // 0x18(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class EHitRecoverType                   Type;                                              // 0x24(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_32F8[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x20 (0x28 - 0x8)
	// ScriptStruct Solarland.WallRunJumpData
	struct FWallRunJumpData : public FGameplayAbilityTargetData
	{
	public:
		struct FVector                               EndLocation;                                       // 0x8(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FRotator                              EndRotation;                                       // 0x14(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		bool                                         bWallRunFailed;                                    // 0x20(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_32F9[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x38 (0x40 - 0x8)
	// ScriptStruct Solarland.VaultData
	struct FVaultData : public FGameplayAbilityTargetData
	{
	public:
		struct FVector                               AnchorLocation;                                    // 0x8(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FRotator                              AnchorRotation;                                    // 0x14(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		struct FVector                               LandLocation;                                      // 0x20(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class EVaultType                        VaultType;                                         // 0x2C(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_32FA[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		float                                        CameraAngle;                                       // 0x30(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        CharacterAngle;                                    // 0x34(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bAuto;                                             // 0x38(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_32FB[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x0 (0x40 - 0x40)
	// ScriptStruct Solarland.WallRunData
	struct FWallRunData : public FVaultData
	{
	public:
	};

	// 0x28 (0x30 - 0x8)
	// ScriptStruct Solarland.MissileSwarmParams
	struct FMissileSwarmParams : public FGameplayAbilityTargetData
	{
	public:
		struct FVector                               MissileStartCenterPoint;                           // 0x8(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector                               MissileTargetCenterPoint;                          // 0x14(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FRotator                              ViewRotation;                                      // 0x20(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		uint8                                        Pad_32FC[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x8 (0x10 - 0x8)
	// ScriptStruct Solarland.SkywardDiveParams
	struct FSkywardDiveParams : public FGameplayAbilityTargetData
	{
	public:
		TWeakObjectPtr<class AActor>                 SkywardDiveLauncherActor;                          // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x18 (0x20 - 0x8)
	// ScriptStruct Solarland.LaunchParams
	struct FLaunchParams : public FGameplayAbilityTargetData
	{
	public:
		struct FVector                               LaunchVelocity;                                    // 0x8(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bXYOverride;                                       // 0x14(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bZOverride;                                        // 0x15(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_32FD[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class AActor* JumpPadActor;                                      // 0x18(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x8 (0x10 - 0x8)
	// ScriptStruct Solarland.CrouchData
	struct FCrouchData : public FGameplayAbilityTargetData
	{
	public:
		bool                                         bCanCrouchOnFalling;                               // 0x8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_32FE[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x8 (0x10 - 0x8)
	// ScriptStruct Solarland.MeleeAttackParams
	struct FMeleeAttackParams : public FGameplayAbilityTargetData
	{
	public:
		int32                                        MeleeIndex;                                        // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bFullBody;                                         // 0xC(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_32FF[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x8 (0x10 - 0x8)
	// ScriptStruct Solarland.BoltParams
	struct FBoltParams : public FGameplayAbilityTargetData
	{
	public:
		int32                                        FireMode;                                          // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3300[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x8 (0x10 - 0x8)
	// ScriptStruct Solarland.FireParams
	struct FFireParams : public FGameplayAbilityTargetData
	{
	public:
		int32                                        FireMode;                                          // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3301[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x8 (0x10 - 0x8)
	// ScriptStruct Solarland.EquipParams
	struct FEquipParams : public FGameplayAbilityTargetData
	{
	public:
		int32                                        WeaponSlot;                                        // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        SwitchTime;                                        // 0xC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x18 (0x20 - 0x8)
	// ScriptStruct Solarland.PickUpAbilityParams
	struct FPickUpAbilityParams : public FGameplayAbilityTargetData
	{
	public:
		float                                        HeightDifferenceToItem;                            // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3302[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class FString                                SoundEventName;                                    // 0x10(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x18 (0x18 - 0x0)
	// ScriptStruct Solarland.ChunkAssignRule
	struct FChunkAssignRule
	{
	public:
		class FString                                FullPath;                                          // 0x0(0x10)(Edit, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        ChunkID;                                           // 0x10(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3303[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x18 (0x18 - 0x0)
	// ScriptStruct Solarland.SafeAreaInfoBase
	struct FSafeAreaInfoBase
	{
	public:
		struct FVector                               Location;                                          // 0x0(0xC)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        WaitTime;                                          // 0xC(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        ShrinkTime;                                        // 0x10(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        DamageValue;                                       // 0x14(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x4 (0x1C - 0x18)
	// ScriptStruct Solarland.CircleSafeAreaInfo
	struct FCircleSafeAreaInfo : public FSafeAreaInfoBase
	{
	public:
		float                                        Radius;                                            // 0x18(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x38 (0x38 - 0x0)
	// ScriptStruct Solarland.HeroClassConfig
	struct FHeroClassConfig
	{
	public:
		TSoftObjectPtr<class UPassiveSkillDataAsset> SpecificPassiveSkill;                              // 0x0(0x28)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        HPGridUnit;                                        // 0x28(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bEnableCombatRegeneration;                         // 0x2C(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3304[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		int32                                        RegenGrids;                                        // 0x30(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3305[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x8 (0x8 - 0x0)
	// ScriptStruct Solarland.ClassLevelUpPropertyRewardConfig
	struct FClassLevelUpPropertyRewardConfig
	{
	public:
		enum class ESolarTablesEnum_BattleUpgradeEffectType EffectType;                                        // 0x0(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3306[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		int32                                        EffectValue;                                       // 0x4(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x38 (0x38 - 0x0)
	// ScriptStruct Solarland.ClassLevelUpRewardConfig
	struct FClassLevelUpRewardConfig
	{
	public:
		int32                                        TargetLevel;                                       // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class EClassLevelUpRewardType           RewardType;                                        // 0x4(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3307[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TSoftObjectPtr<class UPassiveSkillDataAsset> TargetPassiveSkill;                                // 0x8(0x28)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FClassLevelUpPropertyRewardConfig     PropertyReward;                                    // 0x30(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	};

	// 0x68 (0x70 - 0x8)
	// ScriptStruct Solarland.ClassInfo
	struct FClassInfo : public FTableRowBase
	{
	public:
		enum class EClassType                        ClassType;                                         // 0x8(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3308[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		int32                                        ClassName;                                         // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FSoftObjectPath                       ClassIcon;                                         // 0x10(0x18)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class USkillConfig* SkillOne;                                          // 0x28(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class USkillConfig* SkillTwo;                                          // 0x30(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TSoftObjectPtr<class UPassiveSkillDataAsset> InitPassiveSkill;                                  // 0x38(0x28)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<struct FClassLevelUpRewardConfig>     LevelUpBonus;                                      // 0x60(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x14 (0x14 - 0x0)
	// ScriptStruct Solarland.SolarDamageTextData
	struct FSolarDamageTextData
	{
	public:
		TWeakObjectPtr<class USolarTextBlock>        Text;                                              // 0x0(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TWeakObjectPtr<class UWidgetAnimation>       Animation;                                         // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bEnableDamageSpecialAnimation;                     // 0x10(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3309[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x28 (0x28 - 0x0)
	// ScriptStruct Solarland.SolarDamageTextIconData
	struct FSolarDamageTextIconData
	{
	public:
		TArray<class UImage*>                        Icons;                                             // 0x0(0x10)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TWeakObjectPtr<class UImage>                 Outline;                                           // 0x10(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TWeakObjectPtr<class UCanvasPanel>           Panel;                                             // 0x18(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TWeakObjectPtr<class UWidgetAnimation>       Animation;                                         // 0x20(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x30 (0x30 - 0x0)
	// ScriptStruct Solarland.SolarDamageTextGroupData
	struct FSolarDamageTextGroupData
	{
	public:
		TArray<TWeakObjectPtr<class USolarDamageTextSlotWidget>> FloatDamageTextSlotWidgets;                        // 0x0(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TWeakObjectPtr<class USolarDamageTextSlotWidget> StackDamageTextSlotWidget;                         // 0x10(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        HitCount;                                          // 0x18(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        CurrentDisplayIndex;                               // 0x1C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TWeakObjectPtr<class USolarDamageTextSlotWidget> PendingDamageTextSlotWidget;                       // 0x20(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        DamageCount;                                       // 0x28(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bFirstDisplay;                                     // 0x2C(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        ReferenceTimes;                                    // 0x2D(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_330A[0x2];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x68 (0x68 - 0x0)
	// ScriptStruct Solarland.SolarDamageTextColor
	struct FSolarDamageTextColor
	{
	public:
		struct FSlateColor                           FontColor;                                         // 0x0(0x28)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
		struct FLinearColor                          ShadowColor;                                       // 0x28(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FLinearColor                          IconColor;                                         // 0x38(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FLinearColor                          OutlineColor;                                      // 0x48(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FLinearColor                          IconOutlineColor;                                  // 0x58(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0xA0 (0xA0 - 0x0)
	// ScriptStruct Solarland.SolarDamageTextStyle
	struct FSolarDamageTextStyle
	{
	public:
		class FText                                  DamageText;                                        // 0x0(0x18)(BlueprintVisible, NativeAccessSpecifierPublic)
		struct FSlateFontInfo                        Font;                                              // 0x18(0x60)(Edit, BlueprintVisible, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector2D                             ShadowOffset;                                      // 0x78(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FMargin                               Margin;                                            // 0x80(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		TArray<struct FSolarDamageTextColor>         Colors;                                            // 0x90(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x118 (0x118 - 0x0)
	// ScriptStruct Solarland.SolarDamageTextSlotInfo
	struct FSolarDamageTextSlotInfo
	{
	public:
		int32                                        Damage;                                            // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_330B[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		struct FSolarDamageTextStyle                 DamageTextStyle;                                   // 0x8(0xA0)(NativeAccessSpecifierPublic)
		enum class ESolarDamageTextType              DamageTextType;                                    // 0xA8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_330C[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		struct FSolarDamageTextColor                 DamageTextColor;                                   // 0xB0(0x68)(NativeAccessSpecifierPublic)
	};

	// 0x34 (0x34 - 0x0)
	// ScriptStruct Solarland.VehicleDamageLevelColor
	struct FVehicleDamageLevelColor
	{
	public:
		struct FLinearColor                          BackgroundColor;                                   // 0x0(0x10)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FLinearColor                          BackgroundLeftPartColor;                           // 0x10(0x10)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FLinearColor                          OutlineColor;                                      // 0x20(0x10)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        DamageBonus;                                       // 0x30(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x18 (0x18 - 0x0)
	// ScriptStruct Solarland.VehicleSeatWidgets
	struct FVehicleSeatWidgets
	{
	public:
		class USolarCheckBox* CheckBox_Seat;                                     // 0x0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class USolarCheckBox* CheckBox_SeatExpand;                               // 0x8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class UImage* Img_SwitchIcon;                                    // 0x10(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x60 (0x60 - 0x0)
	// ScriptStruct Solarland.VehicleAbilityWidgets
	struct FVehicleAbilityWidgets
	{
	public:
		class UCanvasPanel* Container_VehicleSkill;                            // 0x0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class UCommonLazyImage* LazyImage_Skill;                                   // 0x8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class USolarTextBlock* Txt_Skill;                                         // 0x10(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class UGaugeImage* Img_CD;                                            // 0x18(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class UTextBlock* Txt_CD;                                            // 0x20(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class UImage* Img_Disable;                                       // 0x28(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class UCanvasPanel* Panel_Duration;                                    // 0x30(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class UMaterialInstanceDynamic* Progress_DurationMat;                              // 0x38(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class UWidgetAnimation* Anim_CDFinished;                                   // 0x40(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class UWidgetAnimation* Anim_ActivedLoop;                                  // 0x48(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_330D[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x38 (0x38 - 0x0)
	// ScriptStruct Solarland.VehicleWeaponFireWidgets
	struct FVehicleWeaponFireWidgets
	{
	public:
		class USolarMovablePad* VehicleFirePad;                                    // 0x0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class UImage* VehicleFireIcon;                                   // 0x8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class USolarTextBlock* Txt_FireType;                                      // 0x10(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class UProgressBar* VehicleFireCDProgress;                             // 0x18(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class USolarTextBlock* Txt_VehicleFireCD;                                 // 0x20(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class USolarMovablePad* QuickAdsFirePad;                                   // 0x28(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class UImage* QuickAdsFireIcon;                                  // 0x30(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x8 (0x8 - 0x0)
	// ScriptStruct Solarland.PoolRefreshInfo
	struct FPoolRefreshInfo
	{
	public:
		int32                                        PoolGroupID;                                       // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        PoolRefreshTime;                                   // 0x4(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x18 (0x18 - 0x0)
	// ScriptStruct Solarland.ElectricShopSection
	struct FElectricShopSection
	{
	public:
		TArray<struct FElectricShopItem>             Items;                                             // 0x0(0x10)(Edit, BlueprintVisible, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        CoolDownDuration;                                  // 0x10(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_330E[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x20 (0x20 - 0x0)
	// ScriptStruct Solarland.ElectricShopCDRecord
	struct FElectricShopCDRecord
	{
	public:
		int32                                        ProductID;                                         // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        Duration;                                          // 0x4(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        EndWorldTime;                                      // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_330F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class FString                                BuyerID;                                           // 0x10(0x10)(Edit, BlueprintVisible, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x28 (0x30 - 0x8)
	// ScriptStruct Solarland.ElectricShopItemDemoRow
	struct FElectricShopItemDemoRow : public FTableRowBase
	{
	public:
		TSoftClassPtr<class AElectricShopItemDemo>   ItemDemoBP;                                        // 0x8(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x18 (0x20 - 0x8)
	// ScriptStruct Solarland.ElectricShopMeshRow
	struct FElectricShopMeshRow : public FTableRowBase
	{
	public:
		struct FSoftObjectPath                       Mesh;                                              // 0x8(0x18)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x10 (0x10 - 0x0)
	// ScriptStruct Solarland.MatUpdateParams
	struct FMatUpdateParams
	{
	public:
		class FName                                  MatParam;                                          // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class UCurveFloat* MatCurve;                                          // 0x8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x60 (0x60 - 0x0)
	// ScriptStruct Solarland.CharacterSkydiveTrailData
	struct FCharacterSkydiveTrailData
	{
	public:
		uint8                                        Pad_3310[0x60];                                    // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x40 (0x40 - 0x0)
	// ScriptStruct Solarland.SkydiveTrailFrameInfo
	struct FSkydiveTrailFrameInfo
	{
	public:
		class FString                                CharacterId;                                       // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class ASolarPlayerState* OwnerPlayerState;                                  // 0x10(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector                               Location;                                          // 0x18(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FRotator                              Rotation;                                          // 0x24(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		struct FVector                               Velocity;                                          // 0x30(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3311[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x24 (0x30 - 0xC)
	// ScriptStruct Solarland.PackedSkydiveTrailFrameInfo
	struct FPackedSkydiveTrailFrameInfo : public FFastArraySerializerItem
	{
	public:
		float                                        Timestamp;                                         // 0xC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<struct FSkydiveTrailFrameInfo>        FrameInfos;                                        // 0x10(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<class ASolarPlayerState*>             FinishedPlayerStates;                              // 0x20(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x18 (0x120 - 0x108)
	// ScriptStruct Solarland.PackedSkydiveTrailFrameInfoContainer
	struct FPackedSkydiveTrailFrameInfoContainer : public FFastArraySerializer
	{
	public:
		TArray<struct FPackedSkydiveTrailFrameInfo>  InfoArray;                                         // 0x108(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class ASolarFlyTrail* Owner;                                             // 0x118(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x2C (0x38 - 0xC)
	// ScriptStruct Solarland.CharacterSkydiveTrailStaticInfo
	struct FCharacterSkydiveTrailStaticInfo : public FFastArraySerializerItem
	{
	public:
		uint8                                        Pad_3312[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class FString                                CharacterId;                                       // 0x10(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class ASolarPlayerState* PlayerState;                                       // 0x20(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                TrailAssemblingId;                                 // 0x28(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x18 (0x120 - 0x108)
	// ScriptStruct Solarland.CharacterSkydiveTrailStaticInfoContainer
	struct FCharacterSkydiveTrailStaticInfoContainer : public FFastArraySerializer
	{
	public:
		TArray<struct FCharacterSkydiveTrailStaticInfo> InfoArray;                                         // 0x108(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class ASolarFlyTrail* Owner;                                             // 0x118(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x70 (0x70 - 0x0)
	// ScriptStruct Solarland.AntiCheatData
	struct FAntiCheatData
	{
	public:
		uint8                                        Pad_3313[0x70];                                    // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x18 (0x18 - 0x0)
	// ScriptStruct Solarland.FeedBotStrategyInfo
	struct FFeedBotStrategyInfo
	{
	public:
		class FString                                PlayerId;                                          // 0x0(0x10)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        FeedPriority;                                      // 0x10(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        Difficulty;                                        // 0x14(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x8 (0x8 - 0x0)
	// ScriptStruct Solarland.SolarGameMode_DropItemData
	struct FSolarGameMode_DropItemData
	{
	public:
		int32                                        ID;                                                // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        Count;                                             // 0x4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x68 (0x68 - 0x0)
	// ScriptStruct Solarland.SCustomMode_GameModeSetting
	struct FSCustomMode_GameModeSetting
	{
	public:
		struct FSoftObjectPath                       PlayerControllerClass;                             // 0x0(0x18)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FSoftObjectPath                       DefaultPawnClass;                                  // 0x18(0x18)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FSoftObjectPath                       PlayerStateClass;                                  // 0x30(0x18)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FSoftObjectPath                       HUDClass;                                          // 0x48(0x18)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        SettlementStageConfigID;                           // 0x60(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3314[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x30 (0x30 - 0x0)
	// ScriptStruct Solarland.SolarElementGroupPath
	struct FSolarElementGroupPath
	{
	public:
		class FString                                Name;                                              // 0x0(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FSoftObjectPath                       ElementLevel;                                      // 0x10(0x18)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         LoadWithLevel;                                     // 0x28(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bPersistentLevel;                                  // 0x29(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3315[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x78 (0x78 - 0x0)
	// ScriptStruct Solarland.SGameMode_LevelConfig
	struct FSGameMode_LevelConfig
	{
	public:
		class FString                                Name;                                              // 0x0(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Desc;                                              // 0x10(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FSoftObjectPath                       LevelMap;                                          // 0x20(0x18)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        MiniMapId;                                         // 0x38(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         IsStreaming;                                       // 0x3C(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3316[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TArray<struct FSolarElementGroupPath>        ElementGroups;                                     // 0x40(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TSoftClassPtr<class ULoadingUIBase>          LoadingUI;                                         // 0x50(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x218 (0x220 - 0x8)
	// ScriptStruct Solarland.GameMode_ElementStruct
	struct FGameMode_ElementStruct : public FTableRowBase
	{
	public:
		class FString                                ElementID;                                         // 0x8(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Description;                                       // 0x18(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Side;                                              // 0x28(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Job;                                               // 0x38(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<class FName>                          Tags;                                              // 0x48(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TMap<class FString, bool>                    PropertiesBool;                                    // 0x58(0x50)(Edit, NativeAccessSpecifierPublic)
		TMap<class FString, int32>                   PropertiesInt;                                     // 0xA8(0x50)(Edit, NativeAccessSpecifierPublic)
		TMap<class FString, float>                   PropertiesFloat;                                   // 0xF8(0x50)(Edit, NativeAccessSpecifierPublic)
		TMap<class FString, class FString>           PropertiesString;                                  // 0x148(0x50)(Edit, NativeAccessSpecifierPublic)
		class FName                                  ElementTypeName;                                   // 0x198(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                BP_Path;                                           // 0x1A0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector                               Location;                                          // 0x1B0(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3317[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		struct FQuat                                 Rotation;                                          // 0x1C0(0x10)(IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		struct FVector                               Scale;                                             // 0x1D0(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class EElementStateType                 State;                                             // 0x1DC(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class EElementVisibilityType            Visibility;                                        // 0x1DD(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3318[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		int32                                        OutcomeID;                                         // 0x1E0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FBox                                  SpawnerBox;                                        // 0x1E4(0x1C)(ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		bool                                         bRefresh;                                          // 0x200(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3319[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		float                                        RefreshTime;                                       // 0x204(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bUseSpawnerTransform;                              // 0x208(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bToTheGround;                                      // 0x209(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_331A[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		int32                                        SpawnID;                                           // 0x20C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        Zone;                                              // 0x210(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class ESGameMode_ElementType            Type;                                              // 0x214(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_331B[0xB];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x20 (0x20 - 0x0)
	// ScriptStruct Solarland.SolarElementGroup
	struct FSolarElementGroup
	{
	public:
		class FString                                GroupKey;                                          // 0x0(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bIsDefault;                                        // 0x10(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_331C[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class UDataTable* ElementTable;                                      // 0x18(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x98 (0x98 - 0x0)
	// ScriptStruct Solarland.StatDataValue
	struct FStatDataValue
	{
	public:
		float                                        FloatValue;                                        // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         BoolValue;                                         // 0x4(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_331D[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class FString                                StringValue;                                       // 0x8(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TMap<int32, float>                           IntfloatValue;                                     // 0x18(0x50)(NativeAccessSpecifierPublic)
		TArray<int32>                                IntArrayValue;                                     // 0x68(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<float>                                FloatArrayValue;                                   // 0x78(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector                               Vector;                                            // 0x88(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_331E[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x10 (0x10 - 0x0)
	// ScriptStruct Solarland.AbilityMeshMontage
	struct FAbilityMeshMontage
	{
	public:
		class USkeletalMeshComponent* Mesh;                                              // 0x0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class UAnimMontage* Montage;                                           // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x8 (0x8 - 0x0)
	// ScriptStruct Solarland.RangeData
	struct FRangeData
	{
	public:
		float                                        MinValue;                                          // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        MaxValue;                                          // 0x4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x8 (0x8 - 0x0)
	// ScriptStruct Solarland.GraphicsSettingsRange
	struct FGraphicsSettingsRange
	{
	public:
		struct FRangeData                            AdaptationUIValue;                                 // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	};

	// 0x40 (0x40 - 0x0)
	// ScriptStruct Solarland.CameraSensitivityRangeData
	struct FCameraSensitivityRangeData
	{
	public:
		struct FRangeData                            Sensitivity_Basic;                                 // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		struct FRangeData                            Sensitivity_Shoulder;                              // 0x8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		struct FRangeData                            Sensitivity_RedPoint;                              // 0x10(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		struct FRangeData                            Sensitivity_Lens_Two;                              // 0x18(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		struct FRangeData                            Sensitivity_Lens_Three;                            // 0x20(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		struct FRangeData                            Sensitivity_Lens_Four;                             // 0x28(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		struct FRangeData                            Sensitivity_Lens_Six;                              // 0x30(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		struct FRangeData                            Sensitivity_Lens_Eight;                            // 0x38(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	};

	// 0x18 (0x18 - 0x0)
	// ScriptStruct Solarland.VehicleCameraSensitivityRangeData
	struct FVehicleCameraSensitivityRangeData
	{
	public:
		struct FRangeData                            Sensitivity_Lens_Two;                              // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		struct FRangeData                            Sensitivity_Lens_Four;                             // 0x8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		struct FRangeData                            Sensitivity_Lens_Eight;                            // 0x10(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	};

	// 0x40 (0x40 - 0x0)
	// ScriptStruct Solarland.GyroscopeSensitivityRangeData
	struct FGyroscopeSensitivityRangeData
	{
	public:
		struct FRangeData                            GyroscopeSensitivity_Basic;                        // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		struct FRangeData                            GyroscopeSensitivity_Shoulder;                     // 0x8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		struct FRangeData                            GyroscopeSensitivity_RedPoint;                     // 0x10(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		struct FRangeData                            GyroscopeSensitivity_Lens_Two;                     // 0x18(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		struct FRangeData                            GyroscopeSensitivity_Lens_Three;                   // 0x20(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		struct FRangeData                            GyroscopeSensitivity_Lens_Four;                    // 0x28(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		struct FRangeData                            GyroscopeSensitivity_Lens_Six;                     // 0x30(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		struct FRangeData                            GyroscopeSensitivity_Lens_Eight;                   // 0x38(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	};

	// 0x120 (0x120 - 0x0)
	// ScriptStruct Solarland.SensitivitySettingsRange
	struct FSensitivitySettingsRange
	{
	public:
		struct FRangeData                            Sensitivity_CurveScale;                            // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		struct FRangeData                            Sensitivity_Free;                                  // 0x8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		struct FRangeData                            Sensitivity_SecondarySkills;                       // 0x10(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		struct FRangeData                            Sensitivity_SuperSkills;                           // 0x18(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		struct FCameraSensitivityRangeData           Sensitivity_NoShoot;                               // 0x20(0x40)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		struct FCameraSensitivityRangeData           Sensitivity_Shoot;                                 // 0x60(0x40)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		struct FVehicleCameraSensitivityRangeData    Sensitivity_Vehicle_NoShoot;                       // 0xA0(0x18)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		struct FVehicleCameraSensitivityRangeData    Sensitivity_Vehicle_Shoot;                         // 0xB8(0x18)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		struct FRangeData                            Sensitivity_VehicleDriver;                         // 0xD0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		struct FRangeData                            Sensitivity_VehicleFire;                           // 0xD8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		struct FGyroscopeSensitivityRangeData        Sensitivity_GyroscopeData;                         // 0xE0(0x40)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	};

	// 0x20 (0x20 - 0x0)
	// ScriptStruct Solarland.SoundSettingsRange
	struct FSoundSettingsRange
	{
	public:
		struct FRangeData                            Sound_Global;                                      // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		struct FRangeData                            Sound_Action;                                      // 0x8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		struct FRangeData                            Sound_BackGround;                                  // 0x10(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		struct FRangeData                            Sound_Character;                                   // 0x18(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	};

	// 0x10 (0x10 - 0x0)
	// ScriptStruct Solarland.GamepadSettingsRange
	struct FGamepadSettingsRange
	{
	public:
		struct FRangeData                            MainHorizontalSensitivity;                         // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		struct FRangeData                            MainVerticalSensitivity;                           // 0x8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	};

	// 0x8 (0x8 - 0x0)
	// ScriptStruct Solarland.MouseAndKeyboardSettingsRange
	struct FMouseAndKeyboardSettingsRange
	{
	public:
		struct FRangeData                            MainSensitivity;                                   // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	};

	// 0x10 (0x10 - 0x0)
	// ScriptStruct Solarland.PlayerStatesInTeam
	struct FPlayerStatesInTeam
	{
	public:
		TArray<class ASolarPlayerState*>             PlayerStates;                                      // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x28 (0x28 - 0x0)
	// ScriptStruct Solarland.SolarGameStatisticsLogHeadInfo
	struct FSolarGameStatisticsLogHeadInfo
	{
	public:
		int32                                        BattleInstanceId;                                  // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        PIEInstance;                                       // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                BattleID;                                          // 0x8(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                WorldName;                                         // 0x18(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x28 (0x28 - 0x0)
	// ScriptStruct Solarland.SolarGameStatisticsData
	struct FSolarGameStatisticsData
	{
	public:
		uint8                                        Pad_331F[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x2 (0x2 - 0x0)
	// ScriptStruct Solarland.ChatOperatorUserSettings
	struct FChatOperatorUserSettings
	{
	public:
		enum class ESolarChatOperatorType            Speaker;                                           // 0x0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class ESolarChatOperatorType            Mic;                                               // 0x1(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x5 (0x5 - 0x0)
	// ScriptStruct Solarland.VehicleControlUserSettings
	struct FVehicleControlUserSettings
	{
	public:
		enum class EWheeledVehicleDriveUserType      WheeledVehicleDriveType;                           // 0x0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bCanAdjustInAir;                                   // 0x1(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bCanAutoSteering;                                  // 0x2(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class EWheeledVehicleDriveUserType      LastWheeledVehicleDriveType;                       // 0x3(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bCanVehicleCameraShake;                            // 0x4(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x4 (0x4 - 0x0)
	// ScriptStruct Solarland.FloatValue
	struct FFloatValue
	{
	public:
		float                                        Value;                                             // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x20 (0x20 - 0x0)
	// ScriptStruct Solarland.CameraSensitivityData
	struct FCameraSensitivityData
	{
	public:
		struct FFloatValue                           Sensitivity_Basic;                                 // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		struct FFloatValue                           Sensitivity_Shoulder;                              // 0x4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		struct FFloatValue                           Sensitivity_RedPoint;                              // 0x8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		struct FFloatValue                           Sensitivity_Lens_Two;                              // 0xC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		struct FFloatValue                           Sensitivity_Lens_Three;                            // 0x10(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		struct FFloatValue                           Sensitivity_Lens_Four;                             // 0x14(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		struct FFloatValue                           Sensitivity_Lens_Six;                              // 0x18(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		struct FFloatValue                           Sensitivity_Lens_Eight;                            // 0x1C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	};

	// 0x20 (0x20 - 0x0)
	// ScriptStruct Solarland.GyroscopeSensitivityData
	struct FGyroscopeSensitivityData
	{
	public:
		struct FFloatValue                           GyroscopeSensitivity_Basic;                        // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		struct FFloatValue                           GyroscopeSensitivity_Shoulder;                     // 0x4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		struct FFloatValue                           GyroscopeSensitivity_RedPoint;                     // 0x8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		struct FFloatValue                           GyroscopeSensitivity_Lens_Two;                     // 0xC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		struct FFloatValue                           GyroscopeSensitivity_Lens_Three;                   // 0x10(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		struct FFloatValue                           GyroscopeSensitivity_Lens_Four;                    // 0x14(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		struct FFloatValue                           GyroscopeSensitivity_Lens_Six;                     // 0x18(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		struct FFloatValue                           GyroscopeSensitivity_Lens_Eight;                   // 0x1C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	};

	// 0xC (0xC - 0x0)
	// ScriptStruct Solarland.VehicleCameraSensitivityData
	struct FVehicleCameraSensitivityData
	{
	public:
		struct FFloatValue                           Sensitivity_Lens_Two;                              // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		struct FFloatValue                           Sensitivity_Lens_Four;                             // 0x4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		struct FFloatValue                           Sensitivity_Lens_Eight;                            // 0x8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	};

	// 0x94 (0x94 - 0x0)
	// ScriptStruct Solarland.SensitivityUserSettings
	struct FSensitivityUserSettings
	{
	public:
		enum class ESolarTouchAccMode                Sensitivity_AccMode;                               // 0x0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3320[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		struct FFloatValue                           Sensitivity_CurveScale;                            // 0x4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		struct FFloatValue                           Sensitivity_Free;                                  // 0x8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		struct FFloatValue                           Sensitivity_SecondarySkills;                       // 0xC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		struct FFloatValue                           Sensitivity_SuperSkills;                           // 0x10(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		struct FCameraSensitivityData                Sensitivity_NoShoot;                               // 0x14(0x20)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		struct FCameraSensitivityData                Sensitivity_Shoot;                                 // 0x34(0x20)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		struct FGyroscopeSensitivityData             GyroscopeData;                                     // 0x54(0x20)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		struct FFloatValue                           Sensitivity_VehicleDriver;                         // 0x74(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		struct FFloatValue                           Sensitivity_VehicleFire;                           // 0x78(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		struct FVehicleCameraSensitivityData         Sensitivity_Vehicle_NoShoot;                       // 0x7C(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		struct FVehicleCameraSensitivityData         Sensitivity_Vehicle_Shoot;                         // 0x88(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	};

	// 0xB (0xB - 0x0)
	// ScriptStruct Solarland.BasicUserSettings
	struct FBasicUserSettings
	{
	public:
		bool                                         bOpenUniversalMark;                                // 0x0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bOpenQuickChat;                                    // 0x1(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bAutoOverturn;                                     // 0x2(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bPowerAnim;                                        // 0x3(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bOpenRecruitRecommend;                             // 0x4(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class ESolarGyroscopeChooseType         CurGyroscpeChooseLevel;                            // 0x5(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bHorizontalGyroscopeInvert;                        // 0x6(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bVerticalGyroscopeInvert;                          // 0x7(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class ESolarDamageTextDisplayModeType   CurrentDamageTextDisplayMode;                      // 0x8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class EBasicSettingBool                 OpenHighlightMoment;                               // 0x9(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class EBasicSettingBool                 OpenOutline;                                       // 0xA(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x40 (0x40 - 0x0)
	// ScriptStruct Solarland.GraphicsUserSettings
	struct FGraphicsUserSettings
	{
	public:
		enum class ESolarFrameRateLevel              FpsLevel;                                          // 0x0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class ESolarContentScaleFactorLevel     ContentScaleFactorLevel;                           // 0x1(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class ESolarColorTheme                  ColorThemeType;                                    // 0x2(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         MSAAIsEnabled;                                     // 0x3(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         VSyncIsEnabled;                                    // 0x4(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3321[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		struct FFloatValue                           AdaptationUIValue;                                 // 0x8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		bool                                         EnableDynamicShadow;                               // 0xC(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class ESolarGraphicsQualityLevel        SelectQualityLevel;                                // 0xD(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3322[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		int32                                        SavedVersion;                                      // 0x10(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3323[0x2C];                                    // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x1 (0x1 - 0x0)
	// ScriptStruct Solarland.CharacterVoiceUserSettings
	struct FCharacterVoiceUserSettings
	{
	public:
		enum class ESolarSupportLanguages            CurVoiceLanguage;                                  // 0x0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x3 (0x3 - 0x0)
	// ScriptStruct Solarland.LanguageUserSettings
	struct FLanguageUserSettings
	{
	public:
		enum class ESolarSupportLanguages            CurLanguage;                                       // 0x0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class ESolarSupportLanguages            CurCharacterVoiceLanguage;                         // 0x1(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         HasLoadedChinese;                                  // 0x2(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x8 (0x8 - 0x0)
	// ScriptStruct Solarland.ConditionValue
	struct FConditionValue
	{
	public:
		bool                                         bOpen;                                             // 0x0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3324[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		int32                                        CurValue;                                          // 0x4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x60 (0x60 - 0x0)
	// ScriptStruct Solarland.SoundUserSettings
	struct FSoundUserSettings
	{
	public:
		struct FConditionValue                       Sound_Global;                                      // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		struct FConditionValue                       Sound_Action;                                      // 0x8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		struct FConditionValue                       Sound_BackGround;                                  // 0x10(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		struct FConditionValue                       Sound_Character;                                   // 0x18(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		int32                                        MicroPhoneVolume;                                  // 0x20(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        LoudSpeakerVolume;                                 // 0x24(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class ESolarSoundQuality                Sound_Quality;                                     // 0x28(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class ESolarAudioMode                   AudioMode;                                         // 0x29(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3325[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		int32                                        MicLevel;                                          // 0x2C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        SpeakerLevel;                                      // 0x30(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        ChooseMicIndex;                                    // 0x34(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        ChooseSpeakerIndex;                                // 0x38(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3326[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class FString                                MicDeviceID;                                       // 0x40(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                SpeakerDeviceID;                                   // 0x50(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x20 (0x20 - 0x0)
	// ScriptStruct Solarland.WeaponUserSettings
	struct FWeaponUserSettings
	{
	public:
		bool                                         bAimAssist_Global;                                 // 0x0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bAutoFire_Global;                                  // 0x1(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bVehicleWeaponAutoFire_Global;                     // 0x2(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bEnableRecoilRecovery_Global;                      // 0x3(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bAutoScope_Global;                                 // 0x4(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bAutoScope_SpecialButtonGlobal;                    // 0x5(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bAutoScopeRifle_Global;                            // 0x6(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bAutoScopeSubmachinegun_Global;                    // 0x7(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bAutoScopeShotgunSingle_Global;                    // 0x8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bAutoScopeShotgunAuto_Global;                      // 0x9(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bAutoScopeSniperSingle_Global;                     // 0xA(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bAutoScopeSniperAuto_Global;                       // 0xB(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bAutoScopeSpecial_Global;                          // 0xC(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bSniperSingleShootOnPressed_Global;                // 0xD(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bShotgunSingleShootOnPressed_Global;               // 0xE(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3327[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class UCurveFloat* HitEffectDistanceToScaleCurve;                     // 0x10(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class ESolarWeaponDoScopeMode           DoScopeMode_Global;                                // 0x18(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bOpenVehicleWeaponCrosshair;                       // 0x19(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bVehicleAutoScope;                                 // 0x1A(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bVehicleAutoScope_SpecialButton;                   // 0x1B(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bCanScopeButtonRotateView;                         // 0x1C(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3328[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x8 (0x8 - 0x0)
	// ScriptStruct Solarland.PickupItemData
	struct FPickupItemData
	{
	public:
		int32                                        ItemID;                                            // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        ItemNum;                                           // 0x4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x18 (0x18 - 0x0)
	// ScriptStruct Solarland.PickupUserSettings
	struct FPickupUserSettings
	{
	public:
		bool                                         bAutoPickup;                                       // 0x0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bStopAutoPickupWhenClose;                          // 0x1(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3329[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TArray<struct FPickupItemData>               PickupItemList;                                    // 0x8(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x1 (0x1 - 0x0)
	// ScriptStruct Solarland.ShakeUserSettings
	struct FShakeUserSettings
	{
	public:
		enum class ESolarShakeMainType               ShakeMainStatus;                                   // 0x0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x3C (0x3C - 0x0)
	// ScriptStruct Solarland.GamepadAdvancedSettings
	struct FGamepadAdvancedSettings
	{
	public:
		struct FRangeData                            ScalerRange;                                       // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		struct FRangeData                            SpeedUpScalerRange;                                // 0x8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		struct FRangeData                            SpeedUpDelayRange;                                 // 0x10(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		struct FRangeData                            SpeedUpStartRange;                                 // 0x18(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		struct FFloatValue                           ScalerX;                                           // 0x20(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		struct FFloatValue                           ScalerY;                                           // 0x24(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		struct FFloatValue                           SpeedUpScalerX;                                    // 0x28(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		struct FFloatValue                           SpeedUpScalerY;                                    // 0x2C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		struct FFloatValue                           SpeedUpDelayTime;                                  // 0x30(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		struct FFloatValue                           SpeedUpStartTime;                                  // 0x34(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		bool                                         bEnableAdsSpeedUp;                                 // 0x38(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_332A[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x8 (0x8 - 0x0)
	// ScriptStruct Solarland.SolarAimModeWithLocalText
	struct FSolarAimModeWithLocalText
	{
	public:
		int32                                        LocalText;                                         // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class ESolarWeaponDoScopeMode           AimMode;                                           // 0x4(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_332B[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x8 (0x8 - 0x0)
	// ScriptStruct Solarland.SolarSprintModeWithLocalText
	struct FSolarSprintModeWithLocalText
	{
	public:
		int32                                        LocalText;                                         // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class ESolarSprintModeType              SprintMode;                                        // 0x4(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_332C[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x8 (0x8 - 0x0)
	// ScriptStruct Solarland.FloatWithLocalText
	struct FFloatWithLocalText
	{
	public:
		int32                                        LocalText;                                         // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        Value;                                             // 0x4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x20 (0x20 - 0x0)
	// ScriptStruct Solarland.ObjectWithLocalText
	struct FObjectWithLocalText
	{
	public:
		int32                                        LocalText;                                         // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_332D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		struct FSoftObjectPath                       ObjectPath;                                        // 0x8(0x18)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0xC8 (0xC8 - 0x0)
	// ScriptStruct Solarland.GamepadSettings
	struct FGamepadSettings
	{
	public:
		TArray<struct FSolarAimModeWithLocalText>    AimModeMap;                                        // 0x0(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<struct FSolarSprintModeWithLocalText> SprintModeMap;                                     // 0x10(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<struct FFloatWithLocalText>           ViewSensitivityMap;                                // 0x20(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<struct FObjectWithLocalText>          ResponseCurveMap;                                  // 0x30(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<struct FFloatWithLocalText>           LeftStickDeadzoneMap;                              // 0x40(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<struct FFloatWithLocalText>           RightStickDeadzoneMap;                             // 0x50(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<struct FFloatWithLocalText>           TriggerDeadzoneMap;                                // 0x60(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<struct FFloatWithLocalText>           VibrationLevelMap;                                 // 0x70(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FRangeData                            CursorSpeedRange;                                  // 0x80(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		int32                                        AimModeID;                                         // 0x88(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        SprintModeID;                                      // 0x8C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FConditionValue                       MainHorizontalSensitivity;                         // 0x90(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		struct FConditionValue                       MainVerticalSensitivity;                           // 0x98(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		int32                                        RightStickSensitivityID;                           // 0xA0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        RightStickResponseCurveID;                         // 0xA4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bInvertedLook;                                     // 0xA8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_332E[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		int32                                        LeftStickDeadzoneID;                               // 0xAC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        RightStickDeadzoneID;                              // 0xB0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        TriggerDeadzoneID;                                 // 0xB4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FFloatValue                           CursorSpeed;                                       // 0xB8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		int32                                        VibrationLevelID;                                  // 0xBC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bEnableAimAssist;                                  // 0xC0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_332F[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x8 (0x8 - 0x0)
	// ScriptStruct Solarland.MouseAndKeyboardSettings
	struct FMouseAndKeyboardSettings
	{
	public:
		struct FFloatValue                           MainSensitivity;                                   // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		bool                                         bMouseInvert;                                      // 0x4(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class ESolarWeaponDoScopeMode           AimMode;                                           // 0x5(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class ESolarSprintModeType              SprintMode;                                        // 0x6(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3330[0x1];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x8 (0x8 - 0x0)
	// ScriptStruct Solarland.RangeInteger
	struct FRangeInteger
	{
	public:
		int32                                        Min;                                               // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        Max;                                               // 0x4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x8 (0x8 - 0x0)
	// ScriptStruct Solarland.RangeFloat
	struct FRangeFloat
	{
	public:
		float                                        Min;                                               // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        Max;                                               // 0x4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0xC (0xC - 0x0)
	// ScriptStruct Solarland.SymmetricRangeFloat
	struct FSymmetricRangeFloat
	{
	public:
		struct FRangeFloat                           Range;                                             // 0x0(0x8)(Edit, NoDestructor, NativeAccessSpecifierPublic)
		bool                                         bSymmetric;                                        // 0x8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3331[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x5B0 (0x5B0 - 0x0)
	// ScriptStruct Solarland.ColorGradingItem
	struct FColorGradingItem
	{
	public:
		enum class ESolarColorTheme                  ColorTheme;                                        // 0x0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3332[0xF];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		struct FPostProcessSettings                  PPSettings;                                        // 0x10(0x5A0)(Edit, NativeAccessSpecifierPublic)
	};

	// 0x50 (0x50 - 0x0)
	// ScriptStruct Solarland.MaxQualityConfig
	struct FMaxQualityConfig
	{
	public:
		TMap<enum class ESolarGraphicsQualityLevel, enum class ESolarFrameRateLevel> CurQualityToMaxFrameRateLevel;                     // 0x0(0x50)(Edit, NativeAccessSpecifierPublic)
	};

	// 0x10 (0x10 - 0x0)
	// ScriptStruct Solarland.FrameRateLevelItem
	struct FFrameRateLevelItem
	{
	public:
		enum class ESolarFrameRateLevel              FrameRateLevel;                                    // 0x0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3333[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		float                                        FrameRateLobby;                                    // 0x4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        FrameRateInGame;                                   // 0x8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        FrameRatePC;                                       // 0xC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x58 (0x58 - 0x0)
	// ScriptStruct Solarland.ContentScaleFactorLevelItem
	struct FContentScaleFactorLevelItem
	{
	public:
		enum class ESolarContentScaleFactorLevel     ContentScaleFactorLevel;                           // 0x0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3334[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TMap<enum class ESolarDeviceLevel, float>    DeviceLevelContentScaleFactorMap;                  // 0x8(0x50)(Edit, NativeAccessSpecifierPublic)
	};

	// 0x40 (0x40 - 0x0)
	// ScriptStruct Solarland.SolarDamageInfo
	struct FSolarDamageInfo
	{
	public:
		class AActor* TargetActor;                                       // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class AActor* SourceActor;                                       // 0x8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class AActor* DamageCauserActor;                                 // 0x10(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        OriginalDamage;                                    // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        OriginalDamageForVehicle;                          // 0x1C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3335[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		enum class ESCMDamageType                    DamageType;                                        // 0x24(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3336[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		float                                        DamageRadial;                                      // 0x28(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        bRadialIgnoreCollision : 1;                        // Mask: 0x1, PropSize: 0x10x2C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        bRadialIgnoreVehicle : 1;                          // Mask: 0x2, PropSize: 0x10x2C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        bEnableSelfDamage : 1;                             // Mask: 0x4, PropSize: 0x10x2C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        bCheckSourceToTargetCollision : 1;                 // Mask: 0x8, PropSize: 0x10x2C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        bApplyToSource : 1;                                // Mask: 0x10, PropSize: 0x10x2C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        bJustForShield : 1;                                // Mask: 0x20, PropSize: 0x10x2C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        BitPad_1F0 : 2;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
		uint8                                        Pad_3337[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		float                                        ExplosionMinDistance;                              // 0x30(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        ExplosionMaxDistance;                              // 0x34(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class UCurveFloat* ExplosionDistanceScaleCurve;                       // 0x38(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0xA0 (0xA0 - 0x0)
	// ScriptStruct Solarland.HomeShaderData
	struct FHomeShaderData
	{
	public:
		uint8                                        Pad_3338[0xA0];                                    // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x20 (0x20 - 0x0)
	// ScriptStruct Solarland.BuildMeshSlotData
	struct FBuildMeshSlotData
	{
	public:
		class FString                                SlotName;                                          // 0x0(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                TexturesID;                                        // 0x10(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x68 (0x68 - 0x0)
	// ScriptStruct Solarland.HomeActorServerData
	struct FHomeActorServerData
	{
	public:
		int32                                        ItemID;                                            // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3339[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class FString                                ThisID;                                            // 0x8(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class EHomeActorOwner                   Owner;                                             // 0x18(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         IsPreview;                                         // 0x1C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         IsDelete;                                          // 0x1D(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_333A[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		struct FVector                               CurLocation;                                       // 0x20(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FRotator                              CurRotation;                                       // 0x2C(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		TArray<struct FBuildMeshSlotData>            FacesMatData;                                      // 0x38(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                ParentObject;                                      // 0x48(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<class FString>                        ChildObjects;                                      // 0x58(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x78 (0x78 - 0x0)
	// ScriptStruct Solarland.HomeActorQueueData
	struct FHomeActorQueueData
	{
	public:
		enum class EHomeOperationType                Type;                                              // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_333B[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		struct FHomeActorServerData                  Data;                                              // 0x8(0x68)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
		enum class EHomeLoadingChangeType            LoadingType;                                       // 0x70(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bOnConstruct;                                      // 0x74(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_333C[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x28 (0x28 - 0x0)
	// ScriptStruct Solarland.HomeOriginalShader
	struct FHomeOriginalShader
	{
	public:
		uint8                                        Pad_333D[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x38 (0x38 - 0x0)
	// ScriptStruct Solarland.HomeActorStaticData
	struct FHomeActorStaticData
	{
	public:
		int64                                        ItemID;                                            // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class EHomeActor_FirstType              FirstType;                                         // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class EHomeActor_SecondType             SecondType;                                        // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         IsBrace;                                           // 0x10(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_333E[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class FString                                Icon;                                              // 0x18(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                BpPath;                                            // 0x28(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x48 (0x48 - 0x0)
	// ScriptStruct Solarland.HomeBuildReqData
	struct FHomeBuildReqData
	{
	public:
		int32                                        ItemID;                                            // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector                               Location;                                          // 0x4(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FRotator                              Rotation;                                          // 0x10(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		uint8                                        Pad_333F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TArray<struct FBuildMeshSlotData>            MatDataArr;                                        // 0x20(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                ParentThisID;                                      // 0x30(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         IsSelected;                                        // 0x40(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3340[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0xC (0xC - 0x0)
	// ScriptStruct Solarland.BaseSpaceData
	struct FBaseSpaceData
	{
	public:
		int32                                        Layer;                                             // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class EHomeActor_SecondType             BaseSpaceType;                                     // 0x4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         IsOccupied;                                        // 0x8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         IsShow;                                            // 0x9(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3341[0x2];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0xA0 (0xA0 - 0x0)
	// ScriptStruct Solarland.HomeCameraMoveData
	struct FHomeCameraMoveData
	{
	public:
		uint8                                        Pad_3342[0xA0];                                    // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0xC (0xC - 0x0)
	// ScriptStruct Solarland.CameraTransitionData
	struct FCameraTransitionData
	{
	public:
		uint8                                        Pad_3343[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x40 (0x40 - 0x0)
	// ScriptStruct Solarland.HomeCameraModeData
	struct FHomeCameraModeData
	{
	public:
		uint8                                        Pad_3344[0x40];                                    // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x68 (0x68 - 0x0)
	// ScriptStruct Solarland.CameraMovementParameters
	struct FCameraMovementParameters
	{
	public:
		float                                        OneFingerMoveScale;                                // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        MouseMoveScale;                                    // 0x4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        OneFingerZoomScale;                                // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        MouseZoomScale;                                    // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        DoubleFingerSpinScale;                             // 0x10(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        DoubleFingerPitchScale;                            // 0x14(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        MouseRotateScale;                                  // 0x18(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        LookAtLocationHeigh;                               // 0x1C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        MinPitch;                                          // 0x20(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        MaxPitch;                                          // 0x24(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        PanoramicDefaultPitch;                             // 0x28(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        HomeCameraBoundary;                                // 0x2C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class UCurveFloat* DistanceCurve;                                     // 0x30(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        DefultTime;                                        // 0x38(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3345[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class UCurveFloat* DistanceCurve_Orthographic;                        // 0x40(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        DefaultTime_Orthographic;                          // 0x48(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3346[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class UCurveFloat* LayerTransitionCurve;                              // 0x50(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class UCurveFloat* CeilingTransitionCurve;                            // 0x58(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class UCurveFloat* PanoramicTransitionCurve;                          // 0x60(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x30 (0x38 - 0x8)
	// ScriptStruct Solarland.HomeIcon
	struct FHomeIcon : public FTableRowBase
	{
	public:
		struct FSoftObjectPath                       NormalIconPath;                                    // 0x8(0x18)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FSoftObjectPath                       SelectedIconPath;                                  // 0x20(0x18)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x30 (0x30 - 0x0)
	// ScriptStruct Solarland.BuildMeshData
	struct FBuildMeshData
	{
	public:
		int64                                        ItemID;                                            // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FSoftObjectPath                       MeshPath;                                          // 0x8(0x18)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<struct FBuildMeshSlotData>            DefaultMat;                                        // 0x20(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0xB8 (0xC0 - 0x8)
	// ScriptStruct Solarland.HomeObject
	struct FHomeObject : public FTableRowBase
	{
	public:
		class FString                                HomeObjectDesc;                                    // 0x8(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FSoftObjectPath                       BpPath;                                            // 0x18(0x18)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FSoftObjectPath                       PreviewBpPath;                                     // 0x30(0x18)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<struct FBuildMeshSlotData>            DefaultMat;                                        // 0x48(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         IsFocusCenter;                                     // 0x58(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         IsDrawable;                                        // 0x59(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         IsRotate;                                          // 0x5A(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         IsBrace;                                           // 0x5B(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         IsRotateHandle;                                    // 0x5C(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3347[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		int32                                        RotateAngleSingle;                                 // 0x60(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3348[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		struct FSoftObjectPath                       Build_SFPath;                                      // 0x68(0x18)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FSoftObjectPath                       Remove_SFXPath;                                    // 0x80(0x18)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        FRemove_SFXTime;                                   // 0x98(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3349[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class FString                                FSBuild_Audio;                                     // 0xA0(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                FSRemove_Audio;                                    // 0xB0(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x18 (0x20 - 0x8)
	// ScriptStruct Solarland.HomePic
	struct FHomePic : public FTableRowBase
	{
	public:
		struct FSoftObjectPath                       PicPath;                                           // 0x8(0x18)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x70 (0x78 - 0x8)
	// ScriptStruct Solarland.HomeObjectTexture
	struct FHomeObjectTexture : public FTableRowBase
	{
	public:
		class FString                                TextureDesc;                                       // 0x8(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FSoftObjectPath                       BaseColorPath;                                     // 0x18(0x18)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FSoftObjectPath                       MetalPath;                                         // 0x30(0x18)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FSoftObjectPath                       LightmapPath;                                      // 0x48(0x18)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FSoftObjectPath                       NormalPath;                                        // 0x60(0x18)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0xC8 (0xC8 - 0x0)
	// ScriptStruct Solarland.ThrusterState
	struct FThrusterState
	{
	public:
		uint8                                        Pad_334A[0x38];                                    // Fixing Size After Last Property  [ Dumper-7 ]
		struct FHitResult                            TouchGroundHit;                                    // 0x38(0x88)(BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
		uint8                                        Pad_334B[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x3C (0x3C - 0x0)
	// ScriptStruct Solarland.ThrusterData
	struct FThrusterData
	{
	public:
		float                                        HoverHeightMultiplierInForward;                    // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        HoverHeightMultiplierInBackward;                   // 0x4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        HoverHeightMultiplierInLeft;                       // 0x8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        HoverHeightMultiplierInRight;                      // 0xC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bRaiseDust;                                        // 0x10(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_334C[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		float                                        DustEffectScale;                                   // 0x14(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector                               DustEffectOffest;                                  // 0x18(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FName                                  ThrusterSocket;                                    // 0x24(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector                               ThrusterOffsetIfNoValidSocket;                     // 0x2C(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        SweepRadius;                                       // 0x38(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x1 (0x1 - 0x0)
	// ScriptStruct Solarland.SolarClientPerformance
	struct FSolarClientPerformance
	{
	public:
		uint8                                        Pad_334D[0x1];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x30 (0x30 - 0x0)
	// ScriptStruct Solarland.CountDownInfoDeprecated
	struct FCountDownInfoDeprecated
	{
	public:
		int32                                        TextID;                                            // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        Time;                                              // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bShowBtn;                                          // 0x8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_334E[0x27];                                    // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x18 (0x18 - 0x0)
	// ScriptStruct Solarland.SolarInputActionEntry
	struct FSolarInputActionEntry
	{
	public:
		class UInputAction* InputAction;                                       // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		uint8                                        Pad_334F[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x28 (0x28 - 0x0)
	// ScriptStruct Solarland.InputKeyMappingPair
	struct FInputKeyMappingPair
	{
	public:
		class FString                                KeyStr1;                                           // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                KeyStr2;                                           // 0x10(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class ESolarTablesEnum_InputTriggerType TriggerType;                                       // 0x20(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3350[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x40 (0x40 - 0x0)
	// ScriptStruct Solarland.InputKeyMappingEntry
	struct FInputKeyMappingEntry
	{
	public:
		bool                                         bValid;                                            // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3351[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class FString                                ActionID;                                          // 0x8(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                ActionName;                                        // 0x18(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class ESolarTablesEnum_InputActionType  ActionType;                                        // 0x28(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3352[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		float                                        Scale;                                             // 0x2C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<struct FInputKeyMappingPair>          KeyMappingPairList;                                // 0x30(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x20 (0x20 - 0x0)
	// ScriptStruct Solarland.InputHandler
	struct FInputHandler
	{
	public:
		uint8                                        Pad_3353[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x158 (0x178 - 0x20)
	// ScriptStruct Solarland.TouchHandler
	struct FTouchHandler : public FInputHandler
	{
	public:
		uint8                                        Pad_3354[0x78];                                    // Fixing Size After Last Property  [ Dumper-7 ]
		class UCurveFloat* HorizCurve;                                        // 0x98(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		class UCurveFloat* VertCurve;                                         // 0xA0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		uint8                                        Pad_3355[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
		class UCurveFloat* DistHorizCurve;                                    // 0xD0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		class UCurveFloat* DistVertCurve;                                     // 0xD8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		uint8                                        Pad_3356[0x98];                                    // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x20 (0x30 - 0x10)
	// ScriptStruct Solarland.SolarInputModeUIOnly
	struct FSolarInputModeUIOnly : public FSolarInputModeDataBase
	{
	public:
		uint8                                        Pad_3357[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x20 (0x30 - 0x10)
	// ScriptStruct Solarland.SolarInputModeGameAndUI
	struct FSolarInputModeGameAndUI : public FSolarInputModeDataBase
	{
	public:
		uint8                                        Pad_3358[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x10 (0x20 - 0x10)
	// ScriptStruct Solarland.SolarInputModeGameOnly
	struct FSolarInputModeGameOnly : public FSolarInputModeDataBase
	{
	public:
		uint8                                        Pad_3359[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x18 (0x18 - 0x0)
	// ScriptStruct Solarland.RadarStationCollection
	struct FRadarStationCollection
	{
	public:
		int32                                        Zone;                                              // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_335A[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TArray<class ASolarRadarStation*>            AllRadarStations;                                  // 0x8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x14 (0x20 - 0xC)
	// ScriptStruct Solarland.SolarShieldItemShopDataEntry
	struct FSolarShieldItemShopDataEntry : public FFastArraySerializerItem
	{
	public:
		struct FVector_NetQuantize                   Pos;                                               // 0xC(0xC)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        Uid;                                               // 0x18(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        InteractState;                                     // 0x1C(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_335B[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x28 (0x130 - 0x108)
	// ScriptStruct Solarland.SolarShieldItemShopDataArray
	struct FSolarShieldItemShopDataArray : public FFastArraySerializer
	{
	public:
		TArray<struct FSolarShieldItemShopDataEntry> Elements;                                          // 0x108(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_335C[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x4 (0x10 - 0xC)
	// ScriptStruct Solarland.SolarIntEntry
	struct FSolarIntEntry : public FFastArraySerializerItem
	{
	public:
		int32                                        IntProperty;                                       // 0xC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x28 (0x130 - 0x108)
	// ScriptStruct Solarland.SolarIntArray
	struct FSolarIntArray : public FFastArraySerializer
	{
	public:
		TArray<struct FSolarIntEntry>                Elements;                                          // 0x108(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_335D[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x98 (0xA0 - 0x8)
	// ScriptStruct Solarland.ItemActorDTRow
	struct FItemActorDTRow : public FTableRowBase
	{
	public:
		struct FSoftObjectPath                       MeshPath;                                          // 0x8(0x18)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FSoftObjectPath                       FXPath;                                            // 0x20(0x18)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<struct FSoftObjectPath>               MaterialPath;                                      // 0x38(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<struct FSoftObjectPath>               OutLineMaterialPath;                               // 0x48(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_335E[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		struct FTransform                            Transform;                                         // 0x60(0x30)(Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		float                                        SpawnOffset;                                       // 0x90(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        NoneMeshFxOffset;                                  // 0x94(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_335F[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x40 (0x48 - 0x8)
	// ScriptStruct Solarland.ItemResReference
	struct FItemResReference : public FTableRowBase
	{
	public:
		class FString                                Description;                                       // 0x8(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FSoftObjectPath                       Icon;                                              // 0x18(0x18)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FSoftObjectPath                       AbilityBP;                                         // 0x30(0x18)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x8 (0x8 - 0x0)
	// ScriptStruct Solarland.DeathBoxItemData
	struct FDeathBoxItemData
	{
	public:
		int32                                        ItemID;                                            // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        ItemNum;                                           // 0x4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0xD0 (0xD0 - 0x0)
	// ScriptStruct Solarland.LoadedItemInfo
	struct FLoadedItemInfo
	{
	public:
		struct FSoftClassPath                        SClassPath;                                        // 0x0(0x18)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FSolarItemData                        ItemData;                                          // 0x18(0xB8)(NativeAccessSpecifierPublic)
	};

	// 0x10 (0x10 - 0x0)
	// ScriptStruct Solarland.FinalDropDataCollection
	struct FFinalDropDataCollection
	{
	public:
		TArray<struct FSolarItemData>                Datas;                                             // 0x0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x38 (0x38 - 0x0)
	// ScriptStruct Solarland.OutcomeContentData
	struct FOutcomeContentData
	{
	public:
		int32                                        ID;                                                // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        ItemID;                                            // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        Weight;                                            // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3360[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TArray<int32>                                RandomNums;                                        // 0x10(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        MaxTimes;                                          // 0x20(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        MinTimes;                                          // 0x24(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        RelatedContentID;                                  // 0x28(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class EItemType                         ItemType;                                          // 0x2C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        DropedTimes;                                       // 0x30(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         IsValid;                                           // 0x34(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         IsDeleted;                                         // 0x35(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3361[0x2];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x10 (0x10 - 0x0)
	// ScriptStruct Solarland.OutcomeTypeLimitData
	struct FOutcomeTypeLimitData
	{
	public:
		enum class EItemType                         LimitType;                                         // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        MinTimes;                                          // 0x4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        MaxTimes;                                          // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        CurrDropTimes;                                     // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x20 (0x20 - 0x0)
	// ScriptStruct Solarland.OutcomeIDLimitData
	struct FOutcomeIDLimitData
	{
	public:
		TArray<int32>                                LimitIDs;                                          // 0x0(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        MinTimes;                                          // 0x10(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        MaxTimes;                                          // 0x14(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        CurrDropTimes;                                     // 0x18(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3362[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x1A8 (0x1A8 - 0x0)
	// ScriptStruct Solarland.OutcomeData
	struct FOutcomeData
	{
	public:
		int32                                        ID;                                                // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3363[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TArray<int32>                                Contents;                                          // 0x8(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class ESpawnStage                       SpawnStage;                                        // 0x18(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class EOutcomeType                      OutcomeType;                                       // 0x19(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3364[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TMap<int32, int32>                           OutcomePools;                                      // 0x20(0x50)(NativeAccessSpecifierPublic)
		TMap<int32, int32>                           OutcomeDynamicWeights;                             // 0x70(0x50)(NativeAccessSpecifierPublic)
		TMap<int32, int32>                           OutcomeSubWeights;                                 // 0xC0(0x50)(NativeAccessSpecifierPublic)
		int32                                        PoolTotalWeight;                                   // 0x110(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        PoolOutcomeID;                                     // 0x114(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        MaxTimes;                                          // 0x118(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        MinTimes;                                          // 0x11C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        SpawnerID;                                         // 0x120(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        NetSetTimes;                                       // 0x124(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        DropedTimes;                                       // 0x128(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3365[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TMap<int32, struct FOutcomeContentData>      ContentDatas;                                      // 0x130(0x50)(NativeAccessSpecifierPublic)
		bool                                         IsValid;                                           // 0x180(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3366[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		int32                                        GlobalDropTimes;                                   // 0x184(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<struct FOutcomeTypeLimitData>         LimitTypeDatas;                                    // 0x188(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<struct FOutcomeIDLimitData>           LimitIDDatas;                                      // 0x198(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x10 (0x10 - 0x0)
	// ScriptStruct Solarland.OutcomeDataCollection
	struct FOutcomeDataCollection
	{
	public:
		TArray<struct FOutcomeData>                  Datas;                                             // 0x0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x50 (0x50 - 0x0)
	// ScriptStruct Solarland.SimpleDropItemDataCollection
	struct FSimpleDropItemDataCollection
	{
	public:
		TMap<int32, int32>                           Datas;                                             // 0x0(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	};

	// 0x80 (0x80 - 0x0)
	// ScriptStruct Solarland.GlobalOutcomeData
	struct FGlobalOutcomeData
	{
	public:
		int32                                        ID;                                                // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        SingleMaxTimes;                                    // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        TotalMaxTimes;                                     // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        TotalMinTimes;                                     // 0xC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        NetSetTimes;                                       // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        DropedTimes;                                       // 0x14(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TMap<int32, int32>                           ItemIDNumMap;                                      // 0x18(0x50)(NativeAccessSpecifierPublic)
		TArray<int32>                                AffectedOutcomes;                                  // 0x68(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         IsValid;                                           // 0x78(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3367[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x10 (0x118 - 0x108)
	// ScriptStruct Solarland.SolarItemDataArray
	struct FSolarItemDataArray : public FFastArraySerializer
	{
	public:
		TArray<struct FSolarItemData>                ItemDatas;                                         // 0x108(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x10 (0x10 - 0x0)
	// ScriptStruct Solarland.SolarItemSpawnerArray
	struct FSolarItemSpawnerArray
	{
	public:
		TArray<class ASolarItemSpawner*>             ItemSpawnerArray;                                  // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x18 (0x18 - 0x0)
	// ScriptStruct Solarland.SolarVehicleData
	struct FSolarVehicleData
	{
	public:
		int32                                        VehicleID;                                         // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3368[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class FString                                VehicleBP;                                         // 0x8(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x48 (0x50 - 0x8)
	// ScriptStruct Solarland.ItemResourceTableRow
	struct FItemResourceTableRow : public FTableRowBase
	{
	public:
		struct FSoftObjectPath                       Icon;                                              // 0x8(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FSoftObjectPath                       BigIcon;                                           // 0x20(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FSoftObjectPath                       PreviewIcon;                                       // 0x38(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x38 (0x38 - 0x0)
	// ScriptStruct Solarland.PakDownloadInfo
	struct FPakDownloadInfo
	{
	public:
		uint8                                        Pad_3369[0x38];                                    // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x20 (0x20 - 0x0)
	// ScriptStruct Solarland.GateAddress
	struct FGateAddress
	{
	public:
		class FString                                GateTCPAddr;                                       // 0x0(0x10)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                GateUDPAddr;                                       // 0x10(0x10)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x50 (0x50 - 0x0)
	// ScriptStruct Solarland.ServerInfo
	struct FServerInfo
	{
	public:
		TArray<struct FGateAddress>                  GateList;                                          // 0x0(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<class FString>                        CDNList;                                           // 0x10(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                LatestBuildVersion;                                // 0x20(0x10)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                SourceBuildVersion;                                // 0x30(0x10)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Name;                                              // 0x40(0x10)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x8 (0x30 - 0x28)
	// ScriptStruct Solarland.LeggedVehiclePostPhysicsTickFunction
	struct FLeggedVehiclePostPhysicsTickFunction : public FTickFunction
	{
	public:
		uint8                                        Pad_336A[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x1A0 (0x1A0 - 0x0)
	// ScriptStruct Solarland.VehicleFootIKState
	struct FVehicleFootIKState
	{
	public:
		uint8                                        Pad_336B[0x1A0];                                   // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x8 (0x8 - 0x0)
	// ScriptStruct Solarland.VehicleIKGroupData
	struct FVehicleIKGroupData
	{
	public:
		uint8                                        Pad_336C[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x64 (0x64 - 0x0)
	// ScriptStruct Solarland.VehicleFootIKData
	struct FVehicleFootIKData
	{
	public:
		class FName                                  LegBoneName;                                       // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FName                                  FootBoneName;                                      // 0x8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FName                                  FootVirtualBoneName;                               // 0x10(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FName                                  FootVirtualBoneForGround;                          // 0x18(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FName                                  FootIKBoneName;                                    // 0x20(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        FootHorizontalOffsetAfterBroken;                   // 0x28(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        FootVerticalOffsetAfterBroken;                     // 0x2C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        FootUnderWaterOffset;                              // 0x30(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        RaiseDustEffectScale;                              // 0x34(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        BrokenFootMultiplier;                              // 0x38(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector                               FootBoneOffset;                                    // 0x3C(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FName                                  ParentBone;                                        // 0x48(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        GroupIndex;                                        // 0x50(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        StepDistanceMultiplier;                            // 0x54(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        StepDistanceMultiplierForVelocity;                 // 0x58(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        MinVelocityDegreeForStepDistance;                  // 0x5C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        MaxVelocityDegreeForStepDistance;                  // 0x60(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x1C (0x1C - 0x0)
	// ScriptStruct Solarland.VehicleLocomotionData
	struct FVehicleLocomotionData
	{
	public:
		float                                        Speed;                                             // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        Acceleration;                                      // 0x4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        Deceleration;                                      // 0x8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        Friction;                                          // 0xC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        RotateFriction;                                    // 0x10(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        RotationSpeed;                                     // 0x14(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        MovementDegree;                                    // 0x18(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x38 (0x38 - 0x0)
	// ScriptStruct Solarland.PSAttachElem
	struct FPSAttachElem
	{
	public:
		struct FSoftObjectPath                       ParticleSystemPath;                                // 0x0(0x18)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FName                                  SocketName;                                        // 0x18(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector                               LocationOffset;                                    // 0x20(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FRotator                              RotationOffset;                                    // 0x2C(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	};

	// 0x24 (0x24 - 0x0)
	// ScriptStruct Solarland.CharacterTransformData
	struct FCharacterTransformData
	{
	public:
		struct FVector                               CharacterOffset;                                   // 0x0(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FRotator                              CharacterRot;                                      // 0xC(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		struct FVector                               CharacterScale;                                    // 0x18(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x10 (0x10 - 0x0)
	// ScriptStruct Solarland.LootZonePath
	struct FLootZonePath
	{
	public:
		class ASolarLootZone* To;                                                // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        MoveCost;                                          // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_336D[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x10 (0x10 - 0x0)
	// ScriptStruct Solarland.ItemSpawnerPath
	struct FItemSpawnerPath
	{
	public:
		class ASolarItemSpawner* To;                                                // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        MoveCost;                                          // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_336E[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x10 (0x10 - 0x0)
	// ScriptStruct Solarland.ItemSpawnerGraphNode
	struct FItemSpawnerGraphNode
	{
	public:
		TArray<struct FItemSpawnerPath>              Paths;                                             // 0x0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x28 (0x28 - 0x0)
	// ScriptStruct Solarland.SolarMapElementProperty
	struct FSolarMapElementProperty
	{
	public:
		class FString                                Name;                                              // 0x0(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class ESolarMapElementPropertyType      Type;                                              // 0x10(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_336F[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class FString                                Value;                                             // 0x18(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x28 (0x28 - 0x0)
	// ScriptStruct Solarland.BattlePromptElem
	struct FBattlePromptElem
	{
	public:
		uint8                                        Pad_3370[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		enum class EBattlePromptType                 RealType;                                          // 0x8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3371[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		struct FVector                               CacheLoc;                                          // 0xC(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        Distance;                                          // 0x18(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        StartTime;                                         // 0x1C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        DestroyTime;                                       // 0x20(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        ReplaceTime;                                       // 0x24(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x18 (0x18 - 0x0)
	// ScriptStruct Solarland.BattlePromptData
	struct FBattlePromptData
	{
	public:
		uint8                                        MaxLength;                                         // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		uint8                                        Pad_3372[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TArray<struct FBattlePromptElem>             BattlePromptElemArr;                               // 0x8(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x1C (0x1C - 0x0)
	// ScriptStruct Solarland.CircleData
	struct FCircleData
	{
	public:
		struct FVector2D                             Center;                                            // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        Radius;                                            // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FLinearColor                          LineColor;                                         // 0xC(0x10)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x20 (0x20 - 0x0)
	// ScriptStruct Solarland.DotLineData
	struct FDotLineData
	{
	public:
		class AActor* StartActor;                                        // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class AActor* EndActor;                                          // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FLinearColor                          DotLineColor;                                      // 0x10(0x10)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x30 (0x30 - 0x0)
	// ScriptStruct Solarland.MiniMapAirlineData
	struct FMiniMapAirlineData
	{
	public:
		enum class EMapAirlineType                   AirlineType;                                       // 0x0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3373[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		struct FVector2D                             StartPoint;                                        // 0x4(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector2D                             EndPoint;                                          // 0xC(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector2D                             RealStartPoint;                                    // 0x14(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector2D                             RealEndPoint;                                      // 0x1C(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector2D                             AirlineDir;                                        // 0x24(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        AirlineLength;                                     // 0x2C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x38 (0x38 - 0x0)
	// ScriptStruct Solarland.SafeAreaMapInfo
	struct FSafeAreaMapInfo
	{
	public:
		struct FVector                               CurrentLocation;                                   // 0x0(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        CurrentRadius;                                     // 0xC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector                               NextLocation;                                      // 0x10(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        NextRadius;                                        // 0x1C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        BeginShrinkTime;                                   // 0x20(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        TargetShrinkTime;                                  // 0x24(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        CurrentConfigRadius;                               // 0x28(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector                               CurrentAreaBeginLocation;                          // 0x2C(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x10 (0x10 - 0x0)
	// ScriptStruct Solarland.VehicleData
	struct FVehicleData
	{
	public:
		float                                        Speed1;                                            // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        Fov1;                                              // 0x4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        Speed2;                                            // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        Fov2;                                              // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x3C (0x3C - 0x0)
	// ScriptStruct Solarland.MapData
	struct FMapData
	{
	public:
		struct FVector2D                             MapTopLeftCoord;                                   // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector2D                             MapRightBottomCoord;                               // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector2D                             MapImageSize;                                      // 0x10(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        MapImage;                                          // 0x18(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        AirlineZ;                                          // 0x1C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        HorizonLineZ;                                      // 0x20(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        TopZ;                                              // 0x24(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        BottomZ;                                           // 0x28(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        AverageZ;                                          // 0x2C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        InitFogZ;                                          // 0x30(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        TargetFogZ;                                        // 0x34(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        MapFOV;                                            // 0x38(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x30 (0x30 - 0x0)
	// ScriptStruct Solarland.MapDarkData
	struct FMapDarkData
	{
	public:
		int32                                        SrcMapID;                                          // 0x0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3374[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class FString                                SrcImagePath;                                      // 0x8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        SizeX;                                             // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        SizeY;                                             // 0x1C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3375[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x50 (0x50 - 0x0)
	// ScriptStruct Solarland.MapSelectPointCellData
	struct FMapSelectPointCellData
	{
	public:
		bool                                         CellBeSelected;                                    // 0x0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class EMapCellSelectionAccess           SelectionAccess;                                   // 0x1(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3376[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		int32                                        PlayerId;                                          // 0x4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3377[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class FString                                CellAddress;                                       // 0x10(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                SolarPlayerID;                                     // 0x20(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3378[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x14 (0x14 - 0x0)
	// ScriptStruct Solarland.MapSelectPointCellConfig
	struct FMapSelectPointCellConfig
	{
	public:
		int32                                        X;                                                 // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        Y;                                                 // 0x4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        Width;                                             // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        Height;                                            // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        DistanceOfCell;                                    // 0x10(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x8 (0x8 - 0x0)
	// ScriptStruct Solarland.MapSelectPointCellAddress
	struct FMapSelectPointCellAddress
	{
	public:
		int32                                        X;                                                 // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        Y;                                                 // 0x4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x3 (0x3 - 0x0)
	// ScriptStruct Solarland.MetaAttributeUpdateEvent_Character
	struct FMetaAttributeUpdateEvent_Character
	{
	public:
		bool                                         bHitHead;                                          // 0x0(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bBreakShield;                                      // 0x1(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bDead;                                             // 0x2(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x48 (0x48 - 0x0)
	// ScriptStruct Solarland.MetaAttributeProduceEffect
	struct FMetaAttributeProduceEffect
	{
	public:
		class USolarAttributeSet* EffectAttributeSet;                                // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FGameplayAttribute                    EffectAttribute;                                   // 0x8(0x38)(BlueprintVisible, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        EffectValue;                                       // 0x40(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3379[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x78 (0x78 - 0x0)
	// ScriptStruct Solarland.MetaAttributeUpdateEvent
	struct FMetaAttributeUpdateEvent
	{
	public:
		uint8                                        Pad_337A[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		int32                                        TypeID;                                            // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_337B[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class USolarAbilitySystemComponent* TargetASC;                                         // 0x10(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class USolarMetaAttributeSet* MetaAttributeSet;                                  // 0x18(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FGameplayAttribute                    MetaAttribute;                                     // 0x20(0x38)(BlueprintVisible, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        MetaAttributeValue;                                // 0x58(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_337C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TArray<struct FMetaAttributeProduceEffect>   Effects;                                           // 0x60(0x10)(BlueprintVisible, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FMetaAttributeUpdateEvent_Character   CharacterEventData;                                // 0x70(0x3)(BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
		uint8                                        Pad_337D[0x5];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x8 (0x8 - 0x0)
	// ScriptStruct Solarland.MobilePlatformSplinePoint
	struct FMobilePlatformSplinePoint
	{
	public:
		float                                        DelayTime;                                         // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        Speed;                                             // 0x4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x60 (0x60 - 0x0)
	// ScriptStruct Solarland.SmartLinkInstance
	struct FSmartLinkInstance
	{
	public:
		enum class ENavLinkType                      LinkType;                                          // 0x0(0x1)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_337E[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		uint32                                       NavLinkUserId;                                     // 0x4(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TSubclassOf<class UNavArea>                  EnabledAreaClass;                                  // 0x8(0x8)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TSubclassOf<class UNavArea>                  DisabledAreaClass;                                 // 0x10(0x8)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FNavAgentSelector                     SupportedAgents;                                   // 0x18(0x4)(Edit, EditConst, NoDestructor, NativeAccessSpecifierPublic)
		struct FVector                               LinkRelativeStart;                                 // 0x1C(0xC)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector                               LinkRelativeEnd;                                   // 0x28(0xC)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class ENavLinkDirection                 LinkDirection;                                     // 0x34(0x1)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_337F[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		struct FVector                               VaultPoint;                                        // 0x38(0xC)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector                               VaultDirect;                                       // 0x44(0xC)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class EVaultType                        VaultAnimate;                                      // 0x50(0x1)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3380[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		struct FVector                               VaultLandPoint;                                    // 0x54(0xC)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0xA0 (0xA0 - 0x0)
	// ScriptStruct Solarland.SolarNetMovementState
	struct FSolarNetMovementState
	{
	public:
		uint8                                        Pad_3381[0xA0];                                    // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x10 (0x10 - 0x0)
	// ScriptStruct Solarland.ObjectArray
	struct FObjectArray
	{
	public:
		TArray<class UObject*>                       ObjectArray;                                       // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x30 (0x30 - 0x0)
	// ScriptStruct Solarland.OBTeamInfo
	struct FOBTeamInfo
	{
	public:
		uint8                                        Pad_3382[0x30];                                    // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x40 (0x40 - 0x0)
	// ScriptStruct Solarland.OBTeammateInfo
	struct FOBTeammateInfo
	{
	public:
		uint8                                        Pad_3383[0x40];                                    // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x50 (0x50 - 0x0)
	// ScriptStruct Solarland.OperationUIElement
	struct FOperationUIElement
	{
	public:
		class FString                                PanelName;                                         // 0x0(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                PanelAliasName;                                    // 0x10(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        CurScale;                                          // 0x20(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        MinScale;                                          // 0x24(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        MaxScale;                                          // 0x28(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        CurOpacity;                                        // 0x2C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        MinOpacity;                                        // 0x30(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        MaxOpacity;                                        // 0x34(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bCanHide;                                          // 0x38(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bVisible;                                          // 0x39(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bLockAxisX;                                        // 0x3A(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3384[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		float                                        MinOffsetY;                                        // 0x3C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        MaxOffsetY;                                        // 0x40(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bCannotChangeScale;                                // 0x44(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bCannotChangeOpacity;                              // 0x45(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bVisibleInVehicle;                                 // 0x46(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3385[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		struct FVector2D                             Translation;                                       // 0x48(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x60 (0x60 - 0x0)
	// ScriptStruct Solarland.PerceivableEAInfluenceConfig
	struct FPerceivableEAInfluenceConfig
	{
	public:
		TMap<enum class EPerceivableEffectAreaType, float> AreaTypeValueMap;                                  // 0x0(0x50)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
		float                                        HostileAreaFactor;                                 // 0x50(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        NeutralAreaFactor;                                 // 0x54(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        FriendlyAreaFactor;                                // 0x58(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3386[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x2C (0x2C - 0x0)
	// ScriptStruct Solarland.PerceivableEffectArea
	struct FPerceivableEffectArea
	{
	public:
		enum class EPerceivableEffectAreaType        AreaType;                                          // 0x0(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3387[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		struct FVector                               EffectLocation;                                    // 0x4(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        EffectRadius;                                      // 0x10(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TWeakObjectPtr<class AActor>                 EffectActor;                                       // 0x14(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TWeakObjectPtr<class AActor>                 Instigator;                                        // 0x1C(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3388[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0xD0 (0xD0 - 0x0)
	// ScriptStruct Solarland.PickupListViewItemData
	struct FPickupListViewItemData
	{
	public:
		struct FSolarItemData                        ItemData;                                          // 0x0(0xB8)(NativeAccessSpecifierPublic)
		int32                                        Index;                                             // 0xB8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3389[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class AActor* PickActor;                                         // 0xC0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class EItemType                         PickActroItemType;                                 // 0xC8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_338A[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x10 (0x10 - 0x0)
	// ScriptStruct Solarland.ActorArray
	struct FActorArray
	{
	public:
		TArray<class AActor*>                        ActorArray;                                        // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x50 (0x50 - 0x0)
	// ScriptStruct Solarland.ActorArrayMap
	struct FActorArrayMap
	{
	public:
		TMap<int32, struct FActorArray>              ActorArrayMap;                                     // 0x0(0x50)(NativeAccessSpecifierPublic)
	};

	// 0x30 (0x30 - 0x0)
	// ScriptStruct Solarland.ChargingInfo
	struct FChargingInfo
	{
	public:
		TWeakObjectPtr<class ASolarCharacter>        Ch;                                                // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        Time;                                              // 0x8(0x4)(ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        LastChargeTime;                                    // 0xC(0x4)(ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bShowEffect;                                       // 0x10(0x1)(ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_338B[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		float                                        Quantity;                                          // 0x14(0x4)(ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        Frequency;                                         // 0x18(0x4)(ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class EPileHealingType                  PileHealingType;                                   // 0x1C(0x1)(ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_338C[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		float                                        TotalChargeEnergy;                                 // 0x20(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_338D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class USolarBackpackComponent* BackpackComponent;                                 // 0x28(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	};

	// 0x150 (0x150 - 0x0)
	// ScriptStruct Solarland.ChargingPilePreset
	struct FChargingPilePreset
	{
	public:
		struct FSoftObjectPath                       NormalMeshPath;                                    // 0x0(0x18)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FSoftObjectPath                       BrokenMeshPath;                                    // 0x18(0x18)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FSoftObjectPath                       BrokenMatPath;                                     // 0x30(0x18)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FSoftObjectPath                       RangeRingPath;                                     // 0x48(0x18)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FSoftObjectPath                       RangeRingMatPath;                                  // 0x60(0x18)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FSoftObjectPath                       ChargeCirclePath;                                  // 0x78(0x18)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FSoftObjectPath                       ChargeCircleMatPath;                               // 0x90(0x18)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FSoftObjectPath                       ChargeParticleEffectPath;                          // 0xA8(0x18)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FSoftObjectPath                       OutlineMatPath;                                    // 0xC0(0x18)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_338E[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		struct FTransform                            RangeRingTrans;                                    // 0xE0(0x30)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		struct FTransform                            ChargeCircleTrans;                                 // 0x110(0x30)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		struct FVector                               BeamStartPos;                                      // 0x140(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_338F[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x40 (0x40 - 0x0)
	// ScriptStruct Solarland.PlayerActivityHeatKillDetail
	struct FPlayerActivityHeatKillDetail
	{
	public:
		float                                        KillTime;                                          // 0x0(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector                               VictimPosition;                                    // 0x4(0xC)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                KillerID;                                          // 0x10(0x10)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                VictimID;                                          // 0x20(0x10)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         IsAbilityKill;                                     // 0x30(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         IsScopedKill;                                      // 0x31(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         IsVehicleKill;                                     // 0x32(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         IsHeadShot;                                        // 0x33(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         IsAbilityActivated;                                // 0x34(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3390[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		int32                                        Weaponid;                                          // 0x38(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3391[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x50 (0x50 - 0x0)
	// ScriptStruct Solarland.PlayerActivityHeatRawData
	struct FPlayerActivityHeatRawData
	{
	public:
		enum class EPlayerActivityHeatType           PlayerActivityHeatType;                            // 0x0(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3392[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		float                                        HeatDataTimeStamp;                                 // 0x4(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        ActivityHeatTimeOffset;                            // 0x8(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3393[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		struct FPlayerActivityHeatKillDetail         KillDetail;                                        // 0x10(0x40)(BlueprintVisible, NativeAccessSpecifierPublic)
	};

	// 0x20 (0x20 - 0x0)
	// ScriptStruct Solarland.AntiCheatAimbotPolicyResult
	struct FAntiCheatAimbotPolicyResult
	{
	public:
		class FString                                PolicyName;                                        // 0x0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                PolicyRawData;                                     // 0x10(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0xC (0xC - 0x0)
	// ScriptStruct Solarland.AntiCheatAimbotPolicyParm
	struct FAntiCheatAimbotPolicyParm
	{
	public:
		int32                                        AimbotSwitch;                                      // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        AimbotWindowSize;                                  // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        AimbotMaxMutation;                                 // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x50 (0x50 - 0x0)
	// ScriptStruct Solarland.ScreenshotManager
	struct FScreenshotManager
	{
	public:
		uint8                                        Pad_3394[0x50];                                    // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0xC0 (0xC0 - 0x0)
	// ScriptStruct Solarland.BagItemInfo
	struct FBagItemInfo
	{
	public:
		struct FSolarItemData                        ItemData;                                          // 0x0(0xB8)(NativeAccessSpecifierPublic)
		int32                                        Grade;                                             // 0xB8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3395[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x8 (0x8 - 0x0)
	// ScriptStruct Solarland.RadarDelegateHandle
	struct FRadarDelegateHandle
	{
	public:
		uint8                                        Pad_3396[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x38 (0x40 - 0x8)
	// ScriptStruct Solarland.ScannedVehicleDisplayRow
	struct FScannedVehicleDisplayRow : public FTableRowBase
	{
	public:
		int32                                        VehicleID;                                         // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3397[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TSoftObjectPtr<class UObject>                Icon;                                              // 0x10(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector2D                             IconSize;                                          // 0x38(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x2 (0x2 - 0x0)
	// ScriptStruct Solarland.PerspectiveActorInfo
	struct FPerspectiveActorInfo
	{
	public:
		uint8                                        Pad_3398[0x2];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x1C (0x1C - 0x0)
	// ScriptStruct Solarland.ScannedInfo
	struct FScannedInfo
	{
	public:
		uint32                                       UniqueId;                                          // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class EActorRegisterType                TargetType;                                        // 0x4(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3399[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		uint32                                       VehicleID;                                         // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector                               TargetLocation;                                    // 0xC(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        TargetToward;                                      // 0x18(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x8 (0x10 - 0x8)
	// ScriptStruct Solarland.StreamingDistanceScaleParam
	struct FStreamingDistanceScaleParam : public FTableRowBase
	{
	public:
		enum class ESolarGraphicsQualityLevel        GraphicsQualityLevel;                              // 0x8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_339A[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		float                                        RelativeStreamingDistanceScaleParam;               // 0xC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x18 (0x18 - 0x0)
	// ScriptStruct Solarland.NarrateEventInfoResult
	struct FNarrateEventInfoResult
	{
	public:
		float                                        EventTime;                                         // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_339B[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class FString                                NarrateText;                                       // 0x8(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x48 (0x48 - 0x0)
	// ScriptStruct Solarland.AutoDirectorNodeInfo
	struct FAutoDirectorNodeInfo
	{
	public:
		uint8                                        Pad_339C[0x48];                                    // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x28 (0x28 - 0x0)
	// ScriptStruct Solarland.AutoDirectorActivityEventScoresInfo
	struct FAutoDirectorActivityEventScoresInfo
	{
	public:
		float                                        ScoreSum;                                          // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_339D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TArray<float>                                PlayerScores;                                      // 0x8(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<bool>                                 PlayerMakeKilled;                                  // 0x18(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x60 (0x60 - 0x0)
	// ScriptStruct Solarland.SubGraphInfo
	struct FSubGraphInfo
	{
	public:
		uint8                                        TeamIndex;                                         // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_339E[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TSet<TWeakObjectPtr<class ASolarPlayerState>> AllPlayerStates;                                   // 0x8(0x50)(UObjectWrapper, NativeAccessSpecifierPublic)
		float                                        ScoreSum;                                          // 0x58(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_339F[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x18 (0x18 - 0x0)
	// ScriptStruct Solarland.SolarActorGroupOfReplayCamera
	struct FSolarActorGroupOfReplayCamera
	{
	public:
		uint8                                        Pad_33A0[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x18 (0x18 - 0x0)
	// ScriptStruct Solarland.ReplayFindSpectateTargetParams
	struct FReplayFindSpectateTargetParams
	{
	public:
		uint8                                        Pad_33A1[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
		class ASolarPlayerState* SuggestTarget;                                     // 0x10(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x20 (0x20 - 0x0)
	// ScriptStruct Solarland.PlayerHighlightOverview
	struct FPlayerHighlightOverview
	{
	public:
		int32                                        KillNum;                                           // 0x0(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        AssistNum;                                         // 0x4(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        Damage;                                            // 0x8(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_33A2[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class FString                                PlayerId;                                          // 0x10(0x10)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x50 (0x50 - 0x0)
	// ScriptStruct Solarland.SavedTagAndValueData
	struct FSavedTagAndValueData
	{
	public:
		TMap<class FName, class FString>             SavedTagsAndValue;                                 // 0x0(0x50)(Edit, EditConst, NativeAccessSpecifierPublic)
	};

	// 0x110 (0x110 - 0x0)
	// ScriptStruct Solarland.FilteredData
	struct FFilteredData
	{
	public:
		struct FARFilter                             Filter;                                            // 0x0(0xE8)(Edit, NativeAccessSpecifierPublic)
		TArray<struct FAssetData>                    Results;                                           // 0xE8(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TSubclassOf<class UObject>                   ObjectBaseClassType;                               // 0xF8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<struct FSavedTagAndValueData>         SavedTagAndValueData;                              // 0x100(0x10)(Edit, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x18 (0x18 - 0x0)
	// ScriptStruct Solarland.NeverShowCheckWindow
	struct FNeverShowCheckWindow
	{
	public:
		int32                                        ConfirmID;                                         // 0x0(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_33A3[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		struct FDateTime                             Timestamp;                                         // 0x8(0x8)(Edit, ZeroConstructor, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class ENeverShowDuration                Duration;                                          // 0x10(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_33A4[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x20 (0x20 - 0x0)
	// ScriptStruct Solarland.SkeletalMeshMergeParams
	struct FSkeletalMeshMergeParams
	{
	public:
		TArray<class USkeletalMesh*>                 MeshesToMerge;                                     // 0x0(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        StripTopLODS;                                      // 0x10(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        bNeedsCpuAccess : 1;                               // Mask: 0x1, PropSize: 0x10x14(0x1)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        bSkeletonBefore : 1;                               // Mask: 0x2, PropSize: 0x10x14(0x1)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        BitPad_1F1 : 6;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
		uint8                                        Pad_33A5[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class USkeleton* Skeleton;                                          // 0x18(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x10 (0x10 - 0x0)
	// ScriptStruct Solarland.SkeletalMeshMergeUVTransforms_BP
	struct FSkeletalMeshMergeUVTransforms_BP
	{
	public:
		TArray<struct FTransform>                    UVTransforms;                                      // 0x0(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x10 (0x10 - 0x0)
	// ScriptStruct Solarland.SkeletalMeshMergeUVTransformMapping_BP
	struct FSkeletalMeshMergeUVTransformMapping_BP
	{
	public:
		TArray<struct FSkeletalMeshMergeUVTransforms_BP> UVTransformsPerMesh;                               // 0x0(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x10 (0x10 - 0x0)
	// ScriptStruct Solarland.SkeletalMeshMergeSectionMapping_BP
	struct FSkeletalMeshMergeSectionMapping_BP
	{
	public:
		TArray<int32>                                SectionIDs;                                        // 0x0(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x18 (0x18 - 0x0)
	// ScriptStruct Solarland.SolarSubClusterGrenadeData
	struct FSolarSubClusterGrenadeData
	{
	public:
		TSubclassOf<class ASolarSkill_ClusterGrenade> SubClusterGrenadeClass;                            // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        DelaySpawnTime;                                    // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        SpawnTimer;                                        // 0xC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bLaunchSpawnTimer;                                 // 0x10(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bSpawned;                                          // 0x11(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_33A6[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x80 (0x80 - 0x0)
	// ScriptStruct Solarland.SolarEMPParticleInfo
	struct FSolarEMPParticleInfo
	{
	public:
		struct FSoftObjectPath                       ParticlePathForTeammate;                           // 0x0(0x18)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FSoftObjectPath                       ParticlePathForEnemy;                              // 0x18(0x18)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FTransform                            RelativeTransform;                                 // 0x30(0x30)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		bool                                         bAttachMode;                                       // 0x60(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_33A7[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class FName                                  AttachSocketName;                                  // 0x64(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class EAttachLocation                   AttachLocationType;                                // 0x6C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bAutoDestroy;                                      // 0x6D(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_33A8[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		float                                        Duration;                                          // 0x70(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class EPSCPoolMethod                    PoolMode;                                          // 0x74(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_33A9[0xB];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0xD0 (0xD0 - 0x0)
	// ScriptStruct Solarland.SolarSkillProjectileData
	struct FSolarSkillProjectileData
	{
	public:
		float                                        PredictTime;                                       // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_33AA[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TMap<enum class ESlateDetailMode, float>     PredictSimFrequencyMap;                            // 0x8(0x50)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
		float                                        PredictRadius;                                     // 0x58(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        PredictSpeed;                                      // 0x5C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        GravityScale;                                      // 0x60(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        PredictAngle;                                      // 0x64(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FName                                  StartSocketName;                                   // 0x68(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector                               StartSocketOffset;                                 // 0x70(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bDisplayHoldModel;                                 // 0x7C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_33AB[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class FName                                  HoldSocketName;                                    // 0x80(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_33AC[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		struct FTransform                            HoldModelTransform;                                // 0x90(0x30)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		int32                                        Count;                                             // 0xC0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        HorizontalOffsetAngle;                             // 0xC4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_33AD[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x98 (0x98 - 0x0)
	// ScriptStruct Solarland.SolarSurroundLightningConfig
	struct FSolarSurroundLightningConfig
	{
	public:
		struct FVector                               ParticleDefaultScale;                              // 0x0(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_33AE[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		struct FRuntimeFloatCurve                    ParticleScaleByDistanceCurve;                      // 0x10(0x88)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	};

	// 0x60 (0x60 - 0x0)
	// ScriptStruct Solarland.BuffDurationInfo
	struct FBuffDurationInfo
	{
	public:
		uint8                                        Pad_33AF[0x60];                                    // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x18 (0x20 - 0x8)
	// ScriptStruct Solarland.SolarSoftObjectReference
	struct FSolarSoftObjectReference : public FTableRowBase
	{
	public:
		struct FSoftObjectPath                       ObjectReference;                                   // 0x8(0x18)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x18 (0x18 - 0x0)
	// ScriptStruct Solarland.SolarSummonPreview
	struct FSolarSummonPreview
	{
	public:
		class UStreamableRenderAsset* Mesh;                                              // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class UMaterialInterface* ValidMaterial;                                     // 0x8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class UMaterialInterface* InvalidMaterial;                                   // 0x10(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x50 (0x50 - 0x0)
	// ScriptStruct Solarland.SolarSummonCondition
	struct FSolarSummonCondition
	{
	public:
		bool                                         bUseChannelTest;                                   // 0x0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class ECollisionChannel                 TestCollisionChannel;                              // 0x1(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_33B0[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TArray<enum class EObjectTypeQuery>          CollisionCheckTypes;                               // 0x8(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<enum class EPhysicalSurface>          ForbiddenSurfaces;                                 // 0x18(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        MaxPlaceableAngle;                                 // 0x28(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bDisplayOverThanPlaceableAngle;                    // 0x2C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_33B1[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		struct FVector                               CheckSize;                                         // 0x30(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        CollisionToGroundDistance;                         // 0x3C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bEnableSummonInRoom;                               // 0x40(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_33B2[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		float                                        RoomCheckHalfHeight;                               // 0x44(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bKeepPreviewUpright;                               // 0x48(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_33B3[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x8 (0x8 - 0x0)
	// ScriptStruct Solarland.SolarSummonTimer
	struct FSolarSummonTimer
	{
	public:
		bool                                         bEnable;                                           // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_33B4[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		float                                        Timer;                                             // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x10 (0x10 - 0x0)
	// ScriptStruct Solarland.SolarSyncMoveMessageParams
	struct FSolarSyncMoveMessageParams
	{
	public:
		float                                        Value;                                             // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector                               Location;                                          // 0x4(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x20 (0x20 - 0x0)
	// ScriptStruct Solarland.SolarLocaleInfo
	struct FSolarLocaleInfo
	{
	public:
		class FString                                Language;                                          // 0x0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Region;                                            // 0x10(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x10 (0x10 - 0x0)
	// ScriptStruct Solarland.SolarTablesDataBase
	struct FSolarTablesDataBase
	{
	public:
		uint8                                        Pad_33B5[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x8 (0x18 - 0x10)
	// ScriptStruct Solarland.SolarTablesData_AccountFixedExp
	struct FSolarTablesData_AccountFixedExp : public FSolarTablesDataBase
	{
	public:
		int32                                        ID;                                                // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        Exp;                                               // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x50 (0x60 - 0x10)
	// ScriptStruct Solarland.SolarTables_AccountFixedExp
	struct FSolarTables_AccountFixedExp : public FSolarTablesDataBase
	{
	public:
		TMap<int32, struct FSolarTablesData_AccountFixedExp> Data;                                              // 0x10(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected)
	};

	// 0x28 (0x38 - 0x10)
	// ScriptStruct Solarland.SolarTablesData_AccountFlag
	struct FSolarTablesData_AccountFlag : public FSolarTablesDataBase
	{
	public:
		int32                                        ID;                                                // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        FlagType;                                          // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                FlagIcon;                                          // 0x18(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                StateName;                                         // 0x28(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x50 (0x60 - 0x10)
	// ScriptStruct Solarland.SolarTables_AccountFlag
	struct FSolarTables_AccountFlag : public FSolarTablesDataBase
	{
	public:
		TMap<int32, struct FSolarTablesData_AccountFlag> Data;                                              // 0x10(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected)
	};

	// 0x4 (0x4 - 0x0)
	// ScriptStruct Solarland.SolarTablesLocalText
	struct FSolarTablesLocalText
	{
	public:
		int32                                        ID;                                                // 0x0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x70 (0x80 - 0x10)
	// ScriptStruct Solarland.SolarTablesData_Achievement
	struct FSolarTablesData_Achievement : public FSolarTablesDataBase
	{
	public:
		int32                                        ID;                                                // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        Order;                                             // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FSolarTablesLocalText                 AchieveName;                                       // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
		int32                                        AchieveTab;                                        // 0x1C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        AchieveType;                                       // 0x20(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        AchieveScore;                                      // 0x24(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<int32>                                AwardList;                                         // 0x28(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                AchieveIcon;                                       // 0x38(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                AchieveIconS;                                      // 0x48(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        AchieveTask;                                       // 0x58(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_33B6[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TArray<int32>                                AchieveTV;                                         // 0x60(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        AchieveTT;                                         // 0x70(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        ReportType;                                        // 0x74(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FSolarTablesLocalText                 AchieveTC;                                         // 0x78(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
		uint8                                        Pad_33B7[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x50 (0x60 - 0x10)
	// ScriptStruct Solarland.SolarTables_Achievement
	struct FSolarTables_Achievement : public FSolarTablesDataBase
	{
	public:
		TMap<int32, struct FSolarTablesData_Achievement> Data;                                              // 0x10(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected)
	};

	// 0x58 (0x68 - 0x10)
	// ScriptStruct Solarland.SolarTablesData_Airline
	struct FSolarTablesData_Airline : public FSolarTablesDataBase
	{
	public:
		int32                                        ID;                                                // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_33B8[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TArray<float>                                AirlineCoordinateA;                                // 0x18(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<float>                                RealPointA;                                        // 0x28(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<float>                                AirlineCoordinateB;                                // 0x38(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<float>                                RealPointB;                                        // 0x48(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        UseGameMode;                                       // 0x58(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        MapID;                                             // 0x5C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        AirlineAltitude;                                   // 0x60(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        CapsuleSpeed;                                      // 0x64(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x50 (0x60 - 0x10)
	// ScriptStruct Solarland.SolarTables_Airline
	struct FSolarTables_Airline : public FSolarTablesDataBase
	{
	public:
		TMap<int32, struct FSolarTablesData_Airline> Data;                                              // 0x10(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected)
	};

	// 0x80 (0x90 - 0x10)
	// ScriptStruct Solarland.SolarTablesData_ArmorProperty
	struct FSolarTablesData_ArmorProperty : public FSolarTablesDataBase
	{
	public:
		int32                                        ID;                                                // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FSolarTablesLocalText                 Name;                                              // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
		class FString                                Icon;                                              // 0x18(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FSolarTablesLocalText                 Info;                                              // 0x28(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
		int32                                        Quality;                                           // 0x2C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        ItemType;                                          // 0x30(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         IfReplace;                                         // 0x34(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_33B9[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		int32                                        Pile;                                              // 0x38(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_33BA[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class FString                                AbilityBP;                                         // 0x40(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                ItemBP;                                            // 0x50(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                AudioEventName;                                    // 0x60(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         UseOnPickup;                                       // 0x70(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_33BB[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		float                                        MaxValue;                                          // 0x74(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        RecoverySpeed;                                     // 0x78(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        EnergyCost;                                        // 0x7C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        MaterialCost;                                      // 0x80(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        MinMaterialCost;                                   // 0x84(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        ArmorWorth;                                        // 0x88(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_33BC[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x50 (0x60 - 0x10)
	// ScriptStruct Solarland.SolarTables_ArmorProperty
	struct FSolarTables_ArmorProperty : public FSolarTablesDataBase
	{
	public:
		TMap<int32, struct FSolarTablesData_ArmorProperty> Data;                                              // 0x10(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected)
	};

	// 0x78 (0x88 - 0x10)
	// ScriptStruct Solarland.SolarTablesData_Armory
	struct FSolarTablesData_Armory : public FSolarTablesDataBase
	{
	public:
		int32                                        ID;                                                // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        WeaponType;                                        // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        WeaponDescription;                                 // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        SkillName;                                         // 0x1C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        SkillDescription;                                  // 0x20(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_33BD[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class FString                                UrlName;                                           // 0x28(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                WeaponMovie;                                       // 0x38(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                WeaponConfig;                                      // 0x48(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        WeaponUnlockLevel;                                 // 0x58(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        WeaponDamage;                                      // 0x5C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        WeaponRateOfFire;                                  // 0x60(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        WeaponRecoil;                                      // 0x64(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        WeaponSpread;                                      // 0x68(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        WeaponRange;                                       // 0x6C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        WeaponMobility;                                    // 0x70(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_33BE[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class FString                                SilhouetteIcon;                                    // 0x78(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x50 (0x60 - 0x10)
	// ScriptStruct Solarland.SolarTables_Armory
	struct FSolarTables_Armory : public FSolarTablesDataBase
	{
	public:
		TMap<int32, struct FSolarTablesData_Armory>  Data;                                              // 0x10(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected)
	};

	// 0x18 (0x28 - 0x10)
	// ScriptStruct Solarland.SolarTablesData_AutoDirector
	struct FSolarTablesData_AutoDirector : public FSolarTablesDataBase
	{
	public:
		int32                                        ID;                                                // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        SpectateAreaRadius;                                // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        MaxValidDist;                                      // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        MinFocusTime;                                      // 0x1C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        MaxFocusTime;                                      // 0x20(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        PreFreeCameraTime;                                 // 0x24(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x50 (0x60 - 0x10)
	// ScriptStruct Solarland.SolarTables_AutoDirector
	struct FSolarTables_AutoDirector : public FSolarTablesDataBase
	{
	public:
		TMap<int32, struct FSolarTablesData_AutoDirector> Data;                                              // 0x10(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected)
	};

	// 0x8 (0x18 - 0x10)
	// ScriptStruct Solarland.SolarTablesData_AutoDirectorActivityScore
	struct FSolarTablesData_AutoDirectorActivityScore : public FSolarTablesDataBase
	{
	public:
		int32                                        ID;                                                // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        Score;                                             // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x50 (0x60 - 0x10)
	// ScriptStruct Solarland.SolarTables_AutoDirectorActivityScore
	struct FSolarTables_AutoDirectorActivityScore : public FSolarTablesDataBase
	{
	public:
		TMap<int32, struct FSolarTablesData_AutoDirectorActivityScore> Data;                                              // 0x10(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected)
	};

	// 0x70 (0x80 - 0x10)
	// ScriptStruct Solarland.SolarTablesData_BackpackProperty
	struct FSolarTablesData_BackpackProperty : public FSolarTablesDataBase
	{
	public:
		int32                                        ID;                                                // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FSolarTablesLocalText                 Name;                                              // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
		class FString                                Icon;                                              // 0x18(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FSolarTablesLocalText                 Info;                                              // 0x28(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
		int32                                        Quality;                                           // 0x2C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        ItemClass;                                         // 0x30(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        ItemType;                                          // 0x34(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         ShowInStorage;                                     // 0x38(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         IfUse;                                             // 0x39(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         IfRecycle;                                         // 0x3A(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class ESolarTablesEnum_StackType        StackType;                                         // 0x3B(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_33BF[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TArray<int32>                                JumpLink;                                          // 0x40(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                BackpackMeshPath;                                  // 0x50(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                PreviewBpPath;                                     // 0x60(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        StartFrame;                                        // 0x70(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        EndFrame;                                          // 0x74(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        Length;                                            // 0x78(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_33C0[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x50 (0x60 - 0x10)
	// ScriptStruct Solarland.SolarTables_BackpackProperty
	struct FSolarTables_BackpackProperty : public FSolarTablesDataBase
	{
	public:
		TMap<int32, struct FSolarTablesData_BackpackProperty> Data;                                              // 0x10(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected)
	};

	// 0x60 (0x70 - 0x10)
	// ScriptStruct Solarland.SolarTablesData_BackpackTrailProperty
	struct FSolarTablesData_BackpackTrailProperty : public FSolarTablesDataBase
	{
	public:
		int32                                        ID;                                                // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FSolarTablesLocalText                 Name;                                              // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
		class FString                                Icon;                                              // 0x18(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FSolarTablesLocalText                 Info;                                              // 0x28(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
		int32                                        Quality;                                           // 0x2C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        ItemClass;                                         // 0x30(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        ItemType;                                          // 0x34(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         ShowInStorage;                                     // 0x38(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         IfUse;                                             // 0x39(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         IfRecycle;                                         // 0x3A(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class ESolarTablesEnum_StackType        StackType;                                         // 0x3B(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_33C1[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TArray<int32>                                JumpLink;                                          // 0x40(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                PreviewTrailPath;                                  // 0x50(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                AssemblingId;                                      // 0x60(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x50 (0x60 - 0x10)
	// ScriptStruct Solarland.SolarTables_BackpackTrailProperty
	struct FSolarTables_BackpackTrailProperty : public FSolarTablesDataBase
	{
	public:
		TMap<int32, struct FSolarTablesData_BackpackTrailProperty> Data;                                              // 0x10(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected)
	};

	// 0x20 (0x30 - 0x10)
	// ScriptStruct Solarland.SolarTablesData_BattleEndRankSettlement
	struct FSolarTablesData_BattleEndRankSettlement : public FSolarTablesDataBase
	{
	public:
		int32                                        ID;                                                // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        RuleID;                                            // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        RealPerson;                                        // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_33C2[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TArray<int32>                                ItemDrop;                                          // 0x20(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x50 (0x60 - 0x10)
	// ScriptStruct Solarland.SolarTables_BattleEndRankSettlement
	struct FSolarTables_BattleEndRankSettlement : public FSolarTablesDataBase
	{
	public:
		TMap<int32, struct FSolarTablesData_BattleEndRankSettlement> Data;                                              // 0x10(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected)
	};

	// 0x40 (0x50 - 0x10)
	// ScriptStruct Solarland.SolarTablesData_BattleRoyaleMode
	struct FSolarTablesData_BattleRoyaleMode : public FSolarTablesDataBase
	{
	public:
		int32                                        ID;                                                // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_33C3[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TArray<int32>                                GlobalOutcomes;                                    // 0x18(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        BattleMap;                                         // 0x28(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        ReadyMap;                                          // 0x2C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        ReadyStateTime;                                    // 0x30(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        StartTime;                                         // 0x34(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        EenTime;                                           // 0x38(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        CharacterEXPCoefficient;                           // 0x3C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<class FString>                        EventSets;                                         // 0x40(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x50 (0x60 - 0x10)
	// ScriptStruct Solarland.SolarTables_BattleRoyaleMode
	struct FSolarTables_BattleRoyaleMode : public FSolarTablesDataBase
	{
	public:
		TMap<int32, struct FSolarTablesData_BattleRoyaleMode> Data;                                              // 0x10(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected)
	};

	// 0x30 (0x40 - 0x10)
	// ScriptStruct Solarland.SolarTablesData_BattleUpgradeContent
	struct FSolarTablesData_BattleUpgradeContent : public FSolarTablesDataBase
	{
	public:
		int32                                        ID;                                                // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_33C4[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TArray<int32>                                ModelID;                                           // 0x18(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        Grade;                                             // 0x28(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_33C5[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TArray<int32>                                UpgradeContent;                                    // 0x30(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x50 (0x60 - 0x10)
	// ScriptStruct Solarland.SolarTables_BattleUpgradeContent
	struct FSolarTables_BattleUpgradeContent : public FSolarTablesDataBase
	{
	public:
		TMap<int32, struct FSolarTablesData_BattleUpgradeContent> Data;                                              // 0x10(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected)
	};

	// 0x10 (0x20 - 0x10)
	// ScriptStruct Solarland.SolarTablesData_BattleUpgradeEffect
	struct FSolarTablesData_BattleUpgradeEffect : public FSolarTablesDataBase
	{
	public:
		int32                                        ID;                                                // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class ESolarTablesEnum_BattleUpgradeEffectType Effect;                                            // 0x14(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_33C6[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		int32                                        EffectValue;                                       // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        StackingTimes;                                     // 0x1C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x50 (0x60 - 0x10)
	// ScriptStruct Solarland.SolarTables_BattleUpgradeEffect
	struct FSolarTables_BattleUpgradeEffect : public FSolarTablesDataBase
	{
	public:
		TMap<int32, struct FSolarTablesData_BattleUpgradeEffect> Data;                                              // 0x10(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected)
	};

	// 0x18 (0x28 - 0x10)
	// ScriptStruct Solarland.SolarTablesData_BattleUpgradeEffectPool
	struct FSolarTablesData_BattleUpgradeEffectPool : public FSolarTablesDataBase
	{
	public:
		int32                                        ID;                                                // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_33C7[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TArray<int32>                                Pool;                                              // 0x18(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x50 (0x60 - 0x10)
	// ScriptStruct Solarland.SolarTables_BattleUpgradeEffectPool
	struct FSolarTables_BattleUpgradeEffectPool : public FSolarTablesDataBase
	{
	public:
		TMap<int32, struct FSolarTablesData_BattleUpgradeEffectPool> Data;                                              // 0x10(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected)
	};

	// 0x28 (0x38 - 0x10)
	// ScriptStruct Solarland.SolarTablesData_Behavior
	struct FSolarTablesData_Behavior : public FSolarTablesDataBase
	{
	public:
		int32                                        ID;                                                // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class ESolarTablesEnum_BehaviorType     BehaviorType;                                      // 0x14(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_33C8[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		int32                                        CharacterGetExp;                                   // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        WeaponGetExp;                                      // 0x1C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        WeaponExp_1;                                       // 0x20(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        WeaponExp_2;                                       // 0x24(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        WeaponExp_4;                                       // 0x28(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FSolarTablesLocalText                 CharaGetExpText;                                   // 0x2C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
		int32                                        WeaponGetExpText;                                  // 0x30(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_33C9[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x50 (0x60 - 0x10)
	// ScriptStruct Solarland.SolarTables_Behavior
	struct FSolarTables_Behavior : public FSolarTablesDataBase
	{
	public:
		TMap<int32, struct FSolarTablesData_Behavior> Data;                                              // 0x10(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected)
	};

	// 0x40 (0x50 - 0x10)
	// ScriptStruct Solarland.SolarTablesData_BpAward
	struct FSolarTablesData_BpAward : public FSolarTablesDataBase
	{
	public:
		int32                                        ID;                                                // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        BpID;                                              // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        Level;                                             // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        Exp;                                               // 0x1C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        UpdateValue;                                       // 0x20(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_33CA[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TArray<int32>                                FreeAward;                                         // 0x28(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<int32>                                PayAward;                                          // 0x38(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         UnlockExtraTask;                                   // 0x48(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         BuyLevel;                                          // 0x49(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         LoopReward;                                        // 0x4A(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_33CB[0x5];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x50 (0x60 - 0x10)
	// ScriptStruct Solarland.SolarTables_BpAward
	struct FSolarTables_BpAward : public FSolarTablesDataBase
	{
	public:
		TMap<int32, struct FSolarTablesData_BpAward> Data;                                              // 0x10(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected)
	};

	// 0x60 (0x70 - 0x10)
	// ScriptStruct Solarland.SolarTablesData_CapsuleProperty
	struct FSolarTablesData_CapsuleProperty : public FSolarTablesDataBase
	{
	public:
		int32                                        ID;                                                // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FSolarTablesLocalText                 Name;                                              // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
		class FString                                Icon;                                              // 0x18(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FSolarTablesLocalText                 Info;                                              // 0x28(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
		int32                                        Quality;                                           // 0x2C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        ItemClass;                                         // 0x30(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        ItemType;                                          // 0x34(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         ShowInStorage;                                     // 0x38(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         IfUse;                                             // 0x39(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         IfRecycle;                                         // 0x3A(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class ESolarTablesEnum_StackType        StackType;                                         // 0x3B(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_33CC[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TArray<int32>                                JumpLink;                                          // 0x40(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                CapsuleBPPath;                                     // 0x50(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                PreviewBpPath;                                     // 0x60(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x50 (0x60 - 0x10)
	// ScriptStruct Solarland.SolarTables_CapsuleProperty
	struct FSolarTables_CapsuleProperty : public FSolarTablesDataBase
	{
	public:
		TMap<int32, struct FSolarTablesData_CapsuleProperty> Data;                                              // 0x10(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected)
	};

	// 0x88 (0x98 - 0x10)
	// ScriptStruct Solarland.SolarTablesData_CaseToggleAlphabet
	struct FSolarTablesData_CaseToggleAlphabet : public FSolarTablesDataBase
	{
	public:
		int32                                        ID;                                                // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         IsLower;                                           // 0x14(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_33CD[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class FString                                De;                                                // 0x18(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Fr;                                                // 0x28(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Es;                                                // 0x38(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Pt;                                                // 0x48(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                It;                                                // 0x58(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Pl;                                                // 0x68(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Tr;                                                // 0x78(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Ru;                                                // 0x88(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x50 (0x60 - 0x10)
	// ScriptStruct Solarland.SolarTables_CaseToggleAlphabet
	struct FSolarTables_CaseToggleAlphabet : public FSolarTablesDataBase
	{
	public:
		TMap<int32, struct FSolarTablesData_CaseToggleAlphabet> Data;                                              // 0x10(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected)
	};

	// 0x50 (0x60 - 0x10)
	// ScriptStruct Solarland.SolarTablesData_CharacterAbility
	struct FSolarTablesData_CharacterAbility : public FSolarTablesDataBase
	{
	public:
		int32                                        ID;                                                // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        CharacterId;                                       // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                DataAssetsPath;                                    // 0x18(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FSolarTablesLocalText                 Name;                                              // 0x28(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
		struct FSolarTablesLocalText                 Info;                                              // 0x2C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
		int32                                        DataID;                                            // 0x30(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_33CE[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class FString                                AbilityBP;                                         // 0x38(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Icon;                                              // 0x48(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        Data;                                              // 0x58(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         IfActive;                                          // 0x5C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_33CF[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x50 (0x60 - 0x10)
	// ScriptStruct Solarland.SolarTables_CharacterAbility
	struct FSolarTables_CharacterAbility : public FSolarTablesDataBase
	{
	public:
		TMap<int32, struct FSolarTablesData_CharacterAbility> Data;                                              // 0x10(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected)
	};

	// 0x18 (0x28 - 0x10)
	// ScriptStruct Solarland.SolarTablesData_CharacterPassiveAbility
	struct FSolarTablesData_CharacterPassiveAbility : public FSolarTablesDataBase
	{
	public:
		int32                                        ID;                                                // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_33D0[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class FString                                DataAssetsPath;                                    // 0x18(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x50 (0x60 - 0x10)
	// ScriptStruct Solarland.SolarTables_CharacterPassiveAbility
	struct FSolarTables_CharacterPassiveAbility : public FSolarTablesDataBase
	{
	public:
		TMap<int32, struct FSolarTablesData_CharacterPassiveAbility> Data;                                              // 0x10(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected)
	};

	// 0x28 (0x38 - 0x10)
	// ScriptStruct Solarland.SolarTablesData_CharacterVoiceover
	struct FSolarTablesData_CharacterVoiceover : public FSolarTablesDataBase
	{
	public:
		int32                                        ID;                                                // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        QuickVoiceID;                                      // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        CharacterId;                                       // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        SkinId;                                            // 0x1C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                AudioEventName;                                    // 0x20(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        LocalizationID;                                    // 0x30(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_33D1[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x50 (0x60 - 0x10)
	// ScriptStruct Solarland.SolarTables_CharacterVoiceover
	struct FSolarTables_CharacterVoiceover : public FSolarTablesDataBase
	{
	public:
		TMap<int32, struct FSolarTablesData_CharacterVoiceover> Data;                                              // 0x10(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected)
	};

	// 0x78 (0x88 - 0x10)
	// ScriptStruct Solarland.SolarTablesData_Chest
	struct FSolarTablesData_Chest : public FSolarTablesDataBase
	{
	public:
		int32                                        ID;                                                // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FSolarTablesLocalText                 Name;                                              // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
		class FString                                Icon;                                              // 0x18(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FSolarTablesLocalText                 Info;                                              // 0x28(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
		int32                                        Quality;                                           // 0x2C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        ItemType;                                          // 0x30(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         IfReplace;                                         // 0x34(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_33D2[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		int32                                        Pile;                                              // 0x38(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_33D3[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class FString                                AbilityBP;                                         // 0x40(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                ItemBP;                                            // 0x50(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                AudioEventName;                                    // 0x60(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         UseOnPickup;                                       // 0x70(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_33D4[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		int32                                        OpenType;                                          // 0x74(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        CostQuantity;                                      // 0x78(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        CostType;                                          // 0x7C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        OpenTime;                                          // 0x80(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        Drop;                                              // 0x84(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x50 (0x60 - 0x10)
	// ScriptStruct Solarland.SolarTables_Chest
	struct FSolarTables_Chest : public FSolarTablesDataBase
	{
	public:
		TMap<int32, struct FSolarTablesData_Chest>   Data;                                              // 0x10(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected)
	};

	// 0x30 (0x40 - 0x10)
	// ScriptStruct Solarland.SolarTablesData_ChestSpawn
	struct FSolarTablesData_ChestSpawn : public FSolarTablesDataBase
	{
	public:
		int32                                        ID;                                                // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class ESolarTablesEnum_ChestType        ChestType;                                         // 0x14(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_33D5[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TArray<int32>                                Chests;                                            // 0x18(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<int32>                                Weight;                                            // 0x28(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        SpawnCount;                                        // 0x38(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_33D6[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x50 (0x60 - 0x10)
	// ScriptStruct Solarland.SolarTables_ChestSpawn
	struct FSolarTables_ChestSpawn : public FSolarTablesDataBase
	{
	public:
		TMap<int32, struct FSolarTablesData_ChestSpawn> Data;                                              // 0x10(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected)
	};

	// 0x18 (0x28 - 0x10)
	// ScriptStruct Solarland.SolarTablesData_ChestSpawnGroup
	struct FSolarTablesData_ChestSpawnGroup : public FSolarTablesDataBase
	{
	public:
		int32                                        ID;                                                // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_33D7[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TArray<int32>                                ChestGroup;                                        // 0x18(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x50 (0x60 - 0x10)
	// ScriptStruct Solarland.SolarTables_ChestSpawnGroup
	struct FSolarTables_ChestSpawnGroup : public FSolarTablesDataBase
	{
	public:
		TMap<int32, struct FSolarTablesData_ChestSpawnGroup> Data;                                              // 0x10(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected)
	};

	// 0x20 (0x30 - 0x10)
	// ScriptStruct Solarland.SolarTablesData_CircularCameras
	struct FSolarTablesData_CircularCameras : public FSolarTablesDataBase
	{
	public:
		int32                                        ID;                                                // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        MiniDistance;                                      // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        BorderRatio;                                       // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        FOV;                                               // 0x1C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        Pitch;                                             // 0x20(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        InitAngleWithMainDir;                              // 0x24(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        BlendAlpha;                                        // 0x28(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        AngularSpeed;                                      // 0x2C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x50 (0x60 - 0x10)
	// ScriptStruct Solarland.SolarTables_CircularCameras
	struct FSolarTables_CircularCameras : public FSolarTablesDataBase
	{
	public:
		TMap<int32, struct FSolarTablesData_CircularCameras> Data;                                              // 0x10(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected)
	};

	// 0x28 (0x38 - 0x10)
	// ScriptStruct Solarland.SolarTablesData_ClanFlag
	struct FSolarTablesData_ClanFlag : public FSolarTablesDataBase
	{
	public:
		int32                                        ID;                                                // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_33D8[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class FString                                FlagIcon;                                          // 0x18(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                WebIcon;                                           // 0x28(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x50 (0x60 - 0x10)
	// ScriptStruct Solarland.SolarTables_ClanFlag
	struct FSolarTables_ClanFlag : public FSolarTablesDataBase
	{
	public:
		TMap<int32, struct FSolarTablesData_ClanFlag> Data;                                              // 0x10(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected)
	};

	// 0x70 (0x80 - 0x10)
	// ScriptStruct Solarland.SolarTablesData_Dance
	struct FSolarTablesData_Dance : public FSolarTablesDataBase
	{
	public:
		int32                                        ID;                                                // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FSolarTablesLocalText                 Name;                                              // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
		class FString                                Icon;                                              // 0x18(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FSolarTablesLocalText                 Info;                                              // 0x28(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
		int32                                        Quality;                                           // 0x2C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        ItemClass;                                         // 0x30(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        ItemType;                                          // 0x34(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         ShowInStorage;                                     // 0x38(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         IfUse;                                             // 0x39(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         IfRecycle;                                         // 0x3A(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class ESolarTablesEnum_StackType        StackType;                                         // 0x3B(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_33D9[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TArray<int32>                                JumpLink;                                          // 0x40(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        LoopTime;                                          // 0x50(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_33DA[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class FString                                BlueprintPath;                                     // 0x58(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        ShopID;                                            // 0x68(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         IfDefault;                                         // 0x6C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         IfShow;                                            // 0x6D(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_33DB[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class FString                                BeginTime;                                         // 0x70(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x50 (0x60 - 0x10)
	// ScriptStruct Solarland.SolarTables_Dance
	struct FSolarTables_Dance : public FSolarTablesDataBase
	{
	public:
		TMap<int32, struct FSolarTablesData_Dance>   Data;                                              // 0x10(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected)
	};

	// 0x10 (0x20 - 0x10)
	// ScriptStruct Solarland.SolarTablesData_DayAndNight
	struct FSolarTablesData_DayAndNight : public FSolarTablesDataBase
	{
	public:
		int32                                        ID;                                                // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        TimeOfDays;                                        // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        ChangingSpeed;                                     // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        ChargingRate;                                      // 0x1C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x50 (0x60 - 0x10)
	// ScriptStruct Solarland.SolarTables_DayAndNight
	struct FSolarTables_DayAndNight : public FSolarTablesDataBase
	{
	public:
		TMap<int32, struct FSolarTablesData_DayAndNight> Data;                                              // 0x10(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected)
	};

	// 0x30 (0x40 - 0x10)
	// ScriptStruct Solarland.SolarTablesData_DsVariableRange
	struct FSolarTablesData_DsVariableRange : public FSolarTablesDataBase
	{
	public:
		int32                                        ID;                                                // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_33DC[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class FString                                VariableName;                                      // 0x18(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        ValueStart;                                        // 0x28(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        ValueEnd;                                          // 0x2C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        ValueType;                                         // 0x30(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        Tolerance;                                         // 0x34(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        ProbeInterval;                                     // 0x38(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_33DD[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x50 (0x60 - 0x10)
	// ScriptStruct Solarland.SolarTables_DsVariableRange
	struct FSolarTables_DsVariableRange : public FSolarTablesDataBase
	{
	public:
		TMap<int32, struct FSolarTablesData_DsVariableRange> Data;                                              // 0x10(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected)
	};

	// 0x98 (0xA8 - 0x10)
	// ScriptStruct Solarland.SolarTablesData_Emote
	struct FSolarTablesData_Emote : public FSolarTablesDataBase
	{
	public:
		int32                                        ID;                                                // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FSolarTablesLocalText                 Name;                                              // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
		class FString                                Icon;                                              // 0x18(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FSolarTablesLocalText                 Info;                                              // 0x28(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
		int32                                        Quality;                                           // 0x2C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        ItemClass;                                         // 0x30(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        ItemType;                                          // 0x34(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         ShowInStorage;                                     // 0x38(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         IfUse;                                             // 0x39(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         IfRecycle;                                         // 0x3A(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class ESolarTablesEnum_StackType        StackType;                                         // 0x3B(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_33DE[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TArray<int32>                                JumpLink;                                          // 0x40(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        EmoteType;                                         // 0x50(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_33DF[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class FString                                EmoteBlueprintPath;                                // 0x58(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                EmoteResourcePath;                                 // 0x68(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        EmoteDuration;                                     // 0x78(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_33E0[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class FString                                EmoteAppearSound;                                  // 0x80(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                EmoteSound;                                        // 0x90(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        ShopID;                                            // 0xA0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_33E1[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x50 (0x60 - 0x10)
	// ScriptStruct Solarland.SolarTables_Emote
	struct FSolarTables_Emote : public FSolarTablesDataBase
	{
	public:
		TMap<int32, struct FSolarTablesData_Emote>   Data;                                              // 0x10(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected)
	};

	// 0x70 (0x80 - 0x10)
	// ScriptStruct Solarland.SolarTablesData_EnergyProperty
	struct FSolarTablesData_EnergyProperty : public FSolarTablesDataBase
	{
	public:
		int32                                        ID;                                                // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FSolarTablesLocalText                 Name;                                              // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
		class FString                                Icon;                                              // 0x18(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FSolarTablesLocalText                 Info;                                              // 0x28(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
		int32                                        Quality;                                           // 0x2C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        ItemType;                                          // 0x30(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         IfReplace;                                         // 0x34(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_33E2[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		int32                                        Pile;                                              // 0x38(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_33E3[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class FString                                AbilityBP;                                         // 0x40(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                ItemBP;                                            // 0x50(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                AudioEventName;                                    // 0x60(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         UseOnPickup;                                       // 0x70(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_33E4[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		float                                        AddedEnergyMax;                                    // 0x74(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        EnergyModuleWorth;                                 // 0x78(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_33E5[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x50 (0x60 - 0x10)
	// ScriptStruct Solarland.SolarTables_EnergyProperty
	struct FSolarTables_EnergyProperty : public FSolarTablesDataBase
	{
	public:
		TMap<int32, struct FSolarTablesData_EnergyProperty> Data;                                              // 0x10(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected)
	};

	// 0x28 (0x38 - 0x10)
	// ScriptStruct Solarland.SolarTablesData_EscapeExp
	struct FSolarTablesData_EscapeExp : public FSolarTablesDataBase
	{
	public:
		int32                                        ID;                                                // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class ESolarTablesEnum_BehaviorType     BehaviorType;                                      // 0x14(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_33E6[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		int32                                        CharacterGetExp;                                   // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        WeaponGetExp;                                      // 0x1C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        WeaponExp_1;                                       // 0x20(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        WeaponExp_2;                                       // 0x24(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        WeaponExp_4;                                       // 0x28(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FSolarTablesLocalText                 CharaGetExpText;                                   // 0x2C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
		int32                                        WeaponGetExpText;                                  // 0x30(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        ExpID;                                             // 0x34(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x50 (0x60 - 0x10)
	// ScriptStruct Solarland.SolarTables_EscapeExp
	struct FSolarTables_EscapeExp : public FSolarTablesDataBase
	{
	public:
		TMap<int32, struct FSolarTablesData_EscapeExp> Data;                                              // 0x10(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected)
	};

	// 0x30 (0x40 - 0x10)
	// ScriptStruct Solarland.SolarTablesData_EShop
	struct FSolarTablesData_EShop : public FSolarTablesDataBase
	{
	public:
		int32                                        ID;                                                // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_33E7[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TArray<int32>                                PoolGroupID;                                       // 0x18(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         IfMapShow;                                         // 0x28(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_33E8[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TArray<int32>                                PoolRefreshTime;                                   // 0x30(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x50 (0x60 - 0x10)
	// ScriptStruct Solarland.SolarTables_EShop
	struct FSolarTables_EShop : public FSolarTablesDataBase
	{
	public:
		TMap<int32, struct FSolarTablesData_EShop>   Data;                                              // 0x10(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected)
	};

	// 0x8 (0x18 - 0x10)
	// ScriptStruct Solarland.SolarTablesData_EShopDemoModel
	struct FSolarTablesData_EShopDemoModel : public FSolarTablesDataBase
	{
	public:
		int32                                        ID;                                                // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        ModelID;                                           // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x50 (0x60 - 0x10)
	// ScriptStruct Solarland.SolarTables_EShopDemoModel
	struct FSolarTables_EShopDemoModel : public FSolarTablesDataBase
	{
	public:
		TMap<int32, struct FSolarTablesData_EShopDemoModel> Data;                                              // 0x10(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected)
	};

	// 0x50 (0x60 - 0x10)
	// ScriptStruct Solarland.SolarTablesData_EShopGoodsPool
	struct FSolarTablesData_EShopGoodsPool : public FSolarTablesDataBase
	{
	public:
		int32                                        ID;                                                // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_33E9[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TArray<int32>                                Equipments;                                        // 0x18(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<int32>                                Prize;                                             // 0x28(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<int32>                                Nums;                                              // 0x38(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<int32>                                Weight;                                            // 0x48(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        NumbersToDisplay;                                  // 0x58(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        ColdDown;                                          // 0x5C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x50 (0x60 - 0x10)
	// ScriptStruct Solarland.SolarTables_EShopGoodsPool
	struct FSolarTables_EShopGoodsPool : public FSolarTablesDataBase
	{
	public:
		TMap<int32, struct FSolarTablesData_EShopGoodsPool> Data;                                              // 0x10(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected)
	};

	// 0x18 (0x28 - 0x10)
	// ScriptStruct Solarland.SolarTablesData_EShopGoodsPoolGroup
	struct FSolarTablesData_EShopGoodsPoolGroup : public FSolarTablesDataBase
	{
	public:
		int32                                        ID;                                                // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_33EA[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TArray<int32>                                PoolIDs;                                           // 0x18(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x50 (0x60 - 0x10)
	// ScriptStruct Solarland.SolarTables_EShopGoodsPoolGroup
	struct FSolarTables_EShopGoodsPoolGroup : public FSolarTablesDataBase
	{
	public:
		TMap<int32, struct FSolarTablesData_EShopGoodsPoolGroup> Data;                                              // 0x10(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected)
	};

	// 0x28 (0x38 - 0x10)
	// ScriptStruct Solarland.SolarTablesData_EShopSpawn
	struct FSolarTablesData_EShopSpawn : public FSolarTablesDataBase
	{
	public:
		int32                                        ID;                                                // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_33EB[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TArray<int32>                                Eshops;                                            // 0x18(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<int32>                                Weight;                                            // 0x28(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x50 (0x60 - 0x10)
	// ScriptStruct Solarland.SolarTables_EShopSpawn
	struct FSolarTables_EShopSpawn : public FSolarTablesDataBase
	{
	public:
		TMap<int32, struct FSolarTablesData_EShopSpawn> Data;                                              // 0x10(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected)
	};

	// 0xA8 (0xB8 - 0x10)
	// ScriptStruct Solarland.SolarTablesData_ExtraEnergyProperty
	struct FSolarTablesData_ExtraEnergyProperty : public FSolarTablesDataBase
	{
	public:
		int32                                        ID;                                                // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FSolarTablesLocalText                 Name;                                              // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
		class FString                                Icon;                                              // 0x18(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FSolarTablesLocalText                 Info;                                              // 0x28(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
		int32                                        Quality;                                           // 0x2C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        ItemType;                                          // 0x30(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         IfReplace;                                         // 0x34(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_33EC[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		int32                                        Pile;                                              // 0x38(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_33ED[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class FString                                AbilityBP;                                         // 0x40(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                ItemBP;                                            // 0x50(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                AudioEventName;                                    // 0x60(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         UseOnPickup;                                       // 0x70(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_33EE[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		int32                                        QualityColor;                                      // 0x74(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        ExtraEnergyMax;                                    // 0x78(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        ExtraEnergyCharge;                                 // 0x7C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        ChargeCD;                                          // 0x80(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        ExtraEnergyWorth;                                  // 0x84(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        RechargeFrequencyFromSky;                          // 0x88(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        RechargeFrequencyFromDeathBox;                     // 0x8C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        RechargeFrequencyFromPile;                         // 0x90(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        RechargeQuantityFromSky;                           // 0x94(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        RechargeQuantityFromDeathBox;                      // 0x98(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        RechargeQuantityFromPile;                          // 0x9C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Sketch;                                            // 0xA0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        SketchLevel;                                       // 0xB0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_33EF[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x50 (0x60 - 0x10)
	// ScriptStruct Solarland.SolarTables_ExtraEnergyProperty
	struct FSolarTables_ExtraEnergyProperty : public FSolarTablesDataBase
	{
	public:
		TMap<int32, struct FSolarTablesData_ExtraEnergyProperty> Data;                                              // 0x10(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected)
	};

	// 0xB0 (0xC0 - 0x10)
	// ScriptStruct Solarland.SolarTablesData_GameMap
	struct FSolarTablesData_GameMap : public FSolarTablesDataBase
	{
	public:
		int32                                        ID;                                                // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FSolarTablesLocalText                 Name;                                              // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
		class FString                                MapName;                                           // 0x18(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                ResPath;                                           // 0x28(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        MapImage;                                          // 0x38(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_33F0[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TArray<float>                                MapImageSize;                                      // 0x40(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<float>                                MapTopLeftCoord;                                   // 0x50(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<float>                                MapRightBottomCoord;                               // 0x60(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<int32>                                LocationIcon;                                      // 0x70(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<class FString>                        ItemSubLevels;                                     // 0x80(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        HorizonLineZ;                                      // 0x90(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        TopZ;                                              // 0x94(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        BottomZ;                                           // 0x98(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        AverageZ;                                          // 0x9C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        InitFogZ;                                          // 0xA0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        TargetFogZ;                                        // 0xA4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        MapFOV;                                            // 0xA8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        Speed1;                                            // 0xAC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        Speed2;                                            // 0xB0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        MapFOV1;                                           // 0xB4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        MapFOV2;                                           // 0xB8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_33F1[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x50 (0x60 - 0x10)
	// ScriptStruct Solarland.SolarTables_GameMap
	struct FSolarTables_GameMap : public FSolarTablesDataBase
	{
	public:
		TMap<int32, struct FSolarTablesData_GameMap> Data;                                              // 0x10(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected)
	};

	// 0x68 (0x78 - 0x10)
	// ScriptStruct Solarland.SolarTablesData_GameModeGroup
	struct FSolarTablesData_GameModeGroup : public FSolarTablesDataBase
	{
	public:
		int32                                        ID;                                                // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FSolarTablesLocalText                 ModeGroupName;                                     // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
		int32                                        SortId;                                            // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_33F2[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TArray<int32>                                ModeID;                                            // 0x20(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Icon_s;                                            // 0x30(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Icon_mini;                                         // 0x40(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Icon_recruit;                                      // 0x50(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        DefaultSelect;                                     // 0x60(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         IfMultiple;                                        // 0x64(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_33F3[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class FString                                GuideVideoUrl;                                     // 0x68(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x50 (0x60 - 0x10)
	// ScriptStruct Solarland.SolarTables_GameModeGroup
	struct FSolarTables_GameModeGroup : public FSolarTablesDataBase
	{
	public:
		TMap<int32, struct FSolarTablesData_GameModeGroup> Data;                                              // 0x10(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected)
	};

	// 0x158 (0x168 - 0x10)
	// ScriptStruct Solarland.SolarTablesData_GameModeMain
	struct FSolarTablesData_GameModeMain : public FSolarTablesDataBase
	{
	public:
		int32                                        ID;                                                // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        Groupid;                                           // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FSolarTablesLocalText                 Name;                                              // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
		struct FSolarTablesLocalText                 Desc;                                              // 0x1C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
		struct FSolarTablesLocalText                 DetailDes;                                         // 0x20(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
		uint8                                        Pad_33F4[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class FString                                Icon;                                              // 0x28(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Icon_s;                                            // 0x38(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Icon_recruit;                                      // 0x48(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Icon_recruit_issue;                                // 0x58(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Icon_mini;                                         // 0x68(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         Enabled;                                           // 0x78(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         IfRecruitShow;                                     // 0x79(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_33F5[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		int32                                        ModeType;                                          // 0x7C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        OutcomeSet;                                        // 0x80(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        LifeTime;                                          // 0x84(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<int32>                                AccessClient;                                      // 0x88(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<int32>                                AccessServer;                                      // 0x98(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<int32>                                AccessAccount;                                     // 0xA8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<int32>                                AccessActivity;                                    // 0xB8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        UnlockLvl;                                         // 0xC8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_33F6[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TArray<int32>                                MatchRule;                                         // 0xD0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        DefaultMatchRule;                                  // 0xE0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        Backpack;                                          // 0xE4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                UIConfig;                                          // 0xE8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                ModeConfig;                                        // 0xF8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Parameters;                                        // 0x108(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        DefaultSelect;                                     // 0x118(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         AIMatch;                                           // 0x11C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_33F7[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class FString                                SettlementBPPath;                                  // 0x120(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         ReEnterBattle;                                     // 0x130(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         IsAutoFillTeammate;                                // 0x131(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_33F8[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TArray<int32>                                CustomRoomNum;                                     // 0x138(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         GetSupplyBox;                                      // 0x148(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_33F9[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		int32                                        ChunkID;                                           // 0x14C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<int32>                                ChunkIdList;                                       // 0x150(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class ESolarTablesEnum_ClassModeType    ClassModeType;                                     // 0x160(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         WarmUp;                                            // 0x161(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         EnableCustomRoomReplay;                            // 0x162(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_33FA[0x5];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x50 (0x60 - 0x10)
	// ScriptStruct Solarland.SolarTables_GameModeMain
	struct FSolarTables_GameModeMain : public FSolarTablesDataBase
	{
	public:
		TMap<int32, struct FSolarTablesData_GameModeMain> Data;                                              // 0x10(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected)
	};

	// 0x40 (0x50 - 0x10)
	// ScriptStruct Solarland.SolarTablesData_GameTimeLine
	struct FSolarTablesData_GameTimeLine : public FSolarTablesDataBase
	{
	public:
		int32                                        ID;                                                // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_33FB[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TArray<int32>                                CheckEvent;                                        // 0x18(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        GameMode;                                          // 0x28(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        StartTime;                                         // 0x2C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        DaylightChange;                                    // 0x30(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        AirDrops;                                          // 0x34(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         IfPoisonShrink;                                    // 0x38(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_33FC[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TArray<int32>                                RedZone;                                           // 0x40(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x50 (0x60 - 0x10)
	// ScriptStruct Solarland.SolarTables_GameTimeLine
	struct FSolarTables_GameTimeLine : public FSolarTablesDataBase
	{
	public:
		TMap<int32, struct FSolarTablesData_GameTimeLine> Data;                                              // 0x10(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected)
	};

	// 0x10 (0x20 - 0x10)
	// ScriptStruct Solarland.SolarTablesData_GetPoint
	struct FSolarTablesData_GetPoint : public FSolarTablesDataBase
	{
	public:
		int32                                        ID;                                                // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        Point;                                             // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        TaskValue;                                         // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FSolarTablesLocalText                 TaskText;                                          // 0x1C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
	};

	// 0x50 (0x60 - 0x10)
	// ScriptStruct Solarland.SolarTables_GetPoint
	struct FSolarTables_GetPoint : public FSolarTablesDataBase
	{
	public:
		TMap<int32, struct FSolarTablesData_GetPoint> Data;                                              // 0x10(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected)
	};

	// 0x48 (0x58 - 0x10)
	// ScriptStruct Solarland.SolarTablesData_GlobalOutcome
	struct FSolarTablesData_GlobalOutcome : public FSolarTablesDataBase
	{
	public:
		int32                                        ID;                                                // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_33FD[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TArray<int32>                                ItemIDs;                                           // 0x18(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<int32>                                ItemNums;                                          // 0x28(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        SingleMaxTimes;                                    // 0x38(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        TotalMaxTimes;                                     // 0x3C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        TotalMinTimes;                                     // 0x40(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_33FE[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TArray<int32>                                AffectedOutcomes;                                  // 0x48(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x50 (0x60 - 0x10)
	// ScriptStruct Solarland.SolarTables_GlobalOutcome
	struct FSolarTables_GlobalOutcome : public FSolarTablesDataBase
	{
	public:
		TMap<int32, struct FSolarTablesData_GlobalOutcome> Data;                                              // 0x10(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected)
	};

	// 0x90 (0xA0 - 0x10)
	// ScriptStruct Solarland.SolarTablesData_GlobalSensitivity
	struct FSolarTablesData_GlobalSensitivity : public FSolarTablesDataBase
	{
	public:
		int32                                        ID;                                                // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_33FF[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TArray<float>                                HoldWeaponSensitivity;                             // 0x18(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<float>                                FireWeaponSensitivity;                             // 0x28(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        ShoulderShootSenSItivity;                          // 0x38(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        ShoulderShootFireSenSItivity;                      // 0x3C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<float>                                SkillSensitivity;                                  // 0x40(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<float>                                SightSensitivity;                                  // 0x50(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<float>                                VehicleDriverSensitivity;                          // 0x60(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<float>                                VehicleFireSensitivity;                            // 0x70(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<float>                                SuperSkillSensitivity;                             // 0x80(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<float>                                TacticalSkillSensitivity;                          // 0x90(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x50 (0x60 - 0x10)
	// ScriptStruct Solarland.SolarTables_GlobalSensitivity
	struct FSolarTables_GlobalSensitivity : public FSolarTablesDataBase
	{
	public:
		TMap<int32, struct FSolarTablesData_GlobalSensitivity> Data;                                              // 0x10(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected)
	};

	// 0x98 (0xA8 - 0x10)
	// ScriptStruct Solarland.SolarTablesData_GunProperty
	struct FSolarTablesData_GunProperty : public FSolarTablesDataBase
	{
	public:
		int32                                        ID;                                                // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FSolarTablesLocalText                 Name;                                              // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
		class FString                                Icon;                                              // 0x18(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FSolarTablesLocalText                 Info;                                              // 0x28(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
		int32                                        Quality;                                           // 0x2C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        ItemType;                                          // 0x30(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         IfReplace;                                         // 0x34(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3400[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		int32                                        Pile;                                              // 0x38(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3401[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class FString                                AbilityBP;                                         // 0x40(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                ItemBP;                                            // 0x50(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                AudioEventName;                                    // 0x60(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         UseOnPickup;                                       // 0x70(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3402[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		int32                                        Weaponid;                                          // 0x74(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                BigIcon;                                           // 0x78(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        WeaponLv;                                          // 0x88(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         UseWeaponAccessory;                                // 0x8C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3403[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		int32                                        WeaponAccessory1;                                  // 0x90(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        WeaponAccessory2;                                  // 0x94(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        WeaponAccessory3;                                  // 0x98(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        WeaponAccessory4;                                  // 0x9C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        WeaponAccessory5;                                  // 0xA0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3404[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x50 (0x60 - 0x10)
	// ScriptStruct Solarland.SolarTables_GunProperty
	struct FSolarTables_GunProperty : public FSolarTablesDataBase
	{
	public:
		TMap<int32, struct FSolarTablesData_GunProperty> Data;                                              // 0x10(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected)
	};

	// 0x18 (0x28 - 0x10)
	// ScriptStruct Solarland.SolarTablesData_HeroPowerFormula
	struct FSolarTablesData_HeroPowerFormula : public FSolarTablesDataBase
	{
	public:
		int32                                        ID;                                                // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        MatchRuleID;                                       // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        Battlerank;                                        // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        RankScore;                                         // 0x1C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        KillRealConfig;                                    // 0x20(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        KillAiConfig;                                      // 0x24(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x50 (0x60 - 0x10)
	// ScriptStruct Solarland.SolarTables_HeroPowerFormula
	struct FSolarTables_HeroPowerFormula : public FSolarTablesDataBase
	{
	public:
		TMap<int32, struct FSolarTablesData_HeroPowerFormula> Data;                                              // 0x10(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected)
	};

	// 0x20 (0x30 - 0x10)
	// ScriptStruct Solarland.SolarTablesData_HotSpot
	struct FSolarTablesData_HotSpot : public FSolarTablesDataBase
	{
	public:
		int32                                        ID;                                                // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3405[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class FString                                UIResource;                                        // 0x18(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        JumpTime;                                          // 0x28(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3406[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x50 (0x60 - 0x10)
	// ScriptStruct Solarland.SolarTables_HotSpot
	struct FSolarTables_HotSpot : public FSolarTablesDataBase
	{
	public:
		TMap<int32, struct FSolarTablesData_HotSpot> Data;                                              // 0x10(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected)
	};

	// 0x18 (0x28 - 0x10)
	// ScriptStruct Solarland.SolarTablesData_InputAction
	struct FSolarTablesData_InputAction : public FSolarTablesDataBase
	{
	public:
		class FString                                ID;                                                // 0x10(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bFlagBigMap;                                       // 0x20(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bFlagBackpack;                                     // 0x21(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bFlagChat;                                         // 0x22(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bFlagParachute;                                    // 0x23(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bFlagSpectate;                                     // 0x24(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bFlagTeamDeath;                                    // 0x25(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3407[0x2];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x50 (0x60 - 0x10)
	// ScriptStruct Solarland.SolarTables_InputAction
	struct FSolarTables_InputAction : public FSolarTablesDataBase
	{
	public:
		TMap<class FString, struct FSolarTablesData_InputAction> Data;                                              // 0x10(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected)
	};

	// 0x80 (0x90 - 0x10)
	// ScriptStruct Solarland.SolarTablesData_InputMapping
	struct FSolarTablesData_InputMapping : public FSolarTablesDataBase
	{
	public:
		class FString                                ID;                                                // 0x10(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                ActionName;                                        // 0x20(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class ESolarTablesEnum_InputActionType  ActionType;                                        // 0x30(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3408[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		float                                        Scale;                                             // 0x34(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class ESolarTablesEnum_InputTriggerType TriggerType;                                       // 0x38(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3409[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class FString                                FirstDefaultKeys;                                  // 0x40(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                SecondDefaultKeys;                                 // 0x50(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                ThirdDefaultKeys;                                  // 0x60(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class ESolarTablesEnum_InputCtrlType    CtrlType;                                          // 0x70(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class ESolarTablesEnum_InputContextType ContextType;                                       // 0x71(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class ESolarTablesEnum_InputRelatedType RelatedType;                                       // 0x72(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_340A[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		struct FSolarTablesLocalText                 ActionDisplayName;                                 // 0x74(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
		struct FSolarTablesLocalText                 ActionTipsDesc;                                    // 0x78(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
		enum class ESolarTablesEnum_InputTabType     TabType;                                           // 0x7C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_340B[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		int32                                        GroupIndex;                                        // 0x80(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FSolarTablesLocalText                 GroupTitle;                                        // 0x84(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
		enum class ESolarTablesEnum_InputGroupType   GroupType;                                         // 0x88(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_340C[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		int32                                        GroupPriority;                                     // 0x8C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x50 (0x60 - 0x10)
	// ScriptStruct Solarland.SolarTables_InputMapping
	struct FSolarTables_InputMapping : public FSolarTablesDataBase
	{
	public:
		TMap<class FString, struct FSolarTablesData_InputMapping> Data;                                              // 0x10(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected)
	};

	// 0x40 (0x50 - 0x10)
	// ScriptStruct Solarland.SolarTablesData_Item
	struct FSolarTablesData_Item : public FSolarTablesDataBase
	{
	public:
		int32                                        ID;                                                // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FSolarTablesLocalText                 Name;                                              // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
		class FString                                Icon;                                              // 0x18(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FSolarTablesLocalText                 Info;                                              // 0x28(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
		int32                                        Quality;                                           // 0x2C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        ItemClass;                                         // 0x30(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        ItemType;                                          // 0x34(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         ShowInStorage;                                     // 0x38(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         IfUse;                                             // 0x39(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         IfRecycle;                                         // 0x3A(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class ESolarTablesEnum_StackType        StackType;                                         // 0x3B(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_340D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TArray<int32>                                JumpLink;                                          // 0x40(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x50 (0x60 - 0x10)
	// ScriptStruct Solarland.SolarTables_Item
	struct FSolarTables_Item : public FSolarTablesDataBase
	{
	public:
		TMap<int32, struct FSolarTablesData_Item>    Data;                                              // 0x10(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected)
	};

	// 0x68 (0x78 - 0x10)
	// ScriptStruct Solarland.SolarTablesData_ItemBehavior
	struct FSolarTablesData_ItemBehavior : public FSolarTablesDataBase
	{
	public:
		int32                                        ID;                                                // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FSolarTablesLocalText                 Name;                                              // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
		class FString                                Icon;                                              // 0x18(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FSolarTablesLocalText                 Info;                                              // 0x28(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
		int32                                        Quality;                                           // 0x2C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        ItemType;                                          // 0x30(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         IfReplace;                                         // 0x34(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_340E[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		int32                                        Pile;                                              // 0x38(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_340F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class FString                                AbilityBP;                                         // 0x40(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                ItemBP;                                            // 0x50(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                AudioEventName;                                    // 0x60(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         UseOnPickup;                                       // 0x70(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3410[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		int32                                        BehaviorExpID;                                     // 0x74(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x50 (0x60 - 0x10)
	// ScriptStruct Solarland.SolarTables_ItemBehavior
	struct FSolarTables_ItemBehavior : public FSolarTablesDataBase
	{
	public:
		TMap<int32, struct FSolarTablesData_ItemBehavior> Data;                                              // 0x10(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected)
	};

	// 0x18 (0x28 - 0x10)
	// ScriptStruct Solarland.SolarTablesData_ItemCustomType
	struct FSolarTablesData_ItemCustomType : public FSolarTablesDataBase
	{
	public:
		int32                                        ID;                                                // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3411[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TArray<int32>                                ItemIDs;                                           // 0x18(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x50 (0x60 - 0x10)
	// ScriptStruct Solarland.SolarTables_ItemCustomType
	struct FSolarTables_ItemCustomType : public FSolarTablesDataBase
	{
	public:
		TMap<int32, struct FSolarTablesData_ItemCustomType> Data;                                              // 0x10(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected)
	};

	// 0x68 (0x78 - 0x10)
	// ScriptStruct Solarland.SolarTablesData_ItemInBattle
	struct FSolarTablesData_ItemInBattle : public FSolarTablesDataBase
	{
	public:
		int32                                        ID;                                                // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FSolarTablesLocalText                 Name;                                              // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
		class FString                                Icon;                                              // 0x18(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FSolarTablesLocalText                 Info;                                              // 0x28(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
		int32                                        Quality;                                           // 0x2C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        ItemType;                                          // 0x30(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         IfReplace;                                         // 0x34(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3412[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		int32                                        Pile;                                              // 0x38(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3413[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class FString                                AbilityBP;                                         // 0x40(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                ItemBP;                                            // 0x50(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                AudioEventName;                                    // 0x60(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         UseOnPickup;                                       // 0x70(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3414[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x50 (0x60 - 0x10)
	// ScriptStruct Solarland.SolarTables_ItemInBattle
	struct FSolarTables_ItemInBattle : public FSolarTablesDataBase
	{
	public:
		TMap<int32, struct FSolarTablesData_ItemInBattle> Data;                                              // 0x10(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected)
	};

	// 0xD8 (0xE8 - 0x10)
	// ScriptStruct Solarland.SolarTablesData_ItemQuality
	struct FSolarTablesData_ItemQuality : public FSolarTablesDataBase
	{
	public:
		int32                                        ID;                                                // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3415[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TArray<float>                                Color;                                             // 0x18(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<float>                                HUDColor;                                          // 0x28(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<float>                                OutsideColor;                                      // 0x38(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<float>                                InsideColor;                                       // 0x48(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<float>                                HighQualityColor;                                  // 0x58(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<float>                                LowQualityColor;                                   // 0x68(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<float>                                HUDBGColor;                                        // 0x78(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<float>                                HUDDecorateColor;                                  // 0x88(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Qualitypic;                                        // 0x98(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                QualityColor;                                      // 0xA8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Qualitystr;                                        // 0xB8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                QualityBG;                                         // 0xC8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                QualityBG2;                                        // 0xD8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x50 (0x60 - 0x10)
	// ScriptStruct Solarland.SolarTables_ItemQuality
	struct FSolarTables_ItemQuality : public FSolarTablesDataBase
	{
	public:
		TMap<int32, struct FSolarTablesData_ItemQuality> Data;                                              // 0x10(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected)
	};

	// 0x38 (0x48 - 0x10)
	// ScriptStruct Solarland.SolarTablesData_ItemSound
	struct FSolarTablesData_ItemSound : public FSolarTablesDataBase
	{
	public:
		int32                                        ID;                                                // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3416[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class FString                                PickupSound;                                       // 0x18(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                EquippedSound;                                     // 0x28(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                PassiveSound;                                      // 0x38(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x50 (0x60 - 0x10)
	// ScriptStruct Solarland.SolarTables_ItemSound
	struct FSolarTables_ItemSound : public FSolarTablesDataBase
	{
	public:
		TMap<int32, struct FSolarTablesData_ItemSound> Data;                                              // 0x10(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected)
	};

	// 0x80 (0x90 - 0x10)
	// ScriptStruct Solarland.SolarTablesData_ItemWeaponParts
	struct FSolarTablesData_ItemWeaponParts : public FSolarTablesDataBase
	{
	public:
		int32                                        ID;                                                // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FSolarTablesLocalText                 Name;                                              // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
		class FString                                Icon;                                              // 0x18(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FSolarTablesLocalText                 Info;                                              // 0x28(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
		int32                                        Quality;                                           // 0x2C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        ItemType;                                          // 0x30(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         IfReplace;                                         // 0x34(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3417[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		int32                                        Pile;                                              // 0x38(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3418[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class FString                                AbilityBP;                                         // 0x40(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                ItemBP;                                            // 0x50(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                AudioEventName;                                    // 0x60(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         UseOnPickup;                                       // 0x70(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3419[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		int32                                        PartsType;                                         // 0x74(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        Level;                                             // 0x78(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_341A[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class FString                                PreviewIcon;                                       // 0x80(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x50 (0x60 - 0x10)
	// ScriptStruct Solarland.SolarTables_ItemWeaponParts
	struct FSolarTables_ItemWeaponParts : public FSolarTablesDataBase
	{
	public:
		TMap<int32, struct FSolarTablesData_ItemWeaponParts> Data;                                              // 0x10(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected)
	};

	// 0xA8 (0xB8 - 0x10)
	// ScriptStruct Solarland.SolarTablesData_JetPackModuleProperty
	struct FSolarTablesData_JetPackModuleProperty : public FSolarTablesDataBase
	{
	public:
		int32                                        ID;                                                // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FSolarTablesLocalText                 Name;                                              // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
		class FString                                Icon;                                              // 0x18(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FSolarTablesLocalText                 Info;                                              // 0x28(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
		int32                                        Quality;                                           // 0x2C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        ItemType;                                          // 0x30(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         IfReplace;                                         // 0x34(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_341B[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		int32                                        Pile;                                              // 0x38(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_341C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class FString                                AbilityBP;                                         // 0x40(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                ItemBP;                                            // 0x50(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                AudioEventName;                                    // 0x60(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         UseOnPickup;                                       // 0x70(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_341D[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		int32                                        VerticalDashSpeedTimes;                            // 0x74(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        HorizontalDashSpeedTimes;                          // 0x78(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        VerticalDashSpeedScale;                            // 0x7C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        HorizontalDashSpeedScale;                          // 0x80(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        VerticalDashCoolDownScale;                         // 0x84(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        HorizontalDashCoolDownScale;                       // 0x88(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        VerticalDashEnergyScale;                           // 0x8C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        HorizontalDashEnergyScale;                         // 0x90(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        VerticalChargingScale;                             // 0x94(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        HorizontalChargingScale;                           // 0x98(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        JetPackModuleWorth;                                // 0x9C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Sketch;                                            // 0xA0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        SketchLevel;                                       // 0xB0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_341E[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x50 (0x60 - 0x10)
	// ScriptStruct Solarland.SolarTables_JetPackModuleProperty
	struct FSolarTables_JetPackModuleProperty : public FSolarTablesDataBase
	{
	public:
		TMap<int32, struct FSolarTablesData_JetPackModuleProperty> Data;                                              // 0x10(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected)
	};

	// 0x48 (0x58 - 0x10)
	// ScriptStruct Solarland.SolarTablesData_LanguageSwitcher
	struct FSolarTablesData_LanguageSwitcher : public FSolarTablesDataBase
	{
	public:
		class FString                                ID;                                                // 0x10(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                ButtonText;                                        // 0x20(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         IfOpened;                                          // 0x30(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_341F[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		int32                                        LanguageIndex;                                     // 0x34(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                MarqueeDirection;                                  // 0x38(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                TextAbbr;                                          // 0x48(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x50 (0x60 - 0x10)
	// ScriptStruct Solarland.SolarTables_LanguageSwitcher
	struct FSolarTables_LanguageSwitcher : public FSolarTablesDataBase
	{
	public:
		TMap<class FString, struct FSolarTablesData_LanguageSwitcher> Data;                                              // 0x10(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected)
	};

	// 0x10 (0x20 - 0x10)
	// ScriptStruct Solarland.SolarTablesData_LobbyAutoDownload
	struct FSolarTablesData_LobbyAutoDownload : public FSolarTablesDataBase
	{
	public:
		int32                                        ID;                                                // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        ChunkID;                                           // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        ChunkName;                                         // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         IncludeMain;                                       // 0x1C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         IncludeOptional;                                   // 0x1D(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3420[0x2];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x50 (0x60 - 0x10)
	// ScriptStruct Solarland.SolarTables_LobbyAutoDownload
	struct FSolarTables_LobbyAutoDownload : public FSolarTablesDataBase
	{
	public:
		TMap<int32, struct FSolarTablesData_LobbyAutoDownload> Data;                                              // 0x10(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected)
	};

	// 0x158 (0x168 - 0x10)
	// ScriptStruct Solarland.SolarTablesData_Localization
	struct FSolarTablesData_Localization : public FSolarTablesDataBase
	{
	public:
		int32                                        ID;                                                // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3421[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class FString                                Zh_CN;                                             // 0x18(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                En;                                                // 0x28(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Pt;                                                // 0x38(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Ind;                                               // 0x48(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Zh_TW;                                             // 0x58(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Ja;                                                // 0x68(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Ko;                                                // 0x78(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Fr;                                                // 0x88(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                De;                                                // 0x98(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Ru;                                                // 0xA8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Ar;                                                // 0xB8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Tr;                                                // 0xC8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Tl;                                                // 0xD8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Es;                                                // 0xE8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Hi;                                                // 0xF8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Vi;                                                // 0x108(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Th;                                                // 0x118(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                It;                                                // 0x128(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Pl;                                                // 0x138(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Po;                                                // 0x148(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Op;                                                // 0x158(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x50 (0x60 - 0x10)
	// ScriptStruct Solarland.SolarTables_Localization
	struct FSolarTables_Localization : public FSolarTablesDataBase
	{
	public:
		TMap<int32, struct FSolarTablesData_Localization> Data;                                              // 0x10(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected)
	};

	// 0x158 (0x168 - 0x10)
	// ScriptStruct Solarland.SolarTablesData_Localization_BattleUI
	struct FSolarTablesData_Localization_BattleUI : public FSolarTablesDataBase
	{
	public:
		int32                                        ID;                                                // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3422[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class FString                                Zh_CN;                                             // 0x18(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                En;                                                // 0x28(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Pt;                                                // 0x38(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Ind;                                               // 0x48(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Zh_TW;                                             // 0x58(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Ja;                                                // 0x68(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Ko;                                                // 0x78(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Fr;                                                // 0x88(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                De;                                                // 0x98(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Ru;                                                // 0xA8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Ar;                                                // 0xB8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Tr;                                                // 0xC8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Tl;                                                // 0xD8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Es;                                                // 0xE8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Hi;                                                // 0xF8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Vi;                                                // 0x108(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Th;                                                // 0x118(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                It;                                                // 0x128(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Pl;                                                // 0x138(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Po;                                                // 0x148(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Op;                                                // 0x158(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x50 (0x60 - 0x10)
	// ScriptStruct Solarland.SolarTables_Localization_BattleUI
	struct FSolarTables_Localization_BattleUI : public FSolarTablesDataBase
	{
	public:
		TMap<int32, struct FSolarTablesData_Localization_BattleUI> Data;                                              // 0x10(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected)
	};

	// 0x158 (0x168 - 0x10)
	// ScriptStruct Solarland.SolarTablesData_Localization_EventSystem
	struct FSolarTablesData_Localization_EventSystem : public FSolarTablesDataBase
	{
	public:
		int32                                        ID;                                                // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3423[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class FString                                Zh_CN;                                             // 0x18(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                En;                                                // 0x28(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Pt;                                                // 0x38(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Ind;                                               // 0x48(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Zh_TW;                                             // 0x58(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Ja;                                                // 0x68(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Ko;                                                // 0x78(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Fr;                                                // 0x88(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                De;                                                // 0x98(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Ru;                                                // 0xA8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Ar;                                                // 0xB8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Tr;                                                // 0xC8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Tl;                                                // 0xD8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Es;                                                // 0xE8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Hi;                                                // 0xF8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Vi;                                                // 0x108(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Th;                                                // 0x118(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                It;                                                // 0x128(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Pl;                                                // 0x138(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Po;                                                // 0x148(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Op;                                                // 0x158(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x50 (0x60 - 0x10)
	// ScriptStruct Solarland.SolarTables_Localization_EventSystem
	struct FSolarTables_Localization_EventSystem : public FSolarTablesDataBase
	{
	public:
		TMap<int32, struct FSolarTablesData_Localization_EventSystem> Data;                                              // 0x10(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected)
	};

	// 0x158 (0x168 - 0x10)
	// ScriptStruct Solarland.SolarTablesData_Localization_General
	struct FSolarTablesData_Localization_General : public FSolarTablesDataBase
	{
	public:
		int32                                        ID;                                                // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3424[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class FString                                Zh_CN;                                             // 0x18(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                En;                                                // 0x28(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Pt;                                                // 0x38(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Ind;                                               // 0x48(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Zh_TW;                                             // 0x58(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Ja;                                                // 0x68(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Ko;                                                // 0x78(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Fr;                                                // 0x88(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                De;                                                // 0x98(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Ru;                                                // 0xA8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Ar;                                                // 0xB8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Tr;                                                // 0xC8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Tl;                                                // 0xD8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Es;                                                // 0xE8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Hi;                                                // 0xF8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Vi;                                                // 0x108(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Th;                                                // 0x118(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                It;                                                // 0x128(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Pl;                                                // 0x138(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Po;                                                // 0x148(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Op;                                                // 0x158(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x50 (0x60 - 0x10)
	// ScriptStruct Solarland.SolarTables_Localization_General
	struct FSolarTables_Localization_General : public FSolarTablesDataBase
	{
	public:
		TMap<int32, struct FSolarTablesData_Localization_General> Data;                                              // 0x10(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected)
	};

	// 0x158 (0x168 - 0x10)
	// ScriptStruct Solarland.SolarTablesData_Localization_Heroes
	struct FSolarTablesData_Localization_Heroes : public FSolarTablesDataBase
	{
	public:
		int32                                        ID;                                                // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3425[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class FString                                Zh_CN;                                             // 0x18(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                En;                                                // 0x28(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Pt;                                                // 0x38(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Ind;                                               // 0x48(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Zh_TW;                                             // 0x58(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Ja;                                                // 0x68(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Ko;                                                // 0x78(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Fr;                                                // 0x88(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                De;                                                // 0x98(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Ru;                                                // 0xA8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Ar;                                                // 0xB8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Tr;                                                // 0xC8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Tl;                                                // 0xD8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Es;                                                // 0xE8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Hi;                                                // 0xF8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Vi;                                                // 0x108(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Th;                                                // 0x118(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                It;                                                // 0x128(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Pl;                                                // 0x138(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Po;                                                // 0x148(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Op;                                                // 0x158(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x50 (0x60 - 0x10)
	// ScriptStruct Solarland.SolarTables_Localization_Heroes
	struct FSolarTables_Localization_Heroes : public FSolarTablesDataBase
	{
	public:
		TMap<int32, struct FSolarTablesData_Localization_Heroes> Data;                                              // 0x10(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected)
	};

	// 0x158 (0x168 - 0x10)
	// ScriptStruct Solarland.SolarTablesData_Localization_Item
	struct FSolarTablesData_Localization_Item : public FSolarTablesDataBase
	{
	public:
		int32                                        ID;                                                // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3426[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class FString                                Zh_CN;                                             // 0x18(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                En;                                                // 0x28(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Pt;                                                // 0x38(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Ind;                                               // 0x48(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Zh_TW;                                             // 0x58(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Ja;                                                // 0x68(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Ko;                                                // 0x78(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Fr;                                                // 0x88(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                De;                                                // 0x98(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Ru;                                                // 0xA8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Ar;                                                // 0xB8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Tr;                                                // 0xC8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Tl;                                                // 0xD8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Es;                                                // 0xE8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Hi;                                                // 0xF8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Vi;                                                // 0x108(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Th;                                                // 0x118(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                It;                                                // 0x128(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Pl;                                                // 0x138(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Po;                                                // 0x148(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Op;                                                // 0x158(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x50 (0x60 - 0x10)
	// ScriptStruct Solarland.SolarTables_Localization_Item
	struct FSolarTables_Localization_Item : public FSolarTablesDataBase
	{
	public:
		TMap<int32, struct FSolarTablesData_Localization_Item> Data;                                              // 0x10(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected)
	};

	// 0x158 (0x168 - 0x10)
	// ScriptStruct Solarland.SolarTablesData_Localization_Tournament
	struct FSolarTablesData_Localization_Tournament : public FSolarTablesDataBase
	{
	public:
		int32                                        ID;                                                // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3427[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class FString                                Zh_CN;                                             // 0x18(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                En;                                                // 0x28(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Pt;                                                // 0x38(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Ind;                                               // 0x48(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Zh_TW;                                             // 0x58(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Ja;                                                // 0x68(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Ko;                                                // 0x78(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Fr;                                                // 0x88(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                De;                                                // 0x98(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Ru;                                                // 0xA8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Ar;                                                // 0xB8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Tr;                                                // 0xC8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Tl;                                                // 0xD8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Es;                                                // 0xE8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Hi;                                                // 0xF8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Vi;                                                // 0x108(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Th;                                                // 0x118(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                It;                                                // 0x128(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Pl;                                                // 0x138(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Po;                                                // 0x148(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Op;                                                // 0x158(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x50 (0x60 - 0x10)
	// ScriptStruct Solarland.SolarTables_Localization_Tournament
	struct FSolarTables_Localization_Tournament : public FSolarTablesDataBase
	{
	public:
		TMap<int32, struct FSolarTablesData_Localization_Tournament> Data;                                              // 0x10(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected)
	};

	// 0x158 (0x168 - 0x10)
	// ScriptStruct Solarland.SolarTablesData_Localization_Uncategorized
	struct FSolarTablesData_Localization_Uncategorized : public FSolarTablesDataBase
	{
	public:
		int32                                        ID;                                                // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3428[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class FString                                Zh_CN;                                             // 0x18(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                En;                                                // 0x28(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Pt;                                                // 0x38(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Ind;                                               // 0x48(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Zh_TW;                                             // 0x58(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Ja;                                                // 0x68(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Ko;                                                // 0x78(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Fr;                                                // 0x88(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                De;                                                // 0x98(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Ru;                                                // 0xA8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Ar;                                                // 0xB8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Tr;                                                // 0xC8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Tl;                                                // 0xD8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Es;                                                // 0xE8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Hi;                                                // 0xF8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Vi;                                                // 0x108(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Th;                                                // 0x118(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                It;                                                // 0x128(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Pl;                                                // 0x138(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Po;                                                // 0x148(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Op;                                                // 0x158(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x50 (0x60 - 0x10)
	// ScriptStruct Solarland.SolarTables_Localization_Uncategorized
	struct FSolarTables_Localization_Uncategorized : public FSolarTablesDataBase
	{
	public:
		TMap<int32, struct FSolarTablesData_Localization_Uncategorized> Data;                                              // 0x10(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected)
	};

	// 0x20 (0x30 - 0x10)
	// ScriptStruct Solarland.SolarTablesData_LookAtCameras
	struct FSolarTablesData_LookAtCameras : public FSolarTablesDataBase
	{
	public:
		int32                                        ID;                                                // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        MiniDistance;                                      // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        BorderRatio;                                       // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        FOV;                                               // 0x1C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        Pitch;                                             // 0x20(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        InitAngleWithMainDir;                              // 0x24(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        BlendAlpha;                                        // 0x28(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3429[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x50 (0x60 - 0x10)
	// ScriptStruct Solarland.SolarTables_LookAtCameras
	struct FSolarTables_LookAtCameras : public FSolarTablesDataBase
	{
	public:
		TMap<int32, struct FSolarTablesData_LookAtCameras> Data;                                              // 0x10(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected)
	};

	// 0x28 (0x38 - 0x10)
	// ScriptStruct Solarland.SolarTablesData_MapMarkIcon
	struct FSolarTablesData_MapMarkIcon : public FSolarTablesDataBase
	{
	public:
		int32                                        ID;                                                // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_342A[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class FString                                AtlasPath;                                         // 0x18(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<float>                                IconSize;                                          // 0x28(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x50 (0x60 - 0x10)
	// ScriptStruct Solarland.SolarTables_MapMarkIcon
	struct FSolarTables_MapMarkIcon : public FSolarTablesDataBase
	{
	public:
		TMap<int32, struct FSolarTablesData_MapMarkIcon> Data;                                              // 0x10(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected)
	};

	// 0x58 (0x68 - 0x10)
	// ScriptStruct Solarland.SolarTablesData_MatchRule
	struct FSolarTablesData_MatchRule : public FSolarTablesDataBase
	{
	public:
		int32                                        ID;                                                // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        MatchType;                                         // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        MinPlayer;                                         // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        MaxPlayer;                                         // 0x1C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        NumMode;                                           // 0x20(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        StopMatchTime;                                     // 0x24(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<int32>                                PlayerStructure;                                   // 0x28(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        MinGroup;                                          // 0x38(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        EloSettleType;                                     // 0x3C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        RankSettleType;                                    // 0x40(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        Groupid;                                           // 0x44(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        RankGroupNameID;                                   // 0x48(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         MatchSameBattle;                                   // 0x4C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_342B[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		int32                                        KeepMatchTimeID;                                   // 0x50(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        OBNum;                                             // 0x54(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         MaxPlayerStopMatch;                                // 0x58(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_342C[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		int32                                        StatisticsType;                                    // 0x5C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        HistoryModeType;                                   // 0x60(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         HeroCombatAbility;                                 // 0x64(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_342D[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x50 (0x60 - 0x10)
	// ScriptStruct Solarland.SolarTables_MatchRule
	struct FSolarTables_MatchRule : public FSolarTablesDataBase
	{
	public:
		TMap<int32, struct FSolarTablesData_MatchRule> Data;                                              // 0x10(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected)
	};

	// 0x58 (0x68 - 0x10)
	// ScriptStruct Solarland.SolarTablesData_MaterialProperty
	struct FSolarTablesData_MaterialProperty : public FSolarTablesDataBase
	{
	public:
		int32                                        ID;                                                // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FSolarTablesLocalText                 Name;                                              // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
		class FString                                Icon;                                              // 0x18(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FSolarTablesLocalText                 Info;                                              // 0x28(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
		int32                                        Quality;                                           // 0x2C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        ItemClass;                                         // 0x30(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        ItemType;                                          // 0x34(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         ShowInStorage;                                     // 0x38(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         IfUse;                                             // 0x39(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         IfRecycle;                                         // 0x3A(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class ESolarTablesEnum_StackType        StackType;                                         // 0x3B(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_342E[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TArray<int32>                                JumpLink;                                          // 0x40(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        Prize;                                             // 0x50(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         IfCollection;                                      // 0x54(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_342F[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		int32                                        Level;                                             // 0x58(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FSolarTablesLocalText                 CoverName;                                         // 0x5C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
		int32                                        Substitution;                                      // 0x60(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3430[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x50 (0x60 - 0x10)
	// ScriptStruct Solarland.SolarTables_MaterialProperty
	struct FSolarTables_MaterialProperty : public FSolarTablesDataBase
	{
	public:
		TMap<int32, struct FSolarTablesData_MaterialProperty> Data;                                              // 0x10(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected)
	};

	// 0x38 (0x48 - 0x10)
	// ScriptStruct Solarland.SolarTablesData_NameCardBackground
	struct FSolarTablesData_NameCardBackground : public FSolarTablesDataBase
	{
	public:
		int32                                        ID;                                                // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        ItemID;                                            // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FSolarTablesLocalText                 Name;                                              // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
		int32                                        ShopID;                                            // 0x1C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        Exclusive;                                         // 0x20(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        IsAIEquiped;                                       // 0x24(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                BackgroundPath;                                    // 0x28(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                BackgroundTexturePath;                             // 0x38(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x50 (0x60 - 0x10)
	// ScriptStruct Solarland.SolarTables_NameCardBackground
	struct FSolarTables_NameCardBackground : public FSolarTablesDataBase
	{
	public:
		TMap<int32, struct FSolarTablesData_NameCardBackground> Data;                                              // 0x10(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected)
	};

	// 0x68 (0x78 - 0x10)
	// ScriptStruct Solarland.SolarTablesData_NameCardPose
	struct FSolarTablesData_NameCardPose : public FSolarTablesDataBase
	{
	public:
		int32                                        ID;                                                // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        ItemID;                                            // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FSolarTablesLocalText                 Name;                                              // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
		int32                                        ShopID;                                            // 0x1C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        Exclusive;                                         // 0x20(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        IsAIEquiped;                                       // 0x24(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                PosePath;                                          // 0x28(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                PosePath_M;                                        // 0x38(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                PosePath_F;                                        // 0x48(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                PosePath_MCP;                                      // 0x58(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                PosePath_FFM;                                      // 0x68(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x50 (0x60 - 0x10)
	// ScriptStruct Solarland.SolarTables_NameCardPose
	struct FSolarTables_NameCardPose : public FSolarTablesDataBase
	{
	public:
		TMap<int32, struct FSolarTablesData_NameCardPose> Data;                                              // 0x10(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected)
	};

	// 0x60 (0x70 - 0x10)
	// ScriptStruct Solarland.SolarTablesData_ObGift
	struct FSolarTablesData_ObGift : public FSolarTablesDataBase
	{
	public:
		int32                                        ID;                                                // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        Gift_type;                                         // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Item_name;                                         // 0x18(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Item_back_res;                                     // 0x28(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Item_text_res;                                     // 0x38(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        Gift_hot_num;                                      // 0x48(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        Currency_type;                                     // 0x4C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        Item_price;                                        // 0x50(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        Item_back;                                         // 0x54(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        Item_show_time;                                    // 0x58(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        Item_id;                                           // 0x5C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        Small_time;                                        // 0x60(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        Interact_num;                                      // 0x64(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        CD;                                                // 0x68(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3431[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x50 (0x60 - 0x10)
	// ScriptStruct Solarland.SolarTables_ObGift
	struct FSolarTables_ObGift : public FSolarTablesDataBase
	{
	public:
		TMap<int32, struct FSolarTablesData_ObGift>  Data;                                              // 0x10(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected)
	};

	// 0x38 (0x48 - 0x10)
	// ScriptStruct Solarland.SolarTablesData_OBSubtitle_Action2Feature
	struct FSolarTablesData_OBSubtitle_Action2Feature : public FSolarTablesDataBase
	{
	public:
		int32                                        ID;                                                // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3432[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class FString                                ActionName;                                        // 0x18(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        Priority;                                          // 0x28(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        DefualtEmotion;                                    // 0x2C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        MaxSuccessiveCount;                                // 0x30(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3433[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TArray<int32>                                FeatureList;                                       // 0x38(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x50 (0x60 - 0x10)
	// ScriptStruct Solarland.SolarTables_OBSubtitle_Action2Feature
	struct FSolarTables_OBSubtitle_Action2Feature : public FSolarTablesDataBase
	{
	public:
		TMap<int32, struct FSolarTablesData_OBSubtitle_Action2Feature> Data;                                              // 0x10(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected)
	};

	// 0x18 (0x28 - 0x10)
	// ScriptStruct Solarland.SolarTablesData_OBSubtitle_Emotion2Pattern
	struct FSolarTablesData_OBSubtitle_Emotion2Pattern : public FSolarTablesDataBase
	{
	public:
		int32                                        ID;                                                // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        EmotionLevel;                                      // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<int32>                                PatternList;                                       // 0x18(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x50 (0x60 - 0x10)
	// ScriptStruct Solarland.SolarTables_OBSubtitle_Emotion2Pattern
	struct FSolarTables_OBSubtitle_Emotion2Pattern : public FSolarTablesDataBase
	{
	public:
		TMap<int32, struct FSolarTablesData_OBSubtitle_Emotion2Pattern> Data;                                              // 0x10(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected)
	};

	// 0x28 (0x38 - 0x10)
	// ScriptStruct Solarland.SolarTablesData_OBSubtitle_Feature2Emotion
	struct FSolarTablesData_OBSubtitle_Feature2Emotion : public FSolarTablesDataBase
	{
	public:
		int32                                        ID;                                                // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3434[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class FString                                FeatureName;                                       // 0x18(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<int32>                                EmotionList;                                       // 0x28(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x50 (0x60 - 0x10)
	// ScriptStruct Solarland.SolarTables_OBSubtitle_Feature2Emotion
	struct FSolarTables_OBSubtitle_Feature2Emotion : public FSolarTablesDataBase
	{
	public:
		TMap<int32, struct FSolarTablesData_OBSubtitle_Feature2Emotion> Data;                                              // 0x10(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected)
	};

	// 0x60 (0x70 - 0x10)
	// ScriptStruct Solarland.SolarTablesData_Outcome
	struct FSolarTablesData_Outcome : public FSolarTablesDataBase
	{
	public:
		int32                                        ID;                                                // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        OutcomeType;                                       // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        MaxTimes;                                          // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        MinTimes;                                          // 0x1C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<int32>                                Contents;                                          // 0x20(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<int32>                                LimitId;                                           // 0x30(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<int32>                                LimitIdMax;                                        // 0x40(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<int32>                                LimitIdMin;                                        // 0x50(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Refresh;                                           // 0x60(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x50 (0x60 - 0x10)
	// ScriptStruct Solarland.SolarTables_Outcome
	struct FSolarTables_Outcome : public FSolarTablesDataBase
	{
	public:
		TMap<int32, struct FSolarTablesData_Outcome> Data;                                              // 0x10(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected)
	};

	// 0x30 (0x40 - 0x10)
	// ScriptStruct Solarland.SolarTablesData_OutcomeContent
	struct FSolarTablesData_OutcomeContent : public FSolarTablesDataBase
	{
	public:
		int32                                        ID;                                                // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        ItemID;                                            // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        Weight;                                            // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3435[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TArray<int32>                                RandomNum;                                         // 0x20(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        MaxTimes;                                          // 0x30(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        MinTimes;                                          // 0x34(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        RelatedContentID;                                  // 0x38(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3436[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x50 (0x60 - 0x10)
	// ScriptStruct Solarland.SolarTables_OutcomeContent
	struct FSolarTables_OutcomeContent : public FSolarTablesDataBase
	{
	public:
		TMap<int32, struct FSolarTablesData_OutcomeContent> Data;                                              // 0x10(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected)
	};

	// 0x28 (0x38 - 0x10)
	// ScriptStruct Solarland.SolarTablesData_OutcomeSet
	struct FSolarTablesData_OutcomeSet : public FSolarTablesDataBase
	{
	public:
		int32                                        ID;                                                // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3437[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TArray<int32>                                OutcomeRef;                                        // 0x18(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<int32>                                GlobalOutcome;                                     // 0x28(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x50 (0x60 - 0x10)
	// ScriptStruct Solarland.SolarTables_OutcomeSet
	struct FSolarTables_OutcomeSet : public FSolarTablesDataBase
	{
	public:
		TMap<int32, struct FSolarTablesData_OutcomeSet> Data;                                              // 0x10(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected)
	};

	// 0x10 (0x20 - 0x10)
	// ScriptStruct Solarland.SolarTablesData_PickupPriorityItem
	struct FSolarTablesData_PickupPriorityItem : public FSolarTablesDataBase
	{
	public:
		int32                                        ID;                                                // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        PriorityValue;                                     // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        MutiAutoPickup;                                    // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3438[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x50 (0x60 - 0x10)
	// ScriptStruct Solarland.SolarTables_PickupPriorityItem
	struct FSolarTables_PickupPriorityItem : public FSolarTablesDataBase
	{
	public:
		TMap<int32, struct FSolarTablesData_PickupPriorityItem> Data;                                              // 0x10(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected)
	};

	// 0x8 (0x18 - 0x10)
	// ScriptStruct Solarland.SolarTablesData_PickupPriorityWeaponPart
	struct FSolarTablesData_PickupPriorityWeaponPart : public FSolarTablesDataBase
	{
	public:
		int32                                        ID;                                                // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        PriorityValue;                                     // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x50 (0x60 - 0x10)
	// ScriptStruct Solarland.SolarTables_PickupPriorityWeaponPart
	struct FSolarTables_PickupPriorityWeaponPart : public FSolarTablesDataBase
	{
	public:
		TMap<int32, struct FSolarTablesData_PickupPriorityWeaponPart> Data;                                              // 0x10(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected)
	};

	// 0x38 (0x48 - 0x10)
	// ScriptStruct Solarland.SolarTablesData_PlayerOperationListLayout
	struct FSolarTablesData_PlayerOperationListLayout : public FSolarTablesDataBase
	{
	public:
		int32                                        ID;                                                // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3439[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class FString                                UIName;                                            // 0x18(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        Normal;                                            // 0x28(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        Driver;                                            // 0x2C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        Passgner;                                          // 0x30(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        EquipVehicleWeapon;                                // 0x34(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        Cruising;                                          // 0x38(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        Parachuting;                                       // 0x3C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        Swimming;                                          // 0x40(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_343A[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x50 (0x60 - 0x10)
	// ScriptStruct Solarland.SolarTables_PlayerOperationListLayout
	struct FSolarTables_PlayerOperationListLayout : public FSolarTablesDataBase
	{
	public:
		TMap<int32, struct FSolarTablesData_PlayerOperationListLayout> Data;                                              // 0x10(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected)
	};

	// 0x148 (0x158 - 0x10)
	// ScriptStruct Solarland.SolarTablesData_QuickChat
	struct FSolarTablesData_QuickChat : public FSolarTablesDataBase
	{
	public:
		int32                                        ID;                                                // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        LocalizationID;                                    // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Zh_CN;                                             // 0x18(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                En;                                                // 0x28(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Pt;                                                // 0x38(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Ind;                                               // 0x48(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Fr;                                                // 0x58(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                De;                                                // 0x68(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Ru;                                                // 0x78(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Ar;                                                // 0x88(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Es;                                                // 0x98(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Hi;                                                // 0xA8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                It;                                                // 0xB8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Ja;                                                // 0xC8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Ko;                                                // 0xD8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Ms;                                                // 0xE8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Pl;                                                // 0xF8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Th;                                                // 0x108(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Tl;                                                // 0x118(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Tr;                                                // 0x128(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Vi;                                                // 0x138(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Zh_TW;                                             // 0x148(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x50 (0x60 - 0x10)
	// ScriptStruct Solarland.SolarTables_QuickChat
	struct FSolarTables_QuickChat : public FSolarTablesDataBase
	{
	public:
		TMap<int32, struct FSolarTablesData_QuickChat> Data;                                              // 0x10(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected)
	};

	// 0x60 (0x70 - 0x10)
	// ScriptStruct Solarland.SolarTablesData_QuickVoice
	struct FSolarTablesData_QuickVoice : public FSolarTablesDataBase
	{
	public:
		int32                                        ID;                                                // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_343B[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class FString                                Icon;                                              // 0x18(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        LocalizationID;                                    // 0x28(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_343C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class FString                                AudioEventName;                                    // 0x30(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                AudioEventNameFemale;                              // 0x40(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        IsMarkIcon;                                        // 0x50(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        PassiveTriggeredCD;                                // 0x54(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        PassiveTriggeredProb;                              // 0x58(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_343D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class FString                                ReplyMessageID;                                    // 0x60(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x50 (0x60 - 0x10)
	// ScriptStruct Solarland.SolarTables_QuickVoice
	struct FSolarTables_QuickVoice : public FSolarTablesDataBase
	{
	public:
		TMap<int32, struct FSolarTablesData_QuickVoice> Data;                                              // 0x10(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected)
	};

	// 0x70 (0x80 - 0x10)
	// ScriptStruct Solarland.SolarTablesData_RankLevel
	struct FSolarTablesData_RankLevel : public FSolarTablesDataBase
	{
	public:
		int32                                        ID;                                                // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        RankID;                                            // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FSolarTablesLocalText                 RankName;                                          // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
		struct FSolarTablesLocalText                 Name;                                              // 0x1C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
		int32                                        LevelID;                                           // 0x20(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        RankStart;                                         // 0x24(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        RankEnd;                                           // 0x28(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        RankProtect;                                       // 0x2C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        FrustrationValue;                                  // 0x30(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        RankReduce;                                        // 0x34(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Icon;                                              // 0x38(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Icon_s;                                            // 0x48(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                IconWord;                                          // 0x58(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                IconWord_s;                                        // 0x68(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        RandomLowerLimit;                                  // 0x78(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        RandomUpLimit;                                     // 0x7C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x50 (0x60 - 0x10)
	// ScriptStruct Solarland.SolarTables_RankLevel
	struct FSolarTables_RankLevel : public FSolarTablesDataBase
	{
	public:
		TMap<int32, struct FSolarTablesData_RankLevel> Data;                                              // 0x10(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected)
	};

	// 0x50 (0x60 - 0x10)
	// ScriptStruct Solarland.SolarTablesData_RankMatch
	struct FSolarTablesData_RankMatch : public FSolarTablesDataBase
	{
	public:
		int32                                        ID;                                                // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        MatchType;                                         // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        NumOfAI;                                           // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        AILevel;                                           // 0x1C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                AILevelConfig;                                     // 0x20(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        AITeamPresetsID;                                   // 0x30(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         EnableTeamManager;                                 // 0x34(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_343E[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TArray<int32>                                MLApplication;                                     // 0x38(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        MLApply;                                           // 0x48(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        MaxWait;                                           // 0x4C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        StopMatchTime;                                     // 0x50(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         HasAITeammate;                                     // 0x54(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         AIAccompany;                                       // 0x55(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_343F[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		int32                                        AIAccompanyTimeline;                               // 0x58(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        MinPlayer;                                         // 0x5C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x50 (0x60 - 0x10)
	// ScriptStruct Solarland.SolarTables_RankMatch
	struct FSolarTables_RankMatch : public FSolarTablesDataBase
	{
	public:
		TMap<int32, struct FSolarTablesData_RankMatch> Data;                                              // 0x10(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected)
	};

	// 0x48 (0x58 - 0x10)
	// ScriptStruct Solarland.SolarTablesData_Rescue
	struct FSolarTablesData_Rescue : public FSolarTablesDataBase
	{
	public:
		int32                                        ID;                                                // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        RescueMaxDistance;                                 // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        FallenHp;                                          // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        RescueRecoveryHp;                                  // 0x1C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        RescueTime;                                        // 0x20(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3440[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TArray<float>                                FallenLossHp;                                      // 0x28(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<float>                                FallenMoveLossHp;                                  // 0x38(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        FallenMoveSpeed;                                   // 0x48(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        RescueMoveSpeed;                                   // 0x4C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        InvincibleTime;                                    // 0x50(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        MaxRescueAngle;                                    // 0x54(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x50 (0x60 - 0x10)
	// ScriptStruct Solarland.SolarTables_Rescue
	struct FSolarTables_Rescue : public FSolarTablesDataBase
	{
	public:
		TMap<int32, struct FSolarTablesData_Rescue>  Data;                                              // 0x10(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected)
	};

	// 0x18 (0x28 - 0x10)
	// ScriptStruct Solarland.SolarTablesData_SecondMode
	struct FSolarTablesData_SecondMode : public FSolarTablesDataBase
	{
	public:
		int32                                        ID;                                                // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        UpperLimit;                                        // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        RestoreProgressPerSec;                             // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        RestoreProgressPerKill;                            // 0x1C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        RestoreProgressPerDmg;                             // 0x20(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3441[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x50 (0x60 - 0x10)
	// ScriptStruct Solarland.SolarTables_SecondMode
	struct FSolarTables_SecondMode : public FSolarTablesDataBase
	{
	public:
		TMap<int32, struct FSolarTablesData_SecondMode> Data;                                              // 0x10(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected)
	};

	// 0xC8 (0xD8 - 0x10)
	// ScriptStruct Solarland.SolarTablesData_ShieldProperty
	struct FSolarTablesData_ShieldProperty : public FSolarTablesDataBase
	{
	public:
		int32                                        ID;                                                // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FSolarTablesLocalText                 Name;                                              // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
		class FString                                Icon;                                              // 0x18(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FSolarTablesLocalText                 Info;                                              // 0x28(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
		int32                                        Quality;                                           // 0x2C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        ItemType;                                          // 0x30(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         IfReplace;                                         // 0x34(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3442[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		int32                                        Pile;                                              // 0x38(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3443[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class FString                                AbilityBP;                                         // 0x40(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                ItemBP;                                            // 0x50(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                AudioEventName;                                    // 0x60(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         UseOnPickup;                                       // 0x70(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3444[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		float                                        MaxValue;                                          // 0x74(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        RecoverySpeed;                                     // 0x78(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        EnergyCost;                                        // 0x7C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        CoolDownTime;                                      // 0x80(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        RecoveryDuration;                                  // 0x84(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        RecoveryDurationB;                                 // 0x88(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        RecoveryAmount;                                    // 0x8C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        EnergyConsumption;                                 // 0x90(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        ShieldWorth;                                       // 0x94(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Sketch;                                            // 0x98(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        SketchLevel;                                       // 0xA8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        QualityColor;                                      // 0xAC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        AutoRecharge;                                      // 0xB0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        LeaveCombatTime;                                   // 0xB4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        AutoRechargeInterval;                              // 0xB8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        AutoRechargeValue;                                 // 0xBC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        NextUpgradeCost;                                   // 0xC0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        NextUpgradeItemID;                                 // 0xC4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        UpgradeItemCost;                                   // 0xC8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        UpgradeTimeCost;                                   // 0xCC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        ShieldRechargeDelayTime;                           // 0xD0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        ShieldRecoveryTime;                                // 0xD4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x50 (0x60 - 0x10)
	// ScriptStruct Solarland.SolarTables_ShieldProperty
	struct FSolarTables_ShieldProperty : public FSolarTablesDataBase
	{
	public:
		TMap<int32, struct FSolarTablesData_ShieldProperty> Data;                                              // 0x10(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected)
	};

	// 0xD8 (0xE8 - 0x10)
	// ScriptStruct Solarland.SolarTablesData_Skin
	struct FSolarTablesData_Skin : public FSolarTablesDataBase
	{
	public:
		int32                                        ID;                                                // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        CharaId;                                           // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FSolarTablesLocalText                 Name;                                              // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
		bool                                         IfShow;                                            // 0x1C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3445[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class FString                                BeginTime;                                         // 0x20(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        ShopPropertyid;                                    // 0x30(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        ItemID;                                            // 0x34(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                MVPDataAssetPath;                                  // 0x38(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                MVPSequencePath;                                   // 0x48(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        SceneId;                                           // 0x58(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         IsMVP;                                             // 0x5C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3446[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class FString                                CharacterSkinResource;                             // 0x60(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                CharacterLobbySkinResource;                        // 0x70(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                LobbyChunkDir;                                     // 0x80(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        ChunkID;                                           // 0x90(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3447[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class FString                                CharacterLowSkinResource;                          // 0x98(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<int32>                                CharacterPrologue;                                 // 0xA8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                CharacterProtrait;                                 // 0xB8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        SkinSort;                                          // 0xC8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        MVPSettlementStartFrame;                           // 0xCC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        MVPSettlementEndFrame;                             // 0xD0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        MVPAnchorPoint;                                    // 0xD4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                IdleShowSequencePath;                              // 0xD8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x50 (0x60 - 0x10)
	// ScriptStruct Solarland.SolarTables_Skin
	struct FSolarTables_Skin : public FSolarTablesDataBase
	{
	public:
		TMap<int32, struct FSolarTablesData_Skin>    Data;                                              // 0x10(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected)
	};

	// 0x88 (0x98 - 0x10)
	// ScriptStruct Solarland.SolarTablesData_VehicleSpawnGroup
	struct FSolarTablesData_VehicleSpawnGroup : public FSolarTablesDataBase
	{
	public:
		int32                                        ID;                                                // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3448[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TArray<int32>                                VehicleIDs;                                        // 0x18(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<int32>                                VehicleCounts;                                     // 0x28(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<int32>                                VehicleSum;                                        // 0x38(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                VehicleWeightSet;                                  // 0x48(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<int32>                                AlternateId;                                       // 0x58(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                AlternateType;                                     // 0x68(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                AlternateTime;                                     // 0x78(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                AlternateDate;                                     // 0x88(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x50 (0x60 - 0x10)
	// ScriptStruct Solarland.SolarTables_VehicleSpawnGroup
	struct FSolarTables_VehicleSpawnGroup : public FSolarTablesDataBase
	{
	public:
		TMap<int32, struct FSolarTablesData_VehicleSpawnGroup> Data;                                              // 0x10(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected)
	};

	// 0x8 (0x18 - 0x10)
	// ScriptStruct Solarland.SolarTablesData_WeaponPartsOp
	struct FSolarTablesData_WeaponPartsOp : public FSolarTablesDataBase
	{
	public:
		int32                                        ID;                                                // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        EffectOperator;                                    // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x50 (0x60 - 0x10)
	// ScriptStruct Solarland.SolarTables_WeaponPartsOp
	struct FSolarTables_WeaponPartsOp : public FSolarTablesDataBase
	{
	public:
		TMap<int32, struct FSolarTablesData_WeaponPartsOp> Data;                                              // 0x10(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected)
	};

	// 0x158 (0x168 - 0x10)
	// ScriptStruct Solarland.SolarTablesData_WeaponAmmo
	struct FSolarTablesData_WeaponAmmo : public FSolarTablesDataBase
	{
	public:
		int32                                        ID;                                                // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        AmmoType;                                          // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        PropID;                                            // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        SoundID;                                           // 0x1C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         IfTimedExplode;                                    // 0x20(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3449[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		int32                                        BounceTimes;                                       // 0x24(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        LifeTime;                                          // 0x28(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        BaseReloadTime;                                    // 0x2C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        ReloadBoltTime;                                    // 0x30(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class ESolarTablesEnum_FireMethodType   FireMethodType;                                    // 0x34(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class ESolarTablesEnum_TrajectoryType   TrajectoryType;                                    // 0x35(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_344A[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		float                                        CustomValue;                                       // 0x38(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class ESolarTablesEnum_TriggerType      TriggerType;                                       // 0x3C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_344B[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		float                                        MaxRange;                                          // 0x40(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        EffRange;                                          // 0x44(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        ProjectileMaxGravity;                              // 0x48(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        DamageMaxRange;                                    // 0x4C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        DamageEffRange;                                    // 0x50(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        Radius;                                            // 0x54(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        PostFireOverload;                                  // 0x58(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        InitSpeed;                                         // 0x5C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        FireStreakBreakTime;                               // 0x60(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class ESolarTablesEnum_FireCostType     FireCostType;                                      // 0x64(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_344C[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		int32                                        FireCostPerAttack;                                 // 0x68(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        FireSpeedChangeTime;                               // 0x6C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        FireSpeedChangeCOP;                                // 0x70(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        FireIntervalRevertPreTime;                         // 0x74(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        FireIntervalReavertSpeed;                          // 0x78(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        FastestFireInterval;                               // 0x7C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        SlowestFireInterval;                               // 0x80(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        BaseFireInterval;                                  // 0x84(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        BoltActionTime;                                    // 0x88(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        BurstShootInterval;                                // 0x8C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        BurstFireInterval;                                 // 0x90(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        StartBoltDuration;                                 // 0x94(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         UsePrimaryModeAmmoCap;                             // 0x98(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         UseBag;                                            // 0x99(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_344D[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TArray<float>                                SkillCDDiscountArray;                              // 0xA0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        SkillType;                                         // 0xB0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        VhADSSpreadCOP;                                    // 0xB4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        ADSSpreadCOP;                                      // 0xB8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        SpreadFirePreTime;                                 // 0xBC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        SpreadPostFireSpeed;                               // 0xC0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        SpreadRestorePreTime;                              // 0xC4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        SpreadRestoreSpeed;                                // 0xC8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        VRecoilCostTime;                                   // 0xCC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        VRecoilAPoint;                                     // 0xD0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        VRecoilAPointMax;                                  // 0xD4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        VRecoilAPointMin;                                  // 0xD8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        VRecoilBPoint;                                     // 0xDC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        VRecoilBPointMax;                                  // 0xE0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        VRecoilBPointMin;                                  // 0xE4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        HRecoilCostTime;                                   // 0xE8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        HRecoilAPoint;                                     // 0xEC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        HRecoilAPointMax;                                  // 0xF0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        HRecoilAPointMin;                                  // 0xF4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        HRecoilBPoint;                                     // 0xF8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        HRecoilBPointMax;                                  // 0xFC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        HRecoilBPointMin;                                  // 0x100(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        RecoilCOP;                                         // 0x104(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        ADSRecoilCOP;                                      // 0x108(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        RollCostTime;                                      // 0x10C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        RollAPoint;                                        // 0x110(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        RollBPoint;                                        // 0x114(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        RollHightestPointMax;                              // 0x118(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        RollHightestPointMin;                              // 0x11C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        RollLowesttPointMax;                               // 0x120(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        RollLowesttPointMin;                               // 0x124(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        ADSRollCOP;                                        // 0x128(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        ScopeRollCostTime;                                 // 0x12C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        ScopeRollAPoint;                                   // 0x130(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        ScopeRollBPoint;                                   // 0x134(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        ScopeRollHightestPointMax;                         // 0x138(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        ScopeRollHightestPointMin;                         // 0x13C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        ScopeRollLowesttPointMax;                          // 0x140(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        ScopeRollLowesttPointMin;                          // 0x144(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        ScopeVMaxDistanceOffSet;                           // 0x148(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        ScopeHMaxDistanceOffSet;                           // 0x14C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        ScopeVVibrationDuration;                           // 0x150(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        ScopeHVibrationDuration;                           // 0x154(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        CrossHairVibrationScale;                           // 0x158(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        ScopeVContinuousFallingDuration;                   // 0x15C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        ScopeVContinuousFallingPointIndex;                 // 0x160(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_344E[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x50 (0x60 - 0x10)
	// ScriptStruct Solarland.SolarTables_WeaponAmmo
	struct FSolarTables_WeaponAmmo : public FSolarTablesDataBase
	{
	public:
		TMap<int32, struct FSolarTablesData_WeaponAmmo> Data;                                              // 0x10(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected)
	};

	// 0x8 (0x18 - 0x10)
	// ScriptStruct Solarland.SolarTablesData_WeaponQuality
	struct FSolarTablesData_WeaponQuality : public FSolarTablesDataBase
	{
	public:
		int32                                        ID;                                                // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        Quality;                                           // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x50 (0x60 - 0x10)
	// ScriptStruct Solarland.SolarTables_WeaponQuality
	struct FSolarTables_WeaponQuality : public FSolarTablesDataBase
	{
	public:
		TMap<int32, struct FSolarTablesData_WeaponQuality> Data;                                              // 0x10(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected)
	};

	// 0x80 (0x90 - 0x10)
	// ScriptStruct Solarland.SolarTablesData_WeaponDefault
	struct FSolarTablesData_WeaponDefault : public FSolarTablesDataBase
	{
	public:
		int32                                        ID;                                                // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class ESolarTablesEnum_AccessoryType    AccessoryType1;                                    // 0x14(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_344F[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TArray<int32>                                SlotSubtype1;                                      // 0x18(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        AccessoryID1;                                      // 0x28(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class ESolarTablesEnum_AccessoryType    AccessoryType2;                                    // 0x2C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3450[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TArray<int32>                                SlotSubtype2;                                      // 0x30(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        AccessoryID2;                                      // 0x40(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class ESolarTablesEnum_AccessoryType    AccessoryType3;                                    // 0x44(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3451[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TArray<int32>                                SlotSubtype3;                                      // 0x48(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        AccessoryID3;                                      // 0x58(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class ESolarTablesEnum_AccessoryType    AccessoryType4;                                    // 0x5C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3452[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TArray<int32>                                SlotSubtype4;                                      // 0x60(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        AccessoryID4;                                      // 0x70(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class ESolarTablesEnum_AccessoryType    AccessoryType5;                                    // 0x74(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3453[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TArray<int32>                                SlotSubtype5;                                      // 0x78(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        AccessoryID5;                                      // 0x88(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3454[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x50 (0x60 - 0x10)
	// ScriptStruct Solarland.SolarTables_WeaponDefault
	struct FSolarTables_WeaponDefault : public FSolarTablesDataBase
	{
	public:
		TMap<int32, struct FSolarTablesData_WeaponDefault> Data;                                              // 0x10(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected)
	};

	// 0x10 (0x20 - 0x10)
	// ScriptStruct Solarland.SolarTablesData_WeaponDamage
	struct FSolarTablesData_WeaponDamage : public FSolarTablesDataBase
	{
	public:
		int32                                        ID;                                                // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        NpcDamageFactor;                                   // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        BotDamageFactor;                                   // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3455[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x50 (0x60 - 0x10)
	// ScriptStruct Solarland.SolarTables_WeaponDamage
	struct FSolarTables_WeaponDamage : public FSolarTablesDataBase
	{
	public:
		TMap<int32, struct FSolarTablesData_WeaponDamage> Data;                                              // 0x10(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected)
	};

	// 0x168 (0x178 - 0x10)
	// ScriptStruct Solarland.SolarTablesData_UnitCharacter
	struct FSolarTablesData_UnitCharacter : public FSolarTablesDataBase
	{
	public:
		int32                                        ID;                                                // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FSolarTablesLocalText                 Name;                                              // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
		struct FSolarTablesLocalText                 Name_extra;                                        // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
		struct FSolarTablesLocalText                 Info;                                              // 0x1C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
		int32                                        Gender;                                            // 0x20(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        Body;                                              // 0x24(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class ESolarTablesEnum_CharacterType    CharacterType;                                     // 0x28(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3456[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class FString                                ClassTypeIcon;                                     // 0x30(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FSolarTablesLocalText                 ClassTypeInfo;                                     // 0x40(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
		bool                                         DefaultChara;                                      // 0x44(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3457[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		int32                                        DefaultSkin;                                       // 0x48(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        DefaultPose;                                       // 0x4C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        DefaultBackground;                                 // 0x50(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         UsableChara;                                       // 0x54(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3458[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class FString                                CharacterProtrait;                                 // 0x58(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                UrlName;                                           // 0x68(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TMap<class FString, class FString>           CharacterAttributesID;                             // 0x78(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
		float                                        MaxNormalHP;                                       // 0xC8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        DefaultArmor;                                      // 0xCC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        DefaultShield;                                     // 0xD0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        DefaultJetPackModule;                              // 0xD4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                BasicItemMax;                                      // 0xD8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        InitialSolarCharge;                                // 0xE8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        RechargeFrequencyFromSky;                          // 0xEC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        RechargeFrequencyFromDeathBox;                     // 0xF0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        RechargeFrequencyFromPile;                         // 0xF4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        RechargeQuantityFromSky;                           // 0xF8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        RechargeQuantityFromDeathBox;                      // 0xFC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        RechargeQuantityFromPile;                          // 0x100(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        InitialEnergyLimit;                                // 0x104(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        InitialExtraEnergyLimit;                           // 0x108(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        InitialExtraEnergyCharge;                          // 0x10C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        InitialChargeCD;                                   // 0x110(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        ExpID;                                             // 0x114(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        ExpBonus;                                          // 0x118(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        CharaGiftID;                                       // 0x11C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                CharacterIngameBP;                                 // 0x120(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                AnimBPResPath;                                     // 0x130(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        StandJogSpeed;                                     // 0x140(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        StandRunSpeed;                                     // 0x144(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        StandSprintSpeed;                                  // 0x148(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        CrouchJogSpeed;                                    // 0x14C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        CrouchRunSpeed;                                    // 0x150(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        CrouchSprintSpeed;                                 // 0x154(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        ItemID;                                            // 0x158(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        BackpackScale;                                     // 0x15C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        CharacterSize;                                     // 0x160(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        BotConfigID;                                       // 0x164(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        CharacterSort;                                     // 0x168(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        CharacterTag1;                                     // 0x16C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        CharacterTag2;                                     // 0x170(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3459[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x50 (0x60 - 0x10)
	// ScriptStruct Solarland.SolarTables_UnitCharacter
	struct FSolarTables_UnitCharacter : public FSolarTablesDataBase
	{
	public:
		TMap<int32, struct FSolarTablesData_UnitCharacter> Data;                                              // 0x10(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected)
	};

	// 0x80 (0x90 - 0x10)
	// ScriptStruct Solarland.SolarTablesData_VehicleSkin
	struct FSolarTablesData_VehicleSkin : public FSolarTablesDataBase
	{
	public:
		int32                                        ID;                                                // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        VehicleTypeID;                                     // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        ItemID;                                            // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FSolarTablesLocalText                 SkinName;                                          // 0x1C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
		bool                                         IfShow;                                            // 0x20(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_345A[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class FString                                BeginTime;                                         // 0x28(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<int32>                                JumpLink;                                          // 0x38(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                VehicleSkinBPPath;                                 // 0x48(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                VehiclePreviewBP;                                  // 0x58(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                VehicleIcon;                                       // 0x68(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                VehicleSound;                                      // 0x78(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        AIRandomWeight;                                    // 0x88(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_345B[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x50 (0x60 - 0x10)
	// ScriptStruct Solarland.SolarTables_VehicleSkin
	struct FSolarTables_VehicleSkin : public FSolarTablesDataBase
	{
	public:
		TMap<int32, struct FSolarTablesData_VehicleSkin> Data;                                              // 0x10(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected)
	};

	// 0x38 (0x48 - 0x10)
	// ScriptStruct Solarland.SolarTablesData_VODownload
	struct FSolarTablesData_VODownload : public FSolarTablesDataBase
	{
	public:
		int32                                        ID;                                                // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_345C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class FString                                LobbyChunkDir;                                     // 0x18(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        ChunkID;                                           // 0x28(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_345D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class FString                                ButtonText;                                        // 0x30(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        LanguageIndex;                                     // 0x40(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        IsDefaultChunk;                                    // 0x44(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x50 (0x60 - 0x10)
	// ScriptStruct Solarland.SolarTables_VODownload
	struct FSolarTables_VODownload : public FSolarTablesDataBase
	{
	public:
		TMap<int32, struct FSolarTablesData_VODownload> Data;                                              // 0x10(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected)
	};

	// 0x70 (0x80 - 0x10)
	// ScriptStruct Solarland.SolarTablesData_WeaponSkin
	struct FSolarTablesData_WeaponSkin : public FSolarTablesDataBase
	{
	public:
		int32                                        ID;                                                // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        WeaponSkinType;                                    // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                WeaponSkillQuality;                                // 0x18(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        SortId;                                            // 0x28(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        Weaponid;                                          // 0x2C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                WeaponSkinResource;                                // 0x30(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        WeaponSkinAquiredThru;                             // 0x40(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        JumpPage;                                          // 0x44(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                KillBroadcast;                                     // 0x48(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        ShopPropertyid;                                    // 0x58(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        ItemID;                                            // 0x5C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         DisplayInWeaponry;                                 // 0x60(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_345E[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class FString                                LobbyChunkDir;                                     // 0x68(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        ChunkID;                                           // 0x78(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        AIRandomWeight;                                    // 0x7C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x50 (0x60 - 0x10)
	// ScriptStruct Solarland.SolarTables_WeaponSkin
	struct FSolarTables_WeaponSkin : public FSolarTablesDataBase
	{
	public:
		TMap<int32, struct FSolarTablesData_WeaponSkin> Data;                                              // 0x10(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected)
	};

	// 0x8 (0x18 - 0x10)
	// ScriptStruct Solarland.SolarTablesData_TaskProgress
	struct FSolarTablesData_TaskProgress : public FSolarTablesDataBase
	{
	public:
		int32                                        ID;                                                // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        IsRefresh;                                         // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x50 (0x60 - 0x10)
	// ScriptStruct Solarland.SolarTables_TaskProgress
	struct FSolarTables_TaskProgress : public FSolarTablesDataBase
	{
	public:
		TMap<int32, struct FSolarTablesData_TaskProgress> Data;                                              // 0x10(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected)
	};

	// 0x20 (0x30 - 0x10)
	// ScriptStruct Solarland.SolarTablesData_Variables
	struct FSolarTablesData_Variables : public FSolarTablesDataBase
	{
	public:
		class FString                                ID;                                                // 0x10(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Value;                                             // 0x20(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x50 (0x60 - 0x10)
	// ScriptStruct Solarland.SolarTables_Variables
	struct FSolarTables_Variables : public FSolarTablesDataBase
	{
	public:
		TMap<class FString, struct FSolarTablesData_Variables> Data;                                              // 0x10(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected)
	};

	// 0xA8 (0xB8 - 0x10)
	// ScriptStruct Solarland.SolarTablesData_TaskSystem
	struct FSolarTablesData_TaskSystem : public FSolarTablesDataBase
	{
	public:
		int32                                        ID;                                                // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        TaskDesc;                                          // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        Task;                                              // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        TaskType;                                          // 0x1C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Cond1_sheet;                                       // 0x20(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        Cond1;                                             // 0x30(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_345F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class FString                                Cond2_sheet;                                       // 0x38(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        Cond2;                                             // 0x48(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3460[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class FString                                Cond3_sheet;                                       // 0x50(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        Cond3;                                             // 0x60(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        Target;                                            // 0x64(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<int32>                                Item;                                              // 0x68(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        MinLevel;                                          // 0x78(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3461[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TArray<int32>                                Link;                                              // 0x80(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        Weight;                                            // 0x90(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        Sort;                                              // 0x94(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         Progress;                                          // 0x98(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         IsCircle;                                          // 0x99(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3462[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		int32                                        CircleTimes;                                       // 0x9C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        ResetType;                                         // 0xA0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3463[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TArray<int32>                                TaskTips;                                          // 0xA8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x50 (0x60 - 0x10)
	// ScriptStruct Solarland.SolarTables_TaskSystem
	struct FSolarTables_TaskSystem : public FSolarTablesDataBase
	{
	public:
		TMap<int32, struct FSolarTablesData_TaskSystem> Data;                                              // 0x10(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected)
	};

	// 0x68 (0x78 - 0x10)
	// ScriptStruct Solarland.SolarTablesData_VehicleSkinProperty
	struct FSolarTablesData_VehicleSkinProperty : public FSolarTablesDataBase
	{
	public:
		int32                                        ID;                                                // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FSolarTablesLocalText                 Name;                                              // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
		class FString                                Icon;                                              // 0x18(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FSolarTablesLocalText                 Info;                                              // 0x28(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
		int32                                        Quality;                                           // 0x2C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        ItemClass;                                         // 0x30(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        ItemType;                                          // 0x34(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         ShowInStorage;                                     // 0x38(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         IfUse;                                             // 0x39(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         IfRecycle;                                         // 0x3A(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class ESolarTablesEnum_StackType        StackType;                                         // 0x3B(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3464[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TArray<int32>                                JumpLink;                                          // 0x40(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        VehicleSkinId;                                     // 0x50(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        VehicleSkinAquiredThre;                            // 0x54(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        JumpPage;                                          // 0x58(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3465[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class FString                                KillBroadcast;                                     // 0x60(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         DisplayInVehiclery;                                // 0x70(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3466[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x50 (0x60 - 0x10)
	// ScriptStruct Solarland.SolarTables_VehicleSkinProperty
	struct FSolarTables_VehicleSkinProperty : public FSolarTablesDataBase
	{
	public:
		TMap<int32, struct FSolarTablesData_VehicleSkinProperty> Data;                                              // 0x10(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected)
	};

	// 0x4E8 (0x4F8 - 0x10)
	// ScriptStruct Solarland.SolarTablesData_WeaponSound
	struct FSolarTablesData_WeaponSound : public FSolarTablesDataBase
	{
	public:
		int32                                        ID;                                                // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3467[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class FString                                Play_Fire_Auto_1P;                                 // 0x18(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Play_Fire_Auto_3P;                                 // 0x28(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Play_Fire_Auto_3P_Enemy;                           // 0x38(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Stop_Fire_Auto_1P;                                 // 0x48(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Stop_Fire_Auto_3P;                                 // 0x58(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Stop_Fire_Auto_3P_Enemy;                           // 0x68(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Play_Fire_Sigle_1P;                                // 0x78(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Play_Fire_Sigle_3P;                                // 0x88(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Play_Fire_Sigle_3P_Enemy;                          // 0x98(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Play_Fire_Burst_1P;                                // 0xA8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Play_Fire_Burst_3P;                                // 0xB8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Play_Fire_Burst_3P_Enemy;                          // 0xC8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Stop_Fire_Burst_1P;                                // 0xD8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Stop_Fire_Burst_3P;                                // 0xE8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Stop_Fire_Burst_3P_Enemy;                          // 0xF8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Play_FIRE_LAST_1P;                                 // 0x108(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Play_FIRE_LAST_3P;                                 // 0x118(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Play_FIRE_LAST_3P_Enemy;                           // 0x128(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Remain_Gun_RTPC_NAME;                              // 0x138(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Play_Skill_Cast_1P;                                // 0x148(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Play_Skill_Cast_3P;                                // 0x158(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Play_Skill_Cast_3P_Enemy;                          // 0x168(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Play_Fire_Lay_Tl_1P;                               // 0x178(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Play_Fire_Lay_Tl_3P;                               // 0x188(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Play_Fire_Lay_Tl_3P_Enemy;                         // 0x198(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Play_Land_Fly_Once_3P;                             // 0x1A8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Play_Land_Fly_Once_3P_Enemy;                       // 0x1B8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Play_Land_Fly_Loop_1P;                             // 0x1C8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Play_Land_Fly_Loop_3P;                             // 0x1D8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Play_Land_Fly_Loop_3P_Enemy;                       // 0x1E8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Stop_Land_Fly_Loop_1P;                             // 0x1F8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Stop_Land_Fly_Loop_3P;                             // 0x208(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Stop_Land_Fly_Loop_3P_Enemy;                       // 0x218(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Play_Land_Common_Hit_1P;                           // 0x228(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Play_Land_Common_Hit_3P;                           // 0x238(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Play_Land_Common_Hit_3P_Enemy;                     // 0x248(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Play_Fire_Overload_1P;                             // 0x258(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Play_Fire_Overload_3P;                             // 0x268(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Play_Fire_Overload_3P_Enemy;                       // 0x278(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Play_Reload_01_1P;                                 // 0x288(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Play_Reload_01_3P;                                 // 0x298(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Play_Reload_01_3P_Enemy;                           // 0x2A8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Play_Reload_02_1P;                                 // 0x2B8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Play_Reload_02_3P;                                 // 0x2C8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Play_Reload_02_3P_Enemy;                           // 0x2D8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Play_Reload_03_1P;                                 // 0x2E8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Play_Reload_03_3P;                                 // 0x2F8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Play_Reload_03_3P_Enemy;                           // 0x308(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Play_Bolt_1P;                                      // 0x318(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Play_Bolt_3P;                                      // 0x328(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Play_Bolt_3P_Enemy;                                // 0x338(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Play_Vehicle_Gun_On_3P;                            // 0x348(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Play_Vehicle_Gun_On_3P_Enemy;                      // 0x358(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Play_Vehicle_Gun_Loop_3P;                          // 0x368(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Play_Vehicle_Gun_Loop_3P_Enemy;                    // 0x378(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Play_Vehicle_Gun_Off_3P;                           // 0x388(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Play_Vehicle_Gun_Off_3P_Enemy;                     // 0x398(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Play_Fire_Auto_1P_Mute;                            // 0x3A8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Play_Fire_Auto_3P_Mute;                            // 0x3B8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Play_Fire_Auto_3P_Enemy_Mute;                      // 0x3C8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Stop_Fire_Auto_1P_Mute;                            // 0x3D8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Stop_Fire_Auto_3P_Mute;                            // 0x3E8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Stop_Fire_Auto_3P_Enemy_Mute;                      // 0x3F8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Play_Fire_Sigle_1P_Mute;                           // 0x408(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Play_Fire_Sigle_3P_Mute;                           // 0x418(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Play_Fire_Sigle_3P_Enemy_Mute;                     // 0x428(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Play_Fire_Burst_1P_Mute;                           // 0x438(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Play_Fire_Burst_3P_Mute;                           // 0x448(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Play_Fire_Burst_3P_Enemy_Mute;                     // 0x458(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Stop_Fire_Burst_1P_Mute;                           // 0x468(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Stop_Fire_Burst_3P_Mute;                           // 0x478(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Stop_Fire_Burst_3P_Enemy_Mute;                     // 0x488(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Play_Fire_Lay_Tl_1P_Mute;                          // 0x498(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Play_Fire_Lay_Tl_3P_Mute;                          // 0x4A8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Play_Fire_Lay_Tl_3P_Enemy_Mute;                    // 0x4B8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Play_Fire_Empty_1p;                                // 0x4C8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Play_Fire_Empty_3p;                                // 0x4D8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Play_Fire_Empty_3p_Enemy;                          // 0x4E8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x50 (0x60 - 0x10)
	// ScriptStruct Solarland.SolarTables_WeaponSound
	struct FSolarTables_WeaponSound : public FSolarTablesDataBase
	{
	public:
		TMap<int32, struct FSolarTablesData_WeaponSound> Data;                                              // 0x10(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected)
	};

	// 0xF0 (0x100 - 0x10)
	// ScriptStruct Solarland.SolarTablesData_WeaponParts
	struct FSolarTablesData_WeaponParts : public FSolarTablesDataBase
	{
	public:
		int32                                        ID;                                                // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        WeaponLevel;                                       // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class ESolarTablesEnum_PartsType        PartsType;                                         // 0x18(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3468[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TMap<class FString, class FString>           AttributeSub;                                      // 0x20(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
		int32                                        PartsQuality;                                      // 0x70(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3469[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class FString                                PartsBPResource;                                   // 0x78(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                PartsIcon;                                         // 0x88(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        EffectCondition;                                   // 0x98(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_346A[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TArray<int32>                                PartsEffect;                                       // 0xA0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<float>                                PartsValue;                                        // 0xB0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<int32>                                PartsWeaponID;                                     // 0xC0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        PartsName;                                         // 0xD0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_346B[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TArray<class FString>                        PartsDesc;                                         // 0xD8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        WeaponPartDamage;                                  // 0xE8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        WeaponPartRateOfFire;                              // 0xEC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        WeaponPartRecoil;                                  // 0xF0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        WeaponPartSpread;                                  // 0xF4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        WeaponPartRange;                                   // 0xF8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        WeaponPartMobility;                                // 0xFC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x50 (0x60 - 0x10)
	// ScriptStruct Solarland.SolarTables_WeaponParts
	struct FSolarTables_WeaponParts : public FSolarTablesDataBase
	{
	public:
		TMap<int32, struct FSolarTablesData_WeaponParts> Data;                                              // 0x10(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected)
	};

	// 0x20 (0x30 - 0x10)
	// ScriptStruct Solarland.SolarTablesData_WeaponStatu
	struct FSolarTablesData_WeaponStatu : public FSolarTablesDataBase
	{
	public:
		int32                                        ID;                                                // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        Stand;                                             // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        CrouchDown;                                        // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        Still;                                             // 0x1C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        Run;                                               // 0x20(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        Spint;                                             // 0x24(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        Jump;                                              // 0x28(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        Fly;                                               // 0x2C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x50 (0x60 - 0x10)
	// ScriptStruct Solarland.SolarTables_WeaponStatu
	struct FSolarTables_WeaponStatu : public FSolarTablesDataBase
	{
	public:
		TMap<int32, struct FSolarTablesData_WeaponStatu> Data;                                              // 0x10(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected)
	};

	// 0x28 (0x38 - 0x10)
	// ScriptStruct Solarland.SolarTablesData_WeaponKillTip
	struct FSolarTablesData_WeaponKillTip : public FSolarTablesDataBase
	{
	public:
		int32                                        ID;                                                // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        KillTipType;                                       // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        KillTipValue;                                      // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_346C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class FString                                KillTipIcon;                                       // 0x20(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FSolarTablesLocalText                 KillTipname;                                       // 0x30(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
		uint8                                        Pad_346D[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x50 (0x60 - 0x10)
	// ScriptStruct Solarland.SolarTables_WeaponKillTip
	struct FSolarTables_WeaponKillTip : public FSolarTablesDataBase
	{
	public:
		TMap<int32, struct FSolarTablesData_WeaponKillTip> Data;                                              // 0x10(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected)
	};

	// 0x58 (0x68 - 0x10)
	// ScriptStruct Solarland.SolarTablesData_WeaponSkinProperty
	struct FSolarTablesData_WeaponSkinProperty : public FSolarTablesDataBase
	{
	public:
		int32                                        ID;                                                // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FSolarTablesLocalText                 Name;                                              // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
		class FString                                Icon;                                              // 0x18(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FSolarTablesLocalText                 Info;                                              // 0x28(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
		int32                                        Quality;                                           // 0x2C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        ItemClass;                                         // 0x30(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        ItemType;                                          // 0x34(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         ShowInStorage;                                     // 0x38(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         IfUse;                                             // 0x39(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         IfRecycle;                                         // 0x3A(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class ESolarTablesEnum_StackType        StackType;                                         // 0x3B(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_346E[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TArray<int32>                                JumpLink;                                          // 0x40(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        WeaponSkinID;                                      // 0x50(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_346F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class FString                                WeaponIcon_M;                                      // 0x58(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x50 (0x60 - 0x10)
	// ScriptStruct Solarland.SolarTables_WeaponSkinProperty
	struct FSolarTables_WeaponSkinProperty : public FSolarTablesDataBase
	{
	public:
		TMap<int32, struct FSolarTablesData_WeaponSkinProperty> Data;                                              // 0x10(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected)
	};

	// 0x28 (0x38 - 0x10)
	// ScriptStruct Solarland.SolarTablesData_VehicleSpawn
	struct FSolarTablesData_VehicleSpawn : public FSolarTablesDataBase
	{
	public:
		int32                                        ID;                                                // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3470[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TArray<int32>                                VehicleSet;                                        // 0x18(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<int32>                                WeightSet;                                         // 0x28(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x50 (0x60 - 0x10)
	// ScriptStruct Solarland.SolarTables_VehicleSpawn
	struct FSolarTables_VehicleSpawn : public FSolarTablesDataBase
	{
	public:
		TMap<int32, struct FSolarTablesData_VehicleSpawn> Data;                                              // 0x10(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected)
	};

	// 0x1E0 (0x1F0 - 0x10)
	// ScriptStruct Solarland.SolarTablesData_Weapon
	struct FSolarTablesData_Weapon : public FSolarTablesDataBase
	{
	public:
		int32                                        ID;                                                // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FSolarTablesLocalText                 Name;                                              // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
		enum class ESolarTablesEnum_WeaponType       WeaponType;                                        // 0x18(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3471[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		int32                                        WeaponBrand;                                       // 0x1C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         SupportSecondaryAmmo;                              // 0x20(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3472[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TArray<int32>                                AccessoryID;                                       // 0x28(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                WeaponIcon;                                        // 0x38(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         Single;                                            // 0x48(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         Burst;                                             // 0x49(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         Automatic;                                         // 0x4A(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         OneKeyScope;                                       // 0x4B(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        HitHead;                                           // 0x4C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        SecModeLimitTypeID;                                // 0x50(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        BurstMaxCount;                                     // 0x54(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                WeaponDamage;                                      // 0x58(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        MaxSpread;                                         // 0x68(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        MinSpread;                                         // 0x6C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        HipFireBaseSpread;                                 // 0x70(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        VhADSBaseSpread;                                   // 0x74(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        ADSBaseSpread;                                     // 0x78(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        SpreadStatuSpeed;                                  // 0x7C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        SpreadStatuIncreaseID;                             // 0x80(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        SpreadStatuReduceID;                               // 0x84(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        SpreadCOPID;                                       // 0x88(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        PrimaryAmmo;                                       // 0x8C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        PrimaryAmmoCap;                                    // 0x90(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        SecondaryAmmo;                                     // 0x94(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        SecondaryAmmoCap;                                  // 0x98(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         CanOverload;                                       // 0x9C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3473[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		float                                        OverloadMaxValue;                                  // 0xA0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        NormalOverloadCoolingRate;                         // 0xA4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        OverloadCoolingPeriod;                             // 0xA8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        OverloadWarningRate;                               // 0xAC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         CanAutoFire;                                       // 0xB0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3474[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		float                                        AutoFireDelayMs;                                   // 0xB4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        AutoFireEndDelayMs;                                // 0xB8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         CanAimAssist;                                      // 0xBC(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3475[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TArray<float>                                HipSoftZone;                                       // 0xC0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        HipAimAssistStepRatio;                             // 0xD0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        HipMinAssistStepRatio;                             // 0xD4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        HipAimAssistStepSpeed;                             // 0xD8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3476[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TArray<float>                                AdsSoftZone;                                       // 0xE0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        AdsAimAssistStepRatio;                             // 0xF0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        AdsMinAssistStepRatio;                             // 0xF4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        AdsAimAssistStepSpeed;                             // 0xF8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         CanOpenScopeAimAssist;                             // 0xFC(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3477[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		float                                        OpenScopeAimAssistStepRatio;                       // 0x100(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        OpenScopeMinAssistStepRatio;                       // 0x104(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        OpenScopeAssistStepSpeed;                          // 0x108(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        OnVehicleAssistStepRatio;                          // 0x10C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        Weight;                                            // 0x110(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        HipFireSpeed;                                      // 0x114(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        ADSFireSpeed;                                      // 0x118(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3478[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TArray<int32>                                DefaultParts;                                      // 0x120(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        ScopeOpenTime;                                     // 0x130(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        FovFactor;                                         // 0x134(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        WeaponSwitchTime;                                  // 0x138(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3479[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TArray<int32>                                PartSlots;                                         // 0x140(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TMap<class FString, class FString>           EquipAttributeSub;                                 // 0x150(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
		TMap<class FString, class FString>           HoldAttributeSub;                                  // 0x1A0(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
	};

	// 0x50 (0x60 - 0x10)
	// ScriptStruct Solarland.SolarTables_Weapon
	struct FSolarTables_Weapon : public FSolarTablesDataBase
	{
	public:
		TMap<int32, struct FSolarTablesData_Weapon>  Data;                                              // 0x10(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected)
	};

	// 0x20 (0x30 - 0x10)
	// ScriptStruct Solarland.SolarTablesData_Vehicle
	struct FSolarTablesData_Vehicle : public FSolarTablesDataBase
	{
	public:
		int32                                        ID;                                                // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FSolarTablesLocalText                 Name;                                              // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
		class FString                                VehicleBP;                                         // 0x18(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        Groupid;                                           // 0x28(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        VehicleTypeID;                                     // 0x2C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x50 (0x60 - 0x10)
	// ScriptStruct Solarland.SolarTables_Vehicle
	struct FSolarTables_Vehicle : public FSolarTablesDataBase
	{
	public:
		TMap<int32, struct FSolarTablesData_Vehicle> Data;                                              // 0x10(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected)
	};

	// 0xE8 (0xF8 - 0x10)
	// ScriptStruct Solarland.SolarTablesData_VehicleType
	struct FSolarTablesData_VehicleType : public FSolarTablesDataBase
	{
	public:
		int32                                        ID;                                                // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        DefaultId;                                         // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FSolarTablesLocalText                 Name;                                              // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic)
		uint8                                        Pad_347A[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class FString                                VehicleIcon;                                       // 0x20(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                AudioEventName;                                    // 0x30(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        VehicleClass;                                      // 0x40(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        LobbyDurability;                                   // 0x44(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        LobbySpeed;                                        // 0x48(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        LobbyFirepower;                                    // 0x4C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        LobbyControl;                                      // 0x50(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        SeatNum;                                           // 0x54(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<int32>                                Seat1WeaponID;                                     // 0x58(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<int32>                                Seat2WeaponID;                                     // 0x68(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<int32>                                Seat3WeaponID;                                     // 0x78(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<int32>                                Seat4WeaponID;                                     // 0x88(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<int32>                                Seat1SkillID;                                      // 0x98(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<int32>                                Seat2SkillID;                                      // 0xA8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<int32>                                Seat3SkillID;                                      // 0xB8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<int32>                                Seat4SkillID;                                      // 0xC8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                VehicleLink;                                       // 0xD8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                SilhouetteIcon;                                    // 0xE8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x50 (0x60 - 0x10)
	// ScriptStruct Solarland.SolarTables_VehicleType
	struct FSolarTables_VehicleType : public FSolarTablesDataBase
	{
	public:
		TMap<int32, struct FSolarTablesData_VehicleType> Data;                                              // 0x10(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected)
	};

	// 0x70 (0x80 - 0x10)
	// ScriptStruct Solarland.SolarTablesData_WarmGame
	struct FSolarTablesData_WarmGame : public FSolarTablesDataBase
	{
	public:
		int32                                        ID;                                                // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        WarmType;                                          // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        MatchType;                                         // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        EloStart;                                          // 0x1C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        EloEnd;                                            // 0x20(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        NumStart;                                          // 0x24(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        NumEnd;                                            // 0x28(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        KillStart;                                         // 0x2C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        KillEnd;                                           // 0x30(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_347B[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class FString                                WarmSubType;                                       // 0x38(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        UniqueId;                                          // 0x48(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_347C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class FString                                Abid;                                              // 0x50(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                WarmGameFillCheckBox;                              // 0x60(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                WarmGameFillTeammate;                              // 0x70(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x50 (0x60 - 0x10)
	// ScriptStruct Solarland.SolarTables_WarmGame
	struct FSolarTables_WarmGame : public FSolarTablesDataBase
	{
	public:
		TMap<int32, struct FSolarTablesData_WarmGame> Data;                                              // 0x10(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected)
	};

	// 0x58 (0x68 - 0x10)
	// ScriptStruct Solarland.SolarTablesData_WarmGameMode
	struct FSolarTablesData_WarmGameMode : public FSolarTablesDataBase
	{
	public:
		int32                                        ID;                                                // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        UniqueId;                                          // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        CCUStart;                                          // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        CCUEnd;                                            // 0x1C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        NumOfAI;                                           // 0x20(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        AILevel;                                           // 0x24(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                AILevelConfig;                                     // 0x28(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        AITeamPresetsID;                                   // 0x38(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         EnableTeamManager;                                 // 0x3C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_347D[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		int32                                        MinPlayer;                                         // 0x40(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        MaxRealGroup;                                      // 0x44(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        LeastRealPlayer;                                   // 0x48(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        MaxWait;                                           // 0x4C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         HasMonster;                                        // 0x50(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_347E[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		int32                                        ReadyStateTime;                                    // 0x54(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        StopMatchTime;                                     // 0x58(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         HasAITeammate;                                     // 0x5C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         AIAccompany;                                       // 0x5D(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_347F[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		int32                                        AIAccompanyTimeline;                               // 0x60(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3480[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x50 (0x60 - 0x10)
	// ScriptStruct Solarland.SolarTables_WarmGameMode
	struct FSolarTables_WarmGameMode : public FSolarTablesDataBase
	{
	public:
		TMap<int32, struct FSolarTablesData_WarmGameMode> Data;                                              // 0x10(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected)
	};

	// 0x10 (0x20 - 0x10)
	// ScriptStruct Solarland.SolarTablesData_WeaponBattleUpgrade
	struct FSolarTablesData_WeaponBattleUpgrade : public FSolarTablesDataBase
	{
	public:
		int32                                        ID;                                                // 0x10(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        Exp;                                               // 0x14(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        Retrofit;                                          // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        UpgradeCost;                                       // 0x1C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x50 (0x60 - 0x10)
	// ScriptStruct Solarland.SolarTables_WeaponBattleUpgrade
	struct FSolarTables_WeaponBattleUpgrade : public FSolarTablesDataBase
	{
	public:
		TMap<int32, struct FSolarTablesData_WeaponBattleUpgrade> Data;                                              // 0x10(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected)
	};

	// 0x2CA8 (0x2CA8 - 0x0)
	// ScriptStruct Solarland.SolarTables_Tables
	struct FSolarTables_Tables
	{
	public:
		uint8                                        Pad_3481[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		struct FSolarTables_AccountFixedExp          AccountFixedExp;                                   // 0x8(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
		struct FSolarTables_AccountFlag              AccountFlag;                                       // 0x68(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
		struct FSolarTables_Airline                  Airline;                                           // 0xC8(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
		struct FSolarTables_Armory                   Armory;                                            // 0x128(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
		struct FSolarTables_BattleUpgradeContent     BattleUpgradeContent;                              // 0x188(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
		struct FSolarTables_BattleUpgradeEffect      BattleUpgradeEffect;                               // 0x1E8(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
		struct FSolarTables_BattleUpgradeEffectPool  BattleUpgradeEffectPool;                           // 0x248(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
		struct FSolarTables_BattleEndRankSettlement  BattleEndRankSettlement;                           // 0x2A8(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
		struct FSolarTables_BpAward                  BpAward;                                           // 0x308(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
		struct FSolarTables_Behavior                 Behavior;                                          // 0x368(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
		struct FSolarTables_EscapeExp                EscapeExp;                                         // 0x3C8(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
		struct FSolarTables_CaseToggleAlphabet       CaseToggleAlphabet;                                // 0x428(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
		struct FSolarTables_UnitCharacter            UnitCharacter;                                     // 0x488(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
		struct FSolarTables_CharacterAbility         CharacterAbility;                                  // 0x4E8(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
		struct FSolarTables_CharacterPassiveAbility  CharacterPassiveAbility;                           // 0x548(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
		struct FSolarTables_GetPoint                 GetPoint;                                          // 0x5A8(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
		struct FSolarTables_ChestSpawn               ChestSpawn;                                        // 0x608(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
		struct FSolarTables_ChestSpawnGroup          ChestSpawnGroup;                                   // 0x668(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
		struct FSolarTables_ClanFlag                 ClanFlag;                                          // 0x6C8(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
		struct FSolarTables_DayAndNight              DayAndNight;                                       // 0x728(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
		struct FSolarTables_DsVariableRange          DsVariableRange;                                   // 0x788(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
		struct FSolarTables_EShop                    EShop;                                             // 0x7E8(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
		struct FSolarTables_EShopDemoModel           EShopDemoModel;                                    // 0x848(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
		struct FSolarTables_EShopGoodsPool           EShopGoodsPool;                                    // 0x8A8(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
		struct FSolarTables_EShopGoodsPoolGroup      EShopGoodsPoolGroup;                               // 0x908(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
		struct FSolarTables_EShopSpawn               EShopSpawn;                                        // 0x968(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
		struct FSolarTables_BattleRoyaleMode         BattleRoyaleMode;                                  // 0x9C8(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
		struct FSolarTables_GameModeGroup            GameModeGroup;                                     // 0xA28(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
		struct FSolarTables_GameModeMain             GameModeMain;                                      // 0xA88(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
		struct FSolarTables_OutcomeSet               OutcomeSet;                                        // 0xAE8(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
		struct FSolarTables_GameTimeLine             GameTimeLine;                                      // 0xB48(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
		struct FSolarTables_GlobalOutcome            GlobalOutcome;                                     // 0xBA8(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
		struct FSolarTables_GlobalSensitivity        GlobalSensitivity;                                 // 0xC08(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
		struct FSolarTables_HeroPowerFormula         HeroPowerFormula;                                  // 0xC68(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
		struct FSolarTables_InputAction              InputAction;                                       // 0xCC8(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
		struct FSolarTables_InputMapping             InputMapping;                                      // 0xD28(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
		struct FSolarTables_Item                     Item;                                              // 0xD88(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
		struct FSolarTables_BackpackProperty         BackpackProperty;                                  // 0xDE8(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
		struct FSolarTables_BackpackTrailProperty    BackpackTrailProperty;                             // 0xE48(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
		struct FSolarTables_CapsuleProperty          CapsuleProperty;                                   // 0xEA8(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
		struct FSolarTables_Dance                    Dance;                                             // 0xF08(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
		struct FSolarTables_Emote                    Emote;                                             // 0xF68(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
		struct FSolarTables_MaterialProperty         MaterialProperty;                                  // 0xFC8(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
		struct FSolarTables_VehicleSkinProperty      VehicleSkinProperty;                               // 0x1028(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
		struct FSolarTables_WeaponSkinProperty       WeaponSkinProperty;                                // 0x1088(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
		struct FSolarTables_ItemCustomType           ItemCustomType;                                    // 0x10E8(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
		struct FSolarTables_ItemInBattle             ItemInBattle;                                      // 0x1148(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
		struct FSolarTables_ArmorProperty            ArmorProperty;                                     // 0x11A8(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
		struct FSolarTables_Chest                    Chest;                                             // 0x1208(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
		struct FSolarTables_EnergyProperty           EnergyProperty;                                    // 0x1268(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
		struct FSolarTables_ExtraEnergyProperty      ExtraEnergyProperty;                               // 0x12C8(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
		struct FSolarTables_GunProperty              GunProperty;                                       // 0x1328(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
		struct FSolarTables_ItemBehavior             ItemBehavior;                                      // 0x1388(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
		struct FSolarTables_ItemWeaponParts          ItemWeaponParts;                                   // 0x13E8(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
		struct FSolarTables_JetPackModuleProperty    JetPackModuleProperty;                             // 0x1448(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
		struct FSolarTables_ShieldProperty           ShieldProperty;                                    // 0x14A8(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
		struct FSolarTables_ItemQuality              ItemQuality;                                       // 0x1508(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
		struct FSolarTables_ItemSound                ItemSound;                                         // 0x1568(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
		struct FSolarTables_LobbyAutoDownload        LobbyAutoDownload;                                 // 0x15C8(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
		struct FSolarTables_LanguageSwitcher         LanguageSwitcher;                                  // 0x1628(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
		struct FSolarTables_Localization             Localization;                                      // 0x1688(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
		struct FSolarTables_Localization_BattleUI    Localization_BattleUI;                             // 0x16E8(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
		struct FSolarTables_Localization_EventSystem Localization_EventSystem;                          // 0x1748(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
		struct FSolarTables_Localization_General     Localization_General;                              // 0x17A8(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
		struct FSolarTables_Localization_Heroes      Localization_Heroes;                               // 0x1808(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
		struct FSolarTables_Localization_Item        Localization_Item;                                 // 0x1868(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
		struct FSolarTables_Localization_Tournament  Localization_Tournament;                           // 0x18C8(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
		struct FSolarTables_Localization_Uncategorized Localization_Uncategorized;                        // 0x1928(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
		struct FSolarTables_GameMap                  GameMap;                                           // 0x1988(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
		struct FSolarTables_MapMarkIcon              MapMarkIcon;                                       // 0x19E8(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
		struct FSolarTables_MatchRule                MatchRule;                                         // 0x1A48(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
		struct FSolarTables_RankMatch                RankMatch;                                         // 0x1AA8(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
		struct FSolarTables_NameCardBackground       NameCardBackground;                                // 0x1B08(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
		struct FSolarTables_NameCardPose             NameCardPose;                                      // 0x1B68(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
		struct FSolarTables_ObGift                   ObGift;                                            // 0x1BC8(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
		struct FSolarTables_OBSubtitle_Action2Feature OBSubtitle_Action2Feature;                         // 0x1C28(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
		struct FSolarTables_OBSubtitle_Feature2Emotion OBSubtitle_Feature2Emotion;                        // 0x1C88(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
		struct FSolarTables_OBSubtitle_Emotion2Pattern OBSubtitle_Emotion2Pattern;                        // 0x1CE8(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
		struct FSolarTables_Outcome                  Outcome;                                           // 0x1D48(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
		struct FSolarTables_OutcomeContent           OutcomeContent;                                    // 0x1DA8(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
		struct FSolarTables_PickupPriorityItem       PickupPriorityItem;                                // 0x1E08(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
		struct FSolarTables_PickupPriorityWeaponPart PickupPriorityWeaponPart;                          // 0x1E68(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
		struct FSolarTables_CharacterVoiceover       CharacterVoiceover;                                // 0x1EC8(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
		struct FSolarTables_QuickChat                QuickChat;                                         // 0x1F28(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
		struct FSolarTables_QuickVoice               QuickVoice;                                        // 0x1F88(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
		struct FSolarTables_VODownload               VODownload;                                        // 0x1FE8(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
		struct FSolarTables_RankLevel                RankLevel;                                         // 0x2048(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
		struct FSolarTables_AutoDirector             AutoDirector;                                      // 0x20A8(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
		struct FSolarTables_AutoDirectorActivityScore AutoDirectorActivityScore;                         // 0x2108(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
		struct FSolarTables_CircularCameras          CircularCameras;                                   // 0x2168(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
		struct FSolarTables_HotSpot                  HotSpot;                                           // 0x21C8(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
		struct FSolarTables_LookAtCameras            LookAtCameras;                                     // 0x2228(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
		struct FSolarTables_Rescue                   Rescue;                                            // 0x2288(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
		struct FSolarTables_Skin                     Skin;                                              // 0x22E8(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
		struct FSolarTables_Achievement              Achievement;                                       // 0x2348(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
		struct FSolarTables_TaskProgress             TaskProgress;                                      // 0x23A8(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
		struct FSolarTables_TaskSystem               TaskSystem;                                        // 0x2408(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
		struct FSolarTables_PlayerOperationListLayout PlayerOperationListLayout;                         // 0x2468(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
		struct FSolarTables_Variables                Variables;                                         // 0x24C8(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
		struct FSolarTables_Vehicle                  Vehicle;                                           // 0x2528(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
		struct FSolarTables_VehicleSkin              VehicleSkin;                                       // 0x2588(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
		struct FSolarTables_VehicleType              VehicleType;                                       // 0x25E8(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
		struct FSolarTables_VehicleSpawn             VehicleSpawn;                                      // 0x2648(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
		struct FSolarTables_VehicleSpawnGroup        VehicleSpawnGroup;                                 // 0x26A8(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
		struct FSolarTables_WarmGame                 WarmGame;                                          // 0x2708(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
		struct FSolarTables_WarmGameMode             WarmGameMode;                                      // 0x2768(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
		struct FSolarTables_WeaponDamage             WeaponDamage;                                      // 0x27C8(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
		struct FSolarTables_Weapon                   Weapon;                                            // 0x2828(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
		struct FSolarTables_WeaponAmmo               WeaponAmmo;                                        // 0x2888(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
		struct FSolarTables_WeaponBattleUpgrade      WeaponBattleUpgrade;                               // 0x28E8(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
		struct FSolarTables_WeaponDefault            WeaponDefault;                                     // 0x2948(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
		struct FSolarTables_WeaponKillTip            WeaponKillTip;                                     // 0x29A8(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
		struct FSolarTables_WeaponParts              WeaponParts;                                       // 0x2A08(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
		struct FSolarTables_WeaponPartsOp            WeaponPartsOp;                                     // 0x2A68(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
		struct FSolarTables_WeaponQuality            WeaponQuality;                                     // 0x2AC8(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
		struct FSolarTables_SecondMode               SecondMode;                                        // 0x2B28(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
		struct FSolarTables_WeaponSkin               WeaponSkin;                                        // 0x2B88(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
		struct FSolarTables_WeaponSound              WeaponSound;                                       // 0x2BE8(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
		struct FSolarTables_WeaponStatu              WeaponStatu;                                       // 0x2C48(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
	};

	// 0x10 (0x10 - 0x0)
	// ScriptStruct Solarland.SolarTablesDeviceRes
	struct FSolarTablesDeviceRes
	{
	public:
		class FString                                Res;                                               // 0x0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x8 (0x8 - 0x0)
	// ScriptStruct Solarland.SolarTablesRangeFloat
	struct FSolarTablesRangeFloat
	{
	public:
		float                                        Left;                                              // 0x0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        Right;                                             // 0x4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x8 (0x8 - 0x0)
	// ScriptStruct Solarland.SolarTablesRangeInt
	struct FSolarTablesRangeInt
	{
	public:
		int32                                        Left;                                              // 0x0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        Right;                                             // 0x4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x38 (0x40 - 0x8)
	// ScriptStruct Solarland.TaskHandleFuncConfig
	struct FTaskHandleFuncConfig : public FTableRowBase
	{
	public:
		int64                                        TaskType;                                          // 0x8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                TaskDesc;                                          // 0x10(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                TargetValueName;                                   // 0x20(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                FuncName;                                          // 0x30(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x18 (0x18 - 0x0)
	// ScriptStruct Solarland.TaskHandleFuncInfo
	struct FTaskHandleFuncInfo
	{
	public:
		int64                                        TaskID;                                            // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                FuncName;                                          // 0x8(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x40 (0x40 - 0x0)
	// ScriptStruct Solarland.TaskBriefData
	struct FTaskBriefData
	{
	public:
		int64                                        TaskID;                                            // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int64                                        BaseValue;                                         // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int64                                        CurValue;                                          // 0x10(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3482[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		int64                                        Status;                                            // 0x20(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class ETaskPage                         Page;                                              // 0x28(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3483[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		int64                                        Week;                                              // 0x30(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         IsMarked;                                          // 0x38(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3484[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x28 (0x28 - 0x0)
	// ScriptStruct Solarland.BattlePassInfo
	struct FBattlePassInfo
	{
	public:
		TArray<struct FTaskBriefData>                Tasks;                                             // 0x0(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int64                                        BattlePassID;                                      // 0x10(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int64                                        CurrWeek;                                          // 0x18(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int64                                        MaxWeek;                                           // 0x20(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x50 (0x50 - 0x0)
	// ScriptStruct Solarland.TaskUpdateInfo
	struct FTaskUpdateInfo
	{
	public:
		bool                                         DelAllTask;                                        // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3485[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TArray<int64>                                DelIDs;                                            // 0x8(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FBattlePassInfo                       Task;                                              // 0x18(0x28)(NativeAccessSpecifierPublic)
		class FString                                PlayerId;                                          // 0x40(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x18 (0x18 - 0x0)
	// ScriptStruct Solarland.BattlePassTimeInfo
	struct FBattlePassTimeInfo
	{
	public:
		int64                                        BattlePassID;                                      // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int64                                        CurrWeek;                                          // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int64                                        MaxWeek;                                           // 0x10(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x20 (0x28 - 0x8)
	// ScriptStruct Solarland.TeamInfoRow
	struct FTeamInfoRow : public FTableRowBase
	{
	public:
		class FText                                  TeamName;                                          // 0x8(0x18)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
		uint8                                        MemberLimit;                                       // 0x20(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        MatchCount;                                        // 0x21(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3486[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x8 (0x8 - 0x0)
	// ScriptStruct Solarland.SlateFontSizeLangData
	struct FSlateFontSizeLangData
	{
	public:
		enum class ESolarSupportLanguages            SpecialLang;                                       // 0x0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3487[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		int32                                        SpecialFontSize;                                   // 0x4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x18 (0x18 - 0x0)
	// ScriptStruct Solarland.SlateFontSizeForLang
	struct FSlateFontSizeForLang
	{
	public:
		bool                                         bEnableFontForLang;                                // 0x0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3488[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		int32                                        DefaultFontSize;                                   // 0x4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<struct FSlateFontSizeLangData>        FontForLangGroup;                                  // 0x8(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x98 (0x98 - 0x0)
	// ScriptStruct Solarland.TransformerSetting
	struct FTransformerSetting
	{
	public:
		enum class EVehicleControlUIType             ControlUIType;                                     // 0x0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3489[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TSubclassOf<class USolarVehicleGameplayAbility> AbilityClass;                                      // 0x8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TSubclassOf<class ASolarVehicleWeapon>       WeaponClass;                                       // 0x10(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TSubclassOf<class ASolarVehicleWeapon>       SkinWeaponClass;                                   // 0x18(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FName                                  WeaponSocketName;                                  // 0x20(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class UVehicleCameraDataAsset* CameraDataAsset;                                   // 0x28(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class UVehicleCameraDataAsset* PassengerOutShootCamera;                           // 0x30(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class UVehicleCameraDataAsset* PassengerOutShootAimCamera;                        // 0x38(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class ASolarVehicleWeapon* VehicleWeapon;                                     // 0x40(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TMap<enum class EPhysicalSurface, TSoftObjectPtr<class UParticleSystem>> RaiseDustEffects;                                  // 0x48(0x50)(Edit, UObjectWrapper, NativeAccessSpecifierPublic)
	};

	// 0x8 (0x8 - 0x0)
	// ScriptStruct Solarland.SpawonTreasureBoxIdAndWeight
	struct FSpawonTreasureBoxIdAndWeight
	{
	public:
		int32                                        TreasureId;                                        // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        Weight;                                            // 0x4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x8 (0x10 - 0x8)
	// ScriptStruct Solarland.TutorialTableRowBase
	struct FTutorialTableRowBase : public FTableRowBase
	{
	public:
		int32                                        ID;                                                // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_348A[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x28 (0x38 - 0x10)
	// ScriptStruct Solarland.TutorialConditionTableRow
	struct FTutorialConditionTableRow : public FTutorialTableRowBase
	{
	public:
		uint8                                        TriggerType;                                       // 0x10(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_348B[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TArray<class FString>                        Parameters;                                        // 0x18(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Description;                                       // 0x28(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x18 (0x18 - 0x0)
	// ScriptStruct Solarland.TutorialSpecialUI
	struct FTutorialSpecialUI
	{
	public:
		struct FSoftObjectPath                       TutorialSpecialUIBPPath;                           // 0x0(0x18)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x20 (0x20 - 0x0)
	// ScriptStruct Solarland.TutorialBackgroundMusicTableRow
	struct FTutorialBackgroundMusicTableRow
	{
	public:
		class FString                                TutorialPlayMusicName;                             // 0x0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                TutorialStopMusicName;                             // 0x10(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x70 (0x70 - 0x0)
	// ScriptStruct Solarland.TutorialTipAndEffectUI
	struct FTutorialTipAndEffectUI
	{
	public:
		class FString                                LinkedComponent;                                   // 0x0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                LimitedListView;                                   // 0x10(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FSoftObjectPath                       TutorialExpressionBPPath;                          // 0x20(0x18)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FSoftObjectPath                       TutorialEffectBPPath;                              // 0x38(0x18)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector2D                             TutorialBPLocation;                                // 0x50(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         HorizontalDirection;                               // 0x58(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_348C[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		int32                                        LocTextID;                                         // 0x5C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        LocTextDuration;                                   // 0x60(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        DelayShowUITime;                                   // 0x64(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        WaitUIShowTime;                                    // 0x68(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class ETutorialUIParent                 UIParent;                                          // 0x6C(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         OpenEffectSound;                                   // 0x6D(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         NeedMask;                                          // 0x6E(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_348D[0x1];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x20 (0x20 - 0x0)
	// ScriptStruct Solarland.TutorialSingleSubtitle
	struct FTutorialSingleSubtitle
	{
	public:
		class FString                                LocalTextId;                                       // 0x0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                Voice;                                             // 0x10(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x18 (0x18 - 0x0)
	// ScriptStruct Solarland.TutorialSubtitle
	struct FTutorialSubtitle
	{
	public:
		TArray<struct FTutorialSingleSubtitle>       Subtitles;                                         // 0x0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        DelayTime;                                         // 0x10(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_348E[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x18 (0x18 - 0x0)
	// ScriptStruct Solarland.TutorialRepeatTip
	struct FTutorialRepeatTip
	{
	public:
		float                                        StartTime;                                         // 0x0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_348F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TArray<struct FTutorialSingleSubtitle>       Subtitles;                                         // 0x8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x28 (0x28 - 0x0)
	// ScriptStruct Solarland.TutorialSoftCondition
	struct FTutorialSoftCondition
	{
	public:
		class FString                                ConditionStr;                                      // 0x0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FSoftObjectPath                       ConditionBP;                                       // 0x10(0x18)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x1C0 (0x1D0 - 0x10)
	// ScriptStruct Solarland.TutorialActionTableRow
	struct FTutorialActionTableRow : public FTutorialTableRowBase
	{
	public:
		class FString                                Desc;                                              // 0x10(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class ETutorialUIType                   UIType;                                            // 0x20(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3490[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		struct FTutorialTipAndEffectUI               TutorialTipAndEffectUI;                            // 0x28(0x70)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
		struct FTutorialSpecialUI                    TutorialSpecialUI;                                 // 0x98(0x18)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
		int32                                        NoticeLocTextId;                                   // 0xB0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3491[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		struct FTutorialSubtitle                     TutorialSubtitle;                                  // 0xB8(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
		bool                                         bRepeatTip;                                        // 0xD0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3492[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		struct FTutorialRepeatTip                    RepeatTip;                                         // 0xD8(0x18)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
		struct FTutorialBackgroundMusicTableRow      TutorialBackgroundMusic;                           // 0xF0(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
		struct FTutorialSoftCondition                EndCondition;                                      // 0x110(0x28)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
		struct FTutorialSoftCondition                InterruptCondition;                                // 0x138(0x28)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
		float                                        WaitTime;                                          // 0x160(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        MinExecuteTime;                                    // 0x164(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<int32>                                OpenBehaviors;                                     // 0x168(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<int32>                                CloseBehaviors;                                    // 0x178(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        FixedTriggerAreaID;                                // 0x188(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3493[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TArray<int32>                                BotAISpawnIDs;                                     // 0x190(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<int32>                                BotAIDeathIDs;                                     // 0x1A0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<int32>                                BotAIOnVehicleSpawnIDs;                            // 0x1B0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<int32>                                BotAIOnVehicleDeathIDs;                            // 0x1C0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x88 (0x98 - 0x10)
	// ScriptStruct Solarland.TutorialTableRow
	struct FTutorialTableRow : public FTutorialTableRowBase
	{
	public:
		class FString                                Desc;                                              // 0x10(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class ETutorialType                     Type;                                              // 0x20(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class ETutorialStage                    TriggerStage;                                      // 0x21(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3494[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		struct FTutorialSoftCondition                TriggerCondition;                                  // 0x28(0x28)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
		int32                                        EndNum;                                            // 0x50(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3495[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		struct FTutorialSoftCondition                ForeverClosedCondition;                            // 0x58(0x28)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
		TArray<int32>                                ActionIDs;                                         // 0x80(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bUpload;                                           // 0x90(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bMandatory;                                        // 0x91(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bStartUpload;                                      // 0x92(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bWindows;                                          // 0x93(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         biOS;                                              // 0x94(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bAndroid;                                          // 0x95(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3496[0x2];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x20 (0x20 - 0x0)
	// ScriptStruct Solarland.TutorialLevelConfigData
	struct FTutorialLevelConfigData
	{
	public:
		class FString                                LevelName;                                         // 0x0(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<int32>                                TutorialIds;                                       // 0x10(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x38 (0x38 - 0x0)
	// ScriptStruct Solarland.TutorialLevelConfig
	struct FTutorialLevelConfig
	{
	public:
		TArray<struct FTutorialLevelConfigData>      LevelConfigDatas;                                  // 0x0(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FSoftObjectPath                       MainMapPath;                                       // 0x10(0x18)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        VeteranTutorialID;                                 // 0x28(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        RepeatOperationTime;                               // 0x2C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        WaitToEndTime;                                     // 0x30(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3497[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x28 (0x28 - 0x0)
	// ScriptStruct Solarland.TutorialLevelSaveData
	struct FTutorialLevelSaveData
	{
	public:
		class FString                                LevelName;                                         // 0x0(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                PlayerStartTag;                                    // 0x10(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bTutorialHasFinished;                              // 0x20(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3498[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		int32                                        TutorialID;                                        // 0x24(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x1 (0x1 - 0x0)
	// ScriptStruct Solarland.ConditionReturnInfo_NoParams
	struct FConditionReturnInfo_NoParams
	{
	public:
		uint8                                        Pad_3499[0x1];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x18 (0x18 - 0x0)
	// ScriptStruct Solarland.ConditionReturnInfo
	struct FConditionReturnInfo
	{
	public:
		uint8                                        Pad_349A[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x20 (0x20 - 0x0)
	// ScriptStruct Solarland.CacheConditionInfo
	struct FCacheConditionInfo
	{
	public:
		uint8                                        Pad_349B[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x10 (0x10 - 0x0)
	// ScriptStruct Solarland.MatAppearingData
	struct FMatAppearingData
	{
	public:
		class UCurveFloat* MatCurve;                                          // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FName                                  MatParam;                                          // 0x8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x8 (0x8 - 0x0)
	// ScriptStruct Solarland.ObstacleInitialPosParams
	struct FObstacleInitialPosParams
	{
	public:
		float                                        Scale;                                             // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        Offset;                                            // 0x4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x18 (0x18 - 0x0)
	// ScriptStruct Solarland.DetectorShapeParams
	struct FDetectorShapeParams
	{
	public:
		struct FVector                               Offset;                                            // 0x0(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector                               BoxExtent;                                         // 0xC(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x14 (0x14 - 0x0)
	// ScriptStruct Solarland.CarPadSpeedData
	struct FCarPadSpeedData
	{
	public:
		uint8                                        Pad_349C[0x14];                                    // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x28 (0x28 - 0x0)
	// ScriptStruct Solarland.SolarVehicleMaterialData
	struct FSolarVehicleMaterialData
	{
	public:
		int8                                         MaterialIndex;                                     // 0x0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_349D[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class FName                                  ParamName;                                         // 0x4(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        OnValue;                                           // 0xC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        OffValue;                                          // 0x10(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        ActiveSpeed;                                       // 0x14(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class UMaterialInstanceDynamic* MatInstanceDynamic;                                // 0x18(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_349E[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x14 (0x14 - 0x0)
	// ScriptStruct Solarland.VehicleEquipWeaponOverlapCapsule
	struct FVehicleEquipWeaponOverlapCapsule
	{
	public:
		struct FVector                               Postion;                                           // 0x0(0xC)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        HalfHeight;                                        // 0xC(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        Radius;                                            // 0x10(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x18 (0x18 - 0x0)
	// ScriptStruct Solarland.VehicleEquipWeaponOverlapBox
	struct FVehicleEquipWeaponOverlapBox
	{
	public:
		struct FVector                               Postion;                                           // 0x0(0xC)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector                               TraceBox;                                          // 0xC(0xC)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x10 (0x10 - 0x0)
	// ScriptStruct Solarland.CacheDecalComponent
	struct FCacheDecalComponent
	{
	public:
		uint8                                        Pad_349F[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x10 (0x10 - 0x0)
	// ScriptStruct Solarland.CacheQueryActor
	struct FCacheQueryActor
	{
	public:
		uint8                                        Pad_34A0[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x60 (0x60 - 0x0)
	// ScriptStruct Solarland.WeakPointImgInfo
	struct FWeakPointImgInfo
	{
	public:
		TSoftObjectPtr<class UTexture2D>             Texture2D;                                         // 0x0(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FAnchors                              Anchors;                                           // 0x28(0x10)(Edit, NoDestructor, NativeAccessSpecifierPublic)
		struct FVector2D                             Postion;                                           // 0x38(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector2D                             Size;                                              // 0x40(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector2D                             Alignment;                                         // 0x48(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bAutoSize;                                         // 0x50(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_34A1[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		float                                        Angle;                                             // 0x54(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector2D                             Scale;                                             // 0x58(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x60 (0x60 - 0x0)
	// ScriptStruct Solarland.VehicleHealthResource
	struct FVehicleHealthResource
	{
	public:
		TSoftObjectPtr<class UTexture2D>             BodyTexture2D;                                     // 0x0(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TSoftObjectPtr<class UTexture2D>             FillImageTexture2D;                                // 0x28(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<struct FWeakPointImgInfo>             WeakPointImgInfos;                                 // 0x50(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x50 (0x50 - 0x0)
	// ScriptStruct Solarland.VehicleCollisionInfo
	struct FVehicleCollisionInfo
	{
	public:
		class UPrimitiveComponent* CollidedPrimitive;                                 // 0x0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector_NetQuantize                   SelfPreVelocity;                                   // 0x8(0xC)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector_NetQuantize                   SelfCurrentVelocity;                               // 0x14(0xC)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector_NetQuantize                   OtherVehicleLinearVelocity;                        // 0x20(0xC)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector_NetQuantize                   OtherVehicleAngularVelocity;                       // 0x2C(0xC)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector_NetQuantize                   OtherVehicleLocation;                              // 0x38(0xC)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector_NetQuantizeNormal             OtherVehicleRotation;                              // 0x44(0xC)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x28 (0x28 - 0x0)
	// ScriptStruct Solarland.BasedMovement
	struct FBasedMovement
	{
	public:
		class UPrimitiveComponent* MovementBase;                                      // 0x0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector_NetQuantize100                Location;                                          // 0x8(0xC)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FRotator                              Rotation;                                          // 0x14(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		bool                                         bRelativeRotation;                                 // 0x20(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bServerHasVelocity;                                // 0x21(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_34A2[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x20 (0x20 - 0x0)
	// ScriptStruct Solarland.VehicleBasedMovementInfo
	struct FVehicleBasedMovementInfo
	{
	public:
		class ASolarVehiclePawn* MovementBaseActor;                                 // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector_NetQuantize100                RelativeLocation;                                  // 0x8(0xC)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FRotator                              RelativeRotation;                                  // 0x14(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	};

	// 0x60 (0x60 - 0x0)
	// ScriptStruct Solarland.VehicleSeatAbility
	struct FVehicleSeatAbility
	{
	public:
		TSubclassOf<class USolarVehicleGameplayAbility> AbilityClass;                                      // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FGameplayAbilitySpecHandle            ServerOrDriverAbilityHandle;                       // 0x8(0x4)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FGameplayAbilitySpecHandle            SkinPreAbilityHandle;                              // 0xC(0x4)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_34A3[0x50];                                    // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0xD8 (0xD8 - 0x0)
	// ScriptStruct Solarland.VehicleSeatSlot
	struct FVehicleSeatSlot
	{
	public:
		class FName                                  SeatSocketName;                                    // 0x0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FName                                  SeatWeaponSocket;                                  // 0x8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bDisplayBackpack;                                  // 0x10(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         SeatStickOutEnable;                                // 0x11(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_34A4[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class UVehicleCameraDataAsset* OutShootCameraData;                                // 0x18(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class UVehicleCameraDataAsset* OutShootAimCameraData;                             // 0x20(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class UCurveFloat* OutShootPitchLimitCurve;                           // 0x28(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<struct FVehicleSeatAbility>           VechicleAbilities;                                 // 0x30(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TSubclassOf<class ASolarVehicleWeapon>       VehicleWeaponClass;                                // 0x40(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TSubclassOf<class ASolarVehicleWeapon>       VehicleWeaponSkinClass;                            // 0x48(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bAutoEquipWeapon;                                  // 0x50(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_34A5[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TSoftObjectPtr<class UTexture2D>             SeatDisplayIcon;                                   // 0x58(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        DamageRatio;                                       // 0x80(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        PenetrationDamageRatio;                            // 0x84(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FBoxSphereBounds                      PenetrationSphere;                                 // 0x88(0x1C)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		struct FRotator                              EjectRotation;                                     // 0xA4(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		bool                                         bOverrideDefaultEjectParams;                       // 0xB0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_34A6[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		struct FVehicleEjectParams                   EjectParams;                                       // 0xB4(0x10)(Edit, NoDestructor, NativeAccessSpecifierPublic)
		TWeakObjectPtr<class ASolarCharacter>        SeatPassenger;                                     // 0xC4(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_34A7[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class ASolarVehicleWeapon* SeatWeapon;                                        // 0xD0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0xC (0xC - 0x0)
	// ScriptStruct Solarland.AbilityCooldownTimer
	struct FAbilityCooldownTimer
	{
	public:
		struct FGameplayTag                          AbilityCooldownTag;                                // 0x0(0x8)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        AbilityAppliedTime;                                // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x80 (0x80 - 0x0)
	// ScriptStruct Solarland.VehicleVFXMesh
	struct FVehicleVFXMesh
	{
	public:
		TSoftObjectPtr<class UStaticMesh>            Mesh;                                              // 0x0(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<class UMaterialInterface*>            OverrideMaterials;                                 // 0x28(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FName                                  AttachedSocket;                                    // 0x38(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FTransform                            OffsetTransform;                                   // 0x40(0x30)(Edit, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		uint8                                        Pad_34A8[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x90 (0x90 - 0x0)
	// ScriptStruct Solarland.VehicleVFX
	struct FVehicleVFX
	{
	public:
		TSoftObjectPtr<class UParticleSystem>        Particle;                                          // 0x0(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FName                                  AttachedSocket;                                    // 0x28(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FTransform                            OffsetTransform;                                   // 0x30(0x30)(Edit, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		class UCurveFloat* ActivateCurve;                                     // 0x60(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FName                                  ParameterName;                                     // 0x68(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_34A9[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x14 (0x14 - 0x0)
	// ScriptStruct Solarland.SiegeVehicleOpenCapsuleData
	struct FSiegeVehicleOpenCapsuleData
	{
	public:
		struct FVector                               Postion;                                           // 0x0(0xC)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        HalfHeight;                                        // 0xC(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        Radius;                                            // 0x10(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x18 (0x18 - 0x0)
	// ScriptStruct Solarland.SiegeVehicleOpenTraceData
	struct FSiegeVehicleOpenTraceData
	{
	public:
		struct FVector                               BoxPostion;                                        // 0x0(0xC)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector                               TraceBox;                                          // 0xC(0xC)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x1C (0x1C - 0x0)
	// ScriptStruct Solarland.PIDController
	struct FPIDController
	{
	public:
		float                                        PCoeff;                                            // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        ICoeff;                                            // 0x4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        DCoeff;                                            // 0x8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        Minimum;                                           // 0xC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        Maximum;                                           // 0x10(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_34AA[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x20 (0x20 - 0x0)
	// ScriptStruct Solarland.BoneIKPreset
	struct FBoneIKPreset
	{
	public:
		struct FVector                               LeftIKTarget;                                      // 0x0(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector                               RightIKTarget;                                     // 0xC(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector2D                             ChangeIKThreshold;                                 // 0x18(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x28 (0x28 - 0x0)
	// ScriptStruct Solarland.SpawnedRocketData
	struct FSpawnedRocketData
	{
	public:
		struct FVector                               RocketSpawnLocation;                               // 0x0(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        RocketSpawnDelayTime;                              // 0xC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        AlertLineRemainTime;                               // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        SpawnedTime;                                       // 0x14(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bRocketSpawned;                                    // 0x18(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_34AB[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class UStaticMeshComponent* AlertLineBombingMesh;                              // 0x20(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x60 (0x60 - 0x0)
	// ScriptStruct Solarland.BombingAreaAsset
	struct FBombingAreaAsset
	{
	public:
		TSoftObjectPtr<class UStaticMesh>            BombingAreaMeshClass;                              // 0x0(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TSoftObjectPtr<class UMaterialInterface>     BombingDecalMaterialClass;                         // 0x28(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class UStaticMeshComponent* BombingAreaMeshComponent;                          // 0x50(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class UDecalComponent* BombingAreaDecalComponent;                         // 0x58(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x24 (0x24 - 0x0)
	// ScriptStruct Solarland.BombingAreaData
	struct FBombingAreaData
	{
	public:
		int32                                        AreaIndex;                                         // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector_NetQuantize                   CenterLocation;                                    // 0x4(0xC)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class ERocketFireMode                   SpawnedFireMode;                                   // 0x10(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_34AC[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		float                                        ServerStartedTime;                                 // 0x14(0x4)(ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        MaxRocketCounter;                                  // 0x18(0x1)(ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        SpawnedRocketCounter;                              // 0x19(0x1)(ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_34AD[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		struct FVector2D                             LastLandLocation2D;                                // 0x1C(0x8)(ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x38 (0x38 - 0x0)
	// ScriptStruct Solarland.FireModeSetting
	struct FFireModeSetting
	{
	public:
		float                                        AreaMeshScale;                                     // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector                               BombingAreaDecalSize;                              // 0x4(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        FirstRocketSpawnTimer;                             // 0x10(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        RocketSpawnDelay;                                  // 0x14(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        AlertLineRemainTime;                               // 0x18(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        RocketSpawnInterval;                               // 0x1C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        BombingAreaDisplayDelay;                           // 0x20(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        LaunchRocketNum;                                   // 0x24(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        BombingAreaRadius;                                 // 0x28(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        MiniSpawnDistance;                                 // 0x2C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector2D                             AimDistanceRange;                                  // 0x30(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x18 (0x18 - 0x0)
	// ScriptStruct Solarland.BulletExplodedAreaData
	struct FBulletExplodedAreaData
	{
	public:
		class UParticleSystemComponent* TargetParticleComponent;                           // 0x0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class UDecalComponent* TargetDecalComponent;                              // 0x8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bPendingFadeOut;                                   // 0x10(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_34AE[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		float                                        FadeOutSpentTime;                                  // 0x14(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x18 (0x18 - 0x0)
	// ScriptStruct Solarland.VehicleStateTransition
	struct FVehicleStateTransition
	{
	public:
		uint8                                        Pad_34AF[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class ASolarVehiclePawn* Owner;                                             // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class USolarLeggedVehicleMovement* MovementComponent;                                 // 0x10(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x78 (0x78 - 0x0)
	// ScriptStruct Solarland.VehicleState
	struct FVehicleState
	{
	public:
		uint8                                        Pad_34B0[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class USolarVehicleStateMachine* StateMachine;                                      // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class ASolarVehiclePawn* Owner;                                             // 0x10(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class USolarLeggedVehicleMovement* MovementComponent;                                 // 0x18(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_34B1[0x58];                                    // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0xE0 (0xE0 - 0x0)
	// ScriptStruct Solarland.VehicleWeakPointSpec
	struct FVehicleWeakPointSpec
	{
	public:
		float                                        CurrentHealth;                                     // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bInRepairing;                                      // 0x4(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_34B2[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class USolarVehicleWeakPointComponent* WeakPointMeshComponent;                            // 0x8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class ASolarVehiclePawn* VehiclePawn;                                       // 0x10(0x8)(ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        WeakPointID;                                       // 0x18(0x1)(Edit, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_34B3[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TArray<class FName>                          WeakPointSockets;                                  // 0x20(0x10)(Edit, ZeroConstructor, RepSkip, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector                               WeakPointOffset;                                   // 0x30(0xC)(Edit, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_34B4[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TSoftObjectPtr<class UStaticMesh>            WeakPointStaticMesh;                               // 0x40(0x28)(Edit, RepSkip, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_34B5[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		struct FTransform                            WeakPointRelativeTransform;                        // 0x70(0x30)(Edit, IsPlainOldData, RepSkip, NoDestructor, NativeAccessSpecifierPublic)
		float                                        MaxWeakPointHealth;                                // 0xA0(0x4)(Edit, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        RepairDuration;                                    // 0xA4(0x4)(Edit, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bRecoverBoneScaleAfterVFXFinished;                 // 0xA8(0x1)(Edit, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_34B6[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TSubclassOf<class UGameplayEffect>           BrokenEffect;                                      // 0xB0(0x8)(Edit, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		uint8                                        Pad_34B7[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		float                                        FacingAngle;                                       // 0xC0(0x4)(Edit, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		float                                        DistFromCharacterToWeakPoint;                      // 0xC4(0x4)(Edit, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		uint8                                        Pad_34B8[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x1A8 (0x1A8 - 0x0)
	// ScriptStruct Solarland.SolarVirtualBullet
	struct FSolarVirtualBullet
	{
	public:
		struct FFireUniqueID                         FireUniqueID;                                      // 0x0(0x4)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class EVirtualBulletType                BulletType;                                        // 0x4(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_34B9[0xB];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class UParticleSystemComponent* BulletEffect;                                      // 0x10(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class UParticleSystemComponent* TrajectoryEffect;                                  // 0x18(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class UParticleSystemComponent* TrajectoryBeamEffect;                              // 0x20(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class USolarVirtualBulletAKComponent* AkComponent;                                       // 0x28(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<class AActor*>                        IgnoreHitedActors;                                 // 0x30(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_34BA[0x130];                                   // Fixing Size After Last Property  [ Dumper-7 ]
		struct FVector_NetQuantize                   PlayerViewDir;                                     // 0x170(0xC)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector_NetQuantize                   PlayerViewLoc;                                     // 0x17C(0xC)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        IsScopeOpen;                                       // 0x188(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_34BB[0x1F];                                    // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x40 (0x40 - 0x0)
	// ScriptStruct Solarland.SolarWeaponHitAntiData
	struct FSolarWeaponHitAntiData
	{
	public:
		struct FVector_NetQuantize                   RelavantHitLocationWithCharacter;                  // 0x0(0xC)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector_NetQuantize                   HitBoneScale;                                      // 0xC(0xC)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_34BC[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		struct FQuat                                 HitBoneRotation;                                   // 0x20(0x10)(IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		struct FVector_NetQuantize                   HitLoc;                                            // 0x30(0xC)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_34BD[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x68 (0x68 - 0x0)
	// ScriptStruct Solarland.SolarVirtualBulletHitParameter
	struct FSolarVirtualBulletHitParameter
	{
	public:
		struct FFireUniqueID                         FireUniqueID;                                      // 0x0(0x4)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        FireTimeStamp;                                     // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        HitTimeStamp;                                      // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector_NetQuantize                   PlayerViewDir;                                     // 0xC(0xC)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int8                                         FireChargePhase;                                   // 0x18(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_34BE[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		float                                        FireChargeTime;                                    // 0x1C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        HitStartIndex;                                     // 0x20(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector_NetQuantize                   StartLoc;                                          // 0x24(0xC)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector_NetQuantize                   TargetLoc;                                         // 0x30(0xC)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_34BF[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class UAmmoConfig* Ammo;                                              // 0x40(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<struct FSolarWeaponHitAntiData>       HitAntiDatas;                                      // 0x48(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<struct FHitResult>                    Hits;                                              // 0x58(0x10)(ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x18 (0x18 - 0x0)
	// ScriptStruct Solarland.SolarVirtualBulletHomingTarget
	struct FSolarVirtualBulletHomingTarget
	{
	public:
		bool                                         bSet;                                              // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		bool                                         bLocalCharacterLock;                               // 0x1(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		uint8                                        Pad_34C0[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TWeakObjectPtr<class AActor>                 HomingTargetActor;                                 // 0x4(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		struct FVector                               CurrentLoc;                                        // 0xC(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	};

	// 0xA8 (0xA8 - 0x0)
	// ScriptStruct Solarland.SolarVirtualBulletSpawnParameter
	struct FSolarVirtualBulletSpawnParameter
	{
	public:
		struct FFireUniqueID                         FireUniqueID;                                      // 0x0(0x4)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        FireTimeStamp;                                     // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        PreElapsedTime;                                    // 0x8(0x4)(ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector                               PlayerViewDir;                                     // 0xC(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector_NetQuantize                   PlayerViewLoc;                                     // 0x18(0xC)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        IsScopeOpen;                                       // 0x24(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int8                                         FireChargePhase;                                   // 0x25(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_34C1[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		float                                        FireChargeTime;                                    // 0x28(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector_NetQuantize                   StartLoc;                                          // 0x2C(0xC)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector_NetQuantize                   TargetLoc;                                         // 0x38(0xC)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector_NetQuantizeNormal             Dir;                                               // 0x44(0xC)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector_NetQuantize                   MuzzleFxLoc;                                       // 0x50(0xC)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        CurveOffsetAngle;                                  // 0x5C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FSolarVirtualBulletHomingTarget       HomingTarget;                                      // 0x60(0x18)(NoDestructor, NativeAccessSpecifierPublic)
		class UAmmoConfig* Ammo;                                              // 0x78(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                AntiData;                                          // 0x80(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TWeakObjectPtr<class AActor>                 Target;                                            // 0x90(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector                               HitTargetRelativeLocation;                         // 0x98(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_34C2[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x8 (0x8 - 0x0)
	// ScriptStruct Solarland.SolarWeaponExpData
	struct FSolarWeaponExpData
	{
	public:
		uint8                                        Pad_34C3[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x30 (0x30 - 0x0)
	// ScriptStruct Solarland.CachedParticleInfo
	struct FCachedParticleInfo
	{
	public:
		uint8                                        Pad_34C4[0x30];                                    // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x10 (0x10 - 0x0)
	// ScriptStruct Solarland.CameraShakeData
	struct FCameraShakeData
	{
	public:
		TSubclassOf<class UCameraShake>              CameraShakeClass;                                  // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_34C5[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0xC (0xC - 0x0)
	// ScriptStruct Solarland.PlaySoundParams
	struct FPlaySoundParams
	{
	public:
		bool                                         HasSilencer;                                       // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         InSameTeam;                                        // 0x1(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         IsInRoom;                                          // 0x2(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_34C6[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		int32                                        SoundFireAutoCount;                                // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bTriggerSoundFireBurst;                            // 0x8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_34C7[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x1C (0xA4 - 0x88)
	// ScriptStruct Solarland.MultiHitResult
	struct FMultiHitResult : public FHitResult
	{
	public:
		uint8                                        Num;                                               // 0x88(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Seed;                                              // 0x89(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Mode;                                              // 0x8A(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_34C8[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		struct FVector_NetQuantize                   Start;                                             // 0x8C(0xC)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector_NetQuantize                   End;                                               // 0x98(0xC)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x10 (0x10 - 0x0)
	// ScriptStruct Solarland.ImpactDisplayInfo
	struct FImpactDisplayInfo
	{
	public:
		struct FVector                               Pos;                                               // 0x0(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        Scale;                                             // 0xC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x40 (0x40 - 0x0)
	// ScriptStruct Solarland.FireMode
	struct FFireMode
	{
	public:
		enum class EHoldActionType                   HoldAction;                                        // 0x0(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Index;                                             // 0x1(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_34C9[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		int32                                        AmmoReserve;                                       // 0x8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        AmmoCapacity;                                      // 0xC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        FireRateAccumulation;                              // 0x10(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        FireRateAccumulationBurstInterval;                 // 0x14(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_34CA[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
		class UParticleSystemComponent* ChargingEffect;                                    // 0x38(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x18 (0x18 - 0x0)
	// ScriptStruct Solarland.SolarBlackHoleTestActorInfo
	struct FSolarBlackHoleTestActorInfo
	{
	public:
		uint8                                        Pad_34CB[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x18 (0x18 - 0x0)
	// ScriptStruct Solarland.SolarBlackHoleParticleData
	struct FSolarBlackHoleParticleData
	{
	public:
		uint8                                        Pad_34CC[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x80 (0x80 - 0x0)
	// ScriptStruct Solarland.SolarBlackHoleParticleInfo
	struct FSolarBlackHoleParticleInfo
	{
	public:
		struct FSoftObjectPath                       ParticlePathForTeammate;                           // 0x0(0x18)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FSoftObjectPath                       ParticlePathForEnemy;                              // 0x18(0x18)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FTransform                            RelativeTransform;                                 // 0x30(0x30)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		bool                                         bAttachMode;                                       // 0x60(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_34CD[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class FName                                  AttachSocketName;                                  // 0x64(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class EAttachLocation                   AttachLocationType;                                // 0x6C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bAutoDestroy;                                      // 0x6D(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_34CE[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		float                                        Duration;                                          // 0x70(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class EPSCPoolMethod                    PoolMode;                                          // 0x74(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_34CF[0xB];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x48 (0x48 - 0x0)
	// ScriptStruct Solarland.WeaponFireLaserElement
	struct FWeaponFireLaserElement
	{
	public:
		uint8                                        Pad_34D0[0x38];                                    // Fixing Size After Last Property  [ Dumper-7 ]
		class UParticleSystemComponent* BeamEffect;                                        // 0x38(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_34D1[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x8 (0x8 - 0x0)
	// ScriptStruct Solarland.BulletContainerColor
	struct FBulletContainerColor
	{
	public:
		struct FColor                                Normal;                                            // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FColor                                Energy;                                            // 0x4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x1C (0x1C - 0x0)
	// ScriptStruct Solarland.SolarBulletContainerLayout
	struct FSolarBulletContainerLayout
	{
	public:
		struct FVector2D                             Offset;                                            // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        SpinAngle;                                         // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector2D                             Scale;                                             // 0xC(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector2D                             OneBulletSize;                                     // 0x14(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x10 (0x10 - 0x0)
	// ScriptStruct Solarland.SolarBulletWidgetState
	struct FSolarBulletWidgetState
	{
	public:
		class UWidget* BulletWidget;                                      // 0x0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bReloadState;                                      // 0x8(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_34D2[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x3C (0x3C - 0x0)
	// ScriptStruct Solarland.WeaponShotHitResult
	struct FWeaponShotHitResult
	{
	public:
		TWeakObjectPtr<class AActor>                 Actor;                                             // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector_NetQuantize                   Location;                                          // 0x8(0xC)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FName                                  BoneName;                                          // 0x14(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector_NetQuantizeNormal             ImpactNormal;                                      // 0x1C(0xC)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        bBlockingHit : 1;                                  // Mask: 0x1, PropSize: 0x10x28(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        BitPad_1F2 : 7;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
		uint8                                        Pad_34D3[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TWeakObjectPtr<class UPrimitiveComponent>    Component;                                         // 0x2C(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TWeakObjectPtr<class UPhysicalMaterial>      PhysMaterial;                                      // 0x34(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x50 (0x50 - 0x0)
	// ScriptStruct Solarland.SpawnProjParam
	struct FSpawnProjParam
	{
	public:
		struct FVector_NetQuantize                   Start;                                             // 0x0(0xC)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector                               Velocity;                                          // 0xC(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Mode;                                              // 0x18(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        CurRocketNum;                                      // 0x19(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        bTriggerAnim : 1;                                  // Mask: 0x1, PropSize: 0x10x1A(0x1)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        BitPad_1F3 : 7;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
		uint8                                        Pad_34D4[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		float                                        Scale;                                             // 0x1C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        SpeedScale;                                        // 0x20(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TWeakObjectPtr<class AActor>                 Target;                                            // 0x24(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint32                                       SpawnID;                                           // 0x2C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        Timestamp;                                         // 0x30(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TWeakObjectPtr<class ASolarPlayerController> InstigatorController;                              // 0x34(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector_NetQuantize                   RelativeLocation;                                  // 0x3C(0xC)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_34D5[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x20 (0x20 - 0x0)
	// ScriptStruct Solarland.AmmoExtraAbilityStruct
	struct FAmmoExtraAbilityStruct
	{
	public:
		TArray<TSubclassOf<class ASolarAbility>>     PrimaryExtraAbilies;                               // 0x0(0x10)(ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<TSubclassOf<class ASolarAbility>>     SecondaryExtraAbilies;                             // 0x10(0x10)(ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x18 (0x18 - 0x0)
	// ScriptStruct Solarland.OverrideBulletStruct
	struct FOverrideBulletStruct
	{
	public:
		TSubclassOf<class ASolarBullet>              PrimaryOverrideBulletClass;                        // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TSubclassOf<class ASolarBullet>              SecondaryOverrideBulletClass;                      // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TSubclassOf<class ASolarBullet>              PrimaryOverrideTraceBulletClass;                   // 0x10(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x4 (0x4 - 0x0)
	// ScriptStruct Solarland.WeaponDebugFlag
	struct FWeaponDebugFlag
	{
	public:
		bool                                         bIgnoreActivated;                                  // 0x0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bExtraInfo;                                        // 0x1(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bMechanicalState;                                  // 0x2(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bShowShootDir;                                     // 0x3(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x1C (0x1C - 0x0)
	// ScriptStruct Solarland.LocationEffectParam
	struct FLocationEffectParam
	{
	public:
		struct FRotator                              Rotation;                                          // 0x0(0xC)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		struct FVector                               Scale;                                             // 0xC(0xC)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bAutoDestroy;                                      // 0x18(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class EPSCPoolMethod                    PoolingMethod;                                     // 0x19(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bAutoActivateSystem;                               // 0x1A(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_34D6[0x1];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x28 (0x28 - 0x0)
	// ScriptStruct Solarland.AttachedEffectParam
	struct FAttachedEffectParam
	{
	public:
		struct FVector                               Location;                                          // 0x0(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FRotator                              Rotation;                                          // 0xC(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		struct FVector                               Scale;                                             // 0x18(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class EAttachLocation                   LocationType;                                      // 0x24(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bAutoDestroy;                                      // 0x25(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class EPSCPoolMethod                    PoolingMethod;                                     // 0x26(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bAutoActivate;                                     // 0x27(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x34 (0x34 - 0x0)
	// ScriptStruct Solarland.SpawnBulletParam
	struct FSpawnBulletParam
	{
	public:
		struct FVector                               Start;                                             // 0x0(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector                               Velocity;                                          // 0xC(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        SpeedScale;                                        // 0x18(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        Mode;                                              // 0x1C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         TriggerAnim;                                       // 0x20(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_34D7[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		float                                        Scale;                                             // 0x24(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        LastClipAmmo;                                      // 0x28(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        LastFireTime;                                      // 0x2C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bStartBlocked;                                     // 0x30(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_34D8[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x4C (0x4C - 0x0)
	// ScriptStruct Solarland.BulletHitDetailData
	struct FBulletHitDetailData
	{
	public:
		TWeakObjectPtr<class APawn>                  SourcePawn;                                        // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TWeakObjectPtr<class AActor>                 HitActor;                                          // 0x8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TWeakObjectPtr<class UPrimitiveComponent>    HitComponent;                                      // 0x10(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector                               HitActorLocation;                                  // 0x18(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector                               HitLocation;                                       // 0x24(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector                               HitNormal;                                         // 0x30(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FName                                  HitBone;                                           // 0x3C(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TWeakObjectPtr<class UPhysicalMaterial>      PhysMaterial;                                      // 0x44(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x50 (0x50 - 0x0)
	// ScriptStruct Solarland.MutiBulletHitData
	struct FMutiBulletHitData
	{
	public:
		struct FFireUniqueID                         FireUniqueID;                                      // 0x0(0x4)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int8                                         FireMode;                                          // 0x4(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int8                                         IsScopeOpen;                                       // 0x5(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bValidHit;                                         // 0x6(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_34D9[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		struct FVector                               StartLocation;                                     // 0x8(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector                               WeaponLocation;                                    // 0x14(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        ServerTimeSeconds;                                 // 0x20(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        DamageScale;                                       // 0x24(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        LastClipAmmo;                                      // 0x28(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        LastFireTime;                                      // 0x2C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<struct FSolarWeaponHitAntiData>       HitAntiDatas;                                      // 0x30(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<struct FBulletHitDetailData>          HitDetailDataArray;                                // 0x40(0x10)(ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0xC0 (0xC0 - 0x0)
	// ScriptStruct Solarland.BulletHitData
	struct FBulletHitData
	{
	public:
		struct FFireUniqueID                         FireUniqueID;                                      // 0x0(0x4)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int8                                         FireMode;                                          // 0x4(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bValidHit;                                         // 0x5(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_34DA[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		struct FVector                               StartLocation;                                     // 0x8(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector                               WeaponLocation;                                    // 0x14(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        ServerTimeSeconds;                                 // 0x20(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        DamageScale;                                       // 0x24(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        LastClipAmmo;                                      // 0x28(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        LastFireTime;                                      // 0x2C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FSolarWeaponHitAntiData               HitAntiData;                                       // 0x30(0x40)(NoDestructor, NativeAccessSpecifierPublic)
		struct FBulletHitDetailData                  HitDetailData;                                     // 0x70(0x4C)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
		uint8                                        Pad_34DB[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x1 (0x1 - 0x0)
	// ScriptStruct Solarland.WeaponHitResponse
	struct FWeaponHitResponse
	{
	public:
		uint8                                        bForceBlock : 1;                                   // Mask: 0x1, PropSize: 0x10x0(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        bForcePenetrate : 1;                               // Mask: 0x2, PropSize: 0x10x0(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        bAffectHalo : 1;                                   // Mask: 0x4, PropSize: 0x10x0(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        bTakeDamage : 1;                                   // Mask: 0x8, PropSize: 0x10x0(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        bShowExplode : 1;                                  // Mask: 0x10, PropSize: 0x10x0(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        bShowDecal : 1;                                    // Mask: 0x20, PropSize: 0x10x0(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        bPlaySound : 1;                                    // Mask: 0x40, PropSize: 0x10x0(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x30 (0x30 - 0x0)
	// ScriptStruct Solarland.WeaponAnimationInfo
	struct FWeaponAnimationInfo
	{
	public:
		struct FSoftObjectPath                       AssetPath;                                         // 0x0(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        PlayRate;                                          // 0x18(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bUseAdaptivePlayRate;                              // 0x1C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_34DC[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class UAnimMontage* Animation;                                         // 0x20(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class UAnimMontage* AnimOverride;                                      // 0x28(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x30 (0x30 - 0x0)
	// ScriptStruct Solarland.WeaponMergeMeshStruct
	struct FWeaponMergeMeshStruct
	{
	public:
		struct FGuid                                 Guid;                                              // 0x0(0x10)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        Weaponid;                                          // 0x10(0x4)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        SkinId;                                            // 0x14(0x4)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<int32>                                Parts;                                             // 0x18(0x10)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class USkeletalMesh* MergeMesh;                                         // 0x28(0x8)(Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x20 (0x20 - 0x0)
	// ScriptStruct Solarland.SolarWeaponPartEffectDesc
	struct FSolarWeaponPartEffectDesc
	{
	public:
		class FString                                EffectValue;                                       // 0x0(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        DescriptionLocalTextID;                            // 0x10(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        Priority;                                          // 0x14(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        PartID;                                            // 0x18(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        Weaponid;                                          // 0x1C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x10 (0x18 - 0x8)
	// ScriptStruct Solarland.SolarWeaponPartDescRow
	struct FSolarWeaponPartDescRow : public FTableRowBase
	{
	public:
		TArray<struct FSolarWeaponPartEffectDesc>    DescriptionArray;                                  // 0x8(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x18 (0x18 - 0x0)
	// ScriptStruct Solarland.SolarWeaponScopeFPPData
	struct FSolarWeaponScopeFPPData
	{
	public:
		struct FVector                               RelativeLocation;                                  // 0x0(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FRotator                              RelativeRotation;                                  // 0xC(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	};

	// 0x68 (0x68 - 0x0)
	// ScriptStruct Solarland.SolarWeaponScopeFPPConfig
	struct FSolarWeaponScopeFPPConfig
	{
	public:
		TMap<int32, struct FSolarWeaponScopeFPPData> ScopeFPPDataByWeaponSkinIDMap;                     // 0x0(0x50)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
		struct FSolarWeaponScopeFPPData              DefaultFPPDataForWeaponSkinID;                     // 0x50(0x18)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	};

	// 0x68 (0x68 - 0x0)
	// ScriptStruct Solarland.SolarWeaponFPPData
	struct FSolarWeaponFPPData
	{
	public:
		TMap<enum class EWeaponScopeType, struct FSolarWeaponScopeFPPConfig> ScopeFPPConfigByScopeTypeMap;                      // 0x0(0x50)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
		struct FSolarWeaponScopeFPPData              DefaultFPPDataForScopeType;                        // 0x50(0x18)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	};

	// 0x70 (0x70 - 0x0)
	// ScriptStruct Solarland.SolarWeaponFPPConfig
	struct FSolarWeaponFPPConfig
	{
	public:
		struct FRangeFloat                           AspectRatioRange;                                  // 0x0(0x8)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
		struct FSolarWeaponFPPData                   FPPData;                                           // 0x8(0x68)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	};

	// 0x270 (0x270 - 0x0)
	// ScriptStruct Solarland.WheelData
	struct FWheelData
	{
	public:
		bool                                         bIsPowered;                                        // 0x0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bIsPoweredInDrift;                                 // 0x1(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_34DD[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class FName                                  BoneName;                                          // 0x4(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector                               Offset;                                            // 0xC(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector                               WheelForceOffset;                                  // 0x18(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        Radius;                                            // 0x24(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        RadiusAfterBroken;                                 // 0x28(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        Width;                                             // 0x2C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        MaxRaise;                                          // 0x30(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        MaxDrop;                                           // 0x34(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        SpringStiffness;                                   // 0x38(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        DamperStiffness;                                   // 0x3C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        LaterialFriction;                                  // 0x40(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        LaterialFrictionAfterBroken;                       // 0x44(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        LaterialFrictionInDrift;                           // 0x48(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        DriftingLaterialFrictionLerpSpeed;                 // 0x4C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FRuntimeFloatCurve                    EndDriftFrictionCurve;                             // 0x50(0x88)(Edit, NativeAccessSpecifierPublic)
		uint8                                        Pad_34DE[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		struct FVehicleVFX                           DriftDecal;                                        // 0xE0(0x90)(Edit, NativeAccessSpecifierPublic)
		float                                        RollingFriction;                                   // 0x170(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        BrakeDeceleration;                                 // 0x174(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        DustEffectScale;                                   // 0x178(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        DustEffectScaleAfterBroken;                        // 0x17C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        DriftEffectScale;                                  // 0x180(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_34DF[0xDC];                                    // Fixing Size After Last Property  [ Dumper-7 ]
		class UParticleSystemComponent* RaiseDustParticleComponent;                        // 0x260(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class UParticleSystemComponent* DriftParticleComponent;                            // 0x268(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x18 (0x18 - 0x0)
	// ScriptStruct Solarland.GearSetting
	struct FGearSetting
	{
	public:
		float                                        MinSpeed;                                          // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        MaxSpeed;                                          // 0x4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        StartRpm;                                          // 0x8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        MaxRpm;                                            // 0xC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        RpmDescendSpeed;                                   // 0x10(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        MinDescendRPM;                                     // 0x14(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x1C (0x1C - 0x0)
	// ScriptStruct Solarland.GearData
	struct FGearData
	{
	public:
		uint8                                        Pad_34E0[0x1C];                                    // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x20 (0x20 - 0x0)
	// ScriptStruct Solarland.SolarVirtualInput
	struct FSolarVirtualInput
	{
	public:
		enum class EInputEventHandleType             InputBindType;                                     // 0x0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_34E1[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		struct FKey                                  VirtualKey;                                        // 0x8(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x30 (0x30 - 0x0)
	// ScriptStruct Solarland.SidesOfZiplineData
	struct FSidesOfZiplineData
	{
	public:
		struct FVector                               BeginningLocation;                                 // 0x0(0xC)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector                               ArrivingLocation;                                  // 0xC(0xC)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector                               LandingLocation;                                   // 0x18(0xC)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        ArrivingVelocity;                                  // 0x24(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bLandingAfterArriving;                             // 0x28(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_34E2[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		float                                        LandingVelocity;                                   // 0x2C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x74 (0x74 - 0x0)
	// ScriptStruct Solarland.ZiplineObjData
	struct FZiplineObjData
	{
	public:
		struct FSidesOfZiplineData                   ASideData;                                         // 0x0(0x30)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
		struct FSidesOfZiplineData                   BSideData;                                         // 0x30(0x30)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
		enum class EZiplineType                      ZiplineType;                                       // 0x60(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_34E3[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		float                                        CableCollisionScale;                               // 0x64(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bLookAtTarget;                                     // 0x68(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_34E4[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		float                                        SlidingVelocity;                                   // 0x6C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        CancelledVelocity;                                 // 0x70(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0xC (0x18 - 0xC)
	// ScriptStruct Solarland.SpatializeItem
	struct FSpatializeItem : public FFastArraySerializerItem
	{
	public:
		struct FVector                               Location;                                          // 0xC(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x28 (0x40 - 0x18)
	// ScriptStruct Solarland.TrackItem
	struct FTrackItem : public FSpatializeItem
	{
	public:
		float                                        Time;                                              // 0x18(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_34E5[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class FString                                PID;                                               // 0x20(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bValid;                                            // 0x30(0x1)(ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bProjected;                                        // 0x31(0x1)(ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_34E6[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		struct FVector                               FloorLocation;                                     // 0x34(0xC)(ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x28 (0x130 - 0x108)
	// ScriptStruct Solarland.TrackArray
	struct FTrackArray : public FFastArraySerializer
	{
	public:
		TArray<struct FTrackItem>                    Tracks;                                            // 0x108(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_34E7[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x20 (0x20 - 0x0)
	// ScriptStruct Solarland.SolarImageProgressInfo
	struct FSolarImageProgressInfo
	{
	public:
		enum class ESolarImageProgressType           ProgressType;                                      // 0x0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class ESolarImageProgressLineDirType    LineProgressDir;                                   // 0x1(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class ESolarImageProgressQuaterCirclePrivotType QuaterProgressPrivot;                              // 0x2(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class ESolarImageProgressHalfCirclePrivotType HalfProgressPrivot;                                // 0x3(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        CircleProgressInitDegree;                          // 0x4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bInvertProgressDir;                                // 0x8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_34E8[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		float                                        Progress;                                          // 0xC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class UMaterial* Material;                                          // 0x10(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class UMaterialInstanceDynamic* MaterialInstance;                                  // 0x18(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x18 (0x18 - 0x0)
	// ScriptStruct Solarland.PlatformParams
	struct FPlatformParams
	{
	public:
		int64                                        UserId;                                            // 0x0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                OpenId;                                            // 0x8(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x30 (0x30 - 0x0)
	// ScriptStruct Solarland.PlayerBattleRequestInfo
	struct FPlayerBattleRequestInfo
	{
	public:
		class FString                                NickName;                                          // 0x0(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        AccountLevel;                                      // 0x10(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_34E9[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		struct FPlatformParams                       PlatformParams;                                    // 0x18(0x18)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	};

	// 0x8 (0x8 - 0x0)
	// ScriptStruct Solarland.StartBattleRequestInfo
	struct FStartBattleRequestInfo
	{
	public:
		int32                                        AiNum;                                             // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        AILevel;                                           // 0x4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x10 (0x10 - 0x0)
	// ScriptStruct Solarland.SolarSummonSoundData
	struct FSolarSummonSoundData
	{
	public:
		TArray<class FString>                        SoundNames;                                        // 0x0(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x50 (0x50 - 0x0)
	// ScriptStruct Solarland.SplineMeshDetails
	struct FSplineMeshDetails
	{
	public:
		class UStaticMesh* Mesh;                                              // 0x0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class ESplineMeshAxis                   ForwardAxis;                                       // 0x8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_34EA[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class UMaterialInterface* FirstMaterial;                                     // 0x10(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class UMaterialInterface* SecondMaterial;                                    // 0x18(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector2D                             StartScale;                                        // 0x20(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        StartRoll;                                         // 0x28(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector2D                             StartOffset;                                       // 0x2C(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector2D                             EndScale;                                          // 0x34(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        EndRoll;                                           // 0x3C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector2D                             EndOffset;                                         // 0x40(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        TranslucencySortPriority;                          // 0x48(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_34EB[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x20 (0x20 - 0x0)
	// ScriptStruct Solarland.UITweenBaseStruct
	struct FUITweenBaseStruct
	{
	public:
		uint8                                        Pad_34EC[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		bool                                         IsValid;                                           // 0x8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class ETweenInterpolationType           InterpolationType;                                 // 0x9(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class EEasingFunc                       EaseType;                                          // 0xA(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_34ED[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class UCurveFloat* InterpolationCurve;                                // 0x10(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class UWidget* Widget;                                            // 0x18(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	};

	// 0x28 (0x48 - 0x20)
	// ScriptStruct Solarland.TextColorTween
	struct FTextColorTween : public FUITweenBaseStruct
	{
	public:
		struct FLinearColor                          Original;                                          // 0x20(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FLinearColor                          TargetColor;                                       // 0x30(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class UTextBlock* TargetText;                                        // 0x40(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	};

	// 0x28 (0x48 - 0x20)
	// ScriptStruct Solarland.ImageColorTween
	struct FImageColorTween : public FUITweenBaseStruct
	{
	public:
		struct FLinearColor                          Original;                                          // 0x20(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FLinearColor                          TargetColor;                                       // 0x30(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class UImage* Image;                                             // 0x40(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	};

	// 0x8 (0x28 - 0x20)
	// ScriptStruct Solarland.UIRenderOpacityTween
	struct FUIRenderOpacityTween : public FUITweenBaseStruct
	{
	public:
		float                                        OriginalOpacity;                                   // 0x20(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        TargetOpacity;                                     // 0x24(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x20 (0x40 - 0x20)
	// ScriptStruct Solarland.UIPositionTween
	struct FUIPositionTween : public FUITweenBaseStruct
	{
	public:
		struct FVector2D                             OriginalPosition;                                  // 0x20(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector2D                             TargetPosition;                                    // 0x28(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bHandleAsRelativeChange;                           // 0x30(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_34EE[0xF];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x20 (0x40 - 0x20)
	// ScriptStruct Solarland.UIScaleTween
	struct FUIScaleTween : public FUITweenBaseStruct
	{
	public:
		struct FVector2D                             OriginalScale;                                     // 0x20(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector2D                             TargetScale;                                       // 0x28(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bHandleAsMultiplier;                               // 0x30(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_34EF[0xF];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x30 (0x30 - 0x0)
	// ScriptStruct Solarland.NoticeColorData
	struct FNoticeColorData
	{
	public:
		struct FLinearColor                          TextBg;                                            // 0x0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FLinearColor                          IconBg;                                            // 0x10(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FLinearColor                          Icon;                                              // 0x20(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0xA0 (0xA0 - 0x0)
	// ScriptStruct Solarland.NoticeData
	struct FNoticeData
	{
	public:
		int32                                        NoticeId;                                          // 0x0(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class ECustomNoticeType                 NoticeType;                                        // 0x4(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_34F0[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		float                                        ConfigShowTime;                                    // 0x8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        Duration;                                          // 0xC(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                NoticeText;                                        // 0x10(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class ECustomNoticeColor                NoticeColor;                                       // 0x20(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_34F1[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class FString                                NoticeClassPath;                                   // 0x28(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                NoticeIconPath;                                    // 0x38(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TWeakObjectPtr<class UUINoticeBase>          NoticeWidget;                                      // 0x48(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TMap<class FString, class FString>           Param;                                             // 0x50(0x50)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	};

	// 0x30 (0x30 - 0x0)
	// ScriptStruct Solarland.OBTeamColor
	struct FOBTeamColor
	{
	public:
		class FString                                Desc;                                              // 0x0(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FLinearColor                          Main;                                              // 0x10(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FLinearColor                          Vice;                                              // 0x20(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x88 (0x88 - 0x0)
	// ScriptStruct Solarland.ItemQualityData
	struct FItemQualityData
	{
	public:
		struct FLinearColor                          BaseColor;                                         // 0x0(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FLinearColor                          HUDColor;                                          // 0x10(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FLinearColor                          HighQualityColor;                                  // 0x20(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FLinearColor                          LowQualityColor;                                   // 0x30(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FLinearColor                          HUDBGColor;                                        // 0x40(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FLinearColor                          HUDDecorateColor;                                  // 0x50(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FSoftObjectPath                       QualityIcon;                                       // 0x60(0x18)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                QualityChar;                                       // 0x78(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x20 (0x20 - 0x0)
	// ScriptStruct Solarland.TeamMemberColor
	struct FTeamMemberColor
	{
	public:
		struct FLinearColor                          Main;                                              // 0x0(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FLinearColor                          Vice;                                              // 0x10(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x18 (0x18 - 0x0)
	// ScriptStruct Solarland.DestroyObjectEntry
	struct FDestroyObjectEntry
	{
	public:
		class UObject* Object;                                            // 0x0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                FullPath;                                          // 0x8(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x28 (0x28 - 0x0)
	// ScriptStruct Solarland.DestroyObjectStruct
	struct FDestroyObjectStruct
	{
	public:
		class UUserWidget* RootWidget;                                        // 0x0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FString                                FullPath;                                          // 0x8(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<struct FDestroyObjectEntry>           Objects;                                           // 0x18(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x90 (0x98 - 0x8)
	// ScriptStruct Solarland.CustomWidget_TableRow
	struct FCustomWidget_TableRow : public FTableRowBase
	{
	public:
		struct FSoftObjectPath                       TeammateState;                                     // 0x8(0x18)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FSoftObjectPath                       BattleScore;                                       // 0x20(0x18)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FSoftObjectPath                       SpectatorListPath;                                 // 0x38(0x18)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FSoftObjectPath                       SafeAreaProgress;                                  // 0x50(0x18)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FSoftObjectPath                       JobEffectListPath;                                 // 0x68(0x18)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FSoftObjectPath                       JobEffectSelectPanelPath;                          // 0x80(0x18)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x18 (0x18 - 0x0)
	// ScriptStruct Solarland.KillTotalNoticeWidget
	struct FKillTotalNoticeWidget
	{
	public:
		TArray<class UImage*>                        Img_KillTotals;                                    // 0x0(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class USolarTextBlock* Txt_KillTotal;                                     // 0x10(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x38 (0x38 - 0x0)
	// ScriptStruct Solarland.UIPanelConfigEntry
	struct FUIPanelConfigEntry
	{
	public:
		struct FSoftClassPath                        MobileUIPath;                                      // 0x0(0x18)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FSoftClassPath                        DesktopUIPath;                                     // 0x18(0x18)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class EUIRoot                           UILayerRoot;                                       // 0x30(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bPrecache;                                         // 0x31(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_34F2[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x4 (0x4 - 0x0)
	// ScriptStruct Solarland.InteractionButtonSpec
	struct FInteractionButtonSpec
	{
	public:
		int32                                        Priority;                                          // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x88 (0x88 - 0x0)
	// ScriptStruct Solarland.StarterUIInfo
	struct FStarterUIInfo
	{
	public:
		uint8                                        Pad_34F3[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
		TSubclassOf<class UUserWidget>               UIClass;                                           // 0x10(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TSoftClassPtr<class UUserWidget>             MobileUIClass;                                     // 0x18(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TSoftClassPtr<class UUserWidget>             DesktopUIClass;                                    // 0x40(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bCreateForEachDisplay;                             // 0x68(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_34F4[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		int32                                        OrderFromTopOverride;                              // 0x6C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bFullScreen;                                       // 0x70(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_34F5[0x17];                                    // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x80 (0x80 - 0x0)
	// ScriptStruct Solarland.LruWidgetPool
	struct FLruWidgetPool
	{
	public:
		uint8                                        Pad_34F6[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		TArray<class UUserWidget*>                   ActiveWidgetStack;                                 // 0x8(0x10)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		uint8                                        Pad_34F7[0x68];                                    // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x2 (0x2 - 0x0)
	// ScriptStruct Solarland.SolarVehicleSkinPreviewPageInfo
	struct FSolarVehicleSkinPreviewPageInfo
	{
	public:
		bool                                         bMirror;                                           // 0x0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bChangeAnim;                                       // 0x1(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0xC0 (0xC0 - 0x0)
	// ScriptStruct Solarland.SolarVehicleSkinPreviewMeshInfo
	struct FSolarVehicleSkinPreviewMeshInfo
	{
	public:
		class USkeletalMesh* Mesh;                                              // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_34F8[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		struct FTransform                            Transform;                                         // 0x10(0x30)(Edit, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
		class UAnimationAsset* AnimToPlay;                                        // 0x40(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class UAnimationAsset* PageAnimToPlay[0xA];                               // 0x48(0x50)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<class UMaterialInterface*>            OverrideMaterials;                                 // 0x98(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class FName                                  SocketName;                                        // 0xA8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<float>                                CustomData;                                        // 0xB0(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x8 (0x80 - 0x78)
	// ScriptStruct Solarland.VehicleStateAir
	struct FVehicleStateAir : public FVehicleState
	{
	public:
		uint8                                        Pad_34F9[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x0 (0x18 - 0x18)
	// ScriptStruct Solarland.VehicleAirToGround
	struct FVehicleAirToGround : public FVehicleStateTransition
	{
	public:
	};

	// 0x18 (0x90 - 0x78)
	// ScriptStruct Solarland.VehicleStateGround
	struct FVehicleStateGround : public FVehicleState
	{
	public:
		uint8                                        Pad_34FA[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x0 (0x18 - 0x18)
	// ScriptStruct Solarland.VehicleGroundToSliding
	struct FVehicleGroundToSliding : public FVehicleStateTransition
	{
	public:
	};

	// 0x0 (0x78 - 0x78)
	// ScriptStruct Solarland.VehicleStateSliding
	struct FVehicleStateSliding : public FVehicleState
	{
	public:
	};

	// 0x0 (0x18 - 0x18)
	// ScriptStruct Solarland.VehicleSlidingToGround
	struct FVehicleSlidingToGround : public FVehicleStateTransition
	{
	public:
	};

	// 0xA0 (0xA0 - 0x0)
	// ScriptStruct Solarland.StealthMaterialParams
	struct FStealthMaterialParams
	{
	public:
		TMap<class FName, float>                     ScalarParams;                                      // 0x0(0x50)(Edit, NativeAccessSpecifierPublic)
		TMap<class FName, struct FLinearColor>       VectorParams;                                      // 0x50(0x50)(Edit, NativeAccessSpecifierPublic)
	};

	// 0x24 (0x24 - 0x0)
	// ScriptStruct Solarland.VehicleWeaponCrossHairInfo
	struct FVehicleWeaponCrossHairInfo
	{
	public:
		bool                                         bShowCrossHair;                                    // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_34FB[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		struct FVector2D                             CrossHairPosition;                                 // 0x4(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        CrossHairOpacity;                                  // 0xC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bShowReticleDirection;                             // 0x10(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_34FC[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		struct FVector2D                             ReticleDirectionPosition;                          // 0x14(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        ReticleDirectionAngle;                             // 0x1C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bCrossHairForbid;                                  // 0x20(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_34FD[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x10 (0x10 - 0x0)
	// ScriptStruct Solarland.VertexAnimInfo
	struct FVertexAnimInfo
	{
	public:
		int32                                        StartFrame;                                        // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        EndFrame;                                          // 0x4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        Length;                                            // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         Loop;                                              // 0xC(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_34FE[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x18 (0x20 - 0x8)
	// ScriptStruct Solarland.VibrateDataDTRow
	struct FVibrateDataDTRow : public FTableRowBase
	{
	public:
		struct FSoftObjectPath                       ClipPath;                                          // 0x8(0x18)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x50 (0x50 - 0x0)
	// ScriptStruct Solarland.VisualSoundData
	struct FVisualSoundData
	{
	public:
		struct FGameplayTagContainer                 RequiedTagsAny;                                    // 0x0(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
		struct FGameplayTagContainer                 LosingTagsAny;                                     // 0x20(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
		float                                        DetectionDis;                                      // 0x40(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        AliveTime;                                         // 0x44(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        CanBreakTime;                                      // 0x48(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_34FF[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0xF0 (0xF0 - 0x0)
	// ScriptStruct Solarland.SolarWeaponAbilityData
	struct FSolarWeaponAbilityData
	{
	public:
		TArray<TSubclassOf<class ASolarAbility>>     AblitiyClassList;                                  // 0x0(0x10)(ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TWeakObjectPtr<class AActor>                 AblitiyOwner;                                      // 0x10(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FHitResult                            HitResult;                                         // 0x18(0x88)(IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
		class FString                                ExtraData;                                         // 0xA0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3500[0x40];                                    // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x8 (0x8 - 0x0)
	// ScriptStruct Solarland.AnimMsgData
	struct FAnimMsgData
	{
	public:
		enum class EWeaponAnimState                  State;                                             // 0x0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3501[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		float                                        Speed;                                             // 0x4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x58 (0x58 - 0x0)
	// ScriptStruct Solarland.WeaponAssistAimByCharacterTag
	struct FWeaponAssistAimByCharacterTag
	{
	public:
		struct FGameplayTagRequirements              TagRequirements;                                   // 0x0(0x50)(Edit, NativeAccessSpecifierPublic)
		class UWeaponAssistAimWeaponConfig* AssistAimConfig;                                   // 0x50(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x60 (0x60 - 0x0)
	// ScriptStruct Solarland.WeaponAssistAimWeaponConfigAll
	struct FWeaponAssistAimWeaponConfigAll
	{
	public:
		class UWeaponAssistAimWeaponConfig* DefaultConfig;                                     // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class UWeaponAssistAimWeaponConfig* DefaultScopeConfig;                                // 0x8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TMap<enum class EWeaponScopeType, class UWeaponAssistAimWeaponConfig*> ScopeConfigMap;                                    // 0x10(0x50)(Edit, NativeAccessSpecifierPublic)
	};

	// 0xE8 (0xE8 - 0x0)
	// ScriptStruct Solarland.BaseFollowSpeedByTag
	struct FBaseFollowSpeedByTag
	{
	public:
		struct FGameplayTagRequirements              TagRequirements;                                   // 0x0(0x50)(Edit, NativeAccessSpecifierPublic)
		float                                        SameTargetTriggerCooldown;                         // 0x50(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        HorizontalSpeed;                                   // 0x54(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        VerticalSpeed;                                     // 0x58(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3502[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		struct FRuntimeFloatCurve                    SpeedScaleByDistanceCurve;                         // 0x60(0x88)(Edit, NativeAccessSpecifierPublic)
	};

	// 0x8 (0x8 - 0x0)
	// ScriptStruct Solarland.SolarWeaponLODData
	struct FSolarWeaponLODData
	{
	public:
		int32                                        ForcedLOD;                                         // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        MinLOD;                                            // 0x4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x140 (0x148 - 0x8)
	// ScriptStruct Solarland.SolarWeaponLODTableRow
	struct FSolarWeaponLODTableRow : public FTableRowBase
	{
	public:
		TMap<enum class ESolarWeaponLODState, struct FSolarWeaponLODData> WeaponDefaultLODMap;                               // 0x8(0x50)(Edit, NativeAccessSpecifierPublic)
		TMap<enum class ESolarWeaponLODState, struct FSolarWeaponLODData> WeaponFocusedLODMap;                               // 0x58(0x50)(Edit, NativeAccessSpecifierPublic)
		TMap<enum class ESolarWeaponLODState, struct FSolarWeaponLODData> WeaponPartDefaultLODMap;                           // 0xA8(0x50)(Edit, NativeAccessSpecifierPublic)
		TMap<enum class ESolarWeaponLODState, struct FSolarWeaponLODData> WeaponPartFocusedLODMap;                           // 0xF8(0x50)(Edit, NativeAccessSpecifierPublic)
	};

	// 0x18 (0x20 - 0x8)
	// ScriptStruct Solarland.SolarWeaponSkinTableRow
	struct FSolarWeaponSkinTableRow : public FTableRowBase
	{
	public:
		struct FSoftObjectPath                       WeaponSkinDataPath;                                // 0x8(0x18)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x40 (0x48 - 0x8)
	// ScriptStruct Solarland.WeaponScopeSensitivityRow
	struct FWeaponScopeSensitivityRow : public FTableRowBase
	{
	public:
		class FName                                  TypeName;                                          // 0x8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        FovValue;                                          // 0x10(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        HipToAdsTime;                                      // 0x14(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TSoftObjectPtr<class UCurveFloat>            FovChangeCurve;                                    // 0x18(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        HitEffectScale;                                    // 0x40(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3503[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x1A8 (0x1B0 - 0x8)
	// ScriptStruct Solarland.WeaponAppearanceDTRow
	struct FWeaponAppearanceDTRow : public FTableRowBase
	{
	public:
		struct FSoftObjectPath                       MeshPath;                                          // 0x8(0x18)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FSoftObjectPath                       MaterialPath;                                      // 0x20(0x18)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class EWeaponType                       WPType;                                            // 0x38(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3504[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		int32                                        FireModeNameLocalizationID;                        // 0x3C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FSlateBrush                           TriggerIcon;                                       // 0x40(0x98)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
		int32                                        UpgradeFireModeNameLocalizationID;                 // 0xD8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3505[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		struct FSlateBrush                           UpgradeTriggerIcon;                                // 0xE0(0x98)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
		float                                        Radius;                                            // 0x178(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3506[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		struct FTransform                            SphereTransform;                                   // 0x180(0x30)(Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	};

	// 0x48 (0x50 - 0x8)
	// ScriptStruct Solarland.WeaponDTRow
	struct FWeaponDTRow : public FTableRowBase
	{
	public:
		class FString                                WeaponDesc;                                        // 0x8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FSoftClassPath                        FightWeaponBPPath;                                 // 0x18(0x18)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FSoftClassPath                        PreviewWeaponBPPath;                               // 0x30(0x18)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class USingleWeaponConfig* WeaponConfig;                                      // 0x48(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x40 (0x40 - 0x0)
	// ScriptStruct Solarland.WeaponFireTPPAnimUtility
	struct FWeaponFireTPPAnimUtility
	{
	public:
		uint8                                        Pad_3507[0x40];                                    // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0xC8 (0xC8 - 0x0)
	// ScriptStruct Solarland.WeaponFireFPPAnimUtility
	struct FWeaponFireFPPAnimUtility
	{
	public:
		uint8                                        Pad_3508[0xC8];                                    // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x28 (0x28 - 0x0)
	// ScriptStruct Solarland.WeaponFireTPPAnimConfig
	struct FWeaponFireTPPAnimConfig
	{
	public:
		float                                        SingleFirePulse;                                   // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        SingleStiffnessCoefficient;                        // 0x4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        LoopFirePulse;                                     // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        LoopStiffnessCoefficient;                          // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        RecoverSpeed;                                      // 0x10(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        BlendSpaceScale;                                   // 0x14(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class UBlendSpace* BlendSpace;                                        // 0x18(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3509[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x70 (0x70 - 0x0)
	// ScriptStruct Solarland.WeaponFireFPPAnimConfig
	struct FWeaponFireFPPAnimConfig
	{
	public:
		float                                        SingleFireStraightPulse;                           // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        SingleStiffnessCoefficient;                        // 0x4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        SingleFireBackwardOffset;                          // 0x8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        LoopFireStraightPulse;                             // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        LoopStiffnessCoefficient;                          // 0x10(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        LoopFireBackwardOffset;                            // 0x14(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class UCurveFloat* StraightStiffnessCurve;                            // 0x18(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        StraightRecoverSpeed;                              // 0x20(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector                               ShakePivotOffset;                                  // 0x24(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<struct FVector2D>                     ShakeOffsets;                                      // 0x30(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<struct FRotator>                      ShakeRotations;                                    // 0x40(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         bNeedEndShake;                                     // 0x50(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_350A[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class UCurveVector* EndShakeOffsetCurve;                               // 0x58(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class UCurveVector* EndShakeRotateCurve;                               // 0x60(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_350B[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x30 (0x30 - 0x0)
	// ScriptStruct Solarland.WeaponSkinExtraPS
	struct FWeaponSkinExtraPS
	{
	public:
		bool                                         bStimulatedShow;                                   // 0x0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_350C[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class FName                                  Socket;                                            // 0x4(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_350D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class UParticleSystem* PS;                                                // 0x10(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FSoftObjectPath                       PSPath;                                            // 0x18(0x18)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0xB0 (0xB0 - 0x0)
	// ScriptStruct Solarland.WeaponBodyData
	struct FWeaponBodyData
	{
	public:
		int32                                        Weaponid;                                          // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_350E[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		struct FSoftObjectPath                       WeaponMesh;                                        // 0x8(0x18)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TSubclassOf<class UWeaponAnimInstance>       WeaponAnimBP;                                      // 0x20(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TMap<enum class ECharacterMontage, struct FSoftObjectPath> OverrideWeaponAnimSequenceMap;                     // 0x28(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
		struct FSoftObjectPath                       LodpMesh;                                          // 0x78(0x18)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<struct FSoftObjectPath>               WeaponMaterials;                                   // 0x90(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<struct FWeaponSkinExtraPS>            SkinPSArray;                                       // 0xA0(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x40 (0x40 - 0x0)
	// ScriptStruct Solarland.WeaponSkinPartData
	struct FWeaponSkinPartData
	{
	public:
		int32                                        WeaponPartId;                                      // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_350F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class FString                                WeaponPartDesc;                                    // 0x8(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FSoftObjectPath                       PartDataAsset;                                     // 0x18(0x18)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<struct FSoftObjectPath>               WeaponMaterials;                                   // 0x30(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x50 (0x50 - 0x0)
	// ScriptStruct Solarland.WeaponMechanicalState
	struct FWeaponMechanicalState
	{
	public:
		enum class EWeaponMechanicalUniqueState      UniqueState;                                       // 0x0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		uint8                                        Pad_3510[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		enum class EWeaponMechanicalSideFlag         SideFlags;                                         // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		uint8                                        Pad_3511[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class ASolarWeapon* Weapon;                                            // 0x10(0x8)(ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		class USingleWeaponConfig* Config;                                            // 0x18(0x8)(ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
		uint8                                        Pad_3512[0x30];                                    // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x14 (0x14 - 0x0)
	// ScriptStruct Solarland.WeaponPartsData
	struct FWeaponPartsData
	{
	public:
		int32                                        ScopeId;                                           // 0x0(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        GripID;                                            // 0x4(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        GunStockID;                                        // 0x8(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        MuzzleID;                                          // 0xC(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        ClipID;                                            // 0x10(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0xB8 (0xB8 - 0x0)
	// ScriptStruct Solarland.UpgradeSlotStruct
	struct FUpgradeSlotStruct
	{
	public:
		int32                                        SlotID;                                            // 0x0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		bool                                         Unlock;                                            // 0x4(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class EWeaponUpgradeType                AccessoryType;                                     // 0x5(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3513[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		int32                                        AccessoryID;                                       // 0x8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3514[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		struct FSlateBrush                           IconOverride;                                      // 0x10(0x98)(BlueprintVisible, BlueprintReadOnly, Transient, RepSkip, NativeAccessSpecifierPublic)
		struct FLinearColor                          IconColorOverride;                                 // 0xA8(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x20 (0x20 - 0x0)
	// ScriptStruct Solarland.WeaponUpgradeNetData
	struct FWeaponUpgradeNetData
	{
	public:
		int32                                        TotalScore;                                        // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        LevelScore;                                        // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<struct FUpgradeSlotStruct>            UpgradeSlots;                                      // 0x8(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        UpgradeCount;                                      // 0x18(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3515[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x8 (0x8 - 0x0)
	// ScriptStruct Solarland.WeaponAttributeParam
	struct FWeaponAttributeParam
	{
	public:
		enum class EWeaponAttributeParamType         ParamType;                                         // 0x0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3516[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		float                                        Value;                                             // 0x4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x18 (0x18 - 0x0)
	// ScriptStruct Solarland.WeaponAttributeModifier
	struct FWeaponAttributeModifier
	{
	public:
		struct FGameplayTag                          AttributeTag;                                      // 0x0(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		TArray<struct FWeaponAttributeParam>         Modifiers;                                         // 0x8(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x10 (0x10 - 0x0)
	// ScriptStruct Solarland.WeaponAttributeModifierContainer
	struct FWeaponAttributeModifierContainer
	{
	public:
		TArray<struct FWeaponAttributeModifier>      Modifiers;                                         // 0x0(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x18 (0x18 - 0x0)
	// ScriptStruct Solarland.WeaponPartWeaponAttributeByWeaponID
	struct FWeaponPartWeaponAttributeByWeaponID
	{
	public:
		int32                                        Weaponid;                                          // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3517[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		struct FWeaponAttributeModifierContainer     AttributeModifiers;                                // 0x8(0x10)(Edit, NativeAccessSpecifierPublic)
	};

	// 0x28 (0x28 - 0x0)
	// ScriptStruct Solarland.WeaponPartWeaponAttributeByWeaponType
	struct FWeaponPartWeaponAttributeByWeaponType
	{
	public:
		enum class EWeaponType                       WeaponType;                                        // 0x0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3518[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		struct FWeaponAttributeModifierContainer     AttributeModifiers;                                // 0x8(0x10)(Edit, NativeAccessSpecifierPublic)
		TArray<struct FWeaponPartWeaponAttributeByWeaponID> ModifiersByWeaponID;                               // 0x18(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x138 (0x138 - 0x0)
	// ScriptStruct Solarland.WeaponPartGripDataForCharacter
	struct FWeaponPartGripDataForCharacter
	{
	public:
		struct FVector                               LeftHandIkEffectLocation;                          // 0x0(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector                               LeftHandIkJointLocation;                           // 0xC(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector                               LeftHandIkJointLocationForGunIdle;                 // 0x18(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector                               LeftHandIkJointLocationForGunIdleWhenCrouch;       // 0x24(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FLeftHandGripConfig                   LeftHandGripRotationConfig;                        // 0x30(0x84)(Edit, NoDestructor, NativeAccessSpecifierPublic)
		struct FLeftHandGripConfig                   LeftHandGripRotationConfigForGunIdle;              // 0xB4(0x84)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	};

	// 0x48 (0x48 - 0x0)
	// ScriptStruct Solarland.SolarAmmoMeshData
	struct FSolarAmmoMeshData
	{
	public:
		int32                                        MaterialIndex;                                     // 0x0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FLinearColor                          DefaultColor;                                      // 0x4(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FLinearColor                          WarningColor;                                      // 0x14(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FLinearColor                          SeriousWarningColor;                               // 0x24(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        WarningLine;                                       // 0x34(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        SeriousWarningLine;                                // 0x38(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        SeriousWarningBlinkLine;                           // 0x3C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        SeriousWarningBlinkStrength;                       // 0x40(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        SeriousWarningBlinkFrequence;                      // 0x44(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x18 (0x18 - 0x0)
	// ScriptStruct Solarland.PartScopeCorrect
	struct FPartScopeCorrect
	{
	public:
		struct FVector                               FPPLocation;                                       // 0x0(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FRotator                              FPPRotation;                                       // 0xC(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	};

	// 0x18 (0x18 - 0x0)
	// ScriptStruct Solarland.ValueCurveBySprayingTime
	struct FValueCurveBySprayingTime
	{
	public:
		class UCurveVector* ValueCurve;                                        // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        TimeScale;                                         // 0x8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FVector                               ValueScale;                                        // 0xC(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x10 (0x10 - 0x0)
	// ScriptStruct Solarland.FixedSectionInfo
	struct FFixedSectionInfo
	{
	public:
		int32                                        SprayingCount;                                     // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3519[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class UWeaponRecoilValueGenerator* ValueGenerator;                                    // 0x8(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x18 (0x18 - 0x0)
	// ScriptStruct Solarland.WeaponRecoilRotatorGenerator
	struct FWeaponRecoilRotatorGenerator
	{
	public:
		class UWeaponRecoilValueGenerator* PitchGenerator;                                    // 0x0(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class UWeaponRecoilValueGenerator* YawGenerator;                                      // 0x8(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class UWeaponRecoilValueGenerator* RollGenerator;                                     // 0x10(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x18 (0x18 - 0x0)
	// ScriptStruct Solarland.WeaponRecoilVectorGenerator
	struct FWeaponRecoilVectorGenerator
	{
	public:
		class UWeaponRecoilValueGenerator* XGenerator;                                        // 0x0(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class UWeaponRecoilValueGenerator* YGenerator;                                        // 0x8(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class UWeaponRecoilValueGenerator* ZGenerator;                                        // 0x10(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x28 (0x28 - 0x0)
	// ScriptStruct Solarland.ScopeSliderData
	struct FScopeSliderData
	{
	public:
		struct FVector2D                             SliderPercentRange;                                // 0x0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        SliderAnimeTimer;                                  // 0x8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class EVehicleWeaponScopeType           ScopeMagnifier;                                    // 0xC(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_351A[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		class FText                                  DisplayText;                                       // 0x10(0x18)(Edit, NativeAccessSpecifierPublic)
	};

	// 0x10 (0x10 - 0x0)
	// ScriptStruct Solarland.CrossHairShootConfig
	struct FCrossHairShootConfig
	{
	public:
		float                                        GunKickOffsetInheritRatio;                         // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        SkewOffsetInheritRatio;                            // 0x4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		class URecoverableRecoilPattern* CrossHairKickPattern;                              // 0x8(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x90 (0x90 - 0x0)
	// ScriptStruct Solarland.WeaponSkewAdjustment
	struct FWeaponSkewAdjustment
	{
	public:
		enum class EWeaponSkewInputType              InputType;                                         // 0x0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		enum class EWeaponSkewAdjustmentType         AdjustmentType;                                    // 0x1(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_351B[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		struct FRuntimeFloatCurve                    AdjustmentCurve;                                   // 0x8(0x88)(Edit, NativeAccessSpecifierPublic)
	};

	// 0x18 (0x18 - 0x0)
	// ScriptStruct Solarland.GunKickScale
	struct FGunKickScale
	{
	public:
		float                                        XOffsetScale;                                      // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        YOffsetScale;                                      // 0x4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        ZOffsetScale;                                      // 0x8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        PitchScale;                                        // 0xC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        YawScale;                                          // 0x10(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        RollScale;                                         // 0x14(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x50 (0x60 - 0x10)
	// ScriptStruct Solarland.WeaponAttributeModifiersByTag
	struct FWeaponAttributeModifiersByTag : public FWeaponAttributeModifierContainer
	{
	public:
		struct FGameplayTagRequirements              TagRequirements;                                   // 0x10(0x50)(Edit, NativeAccessSpecifierPublic)
	};

	// 0x14 (0x14 - 0x0)
	// ScriptStruct Solarland.SpreadScaleIncrease
	struct FSpreadScaleIncrease
	{
	public:
		int32                                        SprayingCount;                                     // 0x0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        MinSpreadScale;                                    // 0x4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		float                                        MaxSpreadScale;                                    // 0x8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		struct FRangeFloat                           ScaleIncreaseRange;                                // 0xC(0x8)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	};

	// 0x8 (0x8 - 0x0)
	// ScriptStruct Solarland.WeaponAction
	struct FWeaponAction
	{
	public:
		int32                                        ActionCount;                                       // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		int32                                        ActionParameter;                                   // 0x4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

	// 0x50 (0x50 - 0x0)
	// ScriptStruct Solarland.WeaponSystemInteract
	struct FWeaponSystemInteract
	{
	public:
		uint8                                        Pad_351C[0x50];                                    // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x14 (0x14 - 0x0)
	// ScriptStruct Solarland.WeaponSysBolt
	struct FWeaponSysBolt
	{
	public:
		uint8                                        Pad_351D[0x14];                                    // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x3 (0x3 - 0x0)
	// ScriptStruct Solarland.WeaponSysInput
	struct FWeaponSysInput
	{
	public:
		uint8                                        Pad_351E[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x10 (0x10 - 0x0)
	// ScriptStruct Solarland.WeaponSysStateStruct
	struct FWeaponSysStateStruct
	{
	public:
		int32                                        State;                                             // 0x0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_351F[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		bool                                         bPost;                                             // 0xC(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3520[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]
	};

	// 0x0 (0x10 - 0x10)
	// ScriptStruct Solarland.WeaponSysPostStateStruct
	struct FWeaponSysPostStateStruct : public FWeaponSysStateStruct
	{
	public:
	};

	// 0x8 (0x10 - 0x8)
	// ScriptStruct Solarland.WeaponUIStyleSheetRow
	struct FWeaponUIStyleSheetRow : public FTableRowBase
	{
	public:
		bool                                         bSameQualityPlus;                                  // 0x8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
		uint8                                        Pad_3521[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
		int32                                        Quality;                                           // 0xC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	};

}


