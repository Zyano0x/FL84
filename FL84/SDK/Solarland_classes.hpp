#pragma once

// Dumped with Dumper-7!


namespace SDK
{
//---------------------------------------------------------------------------------------------------------------------
// CLASSES
//---------------------------------------------------------------------------------------------------------------------

// 0x10 (0x238 - 0x228)
// Class Solarland.3DMeshWidget
class AThreeDMeshWidget : public AActor
{
public:
	class USceneComponent*                       DefaultSceneRoot;                                  // 0x228(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  StaticMeshComp;                                    // 0x230(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class AThreeDMeshWidget* GetDefaultObj();

};

// 0xA0 (0x2D8 - 0x238)
// Class Solarland.3DMeshWidgetTrack
class AThreeDMeshWidgetTrack : public AThreeDMeshWidget
{
public:
	uint8                                        Pad_1198[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               BoxHalfExtent;                                     // 0x240(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PlayerNearbyAlpha;                                 // 0x24C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDebugCollision;                                   // 0x250(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1199[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  MaterialAlphaParamName;                            // 0x254(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  MaterialCountDownName;                             // 0x25C(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxTraceDist;                                      // 0x264(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DistFromGround;                                    // 0x268(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_119B[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UStaticMeshComponent*                  StaticMeshCountDown;                               // 0x270(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextRenderComponent*                  DistTextComp;                                      // 0x278(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstanceDynamic*              DynamicMaterialIcon;                               // 0x280(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMaterialInstanceDynamic*              DynamicMaterialCountDown;                          // 0x288(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMaterialInstanceDynamic*              DynamicMaterialDistText;                           // 0x290(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_119E[0x40];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AThreeDMeshWidgetTrack* GetDefaultObj();

};

// 0xC8 (0x148 - 0x80)
// Class Solarland.AbilityTask_WaitAbilityEnd
class UAbilityTask_WaitAbilityEnd : public UAbilityTask
{
public:
	FMulticastInlineDelegateProperty_            OnEnd;                                             // 0x80(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_11B5[0xB8];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAbilityTask_WaitAbilityEnd* GetDefaultObj();

	class UAbilityTask_WaitAbilityEnd* WaitForAbilityEndWithTagRequirements(class UGameplayAbility* OwningAbility, const struct FGameplayTagRequirements& TagRequirements, bool InIncludeTriggeredAbilities, bool InTriggerOnce);
	class UAbilityTask_WaitAbilityEnd* WaitForAbilityEnd_Query(class UGameplayAbility* OwningAbility, const struct FGameplayTagQuery& Query, bool InIncludeTriggeredAbilities, bool InTriggerOnce);
	class UAbilityTask_WaitAbilityEnd* WaitForAbilityEnd(class UGameplayAbility* OwningAbility, const struct FGameplayTag& InWithTag, const struct FGameplayTag& InWithoutTag, bool InIncludeTriggeredAbilities, bool InTriggerOnce);
	void OnAbilityEnd(struct FAbilityEndedData& EndedData);
};

// 0x0 (0x80 - 0x80)
// Class Solarland.SolarAbilityTask
class USolarAbilityTask : public UAbilityTask
{
public:

	static class UClass* StaticClass();
	static class USolarAbilityTask* GetDefaultObj();

};

// 0x78 (0xF8 - 0x80)
// Class Solarland.AbilityTask_WaitAttributeChangeWithOldValue
class UAbilityTask_WaitAttributeChangeWithOldValue : public USolarAbilityTask
{
public:
	FMulticastInlineDelegateProperty_            OnChange;                                          // 0x80(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_11D6[0x60];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UAbilitySystemComponent*               ExternalOwner;                                     // 0xF0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UAbilityTask_WaitAttributeChangeWithOldValue* GetDefaultObj();

	class UAbilityTask_WaitAttributeChangeWithOldValue* WaitForAttributeChangeWithComparison(class UGameplayAbility* OwningAbility, const struct FGameplayAttribute& InAttribute, const struct FGameplayTag& InWithTag, const struct FGameplayTag& InWithoutTag, enum class EWaitAttributeChangeComparison InComparisonType, float InComparisonValue, bool bTriggerOnce, class AActor* OptionalExternalOwner);
	class UAbilityTask_WaitAttributeChangeWithOldValue* WaitForAttributeChange(class UGameplayAbility* OwningAbility, const struct FGameplayAttribute& InAttribute, const struct FGameplayTag& InWithTag, const struct FGameplayTag& InWithoutTag, bool bTriggerOnce, class AActor* OptionalExternalOwner);
};

// 0x40 (0xC0 - 0x80)
// Class Solarland.AbilityTask_WaitDelayAndResetOnGameplayEvent
class UAbilityTask_WaitDelayAndResetOnGameplayEvent : public USolarAbilityTask
{
public:
	FMulticastInlineDelegateProperty_            OnFinish;                                          // 0x80(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FDelegateProperty_                           OnRecalculateWaitDelayOnEventTriggered;            // 0x90(0x10)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_11DB[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAbilityTask_WaitDelayAndResetOnGameplayEvent* GetDefaultObj();

	class UAbilityTask_WaitDelayAndResetOnGameplayEvent* CreateTask(class UGameplayAbility* OwningAbility, float DelayTime, struct FGameplayTag& EventTag);
};

// 0x28 (0xA8 - 0x80)
// Class Solarland.AbilityTask_WaitEvaluation
class UAbilityTask_WaitEvaluation : public USolarAbilityTask
{
public:
	FMulticastInlineDelegateProperty_            OnGotDesiredValue;                                 // 0x80(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FDelegateProperty_                           EvaluationFunction;                                // 0x90(0x10)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_11EB[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAbilityTask_WaitEvaluation* GetDefaultObj();

	class UAbilityTask_WaitEvaluation* CreateTask(class UGameplayAbility* OwningAbility, bool bDesiredValue, bool bTriggerOnce);
};

// 0x28 (0xA8 - 0x80)
// Class Solarland.AbilityTask_WaitInputAction
class UAbilityTask_WaitInputAction : public USolarAbilityTask
{
public:
	FMulticastInlineDelegateProperty_            OnInputAction;                                     // 0x80(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_11F7[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAbilityTask_WaitInputAction* GetDefaultObj();

	class UAbilityTask_WaitInputAction* CreateTask(class UGameplayAbility* OwningAbility, class FName ActionName, enum class EInputEvent InputEvent, bool bTriggerOnce);
};

// 0x70 (0xF0 - 0x80)
// Class Solarland.AbilityTask_WaitTagRequirementsMetStatusChange
class UAbilityTask_WaitTagRequirementsMetStatusChange : public USolarAbilityTask
{
public:
	FMulticastInlineDelegateProperty_            OnMetStatusChange;                                 // 0x80(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FGameplayTagRequirements              TagRequirements;                                   // 0x90(0x50)(Edit, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1208[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAbilityTask_WaitTagRequirementsMetStatusChange* GetDefaultObj();

	class UAbilityTask_WaitTagRequirementsMetStatusChange* CreateTask(class UGameplayAbility* OwningAbility, struct FGameplayTagRequirements& TagRequirements, bool bMetInitially);
};

// 0x48 (0x70 - 0x28)
// Class Solarland.ActionNode
class UActionNode : public UObject
{
public:
	FMulticastInlineDelegateProperty_            OnBeganCallback;                                   // 0x28(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnEndedCallback;                                   // 0x38(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnResetCallback;                                   // 0x48(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnDisposedCallback;                                // 0x58(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_1214[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UActionNode* GetDefaultObj();

	void Reset();
	bool Finished();
	void Finish();
	bool Execute(float DeltaTime);
	bool Disposed();
	void Dispose();
};

// 0x10 (0x38 - 0x28)
// Class Solarland.ActionWheelWidgetFunctionBase
class UActionWheelWidgetFunctionBase : public UObject
{
public:
	TWeakObjectPtr<class USolarUserWidget>       BindedWidget;                                      // 0x28(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        LastSelectedIndex;                                 // 0x30(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1223[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UActionWheelWidgetFunctionBase* GetDefaultObj();

	int32 GetSuggestActionIndex();
	int32 GetQuickActionIndex();
	int32 GetAutoSelectedActionIndex();
	bool ExecUseCustomItemCommand(int32 InItemID);
	bool CheckCommandCanExec(class ASCMPlayerState* InPlayerState, int32 InIndex, const struct FActionWheelCommand& InCommand);
};

// 0xE8 (0x348 - 0x260)
// Class Solarland.SolarUserWidget
class USolarUserWidget : public UUserWidget
{
public:
	enum class EWidgetLayerLevel                 WidgetLayerLevel;                                  // 0x260(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsPersistent;                                     // 0x261(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EWidgetScope                      WidgetScope;                                       // 0x262(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EInputCapture                     CaptureInput;                                      // 0x263(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHideCursorDuringCapture;                          // 0x264(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1479[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        MyRoot;                                            // 0x268(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_147A[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                Widgetkey;                                         // 0x270(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bReceiveKeyMap;                                    // 0x280(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bReceiveShowMouse;                                 // 0x281(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EScope                            ShowScope;                                         // 0x282(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowTransBlackAnim;                               // 0x283(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_147C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UWidgetInputManager>       InputManagerClass;                                 // 0x288(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetInputManager*                   InputManager;                                      // 0x290(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<class FName, class UWidgetAnimation*>   AnimationsMap;                                     // 0x298(0x50)(Edit, EditConst, Protected, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UWidgetAnimation>       PlayingAnimation;                                  // 0x2E8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_147D[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FPlayAnimationParams>          PendingPlayAnimations;                             // 0x308(0x10)(ZeroConstructor, Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         WidgetTickEnabled;                                 // 0x318(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_147E[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USolarInputActionContext*              InputActionContext;                                // 0x320(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_147F[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class USolarUserWidget*>              AllSolarUserWidgetChilds;                          // 0x338(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class USolarUserWidget* GetDefaultObj();

	void StopListeningForInputHandle(int32 Handle);
	void StopListeningForInputActionEx(class FName ActionName, enum class EInputEvent EventType);
	void ShowSelfPanelUI();
	void ShowMouseCursor();
	void SetZOrder(int32 ZOrder);
	void SetWidgetVisible(class UWidget* Widget, bool bVisible, bool bHitTest);
	void SetWidgetTickEnabled(bool bEnabled);
	void SetWidgetKey(const class FString& InWidgetKey);
	void SetInputActionIsEnabled(class FName ActionName, enum class EInputEvent EventType, bool bInIsEnabled);
	void SetBlockInputForOneTick();
	void ReceiveTick(struct FGeometry& MyGeometry, float InDeltaTime);
	void ReceiveShow();
	void ReceiveHide();
	bool PlayAnimationByName(class FName& AnimationName, float StartAtTime, int32 NumLoopsToPlay, enum class EUMGSequencePlayMode PlayMode, float PlaybackSpeed);
	void PlayAnimationByExclusively(class UWidgetAnimation* InAnimation, float StartAtTime, int32 NumLoopsToPlay, enum class EUMGSequencePlayMode PlayMode, float PlaybackSpeed, bool bRestoreState);
	void OnTouchManagerInitialized();
	void OnSynchronizeProperties();
	void OnSolarUIOpened();
	void OnSolarUIClosed();
	void OnShow();
	void OnHide();
	void OnExclusivelyAnimationFinished();
	void OnDeinitialize();
	void OnBackKey(enum class EWidgetBackKeyType BackKeyType);
	int32 ListenForInputActionEx(class FName ActionName, enum class EInputEvent EventType, bool bInIsEnabled, FDelegateProperty_ Callback);
	bool IsWidgetTickEnabled();
	bool IsSolarUserWidgetAndBindLua(class UWidget* InWidget);
	bool IsPlatformDesktop();
	void HideMouseCursor();
	class FString GetWidgetKeyByPanelName(enum class EUIPanelName PanelName);
	class FString GetWidgetKey();
	TArray<struct FVector2D> GetTouchedLocation();
	enum class EScope GetShowScope();
	TArray<struct FVector2D> GetPointerLocation();
	class ASolarPlayerState* GetOwningSolarPlayerState();
	class ASolarCharacter* GetOwningSolarPlayerCharacter();
	class UWidgetAnimation* GetAnimationByName(class FName& AnimationName);
	TArray<class USolarUserWidget*> GetAllSolarUserWidgetChilds();
	class UWidget* FindWidgetFromName(class FName& Name);
	void ExecuteSolarUIShow();
	void ExecuteSolarUIOpened();
	void ExecuteSolarUIHide();
	void ExecuteSolarUIClosed();
	void ExecuteSolarUIClean();
	void ExecuteBindCustomControl();
	void CloseSelfPanelUI();
	TArray<class USolarUserWidget*> CacheAllSolarUserWidgetChilds();
};

// 0x1E0 (0x528 - 0x348)
// Class Solarland.ActionWheelWidget
class UActionWheelWidget : public USolarUserWidget
{
public:
	uint8                                        Pad_14A1[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UOverlay*                              Overlay_Point;                                     // 0x358(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_14A3[0x58];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        SelectedIndex;                                     // 0x3B8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        WheelActionItemCount;                              // 0x3BC(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        WheelActionItemCountMax;                           // 0x3C0(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OperationAreaRadius;                               // 0x3C4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CancelAreaRadius;                                  // 0x3C8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PointMoveSensitivity;                              // 0x3CC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ManualSwitchThreshold_PC;                          // 0x3D0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ManualSwitchThreshold_GamePad;                     // 0x3D4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ManualSwitchThreshold_Mobile;                      // 0x3D8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Groupid;                                           // 0x3DC(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PageCount;                                         // 0x3E0(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CurrentPage;                                       // 0x3E4(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_14A7[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FActionWheelConfig                    WheelConfigs;                                      // 0x3F0(0xD8)(BlueprintVisible, NativeAccessSpecifierPublic)
	TMap<int32, class UActionWheelWidgetFunctionBase*> ActionWheelWidgetFunctionObjs;                     // 0x4C8(0x50)(NativeAccessSpecifierPublic)
	class UDataTable*                            ActionWheelConfigDataTable;                        // 0x518(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ActionWheelIsOpened;                               // 0x520(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_14A8[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ValidEmojiUseDistance;                             // 0x524(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UActionWheelWidget* GetDefaultObj();

	void UpdateWheelArrowAngle(float Degree);
	void SetInputActionGroupEnable(bool InEnable);
	void SelecteActionWheelItem(int32 Page, int32 Index);
	void ReceiveActionWheelTouchMoved(struct FVector2D& TouchLocalPos);
	void OnConsumeItemUpdated();
	void OnCommandExec(int32 InGroupID, int32 InSelectedIndex);
	void OnBindedInputActionReleased(int32 InGroupID);
	void OnBindedInputActionPressed(int32 InGroupID);
	void OnBattleHUDVisibilityChanged(bool Visible);
	void OnActionWheelPreviousPage();
	void OnActionWheelOpened();
	void OnActionWheelNextPage();
	void OnActionWheelMouseRightClicked();
	void OnActionWheelMouseLeftClicked();
	void OnActionWheelConfigInit();
	void OnActionWheelClosed();
	void LoadCustomActionCommandInfo(struct FActionWheelConfig* ActionWheelConfig);
	void InitActionWheelConfigByGroupID(int32 InGroupID, int32 InPage);
	int32 GetItemNumById(int32 InItemID);
	class UActionWheelWidgetFunctionBase* GetActionWheelWidgetFunctionObj(int32 InGroupID);
	void CommandExec(int32 InGroupID, int32 InSelectedIndex);
	void ChangeWheelVisibility(bool Visible);
	void ActionWheelYAxis(float Movement);
	void ActionWheelXAxis(float Movement);
};

// 0x28 (0x50 - 0x28)
// Class Solarland.ActorEffect
class UActorEffect : public UObject
{
public:
	TSubclassOf<class UActorEffectController>    ControllerClass;                                   // 0x28(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UActorEffectController*                Controller;                                        // 0x30(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_14AD[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UActorEffect* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Solarland.ActorEffectController
class UActorEffectController : public UObject
{
public:

	static class UClass* StaticClass();
	static class UActorEffectController* GetDefaultObj();

};

// 0x20 (0x50 - 0x30)
// Class Solarland.ActorEffectSubsystem
class UActorEffectSubsystem : public UWorldSubsystem
{
public:
	uint8                                        Pad_14BD[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UActorEffect*>                  Effects;                                           // 0x40(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UActorEffectSubsystem* GetDefaultObj();

	bool Stop(class UActorEffect* EffectInstance);
	class UActorEffect* Start(TSubclassOf<class UActorEffect> EffectClass, class AActor* AffectedActor);
	bool Finish(class UActorEffect* EffectInstance);
};

// 0x58 (0x3A0 - 0x348)
// Class Solarland.ActorMarkBase
class UActorMarkBase : public USolarUserWidget
{
public:
	uint8                                        Pad_14CC[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                CurrentFollowActor;                                // 0x360(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class APlayerController*                     CurrentPlayerController;                           // 0x368(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             MarkIconAlignment;                                 // 0x370(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             MarkPanelSize;                                     // 0x378(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_14CE[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MaxVisibleDis;                                     // 0x398(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_14CF[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UActorMarkBase* GetDefaultObj();

	void SetUpdateState(bool InShouldUpdateLocation);
	void InitActorMarkBaseByFixedPos(const struct FVector& Pos, class APlayerController* Controller);
	void InitActorMarkBase(class AActor* InActor, class APlayerController* Controller);
	struct FVector GetFollowActorLocation();
	float GetDistance(bool bIncludeZ);
	class AActor* GetCurrentFollowActor();
};

// 0x58 (0x90 - 0x38)
// Class Solarland.ActorMaterialSubsystemSettings
class UActorMaterialSubsystemSettings : public UDeveloperSettings
{
public:
	struct FGameplayTag                          DefaultMaterialChangePriorityTag;                  // 0x38(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Config, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FMaterialChangePriorityGroup>  OrderedMaterialChangePriorityGroups;               // 0x40(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FSoftObjectPath>               GlobalNoChangeMaterials;                           // 0x50(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FForceChangeMaterialInfos>     GlobalForceChangeMaterials;                        // 0x60(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_14D4[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UActorMaterialSubsystemSettings* GetDefaultObj();

	int32 GetMaterialChangePriority(struct FGameplayTag& Tag);
};

// 0x60 (0x90 - 0x30)
// Class Solarland.ActorMaterialSubsystem
class UActorMaterialSubsystem : public UWorldSubsystem
{
public:
	TMap<class AActor*, struct FActorMaterialInfo> ActorMaterialsMap;                                 // 0x30(0x50)(ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                        Pad_151B[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UActorMaterialSubsystem* GetDefaultObj();

	bool SetStaticMesh(class AActor* Actor, class UStaticMeshComponent* MeshComp, class UStaticMesh* NewMesh);
	bool SetSkeletalMesh(class AActor* Actor, class USkeletalMeshComponent* MeshComp, class USkeletalMesh* NewMesh, bool bReinitPose, bool bForceSkipTickAnimation);
	bool SetOriginalMultiplePassMaterial(class AActor* Actor, class UMeshComponent* MeshComp, class UMaterialInterface* Material, bool bNeedMultiplePass);
	bool SetOriginalMaterials(class AActor* Actor, class UMeshComponent* MeshComp, TArray<class UMaterialInterface*>& Materials);
	bool SetOriginalMaterial(class AActor* Actor, class UMeshComponent* MeshComp, int32 MaterialIndex, class UMaterialInterface* Material);
	void RemoveNoChangeMaterials(TArray<struct FSoftObjectPath>& Materials);
	bool RemoveMaterialChange(class AActor* Actor, const struct FMaterialChangeHandle& Handle);
	bool RemoveAllMaterialChanges(class AActor* Actor);
	void RebuildMaterialChangesOnMeshAddedOrRemoved(class AActor* Actor);
	void RebuildMaterialChangesOnAllOriginalMaterialsChanged(class AActor* Actor);
	class UMaterialInstanceDynamic* OverrideDynamicMaterialInstanceParameterByIndex(class UMaterialInstanceDynamic* TargetMaterial, class UPrimitiveComponent* SourcePrimitiveComponent, int32 SourceElementIndex, class FName ParameterName, enum class EMaterialParameterType2 ParameterType, bool bOverridenOnly);
	class UMaterialInstanceDynamic* OverrideDynamicMaterialInstanceParameter(class UMaterialInstanceDynamic* TargetMaterial, class UMaterialInterface* SourceMaterial, class FName ParameterName, enum class EMaterialParameterType2 ParameterType, bool bOverridenOnly);
	void OnActorEndPlay(class AActor* Actor, enum class EEndPlayReason EndPlayReason);
	bool K2_SetVectorMaterialParameter(class AActor* Actor, const struct FMaterialChangeHandle& Handle, class FName ParameterName, const struct FVector& ParameterValue, const struct FMaterialFilter& Filter);
	bool K2_SetScalarMaterialParameter(class AActor* Actor, const struct FMaterialChangeHandle& Handle, class FName ParameterName, float ParameterValue, const struct FMaterialFilter& Filter);
	void K2_RebuildMaterialChangesOnOriginalMaterialChanged(class AActor* Actor, const TArray<class UMeshComponent*>& ChangedMeshes);
	class UMaterialInstanceDynamic* K2_OverrideDynamicMaterialInstanceAllParametersByIndex(class UMaterialInstanceDynamic* TargetMaterial, class UPrimitiveComponent* PrimitiveComponent, int32 SourceElementIndex, int32 ParameterTypeFlags, struct FMaterialParameterFilter& ParameterFilter, bool bOverridenOnly);
	class UMaterialInstanceDynamic* K2_OverrideDynamicMaterialInstanceAllParameters(class UMaterialInstanceDynamic* TargetMaterial, class UMaterialInterface* SourceMaterial, int32 ParameterTypeFlags, struct FMaterialParameterFilter& ParameterFilter, bool bOverridenOnly);
	class UMaterialInstanceDynamic* K2_CreateDynamicMaterialInstanceOverrideAllParameters(class UPrimitiveComponent* TargetPrimitiveComponent, class UMaterialInterface* SourceMaterial, int32 ParameterTypeFlags, struct FMaterialParameterFilter& ParameterFilter, int32 TargetElementIndex, bool bOverridenOnly, class FName OptionalMaterialName);
	struct FMaterialChangeHandle K2_AddMaterialChangeByPath(class AActor* Actor, struct FSoftObjectPath& MaterialPath, const struct FAddMaterialChangeParams& Params);
	struct FMaterialChangeHandle K2_AddMaterialChange(class AActor* Actor, class UMaterialInterface* SourceMaterial, const struct FAddMaterialChangeParams& Params);
	bool EmptyOriginalOverrideMaterials(class AActor* Actor, class UMeshComponent* MeshComp);
	bool ContainsMaterialChangeByPriority(class AActor* Actor, int32 Priority);
	bool ContainsMaterialChange(class AActor* Actor, const struct FMaterialChangeHandle& Handle);
	bool ContainsAnyMaterialChange(class AActor* Actor);
	void AddNoChangeMaterials(TArray<struct FSoftObjectPath>& Materials);
};

// 0x0 (0x28 - 0x28)
// Class Solarland.ActorMaterialSubsystemAgentInterface
class IActorMaterialSubsystemAgentInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IActorMaterialSubsystemAgentInterface* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Solarland.ActorMaterialSubsystemAgentComponentInterface
class IActorMaterialSubsystemAgentComponentInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IActorMaterialSubsystemAgentComponentInterface* GetDefaultObj();

	class UMaterialInterface* AMS_GetAlternativeSourceMaterial(class UMaterialInterface* OriginalSourceMaterial);
};

// 0x88 (0xB0 - 0x28)
// Class Solarland.ActorParticleEffectSpawner
class UActorParticleEffectSpawner : public UObject
{
public:
	uint8                                        Pad_1527[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FActorParticleEffectSpawnInfo         Info;                                              // 0x38(0x70)(NativeAccessSpecifierPublic)
	uint8                                        Pad_1528[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UActorParticleEffectSpawner* GetDefaultObj();

};

// 0x20 (0x50 - 0x30)
// Class Solarland.ActorParticleEffectSubsystem
class UActorParticleEffectSubsystem : public UWorldSubsystem
{
public:
	uint8                                        Pad_152F[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UActorParticleEffectSpawner*>   Spawners;                                          // 0x40(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UActorParticleEffectSubsystem* GetDefaultObj();

	struct FActorParticleEffectSpawnHandle K2_RequestParticleEffectSpawn(class AActor* Actor, const struct FActorParticleEffectSpawnInfo& SpawnInfo);
	void CancelParticleEffectSpawn(const struct FActorParticleEffectSpawnHandle& Handle);
};

// 0xB0 (0x310 - 0x260)
// Class Solarland.AdvProgressBase
class UAdvProgressBase : public UUserWidget
{
public:
	class UImage*                                Progress;                                          // 0x260(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstance*                     ProgressShader;                                    // 0x268(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Speed;                                             // 0x270(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CurrentHP;                                         // 0x274(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxHP;                                             // 0x278(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1540[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<int32, float>                           ActionMap;                                         // 0x280(0x50)(BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	float                                        AnimCurrentHP;                                     // 0x2D0(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ProgressAdd;                                       // 0x2D4(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ProgressMinus;                                     // 0x2D8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1541[0x34];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAdvProgressBase* GetDefaultObj();

	void UpdateMaxHPLength(float NewHPMax, float NewCurrentHP);
	void SetProgress(float _PreMinus, float _CurrentHP, float _PreAdd);
	int32 PreAction(float Number);
	void Init(float _DefaultHP, float _MaxHP);
	float GetMaxHP();
	float GetCurrentHPPercent();
	void DoActionSmoothly(float Number);
	void DoActionDirectly(float Number);
	void DoAction(int32 ID);
	struct FLinearColor Debug();
	void CleanPreActions();
	void CancelAction(int32 ID);
};

// 0x0 (0x348 - 0x348)
// Class Solarland.AerialReconnaissanceMarkWidget
class UAerialReconnaissanceMarkWidget : public USolarUserWidget
{
public:

	static class UClass* StaticClass();
	static class UAerialReconnaissanceMarkWidget* GetDefaultObj();

	void K2_MarkStateChanged(bool bInStart);
};

// 0x98 (0x2C0 - 0x228)
// Class Solarland.AirDropAudioActor
class AAirDropAudioActor : public AActor
{
public:
	struct FVector                               DropBeginLocation;                                 // 0x228(0xC)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               DropEndLocation;                                   // 0x234(0xC)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CurrZ;                                             // 0x240(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1546[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                SpawnedWarningEffect;                              // 0x248(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class AActor>                    WarningEffect;                                     // 0x250(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ThisID;                                            // 0x258(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1547[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bSummonedByCharacter;                              // 0x260(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1548[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                SNameAirDropSpawnWarning;                          // 0x268(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                SNameAirDropStopSpawnWarning;                      // 0x278(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                SNameAirDropApprochWarning;                        // 0x288(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                SNameAirDropStopApprochWarning;                    // 0x298(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkComponent*                          AkAudioComponent;                                  // 0x2A8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarAkGameObject*                    SolarAkGameObject;                                 // 0x2B0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_154B[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bHasLanded;                                        // 0x2B9(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_154C[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AAirDropAudioActor* GetDefaultObj();

	void OnAirDropTreasureBoxStateChanged(int32 ItemID, enum class EAirDropMovementState MovementState, enum class EAirDropOpenState OpenState);
	void OnAirDropApproch(int32 InThisID);
	void InitSolarAkGameObject(class UActorComponent* Component, bool bReset);
};

// 0x0 (0x228 - 0x228)
// Class Solarland.SolarDormantActor
class ASolarDormantActor : public AActor
{
public:

	static class UClass* StaticClass();
	static class ASolarDormantActor* GetDefaultObj();

};

// 0x1B8 (0x3E0 - 0x228)
// Class Solarland.SolarItemActor
class ASolarItemActor : public ASolarDormantActor
{
public:
	uint8                                        Pad_1555[0x40];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSolarItemData                        ItemData;                                          // 0x268(0xB8)(Net, RepNotify, NativeAccessSpecifierPublic)
	float                                        SpawnOffset;                                       // 0x320(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1558[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FSoftObjectPath>               DiscardMatPath;                                    // 0x328(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                       OutlineMatPath;                                    // 0x338(0x18)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                       FXPath;                                            // 0x350(0x18)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        NoneMeshFxOffset;                                  // 0x368(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_155A[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                FXBPPath;                                          // 0x370(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USphereComponent*                      SphereComponent;                                   // 0x380(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_155B[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TWeakObjectPtr<class AActor>                 FXActor;                                           // 0x38C(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EItemState                        ItemCurrentState;                                  // 0x394(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_155D[0xB];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<uint8>                                MarkedTeamIdList;                                  // 0x3A0(0x10)(Net, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_155E[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UStaticMeshComponent*                  StaticMeshComp;                                    // 0x3B8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UMaterialInstanceDynamic*>      NormalMats;                                        // 0x3C0(0x10)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UMaterialInstanceDynamic*>      OutlineMats;                                       // 0x3D0(0x10)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class ASolarItemActor* GetDefaultObj();

	void UnMarkThisItem(uint8 TeamID);
	void SwitchDiscardMaterials();
	void SetOutlineMeshVisible(bool Visible);
	void SetItemData(struct FSolarItemData& _ItemData);
	void OnServerPawned();
	void OnRep_ItemDataChange();
	void OnRep_ItemCurrentStateChanged();
	void NotifyThisItemWasPickedUp();
	void MarkThisItem(uint8 TeamID);
	class UStaticMeshComponent* GetStaticMeshComp();
	int32 GetQuality();
};

// 0x1F0 (0x5D0 - 0x3E0)
// Class Solarland.SolarTreasureBoxActor
class ASolarTreasureBoxActor : public ASolarItemActor
{
public:
	enum class ETreasureBoxState                 CurrentState;                                      // 0x3E0(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1574[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSolarItemDataArray                   ItemDataList;                                      // 0x3E8(0x118)(Edit, Net, Transient, RepNotify, NativeAccessSpecifierPublic)
	TArray<struct FSolarItemData>                SortedGameItemDatas;                               // 0x500(0x10)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1575[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        DataLeng;                                          // 0x530(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ECostType                         CostType;                                          // 0x534(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1576[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        CostNum;                                           // 0x538(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1577[0x54];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        HighestItemQuality;                                // 0x590(0x4)(Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        BurstRadius;                                       // 0x594(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BurstRadiusRandScale;                              // 0x598(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BurstLocalHeight;                                  // 0x59C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BurstEulerAngle;                                   // 0x5A0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bBurstSplitItem;                                   // 0x5A4(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EBurstMethod                      BurstMethod;                                       // 0x5A5(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1579[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        RadSafeSlopeToBurstOn;                             // 0x5A8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GoldenSpiralMinRadiusSquared;                      // 0x5AC(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class ASolarBurstItemActor*>          BurstItemActors;                                   // 0x5B0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkComponent*                          AkAudioComponent;                                  // 0x5C0(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarAkGameObject*                    SolarAkGameObject;                                 // 0x5C8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class ASolarTreasureBoxActor* GetDefaultObj();

	void UpdateTreasureBoxInternal();
	void UpdateOpenBoxUIByState(enum class ETreasureBoxState NewState);
	void UpdateItemDataListInternal();
	void ServerSetState(enum class ETreasureBoxState NewState, class ASolarCharacter* RequestCharacter);
	void ServerNotifyPlayerOpen(class ASolarCharacter* RequestCharacter, enum class EItemType InItemType);
	void PlayOpenAnimation();
	void OnRep_ItemDataList();
	void OnRep_CurrentState();
	void OnClientItemHighestQualityChanged(int32 NewQuality, int32 PrevQuality);
	bool IsEmpty();
	void InitSolarAkGameObject(class UActorComponent* Component, bool bReset);
	int32 GetNumCost();
	TArray<struct FSolarItemData> GetItemList();
	enum class ECostType GetCostType();
	void ConstructTreasureBoxTest(TArray<int32>* ItemIdList);
	void ConstructTreasureBox(int32 DropId);
	bool BOpened();
};

// 0x6E0 (0xCB0 - 0x5D0)
// Class Solarland.AirDropTreasureBox
class AAirDropTreasureBox : public ASolarTreasureBoxActor
{
public:
	bool                                         bPendingDestroy;                                   // 0x5D0(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsOpening;                                        // 0x5D1(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_158E[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        OpenProgress;                                      // 0x5D4(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ASolarCharacter*                       OpeningCharacter;                                  // 0x5D8(0x8)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OpenTime;                                          // 0x5E0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ProtectionTime;                                    // 0x5E4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_158F[0xD];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bBoxLanded;                                        // 0x5F5(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1590[0x5A];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                SummonPlayerID;                                    // 0x650(0x10)(Net, ZeroConstructor, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StartDropHeight;                                   // 0x660(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              TargetRotation;                                    // 0x664(0xC)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                               TargetLocation;                                    // 0x670(0xC)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1591[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UParticleSystem>        OpenAirdropEffect;                                 // 0x680(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UParticleSystem>        LandHitEffect;                                     // 0x6A8(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UParticleSystem>        LandSmokeEffect;                                   // 0x6D0(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UParticleSystem>        PendingDestroyEffect;                              // 0x6F8(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UParticleSystem>        DestroyEffect;                                     // 0x720(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UParticleSystem>        FallingEffect;                                     // 0x748(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UParticleSystem>        FallingImpulseEffect;                              // 0x770(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UParticleSystem>        LightBeamEffect;                                   // 0x798(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTransform                            FallingEffectOffset;                               // 0x7C0(0x30)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FTransform                            FallingImpulseEffectOffset;                        // 0x7F0(0x30)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FTransform                            LightBeamEffectOffset;                             // 0x820(0x30)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FTransform                            PendingDestroyEffectOffset;                        // 0x850(0x30)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	class UAnimationAsset*                       LandAnimation;                                     // 0x880(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimationAsset*                       OpenAnimation;                                     // 0x888(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DropGravity;                                       // 0x890(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxDropSpeed;                                      // 0x894(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OriginHeight;                                      // 0x898(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DecelerateHeight;                                  // 0x89C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ShowLandSmokeHeight;                               // 0x8A0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DecelerateTime;                                    // 0x8A4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                           DecelerateCurve;                                   // 0x8A8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AirDropSpawnDelay;                                 // 0x8B0(0x4)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AudioActorHeightOffset;                            // 0x8B4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AudioActorFallSpeed;                               // 0x8B8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1593[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSoftClassPath                        AirDropGuideMeshBPClassPath;                       // 0x8C0(0x18)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DropApprochDuration;                               // 0x8D8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FallingEffectDelay;                                // 0x8DC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSummonBySkill;                                    // 0x8E0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1595[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        YawOffset;                                         // 0x8E4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EAirDropMovementState             MovementState;                                     // 0x8E8(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EAirDropOpenState                 OpenState;                                         // 0x8E9(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1596[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USkeletalMeshComponent*                SkeletalMeshComp;                                  // 0x8F0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1597[0x50];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UParticleSystemComponent*              FallingPSC;                                        // 0x948(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1598[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSolarDamageInfo                      DamageInfo;                                        // 0x968(0x40)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	class FString                                SNameAirDropOpen;                                  // 0x9A8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                SNameLandHit;                                      // 0x9B8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                SNameAirDropSpawn;                                 // 0x9C8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                SNameAirDropSpawnWarning;                          // 0x9D8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                SNameAirDropStopSpawnWarning;                      // 0x9E8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                SNameAirDropApprochWarning;                        // 0x9F8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                SNameAirDropStopApprochWarning;                    // 0xA08(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                SNameStartDrop;                                    // 0xA18(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                SNameStopDrop;                                     // 0xA28(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                SNameDecelerateAudio;                              // 0xA38(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                SNamePlayLandedLoopAudio;                          // 0xA48(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                SNameStopLandedLoopAudio;                          // 0xA58(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                SNamePlayOnGroundBroadcastLoopAudio;               // 0xA68(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                SNameStopOnGroundBroadcastLoopAudio;               // 0xA78(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                SNamePlayStartHackAudio;                           // 0xA88(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                SNameStopStartHackAudio;                           // 0xA98(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                SNamePlayHackingLoopAudio;                         // 0xAA8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                SNameStopHackingLoopAudio;                         // 0xAB8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                SNameStopHackingLoopAudioAux;                      // 0xAC8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                PendingDestroyLoopStart;                           // 0xAD8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                PendingDestroyLoopEnd;                             // 0xAE8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                SNameDestroySound;                                 // 0xAF8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_159C[0x68];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  ColorKeyTag1;                                      // 0xB70(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  ColorKeyTag2;                                      // 0xB78(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  ColorKeyGlow;                                      // 0xB80(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  ColorKeyMesh;                                      // 0xB88(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  AlphaKey;                                          // 0xB90(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  LightBeamAlphaKey;                                 // 0xB98(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  ColorKeyTagFlow1;                                  // 0xBA0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  ColorKeyTagFlow2;                                  // 0xBA8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  ColorKeyLightEffect;                               // 0xBB0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FadeTweenDuration;                                 // 0xBB8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RedTweenDuration;                                  // 0xBBC(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                          BlueColorTag1;                                     // 0xBC0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                          RedColorTag1;                                      // 0xBD0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                          BlueColorTag2;                                     // 0xBE0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                          RedColorTag2;                                      // 0xBF0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                          BlueColorGlow;                                     // 0xC00(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                          RedColorGlow;                                      // 0xC10(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                          BlueColorMesh;                                     // 0xC20(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                          RedColorMesh;                                      // 0xC30(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                          RedColorTagFlow1;                                  // 0xC40(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                          RedColorTagFlow2;                                  // 0xC50(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                          BlueColorTagFlow1;                                 // 0xC60(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                          BlueColorTagFlow2;                                 // 0xC70(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                          RedColorLightEffect;                               // 0xC80(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                          BlueColorLightEffect;                              // 0xC90(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_159F[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AAirDropTreasureBox* GetDefaultObj();

	void PlayLandingAnimation();
	bool OpenAirDropTreasureBox(class ASolarCharacter* _OpeningCharacter);
	void OnStateChanged();
	void OnRep_TargetLocation();
	void OnRep_SummonPlayerID();
	void OnRep_StartDropHeight();
	void OnRep_PendingDestroy();
	void OnRep_OpenState(enum class EAirDropOpenState OpenState);
	void OnRep_OpenProgressChange();
	void OnRep_OpenCharacterChange();
	void OnRep_MovementState(enum class EAirDropMovementState MovementState);
	void OnRep_IsOpening();
	void OnRep_bBoxLanded();
	void OnOpenStateChanged(enum class EAirDropOpenState InPrevOpenState, enum class EAirDropOpenState InCurrOpenState);
	void OnMovementStateChanged(enum class EAirDropMovementState InPrevMovementState, enum class EAirDropMovementState InCurrMovementState);
	void OnFadeOutFallingEffect();
	bool IsSummonedByCharacter();
	bool IsOpenningCharacterOffline();
	bool IsCharacterInRange(class ASolarCharacter* InCheckCharacter);
	bool CancelOpenAirDropTreasureBox(class ASolarCharacter* _OpeningCharacter);
};

// 0x0 (0x28 - 0x28)
// Class Solarland.AirlineCruiseCompInterface
class IAirlineCruiseCompInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IAirlineCruiseCompInterface* GetDefaultObj();

	class UAirlineCruiseComponent* GetAirlineCruiseComponent();
};

// 0x20 (0xD0 - 0xB0)
// Class Solarland.GameModeCompBase
class UGameModeCompBase : public UActorComponent
{
public:
	uint8                                        Pad_15CA[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bPreStartPlay;                                     // 0xB8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bTakeChargeStartPlay;                              // 0xB9(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bPostStartPlay;                                    // 0xBA(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_15CB[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bPreHandleMatchHasStarted;                         // 0xBD(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bTakeChargeHandleMatchHasStarted;                  // 0xBE(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bPostHandleMatchHasStarted;                        // 0xBF(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_15CC[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bPreRestartPlayer;                                 // 0xC2(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bTakeChargeRestartPlayer;                          // 0xC3(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bPostRestartPlayer;                                // 0xC4(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_15CE[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bPreEndPlay;                                       // 0xC7(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bTakeChargeEndPlay;                                // 0xC8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bPostEndPlay;                                      // 0xC9(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_15CF[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGameModeCompBase* GetDefaultObj();

	void PreStartPlayBind(TArray<class UGameModeCompBase*>& ComponentCollection);
	void PreRestartPlayerBind(TArray<class UGameModeCompBase*>& ComponentCollection, class AController* NewPlayer);
	void PreHandleMatchHasStartedBind(TArray<class UGameModeCompBase*>& ComponentCollection);
	void PreGameModeStartPlay(TArray<class UGameModeCompBase*>& ComponentCollection);
	void PreGameModeRestartPlayer(TArray<class UGameModeCompBase*>& ComponentCollection, class AController* NewPlayer);
	void PreGameModeHandleMatchHasStarted(TArray<class UGameModeCompBase*>& ComponentCollection);
	void PreGameModeEndPlay(TArray<class UGameModeCompBase*>& ComponentCollection, enum class EEndPlayReason EndPlayReason);
	void PreEndPlayBind(TArray<class UGameModeCompBase*>& ComponentCollection, enum class EEndPlayReason EndPlayReason);
	void PostStartPlayBind(TArray<class UGameModeCompBase*>& ComponentCollection);
	void PostRestartPlayerBind(TArray<class UGameModeCompBase*>& ComponentCollection, class AController* NewPlayer);
	void PostHandleMatchHasStartedBind(TArray<class UGameModeCompBase*>& ComponentCollection);
	void PostGameModeStartPlay(TArray<class UGameModeCompBase*>& ComponentCollection);
	void PostGameModeRestartPlayer(TArray<class UGameModeCompBase*>& ComponentCollection, class AController* NewPlayer);
	void PostGameModeHandleMatchHasStarted(TArray<class UGameModeCompBase*>& ComponentCollection);
	void PostGameModeEndPlay(TArray<class UGameModeCompBase*>& ComponentCollection, enum class EEndPlayReason EndPlayReason);
	void PostEndPlayBind(TArray<class UGameModeCompBase*>& ComponentCollection, enum class EEndPlayReason EndPlayReason);
	void OnGameModeStartPlay(bool* bOutSuccess, TArray<class UGameModeCompBase*>& ComponentCollection);
	void OnGameModeRestartPlayer(bool* bOutSuccess, TArray<class UGameModeCompBase*>& ComponentCollection, class AController* NewPlayer);
	void OnGameModeHandleMatchHasStarted(bool* bOutSuccess, TArray<class UGameModeCompBase*>& ComponentCollection);
	void OnGameModeEndPlay(bool* bOutSuccess, TArray<class UGameModeCompBase*>& ComponentCollection, enum class EEndPlayReason EndPlayReason);
	class ASolarGameMode* GetGameModeOwner();
};

// 0x78 (0x148 - 0xD0)
// Class Solarland.AirlineCruiseComponent
class UAirlineCruiseComponent : public UGameModeCompBase
{
public:
	int32                                        UsedAirlineID;                                     // 0xD0(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_15D4[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class ASolarCapsuleRoot>         CapsuleRootClass;                                  // 0xD8(0x8)(Edit, BlueprintVisible, ZeroConstructor, NoClear, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ASolarCapsuleRoot*                     CapsuleRoot;                                       // 0xE0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<int32, struct FAirlineData>             AirlineDataList;                                   // 0xE8(0x50)(BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	class ASolarCharacter*                       CruiseTemplate;                                    // 0x138(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_15D5[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAirlineCruiseComponent* GetDefaultObj();

	void OnPlayerJoin(class ASCMPlayerState* PlayerState);
	void OnCruiseCompleted(class AActor* DestroyedRoot);
	void OnAIJoin(class ASCMPlayerState* PlayerState);
	int32 GetUsedAirlineData(struct FAirlineData* OutData);
};

// 0x6B0 (0x6E0 - 0x30)
// Class Solarland.AmmoConfig
class UAmmoConfig : public UDataAsset
{
public:
	enum class EHoldActionType                   HoldAction;                                        // 0x30(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_15E9[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FFireChargeData>               FireChargeDatas;                                   // 0x38(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                FireChargeStopSoundName;                           // 0x48(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ChargingToleranceEndTime;                          // 0x58(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ChargingWorkingEndTime;                            // 0x5C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ChargingHoldingEndTime;                            // 0x60(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ChargingTrajectoryTime;                            // 0x64(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bScaleHitEffectByChargingTime;                     // 0x68(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCostToChargeScale;                                // 0x69(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_15EB[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        FireCostFullShot;                                  // 0x6C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bForceFullShot;                                    // 0x70(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_15EC[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MaxChargingDamageScale;                            // 0x74(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DeltaAngle;                                        // 0x78(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_15EE[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                Name;                                              // 0x80(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Des;                                               // 0x90(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PropID;                                            // 0xA0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LifeTime;                                          // 0xA4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EFireMethodType                   FireMethodType;                                    // 0xA8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETrajectoryType                   TrajectoryType;                                    // 0xA9(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_15EF[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        CustomValue;                                       // 0xAC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ASolarBullet>              BulletClass;                                       // 0xB0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EBounceType                       BulletBounce;                                      // 0xB8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_15F1[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        BounceTimes;                                       // 0xBC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETriggerType                      TriggerType;                                       // 0xC0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_15F2[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MaxRange;                                          // 0xC4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EffRange;                                          // 0xC8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Radius;                                            // 0xCC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        InitSpeed;                                         // 0xD0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ECostFireType                     FireCostType;                                      // 0xD4(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_15F3[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        FireCostPerAttack;                                 // 0xD8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        FireSpeedChangeTime;                               // 0xDC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FireSpeedChangeCOP;                                // 0xE0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FastestFireInterval;                               // 0xE4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SlowestFireInterval;                               // 0xE8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BaseFireInterval;                                  // 0xEC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FireIntervalRevertPreTime;                         // 0xF0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FireIntervalReavertSpeed;                          // 0xF4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BoltActionTime;                                    // 0xF8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StartBoltDuration;                                 // 0xFC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AutoFireBreakTime;                                 // 0x100(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FirePrepareTime;                                   // 0x104(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FireStateBreakTime;                                // 0x108(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FireStreakBreakTime;                               // 0x10C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        FireIdx;                                           // 0x110(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bTimedExplode;                                     // 0x114(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_15F8[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        BaseReloadTime;                                    // 0x118(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ReloadBoltTime;                                    // 0x11C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PostFireOverload;                                  // 0x120(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPlayHitSound;                                     // 0x124(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPlayExplodeSound;                                 // 0x125(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_15F9[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        FlySoundReceiveRadius;                             // 0x128(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FlySoundIgnoreDistance;                            // 0x12C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SingleSoundCount;                                  // 0x130(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_15FA[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                Play_Land_Common_Hit_1P;                           // 0x138(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Play_Land_Common_Hit_3P;                           // 0x148(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Play_Land_Common_Hit_3P_Enemy;                     // 0x158(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Play_Land_Fly_Once_3P;                             // 0x168(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Play_Land_Fly_Once_3P_Enemy;                       // 0x178(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Play_Land_Fly_Loop_1P;                             // 0x188(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Play_Land_Fly_Loop_3P;                             // 0x198(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Play_Land_Fly_Loop_3P_Enemy;                       // 0x1A8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Stop_Land_Fly_Loop_1P;                             // 0x1B8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Stop_Land_Fly_Loop_3P;                             // 0x1C8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Stop_Land_Fly_Loop_3P_Enemy;                       // 0x1D8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Play_Fire_Empty_1p;                                // 0x1E8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Play_Fire_Empty_3p;                                // 0x1F8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Play_Fire_Empty_3p_Enemy;                          // 0x208(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                           PostFireSpreadCurveStruct;                         // 0x218(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VhADSSpreadCOP;                                    // 0x220(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ADSSpreadCOP;                                      // 0x224(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpreadFirePreTime;                                 // 0x228(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpreadPostFireSpeed;                               // 0x22C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpreadRestorePreTime;                              // 0x230(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpreadRestoreSpeed;                                // 0x234(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FWeaponFireTPPAnimConfig              TPPRecoilConfig;                                   // 0x238(0x28)(Edit, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FWeaponFireFPPAnimConfig              FPPRecoilConfigNoScope;                            // 0x260(0x70)(Edit, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FWeaponFireFPPAnimConfig              FPPRecoilConfigWithScope;                          // 0x2D0(0x70)(Edit, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FAmmonVerticalRecoilStruct            PitchRecoilStruct;                                 // 0x340(0x30)(Edit, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FAmmonHorizontalRecoilStruct          YawRecoilStruct;                                   // 0x370(0x30)(Edit, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FAmmonRecoilRollStruct                RollRecoilStruct;                                  // 0x3A0(0x40)(Edit, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FAmmonRecoilScope                     ScopeRecoil;                                       // 0x3E0(0xB8)(Edit, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	float                                        ADSRecoilCOP;                                      // 0x498(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_15FE[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<class FString, float>                   RecoilCOPMap;                                      // 0x4A0(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TArray<enum class EPhysicalSurface>          IgnoreEPhysicalSurface;                            // 0x4F0(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAutoBurstFire;                                    // 0x500(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_15FF[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        BurstFireInterval;                                 // 0x504(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BurstFireInternalInterval;                         // 0x508(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FireAnimationPlayRate;                             // 0x50C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        AmmoSoundType;                                     // 0x510(0x4)(BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ProjectileMaxGravity;                              // 0x514(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ParticleStartDistance;                             // 0x518(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TrajectoryStartDistance;                           // 0x51C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPenetrable;                                       // 0x520(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bTakeDamageAfterDeathVerge;                        // 0x521(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1601[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UCurveFloat*                           PenetrationDamageMultiplierCurve;                  // 0x528(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                           CylinderDamageMultiplierCurve;                     // 0x530(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSlateBrush                           TriggerIcon;                                       // 0x538(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	enum class EVirtualBulletType                VirtualBulletType;                                 // 0x5D0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bStepOnServer;                                     // 0x5D1(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1603[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAmmoConfig*                           TraceOverrideAmmo;                                 // 0x5D8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        TraceTargetFlag;                                   // 0x5E0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1604[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTracerBulletData                     TracerData;                                        // 0x5E8(0x40)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class UCurveFloat*                           BulletOffsetCurve;                                 // 0x628(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FVector2D>                     BulletOffsetAngles;                                // 0x630(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                           BulletDamageCurve;                                 // 0x640(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                           BulletScaleCurve;                                  // 0x648(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                           BulletMovementCurve;                               // 0x650(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bThirdPesonViewXScaledByDistance;                  // 0x658(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bForceApplyAbility;                                // 0x659(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1605[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<TSubclassOf<class ASolarAbility>>     AmmoAbilityClasses;                                // 0x660(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TSubclassOf<class ASolarAbility>>     AmmoAbilityClassesOnDestroyed;                     // 0x670(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ASolarAbility>             AmmoAbilityClassesOnSelf;                          // 0x680(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SkillType;                                         // 0x688(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        NameLocalTextIDNumber;                             // 0x68C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        DescriptionLocalTextIDNumber;                      // 0x690(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RangeLocalTextID;                                  // 0x694(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        DifficultyLocalTextID;                             // 0x698(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1607[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSolarDamageInfo                      DamageInfo;                                        // 0x6A0(0x40)(Edit, BlueprintReadOnly, NoDestructor, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UAmmoConfig* GetDefaultObj();

	void InitVerticalRecoilStruct(float CostTime, int32 AIndex, float AMin, float AMax, int32 BIndex, float BMin, float BMax);
	void InitSpreadData(float Adscop, float Vhadscop, float Firepre, float Changespeed, float Restorepre, float Restorespeed);
	void InitScopeRollRecoilStruct(float CostTime, int32 AIndex, float AMin, float AMax, int32 BIndex, float BMin, float BMax, float Adscop);
	void InitScopeAndCrossHairVibration(float ScopeVMaxDistanceOffSet, float ScopeVVibrationDuration, float ScopeHMaxDistanceOffSet, float ScopeHVibrationDuration, float ScopeVContinuousFallingDuration, float ScopeVContinuousFallingPointIndex, float VMaxDistanceOffSetScale, float VVibrationDurationScale, float VSingleOffSetScale, float VContinuousOffSetScale, float HMaxDistanceOffSetScale, float HVibrationDurationScale, float HSingleOffSetScale, float HContinuousOffSetScale, float HOffSetProbabilityScale);
	void InitRollRecoilStruct(float CostTime, int32 AIndex, float AMin, float AMax, int32 BIndex, float BMin, float BMax, float Adscop);
	void InitRecoilCOPMap(TArray<class FString>& Keys, TArray<float>& Values);
	void InitPostFireSpreadCurveStruct(const class FString& Path);
	void InitHorizontalRecoilStruct(float CostTime, int32 AIndex, float AMin, float AMax, int32 BIndex, float BMin, float BMax);
	void InitBaseData(int32 Trigger);
};

// 0x10 (0x38 - 0x28)
// Class Solarland.AndroidInputManager
class UAndroidInputManager : public UObject
{
public:
	FMulticastInlineDelegateProperty_            OnAndroidBackPressed;                              // 0x28(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UAndroidInputManager* GetDefaultObj();

};

// 0x10 (0x48 - 0x38)
// Class Solarland.AnimNotify_CharacterFootEffect
class UAnimNotify_CharacterFootEffect : public UAnimNotify
{
public:
	TArray<struct FFootEffect>                   FootEffectList;                                    // 0x38(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UAnimNotify_CharacterFootEffect* GetDefaultObj();

	void AddNewFootEffect(struct FFootEffect& NewEffect);
};

// 0x8 (0x40 - 0x38)
// Class Solarland.AnimNotify_CharacterPlaySoundGroup
class UAnimNotify_CharacterPlaySoundGroup : public UAnimNotify
{
public:
	class FName                                  SoundGroupName;                                    // 0x38(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UAnimNotify_CharacterPlaySoundGroup* GetDefaultObj();

};

// 0x8 (0x40 - 0x38)
// Class Solarland.SolarAnimNotify
class USolarAnimNotify : public UAnimNotify
{
public:
	bool                                         bDynamic;                                          // 0x38(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_160B[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarAnimNotify* GetDefaultObj();

};

// 0x40 (0x80 - 0x40)
// Class Solarland.AnimNotify_CharacterStartSound
class UAnimNotify_CharacterStartSound : public USolarAnimNotify
{
public:
	TArray<struct FCharacterSound>               SoundList;                                         // 0x40(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bUseSwitch;                                        // 0x50(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1611[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FString>                        SwitchGroupNames;                                  // 0x58(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bUseRTPC;                                          // 0x68(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1612[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FString>                        RPTCNames;                                         // 0x70(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UAnimNotify_CharacterStartSound* GetDefaultObj();

	int32 RemoveAllSwitches();
	int32 RemoveAllRPTCs();
	int32 RemoveAllCharacterSounds();
	void AddNewSwitch(const class FString& NewSwitch);
	void AddNewRPTC(const class FString& NewRTPC);
	void AddNewCharacterSound(struct FCharacterSound& NewSound);
};

// 0x10 (0x48 - 0x38)
// Class Solarland.AnimNotify_CharacterStopSound
class UAnimNotify_CharacterStopSound : public UAnimNotify
{
public:
	TArray<struct FCharacterSound>               StopList;                                          // 0x38(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UAnimNotify_CharacterStopSound* GetDefaultObj();

	int32 RemoveAllCharacterSoundStops();
	void AddNewCharacterSoundStop(struct FCharacterSound& NewStop);
};

// 0x8 (0x40 - 0x38)
// Class Solarland.AnimNotify_ExecuteGameplayCueLocal
class UAnimNotify_ExecuteGameplayCueLocal : public UAnimNotify
{
public:
	struct FGameplayCueTag                       GameplayCueTag;                                    // 0x38(0x8)(Edit, BlueprintReadOnly, NoDestructor, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UAnimNotify_ExecuteGameplayCueLocal* GetDefaultObj();

};

// 0x50 (0x88 - 0x38)
// Class Solarland.AnimNotify_FlyWaterEffect
class UAnimNotify_FlyWaterEffect : public UAnimNotify
{
public:
	class UParticleSystem*                       PSTemplate;                                        // 0x38(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UParticleSystem>        PSTemplateSoft;                                    // 0x40(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SocketName;                                        // 0x68(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               LocationOffset;                                    // 0x70(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              RotationOffset;                                    // 0x7C(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UAnimNotify_FlyWaterEffect* GetDefaultObj();

};

// 0x10 (0x48 - 0x38)
// Class Solarland.AnimNotify_LegVehicleRiseDust
class UAnimNotify_LegVehicleRiseDust : public UAnimNotify
{
public:
	TArray<int32>                                NotifyFootIndex;                                   // 0x38(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UAnimNotify_LegVehicleRiseDust* GetDefaultObj();

};

// 0x78 (0xB0 - 0x38)
// Class Solarland.AnimNotify_PlayParticleAsync
class UAnimNotify_PlayParticleAsync : public UAnimNotify
{
public:
	class UParticleSystem*                       PSTemplate;                                        // 0x38(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UParticleSystem>        PSTemplateSoft;                                    // 0x40(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               LocationOffset;                                    // 0x68(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              RotationOffset;                                    // 0x74(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                               Scale;                                             // 0x80(0xC)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1616[0x14];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	uint8                                        Attached : 1;                                      // Mask: 0x1, PropSize: 0x10xA0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_114 : 7;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_1617[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  SocketName;                                        // 0xA4(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1618[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAnimNotify_PlayParticleAsync* GetDefaultObj();

};

// 0x10 (0x48 - 0x38)
// Class Solarland.AnimNotify_PlayPickupSound
class UAnimNotify_PlayPickupSound : public UAnimNotify
{
public:
	class FString                                DefaultSoundEventName;                             // 0x38(0x10)(BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UAnimNotify_PlayPickupSound* GetDefaultObj();

	class FString GetDefaultSoundEventName();
};

// 0x10 (0x48 - 0x38)
// Class Solarland.AnimNotify_ReloadClip
class UAnimNotify_ReloadClip : public UAnimNotify
{
public:
	class FName                                  HandBoneName;                                      // 0x38(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EAnimReloadNotifyType             StepType;                                          // 0x40(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1619[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAnimNotify_ReloadClip* GetDefaultObj();

};

// 0x0 (0x38 - 0x38)
// Class Solarland.AnimNotify_ServerRefreshBones
class UAnimNotify_ServerRefreshBones : public UAnimNotify
{
public:

	static class UClass* StaticClass();
	static class UAnimNotify_ServerRefreshBones* GetDefaultObj();

};

// 0x0 (0x38 - 0x38)
// Class Solarland.AnimNotify_ShieldEndRecharge
class UAnimNotify_ShieldEndRecharge : public UAnimNotify
{
public:

	static class UClass* StaticClass();
	static class UAnimNotify_ShieldEndRecharge* GetDefaultObj();

};

// 0x0 (0x38 - 0x38)
// Class Solarland.AnimNotify_ShieldHideRechargeFX
class UAnimNotify_ShieldHideRechargeFX : public UAnimNotify
{
public:

	static class UClass* StaticClass();
	static class UAnimNotify_ShieldHideRechargeFX* GetDefaultObj();

};

// 0x0 (0x38 - 0x38)
// Class Solarland.AnimNotify_ShieldOperatorSet
class UAnimNotify_ShieldOperatorSet : public UAnimNotify
{
public:

	static class UClass* StaticClass();
	static class UAnimNotify_ShieldOperatorSet* GetDefaultObj();

};

// 0x0 (0x38 - 0x38)
// Class Solarland.AnimNotify_ShieldShowRechargeFX
class UAnimNotify_ShieldShowRechargeFX : public UAnimNotify
{
public:

	static class UClass* StaticClass();
	static class UAnimNotify_ShieldShowRechargeFX* GetDefaultObj();

};

// 0x0 (0x38 - 0x38)
// Class Solarland.AnimNotify_ShieldStartRecharge
class UAnimNotify_ShieldStartRecharge : public UAnimNotify
{
public:

	static class UClass* StaticClass();
	static class UAnimNotify_ShieldStartRecharge* GetDefaultObj();

};

// 0x0 (0x38 - 0x38)
// Class Solarland.AnimNotify_ShieldUpgradeFinishFX
class UAnimNotify_ShieldUpgradeFinishFX : public UAnimNotify
{
public:

	static class UClass* StaticClass();
	static class UAnimNotify_ShieldUpgradeFinishFX* GetDefaultObj();

};

// 0x0 (0x38 - 0x38)
// Class Solarland.AnimNotify_ThrowThrown
class UAnimNotify_ThrowThrown : public UAnimNotify
{
public:

	static class UClass* StaticClass();
	static class UAnimNotify_ThrowThrown* GetDefaultObj();

};

// 0x8 (0x40 - 0x38)
// Class Solarland.AnimNotify_VehicleCameraShake
class UAnimNotify_VehicleCameraShake : public UAnimNotify
{
public:
	TSubclassOf<class UCameraShake>              VehicleCameraShake;                                // 0x38(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UAnimNotify_VehicleCameraShake* GetDefaultObj();

};

// 0x28 (0x60 - 0x38)
// Class Solarland.AnimNotify_VehiclePlaySound
class UAnimNotify_VehiclePlaySound : public UAnimNotify
{
public:
	bool                                         bCheckEnemy;                                       // 0x38(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1622[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                SameTeamSound;                                     // 0x40(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                EnemySound;                                        // 0x50(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UAnimNotify_VehiclePlaySound* GetDefaultObj();

};

// 0x10 (0x48 - 0x38)
// Class Solarland.AnimNotify_VehiclePreviewSound
class UAnimNotify_VehiclePreviewSound : public UAnimNotify
{
public:
	class FString                                Sound;                                             // 0x38(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UAnimNotify_VehiclePreviewSound* GetDefaultObj();

};

// 0x10 (0x48 - 0x38)
// Class Solarland.AnimNotify_VehicleVFX
class UAnimNotify_VehicleVFX : public UAnimNotify
{
public:
	TArray<struct FVehicleVFX>                   VehicleVFXes;                                      // 0x38(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UAnimNotify_VehicleVFX* GetDefaultObj();

};

// 0x0 (0x38 - 0x38)
// Class Solarland.AnimNotify_WeaponBolt
class UAnimNotify_WeaponBolt : public UAnimNotify
{
public:

	static class UClass* StaticClass();
	static class UAnimNotify_WeaponBolt* GetDefaultObj();

};

// 0x20 (0x50 - 0x30)
// Class Solarland.AnimNotifyState_AddLooseGameplayTag
class UAnimNotifyState_AddLooseGameplayTag : public UAnimNotifyState
{
public:
	struct FGameplayTagContainer                 GameplayTags;                                      // 0x30(0x20)(Edit, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UAnimNotifyState_AddLooseGameplayTag* GetDefaultObj();

};

// 0x0 (0x30 - 0x30)
// Class Solarland.AnimNotifyState_AllowPhysicsRotationDuringAnimRootMotion
class UAnimNotifyState_AllowPhysicsRotationDuringAnimRootMotion : public UAnimNotifyState
{
public:

	static class UClass* StaticClass();
	static class UAnimNotifyState_AllowPhysicsRotationDuringAnimRootMotion* GetDefaultObj();

};

// 0x0 (0x30 - 0x30)
// Class Solarland.AnimNotifyState_AutoCancelOnInputReleased
class UAnimNotifyState_AutoCancelOnInputReleased : public UAnimNotifyState
{
public:

	static class UClass* StaticClass();
	static class UAnimNotifyState_AutoCancelOnInputReleased* GetDefaultObj();

};

// 0x8 (0x38 - 0x30)
// Class Solarland.SolarAnimNotifyState
class USolarAnimNotifyState : public UAnimNotifyState
{
public:
	bool                                         bDynamic;                                          // 0x30(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_162D[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarAnimNotifyState* GetDefaultObj();

};

// 0x20 (0x58 - 0x38)
// Class Solarland.AnimNotifyState_CharacterLoopedSound
class UAnimNotifyState_CharacterLoopedSound : public USolarAnimNotifyState
{
public:
	TArray<struct FCharacterSound>               EventListToPlay;                                   // 0x38(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FCharacterSound>               EventListToStop;                                   // 0x48(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UAnimNotifyState_CharacterLoopedSound* GetDefaultObj();

};

// 0x18 (0x48 - 0x30)
// Class Solarland.AnimNotifyState_HideCharacterMesh
class UAnimNotifyState_HideCharacterMesh : public UAnimNotifyState
{
public:
	struct FGameplayTag                          VisibilityTag;                                     // 0x30(0x8)(Edit, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bPropagateToChildren;                              // 0x38(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1631[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class USceneComponent>           ChildrenExceptClass;                               // 0x40(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UAnimNotifyState_HideCharacterMesh* GetDefaultObj();

};

// 0x10 (0x40 - 0x30)
// Class Solarland.AnimNotifyState_InhibitAimOffset
class UAnimNotifyState_InhibitAimOffset : public UAnimNotifyState
{
public:
	float                                        InhibitSmoothTime;                                 // 0x30(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        RecoverSmoothTime;                                 // 0x34(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bCalcRecoverSmoothTimeByRemainingTime;             // 0x38(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1632[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAnimNotifyState_InhibitAimOffset* GetDefaultObj();

};

// 0x10 (0x40 - 0x30)
// Class Solarland.AnimNotifyState_InhibitLeftHandWeaponAttach
class UAnimNotifyState_InhibitLeftHandWeaponAttach : public UAnimNotifyState
{
public:
	float                                        InhibitSmoothTime;                                 // 0x30(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        RecoverSmoothTime;                                 // 0x34(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bCalcRecoverSmoothTimeByRemainingTime;             // 0x38(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1633[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAnimNotifyState_InhibitLeftHandWeaponAttach* GetDefaultObj();

};

// 0x0 (0x30 - 0x30)
// Class Solarland.AnimNotifyState_OpenTreasureBox
class UAnimNotifyState_OpenTreasureBox : public UAnimNotifyState
{
public:

	static class UClass* StaticClass();
	static class UAnimNotifyState_OpenTreasureBox* GetDefaultObj();

};

// 0x8 (0x38 - 0x30)
// Class Solarland.AnimNotifyState_OverrideHitEffectSurfaceType
class UAnimNotifyState_OverrideHitEffectSurfaceType : public UAnimNotifyState
{
public:
	enum class EPhysicalSurface                  SurfaceType;                                       // 0x30(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1639[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAnimNotifyState_OverrideHitEffectSurfaceType* GetDefaultObj();

};

// 0x8 (0x38 - 0x30)
// Class Solarland.AnimNotifyState_PlayGameplayCueLocal
class UAnimNotifyState_PlayGameplayCueLocal : public UAnimNotifyState
{
public:
	struct FGameplayCueTag                       GameplayCueTag;                                    // 0x30(0x8)(Edit, BlueprintReadOnly, NoDestructor, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UAnimNotifyState_PlayGameplayCueLocal* GetDefaultObj();

};

// 0x28 (0x58 - 0x30)
// Class Solarland.AnimNotifyState_RechargeShield
class UAnimNotifyState_RechargeShield : public UAnimNotifyState
{
public:
	struct FGameplayTagContainer                 GameplayTags;                                      // 0x30(0x20)(Edit, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	bool                                         bFXorMesh;                                         // 0x50(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_163D[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAnimNotifyState_RechargeShield* GetDefaultObj();

};

// 0x0 (0x30 - 0x30)
// Class Solarland.AnimNotifyState_RepairVehicleWeakPoints
class UAnimNotifyState_RepairVehicleWeakPoints : public UAnimNotifyState
{
public:

	static class UClass* StaticClass();
	static class UAnimNotifyState_RepairVehicleWeakPoints* GetDefaultObj();

};

// 0x0 (0x30 - 0x30)
// Class Solarland.AnimNotifyState_ShieldUpgradeFX
class UAnimNotifyState_ShieldUpgradeFX : public UAnimNotifyState
{
public:

	static class UClass* StaticClass();
	static class UAnimNotifyState_ShieldUpgradeFX* GetDefaultObj();

};

// 0x20 (0x50 - 0x30)
// Class Solarland.AnimNotifyState_SolarSpawnMeshAndAttach
class UAnimNotifyState_SolarSpawnMeshAndAttach : public UAnimNotifyState
{
public:
	TArray<struct FAttachedMeshInfo>             MeshesInfo;                                        // 0x30(0x10)(Edit, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UStaticMeshComponent*>          SpawnedMeshComps;                                  // 0x40(0x10)(ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UAnimNotifyState_SolarSpawnMeshAndAttach* GetDefaultObj();

};

// 0x80 (0xB0 - 0x30)
// Class Solarland.AnimNotifyState_SolarTimedParticleEffect
class UAnimNotifyState_SolarTimedParticleEffect : public UAnimNotifyState
{
public:
	bool                                         bAsyncLoad;                                        // 0x30(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1645[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UParticleSystem*                       PSTemplate;                                        // 0x38(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UParticleSystem>        PSTemplateSoft;                                    // 0x40(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         Attached;                                          // 0x68(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1646[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  SocketName;                                        // 0x6C(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               LocationOffset;                                    // 0x74(0xC)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              RotationOffset;                                    // 0x80(0xC)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                               Scale;                                             // 0x8C(0xC)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDestroyAtEnd;                                     // 0x98(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bLockRelativeRotation;                             // 0x99(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1649[0x16];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAnimNotifyState_SolarTimedParticleEffect* GetDefaultObj();

};

// 0x20 (0x50 - 0x30)
// Class Solarland.AnimNotifyState_UpgradeShield
class UAnimNotifyState_UpgradeShield : public UAnimNotifyState
{
public:
	struct FGameplayTagContainer                 GameplayTags;                                      // 0x30(0x20)(Edit, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UAnimNotifyState_UpgradeShield* GetDefaultObj();

};

// 0x28 (0x68 - 0x40)
// Class Solarland.AttributeSubExecCalc
class UAttributeSubExecCalc : public UGameplayEffectExecutionCalculation
{
public:
	TSubclassOf<class UAttributeSubExecProxy>    CDOProxyClass;                                     // 0x40(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAttributeSubExecProxy*                CDOProxy;                                          // 0x48(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_164C[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UAttributeSubExecCalc* GetDefaultObj();

};

// 0x8 (0x30 - 0x28)
// Class Solarland.AttributeSubExecProxy
class UAttributeSubExecProxy : public UObject
{
public:
	TWeakObjectPtr<class UAttributeSubExecCalc>  CDOOwner;                                          // 0x28(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UAttributeSubExecProxy* GetDefaultObj();

	void ModifyAttributeSub(class USolarAttributeSubComponent* AttrSubComp, enum class EAttributeSubBehavior Behavior, int32 AttributeSubID, class FName AttrSubTag, float ModifyValue);
	struct FGameplayModifierEvaluatedData MakeExecProxyEvaluated(const struct FGameplayAttribute& InAttribute, float InMagnitud);
	void ExecutePureAttributeSub(class USolarAttributeSubComponent* AttrSubComp, TArray<struct FAttributeSubSetting>& InAttributeSubs);
	void ExecuteAttributeCalculation(class USolarAttributeSubComponent* AttrSubComp, TArray<struct FAttributeSubSetting>& InAttributeSubs, TArray<struct FGameplayAttribute>& InAttribute, TArray<struct FGameplayModifierEvaluatedData>* OutModResults);
	class UAttributeSubExecProxy* CreateProxy(class UAttributeSubExecCalc* InCDOOwner, TSubclassOf<class UAttributeSubExecProxy> ProxyClass);
};

// 0x20 (0x868 - 0x848)
// Class Solarland.AttributeSubGameplayEffect
class UAttributeSubGameplayEffect : public UGameplayEffect
{
public:
	TArray<struct FAttributeSubSetting>          AttributeSubMods;                                  // 0x848(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FAttributeSubSetting>          PureAttributeSubs;                                 // 0x858(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UAttributeSubGameplayEffect* GetDefaultObj();

	void UpdateAttributeBySub(const struct FGameplayAttribute& Attribute);
	class UAttributeSubGameplayEffect* CreateAttributeSubEffectInstance(class UObject* Outer, TSubclassOf<class UAttributeSubExecCalc> AttributeSubCalcClass, TSubclassOf<class UAttributeSubGameplayEffect> Class);
	void CancelPureAttributeSub(int32 AttributeSubID);
	void CancelAttributeSubModify(const struct FGameplayAttribute& Attribute, int32 AttributeSubID);
	void AddPureAttributeSub(int32 AttributeSubID, float Value);
	void AddAttributeSubModify(const struct FGameplayAttribute& Attribute, int32 AttributeSubID, float Value);
};

// 0x0 (0x28 - 0x28)
// Class Solarland.AttributeSubInterface
class IAttributeSubInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IAttributeSubInterface* GetDefaultObj();

	class USolarAttributeSubComponent* GetAttributeSubComponent();
};

// 0x30 (0x630 - 0x600)
// Class Solarland.VertAnimMeshComponent
class UVertAnimMeshComponent : public UStaticMeshComponent
{
public:
	uint8                                        Pad_168E[0x30];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UVertAnimMeshComponent* GetDefaultObj();

	void PlayInfo(struct FVertexAnimInfo& InAnimInfo);
	void Play(int32 InStartFrame, int32 InEndFrame, float InLength, bool InLoop);
};

// 0xE0 (0x710 - 0x630)
// Class Solarland.BackpackVertAnimMeshComponent
class UBackpackVertAnimMeshComponent : public UVertAnimMeshComponent
{
public:
	struct FVertexAnimInfo                       DefaultAnimInfo;                                   // 0x630(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	TMap<enum class EBackPackAnimSubType, struct FVertexAnimInfo> BackPackAnimInfoMap;                               // 0x640(0x50)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class ASolarCharacter*                       SolarCharacter;                                    // 0x690(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ASolarBackpackActor*                   BackPackActor;                                     // 0x698(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1692[0x70];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBackpackVertAnimMeshComponent* GetDefaultObj();

};

// 0x0 (0x30 - 0x30)
// Class Solarland.SolarAttributeSet
class USolarAttributeSet : public UAttributeSet
{
public:

	static class UClass* StaticClass();
	static class USolarAttributeSet* GetDefaultObj();

	void K2_SetAttributeValue(class FName AttributeName, float NewVal);
	void K2_OnReplicationAttribute(struct FGameplayAttributeData& OldValue, struct FGameplayAttributeData& ReplicatedAttribute, class FName AttributeName);
	void K2_InitAttributeValue(struct FGameplayAttributeData& OriginAttribute, float NewVal);
	float K2_GetAttributeValue(struct FGameplayAttributeData& OriginAttribute);
	struct FGameplayAttribute K2_GetAttribute(class FName AttributeName);
};

// 0x20 (0x50 - 0x30)
// Class Solarland.BasalAttributeSet
class UBasalAttributeSet : public USolarAttributeSet
{
public:
	struct FGameplayAttributeData                MaxHealth;                                         // 0x30(0x10)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, Protected, NativeAccessSpecifierProtected)
	struct FGameplayAttributeData                CurrentHealth;                                     // 0x40(0x10)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UBasalAttributeSet* GetDefaultObj();

	void OnRep_MaxHealth(struct FGameplayAttributeData& Previous);
	void OnRep_CurrentHealth(struct FGameplayAttributeData& Previous);
};

// 0xD8 (0x338 - 0x260)
// Class Solarland.BattleChat
class UBattleChat : public UUserWidget
{
public:
	class UGaugeImage*                           ChatCDMask;                                        // 0x260(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                ImgBG;                                             // 0x268(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCheckBoxGroup*                        CBGroupOperation;                                  // 0x270(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UScrollBox*                            PanelChatOptions;                                  // 0x278(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarCheckBox*                        CBoxChatSwitch;                                    // 0x280(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      AnimChatCooldown;                                  // 0x288(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UQuickChatUnit>            ChatButtonClass;                                   // 0x290(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FSlateBrush                           SeparatorBrush;                                    // 0x298(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_16CB[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBattleChat* GetDefaultObj();

	void SetLogDisplay(bool bDisplay);
	void ReceiveQuickMessage(const class FString& InName, const class FString& InMessage1, bool bLocalPlayer, bool bSound, int32 PosInTeam, const class FString& InMessage2);
	void ReceiveQuickChatSending();
	void OnGroupOperationStateChanged(TArray<class UCheckBox*>& ChildChangedArray, int32 CheckedChildIndex);
};

// 0x0 (0x318 - 0x318)
// Class Solarland.SolarHUD
class ASolarHUD : public AHUD
{
public:

	static class UClass* StaticClass();
	static class ASolarHUD* GetDefaultObj();

};

// 0x80 (0x398 - 0x318)
// Class Solarland.BattleHUDBase
class ABattleHUDBase : public ASolarHUD
{
public:
	TSubclassOf<class UHUDDispatcherBase>        Dispatcher;                                        // 0x318(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHUDDispatcherBase*                    WidgetEventDispatcher;                             // 0x320(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bUseBattleDeathView;                               // 0x328(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_16E3[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USolarPlayersHPModel*                  PlayersHPModel;                                    // 0x330(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USolarPlayersShieldModel*              PlayersShieldModel;                                // 0x338(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USolarTeamInfoModel*                   TeamInfoModelModel;                                // 0x340(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_16E5[0x50];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ABattleHUDBase* GetDefaultObj();

	void ShowDiePage_Deprecated();
	void OnPlayerStateRepInController(enum class EPlayerStateRepType RepType, class APlayerState* PlayerState);
	void OnPlayerStateRepInCharacter(enum class EPlayerStateRepType RepType, class APlayerState* PlayerState);
	void OnNewTeamInfo(class ASolarTeamInfo* TeamInfo);
	void OnCharacterEndPlay(class ASolarCharacter* Character);
	class UUISubsystem* GetUISubSystem();
	void CloseDiePage_Deprecated(TSubclassOf<class UUserWidget> InDiePageClass);
};

// 0x0 (0x398 - 0x398)
// Class Solarland.BattleHUDForTechDesign
class ABattleHUDForTechDesign : public ABattleHUDBase
{
public:

	static class UClass* StaticClass();
	static class ABattleHUDForTechDesign* GetDefaultObj();

};

// 0x28 (0x370 - 0x348)
// Class Solarland.UINoticeBase
class UUINoticeBase : public USolarUserWidget
{
public:
	class USolarRichTextBlock*                   TextWidget;                                        // 0x348(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                TxtBg;                                             // 0x350(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                Icon;                                              // 0x358(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                IconBg;                                            // 0x360(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_16F9[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UUINoticeBase* GetDefaultObj();

	void ShowEnterAnimation();
	void SetIconBrush(const class FString& IconPath);
	void SetColor(struct FNoticeColorData& InColorData);
	void ResetIsPlayingVoice(enum class EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo);
	class UWidgetAnimation* GetExitAnimation();
	class UWidgetAnimation* GetEnterAnimation();
	void DefaultClose();
	void CloseNotice();
};

// 0xE8 (0x458 - 0x370)
// Class Solarland.BattleNoticeEquipReplace
class UBattleNoticeEquipReplace : public UUINoticeBase
{
public:
	class UImage*                                Img_Item1;                                         // 0x370(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Img_Item2;                                         // 0x378(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Img_Item1_BG;                                      // 0x380(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Img_Item2_BG;                                      // 0x388(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                            Quality1;                                          // 0x390(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                            Quality2;                                          // 0x398(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Enter_Animation_0;                                 // 0x3A0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Enter_Animation_1;                                 // 0x3A8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Enter_Animation_2;                                 // 0x3B0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<enum class EItemType, TSoftObjectPtr<class UTexture2D>> DefaultEquipIcons;                                 // 0x3B8(0x50)(Edit, BlueprintVisible, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TMap<enum class EWeaponPartType, TSoftObjectPtr<class UTexture2D>> DefaultWeaponPartIcons;                            // 0x408(0x50)(Edit, BlueprintVisible, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UBattleNoticeEquipReplace* GetDefaultObj();

	void OnEquipReplaceAnimFinished();
};

// 0x30 (0x3A0 - 0x370)
// Class Solarland.BattleNoticePickup
class UBattleNoticePickup : public UUINoticeBase
{
public:
	class USolarTextBlock*                       Txt_PickupNotice_ItemName;                         // 0x370(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarTextBlock*                       Txt_PickupNotice_Head;                             // 0x378(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarTextBlock*                       Txt_PickupNotice_Tail;                             // 0x380(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Img_Txt_bg;                                        // 0x388(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FLinearColor>                  QualityColor;                                      // 0x390(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UBattleNoticePickup* GetDefaultObj();

};

// 0x10 (0x3A8 - 0x398)
// Class Solarland.BattleOBHUD
class ABattleOBHUD : public ABattleHUDBase
{
public:
	uint8                                        Pad_170F[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USolarOBUIModel*                       SolarOBUIModel;                                    // 0x3A0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class ABattleOBHUD* GetDefaultObj();

	void SetBattleOBHUDType(enum class EBattleOBHUDType& Type);
	void OpenShortCutKeyboard();
	class UOBHUDDispatcher* GetOBHUDDispatcher();
	enum class EBattleOBHUDType GetBattleOBHUDType();
	void AddWidgetToOBRoot(class UPanelSlot** ResultSlot, class UWidget* InChildWidget, class FName& PanelName, bool bReplaceOld);
};

// 0x10 (0x38 - 0x28)
// Class Solarland.BattlePassConfigInfo
class UBattlePassConfigInfo : public UObject
{
public:
	TArray<struct FBattlePassLevelInfo>          BattlePassLevel;                                   // 0x28(0x10)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UBattlePassConfigInfo* GetDefaultObj();

	bool IsMaxLevelWithExp(int32 BattlePassID, int32 TotalExp);
	void Initialize();
	int32 GetLevelByTestExp(int32 BattlePassID, int32 InTestExp);
	int32 GetExpNeedForLv(int32 BattlePassID, int32 Level);
	int32 GetBattllePassMaxLevel(int32 BattlePassID);
};

// 0x308 (0x650 - 0x348)
// Class Solarland.BattlePromptWidget
class UBattlePromptWidget : public USolarUserWidget
{
public:
	uint8                                        Pad_1729[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UCanvasPanel*                          EnterAnimPanel;                                    // 0x358(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMeshRectangleWidget*                  MeshWidget_Arrow;                                  // 0x360(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMeshRectangleWidget*                  MeshWidget_Detail;                                 // 0x368(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<enum class EBattlePromptType, enum class EBattlePromptType> DisplayTypeMap;                                    // 0x370(0x50)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TMap<enum class EBattlePromptType, int32>    TypeUVMap;                                         // 0x3C0(0x50)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                        ElemIconDifference;                                // 0x410(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_172B[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<enum class EBattlePromptType, float>    ElemRadiusMap;                                     // 0x418(0x50)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	int32                                        ThreatFactorDefault;                               // 0x468(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_172C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<enum class EBattlePromptType, class UCurveFloat*> ElemArrowColorCurveMap;                            // 0x470(0x50)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TMap<enum class EBattlePromptType, class UCurveFloat*> ElemArrowLengthCurveMap;                           // 0x4C0(0x50)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TMap<enum class EBattlePromptType, class UCurveFloat*> ElemIconScaleCurveMap;                             // 0x510(0x50)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	int32                                        CloseCheckAngleDefault;                            // 0x560(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_172F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UCurveFloat*                           CloseCheckAngleCurve;                              // 0x568(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ElemLerpSpeed;                                     // 0x570(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        EditorTestColorFactor;                             // 0x574(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        EditorTestLengthFactor;                            // 0x578(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        EditorTestAngle;                                   // 0x57C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSet<class AActor*>                          EffectedNightmareActors;                           // 0x580(0x50)(NativeAccessSpecifierPublic)
	uint8                                        Pad_1730[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FPromptElemInfo>               Datas;                                             // 0x5F0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1731[0x50];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBattlePromptWidget* GetDefaultObj();

	void PlayForbidAnim(bool bQuickEnter);
	void OnSpecTargetChanged(class ASolarPlayerState* OldTarget, class ASolarPlayerState* NewTarget);
	void OnNightComesActorChanged(class AActor* InActor);
};

// 0x50 (0x398 - 0x348)
// Class Solarland.BattleSubSundry
class UBattleSubSundry : public USolarUserWidget
{
public:
	class UScrollBox*                            PanelInformation;                                  // 0x348(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarRichTextBlock*                   TxtInformation03;                                  // 0x350(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarRichTextBlock*                   TxtInformation02;                                  // 0x358(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarRichTextBlock*                   TxtInformation01;                                  // 0x360(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      AnimInformationDisappear;                          // 0x368(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MaxMessageStock;                                   // 0x370(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ChatCoolDown;                                      // 0x374(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        InfoKeepDuration;                                  // 0x378(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1740[0x1C];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBattleSubSundry* GetDefaultObj();

	void ReceiveQuickMessage(const class FString& InName, const class FString& InMessage, bool bLocalPlayer, bool bSound, int32 PosInTeam, const class FString& InMessage2);
	void OnPlayerStateRep(enum class EPlayerStateRepType RepType, class APlayerState* PlayerState);
};

// 0x50 (0x80 - 0x30)
// Class Solarland.BattleUpgradeEffectCategoryData
class UBattleUpgradeEffectCategoryData : public UDataAsset
{
public:
	TMap<enum class EBattleUpgradeEffectCategory, struct FBattleUpgradeEffectCategoryConfig> CategoryConfigMap;                                 // 0x30(0x50)(Edit, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UBattleUpgradeEffectCategoryData* GetDefaultObj();

	void BreakBattleUpgradeEffectCategoryColorSet(struct FBattleUpgradeEffectCategoryColorSet& ColorSet, struct FLinearColor* BannerCategoryTextColor, struct FLinearColor* BannerIconColor, struct FLinearColor* BannerBorderColor, struct FLinearColor* BannerBackgroundColor, struct FLinearColor* BadgeIconColor, struct FLinearColor* BadgeBackgroundColor);
};

// 0x58 (0x90 - 0x38)
// Class Solarland.BattleUpgradeEffectSettings
class UBattleUpgradeEffectSettings : public UDeveloperSettings
{
public:
	TSoftObjectPtr<class UDataTable>             EffectTypeConfig;                                  // 0x38(0x28)(Edit, Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SelectEffectHintLocalTextID;                       // 0x60(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1751[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UBattleUpgradeEffectCategoryData> EffectCategoryData;                                // 0x68(0x28)(Edit, Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UBattleUpgradeEffectSettings* GetDefaultObj();

};

// 0x168 (0x390 - 0x228)
// Class Solarland.BigWaterGun
class ABigWaterGun : public AActor
{
public:
	float                                        CylinderRadius;                                    // 0x228(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CylinderLength;                                    // 0x22C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TraceInterval;                                     // 0x230(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DamageChaPerInterval;                              // 0x234(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DamageVehPerInterval;                              // 0x238(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DamageDecayFirst;                                  // 0x23C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DamageDecaySecond;                                 // 0x240(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_175B[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSoftObjectPath                       MeshPath;                                          // 0x248(0x18)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  MeshSocket;                                        // 0x260(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRotator                              WaterColumnEffectRotator;                          // 0x268(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_175D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UParticleSystem*                       WaterColumnEffect;                                 // 0x278(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  InstigatorEffectID;                                // 0x280(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UCameraShake>              CameraShakeClass;                                  // 0x288(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UUserWidget>               InCrossHairClass;                                  // 0x290(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        NearlyEndTime;                                     // 0x298(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bShowDebug;                                        // 0x29C(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1760[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               TraceStartRelativeLocation;                        // 0x2A0(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               TraceStartRelativeLocation_Crouch;                 // 0x2AC(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MuzzleTraceOffset;                                 // 0x2B8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  ShotAnimNotifyName;                                // 0x2BC(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  UnequipAnimNotifyName;                             // 0x2C4(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  UnequipAnimNotifyName_Gatling;                     // 0x2CC(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1764[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UCurveFloat*                           DamageDecayCurve;                                  // 0x2D8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          ChaSlowDownDecayDataTag;                           // 0x2E0(0x8)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveFloat*                           ChaSlowDownDecayCurve;                             // 0x2E8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          VehSlowDownDecayDataTag;                           // 0x2F0(0x8)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveFloat*                           VehSlowDownDecayCurve;                             // 0x2F8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        OcclusionCheckZOffset;                             // 0x300(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1768[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<TSubclassOf<class ASummonItemBase>>   BlockDamageItemClasses;                            // 0x308(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkeletalMeshComponent*                Mesh;                                              // 0x318(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bInFire;                                           // 0x320(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bHitOther;                                         // 0x321(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_176A[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UParticleSystemComponent*              ClientWaterColumnEffectHandle;                     // 0x328(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        InstigatorEffectHandle;                            // 0x330(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_176C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UCameraShake*                          CameraShakeInstance;                               // 0x338(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_176E[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UCrossHairWidget*                      CrossHairWidget;                                   // 0x348(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayEffectSpecHandle             SlowDownEffectHandle;                              // 0x350(0x10)(NativeAccessSpecifierPrivate)
	uint8                                        Pad_176F[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  LeftHandIKGripSocketName;                          // 0x380(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          BigWaterGunOrnamentTag;                            // 0x388(0x8)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class ABigWaterGun* GetDefaultObj();

	void PlayNearlyEndSound();
	void OnRep_InFire();
	void OnRep_HitOther();
	void OnMontageNotifyCallBack(class FName NotifyName, struct FBranchingPointNotifyPayload& BranchingPointNotifyPayload);
};

// 0x50 (0x278 - 0x228)
// Class Solarland.SpawnerInGuide
class ASpawnerInGuide : public AActor
{
public:
	int32                                        BotAISpawnerId;                                    // 0x228(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        BotAICharacterId;                                  // 0x22C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TeamID;                                            // 0x230(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_177A[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                AIName;                                            // 0x238(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSpawnDeathBox;                                    // 0x248(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSpawnBeginPlay;                                   // 0x249(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_177D[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DelaySec;                                          // 0x24C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               SpawnLocationOffset;                               // 0x250(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_177E[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class ASolarBotAIController>     BotAIControllerClass;                              // 0x260(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_177F[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASpawnerInGuide* GetDefaultObj();

	class ASolarBotAIController* SpawnBotAI();
	void SetBotAIConfig(class ASolarBotAIController* Ctrl);
	class ASolarBotAIController* GetSpawnedAIController();
};

// 0x40 (0x2B8 - 0x278)
// Class Solarland.BotAISpawnerInGuide
class ABotAISpawnerInGuide : public ASpawnerInGuide
{
public:
	class UBehaviorTree*                         BehaviorTree;                                      // 0x278(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FDeathBoxItemData>             DeathBoxItems;                                     // 0x280(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        BotDefaultWeaponId;                                // 0x290(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                       BotShootDisperse;                                  // 0x294(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HitRate;                                           // 0x298(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ActiveDamageRate;                                  // 0x29C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        NoDamageLeftHP;                                    // 0x2A0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BotAttackRange;                                    // 0x2A4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               MoveTarget;                                        // 0x2A8(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_178B[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ABotAISpawnerInGuide* GetDefaultObj();

};

// 0x8 (0xC8 - 0xC0)
// Class Solarland.BTDecorator_BlackboardDelay
class UBTDecorator_BlackboardDelay : public UBTDecorator_Blackboard
{
public:
	float                                        DelaySeconds;                                      // 0xC0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bOnlyDelayLowerPri;                                // 0xC4(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_178F[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBTDecorator_BlackboardDelay* GetDefaultObj();

};

// 0x8 (0x98 - 0x90)
// Class Solarland.BTDecorator_TickFlow
class UBTDecorator_TickFlow : public UBTDecorator_BlackboardBase
{
public:
	float                                        TickInterval;                                      // 0x90(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1791[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBTDecorator_TickFlow* GetDefaultObj();

};

// 0x10 (0xA8 - 0x98)
// Class Solarland.BTDecorator_BotAttributeCompare
class UBTDecorator_BotAttributeCompare : public UBTDecorator_TickFlow
{
public:
	enum class EBotAttrType                      AttrType;                                          // 0x98(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EBotAttrValueType                 ValueType;                                         // 0x99(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EBotAttrOperator                  Operator;                                          // 0x9A(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1793[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        CompareValue;                                      // 0x9C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCheckVehicle;                                     // 0xA0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1794[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        EqualThreshold;                                    // 0xA4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UBTDecorator_BotAttributeCompare* GetDefaultObj();

};

// 0x8 (0xA0 - 0x98)
// Class Solarland.BTDecorator_BotCheck
class UBTDecorator_BotCheck : public UBTDecorator_TickFlow
{
public:
	enum class EBotCheckCondition                Condition;                                         // 0x98(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1796[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBTDecorator_BotCheck* GetDefaultObj();

};

// 0x8 (0xA0 - 0x98)
// Class Solarland.BTDecorator_BotCheckAIServer
class UBTDecorator_BotCheckAIServer : public UBTDecorator_TickFlow
{
public:
	enum class EBotCheckAIServer                 Action;                                            // 0x98(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1798[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBTDecorator_BotCheckAIServer* GetDefaultObj();

};

// 0x20 (0xB8 - 0x98)
// Class Solarland.BTDecorator_BotCheckGameplayTags
class UBTDecorator_BotCheckGameplayTags : public UBTDecorator_TickFlow
{
public:
	struct FGameplayTagContainer                 AbilityTags;                                       // 0x98(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UBTDecorator_BotCheckGameplayTags* GetDefaultObj();

};

// 0x8 (0xA0 - 0x98)
// Class Solarland.BTDecorator_BotCheckInEffectArea
class UBTDecorator_BotCheckInEffectArea : public UBTDecorator_TickFlow
{
public:
	enum class EPerceivableEffectAreaType        CheckInAreaType;                                   // 0x98(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCheckAreaTendency;                                // 0x99(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EPerceivableEffectAreaTendency    AreaTendency;                                      // 0x9A(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_179D[0x5];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBTDecorator_BotCheckInEffectArea* GetDefaultObj();

};

// 0x8 (0xA0 - 0x98)
// Class Solarland.BTDecorator_BotCheckNgaiMLAction
class UBTDecorator_BotCheckNgaiMLAction : public UBTDecorator_TickFlow
{
public:
	enum class EBotCheckNgaiMLAction             Action;                                            // 0x98(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_17A1[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBTDecorator_BotCheckNgaiMLAction* GetDefaultObj();

};

// 0x8 (0x70 - 0x68)
// Class Solarland.BTDecorator_BotCheckRoleAbility
class UBTDecorator_BotCheckRoleAbility : public UBTDecorator
{
public:
	struct FGameplayTag                          AbilityTag;                                        // 0x68(0x8)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UBTDecorator_BotCheckRoleAbility* GetDefaultObj();

};

// 0x0 (0x68 - 0x68)
// Class Solarland.BTDecorator_BotCheckShieldUpgradeItem
class UBTDecorator_BotCheckShieldUpgradeItem : public UBTDecorator
{
public:

	static class UClass* StaticClass();
	static class UBTDecorator_BotCheckShieldUpgradeItem* GetDefaultObj();

};

// 0x8 (0xA0 - 0x98)
// Class Solarland.BTDecorator_BotCheckState
class UBTDecorator_BotCheckState : public UBTDecorator_TickFlow
{
public:
	enum class EBotCheckState                    CheckState;                                        // 0x98(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_17A3[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBTDecorator_BotCheckState* GetDefaultObj();

};

// 0x8 (0xA0 - 0x98)
// Class Solarland.BTDecorator_BotCheckTeamMemberState
class UBTDecorator_BotCheckTeamMemberState : public UBTDecorator_TickFlow
{
public:
	enum class ESolarBotMemberState              CheckState;                                        // 0x98(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_17A5[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBTDecorator_BotCheckTeamMemberState* GetDefaultObj();

};

// 0x8 (0x98 - 0x90)
// Class Solarland.BTDecorator_BotCheckWeaponType
class UBTDecorator_BotCheckWeaponType : public UBTDecorator_BlackboardBase
{
public:
	enum class EWeaponType                       WeaponType;                                        // 0x90(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCheckById;                                        // 0x91(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_17A6[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        Weaponid;                                          // 0x94(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UBTDecorator_BotCheckWeaponType* GetDefaultObj();

};

// 0x18 (0xB0 - 0x98)
// Class Solarland.BTDecorator_BotWasRecentlyDetectArea
class UBTDecorator_BotWasRecentlyDetectArea : public UBTDecorator_TickFlow
{
public:
	float                                        TimeThresholdMax;                                  // 0x98(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TimeThresholdMin;                                  // 0x9C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TimeThresholdMinDeviation;                         // 0xA0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bSpecifyAreaType;                                  // 0xA4(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EPerceivableEffectAreaType        SpecifiedAreaType;                                 // 0xA5(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bSpecifyAreaTendency;                              // 0xA6(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EPerceivableEffectAreaTendency    SpecifiedAreaTendency;                             // 0xA7(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MinInfluenceValue;                                 // 0xA8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_17A8[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBTDecorator_BotWasRecentlyDetectArea* GetDefaultObj();

};

// 0x18 (0xB0 - 0x98)
// Class Solarland.BTDecorator_BotWasRecentlyHit
class UBTDecorator_BotWasRecentlyHit : public UBTDecorator_TickFlow
{
public:
	float                                        TimeThresholdMax;                                  // 0x98(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIncludeHearingHit;                                // 0x9C(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bTriggerDelay;                                     // 0x9D(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_17AB[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TriggerDelaySeconds;                               // 0xA0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TriggerDelaySecondsDeviation;                      // 0xA4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TriggerExpiredSeconds;                             // 0xA8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_17AC[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBTDecorator_BotWasRecentlyHit* GetDefaultObj();

};

// 0x8 (0xA0 - 0x98)
// Class Solarland.BTDecorator_CheckGetOnPlayerVehicle
class UBTDecorator_CheckGetOnPlayerVehicle : public UBTDecorator_TickFlow
{
public:
	float                                        AcceptableRadius;                                  // 0x98(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_17AE[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBTDecorator_CheckGetOnPlayerVehicle* GetDefaultObj();

};

// 0x8 (0xC8 - 0xC0)
// Class Solarland.BTDecorator_CheckTagState
class UBTDecorator_CheckTagState : public UBTDecorator_Blackboard
{
public:
	struct FGameplayTag                          CheckStateTag;                                     // 0xC0(0x8)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UBTDecorator_CheckTagState* GetDefaultObj();

};

// 0x90 (0x128 - 0x98)
// Class Solarland.BTDecorator_DistanceCompare
class UBTDecorator_DistanceCompare : public UBTDecorator_TickFlow
{
public:
	enum class EDistanceComparison               Operator;                                          // 0x98(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_17B0[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FBlackboardKeySelector                BlackboardKeyFrom;                                 // 0xA0(0x28)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FBlackboardKeySelector                BlackboardKeyTo;                                   // 0xC8(0x28)(Edit, Protected, NativeAccessSpecifierProtected)
	float                                        DistanceToCompare;                                 // 0xF0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_17B1[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FBlackboardKeySelector                BBK_DistanceToCompare;                             // 0xF8(0x28)(Edit, Protected, NativeAccessSpecifierProtected)
	bool                                         bDistance2D;                                       // 0x120(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_17B2[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        EqualThreshold;                                    // 0x124(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UBTDecorator_DistanceCompare* GetDefaultObj();

};

// 0x8 (0x78 - 0x70)
// Class Solarland.BTDecorator_TimeLimitRand
class UBTDecorator_TimeLimitRand : public UBTDecorator_TimeLimit
{
public:
	float                                        RandDeviation;                                     // 0x70(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_17B4[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBTDecorator_TimeLimitRand* GetDefaultObj();

};

// 0x10 (0xA8 - 0x98)
// Class Solarland.BTDecorator_VehicleCheck
class UBTDecorator_VehicleCheck : public UBTDecorator_TickFlow
{
public:
	TArray<int32>                                VehicleIDs;                                        // 0x98(0x10)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UBTDecorator_VehicleCheck* GetDefaultObj();

};

// 0xB0 (0xD8 - 0x28)
// Class Solarland.BuffEffectActorGroupVO
class UBuffEffectActorGroupVO : public UObject
{
public:
	uint8                                        Pad_17B5[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<class FName, struct FBuffEffectActorElemList> InstantActorListMap;                               // 0x30(0x50)(Transient, NativeAccessSpecifierPublic)
	uint8                                        Pad_17B6[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<class FName, class UBuffEffectActorElem*> DurationActorMap;                                  // 0x88(0x50)(Transient, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UBuffEffectActorGroupVO* GetDefaultObj();

};

// 0x18 (0x40 - 0x28)
// Class Solarland.BuffEffectVO
class UBuffEffectVO : public UObject
{
public:
	uint8                                        Pad_17B8[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBuffEffectVO* GetDefaultObj();

};

// 0x18 (0x58 - 0x40)
// Class Solarland.BuffEffectActorVO
class UBuffEffectActorVO : public UBuffEffectVO
{
public:
	uint8                                        Pad_17B9[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBuffEffectActorVO* GetDefaultObj();

};

// 0x18 (0x40 - 0x28)
// Class Solarland.BuffEffectActorElem
class UBuffEffectActorElem : public UObject
{
public:
	uint8                                        Pad_17BB[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBuffEffectActorElem* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Solarland.BuffEffectLibrary
class UBuffEffectLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UBuffEffectLibrary* GetDefaultObj();

	void StopScreenEffect(class UObject* WorldContextObject, int32 InHandle);
	void StopActorEffect(class UObject* WorldContextObject, int32 InHandle);
	int32 StartScreenEffect(class UObject* WorldContextObject, const class FString& RowName);
	int32 StartActorEffect(class UObject* WorldContextObject, const class FString& RowName, class USceneComponent* AttachToComponent);
	TArray<class UParticleSystemComponent*> GetActorEffectPSComponents(class UObject* WorldContextObject, int32 InHandle);
};

// 0x1B0 (0x4F8 - 0x348)
// Class Solarland.BuffEffectScreenPanel
class UBuffEffectScreenPanel : public USolarUserWidget
{
public:
	uint8                                        Pad_17C6[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UCanvasPanel*                          LayerDurationGroup;                                // 0x358(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                          LayerDurationTwoSidePart;                          // 0x360(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                          LayerDurationBottomHalfPart;                       // 0x368(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                          LayerDurationBorderPart;                           // 0x370(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                          LayerDurationTopHalfPart;                          // 0x378(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                          LayerDurationFullPart;                             // 0x380(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                          LayerInstantGroup;                                 // 0x388(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                          LayerInstantTwoSidePart;                           // 0x390(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                          LayerInstantBottomHalfPart;                        // 0x398(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                          LayerInstantBorderPart;                            // 0x3A0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                          LayerInstantTopHalfPart;                           // 0x3A8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                          LayerInstantFullPart;                              // 0x3B0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_17C7[0xA0];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<int32, class USolarScreenEffectWidget*> HandleToWidget;                                    // 0x458(0x50)(ExportObject, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TMap<TSubclassOf<class USolarScreenEffectWidget>, struct FScreenEffectWidgetCacheInfo> WidgetsCanBeReused;                                // 0x4A8(0x50)(ContainsInstancedReference, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UBuffEffectScreenPanel* GetDefaultObj();

};

// 0x1F0 (0x220 - 0x30)
// Class Solarland.BuffEffectSubsystem
class UBuffEffectSubsystem : public UWorldSubsystem
{
public:
	uint8                                        Pad_17CF[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<uint32, class UBuffEffectActorGroupVO*> BuffEffectActorGroupMap;                           // 0x40(0x50)(Transient, NativeAccessSpecifierPrivate)
	TMap<uint32, class UBuffEffectActorElem*>    BuffEffectActorElemMap;                            // 0x90(0x50)(Transient, NativeAccessSpecifierPrivate)
	TMap<int32, class UBuffEffectActorVO*>       BuffEffectActorHandleMap;                          // 0xE0(0x50)(Transient, NativeAccessSpecifierPrivate)
	TMap<enum class EBuffEffectTagType, struct FScreenEffectGroup> ScreenEffectGroups;                                // 0x130(0x50)(Transient, NativeAccessSpecifierPrivate)
	uint8                                        Pad_17D0[0xA0];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBuffEffectSubsystem* GetDefaultObj();

	void StopScreenEffect(int32 InHandle);
	void StopActorEffect(int32 InHandle);
	int32 StartScreenEffectSafe(class FName& RowName);
	int32 StartScreenEffect(const class FString& RowName);
	int32 StartActorEffectSafe(class FName& RowName, class USceneComponent* AttachToComponent);
	int32 StartActorEffect(const class FString& RowName, class USceneComponent* AttachToComponent);
	void OnPSCompFinish(class UParticleSystemComponent* PSComponent);
	TArray<class UParticleSystemComponent*> GetActorEffectPSComponents(int32 InHandle);
};

// 0x70 (0xB8 - 0x48)
// Class Solarland.CameraModifier_CameraShakeWithCurve
class UCameraModifier_CameraShakeWithCurve : public UCameraModifier
{
public:
	TMap<TSubclassOf<class UCameraShakeWithCurve>, struct FCameraShakeWithCurvePool> ShakePoolByClass;                                  // 0x48(0x50)(NativeAccessSpecifierPrivate)
	TArray<struct FCameraShakeWithCurveTemplatePool> ShakePoolByTemplate;                               // 0x98(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FActiveCameraShakeWithCurve>   ActiveShakes;                                      // 0xA8(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UCameraModifier_CameraShakeWithCurve* GetDefaultObj();

};

// 0xB8 (0xE0 - 0x28)
// Class Solarland.CameraShakeWithCurve
class UCameraShakeWithCurve : public UObject
{
public:
	bool                                         bSingleInstance;                                   // 0x28(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDisableObjectPool;                                // 0x29(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_17D5[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UCameraModifier_CameraShakeWithCurve*  Modifier;                                          // 0x30(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        ShakeTime;                                         // 0x38(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_17D6[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRuntimeFloatCurve                    ShakeCurve;                                        // 0x40(0x88)(Edit, NativeAccessSpecifierPrivate)
	TArray<class UCameraShakeWithCurve_Element*> ShakeElements;                                     // 0xC8(0x10)(Edit, ExportObject, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_17D7[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UCameraShakeWithCurve* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Solarland.CameraShakeWithCurve_Element
class UCameraShakeWithCurve_Element : public UObject
{
public:

	static class UClass* StaticClass();
	static class UCameraShakeWithCurve_Element* GetDefaultObj();

};

// 0x38 (0x60 - 0x28)
// Class Solarland.CameraShakeWithCurve_Location
class UCameraShakeWithCurve_Location : public UCameraShakeWithCurve_Element
{
public:
	struct FSymmetricRangeFloat                  XRange;                                            // 0x28(0xC)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	struct FSymmetricRangeFloat                  YRange;                                            // 0x34(0xC)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	struct FSymmetricRangeFloat                  ZRange;                                            // 0x40(0xC)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	bool                                         bLocalSpace;                                       // 0x4C(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_17D8[0x13];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UCameraShakeWithCurve_Location* GetDefaultObj();

};

// 0x30 (0x58 - 0x28)
// Class Solarland.CameraShakeWithCurve_Rotation
class UCameraShakeWithCurve_Rotation : public UCameraShakeWithCurve_Element
{
public:
	struct FSymmetricRangeFloat                  PitchRange;                                        // 0x28(0xC)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	struct FSymmetricRangeFloat                  YawRange;                                          // 0x34(0xC)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	struct FSymmetricRangeFloat                  RollRange;                                         // 0x40(0xC)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_17D9[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UCameraShakeWithCurve_Rotation* GetDefaultObj();

};

// 0x10 (0x38 - 0x28)
// Class Solarland.CameraShakeWithCurve_FOV
class UCameraShakeWithCurve_FOV : public UCameraShakeWithCurve_Element
{
public:
	struct FRangeFloat                           FOVRange;                                          // 0x28(0x8)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_17DA[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UCameraShakeWithCurve_FOV* GetDefaultObj();

};

// 0x60 (0x90 - 0x30)
// Class Solarland.CapsuleFormationData
class UCapsuleFormationData : public UDataAsset
{
public:
	TMap<uint8, struct FEchelonFormation>        TeamFormation;                                     // 0x30(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FCruiseFormation                      CruiseFormation;                                   // 0x80(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UCapsuleFormationData* GetDefaultObj();

	void OverrideTeamFormation(TMap<uint8, struct FEchelonFormation>& InNewFormation);
	void ClearTeamFormationData();
	void ClearCruiseFormationData();
	void AddTeamFormationLocation(uint8 InEchelon, struct FVector& InLocation);
	void AddLocationToTeamFormation(TMap<uint8, struct FEchelonFormation>& InFormation, uint8 InEchelon, struct FVector& InLocation);
	void AddEchelonFormation(uint8 InEchelon, struct FEchelonFormation& InFormation);
	void AddCruiseFormation(struct FCruiseFormation& InFormation);
};

// 0xF0 (0x228 - 0x138)
// Class Solarland.CardView
class UCardView : public UWidget
{
public:
	TSubclassOf<class UUserWidget>               EntryWidgetClass;                                  // 0x138(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FUserWidgetPool                       EntryWidgetPool;                                   // 0x140(0x80)(Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	float                                        CenterScale;                                       // 0x1C0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CenterOffset;                                      // 0x1C4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PageSpacing;                                       // 0x1C8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AlignmentPercent;                                  // 0x1CC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EOrientation                      Orientation;                                       // 0x1D0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_17E6[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UObject*>                       ListItems;                                         // 0x1D8(0x10)(ZeroConstructor, Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_17E7[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            BP_OnItemClicked;                                  // 0x1F8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	FMulticastInlineDelegateProperty_            BP_OnSelectedItemChanged;                          // 0x208(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	FMulticastInlineDelegateProperty_            BP_OnSelectedIndexChanged;                         // 0x218(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UCardView* GetDefaultObj();

	void SetListItems(TArray<class UObject*>& InListItems);
	void RemoveItem(class UObject* InItem);
	TArray<class UObject*> GetListItems();
	TArray<class UUserWidget*> GetDisplayedEntryWidgets();
	void ClearListItems();
	void BP_SetSelectedItem(class UObject* Item);
	void BP_SetSelectedIndex(int32 Index, bool bFromFirst);
	void BP_SetListItems(TArray<class UObject*>& InListItems);
	class UObject* BP_GetSelectedItem();
	int32 BP_GetSelectedIndex();
	void AddItem(class UObject* InItem);
};

// 0x0 (0x28 - 0x28)
// Class Solarland.CardViewDesignerPreviewItem
class UCardViewDesignerPreviewItem : public UObject
{
public:

	static class UClass* StaticClass();
	static class UCardViewDesignerPreviewItem* GetDefaultObj();

};

// 0x8 (0xD8 - 0xD0)
// Class Solarland.CGCustomeBattleRoyaleComponent
class UCGCustomeBattleRoyaleComponent : public UGameModeCompBase
{
public:
	uint8                                        Pad_17EF[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UCGCustomeBattleRoyaleComponent* GetDefaultObj();

	void ChangeEnvironmentTime(class ASolarTimeLineManager* SolarTimeLineManager, int32 DaylightChange);
};

// 0x30 (0x258 - 0x228)
// Class Solarland.CGFormula
class ACGFormula : public AInfo
{
public:
	struct FKnockoutParams                       KnockoutParams;                                    // 0x228(0x28)(NativeAccessSpecifierPublic)
	bool                                         bInitKnockParams;                                  // 0x250(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_180C[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ACGFormula* GetDefaultObj();

	TArray<class FString> MakeStringForLuaByAnyStruct(class UObject* AnyStruct);
	bool IsSettlementBagItem(class ASolarPlayerState* InPS);
	void InitKnockoutPointParams(struct FKnockoutParams* InParams);
	int32 GetZomborg(class ASolarPlayerState* InPS);
	void GetWeeklyChallenge(const class FString& InSolarPlayerID, TArray<class FString>* OutChallengeName, TArray<int32>* OutChallengeValue);
	int32 GetWeaponExp(class ASolarPlayerState* InPS, int32 InWeaponID);
	void GetTeamScoreComparison(class ASolarPlayerState* InPS, class FString* OutTeamScore);
	void GetStrategyGuideConditions(class ASolarPlayerState* InPS, TArray<int32>* OutResult);
	void GetShowPageIndexs(class ASolarPlayerState* InPS, struct FSettlePageParam& InParam, TArray<int32>* OutResult);
	TArray<struct FSettlementReward> GetSettlementRewards(class ASolarPlayerState* InPS);
	TArray<class FString> GetPersonalResultPlayerExData(const class FString& SolarPlayerID, class FString* InPBName);
	float GetKDA(class ASolarPlayerState* InPS);
	TArray<class FString> GetGroupResultPlayerExData(const class FString& SolarPlayerID, class FString* InPBName);
	TArray<struct FSettlementParam_ExtraRewardInfo> GetExtraRewards(class ASolarPlayerState* InPS);
	int32 GetCombatCore(class ASolarPlayerState* InPS);
	void GetCharacterExp(class ASolarPlayerState* InPS, int32* OutGetExp, TArray<int32>* OutReason);
	int32 GetAccountExp(class ASolarPlayerState* InPS);
	int32 CalculateTeamRank(class ASolarPlayerState* InPS);
	TArray<enum class ESCMPlayerPunishType> CalculatePunish(class ASolarPlayerState* InPS);
	int32 CalculatePlayerRank(class ASolarPlayerState* InPS);
	float CalculateMVPScore(class ASolarPlayerState* InPS);
	int32 CalculateKnockoutPoints(int32 InTeamRank, int32 InKillNum, float InTotalDamage, float InTotalDamageTaken);
};

// 0x90 (0x160 - 0xD0)
// Class Solarland.SolarGameModeAIComponent
class USolarGameModeAIComponent : public UGameModeCompBase
{
public:
	uint8                                        Pad_1813[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class ASolarBotAIController>     BotAIControllerClass;                              // 0xE0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ASolarAIControllerBase>    OfflinePlayerAIControllerClass;                    // 0xE8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ASolarGameMode*                        GameModeOwner;                                     // 0xF0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableIrisAIStrategy;                             // 0xF8(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bEnableMLSetting;                                  // 0xF9(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bPreserveBotOnMatchStart;                          // 0xFA(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1814[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class USolarBotAITeamManager>    BotTeamManagerClass;                               // 0x100(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class USolarPreservedBotManager> BotPreservedManagerClass;                          // 0x108(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class USolarBotAIWarmServiceSystem> BotWarmServiceSystemClass;                         // 0x110(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class USolarBotTimelineSystem>   BotTimelineSystemClass;                            // 0x118(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MaxNumPreservedBots;                               // 0x120(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxRatioPreservedBots;                             // 0x124(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1815[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class USolarBotAITeamManager*                BotTeamManager;                                    // 0x138(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarPreservedBotManager*             BotPreservedManager;                               // 0x140(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarBotAIWarmServiceSystem*          BotWarmServiceSystem;                              // 0x148(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarBotTimelineSystem*               BotTimelineSystem;                                 // 0x150(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bInitBotByTeamPreset;                              // 0x158(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanBotTeamRebirth;                                // 0x159(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanPlayerTeamRebirth;                             // 0x15A(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanBotTeamBuyRescue;                              // 0x15B(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanPlayerTeamBuyRescue;                           // 0x15C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1817[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarGameModeAIComponent* GetDefaultObj();

	bool PreserveBot(class ASolarBotAIController* InBotController, struct FVector& InPreservedLocation);
	bool PopPreservedBot(class ASolarBotAIController** OutController, struct FVector& OutTeleportLocation, class ASolarBotAIController* InSpecificController);
	void OnAcquiredIrisAIFeedStrategy(TArray<struct FFeedBotStrategyInfo>& StrategyInfos);
	void GetDeathBoxExtraStuff(class ASolarPlayerState* BotState, class ASolarPlayerState* PlayerState, TMap<int32, int32>* Stuff);
};

// 0x0 (0x160 - 0x160)
// Class Solarland.CGMAIComponent
class UCGMAIComponent : public USolarGameModeAIComponent
{
public:

	static class UClass* StaticClass();
	static class UCGMAIComponent* GetDefaultObj();

};

// 0x50 (0x78 - 0x28)
// Class Solarland.CGMCrossLevelDataMgr
class UCGMCrossLevelDataMgr : public UObject
{
public:
	TMap<class FString, class UObject*>          CrossLevelData;                                    // 0x28(0x50)(NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UCGMCrossLevelDataMgr* GetDefaultObj();

	void RegistryCrossLevelData(const class FString& InSoltName, class UObject* InDataObj);
	class UObject* GetCrossLevelData(const class FString& InSoltName);
};

// 0x0 (0xD0 - 0xD0)
// Class Solarland.CustomGameModeComponent
class UCustomGameModeComponent : public UGameModeCompBase
{
public:

	static class UClass* StaticClass();
	static class UCustomGameModeComponent* GetDefaultObj();

};

// 0x18 (0xE8 - 0xD0)
// Class Solarland.CGMDataComponent
class UCGMDataComponent : public UCustomGameModeComponent
{
public:
	class AGameDataManager*                      DataManager;                                       // 0xD0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDataTable*                            DataTable;                                         // 0xD8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ConfigRepDeltaTime;                                // 0xE0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ConfigRepMaxNum;                                   // 0xE4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UCGMDataComponent* GetDefaultObj();

};

// 0x0 (0xD0 - 0xD0)
// Class Solarland.CGMDeathComponent
class UCGMDeathComponent : public UCustomGameModeComponent
{
public:

	static class UClass* StaticClass();
	static class UCGMDeathComponent* GetDefaultObj();

	void ReceivePlayerResurrect(class ASolarCharacter* ResurrectCharacter, class ASCMPlayerState* ResurrectPlayer);
	void ReceivePlayerKill(class ASCMPlayerState* Killer, class ASCMPlayerState* Killed, TArray<class ASCMPlayerState*>& Assists, struct FSolarPointDamageEvent& InDamageEvent, class AActor* InDamageCauser);
	void ReceivePlayerDeathVerge(class ASCMPlayerState* InAttacker, class ASCMPlayerState* InDeathVergePlayer, struct FSolarPointDamageEvent& InDamageEvent, class AActor* InDamageCauser);
};

// 0x8 (0x38 - 0x30)
// Class Solarland.GameplayConfigBase
class UGameplayConfigBase : public UDataAsset
{
public:
	class UGameModeGlobalSetting*                GameModeSettingTemplate;                           // 0x30(0x8)(Edit, BlueprintVisible, ExportObject, Net, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UGameplayConfigBase* GetDefaultObj();

};

// 0x240 (0x278 - 0x38)
// Class Solarland.CGMGameplayConfig
class UCGMGameplayConfig : public UGameplayConfigBase
{
public:
	TSubclassOf<class ACGFormula>                Formula;                                           // 0x38(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USettlementPageConfig*                 SettlePageConfig;                                  // 0x40(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class FString, struct FSCMMapConfig>    MapConfig;                                         // 0x48(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FDataManagerConfig                    DataManagerConfig;                                 // 0x98(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FJobManagerConfig                     JobConfig;                                         // 0xA8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                         EnableUltimateSkill;                               // 0xB0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ERoleSkillOperation               UltimateSkillStateOperationOnInit;                 // 0xB1(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         EnableTacticalSkill;                               // 0xB2(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ERoleSkillOperation               TacticalSkillStateOperationOnInit;                 // 0xB3(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        AirDropSkillMode;                                  // 0xB4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         EnableWeaponUpgrade;                               // 0xB8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1823[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        InitInGamePlayerLevel;                             // 0xBC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         EnablePlayerUpgrade;                               // 0xC0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1824[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FInGameLevelingConfig                 InGameLevelingConfig;                              // 0xC8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	TArray<enum class ESolarTablesEnum_BattleUpgradeEffectType> CharacterDamageUpgradeTypes;                       // 0xD0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FExpItemConfig                        ExpItemConfig;                                     // 0xE0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FExpItemReduceRate                    ExpItemReduceRateConfig;                           // 0xF0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FBoxBurstItemConfig                   BoxBurstItemConfig;                                // 0xF8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                         bIfShouldSpawnDeathBox;                            // 0x100(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIfSupportDeathverge;                              // 0x101(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1825[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<int32, int32>                           DeathBoxEnergyLimitConfig;                         // 0x108(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	bool                                         bAutoMarkDamagedEnemy;                             // 0x158(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         EnableSect;                                        // 0x159(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1826[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FCustomRoomData                       CustomRoomData;                                    // 0x160(0x78)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	bool                                         bIsCustomRoomMode;                                 // 0x1D8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableTracking;                                   // 0x1D9(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1827[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        InitTrackingDelay;                                 // 0x1DC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TrackingTimeInterval;                              // 0x1E0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DefaultTrackMaxRevealDistance;                     // 0x1E4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TrackReplaceDistance;                              // 0x1E8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinRevealDistance;                                 // 0x1EC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TrackTimeout;                                      // 0x1F0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MaxTrackNum;                                       // 0x1F4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFinalsBGMData                        FinalsBGMData;                                     // 0x1F8(0x28)(Edit, NativeAccessSpecifierPublic)
	bool                                         bEnableSkydivingTrail;                             // 0x220(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1828[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftClassPtr<class AActor>                  FlyTrailClass;                                     // 0x228(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class AActor>                  DebugTrailEffectClass;                             // 0x250(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UCGMGameplayConfig* GetDefaultObj();

	bool IsEnableSect();
	bool IsCustomRoomMode();
	int32 GetRequiredExpForLevel(int32 InLevel);
	int32 GetMaxShieldMatCountToDeathbox(int32 InLevel);
	int32 GetMaxInGameLevel();
	float GetExpItemReduceRate(int32 DeathCount);
	int32 GetExpItemCountByLevel(int32 InLevel, int32 InLevelGap);
	struct FCustomRoomData GetCustomRoomData();
	TArray<int32> GetBurstItemSplitPiles(int32 ItemID);
	TArray<float> GetBurstItemModelScale(int32 ItemID);
	int32 GetBurstItemMaxPileNum(int32 ItemID);
	TArray<int32> GetBurstItemIDs();
};

// 0x68 (0x138 - 0xD0)
// Class Solarland.CGMLogicComponent
class UCGMLogicComponent : public UCustomGameModeComponent
{
public:
	float                                        TimeOutSeconds;                                    // 0xD0(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1836[0x64];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UCGMLogicComponent* GetDefaultObj();

	void ReceiveSpectatorJoinData(class ASCMPlayerState* Player);
	void ReceiveServerLevelLoaded(const class FString& LevelName);
	bool ReceivePlayerTeamPreJoinRequest(TArray<class ASCMPlayerState*>& PreJoinPlayers, int32 TeamID);
	bool ReceivePlayerReJoinRequest(const class FString& PlayerId, class FString* ErrorMsg);
	void ReceivePlayerReJoin(class ASCMPlayerState* NewPlayer);
	void ReceivePlayerPreLogin(const class FString& PlayerId, class ASCMPlayerState* OfflinePlayer, class FString* ErrorMsg);
	void ReceivePlayerNonSpectatorJoinData(class ASCMPlayerState* Player);
	void ReceivePlayerLevelLoaded(class ASCMPlayerController* Player, const class FString& LevelName);
	void ReceivePlayerJoinData(const class FString& PlayerId);
	void ReceivePlayerJoinBattle(class ASCMPlayerState* NewPlayer, bool IsAI);
	void ReceivePlayerJoin(class ASCMPlayerState* NewPlayer, bool IsAI);
	void ReceivePlayerCancelJoin(const class FString& PlayerId);
	void ReceivePlayerBattleEnd(class ASCMPlayerState* Player, enum class ESCMPlayerOutType OutType);
	void ReceiveOBPlayersChanged();
	void ReceiveGameModeInit();
	void ReceiveBattleTick(float BattleTime, float DeltaTime);
	void ReceiveBattleEnd();
	void ReceiveBattleBegin();
	void OnStartBattle();
	void OnPlayerSettled(class ASCMPlayerState* Player);
	void OnPlayerReconnect(class ASCMPlayerState* Player);
	void OnPlayerOfflineTimeOut(class ASCMPlayerState* OfflineTimeoutPlayer);
	void OnPlayerGiveUp(class ASCMPlayerState* OfflineTimeoutPlayer);
	void OnPlayerDisconnect(class ASCMPlayerState* OfflinePlayer);
	void OnPlayerCheat(class ASCMPlayerState* CheatPlayer);
	void OnPlayerAbnormal(class ASCMPlayerState* CheatPlayer);
	void OnMatchEnd(int32 RPCID);
	void OnDSClose();
	void OnBotAIDataReady(int32 AICount);
	bool IsAllowReconnectGame(class ASCMPlayerState* InPC);
};

// 0x28 (0xD8 - 0xB0)
// Class Solarland.SolarGameplayConfigComponent
class USolarGameplayConfigComponent : public UActorComponent
{
public:
	bool                                         EnableTestGameplayConfig;                          // 0xB0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1839[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UGameplayConfigBase>       CGMConfig;                                         // 0xB8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UGameplayConfigBase>       TestCGMConfig;                                     // 0xC0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGameplayConfigBase*                   InstGameplayConfig;                                // 0xC8(0x8)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGameplayConfigBase*                   InstTestGameplayConfig;                            // 0xD0(0x8)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class USolarGameplayConfigComponent* GetDefaultObj();

	class UGameplayConfigBase* GetConfigs();
};

// 0x0 (0xD8 - 0xD8)
// Class Solarland.CGMManagerConfigComponent
class UCGMManagerConfigComponent : public USolarGameplayConfigComponent
{
public:

	static class UClass* StaticClass();
	static class UCGMManagerConfigComponent* GetDefaultObj();

};

// 0xB0 (0x180 - 0xD0)
// Class Solarland.CGMMapInfo
class UCGMMapInfo : public UGameModeCompBase
{
public:
	TArray<struct FVector>                       AreaPosArray;                                      // 0xD0(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MapID;                                             // 0xE0(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        UsedAirlineID;                                     // 0xE4(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FAirlineData                          UsedAirlineData;                                   // 0xE8(0x28)(BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_183B[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<int32, struct FAirlineData>             AirlineDataList;                                   // 0x120(0x50)(BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	int32                                        MaskWidth;                                         // 0x170(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaskScale;                                         // 0x174(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MapWidth;                                          // 0x178(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MapHeight;                                         // 0x17C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UCGMMapInfo* GetDefaultObj();

	void LoadAirlineData();
	void InitInfo(int32 InMapID);
	int32 GetUsedAirlineData(struct FAirlineData* OutData);
	int32 GetMapIDByName(class ASCustomGameState* InGameState, const class FString& Name);
};

// 0x28 (0xD8 - 0xB0)
// Class Solarland.CGMSettlementComponent
class UCGMSettlementComponent : public UActorComponent
{
public:
	uint8                                        Pad_183E[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USettlementPageConfig*                 PageConfig;                                        // 0xB8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<int32>                                PageIndexs;                                        // 0xC0(0x10)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsCustomRoom;                                      // 0xD0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_183F[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UCGMSettlementComponent* GetDefaultObj();

	bool SkipToTarget();
	bool ShowNextStage();
};

// 0x68 (0xE8 - 0x80)
// Class Solarland.ChaAT_AddSynchronizedForce
class UChaAT_AddSynchronizedForce : public UAbilityTask
{
public:
	uint8                                        Pad_1840[0x68];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UChaAT_AddSynchronizedForce* GetDefaultObj();

};

// 0xB0 (0x130 - 0x80)
// Class Solarland.ChaAT_AltitudeQuery
class UChaAT_AltitudeQuery : public UAbilityTask
{
public:
	FMulticastInlineDelegateProperty_            OnResponsed;                                       // 0x80(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_1846[0xA0];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UChaAT_AltitudeQuery* GetDefaultObj();

	class UChaAT_AltitudeQuery* StartSphereAltitudeQuery(class UGameplayAbility* OwningAbility, float InAltitude, float Radius, TArray<enum class EObjectTypeQuery>& ObjectTypes, bool bTraceComplex, TArray<class AActor*>& ActorsToIgnore, bool bIgnoreSelf, bool bUsingAsyncQuery, bool bInTriggerOnce);
	class UChaAT_AltitudeQuery* StartLineAltitudeQuery(class UGameplayAbility* OwningAbility, float InAltitude, TArray<enum class EObjectTypeQuery>& ObjectTypes, bool bTraceComplex, TArray<class AActor*>& ActorsToIgnore, bool bIgnoreSelf, bool bUsingAsyncQuery, bool bInTriggerOnce);
};

// 0xD0 (0x150 - 0x80)
// Class Solarland.ChaAT_HighAlert
class UChaAT_HighAlert : public USolarAbilityTask
{
public:
	FMulticastInlineDelegateProperty_            OnHighAlertDelegate;                               // 0x80(0x10)(ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	uint8                                        Pad_1847[0xC0];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UChaAT_HighAlert* GetDefaultObj();

};

// 0x20 (0xA0 - 0x80)
// Class Solarland.ChaAT_LimitCameraOnStickingOutOfVehicle
class UChaAT_LimitCameraOnStickingOutOfVehicle : public USolarAbilityTask
{
public:
	uint8                                        Pad_1848[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UChaAT_LimitCameraOnStickingOutOfVehicle* GetDefaultObj();

	class UChaAT_LimitCameraOnStickingOutOfVehicle* CreateTask(class UGameplayAbility* OwningAbility);
};

// 0x10 (0x90 - 0x80)
// Class Solarland.ChaAT_ListenChaTakeDamage
class UChaAT_ListenChaTakeDamage : public UAbilityTask
{
public:
	FMulticastInlineDelegateProperty_            OnTakeDamageDelegate;                              // 0x80(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UChaAT_ListenChaTakeDamage* GetDefaultObj();

	void OnCharacterTakeDamage(class ASolarCharacter* Character, struct FSolarPointDamageEvent& DamageEvent, float HPDamage);
	class UChaAT_ListenChaTakeDamage* CreateTask(class UGameplayAbility* OwningAbility);
};

// 0x18 (0x98 - 0x80)
// Class Solarland.ChaAT_ListenScopeOpeningAction
class UChaAT_ListenScopeOpeningAction : public USolarAbilityTask
{
public:
	class UGameplayAbility*                      OwnerAbility;                                      // 0x80(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ASolarCharacter*                       TaskCharacter;                                     // 0x88(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_184C[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UChaAT_ListenScopeOpeningAction* GetDefaultObj();

	class UChaAT_ListenScopeOpeningAction* CreateTask(class UGameplayAbility* OwningAbility, class ASolarCharacter* InCharacter, float MaxWaitTime);
};

// 0x10 (0x90 - 0x80)
// Class Solarland.ChaAT_ListenSkydive
class UChaAT_ListenSkydive : public USolarAbilityTask
{
public:
	uint8                                        Pad_184E[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UChaAT_ListenSkydive* GetDefaultObj();

	void OnSkydiveStageChanged(class ASolarCharacter* InCharacter, enum class ESkydiveStage InOldStage, enum class ESkydiveStage InNewStage);
};

// 0x10 (0x118 - 0x108)
// Class Solarland.ChaAT_PlayMontageAndWaitForNotify
class UChaAT_PlayMontageAndWaitForNotify : public UAbilityTask_PlayMontageAndWait
{
public:
	FMulticastInlineDelegateProperty_            OnMontageNotify;                                   // 0x108(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UChaAT_PlayMontageAndWaitForNotify* GetDefaultObj();

	void OnMontageNotifyCallBack(class FName NotifyName, struct FBranchingPointNotifyPayload& BranchingPointPayload);
	class UChaAT_PlayMontageAndWaitForNotify* CreateTask(class UGameplayAbility* OwningAbility, class FName TaskInstanceName, class UAnimMontage* InMontageToPlay, float InRate, class FName InStartSection, bool bInStopWhenAbilityEnds, float InAnimRootMotionTranslationScale);
};

// 0xD0 (0x150 - 0x80)
// Class Solarland.ChaAT_PlayMontageForMeshAndWaitForEvent
class UChaAT_PlayMontageForMeshAndWaitForEvent : public UAbilityTask
{
public:
	FMulticastInlineDelegateProperty_            OnCompleted;                                       // 0x80(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnBlendOut;                                        // 0x90(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnInterrupted;                                     // 0xA0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnCancelled;                                       // 0xB0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            EventReceived;                                     // 0xC0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class USkeletalMeshComponent*                Mesh;                                              // 0xD0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                          MontageToPlay;                                     // 0xD8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTagContainer                 EventTags;                                         // 0xE0(0x20)(NativeAccessSpecifierPrivate)
	float                                        Rate;                                              // 0x100(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  StartSection;                                      // 0x104(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        AnimRootMotionTranslationScale;                    // 0x10C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bStopWhenAbilityEnds;                              // 0x110(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bReplicateMontage;                                 // 0x111(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1855[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        OverrideBlendOutTimeForCancelAbility;              // 0x114(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        OverrideBlendOutTimeForStopWhenEndAbility;         // 0x118(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bInterruptedCalledBeforeBlendingOut;               // 0x11C(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1856[0x33];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UChaAT_PlayMontageForMeshAndWaitForEvent* GetDefaultObj();

	class UChaAT_PlayMontageForMeshAndWaitForEvent* PlayMontageForMeshAndWaitForEvent(class UGameplayAbility* OwningAbility, class FName TaskInstanceName, class USkeletalMeshComponent* Mesh, class UAnimMontage* MontageToPlay, float Rate, class FName StartSection, bool bStopWhenAbilityEnds, float AnimRootMotionTranslationScale, bool bReplicateMontage, float OverrideBlendOutTimeForCancelAbility, float OverrideBlendOutTimeForStopWhenEndAbility);
};

// 0x30 (0xB0 - 0x80)
// Class Solarland.ChaAT_SkywardDiveTask
class UChaAT_SkywardDiveTask : public USolarAbilityTask
{
public:
	uint8                                        Pad_1858[0x30];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UChaAT_SkywardDiveTask* GetDefaultObj();

	class UChaAT_SkywardDiveTask* CreateTask(class UGameplayAbility* OwningAbility, const struct FVector& InLauncherLocation, int32 InOccupyLaunchDeviceIndex);
};

// 0x8 (0x88 - 0x80)
// Class Solarland.ChaAT_UpdateSkydiveTrail
class UChaAT_UpdateSkydiveTrail : public USolarAbilityTask
{
public:
	uint8                                        Pad_1859[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UChaAT_UpdateSkydiveTrail* GetDefaultObj();

	class UChaAT_UpdateSkydiveTrail* CreateTask(class UGameplayAbility* OwningAbility);
};

// 0x40 (0xC0 - 0x80)
// Class Solarland.ChaAT_UpdateZipline
class UChaAT_UpdateZipline : public USolarAbilityTask
{
public:
	uint8                                        Pad_185A[0x40];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UChaAT_UpdateZipline* GetDefaultObj();

	class UChaAT_UpdateZipline* CreateTask(class UGameplayAbility* OwningAbility, struct FVector& InStartLoc, struct FVector& InEndLoc, float InSpeed, float InCheckDis);
};

// 0x10 (0x90 - 0x80)
// Class Solarland.ChaAT_WaitCharacterDeathEnd
class UChaAT_WaitCharacterDeathEnd : public USolarAbilityTask
{
public:
	FMulticastInlineDelegateProperty_            OnCharacterDeathEnd;                               // 0x80(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UChaAT_WaitCharacterDeathEnd* GetDefaultObj();

	class UChaAT_WaitCharacterDeathEnd* CreateTask(class UGameplayAbility* OwningAbility);
};

// 0x20 (0xA0 - 0x80)
// Class Solarland.ChaAT_WaitCharacterLaunchEnd
class UChaAT_WaitCharacterLaunchEnd : public USolarAbilityTask
{
public:
	FMulticastInlineDelegateProperty_            OnCharacterLaunchEnd;                              // 0x80(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_185C[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MoveModeCheckDelayTime;                            // 0x9C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UChaAT_WaitCharacterLaunchEnd* GetDefaultObj();

	class UChaAT_WaitCharacterLaunchEnd* CreateTask(class UGameplayAbility* OwningAbility, float InWaitLaunchingTime);
};

// 0x20 (0xA0 - 0x80)
// Class Solarland.ChaAT_WaitCharacterPostDeath
class UChaAT_WaitCharacterPostDeath : public USolarAbilityTask
{
public:
	FMulticastInlineDelegateProperty_            OnDestroyCharacterCorpse;                          // 0x80(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_185E[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UChaAT_WaitCharacterPostDeath* GetDefaultObj();

	class UChaAT_WaitCharacterPostDeath* CreateTask(class UGameplayAbility* OwningAbility, float InDestroyCorpseTime);
};

// 0x10 (0x90 - 0x80)
// Class Solarland.ChaAT_WaitCharacterSprintCancel
class UChaAT_WaitCharacterSprintCancel : public USolarAbilityTask
{
public:
	FMulticastInlineDelegateProperty_            OnCharacterSprintCancel;                           // 0x80(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UChaAT_WaitCharacterSprintCancel* GetDefaultObj();

	class UChaAT_WaitCharacterSprintCancel* CreateTask(class UGameplayAbility* OwningAbility);
};

// 0x20 (0xA0 - 0x80)
// Class Solarland.ChaAT_WaitControlRotationYawOutOfRange
class UChaAT_WaitControlRotationYawOutOfRange : public UAbilityTask
{
public:
	uint8                                        Pad_185F[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UChaAT_WaitControlRotationYawOutOfRange* GetDefaultObj();

	class UChaAT_WaitControlRotationYawOutOfRange* CreateTask(class UGameplayAbility* OwningAbility, float YawMin, float YawMax);
};

// 0x18 (0x98 - 0x80)
// Class Solarland.ChaAT_WaitDelay
class UChaAT_WaitDelay : public UAbilityTask
{
public:
	FMulticastInlineDelegateProperty_            OnFinish;                                          // 0x80(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_1861[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UChaAT_WaitDelay* GetDefaultObj();

	class UChaAT_WaitDelay* WaitDelay(class UGameplayAbility* OwningAbility, float Time);
};

// 0x40 (0xC0 - 0x80)
// Class Solarland.ChaAT_WaitLandingSpot
class UChaAT_WaitLandingSpot : public UAbilityTask
{
public:
	uint8                                        Pad_1862[0x40];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UChaAT_WaitLandingSpot* GetDefaultObj();

};

// 0x20 (0xA0 - 0x80)
// Class Solarland.ChaAT_WaitOverlapEx
class UChaAT_WaitOverlapEx : public UAbilityTask
{
public:
	FMulticastInlineDelegateProperty_            OnOverLap;                                         // 0x80(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_1864[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UChaAT_WaitOverlapEx* GetDefaultObj();

	class UChaAT_WaitOverlapEx* WaitForOverlap(class UGameplayAbility* OwningAbility, const TArray<TSubclassOf<class AActor>>& InIgnoreClasses);
	void OnHitCallback(class UPrimitiveComponent* HitComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, struct FHitResult& Hit);
};

// 0x20 (0xA0 - 0x80)
// Class Solarland.ChaAT_WaitVehicleWeakPointRepairingEnd
class UChaAT_WaitVehicleWeakPointRepairingEnd : public USolarAbilityTask
{
public:
	uint8                                        Pad_1867[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnVehicleWeakPointRepairingEnd;                    // 0x88(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_1868[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UChaAT_WaitVehicleWeakPointRepairingEnd* GetDefaultObj();

	class UChaAT_WaitVehicleWeakPointRepairingEnd* CreateTask(class UGameplayAbility* OwningAbility, struct FVehicleWeakPointSpec* RepairingVehicleWeakPoint);
};

// 0x18 (0x418 - 0x400)
// Class Solarland.SolarGameplayAbility
class USolarGameplayAbility : public UGameplayAbility
{
public:
	bool                                         bTryActivateWhenGranted;                           // 0x400(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ESolarGAInputID                   InputID;                                           // 0x401(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAllowReconnection;                                // 0x402(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bActiveOnPress;                                    // 0x403(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_186F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FAbilityMeshMontage>           CurrentAbilityMeshMontages;                        // 0x408(0x10)(ZeroConstructor, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class USolarGameplayAbility* GetDefaultObj();

	void RemoveGameplayCueLocal(const struct FGameplayTag& GameplayCueTag, struct FGameplayCueParameters& GameplayCueParameters);
	void ReceivingGiven(struct FGameplayAbilityActorInfo& ActorInfo, struct FGameplayAbilitySpec& Spec);
	bool OnLevelUp(int32 OldLevel, struct FGameplayAbilitySpec& Spec);
	void MontageStopForMesh(class USkeletalMeshComponent* InMesh, float OverrideBlendOutTime);
	void MontageStopForAllMeshes(float OverrideBlendOutTime);
	void MontageSetNextSectionNameForMesh(class USkeletalMeshComponent* InMesh, class FName FromSectionName, class FName ToSectionName);
	void MontageJumpToSectionForMesh(class USkeletalMeshComponent* InMesh, class FName SectionName);
	int32 GetDefaultGrantedLevel(class AActor* InOwner, class AActor* InAvatar);
	class UAnimMontage* GetCurrentMontageForMesh(class USkeletalMeshComponent* InMesh);
	void ExecuteGameplayCueLocal(const struct FGameplayTag& GameplayCueTag, struct FGameplayCueParameters& GameplayCueParameters);
	void AddGameplayCueLocal(const struct FGameplayTag& GameplayCueTag, struct FGameplayCueParameters& GameplayCueParameters);
};

// 0x20 (0x438 - 0x418)
// Class Solarland.ResidentPassiveSkill
class UResidentPassiveSkill : public USolarGameplayAbility
{
public:
	TArray<TSubclassOf<class UGameplayEffect>>   ResidentEffectClasses;                             // 0x418(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1870[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UResidentPassiveSkill* GetDefaultObj();

};

// 0x0 (0x438 - 0x438)
// Class Solarland.ChaGA_AerialReconnaissance
class UChaGA_AerialReconnaissance : public UResidentPassiveSkill
{
public:

	static class UClass* StaticClass();
	static class UChaGA_AerialReconnaissance* GetDefaultObj();

	void OnSkydiveStageChanged(class ASolarCharacter* InCharacter, enum class ESkydiveStage InOldStage, enum class ESkydiveStage InNewStage);
};

// 0x48 (0x460 - 0x418)
// Class Solarland.SolarCharacterGameplayAbility
class USolarCharacterGameplayAbility : public USolarGameplayAbility
{
public:
	struct FGameplayTagContainer                 ActivationOwnedReplicatedTags;                     // 0x418(0x20)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TArray<struct FSolarGameplayEffectConfig>    ActivationOwnedReplicatedGameplayEffects;          // 0x438(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1872[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarCharacterGameplayAbility* GetDefaultObj();

	class ASolarCharacter* GetOwningCharacterFromActorInfo();
	class ASolarCharacter* GetAvatarSolarCharacterFromActorInfo();
};

// 0x8 (0x468 - 0x460)
// Class Solarland.ChaGA_Aim
class UChaGA_Aim : public USolarCharacterGameplayAbility
{
public:
	TSubclassOf<class UGameplayEffect>           AimGameplayEffectClass;                            // 0x460(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UChaGA_Aim* GetDefaultObj();

};

// 0x60 (0x4C0 - 0x460)
// Class Solarland.ChaGA_ThrowSkill
class UChaGA_ThrowSkill : public USolarCharacterGameplayAbility
{
public:
	enum class ESkillAnimType                    SkillAnimType;                                     // 0x460(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ESkillAnimRightHandType           SkillAnimRightHandType;                            // 0x461(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bShouldWaitMontageNotifyToThrow;                   // 0x462(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1878[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  MontageNotifyToWait;                               // 0x464(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCanHoldWeapon;                                    // 0x46C(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_187A[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  ActiveMontageNotifyToReady;                        // 0x470(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bShouldWaitActiveMontageNotifyToPrepare;           // 0x478(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_187C[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  ActiveMontageNotifyToPrepare;                      // 0x47C(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bShouldWaitActiveMontageNotifyToThrow;             // 0x484(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_187E[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  ActiveMontageNotifyToThrow;                        // 0x488(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  MontageSectionToJumpOnInputReleased;               // 0x490(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAbilityTask_NetworkSyncPoint*         WaitThrowTask;                                     // 0x498(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                          ActiveMontage;                                     // 0x4A0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                          FireMontage;                                       // 0x4A8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                          CancelMontage;                                     // 0x4B0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_187F[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UChaGA_ThrowSkill* GetDefaultObj();

	void WaitToThrow();
	void StartToThrow();
	void PrepareToThrow();
	void OnRceiveWaitToThrow();
	void OnMontageNotify(class FName NotifyName);
	void OnMontageCompleted();
	void OnFireMontageStartBlendingOut();
	void OnActiveMontageNotify(class FName NotifyName);
	void OnActiveMontageCompleted();
};

// 0x128 (0x5E8 - 0x4C0)
// Class Solarland.SolarSkillGA_Projectile
class USolarSkillGA_Projectile : public UChaGA_ThrowSkill
{
public:
	struct FSolarSkillProjectileData             ProjectileData;                                    // 0x4C0(0xD0)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	TSubclassOf<class AGameplayAbilityTargetActor> GATargetActorClass;                                // 0x590(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<TSubclassOf<class AActor>>            SpawnActorClasses;                                 // 0x598(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UGameplayEffect>           GEToSelfClass;                                     // 0x5A8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UGameplayEffect>           GEToTargetClass;                                   // 0x5B0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bUseKeyUpLocation;                                 // 0x5B8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bUseKeyUpDirection;                                // 0x5B9(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1885[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAbilityTask_WaitTargetData*           WaitTargetDataTask;                                // 0x5C0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class AActor*>                        SpawnActors;                                       // 0x5C8(0x10)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class AGameplayAbilityTargetActor> TargetActorCache;                                  // 0x5D8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1886[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarSkillGA_Projectile* GetDefaultObj();

	void OnWaitTargetDataTaskValid(struct FGameplayAbilityTargetDataHandle& InTargetData);
	void OnWaitTargetDataTaskCancelled(struct FGameplayAbilityTargetDataHandle& InTargetData);
};

// 0x30 (0x618 - 0x5E8)
// Class Solarland.SolarSkillGA_Summon
class USolarSkillGA_Summon : public USolarSkillGA_Projectile
{
public:
	class USolarSummonDetectionConfig*           SummonConfig;                                      // 0x5E8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        SummonFailedNoticeID;                              // 0x5F0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bUseKeyUpLocationSummon;                           // 0x5F4(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1888[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TWeakObjectPtr<class ASolarSkillGATA_Summon> SummonTargetActor;                                 // 0x5F8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                          ActiveMontageForGunAim;                            // 0x600(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                          FireMontageForGunAim;                              // 0x608(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                          CancelMontageForGunAim;                            // 0x610(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class USolarSkillGA_Summon* GetDefaultObj();

};

// 0x78 (0x690 - 0x618)
// Class Solarland.ChaGA_AirDrop
class UChaGA_AirDrop : public USolarSkillGA_Summon
{
public:
	TSubclassOf<class ASolarTreasureBoxSpawner>  TreasureBoxSpawnerClass;                           // 0x618(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        OutcomeID;                                         // 0x620(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1889[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FAirDropSkillDatas>            AirDropSkillSetting;                               // 0x628(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        ChestID;                                           // 0x638(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        BoxType;                                           // 0x63C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CastTime;                                          // 0x640(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ReadyTime;                                         // 0x644(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          PrepareGameplayCue;                                // 0x648(0x8)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          OpenAirDropMontageTag;                             // 0x650(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_188A[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            SpawnTransform;                                    // 0x660(0x30)(IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UChaGA_AirDrop* GetDefaultObj();

	void OnWaitCompleted();
};

// 0x8 (0x440 - 0x438)
// Class Solarland.ChaGA_AntiexposureSuit
class UChaGA_AntiexposureSuit : public UResidentPassiveSkill
{
public:
	struct FGameplayTag                          ExecuteCueTag;                                     // 0x438(0x8)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UChaGA_AntiexposureSuit* GetDefaultObj();

	void OnTakeDamage(class ASolarCharacter* Character, struct FSolarPointDamageEvent& DamageEvent, float HPDamage);
};

// 0x10 (0x428 - 0x418)
// Class Solarland.ChaGA_AttributeInit
class UChaGA_AttributeInit : public USolarGameplayAbility
{
public:
	TArray<TSubclassOf<class UGameplayEffect>>   InitializationEffectClasses;                       // 0x418(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UChaGA_AttributeInit* GetDefaultObj();

};

// 0x8 (0x420 - 0x418)
// Class Solarland.CharacterTalent
class UCharacterTalent : public USolarGameplayAbility
{
public:
	TSubclassOf<class UGameplayEffect>           GrantedEffectClass;                                // 0x418(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UCharacterTalent* GetDefaultObj();

	float GetTalentCooldownDuration(class AActor* InOwner, class AActor* InAvatar);
	float GetTalentActivationDuration(class AActor* InOwner, class AActor* InAvatar);
};

// 0x20 (0x440 - 0x420)
// Class Solarland.PermanentTalent
class UPermanentTalent : public UCharacterTalent
{
public:
	TArray<TSubclassOf<class UGameplayEffect>>   PermanentEffectClasses;                            // 0x420(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1893[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPermanentTalent* GetDefaultObj();

};

// 0x18 (0x458 - 0x440)
// Class Solarland.PermanentTalentOnVehicle
class UPermanentTalentOnVehicle : public UPermanentTalent
{
public:
	TArray<int32>                                ActivatedVehicleTypes;                             // 0x440(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          GetOffVehicleEventTag;                             // 0x450(0x8)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UPermanentTalentOnVehicle* GetDefaultObj();

	void ReceiveGetOffVehicle(const struct FGameplayEventData& InPayload);
};

// 0x10 (0x468 - 0x458)
// Class Solarland.ChaGA_AutoHealingOnVehicle
class UChaGA_AutoHealingOnVehicle : public UPermanentTalentOnVehicle
{
public:
	TSubclassOf<class UGameplayEffect>           FullHealthSignEffect;                              // 0x458(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1895[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UChaGA_AutoHealingOnVehicle* GetDefaultObj();

	void ReceiveCurrentHealthChange();
};

// 0x28 (0x488 - 0x460)
// Class Solarland.ChaGA_BigRechargeShield
class UChaGA_BigRechargeShield : public USolarCharacterGameplayAbility
{
public:
	struct FGameplayTag                          RechargeShieldMontageTag;                          // 0x460(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTagContainer                 ActivationRequiredTagsAny;                         // 0x468(0x20)(Edit, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UChaGA_BigRechargeShield* GetDefaultObj();

};

// 0x60 (0x4C0 - 0x460)
// Class Solarland.ChaGA_BigWaterGun
class UChaGA_BigWaterGun : public USolarCharacterGameplayAbility
{
public:
	TSubclassOf<class ABigWaterGun>              BigWaterGunClass;                                  // 0x460(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ABigWaterGun*                          CacheBigWaterGun;                                  // 0x468(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ESkillAnimType                    SkillAnimType;                                     // 0x470(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1897[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAnimMontage*                          PreAnimMontage;                                    // 0x478(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                          ExcuteAnimMontage;                                 // 0x480(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                          PostAnimMontage;                                   // 0x488(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                          StopAnimMontage;                                   // 0x490(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LifeTime;                                          // 0x498(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1898[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UGameplayEffect>           SlowDownGameplayEffect;                            // 0x4A0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1899[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAbilityTask_NetworkSyncPoint*         StopTask;                                          // 0x4B0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_189A[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UChaGA_BigWaterGun* GetDefaultObj();

	void OnStopPhase();
	void OnPrePhase();
	void OnPreMontageCompleted();
	void OnPostPhase();
	void OnPostMontageCompleted();
	void OnExecutePhase();
	void OnExecuteMontageCompleted();
};

// 0x8 (0x468 - 0x460)
// Class Solarland.ChaGA_Bolt
class UChaGA_Bolt : public USolarCharacterGameplayAbility
{
public:
	struct FGameplayTag                          BoltMontageTag;                                    // 0x460(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UChaGA_Bolt* GetDefaultObj();

};

// 0x8 (0x468 - 0x460)
// Class Solarland.ChaGA_CancelSprint
class UChaGA_CancelSprint : public USolarCharacterGameplayAbility
{
public:
	TSubclassOf<class UGameplayEffect>           CancelSprintEffectClass;                           // 0x460(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UChaGA_CancelSprint* GetDefaultObj();

};

// 0x48 (0x460 - 0x418)
// Class Solarland.ChaGA_ChangeCurrentCDRemain
class UChaGA_ChangeCurrentCDRemain : public USolarGameplayAbility
{
public:
	struct FGameplayTagContainer                 AbilityQueryTags;                                  // 0x418(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	enum class EGameplayModOp                    RemainTimeModifierOption;                          // 0x438(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_189C[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FScalableFloat                        RemainTimeModifierValue;                           // 0x440(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UChaGA_ChangeCurrentCDRemain* GetDefaultObj();

};

// 0x38 (0x450 - 0x418)
// Class Solarland.ChaGA_ChangeTotalCD_WithDuration
class UChaGA_ChangeTotalCD_WithDuration : public USolarGameplayAbility
{
public:
	struct FGameplayTagContainer                 AbilityQueryTags;                                  // 0x418(0x20)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TSubclassOf<class UGameplayEffect>           CDModifierEffect;                                  // 0x438(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bUsedForNextActivation;                            // 0x440(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EActiveEffectDurationChangeProxy  ActiveEffectDurationChangeProxy;                   // 0x441(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_189D[0xE];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UChaGA_ChangeTotalCD_WithDuration* GetDefaultObj();

	void OnModifierFinished(struct FGameplayEffectRemovalInfo& GameplayEffectRemovalInfo);
	void ModifierAppliedFailed(struct FGameplayEffectRemovalInfo& GameplayEffectRemovalInfo);
};

// 0x8 (0x458 - 0x450)
// Class Solarland.ChaGA_ChangeTotalCD_WithTimes
class UChaGA_ChangeTotalCD_WithTimes : public UChaGA_ChangeTotalCD_WithDuration
{
public:
	int32                                        CDTimes;                                           // 0x450(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_189E[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UChaGA_ChangeTotalCD_WithTimes* GetDefaultObj();

	void OnCooldownCompleted();
};

// 0x38 (0x498 - 0x460)
// Class Solarland.ChaGA_CombatRegeneration
class UChaGA_CombatRegeneration : public USolarCharacterGameplayAbility
{
public:
	float                                        ForecastInterval;                                  // 0x460(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RegenerateInterval;                                // 0x464(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          RegenerateCueTag;                                  // 0x468(0x8)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_18A1[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UChaGA_CombatRegeneration* GetDefaultObj();

	void PreRegenerate();
	void OnTakeDamage(class ASolarCharacter* Character, struct FSolarPointDamageEvent& DamageEvent, float HealtDamage);
	void OnRegenerate();
};

// 0x8 (0x468 - 0x460)
// Class Solarland.ChaGA_Crouch
class UChaGA_Crouch : public USolarCharacterGameplayAbility
{
public:
	uint8                                        Pad_18A4[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UChaGA_Crouch* GetDefaultObj();

	bool ShouldCancelCrouch();
};

// 0x28 (0x488 - 0x460)
// Class Solarland.ChaGA_Cruise
class UChaGA_Cruise : public USolarCharacterGameplayAbility
{
public:
	TSubclassOf<class UGameplayEffect>           ParachuteZoneEnteredEffect;                        // 0x460(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  ParachuteActionName;                               // 0x468(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAbilityTask_WaitInputAction*          WaitParachuteInputTask;                            // 0x470(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAbilityTask_NetworkSyncPoint*         WaitToParachuteTask;                               // 0x478(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_18A7[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UChaGA_Cruise* GetDefaultObj();

	void OnRequestedToParachute();
	void OnParachuteRequestSynced();
	void OnParachuteRequestRejected();
	void OnIntoParachuteZone(const struct FGameplayEventData& Payload);
	void OnForceParachuteEvent(const struct FGameplayEventData& Payload);
	void OnFinishCruise(const struct FGameplayEventData& Payload);
};

// 0x50 (0x4B0 - 0x460)
// Class Solarland.ChaGA_Dance
class UChaGA_Dance : public USolarCharacterGameplayAbility
{
public:
	TSubclassOf<class UGameplayEffect>           LeadingDanceEffect;                                // 0x460(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                          CancelActionNames;                                 // 0x468(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_18AB[0x38];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UChaGA_Dance* GetDefaultObj();

	void OnRoleAbilityInputAction(int32 AbilityIndex, bool bPress, bool bCanActive);
	void OnMoveModeChanged(enum class EMovementMode NewMovementMode);
	void OnMontageCompleted();
	void OnMontageBlendOut();
	void OnMobileWeaponInputAction(enum class EInputButton InButtonType);
	void OnHandleNotifyState(class USolarAnimInstance* AnimInstance, class USolarAnimNotifyState* Notify, int32* OutDenial);
	void OnHandleNotify(class USolarAnimInstance* AnimInstance, class USolarAnimNotify* Notify, int32* OutDenial);
	void OnCancelInput();
};

// 0x10 (0x470 - 0x460)
// Class Solarland.ChaGA_Death
class UChaGA_Death : public USolarCharacterGameplayAbility
{
public:
	float                                        DestroyCorpseTime;                                 // 0x460(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_18AE[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UGameplayEffect>           RemoveDebuffEffectClass;                           // 0x468(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UChaGA_Death* GetDefaultObj();

	void DestroyCharacterCorpse(class ASolarCharacter* Character);
	void DeathEnd(class ASolarCharacter* Character);
};

// 0x30 (0x490 - 0x460)
// Class Solarland.ChaGA_DeathVerge
class UChaGA_DeathVerge : public USolarCharacterGameplayAbility
{
public:
	TArray<TSubclassOf<class UGameplayEffect>>   DeathVergeHPEffects;                               // 0x460(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_18AF[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTag                          DeathVergeMaxHPDataTag;                            // 0x480(0x8)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TimeToWait;                                        // 0x488(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_18B0[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UChaGA_DeathVerge* GetDefaultObj();

	void OnWaitDelayFinished();
};

// 0x30 (0x490 - 0x460)
// Class Solarland.ChaGA_DuckRolling
class UChaGA_DuckRolling : public USolarCharacterGameplayAbility
{
public:
	enum class ESkillAnimType                    SkillAnimType;                                     // 0x460(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_18B1[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UDuckRollingConfigDataAsset*           ConfigDataAsset;                                   // 0x468(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UGameplayEffect>           SwitchToRollingMeshEffect;                         // 0x470(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                          Montage;                                           // 0x478(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_18B2[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAbilityTask_WaitDelay*                WaitRollingMeshTask;                               // 0x488(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UChaGA_DuckRolling* GetDefaultObj();

	void SyncToSwitchToRollingMesh();
	void SwitchToRollingMesh();
	void OnRollingEnd();
	void OnRollingCanceled();
};

// 0x58 (0x4B8 - 0x460)
// Class Solarland.ChaGA_EnergyBubble
class UChaGA_EnergyBubble : public USolarCharacterGameplayAbility
{
public:
	TSubclassOf<class ASolarEnergyBubble>        EnergyShieldClass;                                 // 0x460(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class AGameplayAbilityTargetActor> GATargetActorClass;                                // 0x468(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                          EmptyMontage;                                      // 0x470(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                          AimMontage;                                        // 0x478(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  StartSocketName;                                   // 0x480(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  StartEnergyBubbleNotify;                           // 0x488(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  ReleaseEnergyBubbleNotify;                         // 0x490(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ASolarEnergyBubble*                    EnergyShieldActor;                                 // 0x498(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_18B7[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAbilityTask_WaitTargetData*           WaitTargetDataTask;                                // 0x4A8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class AGameplayAbilityTargetActor> TargetActorCache;                                  // 0x4B0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UChaGA_EnergyBubble* GetDefaultObj();

	void OnWaitTargetDataTaskValid(struct FGameplayAbilityTargetDataHandle& InTargetData);
	void OnMontageNotify(class FName NotifyName);
};

// 0x8 (0x468 - 0x460)
// Class Solarland.ChaGA_Equip
class UChaGA_Equip : public USolarCharacterGameplayAbility
{
public:
	struct FGameplayTag                          EquipMontageTag;                                   // 0x460(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UChaGA_Equip* GetDefaultObj();

};

// 0x20 (0x438 - 0x418)
// Class Solarland.SideResidentPassiveSkill
class USideResidentPassiveSkill : public USolarGameplayAbility
{
public:
	TSubclassOf<class UGameplayEffect>           SignEffectClass;                                   // 0x418(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_18BA[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USideResidentPassiveSkill* GetDefaultObj();

	bool OnSidePassiveSkillEnded(struct FSideAttributeSet& InSideAttributeSet, class ASCMPlayerState* CurrentPlayer, bool bWasCancelled);
	bool OnSidePassiveSkillActivated(struct FSideAttributeSet& InSideAttributeSet, class ASCMPlayerState* CurrentPlayer);
	void OnSideLeaving(const struct FGameplayEventData& Payload);
	void OnSideJoining(const struct FGameplayEventData& Payload);
	void OnCharacterBeforeChange();
};

// 0x10 (0x448 - 0x438)
// Class Solarland.ChaGA_FastTreatment
class UChaGA_FastTreatment : public USideResidentPassiveSkill
{
public:
	float                                        ModifierTreatmentValue;                            // 0x438(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ModifierShieldValue;                               // 0x43C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ModifierBigShieldValue;                            // 0x440(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_18BB[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UChaGA_FastTreatment* GetDefaultObj();

};

// 0x10 (0x470 - 0x460)
// Class Solarland.ChaGA_Fire
class UChaGA_Fire : public USolarCharacterGameplayAbility
{
public:
	class ASolarCharacter*                       ActCharacter;                                      // 0x460(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_18BD[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bPrintDebugString;                                 // 0x46D(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_18BE[0x2];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UChaGA_Fire* GetDefaultObj();

	void OnFireTaskEnd();
	void OnCtrlTaskEnd();
	void DoFireTask();
};

// 0x0 (0x460 - 0x460)
// Class Solarland.ChaGA_GetOffVehicle
class UChaGA_GetOffVehicle : public USolarCharacterGameplayAbility
{
public:

	static class UClass* StaticClass();
	static class UChaGA_GetOffVehicle* GetDefaultObj();

};

// 0x0 (0x460 - 0x460)
// Class Solarland.ChaGA_GetOnVehicle
class UChaGA_GetOnVehicle : public USolarCharacterGameplayAbility
{
public:

	static class UClass* StaticClass();
	static class UChaGA_GetOnVehicle* GetDefaultObj();

};

// 0x70 (0x4A8 - 0x438)
// Class Solarland.ChaGA_HighAlert
class UChaGA_HighAlert : public UResidentPassiveSkill
{
public:
	bool                                         bShowDebug;                                        // 0x438(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_18C0[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        HighAlertAngle;                                    // 0x43C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        HighAlertRadiusMin;                                // 0x440(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        HighAlertRadiusMax;                                // 0x444(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                             HighAlertBoxExtent;                                // 0x448(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<enum class EAlertDirection, float>      AlertCD;                                           // 0x450(0x50)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	struct FGameplayCueTag                       CueTag;                                            // 0x4A0(0x8)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UChaGA_HighAlert* GetDefaultObj();

	void OnHighAlert(enum class EAlertDirection Direction);
};

// 0x58 (0x4B8 - 0x460)
// Class Solarland.ChaGA_HitRecover
class UChaGA_HitRecover : public USolarCharacterGameplayAbility
{
public:
	float                                        Duration;                                          // 0x460(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        KnockbackDuration;                                 // 0x464(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<enum class EHitRecoverType, float>      HitbackDistance;                                   // 0x468(0x50)(Edit, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UChaGA_HitRecover* GetDefaultObj();

	void OnBlock(struct FGameplayAbilityTargetDataHandle& InTargetData);
};

// 0x90 (0x4C8 - 0x438)
// Class Solarland.ChaGA_HitShield
class UChaGA_HitShield : public UResidentPassiveSkill
{
public:
	TSubclassOf<class ASolarEnergyShield>        HitShieldClass;                                    // 0x438(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DistanceToCharacter;                               // 0x440(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CoolDown;                                          // 0x444(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxAngleinZ;                                       // 0x448(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_18C6[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTagContainer                 BlockShieldSpawnTags;                              // 0x450(0x20)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	TSet<enum class ESCMDamageType>              TriggerDamageTypes;                                // 0x470(0x50)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_18C7[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UChaGA_HitShield* GetDefaultObj();

	void SpawnHitShield(const struct FVector& Direction);
	void OnTakeDamage(class ASolarCharacter* Character, struct FSolarPointDamageEvent& DamageEvent, float HPDamage);
};

// 0x8 (0x440 - 0x438)
// Class Solarland.ChaGA_Hoarder
class UChaGA_Hoarder : public USideResidentPassiveSkill
{
public:
	float                                        ModifierValue;                                     // 0x438(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_18C8[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UChaGA_Hoarder* GetDefaultObj();

};

// 0x30 (0x490 - 0x460)
// Class Solarland.ChaGA_HomeVault
class UChaGA_HomeVault : public USolarCharacterGameplayAbility
{
public:
	struct FGameplayTag                          ClimbWaterMontageTag;                              // 0x460(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTag                          VaultCrossMontageTag;                              // 0x468(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_18CA[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UChaGA_HomeVault* GetDefaultObj();

	void OnMontageCompleted();
};

// 0x18 (0x478 - 0x460)
// Class Solarland.ChaGA_InitializationFromGameMode
class UChaGA_InitializationFromGameMode : public USolarCharacterGameplayAbility
{
public:
	TSubclassOf<class UGameplayEffect>           VJetCDOverrideEffect;                              // 0x460(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UGameplayEffect>           HJetCDOverrideEffect;                              // 0x468(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          SettingOverrideTag;                                // 0x470(0x8)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UChaGA_InitializationFromGameMode* GetDefaultObj();

};

// 0x0 (0x460 - 0x460)
// Class Solarland.ChaGA_Invincible
class UChaGA_Invincible : public USolarCharacterGameplayAbility
{
public:

	static class UClass* StaticClass();
	static class UChaGA_Invincible* GetDefaultObj();

};

// 0x10 (0x470 - 0x460)
// Class Solarland.ChaGA_JetFlyAction
class UChaGA_JetFlyAction : public USolarCharacterGameplayAbility
{
public:
	bool                                         bVerticalFly;                                      // 0x460(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_18CC[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UGameplayEffect>           BoostEffect;                                       // 0x468(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UChaGA_JetFlyAction* GetDefaultObj();

};

// 0x58 (0x4B8 - 0x460)
// Class Solarland.ChaGA_JetFlyCharge
class UChaGA_JetFlyCharge : public USolarCharacterGameplayAbility
{
public:
	TSubclassOf<class UGameplayEffect>           VerticalChargeEffect;                              // 0x460(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UGameplayEffect>           TempVerticalChargeEffect;                          // 0x468(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UGameplayEffect>           OnceVChargeCompletedEffect;                        // 0x470(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UGameplayEffect>           HorizontalChargeEffect;                            // 0x478(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UGameplayEffect>           TempHorizontalChargeEffect;                        // 0x480(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UGameplayEffect>           OnceHChargeCompletedEffect;                        // 0x488(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          TempChargeDurationTag;                             // 0x490(0x8)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAbilityTask_WaitGameplayEffectRemoved* OnOnceVJetChargeFinished;                          // 0x498(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAbilityTask_WaitGameplayEffectRemoved* OnOnceHJetChargeFinished;                          // 0x4A0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_18D2[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UChaGA_JetFlyCharge* GetDefaultObj();

	void StartVerticalJetChargeFailed(struct FGameplayEffectRemovalInfo& GameplayEffectRemovalInfo);
	void StartHorizontalJetChargeFailed(struct FGameplayEffectRemovalInfo& GameplayEffectRemovalInfo);
	void ReceiveVerticalJetTimesChanged();
	void ReceiveVerticalChargeCDChanged(float OldCD);
	void ReceiveHorizontalJetTimesChanged();
	void ReceiveHorizontalChargeCDChanged(float OldCD);
	void OnceVerticalJetChargeFinished(struct FGameplayEffectRemovalInfo& GameplayEffectRemovalInfo);
	void OnceHorizontalJetChargeFinished(struct FGameplayEffectRemovalInfo& GameplayEffectRemovalInfo);
};

// 0x0 (0x460 - 0x460)
// Class Solarland.ChaGA_JetSlowFalling
class UChaGA_JetSlowFalling : public USolarCharacterGameplayAbility
{
public:

	static class UClass* StaticClass();
	static class UChaGA_JetSlowFalling* GetDefaultObj();

};

// 0x0 (0x460 - 0x460)
// Class Solarland.ChaGA_Jump
class UChaGA_Jump : public USolarCharacterGameplayAbility
{
public:

	static class UClass* StaticClass();
	static class UChaGA_Jump* GetDefaultObj();

};

// 0x10 (0x470 - 0x460)
// Class Solarland.ChaGA_LaunchAction
class UChaGA_LaunchAction : public USolarCharacterGameplayAbility
{
public:
	float                                        WaitingLaunchingTime;                              // 0x460(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          LaunchCueTag;                                      // 0x464(0x8)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_18D5[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UChaGA_LaunchAction* GetDefaultObj();

	void EndLaunch();
};

// 0x0 (0x460 - 0x460)
// Class Solarland.ChaGA_LostConnection
class UChaGA_LostConnection : public USolarCharacterGameplayAbility
{
public:

	static class UClass* StaticClass();
	static class UChaGA_LostConnection* GetDefaultObj();

};

// 0x38 (0x458 - 0x420)
// Class Solarland.ChaGA_LowHPShieldRecAcc
class UChaGA_LowHPShieldRecAcc : public UCharacterTalent
{
public:
	TSubclassOf<class UGameplayEffect>           AccelerationEffectClass;                           // 0x420(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FScalableFloat                        LowHPThreshold;                                    // 0x428(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_18D7[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UChaGA_LowHPShieldRecAcc* GetDefaultObj();

	void CheckHPThreshold();
};

// 0x38 (0x458 - 0x420)
// Class Solarland.ChaGA_LowHPSpeedup
class UChaGA_LowHPSpeedup : public UCharacterTalent
{
public:
	TSubclassOf<class UGameplayEffect>           SpeedupEffectClass;                                // 0x420(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FScalableFloat                        LowHPThreshold;                                    // 0x428(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_18DA[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UChaGA_LowHPSpeedup* GetDefaultObj();

	void OnSpeedUpFinished(struct FGameplayEffectRemovalInfo& GameplayEffectRemovalInfo);
	void OnCoolingDownFinished(struct FGameplayEffectRemovalInfo& GameplayEffectRemovalInfo);
	void EffectAppliedFailed(struct FGameplayEffectRemovalInfo& GameplayEffectRemovalInfo);
	void CheckHPThreshold();
};

// 0x48 (0x4A8 - 0x460)
// Class Solarland.ChaGA_MassInvisibility
class UChaGA_MassInvisibility : public USolarCharacterGameplayAbility
{
public:
	class UAnimMontage*                          SkillMontage;                                      // 0x460(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                          SkillMontageWithWeapon;                            // 0x468(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  StartSkillMontageNotify;                           // 0x470(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          MassInvisibilityRangeCueTag;                       // 0x478(0x8)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UGameplayAbility>          MassInvisibilityTargetAbilityClass;                // 0x480(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MassInvisibilityRangeRadius;                       // 0x488(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MassInvisibilityRangeHalfHeight;                   // 0x48C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          OrnamentTag;                                       // 0x490(0x8)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                          OrnamentMontage;                                   // 0x498(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_18DB[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UChaGA_MassInvisibility* GetDefaultObj();

	void OnMontageNotify(class FName NotifyName);
};

// 0x28 (0x488 - 0x460)
// Class Solarland.ChaGA_MassInvisibilityTarget
class UChaGA_MassInvisibilityTarget : public USolarCharacterGameplayAbility
{
public:
	struct FGameplayCueTag                       MassInvisibilityCueTag;                            // 0x460(0x8)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	TSubclassOf<class UGameplayEffect>           MassInvisibilityBuffEffectClass;                   // 0x468(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UGameplayEffect>           MassInvisibilityPrepareEffectClass;                // 0x470(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UGameplayEffect>           MassInvisibilityEffectClass;                       // 0x478(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_18DE[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UChaGA_MassInvisibilityTarget* GetDefaultObj();

	void OnMassInvisibilityPrepareEffectRemoved(struct FGameplayEffectRemovalInfo& GameplayEffectRemovalInfo);
	void OnMassInvisibilityEffectRemoved(struct FGameplayEffectRemovalInfo& GameplayEffectRemovalInfo);
};

// 0x30 (0x490 - 0x460)
// Class Solarland.ChaGA_Melee
class UChaGA_Melee : public USolarCharacterGameplayAbility
{
public:
	TArray<struct FGameplayTag>                  CrouchMeleeMontageTags;                            // 0x460(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FGameplayTag>                  StandMeleeMontageTags;                             // 0x470(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        MotionWarpingAngleTolerance;                       // 0x480(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_18E2[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UChaGA_Melee* GetDefaultObj();

	void OnStopMelee(class UGameplayAbility* InActivatedAbility);
	void GetYawToleranceMinMax(struct FRotator& CurrentControlRotation, struct FRotator& TargetRotation, float* YawMin, float* YawMax);
};

// 0x208 (0x7F0 - 0x5E8)
// Class Solarland.ChaGA_MissileSwarm
class UChaGA_MissileSwarm : public USolarSkillGA_Projectile
{
public:
	struct FMissileSwarmSkillConfig              SkillConfig;                                       // 0x5E8(0x1D8)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TArray<struct FMissileSwarmSpawnParameter>   MissileSwarmSpawnConfig;                           // 0x7C0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                           PreviewMeshTemplate;                               // 0x7D0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                    PreviewMaterial;                                   // 0x7D8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_18E4[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UChaGA_MissileSwarm* GetDefaultObj();

};

// 0x20 (0x480 - 0x460)
// Class Solarland.ChaGA_MultiRecoverShield
class UChaGA_MultiRecoverShield : public USolarCharacterGameplayAbility
{
public:
	TSubclassOf<class UGameplayEffect>           ActivationEffect;                                  // 0x460(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UGameplayEffect>           CustomCoolDownEffect;                              // 0x468(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_18E6[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UChaGA_MultiRecoverShield* GetDefaultObj();

	void OnCoolDownEffectStart();
	void OnCoolDownEffectFinish();
	void OnActivationEffect(const struct FGameplayEventData& Payload);
};

// 0x38 (0x498 - 0x460)
// Class Solarland.ChaGA_NightComes
class UChaGA_NightComes : public USolarCharacterGameplayAbility
{
public:
	TSubclassOf<class UGameplayEffect>           NightComesBuffGameplayEffect;                      // 0x460(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class ASolarNightComesActor>     NightComesActorClass;                              // 0x468(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                          SkillMontage;                                      // 0x470(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                          SkillMontageWithWeapon;                            // 0x478(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  StartSkillMontageNotify;                           // 0x480(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               SpawnOffset;                                       // 0x488(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_18E8[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UChaGA_NightComes* GetDefaultObj();

	void OnMontageNotify(class FName NotifyName);
};

// 0x0 (0x460 - 0x460)
// Class Solarland.ChaGA_OpenNewTreasureBox
class UChaGA_OpenNewTreasureBox : public USolarCharacterGameplayAbility
{
public:

	static class UClass* StaticClass();
	static class UChaGA_OpenNewTreasureBox* GetDefaultObj();

};

// 0x58 (0x4B8 - 0x460)
// Class Solarland.ChaGA_OpenScope
class UChaGA_OpenScope : public USolarCharacterGameplayAbility
{
public:
	struct FGameplayTagRequirements              OngoingTagRequirements;                            // 0x460(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	float                                        MaxEnteringScopeOpeningTime;                       // 0x4B0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_18EA[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UChaGA_OpenScope* GetDefaultObj();

	void OnOngoingTagRequirementsMetStatusChange(bool bMet);
};

// 0x8 (0x468 - 0x460)
// Class Solarland.ChaGA_OpenTreasureBox
class UChaGA_OpenTreasureBox : public USolarCharacterGameplayAbility
{
public:
	struct FGameplayTag                          OpenTreasureBoxMontageTag;                         // 0x460(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UChaGA_OpenTreasureBox* GetDefaultObj();

};

// 0x30 (0x490 - 0x460)
// Class Solarland.ChaGA_ParkourMaster
class UChaGA_ParkourMaster : public USolarCharacterGameplayAbility
{
public:
	TSubclassOf<class UGameplayEffect>           VertEffect;                                        // 0x460(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UGameplayEffect>           HoriEffect;                                        // 0x468(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_18EC[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UChaGA_ParkourMaster* GetDefaultObj();

	void OnJetFlyActivated(class UGameplayAbility* InActivatedAbility);
};

// 0x30 (0x490 - 0x460)
// Class Solarland.ChaGA_PickUp
class UChaGA_PickUp : public USolarCharacterGameplayAbility
{
public:
	struct FGameplayTag                          PickUpHighEmptyMontageTag;                         // 0x460(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTag                          PickUpLowEmptyMontageTag;                          // 0x468(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTag                          PickUpHighGunAimMontageTag;                        // 0x470(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTag                          PickUpLowGunAimMontageTag;                         // 0x478(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_18F0[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UChaGA_PickUp* GetDefaultObj();

	void OnWeaponSlotReplace(int32 InWeaponSlotID, class ASolarPlayerWeapon* InWeapon);
	void OnMontageCompleted();
};

// 0x48 (0x4A8 - 0x460)
// Class Solarland.ChaGA_RadarScanning
class UChaGA_RadarScanning : public USolarCharacterGameplayAbility
{
public:
	float                                        SpawnRadarDelayTime;                               // 0x460(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        LifeTime;                                          // 0x464(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        LifeTimeNoResult;                                  // 0x468(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_18F2[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class ASolarRadarBase>           RadarClass;                                        // 0x470(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        SpawnRadarEventID;                                 // 0x478(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        EffectRadius;                                      // 0x47C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTag                          CueTag;                                            // 0x480(0x8)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ASolarRadarBase*                       SpawnedRadar;                                      // 0x488(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_18F4[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UChaGA_RadarScanning* GetDefaultObj();

	void StartSpawnRadar();
};

// 0x8 (0x468 - 0x460)
// Class Solarland.ChaGA_RapidBoost
class UChaGA_RapidBoost : public USolarCharacterGameplayAbility
{
public:
	TSubclassOf<class UGameplayEffect>           JetFlyCooldownEffectClass;                         // 0x460(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UChaGA_RapidBoost* GetDefaultObj();

};

// 0x10 (0x470 - 0x460)
// Class Solarland.ChaGA_Rebirth
class UChaGA_Rebirth : public USolarCharacterGameplayAbility
{
public:
	TSubclassOf<class UGameplayEffect>           RebirthHPEffect;                                   // 0x460(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UGameplayEffect>           ResetJetFlyTimesEffect;                            // 0x468(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UChaGA_Rebirth* GetDefaultObj();

};

// 0x28 (0x488 - 0x460)
// Class Solarland.ChaGA_RechargeShield
class UChaGA_RechargeShield : public USolarCharacterGameplayAbility
{
public:
	struct FGameplayTag                          RechargeShieldMontageTag;                          // 0x460(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTagContainer                 ActivationRequiredTagsAny;                         // 0x468(0x20)(Edit, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UChaGA_RechargeShield* GetDefaultObj();

};

// 0x18 (0x478 - 0x460)
// Class Solarland.ChaGA_Reload
class UChaGA_Reload : public USolarCharacterGameplayAbility
{
public:
	struct FGameplayTag                          ReloadMontageTag;                                  // 0x460(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTag                          ReloadWithBoltMontageTag;                          // 0x468(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_18F5[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UChaGA_Reload* GetDefaultObj();

	void OnWeaponReloadComplete();
};

// 0x10 (0x470 - 0x460)
// Class Solarland.ChaGA_RepairVehicle
class UChaGA_RepairVehicle : public USolarCharacterGameplayAbility
{
public:
	struct FGameplayTag                          RepairVehicleWeakPointsMontageTag;                 // 0x460(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_18F7[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UChaGA_RepairVehicle* GetDefaultObj();

	void OnVehicleWeakPointRepairingEnd(bool bCompleted);
};

// 0x20 (0x480 - 0x460)
// Class Solarland.ChaGA_Rescue
class UChaGA_Rescue : public USolarCharacterGameplayAbility
{
public:
	float                                        SucceedBeforeSoundTime;                            // 0x460(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          TeamRescueMontageTag;                              // 0x464(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_18F9[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UChaAT_WaitDelay*                      DelayTask;                                         // 0x470(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTag                          SucceedCueTag;                                     // 0x478(0x8)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UChaGA_Rescue* GetDefaultObj();

	bool ShouldCancelRescue();
	void OnRescueCompleted();
	void OnMontageCompleted();
	void BeforeRescueCompleted();
};

// 0x8 (0x468 - 0x460)
// Class Solarland.ChaGA_ReviveTeammates
class UChaGA_ReviveTeammates : public USolarCharacterGameplayAbility
{
public:
	struct FGameplayTag                          ReviveTeammatesMontageTag;                         // 0x460(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UChaGA_ReviveTeammates* GetDefaultObj();

	void OnReviveCompleted();
	void OnAbilityExec();
};

// 0x8 (0x440 - 0x438)
// Class Solarland.ChaGA_ShopVIP
class UChaGA_ShopVIP : public USideResidentPassiveSkill
{
public:
	float                                        ModifierValue;                                     // 0x438(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_18FB[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UChaGA_ShopVIP* GetDefaultObj();

};

// 0x8 (0x468 - 0x460)
// Class Solarland.ChaGA_SkydiveFly
class UChaGA_SkydiveFly : public USolarCharacterGameplayAbility
{
public:
	struct FGameplayTag                          SkydiveSoundCue;                                   // 0x460(0x8)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UChaGA_SkydiveFly* GetDefaultObj();

	void OnMovementModeChanged(enum class EMovementMode NewMovementMode);
};

// 0x0 (0x460 - 0x460)
// Class Solarland.ChaGA_SkydiveLand
class UChaGA_SkydiveLand : public USolarCharacterGameplayAbility
{
public:

	static class UClass* StaticClass();
	static class UChaGA_SkydiveLand* GetDefaultObj();

	void OnMovementModeChanged(enum class EMovementMode NewMovementMode);
};

// 0xB8 (0x518 - 0x460)
// Class Solarland.ChaGA_SkywardDive
class UChaGA_SkywardDive : public USolarCharacterGameplayAbility
{
public:
	struct FGameplayTag                          SkywardDivePrepareCueTag;                          // 0x460(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          SkywardDiveLaunchCueTag;                           // 0x468(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PrepareTimeConfig;                                 // 0x470(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxSkywardHeightConfig;                            // 0x474(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                    LaunchSpeedCurveConfig;                            // 0x478(0x88)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class ASkywardDiveLauncher>   SkywardDiveLauncher;                               // 0x500(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_18FF[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  CancelActionName;                                  // 0x510(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UChaGA_SkywardDive* GetDefaultObj();

	void RealLaunchCharacter();
	void K2_DoPrepareCue(class ASolarCharacter* Character, class ASkywardDiveLauncher* Launcher);
	void K2_DoLaunchCue(class ASolarCharacter* Character, class ASkywardDiveLauncher* Launcher);
	void DoPrepareCue();
	void DoLaunchCue();
	void CancelPrepareLaunch();
};

// 0x18 (0x478 - 0x460)
// Class Solarland.ChaGA_Sprint
class UChaGA_Sprint : public USolarCharacterGameplayAbility
{
public:
	TSubclassOf<class UGameplayEffect>           SprintEffectClass;                                 // 0x460(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          CancelSprintEventTag;                              // 0x468(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1900[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UChaGA_Sprint* GetDefaultObj();

	void OnSprintCancelled();
};

// 0x28 (0x488 - 0x460)
// Class Solarland.ChaGA_StickOutOfVehicle
class UChaGA_StickOutOfVehicle : public USolarCharacterGameplayAbility
{
public:
	float                                        OutShotTimerForPC;                                 // 0x460(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1901[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTagContainer                 BreakOutShotTags;                                  // 0x468(0x20)(Edit, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UChaGA_StickOutOfVehicle* GetDefaultObj();

	void OnCancelByAdditionalCheck();
	bool CheckAdditionalCancel();
};

// 0xC0 (0x520 - 0x460)
// Class Solarland.ChaGA_SuperRadarScan
class UChaGA_SuperRadarScan : public USolarCharacterGameplayAbility
{
public:
	class ASolarCharacter*                       CacheCharacter;                                    // 0x460(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bSpawnRadarSuccess;                                // 0x468(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bSpawnedRadar;                                     // 0x469(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bBackswingPlayed;                                  // 0x46A(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_190F[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               HitLocation;                                       // 0x46C(0xC)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          RadarOrnamentTag;                                  // 0x478(0x8)(Edit, BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LifeTime;                                          // 0x480(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        PrecastTime;                                       // 0x484(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        BackswingTime;                                     // 0x488(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1910[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UGameplayAbility>          RadarScanningAbilityClass;                         // 0x490(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAnimMontage*                          ScanAnimMontage;                                   // 0x498(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTag                          CueTag;                                            // 0x4A0(0x8)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        MoveRadius;                                        // 0x4A8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        OverlookCameraHeight;                              // 0x4AC(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        OverlookCameraPitch;                               // 0x4B0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        CameraMoveScale;                                   // 0x4B4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystem*                       PreviewEffect;                                     // 0x4B8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bUseForceLOD;                                      // 0x4C0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1912[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        DefaultLOD;                                        // 0x4C4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        OverLookLOD;                                       // 0x4C8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        CancelCD;                                          // 0x4CC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1913[0x38];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class ACameraActor*                          CacheOverlookCamera;                               // 0x508(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AActor*                                CacheViewTarget;                                   // 0x510(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystemComponent*              CacheEmitter;                                      // 0x518(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UChaGA_SuperRadarScan* GetDefaultObj();

	void TryCreateRadarForAI();
	void TryCreateRadar(bool bSpawn, struct FVector& InLoc);
	void StartBackswing();
	void PlaySound(const class FString& InSoundName);
	void OnTakeDamage(class ASolarCharacter* Character, struct FSolarPointDamageEvent& DamageEvent, float HPDamage);
	void OnSpawnRadarSuccessfulHandle(const struct FGameplayTag& Tag, int32 NewCount);
	void OnReceivdTryCreateRadar(bool bSpawn);
	void OnPrecastReady();
	void OnPostMontageCompleted();
	void OnCameraRight(float Value);
	void OnCameraForward(float Value);
	void OnBackswingReady();
	void K2_OnPrecastReady();
	void K2_OnBackswingStart(bool bSuccess);
	void K2_OnAbilityEnd(class ASolarCharacter* Character, bool bSuccess);
	void K2_OnAbilityActive(class ASolarCharacter* Character);
};

// 0x0 (0x460 - 0x460)
// Class Solarland.ChaGA_Swap
class UChaGA_Swap : public USolarCharacterGameplayAbility
{
public:

	static class UClass* StaticClass();
	static class UChaGA_Swap* GetDefaultObj();

};

// 0x0 (0x460 - 0x460)
// Class Solarland.ChaGA_Swim
class UChaGA_Swim : public USolarCharacterGameplayAbility
{
public:

	static class UClass* StaticClass();
	static class UChaGA_Swim* GetDefaultObj();

};

// 0x0 (0x460 - 0x460)
// Class Solarland.ChaGA_SwitchVehicleSeat
class UChaGA_SwitchVehicleSeat : public USolarCharacterGameplayAbility
{
public:

	static class UClass* StaticClass();
	static class UChaGA_SwitchVehicleSeat* GetDefaultObj();

};

// 0xA0 (0x500 - 0x460)
// Class Solarland.ChaGA_TacticalDodge
class UChaGA_TacticalDodge : public USolarCharacterGameplayAbility
{
public:
	TSubclassOf<class UGameplayEffect>           DebuffPurifyEffectClass;                           // 0x460(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UGameplayEffect>           DebuffImmunityEffectClass;                         // 0x468(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTacticalDodgeDirectionConfig         ForwardConfig;                                     // 0x470(0x10)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FTacticalDodgeDirectionConfig         ForwardLeftConfig;                                 // 0x480(0x10)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FTacticalDodgeDirectionConfig         ForwardRightConfig;                                // 0x490(0x10)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FTacticalDodgeDirectionConfig         LeftConfig;                                        // 0x4A0(0x10)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FTacticalDodgeDirectionConfig         RightConfig;                                       // 0x4B0(0x10)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FTacticalDodgeDirectionConfig         BackwardConfig;                                    // 0x4C0(0x10)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FTacticalDodgeDirectionConfig         BackwardLeftConfig;                                // 0x4D0(0x10)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FTacticalDodgeDirectionConfig         BackwardRightConfig;                               // 0x4E0(0x10)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	TSubclassOf<class UGameplayEffect>           BuffQuickReloadEffectClass;                        // 0x4F0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1916[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UChaGA_TacticalDodge* GetDefaultObj();

};

// 0x70 (0x4D0 - 0x460)
// Class Solarland.ChaGA_TeamBoost
class UChaGA_TeamBoost : public USolarCharacterGameplayAbility
{
public:
	class UAnimMontage*                          SkillMontage;                                      // 0x460(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                          SkillMontageArmed;                                 // 0x468(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          OrnamentTag;                                       // 0x470(0x8)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                          OrnamentMontage;                                   // 0x478(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                          OrnamentMontageArmed;                              // 0x480(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  StartSkillMontageNotify;                           // 0x488(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UGameplayEffect>           DebuffPurifyEffectClass;                           // 0x490(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UGameplayEffect>           DebuffImmunityEffectClass;                         // 0x498(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UGameplayEffect>           SelfBoostEffectClass;                              // 0x4A0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UGameplayEffect>           TeammateBoostEffectClass;                          // 0x4A8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class ATeamBoostProjectile>      TeamBoostProjectileClass;                          // 0x4B0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               ProjectileSpawnRelativeLocation;                   // 0x4B8(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SkillRangeRadius;                                  // 0x4C4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SkillRangeHalfHeight;                              // 0x4C8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1917[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UChaGA_TeamBoost* GetDefaultObj();

	void OnMontageNotify(class FName NotifyName);
};

// 0x18 (0x478 - 0x460)
// Class Solarland.ChaGA_TrackingMaster
class UChaGA_TrackingMaster : public USolarCharacterGameplayAbility
{
public:
	TSubclassOf<class UGameplayEffect>           TrackingMasterEffect;                              // 0x460(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1919[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UChaGA_TrackingMaster* GetDefaultObj();

	void OnCharacterBeforeChange();
};

// 0x28 (0x488 - 0x460)
// Class Solarland.ChaGA_Treat
class UChaGA_Treat : public USolarCharacterGameplayAbility
{
public:
	struct FGameplayTag                          TreatMontageTag;                                   // 0x460(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTagContainer                 ActivationRequiredTagsAny;                         // 0x468(0x20)(Edit, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UChaGA_Treat* GetDefaultObj();

};

// 0x40 (0x4A0 - 0x460)
// Class Solarland.ChaGA_UAVRescue
class UChaGA_UAVRescue : public USolarCharacterGameplayAbility
{
public:
	TSubclassOf<class ASolarUAVRescue>           RescueUAVClass;                                    // 0x460(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LifeTime;                                          // 0x468(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bEffectTeammates;                                  // 0x46C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_191A[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAnimMontage*                          SummoEmptyMontage;                                 // 0x470(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                          SummonAnimMontage;                                 // 0x478(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SummonTime;                                        // 0x480(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PermanentSpawnDelay;                               // 0x484(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SkillRange;                                        // 0x488(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          CueTag;                                            // 0x48C(0x8)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_191B[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UChaGA_UAVRescue* GetDefaultObj();

	void SummonUAV();
};

// 0x40 (0x4A0 - 0x460)
// Class Solarland.ChaGA_UAVShield
class UChaGA_UAVShield : public USolarCharacterGameplayAbility
{
public:
	TSubclassOf<class ASolarUAVShield>           ShieldUAVClass;                                    // 0x460(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_191C[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        LifeTime;                                          // 0x478(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bEffectTeammates;                                  // 0x47C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_191D[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAnimMontage*                          SummonAnimMontage;                                 // 0x480(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                          SummonAnimMontage_Aim;                             // 0x488(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SummonTime;                                        // 0x490(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_191E[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UChaGA_UAVShield* GetDefaultObj();

	void SummonUAV();
};

// 0x28 (0x488 - 0x460)
// Class Solarland.ChaGA_UpgradeShield
class UChaGA_UpgradeShield : public USolarCharacterGameplayAbility
{
public:
	struct FGameplayTag                          UpgradeShieldMontageTag;                           // 0x460(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTagContainer                 ActivationRequiredTagsAny;                         // 0x468(0x20)(Edit, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UChaGA_UpgradeShield* GetDefaultObj();

	void OnMontageInterruptOrCanceled();
	void OnMontageCompleted();
};

// 0x38 (0x498 - 0x460)
// Class Solarland.ChaGA_VaultBase
class UChaGA_VaultBase : public USolarCharacterGameplayAbility
{
public:
	class AActor*                                ContactActor;                                      // 0x460(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1920[0x30];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UChaGA_VaultBase* GetDefaultObj();

	void OnServerConfirm();
	void OnMontageCompleted();
	void OnMontageBlendOut();
};

// 0xD0 (0x568 - 0x498)
// Class Solarland.ChaGA_Vault
class UChaGA_Vault : public UChaGA_VaultBase
{
public:
	struct FGameplayTag                          StepMontageTag;                                    // 0x498(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTag                          Step_CrossMontageTag;                              // 0x4A0(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTag                          Step_SprintMontageTag;                             // 0x4A8(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTag                          Step_Sprint_CrossMontageTag;                       // 0x4B0(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTag                          VaultMontageTag;                                   // 0x4B8(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTag                          Vault_CrossMontageTag;                             // 0x4C0(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTag                          Vault_SprintMontageTag;                            // 0x4C8(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTag                          Vault_Sprint_CrossMontageTag;                      // 0x4D0(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTag                          ClimbMontageTag;                                   // 0x4D8(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTag                          Climb_CrossMontageTag;                             // 0x4E0(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTag                          Climb_SprintMontageTag;                            // 0x4E8(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTag                          Climb_Sprint_CrossMontageTag;                      // 0x4F0(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTag                          Climb_WaterMontageTag;                             // 0x4F8(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTag                          HighClimbMontageTag;                               // 0x500(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTag                          HighClimb_CrossMontageTag;                         // 0x508(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTag                          HighClimb_SprintMontageTag;                        // 0x510(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTag                          HighClimb_Sprint_CrossMontageTag;                  // 0x518(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                PlayerCancelVaultEventName;                        // 0x520(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                TeammateCancelVaultEventName;                      // 0x530(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                EnemyCancelVaultEventName;                         // 0x540(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1923[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UChaGA_Vault* GetDefaultObj();

	void OnRootMotionModifierDeactivate(class ACharacter* Character, class URootMotionModifier* Modifier);
	void OnHandleNotify(class USolarAnimInstance* AnimInstance, class USolarAnimNotify* Notify, int32* OutDenial);
};

// 0x0 (0x460 - 0x460)
// Class Solarland.ChaGA_VehicleFire
class UChaGA_VehicleFire : public USolarCharacterGameplayAbility
{
public:

	static class UClass* StaticClass();
	static class UChaGA_VehicleFire* GetDefaultObj();

};

// 0x0 (0x460 - 0x460)
// Class Solarland.ChaGA_VehicleForceJetFlyAction
class UChaGA_VehicleForceJetFlyAction : public USolarCharacterGameplayAbility
{
public:

	static class UClass* StaticClass();
	static class UChaGA_VehicleForceJetFlyAction* GetDefaultObj();

};

// 0x0 (0x460 - 0x460)
// Class Solarland.ChaGA_VehicleReload
class UChaGA_VehicleReload : public USolarCharacterGameplayAbility
{
public:

	static class UClass* StaticClass();
	static class UChaGA_VehicleReload* GetDefaultObj();

};

// 0x90 (0x4F0 - 0x460)
// Class Solarland.ChaGA_WallRun
class UChaGA_WallRun : public USolarCharacterGameplayAbility
{
public:
	float                                        WallRunCameraAngleTolerance;                       // 0x460(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        WallRunJumpReactionDelay;                          // 0x464(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        FootOffset;                                        // 0x468(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        WallRunBlendOut;                                   // 0x46C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        SurfaceAngleLerpSpeed;                             // 0x470(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        MaxStandAngle;                                     // 0x474(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector2D                             LandingForceMagnitude;                             // 0x478(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        MaxTriggerNumPerAirMove;                           // 0x480(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        WallRunJumpHeight;                                 // 0x484(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        WallRunJumpDist;                                   // 0x488(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        WallRunFailedHeight;                               // 0x48C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        WallRunFailedDist;                                 // 0x490(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTag                          WithWeaponFailedMontageTag;                        // 0x494(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTag                          EmptyHandFailedMontageTag;                         // 0x49C(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  CancelActionName;                                  // 0x4A4(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  JumpActionName;                                    // 0x4AC(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1927[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UChaAT_WaitLandingSpot*                LandingTask;                                       // 0x4B8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1928[0x30];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UChaGA_WallRun* GetDefaultObj();

	void OnTakeDamage(class ASolarCharacter* Character, struct FSolarPointDamageEvent& DamageEvent, float HealtDamage);
	void OnSyncForceBlendOut();
	void OnServerConfirm();
	void OnRequestedToJump();
	void OnCancel();
	void OnAcceptWallRunJump();
};

// 0x40 (0x4A0 - 0x460)
// Class Solarland.ChaGA_WallRunJump
class UChaGA_WallRunJump : public USolarCharacterGameplayAbility
{
public:
	float                                        CameraRotLagSpeed;                                 // 0x460(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTag                          WithWeaponJumpMontageTag;                          // 0x464(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTag                          EmptyHandJumpMontageTag;                           // 0x46C(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTag                          WithWeaponFailedMontageTag;                        // 0x474(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTag                          EmptyHandFailedMontageTag;                         // 0x47C(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_192A[0x1C];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UChaGA_WallRunJump* GetDefaultObj();

	void OnMontageCompleted();
	void OnMontageBlendOut();
};

// 0x20 (0x480 - 0x460)
// Class Solarland.ChaGA_Zipline
class UChaGA_Zipline : public USolarCharacterGameplayAbility
{
public:
	class FName                                  CancelActionName;                                  // 0x460(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_192B[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UChaGA_Zipline* GetDefaultObj();

	void OnCancelled();
	void OnArrived();
};

// 0x18 (0x2B0 - 0x298)
// Class Solarland.ChaGC_CharacterActorCueBase
class AChaGC_CharacterActorCueBase : public AGameplayCueNotify_Actor
{
public:
	TArray<struct FCueContent>                   CueContents;                                       // 0x298(0x10)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1938[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AChaGC_CharacterActorCueBase* GetDefaultObj();

	bool WhileActiveInternal(class ASolarCharacter* Character, struct FGameplayCueParameters& Parameters);
	bool OnRemoveInternal(class ASolarCharacter* NullableCharacter, struct FGameplayCueParameters& Parameters);
	void OnLocalPlayerSpectateMeStatusChanged(class ASolarCharacter* Character, bool bIsSpectating);
	bool OnExecuteInternal(class ASolarCharacter* Character, struct FGameplayCueParameters& Parameters);
	bool OnActiveInternal(class ASolarCharacter* Character, struct FGameplayCueParameters& Parameters);
	bool ListenLocalPlayerSpectateMeStatus();
};

// 0x8 (0x2B8 - 0x2B0)
// Class Solarland.ChaGC_AerialReconnaissanc
class AChaGC_AerialReconnaissanc : public AChaGC_CharacterActorCueBase
{
public:
	float                                        TestDistance;                                      // 0x2B0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_193B[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AChaGC_AerialReconnaissanc* GetDefaultObj();

};

// 0x0 (0x298 - 0x298)
// Class Solarland.ChaGC_AirDrop
class AChaGC_AirDrop : public AGameplayCueNotify_Actor
{
public:

	static class UClass* StaticClass();
	static class AChaGC_AirDrop* GetDefaultObj();

};

// 0x10 (0x2C0 - 0x2B0)
// Class Solarland.ChaGC_HighAlert
class AChaGC_HighAlert : public AChaGC_CharacterActorCueBase
{
public:
	bool                                         bShowDebug;                                        // 0x2B0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_193C[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DebugTextDuration;                                 // 0x2B4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DebugDistance;                                     // 0x2B8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_193D[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AChaGC_HighAlert* GetDefaultObj();

};

// 0x0 (0x50 - 0x50)
// Class Solarland.ChaGC_JetSlowFalling
class UChaGC_JetSlowFalling : public UGameplayCueNotify_Static
{
public:

	static class UClass* StaticClass();
	static class UChaGC_JetSlowFalling* GetDefaultObj();

};

// 0x8 (0x2B8 - 0x2B0)
// Class Solarland.ChaGC_SuperSkillActorCueBase
class AChaGC_SuperSkillActorCueBase : public AChaGC_CharacterActorCueBase
{
public:
	struct FGameplayTag                          SuperSkillGameplayEffectTag;                       // 0x2B0(0x8)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class AChaGC_SuperSkillActorCueBase* GetDefaultObj();

};

// 0xB0 (0x368 - 0x2B8)
// Class Solarland.ChaGC_MassInvisibility
class AChaGC_MassInvisibility : public AChaGC_SuperSkillActorCueBase
{
public:
	TSubclassOf<class UMaterialEffectBase>       InvisibilityEffectClass;                           // 0x2B8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTag                          InvisibilityOrnamentTag;                           // 0x2C0(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  BeginInvisibleCueEvent;                            // 0x2C8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        SprintingStatusNotificationID;                     // 0x2D0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        SprintingStatusTipShowInterval;                    // 0x2D4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        WarningOtherRange;                                 // 0x2D8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        WarningOtherRangeOutThreshold;                     // 0x2DC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        PrepareWarningCueEventTriggerPoint;                // 0x2E0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  PrepareWarningCueEvent;                            // 0x2E4(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        TimeBeforeEndToStartEndWarning;                    // 0x2EC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  EndWarningMaterialParameterName;                   // 0x2F0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        EndWarningRate;                                    // 0x2F8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        EndWarningCueEventTriggerPoint;                    // 0x2FC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  EndWarningCueEvent;                                // 0x300(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UCameraShake>              CameraModifierClass;                               // 0x308(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTag                          SkillBuffGameplayEffectTag;                        // 0x310(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTag                          SkillPreGameplayEffectTag;                         // 0x318(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1940[0x48];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AChaGC_MassInvisibility* GetDefaultObj();

};

// 0x78 (0x310 - 0x298)
// Class Solarland.ChaGC_ParkourAcceleration
class AChaGC_ParkourAcceleration : public AGameplayCueNotify_Actor
{
public:
	class FName                                  FlushEffectID;                                     // 0x298(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  TrailEffectID;                                     // 0x2A0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<class FName, struct FVector2D>          TrailEmitterParameters;                            // 0x2A8(0x50)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTag                          DurationTag;                                       // 0x2F8(0x8)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1944[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AChaGC_ParkourAcceleration* GetDefaultObj();

};

// 0x18 (0x2C8 - 0x2B0)
// Class Solarland.ChaGC_SkydiveFly
class AChaGC_SkydiveFly : public AChaGC_CharacterActorCueBase
{
public:
	float                                        MinBoostDuration;                                  // 0x2B0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsBoost;                                          // 0x2B4(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1947[0x13];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AChaGC_SkydiveFly* GetDefaultObj();

	void ShowEncircleParticle(bool bIsLocalTeam, bool bIsDefender);
};

// 0x20 (0x2B8 - 0x298)
// Class Solarland.ChaGC_SkydiveSound
class AChaGC_SkydiveSound : public AGameplayCueNotify_Actor
{
public:
	TArray<class FName>                          StartSoundGroups;                                  // 0x298(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class FName>                          StopSoundGroups;                                   // 0x2A8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class AChaGC_SkydiveSound* GetDefaultObj();

};

// 0x38 (0x2D0 - 0x298)
// Class Solarland.ChaGC_SkywardDiveLaunch
class AChaGC_SkywardDiveLaunch : public AGameplayCueNotify_Actor
{
public:
	class UAnimMontage*                          CharacterSkywardMontage;                           // 0x298(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                       LaunchDeviceRealLaunchParticle;                    // 0x2A0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                       CharacterSkywardLaunchParticle;                    // 0x2A8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  CharacterLaunchParticleSocketName;                 // 0x2B0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  StartRealLaunchLoopSoundGroupName;                 // 0x2B8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  StopRealLaunchLoopSoundGroupName;                  // 0x2C0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystemComponent*              CacheSkywardExtraEffect;                           // 0x2C8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class AChaGC_SkywardDiveLaunch* GetDefaultObj();

};

// 0x58 (0x2F0 - 0x298)
// Class Solarland.ChaGC_SkywardDivePrepare
class AChaGC_SkywardDivePrepare : public AGameplayCueNotify_Actor
{
public:
	class UAnimMontage*                          CharacterPrepareMontage;                           // 0x298(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                       PrepareBeamParticle;                               // 0x2A0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                       PreparePackageParticle;                            // 0x2A8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class FName>                          PreparePackageSocketNames;                         // 0x2B0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  StartPrepareLaunchSoundGroupName;                  // 0x2C0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  StopPrepareLaunchSoundGroupName;                   // 0x2C8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystemComponent*              PrepareBeamEffect;                                 // 0x2D0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UParticleSystemComponent*>      PreparePackageEffect;                              // 0x2D8(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_194D[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AChaGC_SkywardDivePrepare* GetDefaultObj();

};

// 0x0 (0x2B0 - 0x2B0)
// Class Solarland.ChaGC_SwitchToDuckRollingMesh
class AChaGC_SwitchToDuckRollingMesh : public AChaGC_CharacterActorCueBase
{
public:

	static class UClass* StaticClass();
	static class AChaGC_SwitchToDuckRollingMesh* GetDefaultObj();

};

// 0x0 (0x50 - 0x50)
// Class Solarland.ChaGC_WallRun
class UChaGC_WallRun : public UGameplayCueNotify_Static
{
public:

	static class UClass* StaticClass();
	static class UChaGC_WallRun* GetDefaultObj();

};

// 0x300 (0x350 - 0x50)
// Class Solarland.CharacterBasalAttributeSet
class UCharacterBasalAttributeSet : public UBasalAttributeSet
{
public:
	struct FGameplayAttributeData                Speed;                                             // 0x50(0x10)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, Protected, NativeAccessSpecifierProtected)
	struct FGameplayAttributeData                BaseSpeed;                                         // 0x60(0x10)(BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FGameplayAttributeData                PassiveSkillSpeedMultiple;                         // 0x70(0x10)(BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FGameplayAttributeData                ShootingSpeedMultiple;                             // 0x80(0x10)(BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FGameplayAttributeData                CustomJumpHeightMultiple;                          // 0x90(0x10)(BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FGameplayAttributeData                AllSpeedParamA;                                    // 0xA0(0x10)(BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FGameplayAttributeData                AllSpeedParamB;                                    // 0xB0(0x10)(BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FGameplayAttributeData                AllSpeedParamC;                                    // 0xC0(0x10)(BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FGameplayAttributeData                AllSpeedParamD;                                    // 0xD0(0x10)(BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FGameplayAttributeData                GroundSpeedParamA;                                 // 0xE0(0x10)(BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FGameplayAttributeData                GroundSpeedParamB;                                 // 0xF0(0x10)(BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FGameplayAttributeData                GroundSpeedParamC;                                 // 0x100(0x10)(BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FGameplayAttributeData                GroundSpeedParamD;                                 // 0x110(0x10)(BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FGameplayAttributeData                SwimSpeedParamA;                                   // 0x120(0x10)(BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FGameplayAttributeData                SwimSpeedParamB;                                   // 0x130(0x10)(BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FGameplayAttributeData                SwimSpeedParamC;                                   // 0x140(0x10)(BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FGameplayAttributeData                SwimSpeedParamD;                                   // 0x150(0x10)(BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FGameplayAttributeData                MaxShield;                                         // 0x160(0x10)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, Protected, NativeAccessSpecifierProtected)
	struct FGameplayAttributeData                CurrentShield;                                     // 0x170(0x10)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, Protected, NativeAccessSpecifierProtected)
	struct FGameplayAttributeData                ShieldMultiRecoverCoeff;                           // 0x180(0x10)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, Protected, NativeAccessSpecifierProtected)
	struct FGameplayAttributeData                ShieldReductionDamageMultiple;                     // 0x190(0x10)(BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FGameplayAttributeData                RadialDamageReductionMultiple;                     // 0x1A0(0x10)(BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FGameplayAttributeData                AllDamageReductionMultiple;                        // 0x1B0(0x10)(BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FGameplayAttributeData                WeaponDamageParamA;                                // 0x1C0(0x10)(BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FGameplayAttributeData                WeaponDamageParamB;                                // 0x1D0(0x10)(BlueprintVisible, BlueprintReadOnly, Net, Protected, NativeAccessSpecifierProtected)
	struct FGameplayAttributeData                WeaponDamageParamC;                                // 0x1E0(0x10)(BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FGameplayAttributeData                WeaponDamageParamD;                                // 0x1F0(0x10)(BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FGameplayAttributeData                UnarmedWeaponDamageParamB;                         // 0x200(0x10)(BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FGameplayAttributeData                VehicleWeaponDamageParamB;                         // 0x210(0x10)(BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FGameplayAttributeData                VehicleHitDamageParamB;                            // 0x220(0x10)(BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FGameplayAttributeData                VehicleAbilityDamageParamB;                        // 0x230(0x10)(BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FGameplayAttributeData                CharacterSkillDamageParamB;                        // 0x240(0x10)(BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FGameplayAttributeData                VerticalJetTimesCD;                                // 0x250(0x10)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, Protected, NativeAccessSpecifierProtected)
	struct FGameplayAttributeData                VerticalJetInnerCD;                                // 0x260(0x10)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, Protected, NativeAccessSpecifierProtected)
	struct FGameplayAttributeData                VerticalJetTimes;                                  // 0x270(0x10)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, Protected, NativeAccessSpecifierProtected)
	struct FGameplayAttributeData                VerticalJetRestTimes;                              // 0x280(0x10)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, Protected, NativeAccessSpecifierProtected)
	struct FGameplayAttributeData                HorizontalJetTimesCD;                              // 0x290(0x10)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, Protected, NativeAccessSpecifierProtected)
	struct FGameplayAttributeData                HorizontalJetInnerCD;                              // 0x2A0(0x10)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, Protected, NativeAccessSpecifierProtected)
	struct FGameplayAttributeData                HorizontalJetTimes;                                // 0x2B0(0x10)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, Protected, NativeAccessSpecifierProtected)
	struct FGameplayAttributeData                HorizontalJetRestTimes;                            // 0x2C0(0x10)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, Protected, NativeAccessSpecifierProtected)
	struct FGameplayAttributeData                RescueRecoveredMultiple;                           // 0x2D0(0x10)(BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FGameplayAttributeData                TreatmentDurationReductionMultiple;                // 0x2E0(0x10)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, Protected, NativeAccessSpecifierProtected)
	struct FGameplayAttributeData                ShieldRecoveredMultiple;                           // 0x2F0(0x10)(BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FGameplayAttributeData                ChargingMultiple;                                  // 0x300(0x10)(BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FGameplayAttributeData                AutoHealingRateOnMotorbike;                        // 0x310(0x10)(BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FGameplayAttributeData                RescueDurationReductionMultiple;                   // 0x320(0x10)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, Protected, NativeAccessSpecifierProtected)
	struct FGameplayAttributeData                ReviveDurationReductionBonus;                      // 0x330(0x10)(BlueprintVisible, BlueprintReadOnly, Net, Protected, NativeAccessSpecifierProtected)
	struct FGameplayAttributeData                QuickReloadOverrideTime;                           // 0x340(0x10)(BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UCharacterBasalAttributeSet* GetDefaultObj();

	void OnRep_VerticalJetTimesCD(struct FGameplayAttributeData& Previous);
	void OnRep_VerticalJetTimes(struct FGameplayAttributeData& Previous);
	void OnRep_VerticalJetRestTimes(struct FGameplayAttributeData& Previous);
	void OnRep_VerticalJetInnerCD(struct FGameplayAttributeData& Previous);
	void OnRep_TreatmentDurationReductionMultiple(struct FGameplayAttributeData& OldValue);
	void OnRep_Speed(struct FGameplayAttributeData& OldValue);
	void OnRep_ShieldMultiRecoverCoeff(struct FGameplayAttributeData& OldValue);
	void OnRep_RescueDurationReductionMultiple(struct FGameplayAttributeData& OldValue);
	void OnRep_MaxShield(struct FGameplayAttributeData& OldValue);
	void OnRep_HorizontalJetTimesCD(struct FGameplayAttributeData& Previous);
	void OnRep_HorizontalJetTimes(struct FGameplayAttributeData& Previous);
	void OnRep_HorizontalJetRestTimes(struct FGameplayAttributeData& Previous);
	void OnRep_HorizontalJetInnerCD(struct FGameplayAttributeData& Previous);
	void OnRep_CurrentShield(struct FGameplayAttributeData& OldValue);
};

// 0x178 (0x1A8 - 0x30)
// Class Solarland.CharacterBodyScaleConfigDataAsset
class UCharacterBodyScaleConfigDataAsset : public UDataAsset
{
public:
	TMap<enum class ECharacterBodyScaleType, struct FCharacterBodyScaleConfig> ConfigMap;                                         // 0x30(0x50)(Edit, NativeAccessSpecifierPublic)
	struct FCharacterAssistAimTargetConfig       DefaultAssistAimTargetConfig;                      // 0x80(0xD8)(Edit, NativeAccessSpecifierPublic)
	TMap<enum class ECharacterBodyScaleType, struct FCharacterAssistAimTargetConfig> AssistAimTargetConfigMap;                          // 0x158(0x50)(Edit, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UCharacterBodyScaleConfigDataAsset* GetDefaultObj();

};

// 0x0 (0x30 - 0x30)
// Class Solarland.CharacterConfigAsset
class UCharacterConfigAsset : public UDataAsset
{
public:

	static class UClass* StaticClass();
	static class UCharacterConfigAsset* GetDefaultObj();

};

// 0x58 (0x108 - 0xB0)
// Class Solarland.CharacterCruiseComponent
class UCharacterCruiseComponent : public UActorComponent
{
public:
	class ASolarCapsuleActor*                    BoardedCapsulePrivate;                             // 0xB0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1959[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  CruiseStartSoundGroupName;                         // 0xC4(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_195A[0x3C];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UCharacterCruiseComponent* GetDefaultObj();

	class ASolarCharacter* GetCharacterOwner();
};

// 0x620 (0x650 - 0x30)
// Class Solarland.CharacterGameplayTagsConfig
class UCharacterGameplayTagsConfig : public UDataAsset
{
public:
	struct FGameplayTag                          CruiseAbilityTag;                                  // 0x30(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          SkydiveFlyAbilityTag;                              // 0x38(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          SkydiveLandAbilityTag;                             // 0x40(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          CrouchAbilityTag;                                  // 0x48(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          JumpAbilityTag;                                    // 0x50(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          SprintAbilityTag;                                  // 0x58(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          SwimAbilityTag;                                    // 0x60(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          VaultAbilityTag;                                   // 0x68(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          JetFlyAbilityTag;                                  // 0x70(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          JetFlyVertAbilityTag;                              // 0x78(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          JetFlyHoriAbilityTag;                              // 0x80(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          LaunchAbilityTag;                                  // 0x88(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          JetSlowFallingAbilityTag;                          // 0x90(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          EquipAbilityTag;                                   // 0x98(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          MeleeAbilityTag;                                   // 0xA0(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          FireAbilityTag;                                    // 0xA8(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          ReloadAbilityTag;                                  // 0xB0(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          VehicleFireAbilityTag;                             // 0xB8(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          VehicleReloadAbilityTag;                           // 0xC0(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          BoltAbilityTag;                                    // 0xC8(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          OpenScopeAbilityTag;                               // 0xD0(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          WeaponAbilityTag;                                  // 0xD8(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          GetOnVehicleAbilityTag;                            // 0xE0(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          GetOffVehicleAbilityTag;                           // 0xE8(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          SwitchVehicleSeatAbilityTag;                       // 0xF0(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          StickOutOffVehicleAbilityTag;                      // 0xF8(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          TreatAbilityTag;                                   // 0x100(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          RechargeShieldAbilityTag;                          // 0x108(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          BigRechargeShieldAbilityTag;                       // 0x110(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          UpgradeShieldAbilityTag;                           // 0x118(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          OpenTreasureBoxAbilityTag;                         // 0x120(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          OpenNewTreasureBoxAbilityTag;                      // 0x128(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          RepairVehicleAbilityTag;                           // 0x130(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          RescueAbilityTag;                                  // 0x138(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          PickUpAbilityTag;                                  // 0x140(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          AutoPickUpAbilityTag;                              // 0x148(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          ResurrectTeammateAbilityTag;                       // 0x150(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          DeathVergeAbilityTag;                              // 0x158(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          DeathAbilityTag;                                   // 0x160(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          RebirthAbilityTag;                                 // 0x168(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          ParkourMasterEffectTag;                            // 0x170(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          HawkEyeEffectTag;                                  // 0x178(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          MassInvisibilityEffectTag;                         // 0x180(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          MassInvisibilityExEffectTag;                       // 0x188(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          RapidBoostEffectTag;                               // 0x190(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          MainContinousTag;                                  // 0x198(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          SubContinousTag;                                   // 0x1A0(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          HasPreBuffTag;                                     // 0x1A8(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          DurationPauseTag;                                  // 0x1B0(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          SuperSkillEffectTag;                               // 0x1B8(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          TacticleSkillEffectTag;                            // 0x1C0(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          SkydiveSoundTag;                                   // 0x1C8(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          WallRunCueTag;                                     // 0x1D0(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          CruisingStatusTag;                                 // 0x1D8(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          WalkingStatusTag;                                  // 0x1E0(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          FallingStatusTag;                                  // 0x1E8(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          FlyingStatusTag;                                   // 0x1F0(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          SwimmingStatusTag;                                 // 0x1F8(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          SkydivingStatusTag;                                // 0x200(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          VaultingStatusTag;                                 // 0x208(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          VaultingAcceptCancelTag;                           // 0x210(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          VaultingAcceptWeaponInputTag;                      // 0x218(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          WallRunStatusTag;                                  // 0x220(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          WallRunAttemptVaultTag;                            // 0x228(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          LaunchStatusTag;                                   // 0x230(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          RunningStatusTag;                                  // 0x238(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          SprintingStatusTag;                                // 0x240(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          StationaryStatusTag;                               // 0x248(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          FollowViewRotationStatusTag;                       // 0x250(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          RotationFollowVelocityStatusTag;                   // 0x258(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          CollisionIgnorePawnChannelStatusTag;               // 0x260(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          WeaponStatusTag;                                   // 0x268(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          MeleeAttackingStatusTag;                           // 0x270(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          FullBodyMeleeStatusTag;                            // 0x278(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          FiringStatusTag;                                   // 0x280(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          VehicleFiringStatusTag;                            // 0x288(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          HiddenFireStatusTag;                               // 0x290(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          BoltingStatusTag;                                  // 0x298(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          ReloadingStatusTag;                                // 0x2A0(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          ScopeOpeningStatusTag;                             // 0x2A8(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          EnteringScopeOpeningStatusTag;                     // 0x2B0(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          QuickReloadStatusTag;                              // 0x2B8(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          FunctionalityStatusTag;                            // 0x2C0(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          OpeningTreasureBoxStatusTag;                       // 0x2C8(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          RechargingShieldStatusTag;                         // 0x2D0(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          RescuingStatusTag;                                 // 0x2D8(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          TreatingStatusTag;                                 // 0x2E0(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          ReviveTeammateStatusTag;                           // 0x2E8(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          InVehicleTag;                                      // 0x2F0(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          DanceStatusTag;                                    // 0x2F8(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          DanceLeaderStatusTag;                              // 0x300(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          UsingContinuousSkill;                              // 0x308(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          HoldingSkill;                                      // 0x310(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          AutoCancelOnInputReleased;                         // 0x318(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          MassInvisibilityStatusTag;                         // 0x320(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          MassInvisibilityPrepareStatusTag;                  // 0x328(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          SuperRadarChooseStatusTag;                         // 0x330(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          RadarScanningStatusTag;                            // 0x338(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          EMPStatusTag;                                      // 0x340(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          FreezeStatusTag;                                   // 0x348(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          PerspectiveByRadarStatusTag;                       // 0x350(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          InhibitDebuffStatusTag;                            // 0x358(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          CanScoutEnemyTag;                                  // 0x360(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          DuckRollingStatusTag;                              // 0x368(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          DeathVergeStatusTag;                               // 0x370(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          DeathStatusTag;                                    // 0x378(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          InvincibleStatusTag;                               // 0x380(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          InhibitOpenScopeStatusTag;                         // 0x388(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          InhibitWeaponInputStatusTag;                       // 0x390(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          InhibitWeaponFireInputStatusTag;                   // 0x398(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          InhibitMoveStatusTag;                              // 0x3A0(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          InhibitMoveCombinationStatusTag;                   // 0x3A8(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          InhibitUnCrouchStatusTag;                          // 0x3B0(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          InhibitSprintStatusTag;                            // 0x3B8(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          InhibitAimOffsetStatusTag;                         // 0x3C0(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          InhibitLeftHandWeaponAttachTag;                    // 0x3C8(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          InhibitLeftHandWeaponAttachAnimNotifyTag;          // 0x3D0(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          InhibitInteractionOption;                          // 0x3D8(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          InhibitContinuousTreatStatusTag;                   // 0x3E0(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          InhibitFireStatusTag;                              // 0x3E8(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          InhibitDamageReactionTag;                          // 0x3F0(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          InhibitJetSlowFallingTag;                          // 0x3F8(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          InhibitBlackHoleEffectStatusTag;                   // 0x400(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          VJetChargingStatusTag;                             // 0x408(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          HJetChargingStatusTag;                             // 0x410(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          GenericTalentActivationStatusTag;                  // 0x418(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          TrackingMasterStatusTag;                           // 0x420(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          ShieldMultiRecoverTag;                             // 0x428(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          ShieldMultiRecoverOnGoingTag;                      // 0x430(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          AerialReconnaissanceTagTag;                        // 0x438(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          OpenAirDropTag;                                    // 0x440(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          ResurrectTeammateTag;                              // 0x448(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          ReviveTeammateTag;                                 // 0x450(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          ReviveSelfTag;                                     // 0x458(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          HasRotationInputStatusTag;                         // 0x460(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          InSmokeStatusTag;                                  // 0x468(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          InBattleTag;                                       // 0x470(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          StartCruiseEventTag;                               // 0x478(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          IntoParachuteZoneEventTag;                         // 0x480(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          ForceParachuteEventTag;                            // 0x488(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          FinishCruiseEventTag;                              // 0x490(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          CrouchEventTag;                                    // 0x498(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          LaunchEventTag;                                    // 0x4A0(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          VaultEventTag;                                     // 0x4A8(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          StepEventTag;                                      // 0x4B0(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          WallRunEventTag;                                   // 0x4B8(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          WallRunJumpEventTag;                               // 0x4C0(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          HitRecoverEventTag;                                // 0x4C8(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          MeleeAttackEventTag;                               // 0x4D0(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          FireEventTag;                                      // 0x4D8(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          BoltEventTag;                                      // 0x4E0(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          EquipEventTag;                                     // 0x4E8(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          SwapEventTag;                                      // 0x4F0(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          ReloadEventTag;                                    // 0x4F8(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          VehicleReloadEventTag;                             // 0x500(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          VehicleFireEventTag;                               // 0x508(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          PickUpEventTag;                                    // 0x510(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          AutoPickUpEventTag;                                // 0x518(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          RepairVehicleEventTag;                             // 0x520(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          DanceEventTag;                                     // 0x528(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          SpawnRadarEventTag;                                // 0x530(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          DyingEventTag;                                     // 0x538(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          KillOrAssistEventTag;                              // 0x540(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          GottenOnVehicleEventTag;                           // 0x548(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          GottenOffVehicleEventTag;                          // 0x550(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          VehicleForJetEventTag;                             // 0x558(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          SideLeavingEventTag;                               // 0x560(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          SideJoiningEventTag;                               // 0x568(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          SuperSkillForbiddenEventTag;                       // 0x570(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          SuperSkillBlockEventTag;                           // 0x578(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          SuperSkillForbidUIStatusTag;                       // 0x580(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          SuperSkillBlockStatusTag;                          // 0x588(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          SuperSkillCDReducedStatusTag;                      // 0x590(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          TacticalForbiddenEventTag;                         // 0x598(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          TacticalBlockEventTag;                             // 0x5A0(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          TacticalForbidUIStatusTag;                         // 0x5A8(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          TacticalSkillCDReducedStatusTag;                   // 0x5B0(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          TacticalSkillBlockStatusTag;                       // 0x5B8(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          BigWaterGunActivatingTag;                          // 0x5C0(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          AirDropTag;                                        // 0x5C8(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          NightComesBuff;                                    // 0x5D0(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          NightComesActorContinous;                          // 0x5D8(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          SkywardDiveTag;                                    // 0x5E0(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          SuperRadarScanTag;                                 // 0x5E8(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          RadarScanningTag;                                  // 0x5F0(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          BlackHoleStatusTag;                                // 0x5F8(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          RoleAbilityRootTag;                                // 0x600(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          RoleAbilityRootTypeTag;                            // 0x608(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          SkillTypeTag;                                      // 0x610(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          SummonTypeTag;                                     // 0x618(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          ProjectileTypeTag;                                 // 0x620(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          SummonedJumpPadLaunchCooldownTag;                  // 0x628(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          ShieldMultiRecoverCoolDownTag;                     // 0x630(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          GenericTalentCooldownTag;                          // 0x638(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          VJetCooldownTag;                                   // 0x640(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          HJetCooldownTag;                                   // 0x648(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UCharacterGameplayTagsConfig* GetDefaultObj();

};

// 0x28 (0x58 - 0x30)
// Class Solarland.MaterialChangePriorityTags
class UMaterialChangePriorityTags : public UDataAsset
{
public:
	struct FGameplayTag                          Default;                                           // 0x30(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          Radar;                                             // 0x38(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          Stealth;                                           // 0x40(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          WholeShield;                                       // 0x48(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          ThermalImaging;                                    // 0x50(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UMaterialChangePriorityTags* GetDefaultObj();

};

// 0x40 (0x70 - 0x30)
// Class Solarland.VisibilityFlagTags
class UVisibilityFlagTags : public UDataAsset
{
public:
	struct FGameplayTag                          Default;                                           // 0x30(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          Cruise;                                            // 0x38(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          Stealth;                                           // 0x40(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          CameraOverlap;                                     // 0x48(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          DissolvedDeath;                                    // 0x50(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          WholeShield;                                       // 0x58(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          MassInvisibility;                                  // 0x60(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          MassInvisibilityWarning;                           // 0x68(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UVisibilityFlagTags* GetDefaultObj();

};

// 0x20 (0x50 - 0x30)
// Class Solarland.CharacterMontageTags
class UCharacterMontageTags : public UDataAsset
{
public:
	struct FGameplayTag                          TeamRescueMontageTag;                              // 0x30(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          RechargeShieldTag;                                 // 0x38(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          UpgradeShieldTag;                                  // 0x40(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          LeadingDanceTag;                                   // 0x48(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UCharacterMontageTags* GetDefaultObj();

};

// 0xA80 (0xAB0 - 0x30)
// Class Solarland.CharacterGlobalConfig
class UCharacterGlobalConfig : public UDataAsset
{
public:
	TMap<int32, struct FCharacterSpecializedComponentInfos> CharacterSpecializedComponentInfos;                // 0x30(0x50)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FName                                  HeadBoneName;                                      // 0x80(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayCueTag                       TeamPerspectiveCueTag_LocalPlayer;                 // 0x88(0x8)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FGameplayCueTag                       TeamPerspectiveCueTag_Teammate;                    // 0x90(0x8)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FGameplayTagRequirements              TeamPerspectiveTagRequirements_Teammate;           // 0x98(0x50)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGameplayCueTag                       OpponentPerspectiveCueTag;                         // 0xE8(0x8)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	float                                        OpponentPerspectiveMinDistance;                    // 0xF0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OpponentPerspectiveMaxDistance;                    // 0xF4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagRequirements              OpponentPerspectiveLocalPlayerTagRequirements;     // 0xF8(0x50)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FGameplayTagRequirements              OpponentPerspectiveOpponentTagRequirements;        // 0x148(0x50)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                        OpponentPerspectiveDisableDelay;                   // 0x198(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_195F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FInjectorMeshPreset                   RescueInjectorPreset;                              // 0x1A0(0x50)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	int32                                        FastReliefPassiveTextID;                           // 0x1F0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RescueTextID;                                      // 0x1F4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UCameraShake>              HitCameraShake;                                    // 0x1F8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CameraShakeCD;                                     // 0x200(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1960[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UMaterialParameterCollection*          CameraFOVParameterCollection;                      // 0x208(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                        ChargingDoneSoundCD;                               // 0x210(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UGameplayEffect>           ExtraVJetTimesEffect;                              // 0x218(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UGameplayEffect>           VJetChargeScaleEffect;                             // 0x220(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UGameplayEffect>           ExtraHJetTimesEffect;                              // 0x228(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UGameplayEffect>           HJetChargeScaleEffect;                             // 0x230(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          ExtraJetTimesSetterTag;                            // 0x238(0x8)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          JetChargeScaleSetterTag;                           // 0x240(0x8)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        DeathBoxId;                                        // 0x248(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TurnSpeed;                                         // 0x24C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TurnChangeSpeedThreshold;                          // 0x250(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TurnAngleThreshold;                                // 0x254(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SprintTolerantAngle;                               // 0x258(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SkydiveFollowingTeleportTriggerDistance;           // 0x25C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SkydiveFollowingTeleportDistance;                  // 0x260(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        JetLandingTriggerMinVelocity;                      // 0x264(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        JetLandingHeightThreshold;                         // 0x268(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        JetLandingVelocity;                                // 0x26C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxSpeedParamB;                                    // 0x270(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinSpeedParamD;                                    // 0x274(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                    NetworkMaxSmoothUpdateDistanceBySpeedCurve;        // 0x278(0x88)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                    NetworkNoSmoothUpdateDistanceBySpeedCurve;         // 0x300(0x88)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                    NetworkSimulatedSmoothLocationTimeBySpeedCurve;    // 0x388(0x88)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UCruiseAssetSet*                       CruiseAssetSet;                                    // 0x410(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                AirborneStartSound;                                // 0x418(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                AirborneJumpSound;                                 // 0x428(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FSkydivingEffectPreset>        SkydivingEffectClassList;                          // 0x438(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LowerLimitOfSpeedForSkydivingSoundEffect;          // 0x448(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinPitchToPlaySkydivingLandingEffect;              // 0x44C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  StartSkydiveLoopSoundGroup_Speed;                  // 0x450(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  StopSkydiveLoopSoundGroup_Speed;                   // 0x458(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  StopSkydiveLoopSoundGroup_Height;                  // 0x460(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VaultDegree;                                       // 0x468(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VaultHalfHeight;                                   // 0x46C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  DetectorProfile;                                   // 0x470(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        KneeWaterInfluencesCharacterSpeed;                 // 0x478(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WaterDraftDepthWhenDeathVerge;                     // 0x47C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ShoalWaterMaxDepth;                                // 0x480(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HeavyJumpWaterMinAxisVelocity;                     // 0x484(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FWaterEffectPreset                    SwimmingWaterEffectPreset;                         // 0x488(0x50)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FWaterEffectPreset                    HeavyJumpWaterEffectPreset;                        // 0x4D8(0x50)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FWaterEffectPreset>            SoftJumpWaterEffectPresets;                        // 0x528(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayCueTag                       InWaterLocalGameplayCueTag;                        // 0x538(0x8)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	class FName                                  PickupCollisionProfileName;                        // 0x540(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PoisonRecommendToleranceTimes;                     // 0x548(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1963[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTreasureBoxOperatorMeshPreset        TreasureBoxOperatorMeshPreset;                     // 0x550(0x50)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	int32                                        AirDropSkillTextID;                                // 0x5A0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1964[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                TreatFX;                                           // 0x5A8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TreatmentTextID;                                   // 0x5B8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinHealthRatioToShowMedicineFX;                    // 0x5BC(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UParticleSystem>        RevivePickupFX;                                    // 0x5C0(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UParticleSystem>        ReviveClearFX;                                     // 0x5E8(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ResurrectTextID;                                   // 0x610(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ResurrectTime;                                     // 0x614(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class UParticleSystem>> ShieldUpgradeBodyLoopFXTemplate;                   // 0x618(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class UParticleSystem>> ShieldUpgradeBodyEndFXTemplate;                    // 0x628(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1965[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FOperatorMeshPreset                   ShieldOperatorPreset;                              // 0x640(0x120)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UCurveFloat*                           ShieldOperatorExpandCurve;                         // 0x760(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                           ShieldOperatorNarrowCurve;                         // 0x768(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EffectAttachBone;                                  // 0x770(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                ShieldRechargeEffect;                              // 0x778(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                ShieldBrokenEffect;                                // 0x788(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HitEffectOffset;                                   // 0x798(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ShieldRechargeTextID;                              // 0x79C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ShieldRechargePassiveTextID;                       // 0x7A0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ShieldReduceScreenEffectID;                        // 0x7A4(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ShieldBrokenScreenEffectID;                        // 0x7AC(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1967[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USkeletalMeshComponentConfig*          FirstPersonMeshConfig;                             // 0x7B8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BaseGunCollisionTraceDis;                          // 0x7C0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1968[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<enum class ECharacterBodyScaleType, float> GunCollisionTraceStartHighIdle;                    // 0x7C8(0x50)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TMap<enum class ECharacterBodyScaleType, float> GunCollisionTraceStartHighCrouch;                  // 0x818(0x50)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                        MinDistanceGun2Wall;                               // 0x868(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GunCollisionXYAdjustDownSide;                      // 0x86C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GunCollisionCheckZLimit;                           // 0x870(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1969[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UWeaponSystemPlayer>       WeaponSystemPlayerClass;                           // 0x878(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UWeaponSystemPlayerAI>     WeaponSystemAIClass;                               // 0x880(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UMapMarkBase>              TrackingMarkWidgetClass;                           // 0x888(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               WeaponAimStartOffset;                              // 0x890(0xC)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_196A[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTagContainer                 AbilitiesToCancelOnPressingWeaponAction;           // 0x8A0(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                        DefaultHitTraceLifetime;                           // 0x8C0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_196B[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UCurveFloat*                           DefaultHitTraceWidgetScaleCurve;                   // 0x8C8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SniperHitTraceLifetime;                            // 0x8D0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_196C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UCurveFloat*                           SniperHitTraceWidgetScaleCurve;                    // 0x8D8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MeleeHitTraceLifetime;                             // 0x8E0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehicleHitTraceLifetime;                           // 0x8E4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                           VehicleHitTraceWidgetScaleCurve;                   // 0x8E8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVehicleRepairToolMeshPreset          VehicleRepairToolMeshPreset;                       // 0x8F0(0x50)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	int32                                        RepairWeakPointTextID;                             // 0x940(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_196D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UActorEffect>              VehicleStealthEffectClass;                         // 0x948(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTeammateHUDPreset                    TeammateHUDPreset;                                 // 0x950(0x20)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	float                                        HUDZNomral;                                        // 0x970(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HUDZSwim;                                          // 0x974(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HUDZCrouch;                                        // 0x978(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HUDZCrawl;                                         // 0x97C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HUDChangeTime;                                     // 0x980(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HUDChangeSpeed;                                    // 0x984(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CheckHUDDistanceToCenter;                          // 0x988(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HUDTranslucentValue;                               // 0x98C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class USolarTeammateHUDWidgetComponent> HUDComponentClass;                                 // 0x990(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class URadarScanSoundDataAsset*              RadarScanSoundDataAsset;                           // 0x998(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  RadarScannedEffectID;                              // 0x9A0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayCueTag                       RadarDetectedEffectCueTag;                         // 0x9A8(0x8)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FGameplayCueTag                       RadarDetectedInSmokeEffectCueTag;                  // 0x9B0(0x8)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	TSubclassOf<class UStaticMeshComponent>      MassInvisibilityWarningIconClass;                  // 0x9B8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>             CharacterMassInvisibilityWarningIcon;              // 0x9C0(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UTexture2D>             VehicleMassInvisibilityWarningIcon;                // 0x9E8(0x28)(Edit, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               MassInvWarningIconScale;                           // 0xA10(0xC)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               MassInvWarningIconOffsetDefault;                   // 0xA1C(0xC)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               MassInvWarningIconOffsetCrouch;                    // 0xA28(0xC)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               MassInvWarningIconOffsetCrawl;                     // 0xA34(0xC)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MassInvWarningIconOffsetSmoothSpeed;               // 0xA40(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MassInvWarningIconOffsetForceNoSmoothDistance;     // 0xA44(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UScoutEnemyConfig*                     ScoutEnemyConfig;                                  // 0xA48(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableEMPBlockChargeNotice;                       // 0xA50(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1970[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGyroscopeConfig*                      GyroscopeConfig;                                   // 0xA58(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CheckInRoomInterval;                               // 0xA60(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DamageLimitTime;                                   // 0xA64(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DamagingDuration;                                  // 0xA68(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  DissolvedDeathFXBindingSocketName;                 // 0xA6C(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1971[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<TSubclassOf<class UActorEffect>>      PersistentActorEffectClasses;                      // 0xA78(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  HealthReduceScreenEffectID;                        // 0xA88(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  HealthLowScreenEffectID;                           // 0xA90(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HealthLowTipThreshold;                             // 0xA98(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1972[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UGameplayEffect>           EnterBattleEffect;                                 // 0xAA0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UGameplayEffect>           EnterCombatEffect;                                 // 0xAA8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UCharacterGlobalConfig* GetDefaultObj();

};

// 0x30 (0x60 - 0x30)
// Class Solarland.CharacterMVPConfig
class UCharacterMVPConfig : public UDataAsset
{
public:
	struct FSoftObjectPath                       AnimPath;                                          // 0x30(0x18)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                       LevelPath;                                         // 0x48(0x18)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UCharacterMVPConfig* GetDefaultObj();

};

// 0xC0 (0xF0 - 0x30)
// Class Solarland.CharacterSkillAttributeSet
class UCharacterSkillAttributeSet : public USolarAttributeSet
{
public:
	struct FGameplayAttributeData                TacticalSkillCD;                                   // 0x30(0x10)(BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FGameplayAttributeData                TacticalSkillCDBase;                               // 0x40(0x10)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, Protected, NativeAccessSpecifierProtected)
	struct FGameplayAttributeData                TacticalSkillCDParamA;                             // 0x50(0x10)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, Protected, NativeAccessSpecifierProtected)
	struct FGameplayAttributeData                TacticalSkillCDParamB;                             // 0x60(0x10)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, Protected, NativeAccessSpecifierProtected)
	struct FGameplayAttributeData                TacticalSkillCDFixedValue;                         // 0x70(0x10)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, Protected, NativeAccessSpecifierProtected)
	struct FGameplayAttributeData                SuperSkillCD;                                      // 0x80(0x10)(BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FGameplayAttributeData                SuperSkillCDBase;                                  // 0x90(0x10)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, Protected, NativeAccessSpecifierProtected)
	struct FGameplayAttributeData                SuperSkillCDParamA;                                // 0xA0(0x10)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, Protected, NativeAccessSpecifierProtected)
	struct FGameplayAttributeData                SuperSkillCDParamB;                                // 0xB0(0x10)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, Protected, NativeAccessSpecifierProtected)
	struct FGameplayAttributeData                SuperSkillCDFixedValue;                            // 0xC0(0x10)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, Protected, NativeAccessSpecifierProtected)
	struct FGameplayAttributeData                ScoutEnemyTimeRequired;                            // 0xD0(0x10)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, Protected, NativeAccessSpecifierProtected)
	struct FGameplayAttributeData                ScoutEnemyDuration;                                // 0xE0(0x10)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UCharacterSkillAttributeSet* GetDefaultObj();

	void OnRep_TacticalSkillCDParamB(struct FGameplayAttributeData& OldValue);
	void OnRep_TacticalSkillCDParamA(struct FGameplayAttributeData& OldValue);
	void OnRep_TacticalSkillCDFixedValue(struct FGameplayAttributeData& OldValue);
	void OnRep_TacticalSkillCDBase(struct FGameplayAttributeData& OldValue);
	void OnRep_SuperSkillCDParamB(struct FGameplayAttributeData& OldValue);
	void OnRep_SuperSkillCDParamA(struct FGameplayAttributeData& OldValue);
	void OnRep_SuperSkillCDFixedValue(struct FGameplayAttributeData& OldValue);
	void OnRep_SuperSkillCDBase(struct FGameplayAttributeData& OldValue);
	void OnRep_ScoutEnemyTimeRequired(struct FGameplayAttributeData& OldValue);
	void OnRep_ScoutEnemyDuration(struct FGameplayAttributeData& OldValue);
};

// 0x198 (0x1C8 - 0x30)
// Class Solarland.CharacterSkinConfig
class UCharacterSkinConfig : public UDataAsset
{
public:
	struct FSoftObjectPath                       SkinIcon;                                          // 0x30(0x18)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FSoftObjectPath                       DefaultIcon;                                       // 0x48(0x18)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FSoftObjectPath                       SkinRes;                                           // 0x60(0x18)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FSoftObjectPath                       CharaSkinRes;                                      // 0x78(0x18)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FSoftObjectPath                       ShieldRes;                                         // 0x90(0x18)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FSoftObjectPath                       InvincibleMAT;                                     // 0xA8(0x18)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FSoftClassPath                        AnimBPRes;                                         // 0xC0(0x18)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<struct FGameplayTag, struct FStaticMeshOrnamentConfig> StaticMeshOrnamentsConfig;                         // 0xD8(0x50)(Edit, Protected, NativeAccessSpecifierProtected)
	TMap<struct FGameplayTag, struct FSkeletalMeshOrnamentConfig> SkeletalMeshOrnamentsConfig;                       // 0x128(0x50)(Edit, Protected, NativeAccessSpecifierProtected)
	TMap<struct FGameplayTag, struct FChildActorOrnamentConfig> ChildActorOrnamentsConfig;                         // 0x178(0x50)(Edit, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UCharacterSkinConfig* GetDefaultObj();

	TMap<struct FGameplayTag, struct FStaticMeshOrnamentConfig> GetStaticMeshOrnamentsConfig();
	struct FSoftObjectPath GetSkinRes();
	struct FSoftObjectPath GetSkinIcon();
	TMap<struct FGameplayTag, struct FSkeletalMeshOrnamentConfig> GetSkeletalMeshOrnamentsConfig();
	struct FSoftObjectPath GetInvincibleMAT();
	TMap<struct FGameplayTag, struct FChildActorOrnamentConfig> GetChildActorOrnamentsConfig();
	struct FSoftObjectPath GetCharaSkinRes();
	struct FSoftObjectPath GetAnimBPRes();
};

// 0x0 (0x28 - 0x28)
// Class Solarland.SoundGroupBase
class USoundGroupBase : public UObject
{
public:

	static class UClass* StaticClass();
	static class USoundGroupBase* GetDefaultObj();

};

// 0x10 (0x38 - 0x28)
// Class Solarland.SoundGroupSimple
class USoundGroupSimple : public USoundGroupBase
{
public:
	class FString                                SoundEvent;                                        // 0x28(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class USoundGroupSimple* GetDefaultObj();

};

// 0x30 (0x58 - 0x28)
// Class Solarland.SoundGroupByTeammate
class USoundGroupByTeammate : public USoundGroupBase
{
public:
	class FString                                SelfEvent;                                         // 0x28(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                TeammateEvent;                                     // 0x38(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                OtherEvent;                                        // 0x48(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class USoundGroupByTeammate* GetDefaultObj();

};

// 0x30 (0x58 - 0x28)
// Class Solarland.SoundGroupByBattle
class USoundGroupByBattle : public USoundGroupBase
{
public:
	class FString                                IAttackOtherEvent;                                 // 0x28(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                OtherAttackMeEvent;                                // 0x38(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                OtherEvent;                                        // 0x48(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class USoundGroupByBattle* GetDefaultObj();

};

// 0x120 (0x150 - 0x30)
// Class Solarland.CharacterSoundConfig
class UCharacterSoundConfig : public UDataAsset
{
public:
	TMap<enum class ECharacterSoundOpt, class FString> SoundEventTable;                                   // 0x30(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, NativeAccessSpecifierPublic)
	TMap<class FName, class USoundGroupBase*>    SoundGroupTable;                                   // 0x80(0x50)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TMap<enum class EPhysicalSurface, class FName> SurfaceTypeToHitByBulletSoundGroup;                // 0xD0(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FTransform                            DefaultTransform;                                  // 0x120(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UCharacterSoundConfig* GetDefaultObj();

};

// 0x60 (0x1C0 - 0x160)
// Class Solarland.CheckBoxGroup
class UCheckBoxGroup : public UNamedSlot
{
public:
	FMulticastInlineDelegateProperty_            OnStateChangedEvent;                               // 0x160(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnStateChangedEventEx;                             // 0x170(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UCheckBox*                             RevertToCachedChild;                               // 0x180(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCheckBox*                             LastCheckedChild;                                  // 0x188(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPanelWidget*                          GroupRoot;                                         // 0x190(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAllowSwitchOff;                                   // 0x198(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EUseType                          UseType;                                           // 0x199(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_199A[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UCheckBox*>                     CheckBoxList;                                      // 0x1A0(0x10)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_199B[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UCheckBoxGroup* GetDefaultObj();

	void SetSelectIndex(int32 Index);
	void RevertLastCheck();
	bool RemoveGroupChild(class UCheckBox* Child);
	void OnStateChanged(bool bIsChecked);
	int32 GetSelectedIndex();
	void CleanCheckedState();
	TArray<class UCheckBox*> CheckChildrenState(int32* CheckedChildIndex);
	bool AddGroupChild(class UCheckBox* Child);
};

// 0x88 (0xB0 - 0x28)
// Class Solarland.ChooseWeaponItemObject
class UChooseWeaponItemObject : public UObject
{
public:
	uint8                                        Pad_199D[0x88];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UChooseWeaponItemObject* GetDefaultObj();

};

// 0x20 (0x368 - 0x348)
// Class Solarland.ChooseWeaponItemWidget
class UChooseWeaponItemWidget : public USolarUserWidget
{
public:
	uint8                                        Pad_19A0[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USolarButton*                          Btn_Collect;                                       // 0x350(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarButton*                          Btn_Select;                                        // 0x358(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FChooseWeaponItemState                UiState;                                           // 0x360(0x4)(Edit, BlueprintVisible, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_19A1[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UChooseWeaponItemWidget* GetDefaultObj();

	void SelectWeapon();
	void K2_OnUIStateChanged(struct FChooseWeaponItemState& NewState);
	void K2_InitWidget(struct FChooseWeaponItemData& InData);
	bool K2_GetWeaponUIIcon(int32 InWeaponTypeId, struct FSoftObjectPath* OutPath);
	void CollectWeapon();
};

// 0x180 (0x4C8 - 0x348)
// Class Solarland.ChooseWeaponWidget
class UChooseWeaponWidget : public USolarUserWidget
{
public:
	uint8                                        Pad_19B7[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UTileView*                             WeaponList;                                        // 0x360(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWeaponChosenWidget*                   WeaponChosen_1;                                    // 0x368(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWeaponChosenWidget*                   WeaponChosen_2;                                    // 0x370(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<int32, struct FChooseWeaponItemData>    WeaponDatasMap;                                    // 0x378(0x50)(Protected, NativeAccessSpecifierProtected)
	TMap<int32, class UChooseWeaponItemObject*>  ListWeapons;                                       // 0x3C8(0x50)(Protected, NativeAccessSpecifierProtected)
	TMap<enum class EWeaponEquipSlot, class UWeaponChosenWidget*> EquippedWeaponWidgetMap;                           // 0x418(0x50)(ExportObject, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TSet<int32>                                  CollectedWeapons;                                  // 0x468(0x50)(Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_19B8[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  CloseActionName;                                   // 0x4BC(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_19B9[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UChooseWeaponWidget* GetDefaultObj();

	void SelectEquipSlot(enum class EWeaponEquipSlot InSlot);
	void ResetChosenWidget(bool bResetFirst, bool bResetSecond);
	void RefreshWeaponList(bool bForce);
	void OnSelfOpened();
	void OnRequestCollectWeapon(int32 InWeaponID, bool bInCollected);
	void OnListWeaponSelected(int32 InWeaponID);
	void OnListWeaponCollected(int32 InWeaponID);
	void OnEquipSlotSelected(enum class EWeaponEquipSlot InSlot);
	void K2_EquipWeapon(enum class EWeaponEquipSlot InSlot, int32 InWeaponID);
	void InitWeaponList(TArray<struct FChooseWeaponItemData>& InList);
	int32 GetWeaponSkinId(int32 InWeaponID);
	class UChooseWeaponItemWidget* GetListWidgetByWeaponId(int32 InWeaponID);
	TArray<struct FChooseWeaponItemData> GetListWeapons();
	TArray<struct FChooseWeaponItemData> GetEquippedWeaponData();
	TArray<int32> GetCollectedWeaponsFormPlayerData();
	void EquipWeapon(enum class EWeaponEquipSlot InSlot, int32 InWeaponID);
};

// 0x0 (0x228 - 0x228)
// Class Solarland.CircleCardView
class UCircleCardView : public UCardView
{
public:

	static class UClass* StaticClass();
	static class UCircleCardView* GetDefaultObj();

};

// 0x0 (0x348 - 0x348)
// Class Solarland.CommonTwiceConfirmBaseWidget
class UCommonTwiceConfirmBaseWidget : public USolarUserWidget
{
public:

	static class UClass* StaticClass();
	static class UCommonTwiceConfirmBaseWidget* GetDefaultObj();

};

// 0x8 (0x350 - 0x348)
// Class Solarland.ComponentButtonBaseWidget
class UComponentButtonBaseWidget : public USolarUserWidget
{
public:
	class USolarButton*                          OperateArea;                                       // 0x348(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UComponentButtonBaseWidget* GetDefaultObj();

};

// 0x28 (0x50 - 0x28)
// Class Solarland.CrashReportManager
class UCrashReportManager : public UObject
{
public:
	uint8                                        Pad_19C3[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UCrashReportManager* GetDefaultObj();

	void SetUserID(const class FString& InUserId);
	void SetDeviceUUID(const class FString& InDeviceUUID);
	void ReportLuaException(const class FString& ErrorMsg, const class FString& Traceback, bool bHandled);
};

// 0xC0 (0x228 - 0x168)
// Class Solarland.CrosshairCanvasPanel
class UCrosshairCanvasPanel : public UCanvasPanel
{
public:
	TMap<enum class ECrossHairState, struct FStateMapItemStruct> CrosshairStateConfigList;                          // 0x168(0x50)(Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<class UWidget*>                       IgonreWidgetToStateMap;                            // 0x1B8(0x10)(Edit, ExportObject, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FUICrossHairSpreadStruct>      SpreadItemList;                                    // 0x1C8(0x10)(Edit, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FUICrossHairAimColorStruct>    AimColorItemList;                                  // 0x1D8(0x10)(Edit, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTweenImage*                           ReloadingTween;                                    // 0x1E8(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGaugeImage*                           BulletGauge;                                       // 0x1F0(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTweenImage*                           OverloadingTween;                                  // 0x1F8(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UProgressBar*                          OverloadBar_Normal;                                // 0x200(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UProgressBar*                          OverloadBar_Warn;                                  // 0x208(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTweenWidget*                          OverloadNormalPanelTween;                          // 0x210(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UProgressBar*>                  CoolDownBars;                                      // 0x218(0x10)(Edit, ExportObject, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UCrosshairCanvasPanel* GetDefaultObj();

};

// 0xA0 (0x300 - 0x260)
// Class Solarland.CrossHairWidget
class UCrossHairWidget : public UUserWidget
{
public:
	TMap<enum class EWeaponType, struct FCrosshairLayout> CrosshairStorageLayout;                            // 0x260(0x50)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FCrosshairSprite                      CrosshairSprites;                                  // 0x2B0(0x30)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	uint8                                        Pad_19D5[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UCrosshairCanvasPanel*                 RootPanel;                                         // 0x2E8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MinSpread;                                         // 0x2F0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_19D7[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FCrosshairLayout                      CurrentLayout;                                     // 0x2F8(0x4)(NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_19D8[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UCrossHairWidget* GetDefaultObj();

	void SetCrosshairSprite(class UPaperSprite* InSprite);
	void OnWeaponFired();
	void OnUpdateReloadProgress(float InReloadProgress, int32 InReservedAmmo, int32 InMaxAmmo);
	void OnUpdateGatlingRoll(float DeltaTmie, float InRollSpeedInterp, bool bWantFire);
	void OnUpdateCoolDownProgress(float InCoolDownProgress);
	void OnUpdateChargeProgress(bool InbCharging, int32 InChargeMode, float InChargeProgress, int32 InChargeBurstCount);
	void OnUpdateAimState(bool InbLockEnemy);
	void OnReloadStarted(float InReloadTime, int32 InReservedAmmo);
	void OnReloadFinished(bool InbReloadSuccess, int32 InReloadAmmo, int32 InReservedAmmo, int32 InMaxAmmo);
	void OnPlayWeaponSpecialFire(enum class ECrossHairSpecialFireState InState, float PlayRate);
	void OnOverloadStateChanged(bool bEnter);
	void OnCrosshairInNormalState();
	void OnAmmoChanged(int32 InReservedAmmo, int32 InMaxAmmo, bool InbFirst);
	void InitializeCrosshairSpread(float Spread);
	void InitializeCrosshair(enum class EWeaponType WeaponType, bool bIsWeaponEnergy);
	void HandleCrosshairState(enum class ECrossHairState InCrosshairState, bool InbQuitState);
	class UWidget* GetSpreadCanvasWidget();
	class UUserWidget* GetReloadWidget();
	class UUserWidget* GetOverloadWidget();
	class UUserWidget* GetCoolDownWidget();
	class UUserWidget* GetChargeWidget();
	class UUserWidget* GetAmmoWidget();
	struct FVector2D CalcDeltaScaleBySpread(float Spread);
	struct FVector2D CalcDeltaPosBySpread(float Spread);
	float CalcDeltaAngleBySpread(float Spread);
};

// 0x28 (0x58 - 0x30)
// Class Solarland.CruiseAssetSet
class UCruiseAssetSet : public UDataAsset
{
public:
	struct FSoftClassPath                        CapsuleActorClass;                                 // 0x30(0x18)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FSoftClassPath>                CruiseAbilityClasses;                              // 0x48(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UCruiseAssetSet* GetDefaultObj();

};

// 0xA0 (0xC8 - 0x28)
// Class Solarland.CurvedEffectController
class UCurvedEffectController : public UActorEffectController
{
public:
	struct FRuntimeFloatCurve                    ProgressCurve;                                     // 0x28(0x88)(Edit, NativeAccessSpecifierPublic)
	enum class ECurvedEffectControllerStopMode   StopMode;                                          // 0xB0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_19DA[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        StopTime;                                          // 0xB4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_19DB[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UCurvedEffectController* GetDefaultObj();

};

// 0x0 (0xB0 - 0xB0)
// Class Solarland.CustomConsoleCommandsComponent
class UCustomConsoleCommandsComponent : public UActorComponent
{
public:

	static class UClass* StaticClass();
	static class UCustomConsoleCommandsComponent* GetDefaultObj();

	void ExecGMCommand(const class FString& CommandParameters, TArray<class FString>& ArgsStr);
};

// 0x0 (0x398 - 0x398)
// Class Solarland.CustomGameModeHUD
class ACustomGameModeHUD : public ABattleHUDBase
{
public:

	static class UClass* StaticClass();
	static class ACustomGameModeHUD* GetDefaultObj();

	TSoftObjectPtr<class USolarUserWidget> ShowPanelUI(enum class EUIPanelName PanelName);
	void ClosePanelUI(enum class EUIPanelName PanelName);
};

// 0x0 (0xC8 - 0xC8)
// Class Solarland.CustomNoticeTable
class UCustomNoticeTable : public UDataTable
{
public:

	static class UClass* StaticClass();
	static class UCustomNoticeTable* GetDefaultObj();

};

// 0x0 (0xC8 - 0xC8)
// Class Solarland.CustomNoticeImageTable
class UCustomNoticeImageTable : public UDataTable
{
public:

	static class UClass* StaticClass();
	static class UCustomNoticeImageTable* GetDefaultObj();

};

// 0x0 (0x228 - 0x228)
// Class Solarland.GameManagerBase
class AGameManagerBase : public AInfo
{
public:

	static class UClass* StaticClass();
	static class AGameManagerBase* GetDefaultObj();

};

// 0x1F0 (0x418 - 0x228)
// Class Solarland.CustomRoomManager
class ACustomRoomManager : public AGameManagerBase
{
public:
	int32                                        RoomTeamMemberLimit;                               // 0x228(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RoomLeftTime;                                      // 0x22C(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsGameStarted;                                    // 0x230(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_19F3[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                JobName;                                           // 0x238(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsWeaponSettingOpen;                              // 0x248(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsVehicleSettingOpen;                             // 0x249(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_19F4[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<class FString, struct FCustomParamConfig> CustomParamConfigMap;                              // 0x250(0x50)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TArray<struct FUserSetting>                  UserSettingList;                                   // 0x2A0(0x10)(Net, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<uint8>                                WeaponTypeAvailableList;                           // 0x2B0(0x10)(Net, ZeroConstructor, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<uint8>                                VehicleClassAvailableList;                         // 0x2C0(0x10)(Net, ZeroConstructor, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<int32>                                WeaponSettingBlacklist;                            // 0x2D0(0x10)(Net, ZeroConstructor, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<int32>                                VehicleTypeSettingBlacklist;                       // 0x2E0(0x10)(Net, ZeroConstructor, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            WeaponTypeAvailableChangedEvent;                   // 0x2F0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            WeaponSettingBlacklistChangedEvent;                // 0x300(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            VehicleClassAvailableChangedEvent;                 // 0x310(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            VehicleTypeSettingBlacklistChangedEvent;           // 0x320(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_19F6[0xE8];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ACustomRoomManager* GetDefaultObj();

	void WeaponTypeAvailableChangedEvent__DelegateSignature(TArray<uint8>& WeaponTypeAvailableList);
	void WeaponSettingBlacklistChangedEvent__DelegateSignature(TArray<int32>& WeaponSettingBlacklist);
	void VehicleTypeSettingBlacklistChangedEvent__DelegateSignature(TArray<int32>& VehicleTypeSettingBlacklist);
	void VehicleClassAvailableChangedEvent__DelegateSignature(TArray<uint8>& VehicleClassAvailableList);
	void ReceiveUserSettingChanged(const class FString& Name, const class FString& Value);
	void ReceiveTournamentDealy();
	void ReceivePlayerRemoved(class ASCMPlayerState* Player, enum class ERemovedReasonType Reason);
	void OnUserSettingChangedEvent(const class FString& Name, const struct FCustomParamConfig& ConfigInfo, const class FString& Value);
	void OnTournamentDealy();
	void OnRoomOwnerLeftRoom();
	void OnRep_WeaponTypeAvailableList();
	void OnRep_WeaponSettingBlacklist();
	void OnRep_VehicleTypeSettingBlacklist();
	void OnRep_VehicleClassAvailableList();
	void OnPlayerRemovedFromRoom(class ASCMPlayerState* Player, enum class ERemovedReasonType Reason);
	bool OnGameStart();
	void OnClientRoomDataReady();
	bool IsWeaponTypeAvailable(uint8 WeaponType);
	bool IsWeaponSettingOpen();
	bool IsWeaponAvailable(int32 Weaponid);
	bool IsVehicleTypeAvailable(int32 VehicleTypeID);
	bool IsVehicleSettingOpen();
	bool IsVehicleClassAvailable(uint8 VehicleClassValue);
	bool IsRoomOwner(class ASCMPlayerState* Player);
	bool IsRoomHasMinimalSides();
	bool IsRoomHasEnoughPlayers();
	TArray<uint8> GetWeaponTypeAvailableList();
	void GetWeaponSettingLists(TArray<int32>* OutWeaponBlacklist, TArray<int32>* OutWeaponWhitelist);
	TArray<int32> GetWeaponSettingBlacklist();
	void GetVehicleTypeSettingLists(TArray<int32>* OutVehicleBlacklist, TArray<int32>* OutVehicleWhitelist);
	TArray<int32> GetVehicleTypeSettingBlacklist();
	TArray<uint8> GetVehicleClassAvailableList();
	class FString GetModeParam(const class FString& Name, struct FCustomParamConfig* ParamInfo);
	void ExecuteGameStart();
	bool CheckWeaponTypeCanSetting(enum class EWeaponUIType WeaponUIType);
	bool CheckWeaponCanSetting(int32 Weaponid);
	bool CheckVehicleTypeCanSetting(int32 VehicleTypeID);
	bool CheckVehicleClassCanSetting(enum class EVehicleClass VehicleClass);
};

// 0x158 (0x728 - 0x5D0)
// Class Solarland.DeathTreasureBox
class ADeathTreasureBox : public ASolarTreasureBoxActor
{
public:
	float                                        CharacterPickupRange;                              // 0x5D0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CurrEnergyValue;                                   // 0x5D4(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CurrExtraEnergyValue;                              // 0x5D8(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_19FB[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                PlayerId;                                          // 0x5E0(0x10)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                NickName;                                          // 0x5F0(0x10)(Net, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsPickuped;                                        // 0x600(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_19FC[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class ASolarPlayerWeapon*>            WeaponList;                                        // 0x608(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FBoxChargingInfo>              ChargingChars;                                     // 0x618(0x10)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PickupRadius;                                      // 0x628(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ResurrectDistance;                                 // 0x62C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EBResurrectionState               CurrResurrectionState;                             // 0x630(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_19FD[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ReviveTotalTime;                                   // 0x634(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ReviveStartTime;                                   // 0x638(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_19FE[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USkeletalMeshComponent*                PreViewMesh;                                       // 0x640(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ReviveStartSound;                                  // 0x648(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ReviveBeforeCompleteSound;                         // 0x650(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ReviveCompleteSound;                               // 0x658(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ReviveFailedSound;                                 // 0x660(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ResurrectionBeforeSoundTime;                       // 0x668(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_19FF[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UParticleSystem*                       ReviveCompletePS;                                  // 0x670(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ReviveCompletePSAttachedSocket;                    // 0x678(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PreviewMeshZOffset;                                // 0x680(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PreviewMeshZRotation;                              // 0x684(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1A00[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class USceneComponent*                       FXPosComponent;                                    // 0x698(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<TSoftObjectPtr<class UParticleSystem>> QualityPS;                                         // 0x6A0(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1A02[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UActorEffect>              RevivePreviewEffectClass;                          // 0x6C0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1A03[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<enum class ECharacterBodyScaleType, struct FSoftObjectPath> PreviewAnim;                                       // 0x6D0(0x50)(Edit, BlueprintVisible, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	float                                        SphereRadius;                                      // 0x720(0x4)(Edit, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        UnpickableSphereRadius;                            // 0x724(0x4)(Edit, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class ADeathTreasureBox* GetDefaultObj();

	void ReceiveSetUIEnable(bool IsShow);
	void ReceiveRemoveEffect(class ASolarCharacter* SolarChar);
	void ReceiveRefreshExtraEnergy(const class FString& Message);
	void ReceiveAddEffect(class ASolarCharacter* SolarChar);
	void OnUntrigger(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void OnTrigger(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	void OnRep_ReviveStartTime();
	void OnRep_PickupedChanged();
	void OnRep_CurrExtraEnergyValueChanged();
	void OnRep_BResurrectionStateChanged();
	void OnRefreshPickupStatusEffect(bool IsShow);
	bool IsInResurrectRange(class ASolarCharacter* InReqCharacter, float* RealDistance);
	bool CanBuyResurrect(class ASolarCharacter* InReqCharacter);
};

// 0xB0 (0x3F8 - 0x348)
// Class Solarland.DeathViewGoodsSlotWidget
class UDeathViewGoodsSlotWidget : public USolarUserWidget
{
public:
	class UImage*                                Img_Icon;                                          // 0x348(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                            Txt_Num;                                           // 0x350(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FSlateBrush                           ImageOuter;                                        // 0x358(0x98)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	int32                                        ItemID;                                            // 0x3F0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1A05[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UDeathViewGoodsSlotWidget* GetDefaultObj();

	void OnSpectateTargetItemsChanged(const TArray<struct FReplicateItemData>& InItemDatas);
};

// 0x90 (0x3D8 - 0x348)
// Class Solarland.DeathViewHPWidget
class UDeathViewHPWidget : public USolarUserWidget
{
public:
	uint8                                        Pad_1A0B[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bSplitHPBar;                                       // 0x370(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1A0C[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USolarShieldProgressBoard*             AdvBar_Shield;                                     // 0x378(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarHPProgressBoard*                 AdvBar_HP;                                         // 0x380(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1A0E[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FLinearColor                          HPColorNormal;                                     // 0x3A8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                          HPColorDying;                                      // 0x3B8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1A0F[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UDeathViewHPWidget* GetDefaultObj();

	void UpdateHPBar(float InCurHealth, float InMaxHealth, float InHPGridUnit);
	void OnSpecTargetChanged(class ASolarPlayerState* OldTarget, class ASolarPlayerState* NewTarget);
	void OnShieldValueChanged(class USinglePlayerShieldModel* ShieldModel);
	void OnShieldChanged(class USinglePlayerShieldModel* ShieldModel);
	void OnShieldAvailableChanged(class USinglePlayerShieldModel* ShieldModel);
	void OnHPModelChanged(class USinglePlayerHPModel* HPModel);
	void OnCharacterEndPlay(class ASolarCharacter* Character);
};

// 0x78 (0x3C0 - 0x348)
// Class Solarland.DeathViewTeammateWidget
class UDeathViewTeammateWidget : public USolarUserWidget
{
public:
	float                                        SwitchCDTime;                                      // 0x348(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1A12[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UUIComponentNationalFlag*              UI_Component_NationalFlag;                         // 0x350(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarUserWidget*                      UI_Input_Device;                                   // 0x358(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                            Txt_PlayerName;                                    // 0x360(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Img_View_Name_Bg;                                  // 0x368(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Img_TeamPos;                                       // 0x370(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Img_View_TeamPos_Bg;                               // 0x378(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USizeBox*                              Panel_TeamPos;                                     // 0x380(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOverlay*                              Panel_Death;                                       // 0x388(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOverlay*                              Panel_Selected;                                    // 0x390(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Img_Loading;                                       // 0x398(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                               ScaleBox_0;                                        // 0x3A0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Sel_Anim;                                          // 0x3A8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1A13[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ASolarPlayerState*                     CurrentPlayerState;                                // 0x3B8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UDeathViewTeammateWidget* GetDefaultObj();

	void TrySelect();
	void SetTeamPos(int32 PosInTeam);
	void SetPlayerState(class ASolarPlayerState* TargetPS);
	void OnTeammateStateChanged(bool NeedRefresh);
	void OnSelectedPlayerChanged(class ASolarPlayerState* SelectedPS);
	void OnHPChanged(uint8 PosInTeam, float CurHP, float MaxHP);
	void OnBroadcastModeChanged();
};

// 0x38 (0x380 - 0x348)
// Class Solarland.DeathViewWidget
class UDeathViewWidget : public USolarUserWidget
{
public:
	uint8                                        Pad_1A16[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UDeathViewHPWidget*                    DeathViewHP;                                       // 0x350(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCanvasPanel*                          Panel_ScopeUI;                                     // 0x358(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTextBlock*                       Text_PlayerLevel;                                  // 0x360(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTextBlock*                       Txt_Lv_Head;                                       // 0x368(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                Img_Lv_Bg_1;                                       // 0x370(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                Img_Lv_Border_1;                                   // 0x378(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UDeathViewWidget* GetDefaultObj();

	void OnSpecTargetChanged(class ASolarSpectateInfo* SpectateInfo);
	void OnLocalSpecInfoReady(class ASolarSpectateInfo* SpecInfo);
	void OnCharacterLevelChanged(int32 InLevel);
	void AddScopeToPanel(class UUserWidget* InChildWidget, bool bInSpectate);
};

// 0x90 (0x2B8 - 0x228)
// Class Solarland.DefenderManager
class ADefenderManager : public AGameManagerBase
{
public:
	FMulticastInlineDelegateProperty_            OnRepDefenderListNotify;                           // 0x228(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FTerminatorNotifyUIConfig             TerminatorNotifyUIConfig;                          // 0x238(0x28)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TSubclassOf<class ASolarTrailEffect>         TrailEffect;                                       // 0x260(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                DefenderSide;                                      // 0x268(0x10)(Net, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class ASolarPlayerState*>             DefenderList;                                      // 0x278(0x10)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, RepNotify, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1A1F[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                TerminatorPlayerId;                                // 0x290(0x10)(Net, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1A20[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ADefenderManager* GetDefaultObj();

	bool UpdateCheckTerminator(class ASCMPlayerState* InKiller, class ASCMPlayerState* InKilled);
	void StartConfirmDefender();
	void ShowDefenderUIForReplay();
	void OnRep_DefenderList();
	bool IsTerminator(const class FString& InSolarPlayerID);
	bool IsDefender(const class FString& InPlayerSide);
	TArray<class ASolarPlayerState*> GetDefenderList();
};

// 0x10 (0x80 - 0x70)
// Class Solarland.DelayNode
class UDelayNode : public UActionNode
{
public:
	float                                        DelayTime;                                         // 0x70(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1A21[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UDelayNode* GetDefaultObj();

};

// 0x140 (0x488 - 0x348)
// Class Solarland.DrawLinePanel
class UDrawLinePanel : public USolarUserWidget
{
public:
	float                                        MapSize;                                           // 0x348(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CurrentFOV;                                        // 0x34C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1A2B[0x38];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FLinearColor                          SafeAreaColor;                                     // 0x388(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          PosionCircleColor;                                 // 0x398(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          DotLineColor;                                      // 0x3A8(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          AirlineProgressColor;                              // 0x3B8(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          CapsuleBackgroundColor;                            // 0x3C8(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          AirdropBackgroundColor;                            // 0x3D8(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AirdropAirlineSizeY;                               // 0x3E8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaterialCircleSize;                                // 0x3EC(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DotLineDottedLength;                               // 0x3F0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DotLineDottedInterval;                             // 0x3F4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1A2C[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FDotLineData>                  DotLineDataList;                                   // 0x400(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FCircleData>                   CircleDataList;                                    // 0x410(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarMapManager*                      MapManager;                                        // 0x420(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class ASolarCapsuleRoot>      CapsuleRoot;                                       // 0x428(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                       CircleMaterialPath;                                // 0x430(0x18)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                       DottedLineMaterialPath;                            // 0x448(0x18)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UMaterialInstanceDynamic*>      CircleMaterialInstanceArray;                       // 0x460(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UMaterialInstanceDynamic*>      DottedLineMaterialInstanceArray;                   // 0x470(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        InitFOV;                                           // 0x480(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1A2D[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UDrawLinePanel* GetDefaultObj();

	void RemoveDotLine(int32 DotLineID);
	void RemoveCircle(int32 CircleID);
	void OnAirlineUpdate(struct FVector2D& InNewPos);
	void OnAirlineSet(const struct FMiniMapAirlineData& InData);
	void OnAirlineClear();
	void InitializePanelFOV(float InFOV);
	int32 AddDotLine(class AActor* StartPointActor, class AActor* EndPointActor, const struct FLinearColor& Color);
	int32 AddCircle(const struct FVector2D& Center, float Radius, const struct FLinearColor& Color);
};

// 0xB80 (0xBB0 - 0x30)
// Class Solarland.DuckRollingConfigDataAsset
class UDuckRollingConfigDataAsset : public UDataAsset
{
public:
	TMap<int32, struct FStaticMeshOverride>      RollingMeshOverrideForSkin;                        // 0x30(0x50)(Edit, NativeAccessSpecifierPublic)
	float                                        SwitchToRollingMeshDelay;                          // 0x80(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHideCharacterMesh;                                // 0x84(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1A2E[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTag                          VisibilityTag;                                     // 0x88(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          SwitchToRollingMeshStatusTag;                      // 0x90(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RollingBallScale;                                  // 0x98(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RollingBallRadius;                                 // 0x9C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               RollingBallCenterOffset;                           // 0xA0(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bOverrideCameraDesiredDistance;                    // 0xAC(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1A30[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        CameraDesiredDistanceOverride;                     // 0xB0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bOverrideCameraDistanceSmoothFactor;               // 0xB4(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1A32[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        CameraDistanceSmoothFactorOverride;                // 0xB8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RollingAngleDecelerationOnFalling;                 // 0xBC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RollingAngleFrictionOnFalling;                     // 0xC0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        InitRollingAngleSpeed;                             // 0xC4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               InitLocalRollingAxis;                              // 0xC8(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RollingMoveRadius;                                 // 0xD4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bOverrideMovementMaxAcceleration;                  // 0xD8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1A33[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MovementMaxAccelerationOverride;                   // 0xDC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bOverrideBrakingDecelerationWalking;               // 0xE0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1A34[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        BrakingDecelerationWalkingOverride;                // 0xE4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bOverrideMinAccelerationProjectRatioForValidGroundSlide; // 0xE8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1A35[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MinAccelerationProjectRatioForValidGroundSlideOverride; // 0xEC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bOverrideCustomJumpParams;                         // 0xF0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1A36[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FCustomJumpParams                     OverrideCustomJumpParams;                          // 0xF4(0xC)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	class FName                                  JumpSoundGroupName;                                // 0x100(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1A37[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FDuckRollingCharacterHitConfig        CharacterHitConfig;                                // 0x110(0xA0)(Edit, NativeAccessSpecifierPublic)
	class FName                                  ReshapingPointParameterName;                       // 0x1B0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ReshapingOrthoDirParameterName;                    // 0x1B8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ReshapingMoveDirScaleParameterName;                // 0x1C0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ReshapingOrthoDirScaleParameterName;               // 0x1C8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ReshapingFlattenScaleParameterName;                // 0x1D0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BounceRequiredMinSpeedOnImpactNormal;              // 0x1D8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BounceCollisionShapeScale;                         // 0x1DC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BounceTriggerCooldown;                             // 0x1E0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayCueTag                       BounceGameplayCueTag;                              // 0x1E4(0x8)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_1A3A[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRuntimeFloatCurve                    BounceDurationHoriCurve;                           // 0x1F0(0x88)(Edit, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                    BounceDurationVertCurve;                           // 0x278(0x88)(Edit, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                    BounceReshapingMoveDirCurve;                       // 0x300(0x88)(Edit, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                    BounceReshapingOrthoDirCurve;                      // 0x388(0x88)(Edit, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                    BounceReshapingFlattenScaleCurve;                  // 0x410(0x88)(Edit, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                    BounceReshapingScaleCurve;                         // 0x498(0x88)(Edit, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                    BounceMoveHoriDurationScaleCurve;                  // 0x520(0x88)(Edit, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                    BounceMoveVertDurationScaleCurve;                  // 0x5A8(0x88)(Edit, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                    BounceMoveHoriImmovableDurationScaleCurve;         // 0x630(0x88)(Edit, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                    BounceMoveVertImmovableDurationScaleCurve;         // 0x6B8(0x88)(Edit, NativeAccessSpecifierPublic)
	float                                        BounceMoveRequiredMinSpeedOnImpactNormal;          // 0x740(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BounceMoveMaxAllowedHoriBounceSpeed;               // 0x744(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BounceMoveMaxAllowedVertBounceSpeed;               // 0x748(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1A3B[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRuntimeFloatCurve                    BounceMoveHoriSpeedInheritanceCurve;               // 0x750(0x88)(Edit, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                    BounceMoveVertSpeedInheritanceCurve;               // 0x7D8(0x88)(Edit, NativeAccessSpecifierPublic)
	float                                        JumpReshapingDuration;                             // 0x860(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1A3C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRuntimeFloatCurve                    JumpReshapingMoveDirCurve;                         // 0x868(0x88)(Edit, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                    JumpReshapingOrthoDirCurve;                        // 0x8F0(0x88)(Edit, NativeAccessSpecifierPublic)
	float                                        SwitchReshapingDuration;                           // 0x978(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1A3D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRuntimeFloatCurve                    SwitchReshapingMoveDirCurve;                       // 0x980(0x88)(Edit, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                    SwitchReshapingOrthoDirCurve;                      // 0xA08(0x88)(Edit, NativeAccessSpecifierPublic)
	struct FRangeFloat                           RandomReshapingIntervalRange;                      // 0xA90(0x8)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	float                                        MinSpeedForRandomReshaping;                        // 0xA98(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RandomReshapingDuration;                           // 0xA9C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                    RandomReshapingMoveDirCurve;                       // 0xAA0(0x88)(Edit, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                    RandomReshapingOrthoDirCurve;                      // 0xB28(0x88)(Edit, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UDuckRollingConfigDataAsset* GetDefaultObj();

};

// 0x90 (0x690 - 0x600)
// Class Solarland.DuckRollingMeshComponent
class UDuckRollingMeshComponent : public UStaticMeshComponent
{
public:
	uint8                                        Pad_1A3E[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UPrimitiveComponent>       ShieldComponentClass;                              // 0x608(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<struct FSoftObjectPath, struct FSoftObjectPath> MaterialEffectMaterialMapping;                     // 0x610(0x50)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	float                                        HeadRelativeHeight;                                // 0x660(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1A3F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UPrimitiveComponent*                   ShieldComponent;                                   // 0x668(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UObject*>                       MeshOverrides;                                     // 0x670(0x10)(BlueprintVisible, ZeroConstructor, Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UObject*>                       LoadedEffectMaterials;                             // 0x680(0x10)(ZeroConstructor, Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UDuckRollingMeshComponent* GetDefaultObj();

	void ReceiveOnRegister();
};

// 0x168 (0x218 - 0xB0)
// Class Solarland.DuckRollingProxyComponent
class UDuckRollingProxyComponent : public UActorComponent
{
public:
	TSubclassOf<class UDuckRollingMeshComponent> RollingMeshClass;                                  // 0xB0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDuckRollingMeshComponent*             RollingMeshComponent;                              // 0xB8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDuckRollingConfigDataAsset*           RollingConfig;                                     // 0xC0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ASolarCharacter*                       CharacterOwner;                                    // 0xC8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1A42[0xE0];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UMaterialInterface*>            ReshapingMaterials;                                // 0x1B0(0x10)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMaterialInterface*                    ReshapingMultiplePassMaterial;                     // 0x1C0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1A43[0x50];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UDuckRollingProxyComponent* GetDefaultObj();

	void OnUpdateCharacterStateAfterMovement(class USolarCharacterMovementComponent* MoveComp, float DeltaTime);
	void OnSwitchToRollingMeshTagCountChanged(const struct FGameplayTag& Tag, int32 Count);
	void OnCharacterMovementModeChanged(class ACharacter* Character, enum class EMovementMode PrevMovementMode, uint8 PreviousCustomMode);
};

// 0x30 (0x450 - 0x420)
// Class Solarland.DurationTalent
class UDurationTalent : public UCharacterTalent
{
public:
	TSubclassOf<class UGameplayEffect>           DurationEffectClass;                               // 0x420(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<TSubclassOf<class UGameplayEffect>>   DurationSubEffectClasses;                          // 0x428(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1A44[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UDurationTalent* GetDefaultObj();

	void StartDurationEffectFailed(struct FGameplayEffectRemovalInfo& GameplayEffectRemovalInfo);
	void ReceiveDurationEffectFinished(struct FGameplayEffectRemovalInfo& GameplayEffectRemovalInfo);
};

// 0x770 (0x8D0 - 0x160)
// Class Solarland.EditableRichTextBlock
class UEditableRichTextBlock : public UTextLayoutWidget
{
public:
	uint8                                        Pad_1A47[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnTextChanged;                                     // 0x168(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnTextCommitted;                                   // 0x178(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class FText                                  Text;                                              // 0x188(0x18)(Edit, Protected, NativeAccessSpecifierProtected)
	float                                        MinDesiredWidth;                                   // 0x1A0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1A48[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UDataTable*                            TextStyleSet;                                      // 0x1A8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<TSubclassOf<class USolarRichTextBlockDecorator>> DecoratorClasses;                                  // 0x1B0(0x10)(Edit, ZeroConstructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bOverrideDefaultStyle;                             // 0x1C0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1A49[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTextBlockStyle                       DefaultTextStyleOverride;                          // 0x1C8(0x2A8)(Edit, Protected, NativeAccessSpecifierProtected)
	enum class ETextTransformPolicy              TextTransformPolicy;                               // 0x470(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1A4A[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class USolarRichTextBlockDecorator*>  InstanceDecorators;                                // 0x478(0x10)(ZeroConstructor, Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTextBlockStyle                       DefaultTextStyle;                                  // 0x488(0x2A8)(Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1A4B[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FDelegateProperty_                           TextDelegate;                                      // 0x740(0x10)(ZeroConstructor, InstancedReference, NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                         bEnableLocalHintText;                              // 0x750(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCapitalsLock;                                     // 0x751(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ESolarSupportLanguages            PreviewLanguage;                                   // 0x752(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1A4C[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        LocalHintTextID;                                   // 0x754(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FText                                  HintText;                                          // 0x758(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	FDelegateProperty_                           HintTextDelegate;                                  // 0x770(0x10)(ZeroConstructor, InstancedReference, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FSlateBrush                           CaretImage;                                        // 0x780(0x98)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FSlateBrush                           BackgroundImageSelected;                           // 0x818(0x98)(Edit, Protected, NativeAccessSpecifierProtected)
	bool                                         IsCaretMovedWhenGainFocus;                         // 0x8B0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         SelectAllTextWhenFocused;                          // 0x8B1(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         RevertTextOnEscape;                                // 0x8B2(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         ClearKeyboardFocusOnCommit;                        // 0x8B3(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         SelectAllTextOnCommit;                             // 0x8B4(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IgnoreFocusChange;                                 // 0x8B5(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1A4D[0x1A];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UEditableRichTextBlock* GetDefaultObj();

	void SetTextTransformPolicy(enum class ETextTransformPolicy InTransformPolicy);
	void SetText(class FText& InText);
	void SetIsDisableVirtualKeyboardShow(bool InDisableVKShow);
	void SetIgnoreFocusChange(bool InIngoreFocusChange);
	void SetHintTextLocalID(int32 InLocalHintTextID);
	void SetHintText(class FText InHintText);
	void SetEnableLocalHintText(bool bInEnableLocalHintText);
	void SetDefaultTextStyle(struct FTextBlockStyle& InDefaultTextStyle);
	void SetDefaultStrikeBrush(struct FSlateBrush* InStrikeBrush);
	void SetDefaultShadowOffset(const struct FVector2D& InShadowOffset);
	void SetDefaultShadowColorAndOpacity(const struct FLinearColor& InShadowColorAndOpacity);
	void SetDefaultFont(const struct FSlateFontInfo& InFontInfo);
	void SetDefaultColorAndOpacity(const struct FSlateColor& InColorAndOpacity);
	void SetCaretImage(struct FSlateBrush* InCaretImage);
	void SetBackgroundImageSelected(struct FSlateBrush* InBackgroundImageSelected);
	void SetAutoWrapText(bool InAutoTextWrap);
	void OnEditableTextCommittedEvent__DelegateSignature(class FText& Text, enum class ETextCommit CommitMethod);
	void OnEditableTextChangedEvent__DelegateSignature(class FText& Text);
	void InsertTextAtCursor(const class FString& InString);
	class FText GetText();
	void ClearAllDefaultStyleOverrides();
	void AcquireVirtualKeyBoardEntryWigetFocus();
};

// 0x198 (0x4E0 - 0x348)
// Class Solarland.ElectricShop_Weapon
class UElectricShop_Weapon : public USolarUserWidget
{
public:
	FMulticastInlineDelegateProperty_            OnWeaponUpdateRequested;                           // 0x348(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnShieldUpdateRequested;                           // 0x358(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UWidgetSwitcher*                       WidgetSwitcher_weapon;                             // 0x368(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                          Weapon;                                            // 0x370(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Img_Level_Bg;                                      // 0x378(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOverlay*                              Level_Indicator;                                   // 0x380(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHorizontalBox*                        Panel_Level;                                       // 0x388(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                            Txt_Level;                                         // 0x390(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Img_Arrow;                                         // 0x398(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarTextBlock*                       Txt_Max;                                           // 0x3A0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarImage*                           Img_Weapon;                                        // 0x3A8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Img_Shield;                                        // 0x3B0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetSwitcher*                       WidgetSwitcher_Upgrade;                            // 0x3B8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarImage*                           Upgrade_BG;                                        // 0x3C0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarTextBlock*                       Txt_UpgradeState;                                  // 0x3C8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHorizontalBox*                        Panel_ElectricCost;                                // 0x3D0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOverlay*                              Overlay_Discount;                                  // 0x3D8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                            Txt_ElectricityNum_Undiscounted;                   // 0x3E0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                            Txt_ElectricityNum;                                // 0x3E8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarTextBlock*                       Txt_UpgradeState_Disable;                          // 0x3F0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHorizontalBox*                        Panel_ElectricCost_Disable;                        // 0x3F8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOverlay*                              Overlay_Discount_1;                                // 0x400(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                            Txt_ElectricityNum_Undiscounted_1;                 // 0x408(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                            Txt_ElectricityNum_Disable;                        // 0x410(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarTextBlock*                       Txt_UpgradeState_Disable_1;                        // 0x418(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                          Weapon_UpgradeSuccess;                             // 0x420(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Image_BG2_2;                                       // 0x428(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarTextBlock*                       Txt_Upgrade2;                                      // 0x430(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                          Weapon_None;                                       // 0x438(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Image_BG2;                                         // 0x440(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Image_BG2_1;                                       // 0x448(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Succeed_Anim;                                      // 0x450(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsWeapon;                                         // 0x458(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1A57[0x17];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        MaxWeaponLevel;                                    // 0x470(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1A58[0x34];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FString>                        WeaponLevelBGNames;                                // 0x4A8(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                WeaponLevelBGPrefix;                               // 0x4B8(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                ShieldIconPrefix;                                  // 0x4C8(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class ASolarPlayerWeapon>     CurrentWeapon;                                     // 0x4D8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UElectricShop_Weapon* GetDefaultObj();

	void UpdateUpgradeData(class ASolarPlayerWeapon* InWeapon, float Discount);
	void UpdateShieldUpgradeData(float Discount);
	void ShowUpgradeEffect();
	void SetWeaponWidgetSwitcherIndex(int32 InNewIndex);
	void SetUpgradeState();
	void SetUpgradeIndicator();
	void SetIndicatorVisibility(enum class EShopWeaponUpgradeState InState);
	void SetElectricCostState(enum class EShopWeaponUpgradeState InState);
	void RequestUpgradeWeapon();
	void RequestUpgradeShield();
	void RefreshCurrentShieldProperty(int32 InShieldID);
	void OnWeaponUpdateRequested__DelegateSignature(class ASolarPlayerWeapon* Weapon);
	void OnUpgradeWeaponSuccess(class ASolarPlayerWeapon* InWeapon, class ASolarCharacter* InCharacter);
	void OnUpgradeShieldSuccess(class ASolarCharacter* InCharacter);
	void OnUpgradeCooldown();
	void OnShieldUpdateRequested__DelegateSignature(class ASolarCharacter* ShieldCharacter);
	void InitWeaponUpgradeCost();
	void HideUpgradeEffect();
	float GetWeaponUpgradeCost(int32 InWeaponLevel);
	class FString GetWeaponLvBgFullPath(int32 WeaponLv);
	class FString GetShieldLvBgFullPath(int32 ShieldLv);
	float GetDiscountedCost(float Cost);
	void CheckEnergyAvaliable(float InValue);
	void BindDelegates();
};

// 0x40 (0x610 - 0x5D0)
// Class Solarland.ElectronicTreasureBox
class AElectronicTreasureBox : public ASolarTreasureBoxActor
{
public:
	class FString                                OnFinishSpawnLoopAudio;                            // 0x5D0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                OnStopLoopAudio;                                   // 0x5E0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                OnOpenAudio;                                       // 0x5F0(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FSpawnedActorHandle                   CachedActorHandle;                                 // 0x600(0x4)(NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1A59[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AElectronicTreasureBox* GetDefaultObj();

};

// 0x8 (0x38 - 0x30)
// Class Solarland.EmojiBubbleSubsystem
class UEmojiBubbleSubsystem : public UGameInstanceSubsystem
{
public:
	class UDataTable*                            EmojiTable;                                        // 0x30(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UEmojiBubbleSubsystem* GetDefaultObj();

	void ShowEmojiBubbleToContainerInLobby(int32 EmojiID, class ASolarLobbyCharacter* InLobbyCharacter, const class FString& PlayerId);
	void ShowEmojiBubbleToContainer(int32 EmojiID, class ASolarCharacter* InCharacter);
	void ResetAllEmojiBubble();
	bool GetEmojiConfigByID(int32 EmojiID, struct FEmojiBubbleConfig* OutConfig);
};

// 0x248 (0x590 - 0x348)
// Class Solarland.EmojiBubbleWidget
class UEmojiBubbleWidget : public USolarUserWidget
{
public:
	uint8                                        Pad_1A60[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ShowTime;                                          // 0x358(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1A61[0x34];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UWidgetAnimation*                      EmojiBegin_Anim;                                   // 0x390(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      EmojiEnd_Anim;                                     // 0x398(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                Img_Emoji;                                         // 0x3A0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsSpecialEmoji;                                    // 0x3A8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1A62[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        EmojiOffsetInLobby;                                // 0x3AC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             LobbyEmojiSize;                                    // 0x3B0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                    EmojiSizeCurve;                                    // 0x3B8(0x88)(Edit, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                    EnemyEmojiSizeCurve;                               // 0x440(0x88)(Edit, NativeAccessSpecifierPublic)
	int32                                        TeamMateEmojiOffset;                               // 0x4C8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SelfEmojiOffset;                                   // 0x4CC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<enum class EUsePlayerType>            EmoteAppearSoundConfig;                            // 0x4D0(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<enum class EUsePlayerType>            EmoteSoundConfig;                                  // 0x4E0(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1A63[0xA0];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UEmojiBubbleWidget* GetDefaultObj();

	void UpdateEmojiContent(int32 EmojiID);
	void SetIsInLobbyTeam(bool IsInLobbyTeam);
	void OnEndAnimationFinished();
};

// 0x28 (0x50 - 0x28)
// Class Solarland.EShopGoodsObject
class UEShopGoodsObject : public UObject
{
public:
	uint8                                        Pad_1A66[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        ProductID;                                         // 0x30(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ItemID;                                            // 0x34(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Price;                                             // 0x38(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Num;                                               // 0x3C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CoolDown;                                          // 0x40(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Generation;                                        // 0x44(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsRecommend;                                      // 0x48(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1A68[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UEShopGoodsObject* GetDefaultObj();

	void UpdateData(struct FElectricShopItem& InItemData, bool InRecommend);
};

// 0x10 (0x80 - 0x70)
// Class Solarland.EventAction
class UEventAction : public UActionNode
{
public:
	uint8                                        Pad_1A69[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UEventAction* GetDefaultObj();

};

// 0x18 (0x360 - 0x348)
// Class Solarland.ExpWidget
class UExpWidget : public USolarUserWidget
{
public:
	int32                                        LocalTextIndex;                                    // 0x348(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1A6B[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USolarTextBlock*                       SolarText_WP_Exp;                                  // 0x350(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Exp_Anim;                                          // 0x358(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UExpWidget* GetDefaultObj();

	void PlayGetEXPAnimation(int32 InExp);
	class FString GetExpDisplayStringWithValue(int32 Value);
};

// 0x50 (0x1B8 - 0x168)
// Class Solarland.FeedbackCanvasPanel
class UFeedbackCanvasPanel : public UCanvasPanel
{
public:
	TMap<class FString, struct FFeedbackSingleData> FeedbackMap;                                       // 0x168(0x50)(Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UFeedbackCanvasPanel* GetDefaultObj();

};

// 0x40 (0x2A0 - 0x260)
// Class Solarland.FeedbackWidget
class UFeedbackWidget : public UUserWidget
{
public:
	class UFeedbackCanvasPanel*                  FeedbackPanel;                                     // 0x260(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        VisibilityTime;                                    // 0x268(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        VisibilityTimer;                                   // 0x26C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FFeedbackSingleData                   CurrentFeedbackSingleData;                         // 0x270(0x30)(NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UFeedbackWidget* GetDefaultObj();

};

// 0x238 (0x370 - 0x138)
// Class Solarland.FireInputWidget
class UFireInputWidget : public UWidget
{
public:
	struct FSlateBrush                           JoyStickThumb;                                     // 0x138(0x98)(Edit, NativeAccessSpecifierPrivate)
	struct FSlateBrush                           JoyStickThumbPress;                                // 0x1D0(0x98)(Edit, NativeAccessSpecifierPrivate)
	struct FSlateBrush                           JoyStickIcon;                                      // 0x268(0x98)(Edit, NativeAccessSpecifierPrivate)
	struct FVector2D                             VisualSize;                                        // 0x300(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector2D                             ThumbSize;                                         // 0x308(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector2D                             InputScale;                                        // 0x310(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector2D                             IconSize;                                          // 0x318(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        ActiveOpacity;                                     // 0x320(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        InactiveOpacity;                                   // 0x324(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        TimeUntilDeactive;                                 // 0x328(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bPreventReCenter;                                  // 0x32C(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1A70[0x13];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnJoystickPressed;                                 // 0x340(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnJoystickRelease;                                 // 0x350(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnInputYawAndPitch;                                // 0x360(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UFireInputWidget* GetDefaultObj();

	void SetJoyStickThumbBrush(struct FButtonStyle& ButtonStyle);
	void SetJoyStickIcon(struct FSlateBrush& Icon);
	void SetInputScale(const struct FVector2D& Scale);
	void ResetControlInput();
};

// 0x20 (0x48 - 0x28)
// Class Solarland.GameArgs
class UGameArgs : public UObject
{
public:
	uint8                                        Pad_1A76[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FString>                        CommandLineArgs;                                   // 0x30(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         SkipTutorial;                                      // 0x40(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1A77[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGameArgs* GetDefaultObj();

	bool ExecGameArgs(const class FString& Args, class FString* FailReason);
};

// 0xF80 (0x11A8 - 0x228)
// Class Solarland.GameDataManager
class AGameDataManager : public AGameManagerBase
{
public:
	uint8                                        Pad_1A81[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<int32>                                IntegerValues;                                     // 0x230(0x10)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<float>                                FloatValues;                                       // 0x240(0x10)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<uint8>                                ByteValues;                                        // 0x250(0x10)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<bool>                                 BoolValues;                                        // 0x260(0x10)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FVector>                       FVectorValues;                                     // 0x270(0x10)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class FString>                        FStringValues;                                     // 0x280(0x10)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1A82[0x60];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSCMHostData                          GlobalDataMap;                                     // 0x2F0(0x488)(BlueprintVisible, BlueprintReadOnly, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TMap<class FString, struct FSCMHostData>     SideDataMap;                                       // 0x778(0x50)(BlueprintVisible, BlueprintReadOnly, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TMap<class FString, struct FSCMHostData>     PlayerDataMap;                                     // 0x7C8(0x50)(BlueprintVisible, BlueprintReadOnly, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FSCMHostData                          SideDataDefaultTemplate;                           // 0x818(0x488)(BlueprintVisible, BlueprintReadOnly, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FSCMHostData                          PlayerDataDefaultTemplate;                         // 0xCA0(0x488)(BlueprintVisible, BlueprintReadOnly, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TMap<class FString, class URank*>            RanKMap;                                           // 0x1128(0x50)(Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1A83[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UDataTable*                            DataTable;                                         // 0x1198(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDataTable*                            GeneralDataTable;                                  // 0x11A0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class AGameDataManager* GetDefaultObj();

	void RemoveHost(enum class ESCMHostType HostType, const class FString& HostID);
	void RemoveData(enum class ESCMHostType HostType, const class FString& HostID, const class FString& DataName, enum class ESCMDataSetType DataSetType);
	void NotifyRemoveHost(enum class ESCMHostType HostType, const class FString& HostID);
	void AddDataByTableRow(class FName RowName, struct FSCMDataBoardRow& InTableRow);
};

// 0x8 (0xD8 - 0xD0)
// Class Solarland.GameEventComponent
class UGameEventComponent : public UGameModeCompBase
{
public:
	float                                        WorldTime;                                         // 0xD0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1A88[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGameEventComponent* GetDefaultObj();

	void ReceiveInit();
	void InitializeEventList();
	int32 GetAliveCount();
	void CheckEventList(float DeltaTime);
};

// 0x218 (0x440 - 0x228)
// Class Solarland.GameJobManager
class AGameJobManager : public AGameManagerBase
{
public:
	FMulticastInlineDelegateProperty_            SideListChangeEvent;                               // 0x228(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<struct FSCMSideData>                  SideData;                                          // 0x238(0x10)(Net, ZeroConstructor, RepNotify, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<class FString, uint32>                  SideIndexMap;                                      // 0x248(0x50)(NativeAccessSpecifierPrivate)
	TMap<class FString, class ASCMPlayerState*>  PlayerIndexMap;                                    // 0x298(0x50)(NativeAccessSpecifierPrivate)
	TArray<class ASCMPlayerState*>               OBPlayerList;                                      // 0x2E8(0x10)(Net, ZeroConstructor, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1AC2[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UDataTable*                            JobDataTable;                                      // 0x318(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSideAttributeSetArray                SideAttributeSets;                                 // 0x320(0x120)(Net, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class AGameJobManager* GetDefaultObj();

	bool SwitchPlayerSideAndJob(class ASCMPlayerState* PlayerA, class ASCMPlayerState* PlayerB);
	bool SwitchPlayers(class ASCMPlayerState* PlayerA, class ASCMPlayerState* PlayerB);
	bool SwitchPlayerPosInTeam(class ASCMPlayerState* PlayerA, class ASCMPlayerState* PlayerB);
	bool SwitchOBPlayerAndPlayer(class ASCMPlayerState* OBPlayer, class ASCMPlayerState* Player);
	void SideListChangeEvent__DelegateSignature(TArray<struct FSCMSideData>& SideList);
	void SetTimerToNoticeSideDataChanged();
	void ServerSidePosInTeamChange(const class FString& SideName);
	bool PreAssignOBToPlayer(class ASCMPlayerState* Player);
	bool PreAssignJobToPlayer(class ASCMPlayerState* Player, const class FString& Side, const class FString& Job, int32 PosInTeam);
	void OnRep_SideDataList();
	void OnRep_OBPlayerList();
	void OnPlayerStateEndPlay(class AActor* PlayerState, enum class EEndPlayReason EndPlayReason);
	void OnOBPlayerListChanged(class ASCMPlayerState* ChangedPlayer);
	bool IsPlayerSameTeam(class ASCMPlayerState* TargetPlayer, const class FString& TargetPlayerId);
	bool IsExistSide(const class FString& NewSide);
	TArray<int32> GetTeamAssignableNumArray();
	bool GetSidePreJoinPlayerList(const class FString& SideName, TArray<class ASCMPlayerState*>* OutPreJoinPlayerList);
	bool GetSidePlayerList(const class FString& SideName, TArray<class ASCMPlayerState*>* OutPlayerList);
	bool GetSideJobPlayerList(const class FString& SideName, const class FString& JobName, TArray<class ASCMPlayerState*>* OutPlayerList);
	bool GetSideData(const class FString& InSideName, struct FSCMSideData* OutData);
	bool GetSideAttributeSet(struct FSideAttributeSet* OutSet, const class FString& InSideName);
	bool GetPreOBPlayerIDList(TArray<class FString>* OutPlayerIDList);
	class ASCMPlayerState* GetPlayerByPlayerID(const class FString& InPlayerID);
	bool GetOBPlayerList(TArray<class ASCMPlayerState*>* OutPlayerList);
	bool GetJobDataBySideAndJob(const class FString& NewSide, const class FString& NewJob, struct FSCMJobData* OutData);
	int32 GetAssignedSideCount();
	int32 GetAllSidePlayerNumber();
	TArray<struct FSCMSideData> GetAllSideData();
	bool ChangePlayerToOB(class ASCMPlayerState* Player);
	bool ChangePlayerJob(class ASCMPlayerState* Player, const class FString& NewSide, const class FString& NewJob, int32 PosInTeam);
};

// 0xA0 (0xD8 - 0x38)
// Class Solarland.LevelWorldCompositionSetting
class ULevelWorldCompositionSetting : public UDeveloperSettings
{
public:
	TMap<struct FSoftObjectPath, struct FVector> BackupLevelStreamingLocationMap;                   // 0x38(0x50)(Edit, Config, NativeAccessSpecifierPublic)
	TMap<struct FSoftObjectPath, struct FLoadingScreenLevelData> LoadingScreenLevelData;                            // 0x88(0x50)(Edit, Config, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class ULevelWorldCompositionSetting* GetDefaultObj();

};

// 0x250 (0x478 - 0x228)
// Class Solarland.GameLevelManager
class AGameLevelManager : public AGameManagerBase
{
public:
	uint8                                        Pad_1AC8[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                DesiredLoadLevel;                                  // 0x248(0x10)(Net, ZeroConstructor, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1AC9[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FString>                        DesiredLoadElementLevels;                          // 0x268(0x10)(Net, ZeroConstructor, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class FString>                        DesiredUnLoadElementLevels;                        // 0x278(0x10)(Net, ZeroConstructor, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1ACA[0xA8];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<class FString, class ULevelStreamingDynamic*> LevelKeyToObject;                                  // 0x330(0x50)(NativeAccessSpecifierPrivate)
	TSet<class ASolarCharacter*>                 MovementDisabledCharacters;                        // 0x380(0x50)(NativeAccessSpecifierPrivate)
	uint8                                        Pad_1ACB[0x60];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FString>                        LoadingElementLevelNames;                          // 0x430(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class FString>                        UnLoadingElementLevelNames;                        // 0x440(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1ACC[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class AGameMapElementManager*                MapElementManager;                                 // 0x468(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1ACD[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AGameLevelManager* GetDefaultObj();

	void SetMinimapFootprintVisible(bool bVisible);
	void OnStreamingLevelLoaded();
	void OnScoutPlayerDepart();
	void OnRep_DesiredUnLoadElementLevels();
	void OnRep_DesiredLoadLevel();
	void OnRep_DesiredLoadElementLevels();
	void OnLevelLoaded();
	void OnElementStreamingLevelUnLoaded();
	void OnElementStreamingLevelLoaded();
	void OnCharacterEndPlay(class AActor* Actor, enum class EEndPlayReason EndPlayReason);
	void LevelManagerTick();
	int32 GetCurrentMapID();
	class FString GetCurrentLevel();
};

// 0xC0 (0x2E8 - 0x228)
// Class Solarland.GameMapElementManager
class AGameMapElementManager : public AGameManagerBase
{
public:
	TMap<class FString, class ASCMMapElementBase*> MapElementListWithID;                              // 0x228(0x50)(NativeAccessSpecifierPrivate)
	TArray<class ASCMMapElementBase*>            MapElementList;                                    // 0x278(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class ASCMPlayerStart*>               PlayerStartList;                                   // 0x288(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1AD0[0x50];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AGameMapElementManager* GetDefaultObj();

	void OnAddNewMapElement(class AActor* InNewActor);
};

// 0x80 (0xA8 - 0x28)
// Class Solarland.GameModeGlobalSetting
class UGameModeGlobalSetting : public UObject
{
public:
	FMulticastInlineDelegateProperty_            OnGlobalSettingChanged;                            // 0x28(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                         bCanVJetInWater;                                   // 0x38(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCanHJetInWater;                                   // 0x39(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bOverrideVJetCD;                                   // 0x3A(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1ADA[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        OverridenVJetCD;                                   // 0x3C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bOverrideHJetCD;                                   // 0x40(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1ADB[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        OverridenHJetCD;                                   // 0x44(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bEnableJetCost;                                    // 0x48(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EJetAltitudeLimitationMode        JetAltitudeLimitationMode;                         // 0x49(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bEnableEnergyCost;                                 // 0x4A(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bEnableDamage;                                     // 0x4B(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bEnableTeamDamage;                                 // 0x4C(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bEnableMinHPLock;                                  // 0x4D(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1ADD[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MinHPToLock;                                       // 0x50(0x4)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bEnableSkydiveFollowMovement;                      // 0x54(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bEnableBigMap;                                     // 0x55(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bShowVehicleOnMap;                                 // 0x56(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1ADE[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        KillStreakEndNoticeNumber;                         // 0x58(0x4)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        KillLeaderMinKillNumber;                           // 0x5C(0x4)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bShowRevengeNotice;                                // 0x60(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bShowKillStreakEndNotice;                          // 0x61(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bShowTotalKillNotice;                              // 0x62(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bShowKillDownNotice;                               // 0x63(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bShowKillLeaderNotice;                             // 0x64(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bShowKillLeaderShutDownNotice;                     // 0x65(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bShowClearTeamNotice;                              // 0x66(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EWeaponInfiniteAmmoMode           WeaponInfiniteAmmoMode;                            // 0x67(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bEnableWeaponPartEffectTip;                        // 0x68(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1AE3[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<float>                                WeaponLevelDamageFactorArray;                      // 0x70(0x10)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, RepNotify, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bDestroyItemOnDiscard;                             // 0x80(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bDestroyWeaponOnDiscard;                           // 0x81(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCanRebirth;                                       // 0x82(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCanLoginBattle;                                   // 0x83(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bEnableBattlePrompt;                               // 0x84(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bEnableBattlePrompt_BeginPlay;                     // 0x85(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bEnableOpponentPerspective;                        // 0x86(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bKillPlayerWhenOut;                                // 0x87(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        ConfigGameModeId;                                  // 0x88(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bEnableEnemyNameMark;                              // 0x8C(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1AE4[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        EnableEnemyNameMarkDistance;                       // 0x90(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        EnemyNameMarkDuration;                             // 0x94(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        SummonedAirDropMaxSum;                             // 0x98(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SummonedAirDropLifeTime;                           // 0x9C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SummonedAirDropDestroyEffectTime;                  // 0xA0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1AE6[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGameModeGlobalSetting* GetDefaultObj();

	void SetWeaponInfiniteAmmoMode(enum class EWeaponInfiniteAmmoMode NewValue);
	void SetTeamDamageEnabled(bool bNewValue);
	void SetSkydiveFollowMovementEnabled(bool bNewValue);
	void SetShowVehicleOnMap(bool bNewValue);
	void SetShowTotalKillNotice(bool InShowTotalKillNotice);
	void SetShowShowClearTeamNotice(bool InShowClearTeamNotice);
	void SetShowRevengeNotice(bool InShowRevengeNotice);
	void SetShowKillStreakEndNotice(bool InShowKillStreakEndNotice);
	void SetShowKillLeaderShutDownNotice(bool InShowKillLeaderShutDownNotice);
	void SetShowKillLeaderNotice(bool InShowKillLeaderNotice);
	void SetShowKillDownNotice(bool InShowKillDownNotice);
	void SetMinHPToLock(float NewValue);
	void SetMinHPLockEnabled(bool bNewValue);
	void SetKillStreakEndNoticeNumber(int32 InKillStreakEndNoticeNumber);
	void SetKillPlayerWhenOut(bool bNewValue);
	void SetKillLeaderMinKillNumber(int32 InKillLeaderMinKillNumber);
	void SetJetCostEnabled(bool bNewValue);
	void SetJetAltitudeLimitationMode(enum class EJetAltitudeLimitationMode NewValue);
	void SetGameCanRebirth(bool bNewValue);
	void SetEnergyCostEnabled(bool bNewValue);
	void SetDamageEnabled(bool bNewValue);
	void SetCanVJetInWater(bool bNewValue);
	void SetCanLoginBattle(bool bNewValue);
	void SetCanHJetInWater(bool bNewValue);
	void SetBigMapEnabled(bool bNewValue);
	void ReceiveSettingChanged();
	bool IsVJetCDOverriden();
	bool IsTeamDamageEnabled();
	bool IsSkydiveFollowMovementEnabled();
	bool IsShowVehicleOnMap();
	bool IsShowTotalKillNotice();
	bool IsShowRevengeNotice();
	bool IsShowKillStreakEndNotice();
	bool IsShowKillLeaderShutDownNotice();
	bool IsShowKillLeaderNotice();
	bool IsShowKillDownNotice();
	bool IsShowClearTeamNotice();
	bool IsOpponentPerspectiveEnabled();
	bool IsMinHPLockEnabled();
	bool IsKillPlayerWhenOut();
	bool IsJetCostEnabledEnabled();
	bool IsHJetCDOverriden();
	bool IsGameCanRebirth();
	bool IsGameCanLoginBattle();
	bool IsEnergyCostEnabled();
	bool IsEnableWeaponPartEffectTip();
	bool IsDestroyWeaponOnDiscard();
	bool IsDestroyItemOnDiscard();
	bool IsDamageEnabled();
	bool IsBigMapEnabled();
	enum class EWeaponInfiniteAmmoMode GetWeaponInfiniteAmmoMode();
	float GetOverridenVJetCD();
	float GetOverridenHJetCD();
	float GetMinHPToLock();
	int32 GetKillStreakEndNoticeNumber();
	int32 GetKillLeaderMinKillNumber();
	enum class EJetAltitudeLimitationMode GetJetAltitudeLimitationMode();
	float GetDamageFactorByWeaponLevel(int32 InWeaponLevel);
	int32 GetConfigGameModeId();
	bool CanVJetInWater();
	bool CanHJetInWater();
};

// 0x0 (0x28 - 0x28)
// Class Solarland.GameModeSettingInterface
class IGameModeSettingInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IGameModeSettingInterface* GetDefaultObj();

	class UGameModeGlobalSetting* GetGameModeSetting();
};

// 0x50 (0x78 - 0x28)
// Class Solarland.GameplayTagReflectorSetting
class UGameplayTagReflectorSetting : public UObject
{
public:
	TMap<class FName, struct FSoftObjectPath>    ReflectedTagsSet;                                  // 0x28(0x50)(Edit, Config, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UGameplayTagReflectorSetting* GetDefaultObj();

};

// 0x50 (0x80 - 0x30)
// Class Solarland.GameplayVibrateDataAsset
class UGameplayVibrateDataAsset : public UDataAsset
{
public:
	TMap<enum class EGameplayVibrateCategory, struct FVibrateIntensityPlayParams> CategoryIntensityMap;                              // 0x30(0x50)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UGameplayVibrateDataAsset* GetDefaultObj();

};

// 0x28 (0x60 - 0x38)
// Class Solarland.GameplayVibrateSettings
class UGameplayVibrateSettings : public UDeveloperSettings
{
public:
	TSoftObjectPtr<class UGameplayVibrateDataAsset> GameplayVibrateConfig;                             // 0x38(0x28)(Edit, Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UGameplayVibrateSettings* GetDefaultObj();

};

// 0x20 (0x248 - 0x228)
// Class Solarland.GameReviveItemManager
class AGameReviveItemManager : public AGameManagerBase
{
public:
	int32                                        MaxReviveUsage;                                    // 0x228(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ReviveItemRepoTime;                                // 0x22C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ReviveProximityRadius;                             // 0x230(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ReviveHeight;                                      // 0x234(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ReviveWaitTime;                                    // 0x238(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bGlobalUseRevieItem;                               // 0x23C(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1AF3[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DownedReviveButtonDelayTime;                       // 0x240(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1AF4[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AGameReviveItemManager* GetDefaultObj();

	void SetGlobalUseReviveItem(bool InCanUseItem);
	bool PlayerTryUseReviveItem(class ASolarPlayerState* InPlayerState, int32 InUseNum);
	void OnTeammateReviveManagerRefresh();
	void OnStartReviveItemRecycleCountDownDataRequested();
	void OnRep_GlobalUseRevieItem();
	bool IsPlayerReviving(class ASolarPlayerState* InPlayerState);
	float GetReviveWaitTime();
	float GetReviveProximityRadius();
	float GetReviveItemRepoTime();
	int32 GetReviveItemID();
	float GetReviveHeight();
	int32 GetPlayerReviveItemNum(class ASolarPlayerState* InPlayerState);
	int32 GetMaxReviveUsage();
	float GetDownedReviveButtonDelayTime();
	void ClearAllPlayersReviveItem();
	bool CanPlayerUseReviveItem(class ASolarPlayerState* InPlayerState, bool bCheckItemNum);
	bool CanGlobalUseReviveItem();
};

// 0x88 (0xB0 - 0x28)
// Class Solarland.Rank
class URank : public UObject
{
public:
	TMap<uint32, FMulticastInlineDelegateProperty_> SpecificRankChangeEventMap;                        // 0x28(0x50)(ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<struct FSCMRankListMulticast>         RankListChangeMulticasts;                          // 0x78(0x10)(ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1AF6[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	enum class ESCMDataRankType                  RankType;                                          // 0xA8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ESCMHostType                      HostType;                                          // 0xA9(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1AF7[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class URank* GetDefaultObj();

};

// 0x68 (0x2C8 - 0x260)
// Class Solarland.GaugeImage
class UGaugeImage : public UUserWidget
{
public:
	enum class EGaugeType                        GaugeType;                                         // 0x260(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bInvert;                                           // 0x261(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1AF9[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector2D                             ImageSize;                                         // 0x264(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        InitialDegree;                                     // 0x26C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSymmetric;                                        // 0x270(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1AFA[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector2D                             CenterOffset;                                      // 0x274(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1AFB[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UObject*                               ResourceObject;                                    // 0x280(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Progress;                                          // 0x288(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1AFC[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UMaterialInterface*                    MaterialDegree360;                                 // 0x290(0x8)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                    MaterialDegree180;                                 // 0x298(0x8)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                    MaterialDegree90;                                  // 0x2A0(0x8)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                    MaterialDegreeLR;                                  // 0x2A8(0x8)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                    MaterialDegreeUD;                                  // 0x2B0(0x8)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                TargetImage;                                       // 0x2B8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMaterialInstanceDynamic*              MaterialInstance;                                  // 0x2C0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UGaugeImage* GetDefaultObj();

	void UpdateProgress(float InProgress);
	void SetProgress(float InProgress);
	void SetImage(class UObject* RO);
	class UImage* GetInternalImage();
};

// 0x8 (0x38 - 0x30)
// Class Solarland.SolarDataAsset
class USolarDataAsset : public UDataAsset
{
public:
	uint8                                        Pad_1AFE[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarDataAsset* GetDefaultObj();

	void InitFromAsset();
};

// 0xC0 (0xF8 - 0x38)
// Class Solarland.GlobalVehicleWeaponConfig
class UGlobalVehicleWeaponConfig : public USolarDataAsset
{
public:
	TArray<struct FAssitLockBoneWeight>          AssistLockBoneWeight;                              // 0x38(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FAssitLockBoneWeight>          SortAssistLockBoneWeight;                          // 0x48(0x10)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CoefficientHUD;                                    // 0x58(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CoefficientWorld;                                  // 0x5C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CoefficientHUDUnlock;                              // 0x60(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CoefficientWorldUnlock;                            // 0x64(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HudDistFromAssistLockPawnToSecondReticle;          // 0x68(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1AFF[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRuntimeFloatCurve                    AssistLockUIScaleCurve;                            // 0x70(0x88)(Edit, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UGlobalVehicleWeaponConfig* GetDefaultObj();

};

// 0x658 (0x690 - 0x38)
// Class Solarland.GlobalWeaponConfig
class UGlobalWeaponConfig : public USolarDataAsset
{
public:
	struct FWeaponAttributeGameplayTags          WeaponAttributeTags;                               // 0x38(0x18)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	enum class EAimTraceOriginType               AimTraceOriginType;                                // 0x50(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B03[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MuzzleInWallCheckDistance;                         // 0x54(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpreadSmoothSpeed;                                 // 0x58(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableNewShoot;                                   // 0x5C(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableGunEndShake;                                // 0x5D(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableRecoilRecovery;                             // 0x5E(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bRecoilRecoveryBlockGunEndShake;                   // 0x5F(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RecoilRecoveryScale;                               // 0x60(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EAimOffsetAdjustType              AimOffsetAdjustType;                               // 0x64(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B04[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector2D                             StandardViewportSize;                              // 0x68(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StandardDPIScale;                                  // 0x70(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bWeaponReceiveShadow;                              // 0x74(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B05[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UDataTable*                            WeaponScopeSensitivityTable;                       // 0x78(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSecondLimitFullForGameDrop;                       // 0x80(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B06[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DoScopeInterval;                                   // 0x84(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DoScopeMixedTimeThreshold;                         // 0x88(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SprintingFireDelay;                                // 0x8C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<TSubclassOf<class AActor>, struct FWeaponHitResponse> WeaponHitResponseClassMap;                         // 0x90(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TMap<class FName, struct FWeaponHitResponse> WeaponHitResponseTagMap;                           // 0xE0(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TMap<TSubclassOf<class AActor>, struct FWeaponHitResponse> WeaponHitResponseSameTeamClassMap;                 // 0x130(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TMap<class FName, struct FWeaponHitResponse> WeaponHitResponseSameTeamTagMap;                   // 0x180(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                    HitEffectScaleRuntimeCurve;                        // 0x1D0(0x88)(Edit, NativeAccessSpecifierPublic)
	bool                                         bCanOperateWhenOverload;                           // 0x258(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B07[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRuntimeFloatCurve                    WeaponCrosshairSpreadSpeedRuntimeCurve;            // 0x260(0x88)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                    WeaponCrosshairBackSpeedRuntimeCurve;              // 0x2E8(0x88)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                        WeaponSkillDataUIDisplayDistance;                  // 0x370(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PriamayFireIgnoreInterval;                         // 0x374(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AssistAimAutoFireRadius;                           // 0x378(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B08[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<enum class ECollisionChannel>         AssistAimAutoFireBlockTypes;                       // 0x380(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWeaponAssistAimConfig*                AssistAimConfig;                                   // 0x390(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                       PartUpgradeMaterial;                               // 0x398(0x18)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PartUpgradeFadeInterval;                           // 0x3B0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B09[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<enum class EPosture, class FString>     CharaterPostureMap;                                // 0x3B8(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 BlockCharacterSprintTags;                          // 0x408(0x20)(Edit, NativeAccessSpecifierPublic)
	class UDataTable*                            WeaponPartEffectDescTable;                         // 0x428(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        WeaponPartEffectTipMaxinum;                        // 0x430(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B0A[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<enum class ESolarHitType, class FString> HitFeedbackMapForUI;                               // 0x438(0x50)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                        CrosshairAimEnemyEndTimeForPlayerWeapon;           // 0x488(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CrosshairAimEnemyEndTimeForVehicleWeapon;          // 0x48C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<int32, enum class EPassiveTriggeredVoice> AudioPromptForNoAmmoTable;                         // 0x490(0x50)(Edit, NativeAccessSpecifierPublic)
	TMap<enum class EWeaponType, class FName>    WeaponEquipSound;                                  // 0x4E0(0x50)(Edit, NativeAccessSpecifierPublic)
	TMap<enum class EWeaponType, class FName>    WeaponUnequipSound;                                // 0x530(0x50)(Edit, NativeAccessSpecifierPublic)
	TMap<enum class EWeaponType, class FName>    WeaponOpenScopeSound;                              // 0x580(0x50)(Edit, NativeAccessSpecifierPublic)
	TMap<enum class EWeaponType, class FName>    WeaponCloseScopeSound;                             // 0x5D0(0x50)(Edit, NativeAccessSpecifierPublic)
	int32                                        WeaponSummonBlockNoticeID;                         // 0x620(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        WeaponSummonOverRangeNoticeID;                     // 0x624(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDataTable*                            WeaponSkinTable;                                   // 0x628(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<enum class EWeaponPartType, class FName> PartSocketNameTable;                               // 0x630(0x50)(Edit, NativeAccessSpecifierPublic)
	class UDataTable*                            WeaponLODTable;                                    // 0x680(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EnableHeadShotDamageMinScale;                      // 0x688(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B0B[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGlobalWeaponConfig* GetDefaultObj();

	class FString GetStateByPosture(enum class EPosture Posture);
	class FString GetStateByAnimState(enum class ECharacterStateForWeapon CharacterState);
	bool GetIsGroundByAnimState(enum class ECharacterStateForWeapon CharacterState);
};

// 0x0 (0x28 - 0x28)
// Class Solarland.GooglePADManager
class UGooglePADManager : public UObject
{
public:

	static class UClass* StaticClass();
	static class UGooglePADManager* GetDefaultObj();

	enum class EGooglePADErrorCode ShowCellularDataConfirmation();
	enum class EGooglePADErrorCode RequestRemoval(const class FString& Name);
	enum class EGooglePADErrorCode RequestInfo(TArray<class FString>& AssetPacks);
	enum class EGooglePADErrorCode RequestDownload(TArray<class FString>& AssetPacks);
	void ReleaseDownloadState(int32 State);
	void ReleaseAssetPackLocation(int32 Location);
	bool IsGooglePlayPkg();
	bool IsAssetPackReady(const class FString& Name);
	int32 GetTotalBytesToDownload(int32 State);
	enum class EGooglePADStorageMethod GetStorageMethod(int32 Location);
	enum class EGooglePADErrorCode GetShowCellularDataConfirmationStatus(enum class EGooglePADCellularDataConfirmStatus* Status);
	enum class EGooglePADDownloadStatus GetDownloadStatus(int32 State);
	enum class EGooglePADErrorCode GetDownloadState(const class FString& Name, int32* State);
	int32 GetBytesDownloaded(int32 State);
	class FString GetAssetsPath(int32 Location);
	enum class EGooglePADErrorCode GetAssetPackLocation(const class FString& Name, int32* Location);
	TArray<class FString> GetAllAssetPackNames();
};

// 0x70 (0x3B8 - 0x348)
// Class Solarland.SolarWeaponBulletContainerWidget
class USolarWeaponBulletContainerWidget : public USolarUserWidget
{
public:
	uint8                                        Pad_1B25[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<enum class EWeaponType, struct FSolarBulletContainerLayout> BulletContainerStorageLayout;                      // 0x350(0x50)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FBulletContainerColor                 BulletColor;                                       // 0x3A0(0x8)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	class UCanvasPanel*                          RootPanel;                                         // 0x3A8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        CurrentMaxAmmo;                                    // 0x3B0(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EWeaponType                       CurrentWeaponType;                                 // 0x3B4(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1B26[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarWeaponBulletContainerWidget* GetDefaultObj();

};

// 0x80 (0x438 - 0x3B8)
// Class Solarland.GridBulletContainer
class UGridBulletContainer : public USolarWeaponBulletContainerWidget
{
public:
	class UProgressBar*                          BulletContainer;                                   // 0x3B8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOverlay*                              LightOverlay;                                      // 0x3C0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOverlay*                              LightAllOverlay;                                   // 0x3C8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Img_FakeBullet;                                    // 0x3D0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Img_BulletMask;                                    // 0x3D8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Img_Light;                                         // 0x3E0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Img_BulletGrid;                                    // 0x3E8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Img_Light_Recharge_Empty;                          // 0x3F0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                          Panel_Empty;                                       // 0x3F8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Img_BulletEmpty;                                   // 0x400(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Light_Anim;                                        // 0x408(0x8)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      LightAll_Anim;                                     // 0x410(0x8)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Recharge_Empty_Anim;                               // 0x418(0x8)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                             OneBulletSize;                                     // 0x420(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1B2D[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGridBulletContainer* GetDefaultObj();

	bool RequestUpdateMaxAmmoCount(int32 InMaxAmmo, bool bIgnoreAmmoCount);
	void ReceiveUpdateMaxAmmoEvent(int32 InMaxAmmo);
	void ReceiveUpdateBulletEvent(int32 ReservedAmmo, bool bIsReloading, bool bIsFirstIn);
	void ReceiveUpdateAllBulletEvent();
	void ReceiveReloadFinishEvent(bool bIsReloadSuccess);
};

// 0xC8 (0xF8 - 0x30)
// Class Solarland.GyroscopeConfig
class UGyroscopeConfig : public UDataAsset
{
public:
	class UDataTable*                            DataTab;                                           // 0x30(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDataTable*                            GyroscopeSensitivityDataTab;                       // 0x38(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDataTable*                            GyroscopeDeviceModelDataTab;                       // 0x40(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1B2F[0xB0];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UGyroscopeConfig* GetDefaultObj();

};

// 0x48 (0x70 - 0x28)
// Class Solarland.HeroPickCharacterData
class UHeroPickCharacterData : public UObject
{
public:
	int32                                        CharacterId;                                       // 0x28(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SkinId;                                            // 0x2C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CharacterProficiencyLevel;                         // 0x30(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B32[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EHeroOwnedType                    OwnType;                                           // 0x3C(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B34[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        ConfigSortNum;                                     // 0x40(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B35[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                HeroName;                                          // 0x48(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<int32>                                SelectedPlayerPos;                                 // 0x58(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ConfirmPos;                                        // 0x68(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B36[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHeroPickCharacterData* GetDefaultObj();

};

// 0x18 (0x360 - 0x348)
// Class Solarland.HeroPickCharacterCell
class UHeroPickCharacterCell : public USolarUserWidget
{
public:
	uint8                                        Pad_1B3A[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UHeroPickCharacterData*                DataObj;                                           // 0x350(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1B3B[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHeroPickCharacterCell* GetDefaultObj();

	void UpdateHeroIconAndName(const class FString& Name, TSoftObjectPtr<class UTexture2D>& IconPath);
	void ShowSelecting(bool bShow);
	void ShowConfirm();
	void SetSelect(int32 PosInTeam);
	void SetProficiencyTypeIcon(int32 ProficiencyLevel);
	void SetClassTypeIcon(TSoftObjectPtr<class UTexture2D>& IconPath);
	void ClearSelect();
	void BP_ShowLockState(enum class EUIHeroPickListCellState UiState);
};

// 0x0 (0x348 - 0x348)
// Class Solarland.HeroPickDetail
class UHeroPickDetail : public USolarUserWidget
{
public:

	static class UClass* StaticClass();
	static class UHeroPickDetail* GetDefaultObj();

	void UpdateCharacterDetails(int32 CharacterId);
	void RefreshSkillInfo(int32 SkillType, const class FString& Attribute, const class FString& SkillName, const class FString& SkillDescription, TSoftObjectPtr<class UTexture2D>& SkillIcon);
};

// 0x50 (0x278 - 0x228)
// Class Solarland.HeroPickInfo
class AHeroPickInfo : public AInfo
{
public:
	class FString                                SideName;                                          // 0x228(0x10)(Net, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EHeroPickType                     HeroPickType;                                      // 0x238(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1B4E[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        TeammateNumMode;                                   // 0x23C(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UHeroPickWidget*                       HeroPickWidget;                                    // 0x240(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FPlayerSelectInfo>             PlayerSelectInfos;                                 // 0x248(0x10)(Net, ZeroConstructor, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        HeroPickTime;                                      // 0x258(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1B50[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        WaitingToStartTime;                                // 0x260(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        CurrentPickPlayerIndex;                            // 0x264(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        Duration;                                          // 0x268(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1B52[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AHeroPickInfo* GetDefaultObj();

	void OnRep_WaitingToStartTime();
	void OnRep_SelectPlayerChange();
	void OnRep_PlayerSelectInfos();
	void OnRep_HeroPickTime();
};

// 0x50 (0x278 - 0x228)
// Class Solarland.HeroPickManager
class AHeroPickManager : public AGameManagerBase
{
public:
	TArray<class AHeroPickInfo*>                 HeroPickArray;                                     // 0x228(0x10)(ZeroConstructor, Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        HeroPickTime;                                      // 0x238(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TransitionAnimTime;                                // 0x23C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        WaitingToStartTime;                                // 0x240(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        WaitingForEndTime;                                 // 0x244(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHeroPickRuleBase*                     AIPickRule;                                        // 0x248(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FSoftObjectPath>               ElementLevels;                                     // 0x250(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsAllPlayerSelecting;                             // 0x260(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1B58[0x17];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AHeroPickManager* GetDefaultObj();

	bool SideBeginHeroPick(const class FString& SideName);
	void SetHeroPickTime(float InHeroPickTime);
	void ReceiveSidePickHeroEnd(const class FString& SideName);
	void ReceiveAllHeroPickEnd();
	bool PlayerBeginHeroPick(class ASolarPlayerState* Player);
	void On_RepAllPlayerSelectEnd();
	void AllPlayersGotoPickHero();
};

// 0x10 (0x358 - 0x348)
// Class Solarland.HeroPickPlayerSlot
class UHeroPickPlayerSlot : public USolarUserWidget
{
public:
	uint8                                        Pad_1B5F[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EUIHeroPickPlayerState            UiState;                                           // 0x350(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B60[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHeroPickPlayerSlot* GetDefaultObj();

	void UpdateSelectPercent(float Percent);
	void UpdateIconAndName(const class FString& HeroName, int32 HeroExpLevel, TSoftObjectPtr<class UTexture2D>& IconPath);
	void ShowConfirm();
	void SetPlayerPos(const class FString& PlayerName, uint8 InPosInTeam);
	void ChangeUIStage(enum class EUIHeroPickPlayerState State);
};

// 0x0 (0x28 - 0x28)
// Class Solarland.HeroPickRuleBase
class UHeroPickRuleBase : public UObject
{
public:

	static class UClass* StaticClass();
	static class UHeroPickRuleBase* GetDefaultObj();

};

// 0xA0 (0x3E8 - 0x348)
// Class Solarland.HeroPickWidget
class UHeroPickWidget : public USolarUserWidget
{
public:
	uint8                                        Pad_1B7A[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AHeroPickInfo*                         PickInfo;                                          // 0x350(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTileView*                             CharacterList;                                     // 0x358(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UHeroPickPlayerSlot*>           PlayerSlots;                                       // 0x360(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<int32, class UHeroPickCharacterData*>   SelectDataMap;                                     // 0x370(0x50)(NativeAccessSpecifierPublic)
	uint8                                        Pad_1B7B[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UHeroPickDetail*                       UI_HeroPick_Detail;                                // 0x3D8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CurrentSelectCharacterID;                          // 0x3E0(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         Enable3DLayout;                                    // 0x3E4(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B7C[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHeroPickWidget* GetDefaultObj();

	void ShowPlayerConfirm(int32 Pos);
	void ShowMyTurn(bool bShow);
	void ShowMainUICharacter(bool bShow);
	void SetMidCharacterNameAndIcon(int32 InCharacterId, int32 SkinId);
	void SetHeroHPAndSpeed(int32 HP, int32 Speed);
	void SetHeroFeatures(TArray<int32>& InHeroFeatures);
	void SetCountDowText(const class FString& Text);
	void SetClassNameAndIcon(const class FString& ClassName, TSoftObjectPtr<class UTexture2D>& ClassIcon);
	void SetCharacterNameAndIcon(const class FString& Name, const class FString& SkinName, TSoftObjectPtr<class UTexture2D>& CharacterIcon);
	void RefreshTacticalSkillIcon(TSoftObjectPtr<class UTexture2D>& TacticalSkillIcon);
	void RefreshSuperSkillIcon(TSoftObjectPtr<class UTexture2D>& SuperSkillIcon);
	void RefreshPassiveSKillIcon(TSoftObjectPtr<class UTexture2D>& PassiveSkillIcon);
	void PlayCharacterConfirmVoice(int32 SkinId);
	int32 GetTeammateNumMode();
	void Enable3DHeroPickLayout(bool Enalbe3DLayout);
	void Display3DHeroSelectedAnim(int32 CharacterId, int32 SkinId, bool IsConfirm);
	void ConfirmSelect();
	void BP_OnSelfConfirmSelected();
};

// 0xD0 (0x330 - 0x260)
// Class Solarland.HitTracesWidget
class UHitTracesWidget : public UUserWidget
{
public:
	class UCanvasPanel*                          DefaultHitTraceRoot;                               // 0x260(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                          MeleeHitTraceRoot;                                 // 0x268(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                          SniperHitTraceRoot;                                // 0x270(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                          VehicleHitTraceRoot;                               // 0x278(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        GaugeImageProgressMin;                             // 0x280(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        GaugeImageProgressMax;                             // 0x284(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1B8C[0xA8];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHitTracesWidget* GetDefaultObj();

	int32 UpdateHitTrace(int32 HitTraceID, enum class EHitTraceType HitTraceType, float WidgetAngle, float WidgetScale);
	void RemoveHitTrace(int32 HitTraceID);
	void ClearAllHitTraces();
	int32 AddHitTrace(int32 HitTraceID, enum class EHitTraceType HitTraceType, float WidgetAngle, float WidgetScale);
};

// 0x88 (0x6A0 - 0x618)
// Class Solarland.SolarCharacterMovementCompBase
class USolarCharacterMovementCompBase : public UCharacterMovementComponent
{
public:
	float                                        SimStepOptimizedDist;                              // 0x618(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1B8D[0x34];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        TimeDiscrepancyUploadThres;                        // 0x650(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1B8E[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSolarClientAdjustPositionInfo        CachedClientAdjustPositionInfo;                    // 0x658(0x38)(NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1B8F[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarCharacterMovementCompBase* GetDefaultObj();

};

// 0x1E0 (0x880 - 0x6A0)
// Class Solarland.SolarCharacterMovementComponent
class USolarCharacterMovementComponent : public USolarCharacterMovementCompBase
{
public:
	uint8                                        Pad_1B9D[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class ASolarCharacter*                       SolarCharacterOwner;                               // 0x6B0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DefaultUnscaledCapsuleHalfHeight;                  // 0x6B8(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DefaultLazyRefreshBonesDelay;                      // 0x6BC(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1B9E[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bKeepWalkSpeedOnTurning;                           // 0x6E0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1B9F[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MinJogSpeedScaleOnBlocked;                         // 0x6E4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinRunSpeedScaleOnBlocked;                         // 0x6E8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinSprintSpeedScaleOnBlocked;                      // 0x6EC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinCrawlSpeedScaleOnBlocked;                       // 0x6F0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinSwimSpeedScaleOnBlocked;                        // 0x6F4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinAccelerationProjectRatioForValidGroundSlide;    // 0x6F8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bOverrideFallingGravity;                           // 0x6FC(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1BA2[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        OverriddenFallingGravity;                          // 0x700(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FallingHorizontalSpeedUpperLimit;                  // 0x704(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxLocationDifferenceToTrustClientMove;            // 0x708(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EClientMoveTrustType              ClientMoveTrustType;                               // 0x70C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1BA3[0x35];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EAirMoveMode                      CurrentAirMoveMode;                                // 0x742(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EAirMoveMode                      LastAirMoveMode;                                   // 0x743(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FCustomJumpParams                     CustomJumpParams;                                  // 0x744(0xC)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FCustomJumpParams                     CustomLaunchParams;                                // 0x750(0xC)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1BA6[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UJetPackConfig*                        JetPackConfig;                                     // 0x768(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1BA7[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class USkydiveConfig*                        SkydiveConfig;                                     // 0x788(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1BA8[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        HinderAngel;                                       // 0x7B0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        HinderPercent;                                     // 0x7B4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        HinderZ;                                           // 0x7B8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        SwimSpeedWhenSprintLockConfig;                     // 0x7BC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SwimSpeedConfig;                                   // 0x7C0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SwimSpeedSmoothSpeed;                              // 0x7C4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SwimMaxFloatingUpSpeed;                            // 0x7C8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SwimMaxSinkingSpeed;                               // 0x7CC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class APhysicsVolume>         NextPhysicsVolume;                                 // 0x7D0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1BAB[0x7D];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bWantDeathVerge;                                   // 0x855(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1BAD[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DeathVergeBodyRadius;                              // 0x858(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DeathVergeHalfHeight;                              // 0x85C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1BAE[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                HangingTargetObj;                                  // 0x868(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               HangingTargetVelocity;                             // 0x870(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         UseHangingTargetVelocity;                          // 0x87C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         UseHangingTargetPos;                               // 0x87D(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1BAF[0x2];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarCharacterMovementComponent* GetDefaultObj();

	void UpdateCharacterStateAfterMovement__DelegateSignature(class USolarCharacterMovementComponent* MovementComponent, float DeltaTime);
	void SetHinderZ(float InHinderZ);
	void SetHinderAngel(float InHinderAngel);
	void OnMovementBaseChanged(class ACharacter* Character, class UPrimitiveComponent* OldBase, class UPrimitiveComponent* NewBase);
	void HinderUphill(struct FVector& SlopeNormal, struct FVector* MoveVelocity);
	enum class EPhysicalSurface GetSteppedSurfaceType();
	enum class EWalkMode GetLastWalkMode();
	enum class EWalkMode GetCurrentWalkMode();
	void ForcedJump();
};

// 0x80 (0x900 - 0x880)
// Class Solarland.HomeCharacterMovementComponent
class UHomeCharacterMovementComponent : public USolarCharacterMovementComponent
{
public:
	uint8                                        Pad_1BB9[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FServerMoveData>               ServerMoves;                                       // 0x8A8(0x10)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        NetSyncDeltaTime;                                  // 0x8B8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        VerifyDeltaTime;                                   // 0x8BC(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxDelayTime;                                      // 0x8C0(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bEnableMove;                                       // 0x8C4(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1BBA[0x13];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	int64                                        CurrentServerTime;                                 // 0x8D8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1BBB[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ConfigSyncDeltaTime;                               // 0x8E4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ConfigVerifyStepTime;                              // 0x8E8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        ConfigMaxDelay;                                    // 0x8EC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ConfigVerifyDistanceSquared;                       // 0x8F0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1BBD[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHomeCharacterMovementComponent* GetDefaultObj();

	void SetVerifyRate(float InDeltaTime);
	void SetNetSyncRate(float InDeltaTime);
	void SetMoveEnable(bool InMoveEnable);
	void SetMaxDelayTime(int32 InMaxDelayTime);
	void GetServerTimeNow();
};

// 0x8 (0x38 - 0x30)
// Class Solarland.HomeSyncActorSubsystem
class UHomeSyncActorSubsystem : public UWorldSubsystem
{
public:
	class UDataTable*                            HomeObjectTable;                                   // 0x30(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UHomeSyncActorSubsystem* GetDefaultObj();

	class UHomeSyncActorSubsystem* Get(class UObject* WorldContextObject);
	void CreateHomeActor_Server(struct FHomeActorServerData& CreateData);
};

// 0x130 (0x478 - 0x348)
// Class Solarland.HUD_ElectricShop
class UHUD_ElectricShop : public USolarUserWidget
{
public:
	class USolarButton*                          Btn_Close;                                         // 0x348(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHorizontalBox*                        Panel_RefreshTime;                                 // 0x350(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Img_BG_02;                                         // 0x358(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarTextBlock*                       Txt_Time;                                          // 0x360(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHorizontalBox*                        HorizontalBox_Title;                               // 0x368(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UElectricShop_Weapon*                  UI_ElectricityShop_Weapon_1;                       // 0x370(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UElectricShop_Weapon*                  UI_ElectricityShop_Weapon_2;                       // 0x378(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UElectricShop_Weapon*                  UI_ElectricityShop_Shield;                         // 0x380(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarListView*                        ListView_Goods;                                    // 0x388(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Anim_Enter;                                        // 0x390(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Text_Loop_Anim;                                    // 0x398(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                          Panel_Passive;                                     // 0x3A0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                          Panel_VIP;                                         // 0x3A8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHUD_PassiveHead*                      UI_Passive_Head;                                   // 0x3B0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                          Panel_Bullet;                                      // 0x3B8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarTextBlock*                       Txt_Passive;                                       // 0x3C0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHUD_PassiveHead*                      UI_Passive_Head_1;                                 // 0x3C8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1BFD[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FLinearColor                          TimeTextDefaultColor;                              // 0x3E8(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                          TimeTextAlertColor;                                // 0x3F8(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                AkSoundShopShow;                                   // 0x408(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                AkSoundShopHide;                                   // 0x418(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        PreloadListItemNum;                                // 0x428(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1BFF[0xF];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UObject*>                       ShopItems;                                         // 0x438(0x10)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UElectricShop_Weapon*>          WeaponUpgradePanels;                               // 0x448(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1C01[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHUD_ElectricShop* GetDefaultObj();

	void UpdateItemIsRecommend();
	void UpdateCountdownTime();
	void UpdateCharacterEnergy(float CurEnergy, float ChangeValue);
	void UnBindDelegate();
	void SetSelfVisibility(bool bVisible);
	void RequestUpgradeWeapon(class ASolarPlayerWeapon* InWeapon);
	void RequestUpgradeShield(class ASolarCharacter* InChara);
	void RequestPurchaseEShopItems(int32 ProductID, bool IsRecommend);
	void ReceiveWeaponUpgrade(int32 InWeaponSlot);
	void ReceiveShieldUpgrade(class ASolarCharacter* InCharacter);
	void PlayHUDSound(bool InVisibile);
	void OnShopGoodsCreated(class UUserWidget* InWidget);
	void OnInitElectricShop(class ASolarCharacter* InCharacter);
	void OnElectricShopVisibilitySet(bool bVisible);
	void OnClosePanel();
	void InitWeaponUpgrade(class ASolarCharacter* InCharacter);
	void InitShopItems(class ASolarElectricShop* InShop);
	void InitShieldUpgrade(float InCurValue, float InMaxValue, int32 QualityColor, bool bIsAdvancedShield);
	void InitElectricShopHUD(class ASolarCharacter* InCharacter);
	float GetSolarCharacterEnergy();
	class ASolarCharacter* GetBuyerSolarCharacter();
	void DelayReportStatistic();
	void DelayInitWeaponUpgrade();
	void DelayInitShopItems();
	bool CheckItemIsRecommendByID(int32 ItemID);
	void BindDelegate();
};

// 0x100 (0x448 - 0x348)
// Class Solarland.HUD_MarkEnemyInfo
class UHUD_MarkEnemyInfo : public USolarUserWidget
{
public:
	class USolarTextBlock*                       Txt_Lvl;                                           // 0x348(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDeathViewHPWidget*                    HPAndShield;                                       // 0x350(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                          CanvasPanel_0;                                     // 0x358(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Anim_Exit;                                         // 0x360(0x8)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Anim_Enter;                                        // 0x368(0x8)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        UpdateVisibleInterval;                             // 0x370(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1C0D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UCurveFloat*                           DistaceToScaleCurve;                               // 0x378(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSet<TSubclassOf<class AActor>>              OcculusionIgnoreClasses;                           // 0x380(0x50)(Edit, BlueprintVisible, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	float                                        MinDisplayHpValue;                                 // 0x3D0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        HPGridUnit;                                        // 0x3D4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bShowDebug;                                        // 0x3D8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1C0F[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<enum class EObjectTypeQuery>          OccQueryTypes;                                     // 0x3E0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Anim_Name_Exit;                                    // 0x3F0(0x8)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Anim_Name_Enter;                                   // 0x3F8(0x8)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarTextBlock*                       Txt_PlayerName;                                    // 0x400(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHUD_ScanEffect*                       ScanEffectWidget;                                  // 0x408(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1C10[0x34];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ZOffset;                                           // 0x444(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UHUD_MarkEnemyInfo* GetDefaultObj();

	void HideNameMark();
};

// 0x8 (0x350 - 0x348)
// Class Solarland.HUD_PassiveHead
class UHUD_PassiveHead : public USolarUserWidget
{
public:
	class UImage*                                Img_Hero;                                          // 0x348(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UHUD_PassiveHead* GetDefaultObj();

};

// 0x18 (0x360 - 0x348)
// Class Solarland.HUD_PickupPassive
class UHUD_PickupPassive : public USolarUserWidget
{
public:
	class USolarTextBlock*                       Txt_Bullet;                                        // 0x348(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UHUD_PassiveHead*                      UI_Passive_Head;                                   // 0x350(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1C11[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHUD_PickupPassive* GetDefaultObj();

	void OnTogglePickupList(bool bShow);
};

// 0x38 (0x380 - 0x348)
// Class Solarland.HUD_ScanEffect
class UHUD_ScanEffect : public USolarUserWidget
{
public:
	class UWidgetAnimation*                      Anim_Scan;                                         // 0x348(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Anim_FadeOut;                                      // 0x350(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                ScanSound;                                         // 0x358(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MinAnimLength;                                     // 0x368(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  BoneName;                                          // 0x36C(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1C13[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHUD_ScanEffect* GetDefaultObj();

};

// 0x100 (0x360 - 0x260)
// Class Solarland.HUD_SkydiveScale
class UHUD_SkydiveScale : public UUserWidget
{
public:
	uint8                                        Pad_1C1A[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UProgressBar*                          ProgressBar_Speed;                                 // 0x270(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                          AltitudeDisplayAxis;                               // 0x278(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHorizontalBox*                        AltitudeDisplayBox;                                // 0x280(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                          SpeedDisplayAxis;                                  // 0x288(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHorizontalBox*                        SpeedDisplayBox;                                   // 0x290(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                          GroundDisplayAxis;                                 // 0x298(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                GroundAltitudeScale;                               // 0x2A0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                             AltitudeWidgetAngleRange;                          // 0x2A8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                             SpeedWidgetAngleRange;                             // 0x2B0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MinSpeed;                                          // 0x2B8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxSpeed;                                          // 0x2BC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FWrappedLocalTextID                   AltitudeLocalTextID;                               // 0x2C0(0x4)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FWrappedLocalTextID                   SpeedLocalTextID;                                  // 0x2C4(0x4)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1C1E[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        AerialReconnaissanceRadius;                        // 0x2D0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AerialReconnaissanceInterval;                      // 0x2D4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UAerialReconnaissanceMarkWidget> AerialReconnaissanceMarkWidgetClass;               // 0x2D8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<enum class ESlateDetailMode, struct FSolarAerialReconnaissanceConfig> AerialReconnaissanceConfigMap;                     // 0x2E0(0x50)(Edit, Protected, NativeAccessSpecifierProtected)
	class UCanvasPanel*                          MarkPanel;                                         // 0x330(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1C1F[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHUD_SkydiveScale* GetDefaultObj();

	void UpdateSpeedScale(float InSpeed);
	void UpdateSpeedDisplayContent(class FText& Content);
	void UpdateAltitudeScale(float InHeight, float InZValue);
	void UpdateAltitudeDisplayContent(class FText& Content);
	void OnUpdateCamera(float InDeltaSeconds);
	void OnSkydiveStateChanged(class ASolarCharacter* InCharacter);
	void OnCharacterDied(class ASolarCharacter* InCharacter);
	void OnAirlineHeightSet(float NewHeight);
	void K2_OnSkydiveStateChanged(bool bInFly, bool bHasPassiveSkill);
};

// 0x18 (0x278 - 0x260)
// Class Solarland.HUD_Teammate_Profession
class UHUD_Teammate_Profession : public UUserWidget
{
public:
	class USizeBox*                              SizeBox_Profession;                                // 0x260(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Image_215;                                         // 0x268(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Icon;                                              // 0x270(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UHUD_Teammate_Profession* GetDefaultObj();

	void SetState(enum class ESkillStateType InState);
};

// 0x2B8 (0x600 - 0x348)
// Class Solarland.HUD_Teammate_State
class UHUD_Teammate_State : public USolarUserWidget
{
public:
	uint8                                        Pad_1C27[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USizeBox*                              SizeBox_Relive;                                    // 0x350(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Img_Relive;                                        // 0x358(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USizeBox*                              SizeBox_Container;                                 // 0x360(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                          CanvasPanel_Container;                             // 0x368(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                          Panel_Loading;                                     // 0x370(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Img_Loading;                                       // 0x378(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Img_PlayerBG;                                      // 0x380(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOverlay*                              HP;                                                // 0x388(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOverlay*                              Armor;                                             // 0x390(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarShieldProgressBoard*             AdvBar_Shield_A;                                   // 0x398(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1C29[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USolarHPProgressBoard*                 AdvBar_HP;                                         // 0x3A8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarTextBlock*                       Txt_Lvl;                                           // 0x3B0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Img_Head;                                          // 0x3B8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UScaleBox*                             ScaleBox_NickName;                                 // 0x3C0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                            Text_NickName;                                     // 0x3C8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Img_Tip_MarkedPoint;                               // 0x3D0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHorizontalBox*                        HorizontalBox_States;                              // 0x3D8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Img_Icon_AppDeactivatedOrOffline;                  // 0x3E0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Img_OutGame;                                       // 0x3E8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USizeBox*                              SizeBox_Vehicle;                                   // 0x3F0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Img_Icon_Vehicle;                                  // 0x3F8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetSwitcher*                       WidgetSwitcher_SkydiveState;                       // 0x400(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetSwitcher*                       WidgetSwitcher_SkydiveLeaderPos;                   // 0x408(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetSwitcher*                       WidgetSwitcher_FlyLeaderPos;                       // 0x410(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Img_PlayerCover;                                   // 0x418(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                          CanvasPanel_Respond;                               // 0x420(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UProgressBar*                          ProgressBarRespond;                                // 0x428(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarButton*                          BtnRespond;                                        // 0x430(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUIComponentNationalFlag*              UI_Component_NationalFlag;                         // 0x438(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarUserWidget*                      UI_Input_Device;                                   // 0x440(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                IconRespond;                                       // 0x448(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Waiting_Invite_Anim;                               // 0x450(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Waiting_Follow_Anim;                               // 0x458(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      ResurrectionCountdown_Anim;                        // 0x460(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      RespondLoopAnim;                                   // 0x468(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      RespondedAnim;                                     // 0x470(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Enter_Relive_Anim;                                 // 0x478(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Loop_Relive_Anim;                                  // 0x480(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      CD_Relive_Anim;                                    // 0x488(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Anim_Help_Loop;                                    // 0x490(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Anim_Remind_Loop;                                  // 0x498(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Anim_State_Loop;                                   // 0x4A0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Fire_Anim;                                         // 0x4A8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOverlay*                              Overlay_Countdown;                                 // 0x4B0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Progress_ResurrectionCD;                           // 0x4B8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Progress_RecyclingResurrection;                    // 0x4C0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Img_KillLeader;                                    // 0x4C8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                          Panel_ResurrectTime;                               // 0x4D0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                            Txt_ResurrectTime;                                 // 0x4D8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        IndexInTeam;                                       // 0x4E0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        ReliveState;                                       // 0x4E1(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1C2B[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        Profession;                                        // 0x4E4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MinDisplayHpValue;                                 // 0x4E8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIgnoreSelfAction;                                 // 0x4EC(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1C2C[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        FireAnimLoopSpeed;                                 // 0x4F0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FireAnimEndSpeed;                                  // 0x4F4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1C2D[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FSlateBrush>                   ReliveStateImages;                                 // 0x500(0x10)(Edit, EditFixedSize, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<uint8, struct FLinearColor>             PosInTeamColor;                                    // 0x510(0x50)(Edit, EditFixedSize, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1C2F[0xA0];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHUD_Teammate_State* GetDefaultObj();

	void UpdateRepliableState();
	void StopHelpAnimation();
	void SetTextNickName(const class FString& InNickName);
	void SetTeammatePosAndColor(uint8 InPosInTeam, bool bNormalState);
	void SetIsDead(bool bDead);
	void SetHelpState(int32 InState);
	void SetActionState(int32 InState);
	void PlayHelpAnimation();
	void OnReviveItemRecycleCountDownBegin(int32 CurrentTime, int32 DurationTime);
	void OnReviveDisableHint(int32 CountDownDuration);
	void OnResurrectionStateChanged(bool IsOnResurrection);
	void OnReplyClick();
	void OnPlayerStateSet(class ASolarPlayerState* InSolarPS, bool bNormalState);
	void OnFireAnimEnd();
	bool LuaImplementedCheckIsSupportRoleClass();
	void CheckIsCompletelyDead();
};

// 0x88 (0x3D0 - 0x348)
// Class Solarland.HUD_TeammateStates_Panel
class UHUD_TeammateStates_Panel : public USolarUserWidget
{
public:
	uint8                                        Pad_1C50[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UHUD_Teammate_State*                   Teammate_State_1;                                  // 0x350(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHUD_Teammate_State*                   Teammate_State_2;                                  // 0x358(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHUD_Teammate_State*                   Teammate_State_3;                                  // 0x360(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHUD_Teammate_State*                   Teammate_State_4;                                  // 0x368(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Anim_Change;                                       // 0x370(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<uint8, class UHUD_Teammate_State*>      TeammateStateWidgets;                              // 0x378(0x50)(ExportObject, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1C51[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHUD_TeammateStates_Panel* GetDefaultObj();

	void UpdateReviveIconVisibility();
	void Skydive_OnSkydivingMemberDataReplicated(class ASolarPlayerState* MemberPS);
	void SetTalentActiveInPos(enum class ETalentState TalentState, uint8 InPosInTeam, float AdditionalParam);
	void SetCharacterInfoInPos(int32 InCharacterId, uint8 InPosInTeam);
	void SetAvatarInPos(int32 InSkinID, uint8 InPosInTeam);
	void SetAllTeammatesState();
	void RefreshTeammateInputDevice(class ASolarPlayerState* PlayerState);
	void RefreshTeammateBattleState(class ASCMPlayerState* PlayerState);
	void RefreshKillLeaderUI(class ASolarPlayerState* KillLeader);
	void RefreshAllTeammatesStateWithoutReset();
	void RefreshAllTeammatesState(bool bNeedReset);
	void OnTeamMemberChanged(class ASolarTeamInfo* TeamInfo, class ASolarPlayerState* PlayerState);
	void OnTeammateStateWidgetRemoved();
	void OnTeammateReviveStateChanged(class ASolarPlayerState* RevivingTeammatePlayer, class ASolarPlayerState* PlayerState);
	void OnTeammateResurrectTimeChanged(class ASolarPlayerState* PlayerState, int32 ResurrectTime);
	void OnTeammateRescueStateChanged(class ASolarCharacter* InCharacter);
	void OnTeammateRepliableMsgChanged();
	void OnTeammatePlayerStateReplicated(class ASolarPlayerState* InTeammatePS);
	void OnTeammatePlayerStateRemovedInPreparatoryPhase(uint8 InPosInTeam, bool bInLastOne);
	void OnTeammatePlayerStateRemovedInBattlePhase(uint8 InPosInTeam, bool bInLastOne);
	void OnTeammateCharacterAllReady(class ASolarCharacter* InCharacter);
	void OnTeammateCallForHelpNotify(class ASolarPlayerState* PlayerState);
	void OnTeammateActionStateChanged(class ASolarPlayerState* PlayerState, const struct FGameplayTag& Tag, int32 NewCount);
	void OnTeamInfoReplicated(class ASolarTeamInfo* PreTeamInfo, class ASolarTeamInfo* MyTeamInfo);
	void OnSpectateReferToChanged(class ASolarPlayerState* ReferToPlayerState, enum class ESpectateReferToState State);
	void OnShieldReplicated(uint8 InPosInTeam, struct FShieldInfo& OldShield, struct FShieldInfo& NewShield);
	void OnSelectingJobEffectFinish(int32 SelectedIndex);
	void OnSelectingJobEffectBegin(class ASolarCharacter* Target, int32 Level, TArray<int32>& EffectIDArray);
	void OnReviveManagerReplicated();
	void OnReviveItemReplicated(uint8 InPosInTeam, uint8 InItemNum, bool bInCanRebirth);
	void OnPlayerOperationInGameReplicated(class ASolarPlayerState* InSolarPS);
	void OnMarkedPointInNavMapReplicated(uint8 InPosInTeam, struct FVector2D& InMarkPosition);
	void OnHealthReplicated(uint8 InPosInTeam, float CurrentHP, float MaxHP);
	void OnClearMarkedPointInNavMap(uint8 InPosInTeam);
	void OnCharacterStateInGameReplicated(class ASolarPlayerState* InCharacterPS);
	void OnBroadcastModeChanged();
	void LuaImplementedTeammatesBaseInfo(int32 CurTeamId, uint8 InIndex, bool bBattlePhase, class UHUD_Teammate_State* StateWidget);
	bool IsSelfVisible();
	void InitTalentIconInPos(int32 InTalentID, uint8 InPosInTeam);
	void InitSkillCDStateInPos(int32 InCDState, uint8 InPosInTeam);
	void InitPlayerLevelInPos(int32 InPlayerLv, uint8 InPosInTeam);
};

// 0xE0 (0x428 - 0x348)
// Class Solarland.HUD_WorldMark
class UHUD_WorldMark : public USolarUserWidget
{
public:
	float                                        LiveTime;                                          // 0x348(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExtraLiveTime;                                     // 0x34C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ResponCheckRangeParam;                             // 0x350(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RefreshTime;                                       // 0x354(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               WorldPos;                                          // 0x358(0xC)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             ScreenSize;                                        // 0x364(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             IconSize;                                          // 0x36C(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsOutOfRangeLastTime;                             // 0x374(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHasBeenAnsweredByMe;                              // 0x375(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIfWasChosen;                                      // 0x376(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsCreateBySelf;                                   // 0x377(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                ImgMarkArrow;                                      // 0x378(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                ImgItemMarkArrow;                                  // 0x380(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                            Distance;                                          // 0x388(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        UpdateIconStyleTime_LowLevel;                      // 0x390(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        UpdateIconStyleTime_HighLevel;                     // 0x394(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1C59[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        PosInTeam;                                         // 0x39C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FWorldMarkData                        Data;                                              // 0x3A0(0x50)(NativeAccessSpecifierPublic)
	enum class EWorldMarkType                    Type;                                              // 0x3F0(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1C5A[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MaxWorldDistance;                                  // 0x3F4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinWorldDistance;                                  // 0x3F8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1C5B[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UCurveFloat*                           OpacityCurve;                                      // 0x400(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAttachToObject;                                   // 0x408(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1C5C[0x1F];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHUD_WorldMark* GetDefaultObj();

	void UpdateStyleByScreenPosition(const struct FVector2D& ScreenPos, bool bOutOfRange);
	void UpdateDistance(struct FVector& TargetPos);
	void SwitchWidget(bool bOutOfRange);
	void SetIfBeChosen(bool bIfChosen);
	void ResponseByLocal();
	void RemoveItemMarkWhenPlayerPicked();
	void LogMarkResponse();
	void InitWidget(class UObject* Owner, int32 InPosInTeam, struct FWorldMarkData& InWorldMarkedData, class UObject* IconImg);
	void InitAttachedWidget(class AActor* ActorAttachedTo);
	void DestroySelf();
	bool CheckIsLowLevelDevice();
	void CancelResponse();
};

// 0x70 (0x3B8 - 0x348)
// Class Solarland.HUD_WorldMarkPanel
class UHUD_WorldMarkPanel : public USolarUserWidget
{
public:
	TArray<class UHUD_MarkEnemyInfo*>            MarkdEnemyWidgets;                                 // 0x348(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                          MarkPanel;                                         // 0x358(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UHUD_MarkEnemyInfo>        MarkEnemyInfoWidgetClass;                          // 0x360(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UHUD_ScanEffect>           ScanEffectWidgetClass;                             // 0x368(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UHUD_MarkEnemyInfo*>            MarkEnemyWidgets;                                  // 0x370(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1C71[0x38];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHUD_WorldMarkPanel* GetDefaultObj();

	void OnSuperRadarStart(TArray<class FString>& InPlayers);
	void OnSuperRadarRemovePlayer(const class FString& InPlayer);
	void OnSuperRadarEnd();
	void OnSpectateTargetChanged(class ASolarPlayerState* OldTarget, class ASolarPlayerState* NewTarget);
	void OnScoutCharactersChange(const TArray<class FString>& ScoutedCharacters, const TArray<class FString>& ToBeScoutedCharacters);
	class FString OnRegisterPositionMarkRequested(class UActorMarkBase** OutResult, TSubclassOf<class UActorMarkBase> InMarkClass, struct FVector& InPosition);
	class FString OnRegisterActorMarkRequested(class UActorMarkBase** OutResult, TSubclassOf<class UActorMarkBase> InMarkClass, class AActor* FollowActor);
	void OnDamagingActorsChange();
	void OnAimingEnemy(class ASolarCharacter* InEnemy);
};

// 0x118 (0x460 - 0x348)
// Class Solarland.HUDBattleHPPanel
class UHUDBattleHPPanel : public USolarUserWidget
{
public:
	uint8                                        Pad_1C9C[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class USolarHPProgressBoard*                 HP_Bar;                                            // 0x370(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                            Txt_HPNumber;                                      // 0x378(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarShieldProgressBoard*             AdvBar_Shield_A;                                   // 0x380(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1C9D[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UTextBlock*                            Txt_ArmorNum;                                      // 0x390(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                          Panel_VX;                                          // 0x398(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                          Panel_SP;                                          // 0x3A0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                HP_Bar_ICON;                                       // 0x3A8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                HP_Shield_ICON;                                    // 0x3B0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                          FX_Shield;                                         // 0x3B8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Armor_Light_Anim;                                  // 0x3C0(0x8)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                          HPBarColorNormal;                                  // 0x3C8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                          HPBarColorDying;                                   // 0x3D8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<int32, struct FLinearColor>             ShieldNumColorByQuality;                           // 0x3E8(0x50)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1CA0[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHUDBattleHPPanel* GetDefaultObj();

	void UpdateShieldValue(enum class EShieldWidgetState WidgetState, float InCurValue, float InChangeValue, const class FString& InSolarPlayerID, enum class EShieldRechargeState RechargeState, bool bFixPreAdd);
	void UpdateShieldMaxValue(float MaxShieldValue);
	void UpdateHPBar(float InCurHealth, float InMaxHealth);
	void UnBindDelegates();
	void ShowShieldUI(bool bIsShow);
	void ShowLevelUp(int32 NewLevel, TArray<class FString>& DynamicTips);
	void ShowGainExp(int32 ExpAdded);
	void SetHPColor(struct FLinearColor& InHPBarColor);
	void SetHPBarAlternateColor(bool bFlag);
	void OnShieldUpgradeAnimFinished();
	void OnLevelUpInternal(int32 NewLevel, int32 OldLevel);
	void OnLevelUp(int32 NewLevel);
	void OnGainExp(int32 ExpAdded);
	void OnEnterParachuting();
	void OnEnterLanding();
	void OnEnterCruising();
	void OnCharacterRescueStateChanged(enum class ERescueState NewRescueState);
	void OnCharacterRebirth(class ASolarCharacter* InSolarChar);
	void OnCharacterReady();
	void InitShieldHUD(float InCurValue, float InMaxValue, int32 QualityColor, bool bIsAdvancedShield);
	class FString GeneralHPText(float InCurHealth, float InMaxHealth);
	void ForceInitHPBar(float InCurHealth, float InMaxHealth);
	void BindDelegates();
};

// 0x28 (0x370 - 0x348)
// Class Solarland.HUDBattleUIScore
class UHUDBattleUIScore : public USolarUserWidget
{
public:
	class UImage*                                Image_BG_Grid02;                                   // 0x348(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USizeBox*                              KillLeader;                                        // 0x350(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                            Txt_CauseDamage;                                   // 0x358(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                            Txt_Assist;                                        // 0x360(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1CAB[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHUDBattleUIScore* GetDefaultObj();

	void RefreshKillLeaderUI(class ASolarPlayerState* KillLeaderPS);
	void RefreshCauseDamage(float CauseDamage);
	void RefreshAssistNum(int32 AssistNum);
	void OnSpectateReferToChanged(class ASolarPlayerState* ReferToPlayerState, enum class ESpectateReferToState State);
};

// 0x70 (0x3B8 - 0x348)
// Class Solarland.HUDCountdownWidget
class UHUDCountdownWidget : public USolarUserWidget
{
public:
	uint8                                        Pad_1CB5[0x40];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UGaugeImage*                           Image_GameProgressBar;                             // 0x388(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                            Text_GameProgressTime;                             // 0x390(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UButton*                               BTN_GameProgressCancel;                            // 0x398(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                            Text_GameProgressTips;                             // 0x3A0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHorizontalBox*                        HorizontalBox_Cancel;                              // 0x3A8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHUDPassiveHeadWidget*                 Panel_PassiveBuff;                                 // 0x3B0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UHUDCountdownWidget* GetDefaultObj();

	void UpdateGameProgressTipsText(int32 InTextId);
	void UpdateGameProgressText();
	void UpdateGameProgressBarPercent(float InPercent);
	void UpdateGameProgress(float InAddition);
	void StopGameProgress(int32 InActionID);
	void StopCountDownProgress(int32 InActionID);
	void StartCountDownProgress(struct FCountDownInfo& InCountInfo);
	void SetActiveGameProgressBar(bool Inactive);
	void OnSteamCancelCountDown();
	void OnParentVisibilityChanged(bool bVisible);
	void OnCompleteInternal();
	void OnClickButtonCancel();
	void BP_UpdateStateView(enum class ECountDownState InState);
};

// 0x1C0 (0x508 - 0x348)
// Class Solarland.HUDItemPanel
class UHUDItemPanel : public USolarUserWidget
{
public:
	uint8                                        Pad_1CC7[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UCanvasPanel*                          Panel_ShieldAutoRE;                                // 0x358(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UButton*                               Btn_Restore;                                       // 0x360(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Img_Restore;                                       // 0x368(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                            Txt_Restore_Num;                                   // 0x370(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UButton*                               Btn_Change;                                        // 0x378(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Img_Shield_FX;                                     // 0x380(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                          Panel_DoubleShiel_VX;                              // 0x388(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOverlay*                              Unavailable_Restore;                               // 0x390(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Anim_Double;                                       // 0x398(0x8)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UButton*                               Btn_Medkit;                                        // 0x3A0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UButton*                               Btn_BigShieldRecharger;                            // 0x3A8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                          Panel_Backpack;                                    // 0x3B0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UButton*                               Btn_Backpack;                                      // 0x3B8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Anim_EMP_Enter;                                    // 0x3C0(0x8)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Anim_EMP_Exit;                                     // 0x3C8(0x8)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Enter_Anim;                                        // 0x3D0(0x8)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Exit_Anim;                                         // 0x3D8(0x8)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<enum class ESpecialItemID, TSoftObjectPtr<class UTexture2D>> RestoreIcons;                                      // 0x3E0(0x50)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, NativeAccessSpecifierPublic)
	uint8                                        Pad_1CCA[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<enum class ESpecialItemID, int32>       RestoreItemMap;                                    // 0x448(0x50)(NativeAccessSpecifierPrivate)
	uint8                                        Pad_1CCB[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        RestoreRecommendDuration;                          // 0x4A0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1CCD[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UCanvasPanel*                          Panel_Recommend;                                   // 0x4A8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarButton*                          Btn_Recommend;                                     // 0x4B0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Img_Recom;                                         // 0x4B8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGaugeImage*                           Recom_Countdown;                                   // 0x4C0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Anim_Recommend_Click_Exit;                         // 0x4C8(0x8)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Anim_Recommend_Unclick_Exit;                       // 0x4D0(0x8)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Anim_Recommend_Enter;                              // 0x4D8(0x8)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1CCF[0x14];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        PrevLevel;                                         // 0x4F4(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PrevExpRatio;                                      // 0x4F8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        CurrentLevel;                                      // 0x4FC(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CurrentExpRatio;                                   // 0x500(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bHiddenByGameplay;                                 // 0x504(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1CD1[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHUDItemPanel* GetDefaultObj();

	void WrappedOnLevelAndExpChanged(int32 NewLevel, float NewExpRatio);
	void UnBindDelegates();
	void SetShieldFXVisable(bool bIsVisible);
	void SetIsHiddenByGameplay(bool InNewValue);
	void ScopeUIStateChanged(bool BOpened);
	void ResetLevelAndExpDisplayToCurrent();
	void RecommendRestoreItem();
	void OnShieldValueChanged(enum class EShieldWidgetState WidgetState, float InCurValue, float InChangeValue, const class FString& InSolarPlayerID, enum class EShieldRechargeState RechargeState, bool bFixPreAdd);
	void OnRoleGEShieldMultiRecoverCoolDownChange(int32 NewCount);
	void OnRoleAbilityHideHUD(bool bHide);
	void OnPlayerStateRep(enum class EPlayerStateRepType RepType, class APlayerState* PlayerState);
	void OnLevelAndExpChanged();
	void OnEnterLanding();
	void OnEnterCruising();
	void OnEMP(bool bInForbidden);
	void OnConsumeItemUpdated();
	void OnCharacterRescueStateChanged(enum class ERescueState NewRescueState);
	void OnCharacterHPChanged(float CurrentHP, float MaxHP);
	void OnBtnShieldRechargerClicked();
	void OnBtnRestoreClicked();
	void OnBtnRecommendClicked();
	void OnBtnMedkitClicked();
	void OnBtnChangeClicked();
	void OnBtnBigShieldRechargerClicked();
	void OnBtnBackpackClicked();
	bool IsBattleHUDInSpectateMode();
	bool GetIsHiddenByGameplay();
	void BindDelegates();
};

// 0x20 (0x368 - 0x348)
// Class Solarland.HUDJobEffectPanel
class UHUDJobEffectPanel : public USolarUserWidget
{
public:
	TSubclassOf<class UJobEffectItemWidget>      ItemWidgetClass;                                   // 0x348(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1CEC[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class USolarButton*                          Btn_Detail;                                        // 0x360(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UHUDJobEffectPanel* GetDefaultObj();

	void ShowDetailPanel();
	void RefreshSplashEffectColor(struct FBattleUpgradeEffectCategoryColorSet& ColorSet);
	void OnSpectateTargetChanged(class ASolarPlayerState* OldTarget, class ASolarPlayerState* NewTarget);
	void OnSpectateInfoRep(class ASolarSpectateInfo* SpectateInfo);
	void OnNewEffectAppear(class UJobEffectItemWidget* Widget, int32 Index, int32 TotalCount);
	void OnEffectUpdate(class UJobEffectItemWidget* Widget, int32 Index, class FText& LabelContent);
	void OnBattleUpgradeEffect(enum class ESolarTablesEnum_BattleUpgradeEffectType EffectType, int32 ParamSum);
	void CloseDetailPanel();
	void AddItemWidgetToPanel(class UJobEffectItemWidget* ItemWidget);
};

// 0x18 (0x360 - 0x348)
// Class Solarland.HUDPassiveHeadWidget
class UHUDPassiveHeadWidget : public USolarUserWidget
{
public:
	class UImage*                                Img_Head;                                          // 0x348(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTextBlock*                       Txt_Buff;                                          // 0x350(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1CF5[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UHUDPassiveHeadWidget* GetDefaultObj();

	void SetData(int32 InContributorCharacterId, int32 InLocalTipsID);
};

// 0x20 (0x368 - 0x348)
// Class Solarland.HUDShieldMaterial
class UHUDShieldMaterial : public USolarUserWidget
{
public:
	uint8                                        Pad_1CF7[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UWidgetAnimation*                      Anim_GetMT_2;                                      // 0x350(0x8)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Anim_GetMT;                                        // 0x358(0x8)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Anim_Loop;                                         // 0x360(0x8)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UHUDShieldMaterial* GetDefaultObj();

	void OnShieldUpgradeShopInteract();
	void OnShieldUpgradeItemChanged(int32 InNewCount, int32 InLastCount);
	void OnShieldAvailableChanged(bool bAvailable);
};

// 0x38 (0x380 - 0x348)
// Class Solarland.HUDSubItemDesktop
class UHUDSubItemDesktop : public USolarUserWidget
{
public:
	class UCanvasPanel*                          Panel_Recommend;                                   // 0x348(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                Img_Recom;                                         // 0x350(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGaugeImage*                           Recom_Countdown;                                   // 0x358(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                Icon_Medkit_1;                                     // 0x360(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Anim_Recommend_Click_Exit;                         // 0x368(0x8)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Anim_Recommend_Unclick_Exit;                       // 0x370(0x8)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Anim_Recommend_Enter;                              // 0x378(0x8)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UHUDSubItemDesktop* GetDefaultObj();

	void UpdateQuickItemBPImplement(int32 QuickItem);
};

// 0x70 (0x298 - 0x228)
// Class Solarland.SolarMapElementBase
class ASolarMapElementBase : public AActor
{
public:
	uint8                                        Pad_1CFD[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                Side;                                              // 0x238(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Job;                                               // 0x248(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                ElementID;                                         // 0x258(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ESGameMode_ElementType            Type;                                              // 0x268(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EElementStateType                 State;                                             // 0x269(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EElementVisibilityType            Visibility;                                        // 0x26A(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1CFE[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class USolarGameMode_HandleElementRPC> BP_HandleActorRPC;                                 // 0x270(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ElementTypeName;                                   // 0x278(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                GroupKey;                                          // 0x280(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bUseSceneActorOptimization;                        // 0x290(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1CFF[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASolarMapElementBase* GetDefaultObj();

	void SetElementVisibility(enum class EElementVisibilityType NewType);
	enum class EElementStateType SetElementState(enum class EElementStateType NewState);
	void OnRep_ElementVisibility();
	void OnRep_ElementState();
	void OnElementVisibilityChanged(enum class EElementVisibilityType CurrentVisibility);
	void OnElementStateChanged(enum class EElementStateType CurrentState);
};

// 0x18 (0x2B0 - 0x298)
// Class Solarland.HumanoidTarget
class AHumanoidTarget : public ASolarMapElementBase
{
public:
	uint8                                        Pad_1D01[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AHumanoidTarget* GetDefaultObj();

	void ServerOnTargetTakeDamage(float Damage, class AActor* DamageCauser);
};

// 0x58 (0x3A0 - 0x348)
// Class Solarland.HuntTeammateStatesPanelWidget
class UHuntTeammateStatesPanelWidget : public USolarUserWidget
{
public:
	uint8                                        Pad_1D02[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DeltaTime;                                         // 0x34C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<int32, class UHuntTeammateStateWidget*> TeammateStatesMap;                                 // 0x350(0x50)(BlueprintVisible, ExportObject, ContainsInstancedReference, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UHuntTeammateStatesPanelWidget* GetDefaultObj();

};

// 0x18 (0x360 - 0x348)
// Class Solarland.HuntTeammateStateWidget
class UHuntTeammateStateWidget : public USolarUserWidget
{
public:
	bool                                         bHasInitTalent;                                    // 0x348(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHasTalentStateSet;                                // 0x349(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1D06[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        PlayerPosInTeam;                                   // 0x34C(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                PlayerNickName;                                    // 0x350(0x10)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UHuntTeammateStateWidget* GetDefaultObj();

	void UnBindPlayerCard();
	void SetTextNickName(const class FString& NickName);
	void SetTeammatePosAndColor(int32 PosInTeam, bool IsNormalState);
	void SetStateWidgetVisibility(enum class ESlateVisibility InVisibility);
	void SetHealthPercent(float Percent);
	void ResetToDefault();
	void RefreshTalent(class ASolarPlayerState* PlayerState);
	void RefreshCurrentPlayerOperationInGame(bool IsVisible);
	void RefreshCurrentCharacterStateInGame(bool IsInVehicle, bool IsDying, bool IsAbnormalState);
	bool HasBindedPlayer(class ASCMPlayerState* Player);
	void BindPlayerCard(class ASCMPlayerState* Player);
};

// 0x18 (0x40 - 0x28)
// Class Solarland.HyperlinkDecorator
class UHyperlinkDecorator : public URichTextBlockDecorator
{
public:
	class UDataTable*                            HlinkSet;                                          // 0x28(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                HlContent;                                         // 0x30(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UHyperlinkDecorator* GetDefaultObj();

	void ClickFunc();
};

// 0x10 (0x38 - 0x28)
// Class Solarland.IMChatObject
class UIMChatObject : public UObject
{
public:
	uint8                                        Pad_1D09[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         GMEIsInRoom;                                       // 0x30(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         NertcIsInRoom;                                     // 0x31(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1D0B[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UIMChatObject* GetDefaultObj();

	void UnInitEvents();
	void SendPlayerPosToIMServerEveryFrame(struct FVector& PlayerPosition, struct FRotator& PlayerRotator, float DeltaTime);
	void NotifyBattlePlayerChanged(int32 NumPlayers, int32 PreviousNumPlayers);
	void InitEnvents();
};

// 0x0 (0x560 - 0x560)
// Class Solarland.InteractionDetectionComponent
class UInteractionDetectionComponent : public USphereComponent
{
public:

	static class UClass* StaticClass();
	static class UInteractionDetectionComponent* GetDefaultObj();

};

// 0xE0 (0x110 - 0x30)
// Class Solarland.ItemAttributeSet
class UItemAttributeSet : public USolarAttributeSet
{
public:
	struct FGameplayAttributeData                MaxSMGAmmo;                                        // 0x30(0x10)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, Protected, NativeAccessSpecifierProtected)
	struct FGameplayAttributeData                CurrentSMGAmmo;                                    // 0x40(0x10)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, Protected, NativeAccessSpecifierProtected)
	struct FGameplayAttributeData                MaxARAmmo;                                         // 0x50(0x10)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, Protected, NativeAccessSpecifierProtected)
	struct FGameplayAttributeData                CurrentARAmmo;                                     // 0x60(0x10)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, Protected, NativeAccessSpecifierProtected)
	struct FGameplayAttributeData                MaxSRAmmo;                                         // 0x70(0x10)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, Protected, NativeAccessSpecifierProtected)
	struct FGameplayAttributeData                CurrentSRAmmo;                                     // 0x80(0x10)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, Protected, NativeAccessSpecifierProtected)
	struct FGameplayAttributeData                MaxSGAmmo;                                         // 0x90(0x10)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, Protected, NativeAccessSpecifierProtected)
	struct FGameplayAttributeData                CurrentSGAmmo;                                     // 0xA0(0x10)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, Protected, NativeAccessSpecifierProtected)
	struct FGameplayAttributeData                MaxEnergyAmmo;                                     // 0xB0(0x10)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, Protected, NativeAccessSpecifierProtected)
	struct FGameplayAttributeData                CurrentEnergyAmmo;                                 // 0xC0(0x10)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, Protected, NativeAccessSpecifierProtected)
	struct FGameplayAttributeData                ItemCutDownMultiple;                               // 0xD0(0x10)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, Protected, NativeAccessSpecifierProtected)
	struct FGameplayAttributeData                TempSTGAmmoIncrement;                              // 0xE0(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                TempSMGAmmoIncrement;                              // 0xF0(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                TempShieldRechargerIncrement;                      // 0x100(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UItemAttributeSet* GetDefaultObj();

	void OnRep_MaxSRAmmo(struct FGameplayAttributeData& OldValue);
	void OnRep_MaxSMGAmmo(struct FGameplayAttributeData& OldValue);
	void OnRep_MaxSGAmmo(struct FGameplayAttributeData& OldValue);
	void OnRep_MaxEnergyAmmo(struct FGameplayAttributeData& OldValue);
	void OnRep_MaxARAmmo(struct FGameplayAttributeData& OldValue);
	void OnRep_ItemCutDownMultiple(struct FGameplayAttributeData& OldValue);
	void OnRep_CurrentSRAmmo(struct FGameplayAttributeData& OldValue);
	void OnRep_CurrentSMGAmmo(struct FGameplayAttributeData& OldValue);
	void OnRep_CurrentSGAmmo(struct FGameplayAttributeData& OldValue);
	void OnRep_CurrentEnergyAmmo(struct FGameplayAttributeData& OldValue);
	void OnRep_CurrentARAmmo(struct FGameplayAttributeData& OldValue);
};

// 0x20 (0x280 - 0x260)
// Class Solarland.WidgetControlGroup
class UWidgetControlGroup : public UUserWidget
{
public:
	class UNamedSlot*                            ControlledWidget;                                  // 0x260(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UWidgetControlUnit*>            WidgetControls;                                    // 0x268(0x10)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1D18[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UWidgetControlGroup* GetDefaultObj();

	void SetControlledWidgetActive(bool bActive);
	bool IsControlledWidgetActive(bool bUpdateCache);
};

// 0x20 (0x2A0 - 0x280)
// Class Solarland.JetFlyControlGroup
class UJetFlyControlGroup : public UWidgetControlGroup
{
public:
	class UWidgetControlUnit*                    CDControl;                                         // 0x280(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetControlUnit*                    TimesControl;                                      // 0x288(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetControlUnit*                    ForceControl;                                      // 0x290(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bUsedForVertical;                                  // 0x298(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1D19[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UJetFlyControlGroup* GetDefaultObj();

};

// 0x18 (0x278 - 0x260)
// Class Solarland.WidgetControlUnit
class UWidgetControlUnit : public UUserWidget
{
public:
	uint8                                        Pad_1D1B[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UWidgetControlUnit* GetDefaultObj();

	void SetControlActive(bool bActive);
	void OnOtherActiveChanged(class UWidgetControlUnit* OtherUnit);
	void OnGroupInitialized(class UWidgetControlGroup* ControlGroup);
	bool IsControlActive();
};

// 0x8 (0x280 - 0x278)
// Class Solarland.JetFlyEMPControl
class UJetFlyEMPControl : public UWidgetControlUnit
{
public:
	class UWidgetAnimation*                      Anim_EMP;                                          // 0x278(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UJetFlyEMPControl* GetDefaultObj();

	void OnEMPEffected(class ASolarCharacter* EffectedCharacter, bool bEMPActive);
	void InitializeWithCharacter(class ASolarCharacter* InCharacter);
};

// 0x70 (0x2E8 - 0x278)
// Class Solarland.JetFlyForceControl
class UJetFlyForceControl : public UWidgetControlUnit
{
public:
	uint8                                        Pad_1D24[0x70];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UJetFlyForceControl* GetDefaultObj();

	void SwitchForceControlWidget(bool bRapidBoost);
	void SetContentVisibility(bool bShowContent);
	void SetContentColorAndOpacity(struct FLinearColor& Color);
	void OnRapidBoostActivationChanged(bool bActivated);
	void OnJetModuleLvChanged(int32 NewLevel);
	void OnForbiddenTypesChanged(enum class EJetFlyForbiddenType Type, bool bAdded);
	void InitializeWithCharacter(class ASolarCharacter* OwningCharacter);
};

// 0x8 (0x350 - 0x348)
// Class Solarland.JetFlyIcon
class UJetFlyIcon : public USolarUserWidget
{
public:
	bool                                         bUsedForVertical;                                  // 0x348(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1D2B[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UJetFlyIcon* GetDefaultObj();

	void RefreshOnEMPStateChanged(bool bActive);
	void RefreshColorForLevel(int32 Level, struct FItemQualityData& Config);
	void OnJetModuleLvChanged(int32 NewLevel);
	void OnEMPEffected(class ASolarCharacter* EffectedCharacter, bool bEMPActive);
	void OnCharacterSet(class ASolarCharacter* InCharacter);
	void OnCharacterSelfRebirth(class ASolarCharacter* InCharacter);
};

// 0x38 (0x2B0 - 0x278)
// Class Solarland.JetFlyInnerCDControl
class UJetFlyInnerCDControl : public UWidgetControlUnit
{
public:
	class UGaugeImage*                           ImgCD;                                             // 0x278(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                            TxtCD;                                             // 0x280(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UClass*>                        OtherInactiveControls;                             // 0x288(0x10)(ZeroConstructor, Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1D32[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UJetFlyInnerCDControl* GetDefaultObj();

	void OnCDStateChanged(bool bStart);
	void OnCDProgressSet(float InValue, float InPercent);
	void InitializeWithCharacter(class ASolarCharacter* OwningCharacter);
};

// 0xC0 (0x338 - 0x278)
// Class Solarland.JetFlyTimesControl
class UJetFlyTimesControl : public UWidgetControlUnit
{
public:
	uint8                                        Pad_1D3A[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UImage*                                ProgressGrid;                                      // 0x288(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                FinishPrompt;                                      // 0x290(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Anim_CD_Prompt;                                    // 0x298(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Anim_EMP;                                          // 0x2A0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Anim_Resume;                                       // 0x2A8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                    ProgressGridBase;                                  // 0x2B0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class FName>                          ProgressColor;                                     // 0x2B8(0x10)(Edit, EditFixedSize, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  GridName;                                          // 0x2C8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  ProgressName;                                      // 0x2D0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1D3C[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UWidget*                               FlushAngel;                                        // 0x300(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Anim_RapidBoostFlush;                              // 0x308(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FVector2D>                     VisibleSegment_Vert;                               // 0x310(0x10)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FVector2D>                     VisibleSegment_Hori;                               // 0x320(0x10)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1D3E[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UJetFlyTimesControl* GetDefaultObj();

	void OnRapidBoostActivationChanged(bool bActivated);
	void OnJetTimesChanged(int32 NewTimes);
	void OnJetModuleLvChanged(int32 NewLv);
	void OnJetMaxTimesChanged(int32 NewTimes);
	void OnEMPEffected(class ASolarCharacter* EffectedCharacter, bool bEMPActive);
	void OnChargingProgressSet(float InValue, float InPercent);
	void OnChargeStateChanged(bool bStart);
	void InitializeWithCharacter(class ASolarCharacter* OwningCharacter);
};

// 0x80 (0xB0 - 0x30)
// Class Solarland.JetPackConfig
class UJetPackConfig : public UDataAsset
{
public:
	float                                        CurrentSpeedResidueHorizontal;                     // 0x30(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CurrentSpeedResidueVertical;                       // 0x34(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AltitudeLimitation;                                // 0x38(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DashHeightForLimitedAltitude;                      // 0x3C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SlantDashInputThreshold;                           // 0x40(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VerticalDashTime;                                  // 0x44(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VerticalDashHeight;                                // 0x48(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VerticalDashAngle;                                 // 0x4C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VerticalDashMaxHorizontalEndSpeed;                 // 0x50(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VerticalDashBreakableTime;                         // 0x54(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VerticalDashCameraFadeOutTime;                     // 0x58(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SlantDashTime;                                     // 0x5C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SlantDashHeight;                                   // 0x60(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SlantDashAngle;                                    // 0x64(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SlantDashMaxHorizontalEndSpeed;                    // 0x68(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SlantDashBreakableTime;                            // 0x6C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SlantDashCameraFadeOutTime;                        // 0x70(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HorizontalDashTime;                                // 0x74(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HorizontalDashDistance;                            // 0x78(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HorizontalDashAngle;                               // 0x7C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HorizontalDashEndSpeed;                            // 0x80(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HorizontalDashBreakableTime;                       // 0x84(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HorizontalDashCameraFadeOutTime;                   // 0x88(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        UnderWaterHorizontalDashTime;                      // 0x8C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        UnderWaterHorizontalDashDistance;                  // 0x90(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        UnderWaterHorizontalDashBreakableTime;             // 0x94(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        UnderWaterHorizontalDashCameraFadeOutTime;         // 0x98(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVehicleEjectParams                   DefaultVehicleEjectParams;                         // 0x9C(0x10)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_1D40[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UJetPackConfig* GetDefaultObj();

};

// 0x278 (0x4D8 - 0x260)
// Class Solarland.SolarMovablePad
class USolarMovablePad : public UUserWidget
{
public:
	enum class EInputEventHandleType             InputEventHandle;                                  // 0x260(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1D42[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnPressed;                                         // 0x268(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnReleased;                                        // 0x278(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnMoving;                                          // 0x288(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	enum class EMovablePadLimitationFlag         LimitationFlag;                                    // 0x298(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1D43[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UBorder*                               PadBase;                                           // 0x2A0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UNamedSlot*                            MovableWidget;                                     // 0x2A8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bWidgetStationary;                                 // 0x2B0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1D47[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FMargin                               InnerPadding;                                      // 0x2B4(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1D48[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSlateBrush                           NormalBackground;                                  // 0x2C8(0x98)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FSlateBrush                           PressedBackground;                                 // 0x360(0x98)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FKey                                  PointerAction;                                     // 0x3F8(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FKey                                  MoveXAxis;                                         // 0x410(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FKey                                  MoveYAxis;                                         // 0x428(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bOnlySimulateCapturedMove;                         // 0x440(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bUsingTouchPriority;                               // 0x441(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ETouchMovePriority                TouchMovePriority;                                 // 0x442(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1D4A[0x95];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarMovablePad* GetDefaultObj();

	void ForceReleasePad();
};

// 0x40 (0x518 - 0x4D8)
// Class Solarland.JetPad
class UJetPad : public USolarMovablePad
{
public:
	uint8                                        Pad_1D54[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UBorder*                               PadBaseUnder;                                      // 0x4E8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPanelWidget*                          RapidBoostEffects;                                 // 0x4F0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                RapidBoostEffect01;                                // 0x4F8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                RapidBoostEffect02;                                // 0x500(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Anim_RapidBoost_Loop;                              // 0x508(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bJetVertical;                                      // 0x510(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1D57[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UJetPad* GetDefaultObj();

	void OnRapidBoostActivationChanged(bool bActivated);
	void OnJetModuleLevelChanged(int32 NewLevel);
	void InitializeWithCharacter(class ASolarCharacter* OwningCharacter);
};

// 0x20 (0x368 - 0x348)
// Class Solarland.JobEffectDetailItemWidget
class UJobEffectDetailItemWidget : public USolarUserWidget
{
public:
	class UImage*                                Image_Icon;                                        // 0x348(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarRichTextBlock*                   Text_Info;                                         // 0x350(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarTextBlock*                       Text_Category;                                     // 0x358(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarTextBlock*                       Text_Name;                                         // 0x360(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UJobEffectDetailItemWidget* GetDefaultObj();

	void RefreshColor(struct FBattleUpgradeEffectCategoryColorSet& ColorSet);
};

// 0x50 (0x398 - 0x348)
// Class Solarland.SolarPanelWidget
class USolarPanelWidget : public USolarUserWidget
{
public:
	class UCanvasPanel*                          CanvasPanel_Bg;                                    // 0x348(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                          CanvasPanel_Content;                               // 0x350(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	FDelegateProperty_                           AnimationEnterStartedEvent;                        // 0x358(0x10)(ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPrivate)
	FDelegateProperty_                           AnimationEnterFinishedEvent;                       // 0x368(0x10)(ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPrivate)
	FDelegateProperty_                           AnimationExitStartedEvent;                         // 0x378(0x10)(ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPrivate)
	FDelegateProperty_                           AnimationExitFinishedEvent;                        // 0x388(0x10)(ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class USolarPanelWidget* GetDefaultObj();

	void OnAnimationExitStarted();
	void OnAnimationExitFinished();
	void OnAnimationEnterStarted();
	void OnAnimationEnterFinished();
};

// 0x0 (0x398 - 0x398)
// Class Solarland.JobEffectDetailPanel
class UJobEffectDetailPanel : public USolarPanelWidget
{
public:

	static class UClass* StaticClass();
	static class UJobEffectDetailPanel* GetDefaultObj();

	TArray<class UJobEffectDetailItemWidget*> GetItemWidgets();
};

// 0x10 (0x358 - 0x348)
// Class Solarland.JobEffectItemWidget
class UJobEffectItemWidget : public USolarUserWidget
{
public:
	class USolarTextBlock*                       Text_Number;                                       // 0x348(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Img_Icon;                                          // 0x350(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UJobEffectItemWidget* GetDefaultObj();

	void RefreshColor(struct FBattleUpgradeEffectCategoryColorSet& ColorSet);
	void PlayRefreshAnimation();
};

// 0x38 (0x380 - 0x348)
// Class Solarland.JobEffectSelectOptionWidget
class UJobEffectSelectOptionWidget : public USolarUserWidget
{
public:
	class UImage*                                Image_Icon;                                        // 0x348(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarRichTextBlock*                   Text_Info;                                         // 0x350(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarTextBlock*                       Text_Category;                                     // 0x358(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Anim_Select;                                       // 0x360(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UButton*                               Button_Select;                                     // 0x368(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	FDelegateProperty_                           OnSelected;                                        // 0x370(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UJobEffectSelectOptionWidget* GetDefaultObj();

	void RefreshColor(struct FBattleUpgradeEffectCategoryColorSet& ColorSet);
	void OnSelected__DelegateSignature(class UJobEffectSelectOptionWidget* Widget);
	void OnSelectButtonClicked();
	void OnSelectAnimFinished();
};

// 0x30 (0x378 - 0x348)
// Class Solarland.JobEffectSelectPanel
class UJobEffectSelectPanel : public USolarUserWidget
{
public:
	class UWidgetAnimation*                      Anim_Enter;                                        // 0x348(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Anim_Quit;                                         // 0x350(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UJobEffectSelectOptionWidget*>  OptionWidgets;                                     // 0x358(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1D72[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UJobEffectSelectPanel* GetDefaultObj();

	void OnSelectingJobEffectBegin(class ASolarCharacter* Target, int32 Level, TArray<int32>& EffectIDArray);
	void OnOptionWidgetClicked(class UJobEffectSelectOptionWidget* OptionWidget);
	void OnFadeOutFinished();
};

// 0x80 (0xA8 - 0x28)
// Class Solarland.KeyMappingFileMgr
class UKeyMappingFileMgr : public UObject
{
public:
	uint8                                        Pad_1D75[0x80];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UKeyMappingFileMgr* GetDefaultObj();

};

// 0x248 (0x270 - 0x28)
// Class Solarland.KeyMappingManager
class UKeyMappingManager : public UObject
{
public:
	uint8                                        Pad_1D7E[0xF8];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnKeyMappingUpdate;                                // 0x120(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnKeyMappingConfirm;                               // 0x130(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnKeyboardUpdate;                                  // 0x140(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_1D7F[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<class FString, class FString>           OccupiedKeyMap;                                    // 0x160(0x50)(NativeAccessSpecifierPublic)
	uint8                                        Pad_1D80[0xB0];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UKeyMappingFileMgr*                    KeyMappingFileMgr;                                 // 0x260(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1D81[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UKeyMappingManager* GetDefaultObj();

	void SwitchKeyMappingPlanIndex(int32 PlanIndex);
	void SwitchKeyMapping(const class FString& ActionName, int32 SettingIndex, bool Enable, bool Force);
	void ResetKeyMapping();
	bool IsComboKey(const class FString& KeyName);
	void ImportKeyMappingSetting();
	bool HasKeyModified();
	TArray<class FString> GetAllActionNames(int32 PlanIndex);
	TArray<class FString> GetActionKeyMapping(const class FString& ActionName, int32 PlanIndex, int32 SettingIndex);
	void ApplyResult();
};

// 0x2A0 (0x4C8 - 0x228)
// Class Solarland.KillInfoManager
class AKillInfoManager : public AGameManagerBase
{
public:
	TArray<enum class EKillNoticeType>           KillEffectsOrder;                                  // 0x228(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<enum class EKillNoticeType>           GlobalInfoList;                                    // 0x238(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1D8A[0x150];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                KillLeaderID;                                      // 0x398(0x10)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        KillLeaderKillNum;                                 // 0x3A8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1D8B[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                AnnihilatorID;                                     // 0x3B0(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1D8C[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                KillLeaderChangeVoiceName;                         // 0x3C8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                KillLeaderShutDownVoiceName;                       // 0x3D8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                BeKillLeaderVoiceName;                             // 0x3E8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                ShutDownKillLeaderVoiceName;                       // 0x3F8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<int32, class FString>                   KillTotalVoiceMap;                                 // 0x408(0x50)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class FString                                RevengeVoiceName;                                  // 0x458(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                KillDownVoiceName;                                 // 0x468(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                ClearTeamVoiceName;                                // 0x478(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                ShutDownVoiceName;                                 // 0x488(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                KillDefenderVoiceName;                             // 0x498(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCustomNoticeImageTable*               NoticeImageConfig;                                 // 0x4A8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1D8F[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AKillInfoManager* GetDefaultObj();

	bool PlayKillInfoVoice(int32 InNoticeID, int32 InKillNum, FDelegateProperty_& InDelegate);
	void OnRep_KillLeaderID();
	void ClientKillInfoNotify(class ASolarPlayerState* InKiller, class ASolarPlayerState* InVictim, int32 KillExtraInfoHashValue);
	void ClientKillEffectNotify(class ASolarPlayerState* InKiller, class ASolarPlayerState* InVictim, int32 KillEffectExtraInfoHashValue);
};

// 0x1F8 (0x540 - 0x348)
// Class Solarland.ListEntry_Goods
class UListEntry_Goods : public USolarUserWidget
{
public:
	uint8                                        Pad_1DAA[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnItemPurchaseRequested;                           // 0x350(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FDelegateProperty_                           RequestEnergyGetter;                               // 0x360(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)
	FDelegateProperty_                           RequestItemRecommendation;                         // 0x370(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)
	class UWidgetSwitcher*                       WidgetSwitcher_State;                              // 0x380(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                          State_Normal;                                      // 0x388(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                          Panel_Recommend;                                   // 0x390(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Img_Item1_BG;                                      // 0x398(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Img_Item1;                                         // 0x3A0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarTextBlock*                       Txt_ItemCount;                                     // 0x3A8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarTextBlock*                       Txt_ItemName;                                      // 0x3B0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarTextBlock*                       Txt_Introduce;                                     // 0x3B8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetSwitcher*                       WidgetSwitcher_Buy;                                // 0x3C0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarButton*                          Btn_Buy;                                           // 0x3C8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOverlay*                              Overlay_Discount;                                  // 0x3D0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                            Txt_ElectricityNum_Undiscounted;                   // 0x3D8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                            Txt_ElectricityNeeded;                             // 0x3E0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarButton*                          Btn_CantBuy;                                       // 0x3E8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOverlay*                              Overlay_Discount_CantBuy;                          // 0x3F0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                            Txt_ElectricityNum_Undiscounted_CantBuy;           // 0x3F8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                            Txt_ElectricityNeeded_CantBuy;                     // 0x400(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                          Panel_BuySucceed;                                  // 0x408(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Image_BG2_2;                                       // 0x410(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarTextBlock*                       Txt_BuySucceed;                                    // 0x418(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                          Panel_NotAvailable;                                // 0x420(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Image_BG2;                                         // 0x428(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarTextBlock*                       Txt_NotAvailable;                                  // 0x430(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                          Panel_Refresh;                                     // 0x438(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                          State_CD;                                          // 0x440(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UProgressBar*                          Progress_CD;                                       // 0x448(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarTextBlock*                       Txt_InPrepare;                                     // 0x450(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarTextBlock*                       Txt_CD;                                            // 0x458(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Succeed_Anim;                                      // 0x460(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Refresh_Anim;                                      // 0x468(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Recommend_Anim;                                    // 0x470(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1DAC[0x98];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                AkNameGoodsRefresh;                                // 0x510(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                AkNameGoodsBuy;                                    // 0x520(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                AkNameGoodsBuyFailed;                              // 0x530(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UListEntry_Goods* GetDefaultObj();

	void UpdateTexts(const class FString& Name, const class FString& Info, int32 Num, int32 Price, int32 UndiscountedPrice);
	void UpdateIfNotAvailable();
	void UpdateCDText();
	void UpdateButtonBuy();
	void ShowItemRefreshEffect();
	void SetIsRecommendState(bool InIsRecommend);
	bool RequestItemRecommendation__DelegateSignature(int32 ItemID);
	float RequestEnergyGetter__DelegateSignature();
	void OnSucceedAnimFinish();
	void OnPurchaseSuccess(int32 InProductID, class ASolarCharacter* InCharacter);
	void OnListItemObjectSetInternal(class UObject* InObject);
	void OnItemRefreshEffectFinish();
	void OnItemRefreshAnimFinish();
	void OnItemRefresh(class ASolarElectricShop* InElectricShop);
	void OnItemPurchaseRequested__DelegateSignature(int32 ProductID, bool bRecommend);
	void OnItemCDRefresh(class ASolarElectricShop* InElectricShop);
	void OnClickBtnCantBuy();
	void OnClickBtnBuy();
	void HidePurchaseEffect();
	float GetRemainningCD();
	int32 GetItemID();
	float GetDiscountedPrice(float Price);
	void CheckToShowItemRefreshEffect();
	void CheckStartCD(bool InCheckBuyer);
	void CheckRecommendStateImmediately();
	void CheckEnergyAvaliableImmediately();
	void CheckEnergyAvaliable(float CurrentValue);
	void CachedNewData(struct FElectricShopItem& InNewItemData);
	void BindDelegates();
	void AsyncLoadTextutes(int32 InQuality, const class FString& Icon, enum class EItemType InType);
};

// 0x0 (0x260 - 0x260)
// Class Solarland.LoadingAnim
class ULoadingAnim : public UUserWidget
{
public:

	static class UClass* StaticClass();
	static class ULoadingAnim* GetDefaultObj();

	void StopLoadingAnimation();
	void StartLoadingAnimation();
};

// 0x10 (0x40 - 0x30)
// Class Solarland.LoadingBgDataAsset
class ULoadingBgDataAsset : public UDataAsset
{
public:
	TArray<struct FULoadingDataEntry>            LoadingDataConfig;                                 // 0x30(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class ULoadingBgDataAsset* GetDefaultObj();

};

// 0x28 (0x60 - 0x38)
// Class Solarland.SolarLoadingSetting
class USolarLoadingSetting : public UDeveloperSettings
{
public:
	TArray<float>                                DataTraceTimeTrigger;                              // 0x38(0x10)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableLoadingReport;                              // 0x48(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableShowLoadingTasks;                           // 0x49(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1DB0[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                ReportMapMustHaveStr;                              // 0x50(0x10)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class USolarLoadingSetting* GetDefaultObj();

};

// 0x248 (0x4A8 - 0x260)
// Class Solarland.LoadingUIBase
class ULoadingUIBase : public ULoadingWidgetBase
{
public:
	class UImage*                                Img_Bg;                                            // 0x260(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UProgressBar*                          LoadProgress;                                      // 0x268(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarTextBlock*                       Txt_Percent_Num;                                   // 0x270(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarTextBlock*                       Txt_Tips;                                          // 0x278(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarTextBlock*                       Txt_Tips_Title;                                    // 0x280(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarTextBlock*                       Txt_Tips_Left;                                     // 0x288(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarTextBlock*                       Txt_Tips_Mid;                                      // 0x290(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarTextBlock*                       Txt_Tips_Right;                                    // 0x298(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<class FString, class UTexture2D*>       BGImgMap;                                          // 0x2A0(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class USolarTextBlock*                       Txt_Task_1;                                        // 0x2F0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarTextBlock*                       Txt_Task_2;                                        // 0x2F8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarTextBlock*                       Txt_Task_3;                                        // 0x300(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarTextBlock*                       Txt_Task_4;                                        // 0x308(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarTextBlock*                       Txt_Task_5;                                        // 0x310(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarTextBlock*                       Txt_Task_6;                                        // 0x318(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarTextBlock*                       Txt_Task_7;                                        // 0x320(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1DBF[0x158];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FULoadingDataEntry>            ShowBgLoadingArray;                                // 0x480(0x10)(ZeroConstructor, Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1DC0[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        FakeProgress;                                      // 0x4A0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1DC1[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ULoadingUIBase* GetDefaultObj();

	void StartDisplayLoading(TArray<struct FULoadingDataEntry>& InLoadingBgArray, float InShowBgTime, bool bInOrder, float InShowTipsTime);
	void SetTips(class FText& InTips);
	void SetLoadingProgress(float InPercent);
	void SetFakeProgress(float NewProgress);
	void SetBGImgFromPath(struct FSoftObjectPath& Path);
	void SetBGImg(const class FString& ImgName);
	void OnWidgetReleasedAsLoadingScreen(class UObject* Outer);
	void OnWidgetCreatedAsLoadingScreen(class UObject* Outer);
	void OnLevelPreLoad(const class FString& MapPackageName);
	void OnAsyncLoadingFlushUpdate();
};

// 0x40 (0x388 - 0x348)
// Class Solarland.MapMarkBase
class UMapMarkBase : public USolarUserWidget
{
public:
	class UMiniMapBase*                          MapOwner;                                          // 0x348(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             MarkIconRealLoc;                                   // 0x350(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             MarkIconAlignment;                                 // 0x358(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsOnBigMap;                                        // 0x360(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EMarkerType                       MarkerType;                                        // 0x361(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsMapObject;                                       // 0x362(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         MoveAble;                                          // 0x363(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         SupportEdge;                                       // 0x364(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         SupportEdgeWithBigMap;                             // 0x365(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1DD8[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                TargetActorRef;                                    // 0x368(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1DD9[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UMapMarkBase* GetDefaultObj();

	void UpdateIconWithActor(class AActor* InTargetActor);
	void SetUpdateState(bool ShouldUpdateLocation);
	void SetMarkPos(struct FVector& Loc);
	void SetEdgeSupport(bool IsSupportEdge, bool WithBigMap);
	void SetColorOpacityIndex(uint8 InColorOpacityIndex);
	void OnBigMapOpen();
	void InitVehicleMarkIcon(int32 VehicleID);
	void InitStaticIcon(int32 MarkID);
	void InitMarkIcon(int32 MarkID, class AActor* InTargetActor, bool InMoveable);
	void EdgeFix(const struct FVector2D& Pos);
	void CleanData();
};

// 0x48 (0x390 - 0x348)
// Class Solarland.MapSelectPointCellWidget
class UMapSelectPointCellWidget : public USolarUserWidget
{
public:
	bool                                         bCellSelectionState;                               // 0x348(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1DDD[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EMapCellSelectionAccess           SelectionAccess;                                   // 0x350(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1DDE[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                CellAddress;                                       // 0x358(0x10)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1DDF[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class ASolarMapSelectPoint*                  SelectPointElement;                                // 0x388(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UMapSelectPointCellWidget* GetDefaultObj();

	void SetSelectionAccess(enum class EMapCellSelectionAccess InState);
	void OnSelectionStateChanged(bool InState);
	void OnSelectionAccessChanged(enum class EMapCellSelectionAccess CurrentState);
};

// 0x8 (0x350 - 0x348)
// Class Solarland.MapSelectPointNoticeMap
class UMapSelectPointNoticeMap : public USolarUserWidget
{
public:
	class ASolarMapSelectPoint*                  SelectPointElement;                                // 0x348(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UMapSelectPointNoticeMap* GetDefaultObj();

	void OnTouchPanel(struct FVector2D& InPosition);
	void OnInitialMap(int32 InMinimapID);
	void OnAddNewCell(struct FVector2D& InNewPosition, class UMapSelectPointCellWidget* InNewCellWidget);
};

// 0x0 (0x348 - 0x348)
// Class Solarland.MapSelectPointWidget
class UMapSelectPointWidget : public USolarUserWidget
{
public:

	static class UClass* StaticClass();
	static class UMapSelectPointWidget* GetDefaultObj();

};

// 0x38 (0x3C0 - 0x388)
// Class Solarland.MarkIconWidget
class UMarkIconWidget : public UMapMarkBase
{
public:
	class FString                                AtlasPath;                                         // 0x388(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                SpriteType;                                        // 0x398(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                ImageMarker;                                       // 0x3A8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1DE5[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UMarkIconWidget* GetDefaultObj();

	void SetTransparent(float TransparentPercent);
	void SetMarkerType(enum class EMarkerType Type, bool bRefreshSlot, bool bNeedSyncLoadIcon);
};

// 0x5A8 (0x5D0 - 0x28)
// Class Solarland.MassInvisibilityEffectController
class UMassInvisibilityEffectController : public UActorEffectController
{
public:
	struct FMassInvStateTransitionData           Transition_EnterPrepare;                           // 0x28(0x90)(Edit, NativeAccessSpecifierPublic)
	struct FMassInvStateTransitionData           Transition_PrepareToNormal;                        // 0xB8(0x90)(Edit, NativeAccessSpecifierPublic)
	struct FMassInvStateTransitionData           Transition_NormalToSprint;                         // 0x148(0x90)(Edit, NativeAccessSpecifierPublic)
	struct FMassInvStateTransitionData           Transition_SprintToNormal;                         // 0x1D8(0x90)(Edit, NativeAccessSpecifierPublic)
	struct FMassInvStateTransitionData           Transition_AnyToEnd;                               // 0x268(0x90)(Edit, NativeAccessSpecifierPublic)
	struct FMassInvMaterialParams                OriginalParams;                                    // 0x2F8(0x28)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FMassInvStateMaterialParams           TeammateParams;                                    // 0x320(0x78)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FMassInvStateMaterialParams           OpponentParams;                                    // 0x398(0x78)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                    SprintTillingCurve;                                // 0x410(0x88)(Edit, NativeAccessSpecifierPublic)
	class FName                                  OrnamentMatAnimParamName;                          // 0x498(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                    OrnamentMatAnimCurve;                              // 0x4A0(0x88)(Edit, NativeAccessSpecifierPublic)
	uint8                                        Pad_1DE6[0xA8];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UMassInvisibilityEffectController* GetDefaultObj();

};

// 0x110 (0x160 - 0x50)
// Class Solarland.MaterialEffectBase
class UMaterialEffectBase : public UActorEffect
{
public:
	uint8                                        Pad_1DE7[0x110];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UMaterialEffectBase* GetDefaultObj();

};

// 0x60 (0x1C0 - 0x160)
// Class Solarland.MaterialSimpleEffect
class UMaterialSimpleEffect : public UMaterialEffectBase
{
public:
	struct FNormalMaterialChange                 MaterialChange;                                    // 0x160(0x50)(Edit, NativeAccessSpecifierPublic)
	TArray<struct FSoftObjectPath>               NoChangeMaterials;                                 // 0x1B0(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UMaterialSimpleEffect* GetDefaultObj();

};

// 0x10 (0x1D0 - 0x1C0)
// Class Solarland.MaterialVariableEffect
class UMaterialVariableEffect : public UMaterialSimpleEffect
{
public:
	TArray<struct FMaterialVariableChange>       VariableChanges;                                   // 0x1C0(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UMaterialVariableEffect* GetDefaultObj();

};

// 0x8 (0x268 - 0x260)
// Class Solarland.MemberStateBase
class UMemberStateBase : public UUserWidget
{
public:
	uint8                                        Pad_1DEE[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MinimalSize;                                       // 0x264(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UMemberStateBase* GetDefaultObj();

	void UpdateWithCurrentMemberIndex(uint8 CurrentIndex);
	void UnbindMemberEvent(uint8 MemberIndex);
	void OnMinimalSizeSet(float NewSize);
	void ChangeMemberIndex(uint8 NewIndex);
	void BindMemberEvent(uint8 MemberIndex);
};

// 0x10 (0x278 - 0x268)
// Class Solarland.MemberNational
class UMemberNational : public UMemberStateBase
{
public:
	class UImage*                                ImgFlagIcon;                                       // 0x268(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1DF2[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UMemberNational* GetDefaultObj();

	void RefreshFlag(int32 InFlagID, bool bUsingClan);
	void OnPlayerFlagDisplayOptionChanged(bool bDisplay);
};

// 0x0 (0x348 - 0x348)
// Class Solarland.MicroPhoneOperationBase
class UMicroPhoneOperationBase : public USolarUserWidget
{
public:

	static class UClass* StaticClass();
	static class UMicroPhoneOperationBase* GetDefaultObj();

	void Init(class UUserWidget* Owner);
	void CloseSpeakOperator();
	void CloseMicOperator();
};

// 0x58 (0x3A0 - 0x348)
// Class Solarland.MiniMapBase
class UMiniMapBase : public USolarUserWidget
{
public:
	int32                                        MaxPool;                                           // 0x348(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1E0E[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<class FString, struct FMapMarkElemArray> MapMarkPool;                                       // 0x350(0x50)(BlueprintVisible, BlueprintReadOnly, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UMiniMapBase* GetDefaultObj();

	void RemoveMarkIcon(class UMapMarkBase* InMapMark);
	void RemoveDotLineOnMap(int32 DotLineID);
	void RemoveAllMapMarks();
	bool RecycleMapMark(const class FString& MapMarkName, class UMapMarkBase* MapMarkToRecycle);
	void MapScaleFormat(class UMapMarkBase* MapMark);
	class UMapMarkBase* InitMarkIconOnMapFrame(TSubclassOf<class UMapMarkBase> InMapMarkClass, struct FVector2D& Pivot, int32 ZOrder);
	class UMapMarkBase* InitMarkIcon(TSubclassOf<class UMapMarkBase> InMapMarkClass, struct FVector2D& InMarkPos, bool EdgeSupport, bool EdgeSupportWithBigMap, int32 ZOrder);
	void InitMapMarkPool();
	class UMapMarkBase* GetFreeMapMark(const class FString& MapMarkName);
	class UMapMarkBase* CreateMapMark(const class FString& MapMarkName);
	int32 AddDotLineOnMap(class AActor* StartPointActor, class AActor* EndPointActor, const struct FLinearColor& DotLineColor);
};

// 0x8 (0x350 - 0x348)
// Class Solarland.MiniMapBGWidget
class UMiniMapBGWidget : public USolarUserWidget
{
public:
	class USolarImage*                           Img_Map;                                           // 0x348(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UMiniMapBGWidget* GetDefaultObj();

};

// 0x358 (0x6F8 - 0x3A0)
// Class Solarland.MiniMapWidget
class UMiniMapWidget : public UMiniMapBase
{
public:
	uint8                                        Pad_1E26[0x14];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FMiniMapData                          MiniMapData;                                       // 0x3B4(0x18)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	bool                                         AutoOffset;                                        // 0x3CC(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         OnCar;                                             // 0x3CD(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         WithIconScale;                                     // 0x3CE(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1E27[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        AspectRatio;                                       // 0x3D0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EMapState                         CurrentState;                                      // 0x3D4(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1E28[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector2D                             SelfNavSlotSize;                                   // 0x3D8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<int32, class UPlayerNavWidget*>         PlayerNavMap;                                      // 0x3E0(0x50)(BlueprintVisible, ExportObject, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class USizeBox*                              MapFOVSizeBox;                                     // 0x430(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCanvasPanel*                          MapOffset;                                         // 0x438(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarImage*                           SolarImageMap;                                     // 0x440(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCanvasPanel*                          ImageFrameLayer;                                   // 0x448(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCanvasPanel*                          MarkerLayer;                                       // 0x450(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UScaleBox*                             MapScale;                                          // 0x458(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCanvasPanel*                          RenderTargetCanvas;                                // 0x460(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarImage*                           Img_EMP;                                           // 0x468(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMeshRectangleWidget*                  IconMeshRectangleWidget;                           // 0x470(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMeshRectangleWidget*                  AnimIconMeshWidget;                                // 0x478(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FConfigMiniMapMeshWidgetData          MiniMapMeshWidgetConfigData;                       // 0x480(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	class UPlayerNavWidget*                      SelfNav;                                           // 0x498(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             CurrentMapOffset;                                  // 0x4A0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             MapIconScale;                                      // 0x4A8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarMapManager*                      MapMgr;                                            // 0x4B0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMiniMapBGWidget*                      MapImageWidget;                                    // 0x4B8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bBelongToBigMap;                                   // 0x4C0(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1E29[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ClampMarkTickRate;                                 // 0x4C4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<enum class EAirdropStatus, struct FAirdropMeshWidgetData> AirdropMeshWidgetDataMap;                          // 0x4C8(0x50)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                        AdjustMapRatio;                                    // 0x518(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AdjustWorldDis;                                    // 0x51C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AirdropAnimOutsideScale;                           // 0x520(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AirdropClearTime;                                  // 0x524(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1E2A[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FConfigMiniMapMeshWidgetData          ReviveMarkNormalParms;                             // 0x52C(0x18)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FConfigMiniMapMeshWidgetData          ReviveMarkAnimParms;                               // 0x544(0x18)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	float                                        ReviveMarkAnimTime;                                // 0x55C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        IconSizeFormatInterval;                            // 0x560(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1E2B[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bUpdateSelfNav;                                    // 0x574(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1E2C[0x53];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UCurveFloat*                           CacheFOVScaleCurve;                                // 0x5C8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1E2D[0x128];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UMiniMapWidget* GetDefaultObj();

	void VehicleClear(bool IsOwner);
	void UpdateVehicleModeMapFOV();
	void UpdatePoisonEffect(float PosX, float PosY, float Radius);
	void UpdateMeshWidgetMarkSlotSize(const class FString& MarkKey, struct FVector2D& InMarkSlotSize);
	void UpdateMeshWidgetMarkColorOpacityIndex(const class FString& MarkKey, int32 InColorOpacityIndex);
	void UpdateMeshWidgetIconTexId(const class FString& MarkKey, int32 InIconTexId);
	void UpdateEmp();
	void StopReviveTeammateAnim(const class FString& InKey);
	class FString SpawnMeshWidgetMapMarkInfo(enum class EMarkerType InMarkType, struct FVector2D& InMarkPos, const class FString& InMarkName, int32 InMarkIndex);
	void SetMapFOVBySpeed(float InSpeed);
	void SetMapFOVAutoOffset(float InNewFOV);
	void SetMapFOV(float InNewFOV, struct FVector2D& InScaleCenter);
	void SetBelongToBigMap(bool bIsBelongToBigMap);
	void SetAirdropMeshWidgetStatus(const class FString& InKey, enum class EAirdropStatus InNewStatus);
	void RemoveMeshWidgetMark(const class FString& MarkKey);
	void RemoveAllNav();
	void RegisterDataProvider();
	void RefreshLastVehicleLocation();
	void PlayReviveTeammateAnim(const class FString& InKey, uint8 InColorIdx);
	void OnSpecTargetChanged(class ASolarPlayerState* OldTarget, class ASolarPlayerState* NewTarget);
	void OnReviveWorldMarkRemoved(const class FString& InPlayerID);
	void OnReviveWorldMarkPlayAnim(class ASolarPlayerState* InPlayerState);
	void OnReviveWorldMarkCreated(const class FString& InPlayerID);
	void OnRemoveReviveWorldMark(class ASolarPlayerState* InPlayerState);
	void OnRemoveAllReviveWorldMark();
	void OnMiniMapDataInitialized();
	void OnFOVScaleChangedByPoison(class UCurveFloat* InCurve);
	void OnCreateReviveWorldMark(class ASolarPlayerState* InPlayerState, struct FVector& InWorldLoc);
	void OnAllReviveWorldMarkRemoved();
	void KeepSelfInTheCenter();
	bool IsReviveWorldMarkCreated(const class FString& InPlayerID);
	void InitMinFOV(float InFOV);
	void InitMapFovAndSize();
	void InitFovAndSize();
	void IconSizeFormat();
	class UPlayerNavWidget* GetSelfNav();
	struct FVector2D GetMinAndMaxFOV();
	class ASolarPlayerState* GetCameraFocusedCharacterState();
	void FormatAirline(float InScaleValue);
	void ClearVehicleMarkWidget();
	void ClearPlayerMarkPoint();
	void ClearMiniMapMarkWidget();
	void AdjustMapOffset(const struct FVector2D& MapLocation);
	class FString AddMeshWidgetMark(struct FVector2D& InPosition, struct FVector2D& InMarkSlotSize, enum class EMarkerType InMarkType, float InRenderTransformScaleX, const class FString& InMarkName, int32 InMarkIndex);
};

// 0x198 (0x3C0 - 0x228)
// Class Solarland.MissileSwarmLauncher
class AMissileSwarmLauncher : public AActor
{
public:
	bool                                         bDrawDebug;                                        // 0x228(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1E2E[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        EjectSpeed;                                        // 0x22C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EjectGravity;                                      // 0x230(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EjectTimeLength;                                   // 0x234(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BoostSpeed;                                        // 0x238(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BoostCtrlSpread;                                   // 0x23C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DamagePerBullet;                                   // 0x240(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExplodeRadius;                                     // 0x244(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bTeammateDamage;                                   // 0x248(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1E2F[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<enum class EObjectTypeQuery>          CanDamageObjectTypes;                              // 0x250(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       ExplodeMarkParticle;                               // 0x260(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       BulletParticle;                                    // 0x268(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       RibbonTrajectoryParticle;                          // 0x270(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       EjectParticle;                                     // 0x278(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       BoostParticle;                                     // 0x280(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       ExplodeParticle;                                   // 0x288(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1E31[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UParticleSystemComponent*>      ExplodeMarkEffects;                                // 0x2B0(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ASolarCharacter*                       OwnerCharacter;                                    // 0x2C0(0x8)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              PlayerRotation;                                    // 0x2C8(0xC)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_1E32[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USkeletalMeshComponent*                SpawnerMesh;                                       // 0x2D8(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMesh*                         SpawnerTemplateMesh;                               // 0x2E0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpawnerAnimTime;                                   // 0x2E8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MissileShootTime;                                  // 0x2EC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RemoveAnimTime;                                    // 0x2F0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SpawnerMeshMaterialParamName;                      // 0x2F4(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               RocketSpawnerMeshOffset;                           // 0x2FC(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RocketSpawnerMeshPitchOffset;                      // 0x308(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1E34[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FName>                          MuzzleSocketNames;                                 // 0x310(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpawnerMoveInterpSpeed;                            // 0x320(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpawnerMoveInterpMinSpeed;                         // 0x324(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseForwardAxisY;                                  // 0x328(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1E35[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAnimationAsset*                       SpawnerIdleAnim;                                   // 0x330(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimationAsset*                       SpawnerFireAnim;                                   // 0x338(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                SpawnerStartSoundName1P;                           // 0x340(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                SpawnerStartSoundName3P;                           // 0x350(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                SpawnerEndSoundName1P;                             // 0x360(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                SpawnerEndSoundName3P;                             // 0x370(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                FireSoundName1P;                                   // 0x380(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                FireSoundName3P;                                   // 0x390(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                FireImpactSoundName;                               // 0x3A0(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1E36[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AMissileSwarmLauncher* GetDefaultObj();

	void ServerUpdateCharacterRotation(struct FRotator& InRotation);
	void NetMulticastEmitMissileSwarm(TArray<struct FMissileSwarmSpawnParameter>& InSwarm, TArray<struct FVector>& InTargetLocs);
};

// 0x0 (0x40 - 0x40)
// Class Solarland.MMC_GenericCooldown
class UMMC_GenericCooldown : public UGameplayModMagnitudeCalculation
{
public:

	static class UClass* StaticClass();
	static class UMMC_GenericCooldown* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Solarland.MobileWidgetDebuggerLibrary
class UMobileWidgetDebuggerLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UMobileWidgetDebuggerLibrary* GetDefaultObj();

	bool IsWidgetFastPathVisible(class UWidget* InWidget);
	TArray<TSubclassOf<class UUserWidget>> GetAllWidgetClass(class UObject* WorldContextObject, bool bIncludeDebug);
	TSubclassOf<class UUserWidget> ConvertToUserWidgetClass(class UObject* InObject);
	class UObject* ConvertToObject(TSubclassOf<class UUserWidget> InClass);
};

// 0x0 (0x28 - 0x28)
// Class Solarland.MobileWidgetDebugger
class UMobileWidgetDebugger : public UObject
{
public:

	static class UClass* StaticClass();
	static class UMobileWidgetDebugger* GetDefaultObj();

	class UWidget* FindWidget(TSubclassOf<class UUserWidget> BaseWidgetClass, const TArray<class FName>& WidgetRelationList, TArray<class FString>* OutErrorMsg, bool bPrintLog);
	class UMobileWidgetDebugger* Create(class UObject* Outer);
};

// 0x8 (0x30 - 0x28)
// Class Solarland.ModMagnitudeCalcProxy
class UModMagnitudeCalcProxy : public UObject
{
public:
	TWeakObjectPtr<class USolarModMagnitudeCalc> CDOOwner;                                          // 0x28(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UModMagnitudeCalcProxy* GetDefaultObj();

	class UModMagnitudeCalcProxy* CreateProxy(class USolarModMagnitudeCalc* InCDOOwner, TSubclassOf<class UModMagnitudeCalcProxy> ProxyClass);
	float CalculateBaseMagnitude(struct FGameplayEffectSpec& Spec);
};

// 0x68 (0x1C8 - 0x160)
// Class Solarland.MultiplePassMaterialEffect
class UMultiplePassMaterialEffect : public UMaterialEffectBase
{
public:
	struct FMultiplePassMaterialChange           MaterialChange;                                    // 0x160(0x68)(Edit, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UMultiplePassMaterialEffect* GetDefaultObj();

};

// 0x170 (0x220 - 0xB0)
// Class Solarland.NgaiAIControllerComponent
class UNgaiAIControllerComponent : public UActorComponent
{
public:
	class ASolarCharacterBase*                   EnemyCharacterBase;                                // 0xB0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1E4B[0x168];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UNgaiAIControllerComponent* GetDefaultObj();

};

// 0x19148 (0x19218 - 0xD0)
// Class Solarland.NgaiGameModeComponent
class UNgaiGameModeComponent : public UGameModeCompBase
{
public:
	uint8                                        Pad_1E4C[0x19148];                                 // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UNgaiGameModeComponent* GetDefaultObj();

};

// 0x0 (0x348 - 0x348)
// Class Solarland.NoticeMapBase
class UNoticeMapBase : public USolarUserWidget
{
public:

	static class UClass* StaticClass();
	static class UNoticeMapBase* GetDefaultObj();

	void SetMap(int32 MapID);
	void LuaInitMap(int32 MapID);
};

// 0x0 (0x348 - 0x348)
// Class Solarland.OBBigMapWidget
class UOBBigMapWidget : public USolarUserWidget
{
public:

	static class UClass* StaticClass();
	static class UOBBigMapWidget* GetDefaultObj();

	void OnSpectateTargetChanged(class ASolarPlayerState* OldTarget, class ASolarPlayerState* NewTarget);
	void OnBattleOBHUDTypeChanged(enum class EBattleOBHUDType& CurrentType);
};

// 0x50 (0x78 - 0x28)
// Class Solarland.OBDetailData
class UOBDetailData : public UObject
{
public:
	class ASolarPlayerState*                     SolarPlayerState;                                  // 0x28(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDetailedListViewInfo                 DetailedListViewInfo;                              // 0x30(0x40)(NativeAccessSpecifierPublic)
	uint8                                        Pad_1E4F[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOBDetailData* GetDefaultObj();

};

// 0x8 (0x350 - 0x348)
// Class Solarland.OBSettlementBase
class UOBSettlementBase : public USolarUserWidget
{
public:
	class UOBSettlementRoot*                     OBSettleRoot;                                      // 0x348(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UOBSettlementBase* GetDefaultObj();

};

// 0x98 (0x3E8 - 0x350)
// Class Solarland.OBDetailedDataList
class UOBDetailedDataList : public UOBSettlementBase
{
public:
	class UWidgetSwitcher*                       Btn_Switcher;                                      // 0x350(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTextBlock*                       Txt_TeamName;                                      // 0x358(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTextBlock*                       Txt_Rank;                                          // 0x360(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UListView*                             PlayerListPanel;                                   // 0x368(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarImage*                           Img_TitleBox;                                      // 0x370(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarImage*                           Img_TitleBg;                                       // 0x378(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarImage*                           Img_TitleBox_2;                                    // 0x380(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1E5B[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class ASolarPlayerState*>             AllTeammatePS;                                     // 0x390(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ASolarPlayerState*                     MVPPlayerState;                                    // 0x3A0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOBDetailData*                         TeamRowDataObject;                                 // 0x3A8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FDetailedTeamListViewInfo>     DetailedTeamListViewInfos;                         // 0x3B0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1E5C[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOBDetailedDataList* GetDefaultObj();

	void SetIsCheater(bool bIsCheater);
	void RefreshWindow(bool bIsPopDetailWindow);
	void RefreshRankColor(int32 InRank);
	void InitPlayerCompetitionDetailWindow(const TArray<struct FDetailedListViewInfo>& DetailedListViewInfos, const class FString& TeamName, int32 InRank, bool bIsPopDetailWindow);
	void InitPanel(class UOBSettlementRoot* InOwner);
	void InitCompetitionDetailWindow(const struct FDetailedTeamListViewInfo& DetailedTeamListViewInfo, bool bIsPopDetailWindow);
	void InitAsDetailWindow(uint8& InTeamId, int32& InRank, class UOBSettlementRoot* InOwner);
};

// 0x70 (0x3B8 - 0x348)
// Class Solarland.OBDetailedDataRow
class UOBDetailedDataRow : public USolarUserWidget
{
public:
	uint8                                        Pad_1E5D[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USolarImage*                           Image_MVP;                                         // 0x350(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUIComponentNationalFlag*              UI_NationalFlag;                                   // 0x358(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUIComponentPlayerName*                Txt_Name;                                          // 0x360(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUIComponentPlayerName*                Txt_KillNum;                                       // 0x368(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUIComponentPlayerName*                Txt_Slash;                                         // 0x370(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUIComponentPlayerName*                Txt_AssistNum;                                     // 0x378(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUIComponentPlayerName*                Txt_DMGDealt;                                      // 0x380(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUIComponentPlayerName*                Txt_DMGTaken;                                      // 0x388(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUIComponentPlayerName*                Txt_HPRestored;                                    // 0x390(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUIComponentPlayerName*                Txt_Time;                                          // 0x398(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUIComponentPlayerName*                Txt_MVPScore;                                      // 0x3A0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarUserWidget*                      UI_Input_Device;                                   // 0x3A8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOBDetailData*                         DetailRowData;                                     // 0x3B0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UOBDetailedDataRow* GetDefaultObj();

	void SetIsCheater(bool bIsCheater);
	void InitDetailedDataRow(class UObject* ListItemObject);
	void EnableMVPTag(bool bIsMVP);
};

// 0x20 (0x368 - 0x348)
// Class Solarland.OBFreeViewControlWidget
class UOBFreeViewControlWidget : public USolarUserWidget
{
public:
	class UWalkWidgetNew*                        ViewJoyStick;                                      // 0x348(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarInputButton*                     Btn_Up;                                            // 0x350(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarInputButton*                     Btn_Down;                                          // 0x358(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1E61[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOBFreeViewControlWidget* GetDefaultObj();

	void SetOBFreeViewUpAndDownButtonVisibility(bool bVisible);
	void OnUpdateWidgetVisibility();
	void OnUISettingUIOperationChanged(bool bVisible);
	void OnSpectateTargetChanged(class ASolarPlayerState* OldTarget, class ASolarPlayerState* NewTarget);
	void OnBattleOBHUDTypeChanged(enum class EBattleOBHUDType& CurrentType);
};

// 0x110 (0x458 - 0x348)
// Class Solarland.OBGlobalControlWidget
class UOBGlobalControlWidget : public USolarUserWidget
{
public:
	bool                                         bIsPCStyleForDesign;                               // 0x348(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1E6B[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USolarButton*                          Btn_SwitchCameraMode;                              // 0x350(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetSwitcher*                       Switcher_CameraMode;                               // 0x358(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarButton*                          Btn_SwitchPlayer;                                  // 0x360(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetSwitcher*                       WidgetSwitcher_Visibility;                         // 0x368(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarButton*                          Btn_SwitchUIVisibility;                            // 0x370(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetSwitcher*                       WidgetSwitcher_Player;                             // 0x378(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarButton*                          Btn_SwitchPlay;                                    // 0x380(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetSwitcher*                       WidgetSwitcher_Play;                               // 0x388(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                Img_SwitchPlayerSlc;                               // 0x390(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                Img_UIVisibilitySlc;                               // 0x398(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCanvasPanel*                          Panel_Mobile;                                      // 0x3A0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCanvasPanel*                          Panel_Player_List_PC;                              // 0x3A8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOBTeamListPopupWidget*                UI_OB_TeamList_Popup_PC;                           // 0x3B0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOBTeamListPopupWidget*                UI_OB_TeamList_Popup;                              // 0x3B8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UHorizontalBox*                        HorizontalBox_List_Shortcut;                       // 0x3C0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCanvasPanel*                          Panel_UIItemSetting;                               // 0x3C8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarCheckBox*                        CheckBox_AutoDirector;                             // 0x3D0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarCheckBox*                        CheckBox_UIAll;                                    // 0x3D8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarCheckBox*                        CheckBox_EnablePerspective;                        // 0x3E0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarCheckBox*                        CheckBox_UIOperation;                              // 0x3E8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarUserWidget*                      UI_OB_HUD_ShortcutKey;                             // 0x3F0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCanvasPanel*                          Panel_BattleUI_Map;                                // 0x3F8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCanvasPanel*                          Panel_Loading;                                     // 0x400(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUserWidget*                           OB_BattleUI_Map;                                   // 0x408(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUserWidget*                           SafeAreaProgressUI;                                // 0x410(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOBProgressBar*                        UI_OB_ProgressBar;                                 // 0x418(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCheckBoxGroup*                        CheckBoxGroup_HeadInfoStyle;                       // 0x420(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UButton*                               MapSwitcher;                                       // 0x428(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Anim_Setting_In;                                   // 0x430(0x8)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Anim_Setting_Exit;                                 // 0x438(0x8)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1E6E[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UOBTeamListPopupWidget*                CurrentTeamList;                                   // 0x448(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1E6F[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOBGlobalControlWidget* GetDefaultObj();

	void SetShortCutKeyMode(enum class EBattleOBHUDType& CurrentType);
	void SetLiveWatchOnlyStyle();
	void OnToggleShortCutKey();
	void OnToggleProgressControlButton();
	void OnToggleProgress();
	void OnTogglePlayerList();
	void OnTogglePerspective(bool bEnable);
	void OnPreConstruct(bool IsDesignTime);
	void OnPlayingScrubCharactersCreated();
	void OnHeadInfoStyleChanged(enum class EOBPlayerHeadInfoWidgetStyle Style);
	void OnCheckBoxUIOperationStateChanged(bool bIsChecked);
	void OnCheckBoxUIAllStateChanged(bool bIsChecked);
	void OnCheckBoxHeadInfoStyleStateChanged(TArray<class UCheckBox*>& ChildChangedArray, int32 CheckedChildIndex);
	void OnCheckBoxEnablePerspectiveChanged(bool bIsChecked);
	void OnCheckBoxAutoDirectorStateChanged(bool bIsChecked);
	void OnBtnSwitchUIVisibilityClicked();
	void OnBtnSwitchPlayerClicked();
	void OnBtnSwitchPlayClicked();
	void OnBtnSwitchCameraModeClicked();
	void OnBigMapOpen();
	void OnBattleOBHUDTypeChanged(enum class EBattleOBHUDType& CurrentType);
	void OnAutoDirectorEnableChanged();
};

// 0x50 (0x398 - 0x348)
// Class Solarland.OBGlobalInfoWidget
class UOBGlobalInfoWidget : public USolarUserWidget
{
public:
	class UTextBlock*                            Text_PlayerNum;                                    // 0x348(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                            Text_TeamNum;                                      // 0x350(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UVerticalBox*                          VerticalBox_Sync;                                  // 0x358(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USizeBox*                              DummyPlayerInfo;                                   // 0x360(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOverlay*                              Overlay_Comment;                                   // 0x368(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTextBlock*                       Txt_Comment;                                       // 0x370(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Anim_Comment_Enter;                                // 0x378(0x8)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Anim_Comment_Exit;                                 // 0x380(0x8)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarOBUIModel*                       SolarOBUIModel;                                    // 0x388(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1E74[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOBGlobalInfoWidget* GetDefaultObj();

	void UpdateRemainPanelView();
	void OnPlayNarrate(const class FString& InString);
	void OnGameStateSet(class AGameStateBase* GameState);
	void OnCommentExitAnimationFinished();
	void OnBattleOBHUDTypeChanged(enum class EBattleOBHUDType& CurrentType);
	void OnAutoPlaybackSpeedUpStop();
	void OnAutoPlaybackSpeedUpStart();
};

// 0x2A8 (0x5F0 - 0x348)
// Class Solarland.OBHeadInfoMeshWidget
class UOBHeadInfoMeshWidget : public USolarUserWidget
{
public:
	class USizeBox*                              SizeBox_Container;                                 // 0x348(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCanvasPanel*                          Panel_Info;                                        // 0x350(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMeshRectangleWidget*                  TeamMeshWidget;                                    // 0x358(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMeshRectangleWidget*                  OB_Shield;                                         // 0x360(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMeshRectangleWidget*                  OB_Shield_Damage;                                  // 0x368(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMeshRectangleWidget*                  OB_Shield_BG;                                      // 0x370(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMeshRectangleWidget*                  OB_HP;                                             // 0x378(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMeshRectangleWidget*                  OB_HP_Damage;                                      // 0x380(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMeshRectangleWidget*                  OB_HP_BG;                                          // 0x388(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMeshRectangleWidget*                  OB_HeadInfo_BG;                                    // 0x390(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMeshRectangleWidget*                  OB_Progress_BG;                                    // 0x398(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UScaleBox*                             ScaleBox_NickName;                                 // 0x3A0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUIComponentPlayerName*                UIComp_PlayerName;                                 // 0x3A8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UUIComponentPlayerName>    BP_PlayerName;                                     // 0x3B0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FConfigMeshData                       ConfigMeshData;                                    // 0x3B8(0xF8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	float                                        ProgressEasingSpeed;                               // 0x4B0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          HPColorNormal;                                     // 0x4B4(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          HPColorDying;                                      // 0x4C4(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          IncreaseColor;                                     // 0x4D4(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          DecreaseColor;                                     // 0x4E4(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1E79[0xFC];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOBHeadInfoMeshWidget* GetDefaultObj();

	void UpdateMeshProviderData();
	void OnScrubCharactersCreated();
};

// 0x80 (0x3C8 - 0x348)
// Class Solarland.OBHeadInfoWidget
class UOBHeadInfoWidget : public USolarUserWidget
{
public:
	class USolarImage*                           Image_TeamBG;                                      // 0x348(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarImage*                           Image_Frame;                                       // 0x350(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTextBlock*                       Text_TeamNum;                                      // 0x358(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarImage*                           Image_TeamBG_Middle;                               // 0x360(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarImage*                           Image_Frame_Middle;                                // 0x368(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTextBlock*                       Text_TeamNum_Middle;                               // 0x370(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                            Text_NickName;                                     // 0x378(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FOBTeammateInfo                       Data;                                              // 0x380(0x40)(NativeAccessSpecifierPrivate)
	uint8                                        Pad_1E7E[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOBHeadInfoWidget* GetDefaultObj();

	void UpdatePlayerHeadInfoWidgetStyle(enum class EOBPlayerHeadInfoWidgetStyle InHeadInfoWidgetStyle);
	void OnUpdateDistanceBetweenPlayerAndOBCamera();
	enum class EOBPlayerHeadInfoWidgetStyle GetHeadInfoWidgetStyleFromDistance(float InDistance);
};

// 0x20 (0x368 - 0x348)
// Class Solarland.OBHighlightBattleWidget
class UOBHighlightBattleWidget : public USolarUserWidget
{
public:
	class UDeathViewHPWidget*                    OBHP;                                              // 0x348(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTextBlock*                       Txt_Lvl;                                           // 0x350(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                CurrentPlayerID;                                   // 0x358(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UOBHighlightBattleWidget* GetDefaultObj();

	void OnCharacterLevelChanged(int32 NewLevel);
	void InitDataByPlayerID(const class FString& PlayerId, class FString* PlayerName, TSoftObjectPtr<class UTexture2D>* HeadIconPtr);
};

// 0x40 (0x388 - 0x348)
// Class Solarland.OBHighlightOverviewWidget
class UOBHighlightOverviewWidget : public USolarUserWidget
{
public:
	FMulticastInlineDelegateProperty_            OverviewPlayEnd;                                   // 0x348(0x10)(BlueprintVisible, ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            TranslatePlayBeginOver;                            // 0x358(0x10)(BlueprintVisible, ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            TranslatePlayEndOver;                              // 0x368(0x10)(BlueprintVisible, ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            HighlightPlayEnd;                                  // 0x378(0x10)(BlueprintVisible, ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UOBHighlightOverviewWidget* GetDefaultObj();

	void SwitchKillToolData(enum class EReplayActivityHeatKillUseType& ToolType, int32& KillToolID);
	void ShowHighlightTranslateNum(int32& TranslateNum);
	void ShowHighlightOverviewData(struct FPlayerHighlightOverview& OverviewData);
	void ShowHighlightMarkResult(float& TotalScore, const class FString& MarkName);
	void ShowHighlightKillToolEffect(const class FString& ToolName, TSoftObjectPtr<class UTexture2D>& ToolIcon);
	void ShowHighlightKillNum(int32& KillNum, float& KillEffectTime);
	void OnTranslatePlayEndOver();
	void OnTranslatePlayBeginOver();
	void OnOverviewPlayEnd();
	void OnHighlightPlayEnd();
	void HighlightOver();
	void HighlightFragmentOver();
	void ContinueHighlightTranslate();
	void CollectReplayPlayerOverviewData(const class FString& PlayerId, struct FReplayPlayerOverviewData* PlayerOverviewData);
	void CalcHighlightMarkResult(float Score, TArray<struct FReplayActivityKillDetail>& KillDetails);
};

// 0x1280 (0x12A8 - 0x28)
// Class Solarland.HUDDispatcherBase
class UHUDDispatcherBase : public UObject
{
public:
	uint8                                        Pad_1F72[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnSkydivingLeaderIndexReplicated;                  // 0x38(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnSkydivingMemberStatusUpdated;                    // 0x48(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FDelegateProperty_                           TrySkydiveUnfollow;                                // 0x58(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F73[0x58];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        SkydivingLeaderTransferCooldown;                   // 0xC0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SkydivingLeaderVoiceCooldown;                      // 0xC4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F74[0x38];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnTeammateStateReplicated;                         // 0x100(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnTeammatePlayerStateReplicated;                   // 0x110(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnCharacterPSInGameChanged;                        // 0x120(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnPlayerOperationInGameChanged;                    // 0x130(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnTeammatePSRemoveWhenPreparation;                 // 0x140(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnTeammatePSRemoveWhenBattle;                      // 0x150(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnTeammateHPChanged;                               // 0x160(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnTeammateShieldChanged;                           // 0x170(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnTeammateReviveItemChanged;                       // 0x180(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnTeammateReviveManagerChanged;                    // 0x190(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnReviveStateChanged;                              // 0x1A0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnTeammateReviveStateChanged;                      // 0x1B0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnTeammateResurrectTimeChanged;                    // 0x1C0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnTeammateCallForHelpNotify;                       // 0x1D0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F75[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnKillLeaderChangedNotify;                         // 0x1F0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F76[0x40];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnTeammateNetStateChanged;                         // 0x240(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnNavMapMarked;                                    // 0x250(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnNavMapMarkCleared;                               // 0x260(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnTalentInitialized;                               // 0x270(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnTeammateCharacterIdChanged;                      // 0x280(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnTeammateSkinIdChanged;                           // 0x290(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnLevelChanged;                                    // 0x2A0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnSkillCDStateChanged;                             // 0x2B0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnTeammateTalentStateChanged;                      // 0x2C0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnSpecTargetChanged;                               // 0x2D0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnBindHPPanelDelegate;                             // 0x2E0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnBindItemPanelDelegate;                           // 0x2F0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnBindPowerBarDelegate;                            // 0x300(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnRefreshBackpackItemDelegate;                     // 0x310(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnRefreshBackpackEquipDelegate;                    // 0x320(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnRefreshBackpackWeaponDelegate;                   // 0x330(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnRefreshBackpackWeaponPartDelegate;               // 0x340(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnRefreshBroadCastModeDelegate;                    // 0x350(0x10)(ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnSetActiveOpenBoxBtnDelegate;                     // 0x360(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnSetActiveOpenBoxProgressDelegate;                // 0x370(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnSetTreasureBoxActorDelegate;                     // 0x380(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnSetAirdropBoxActorDelegate;                      // 0x390(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnHideTreasureBoxUIDelegate;                       // 0x3A0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnHideAirdropBoxUIDelegate;                        // 0x3B0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnSetPickupSwitchDelegate;                         // 0x3C0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnAirdropCharChangeDelegate;                       // 0x3D0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnAirdropProgressChangeDelegate;                   // 0x3E0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnPlayerNumberChanged;                             // 0x3F0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnCapsulePlayerNumChanged;                         // 0x400(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnBombingStarted;                                  // 0x410(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnBombingStopped;                                  // 0x420(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnItemDiscarded;                                   // 0x430(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnSettingRequestOpened;                            // 0x440(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnSettingRequestClosed;                            // 0x450(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnMigrateAccountVisibilityRequestChanged;          // 0x460(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnCustomizeVisibilityRequestChanged;               // 0x470(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnDriveCustomizeOpened;                            // 0x480(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnDriveCustomizeClosed;                            // 0x490(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnBackpackTookPickup;                              // 0x4A0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnBackpackReleasedPickup;                          // 0x4B0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnToggleCursorVisibility;                          // 0x4C0(0x10)(ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnBackpackVisibilitySet;                           // 0x4D0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnElectricShopVisibilitySet;                       // 0x4E0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnBigMapVisibilitySet;                             // 0x4F0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnRescueBtnVisibilitySet;                          // 0x500(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnBuyResurrectBtnVisibilitySet;                    // 0x510(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnBigMapCloseButtonClicked;                        // 0x520(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnPickupFlagChanged;                               // 0x530(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnPickupListVisibilityChanged;                     // 0x540(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnPickupItemSet;                                   // 0x550(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnPickupItemCalculated;                            // 0x560(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnPickupCheckValidUpdated;                         // 0x570(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnPickupCheckHighlightUpdated;                     // 0x580(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnPickupCheckStatesUpdated;                        // 0x590(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnPickupItemSelected;                              // 0x5A0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnTogglePickupDelegate;                            // 0x5B0(0x10)(ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnPlayerDead;                                      // 0x5C0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnJoyStickSprintStateReset;                        // 0x5D0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnJoyStickInputReset;                              // 0x5E0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnJoyStickResetAll;                                // 0x5F0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnTutorialSequenceRequested;                       // 0x600(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnDrivingTutorialStopped;                          // 0x610(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnFireButtonsInputReset;                           // 0x620(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnTeamDeathMatchLeaderboard;                       // 0x630(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnGameModeChangeWeapon;                            // 0x640(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                         bBackpackVisible;                                  // 0x650(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bElectricShopVisible;                              // 0x651(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bBigMapVisible;                                    // 0x652(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bMapVehicleSpawnListVisible;                       // 0x653(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bRescueBtnVisible;                                 // 0x654(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bBuyResurrectBtnVisible;                           // 0x655(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1F7D[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnInBattle;                                        // 0x658(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnNotInBattle;                                     // 0x668(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnRadarStationUpdated;                             // 0x678(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnAngleViewEnabled;                                // 0x688(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnCharacterSwimStateChanged;                       // 0x698(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnCharacterWaterClimbAvailable;                    // 0x6A8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FDelegateProperty_                           OnHitTraceUpdated;                                 // 0x6B8(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnHitTraceRemoved;                                 // 0x6C8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnHitTraceCleared;                                 // 0x6D8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnProfessionFunctionalChanged;                     // 0x6E8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnBackpackModeChanged;                             // 0x6F8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnPickupListAdd;                                   // 0x708(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnPickupListRemove;                                // 0x718(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnTeammateStateChanged;                            // 0x728(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnRepliableMessageChanged;                         // 0x738(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnPlayerFlagDisplayChanged;                        // 0x748(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnSpectateModeEntered;                             // 0x758(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnSpectateModeExited;                              // 0x768(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnSpectateReferToChanged;                          // 0x778(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnSpectateTargetItemsChanged;                      // 0x788(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnMarkButtonHoverChanged;                          // 0x798(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnMarkButtonTouchMoved;                            // 0x7A8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnMarkButtonBeenLongPressed;                       // 0x7B8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnMarkButtonDragSelectEnded;                       // 0x7C8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnBattleModeChanged;                               // 0x7D8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F7F[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnCharacterSet;                                    // 0x7F0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnCharacterIDSet;                                  // 0x800(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnCharacterHPChanged;                              // 0x810(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F80[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnCharacterDead;                                   // 0x840(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnCharacterEnterWater;                             // 0x850(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnCharacterSelfRebirth;                            // 0x860(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnCharacterLevelUp;                                // 0x870(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnCharacterGainExp;                                // 0x880(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnCharacterLevelExpChanged;                        // 0x890(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnCharacterAllReady;                               // 0x8A0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnBattleUpgradeEffect;                             // 0x8B0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnSelectingBattleUpgradeEffectBegin;               // 0x8C0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnSelectingBattleUpgradeEffectFinish;              // 0x8D0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnSpectateBattleUpgradeEffectUpdate;               // 0x8E0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnTeammateRebirth;                                 // 0x8F0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnDamagingActorsChange;                            // 0x900(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnAimingEnemy;                                     // 0x910(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnScoutCharactersChange;                           // 0x920(0x10)(ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F82[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnCharacterLevelChanged;                           // 0x938(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F83[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnRapidBoostActivationChanged;                     // 0x958(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnTrySpawnSuperRadar;                              // 0x968(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnSuperScaningStart;                               // 0x978(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnSuperScaningRemovePlayer;                        // 0x988(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnSuperScaningEnd;                                 // 0x998(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnSuperScanCameraMoveForward;                      // 0x9A8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnSuperScanCameraMoveRight;                        // 0x9B8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnSuperScaningWidgetShow;                          // 0x9C8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnRoleAbilityChange;                               // 0x9D8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnRoleAbilityStartCD;                              // 0x9E8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnRoleAbilityEndCD;                                // 0x9F8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnRoleAbilityCDDurationChange;                     // 0xA08(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnRoleAbilityStartCDUTCTimeUpdate;                 // 0xA18(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnRoleAbilityStateChange;                          // 0xA28(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnRoleAbilityEnd;                                  // 0xA38(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnRoleAbilityContinous;                            // 0xA48(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnRoleAbilityBuffContinous;                        // 0xA58(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnRoleAbilityBuffUpdate;                           // 0xA68(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnRoleAbilityBuffEnd;                              // 0xA78(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnRoleAbilityBuffPause;                            // 0xA88(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnRoleAbilityBuffResume;                           // 0xA98(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnRoleAbilityHideControlHUD;                       // 0xAA8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnRoleAbilityInputAction;                          // 0xAB8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnRoleAbilityAddSummonBuff;                        // 0xAC8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnRoleAbilityUsingStatusChanged;                   // 0xAD8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnCharacterNightComesActorChanged;                 // 0xAE8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnMobileWeaponInputAction;                         // 0xAF8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnRoleGEShieldMultiRecoverCoolDownEffect;          // 0xB08(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnMemberFlagIDChanged01;                           // 0xB18(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnMemberFlagIDChanged02;                           // 0xB28(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnMemberFlagIDChanged03;                           // 0xB38(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnMemberFlagIDChanged04;                           // 0xB48(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnSideAttributeSetRemoved;                         // 0xB58(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnSideAttributeSetAdded;                           // 0xB68(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnSideAttributeSetChanged;                         // 0xB78(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnDrivingStateChanged;                             // 0xB88(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnVehicleWeaponAbilityActivated;                   // 0xB98(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnVehicleScopeInitialized;                         // 0xBA8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnVehicleScopeValueChanged;                        // 0xBB8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnEquipVehicleWeaponDelegate;                      // 0xBC8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnVehicleWeaponScopeDelegate;                      // 0xBD8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnTransformerChangeWeaponDelegate;                 // 0xBE8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnVehicleTypeChangeDelegate;                       // 0xBF8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnVehicleWeaponNoAmmoAlert;                        // 0xC08(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnVehicleAbilityActivationChanged;                 // 0xC18(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnMapVehicleSpawnListInitialized;                  // 0xC28(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnInputSprintLockStart;                            // 0xC38(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnSprintIconActived;                               // 0xC48(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnSprintIconHide;                                  // 0xC58(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnSprintLockIconActived;                           // 0xC68(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnTeamMessageReceive;                              // 0xC78(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnVJetForbiddenChanged;                            // 0xC88(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnHJetForbiddenChanged;                            // 0xC98(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnVJetTotalTimesSet;                               // 0xCA8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnHJetTotalTimesSet;                               // 0xCB8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnVJetRestTimesSet;                                // 0xCC8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnHJetRestTimesSet;                                // 0xCD8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnVJetChargeStateChanged;                          // 0xCE8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnVJetCDStateChanged;                              // 0xCF8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnHJetChargeStateChanged;                          // 0xD08(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnHJetCDStateChanged;                              // 0xD18(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnVJetTimesCharging;                               // 0xD28(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnHJetTimesCharging;                               // 0xD38(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnVJetCoolingDown;                                 // 0xD48(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnHJetCoolingDown;                                 // 0xD58(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnVJetModuleLevelChanged;                          // 0xD68(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnHJetModuleLevelChanged;                          // 0xD78(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnSkydiveFlyStateChanged;                          // 0xD88(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnSkydiveAltitudeUpdate;                           // 0xD98(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnSkydiveSpeedUpdate;                              // 0xDA8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnShowGameNoticeDelegate;                          // 0xDB8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnStartCountDownDelegate;                          // 0xDC8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnStopCountDownDelegate;                           // 0xDD8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnHideInteractionListRequested;                    // 0xDE8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnCancelHideInteractionListRequested;              // 0xDF8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnInteractionTriggerAppear;                        // 0xE08(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnInteractionTriggerDisappear;                     // 0xE18(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnStartInteractionCountDown;                       // 0xE28(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnStopInteractionCountDown;                        // 0xE38(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnStartReviveTeammateCountDownDelegate;            // 0xE48(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnStopReviveTeammateCountDownDelegate;             // 0xE58(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnReviveWillBeDisabledHintDelegate;                // 0xE68(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnStartReviveItemRecycleCountDownDelegate;         // 0xE78(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F87[0x50];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnOverlapElectricShopDelegate;                     // 0xED8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnUpdateVehicleInteractionDelegate;                // 0xEE8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnCruiseHeightSet;                                 // 0xEF8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnEnterCruisingDelegate;                           // 0xF08(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnEnterParachutingDelegate;                        // 0xF18(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnEnterLandingDelegate;                            // 0xF28(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnEShopWeaponUpgradeDelegate;                      // 0xF38(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnEShopShieldUpgradeDelegate;                      // 0xF48(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnEShopPurchaseSuccessDelegate;                    // 0xF58(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnEShopItemCDRefreshDelegate;                      // 0xF68(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnEShopItemRefreshDelegate;                        // 0xF78(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnEShopSlotWeaponUpgradeDelegate;                  // 0xF88(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnEShopWeaponChangeDelegate;                       // 0xF98(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnEShopPoolRefreshDelegate;                        // 0xFA8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            TryOpenElectricShopDelegate;                       // 0xFB8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FDelegateProperty_                           OnTeammateHomePanelGetting;                        // 0xFC8(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)
	FDelegateProperty_                           OnHomeBattleUIGetting;                             // 0xFD8(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)
	FDelegateProperty_                           OnHomeMainBuildGetting;                            // 0xFE8(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)
	FDelegateProperty_                           OnHomeFriendListGetting;                           // 0xFF8(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)
	FDelegateProperty_                           OnHomeLevelUpUIGetting;                            // 0x1008(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnShieldAvailableChanged;                          // 0x1018(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnShieldChanged;                                   // 0x1028(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnRechargeShieldEnd;                               // 0x1038(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnShieldFXUpdated;                                 // 0x1048(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnShieldValueChanged;                              // 0x1058(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnMaxShieldValueUpdate;                            // 0x1068(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            FOnSteamRechargeShield;                            // 0x1078(0x10)(ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            TryCancelCountDown;                                // 0x1088(0x10)(ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnEnemyShieldChanged;                              // 0x1098(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnEnemyShieldValueChanged;                         // 0x10A8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnShieldUpgradeStart;                              // 0x10B8(0x10)(ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnShieldUpgradeInterrupt;                          // 0x10C8(0x10)(ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnShieldUpgradeFinish;                             // 0x10D8(0x10)(ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnShieldUpgradeItemCountChanged;                   // 0x10E8(0x10)(ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnShieldUpgradeItemCountChangedBP;                 // 0x10F8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnAckShieldUpgradeShopInteract;                    // 0x1108(0x10)(ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	FDelegateProperty_                           TryOpenTreasureBoxDelegate;                        // 0x1118(0x10)(ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)
	FDelegateProperty_                           TryOpenAirDropTreasureBoxDelegate;                 // 0x1128(0x10)(ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            TryCancelAirDropTreasureBoxDelegate;               // 0x1138(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FDelegateProperty_                           TryPickupFirstItemDelegate;                        // 0x1148(0x10)(ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)
	FDelegateProperty_                           CheckPickupItemValidDelegate;                      // 0x1158(0x10)(ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            SelectPreviousItem;                                // 0x1168(0x10)(ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            SelectNextItem;                                    // 0x1178(0x10)(ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F89[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnPickupEntryPlayAnim;                             // 0x1198(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnRequstPickupEntryPlayAnim;                       // 0x11A8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnRequstPickupEntryPlayAnimCustom;                 // 0x11B8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            NotifyTeammateReviving;                            // 0x11C8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FDelegateProperty_                           OnInteractEvent;                                   // 0x11D8(0x10)(ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnBattleControlTeammateStateRemoved;               // 0x11E8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnSetBackpackDropMaskVisibility;                   // 0x11F8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnEndBackpackDragDrop;                             // 0x1208(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F8A[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnBattleHUDVisibilityChanged;                      // 0x1238(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnMicroPhonePressed;                               // 0x1248(0x10)(ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnSpeakerPressed;                                  // 0x1258(0x10)(ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnSwitchEMP;                                       // 0x1268(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnToggleAssitAim;                                  // 0x1278(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnToggleAutoFire;                                  // 0x1288(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnTreatmentEnd;                                    // 0x1298(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UHUDDispatcherBase* GetDefaultObj();

	void VehicleWeaponScopeChanged__DelegateSignature(bool BOpened);
	void VehicleWeaponNoAmmoAlert__DelegateSignature();
	void VehicleTypeChanged__DelegateSignature();
	void VehicleAbilityActivationChanged__DelegateSignature(bool bInActivated, bool bCanCancel, uint8 InAbilityIndex, float InDurationTime);
	void TwoIntUIInteractDelegate__DelegateSignature(int32 Value01, int32 Value02);
	void TwoIntImplementableDelegate__DelegateSignature(int32 Value01, int32 Value02);
	bool TrySkydiveUnfollow__DelegateSignature();
	void TransformerWeaponChanged__DelegateSignature(enum class ETransformerType InType);
	void ToggledBigMapVisibility();
	void ToggledBackpackVisibility();
	void StopDrivingTutorial();
	void SprintLockIconActived__DelegateSignature(struct FVector2D& InSprintPosition);
	void SolarPlayerStateDelegate__DelegateSignature(class ASolarPlayerState* InPlayerState);
	void SimpleUIInteractDelegate__DelegateSignature();
	void SimpleTriggerDelegate__DelegateSignature();
	void SimpleStringDelegate__DelegateSignature(const class FString& Value);
	void SimpleSpectatorDelegate__DelegateSignature();
	void SimplePlayerStateDelegate__DelegateSignature(class ASolarPlayerState* TeammatePS);
	void SimpleOnRefreshDelegate__DelegateSignature();
	bool SimpleOnBindRetOneParamDelegate__DelegateSignature(bool bAutoPickup);
	bool SimpleOnBindRetOneIntParamDelegate__DelegateSignature(int32 InIthisID);
	bool SimpleOnBindRetDelegate__DelegateSignature();
	void SimpleOnBindDelegate__DelegateSignature();
	void SimpleImplementableDelegate__DelegateSignature();
	void SimpleFloatDelegate__DelegateSignature(float Value);
	void SimpleCharacterLuaDelegate__DelegateSignature();
	void SimpleBoolDelegate__DelegateSignature(bool Value);
	void ShowSuperScanChooseUI(bool bShow);
	void ShieldUpgradeItemCntChangedBPDelegate__DelegateSignature(int32 ShieldLevel, int32 ShieldMaxLevel, int32 ShieldUpgradeItemNum, int32 NeedShieldUpgradeItemNum, int32 MaxShieldUpgradeItemNum);
	void SetRescueBtnVisibility(bool bVisible);
	void SetMapVehicleSpawnListVisibility(bool bVisible);
	void SetElectricShopVisibility(bool bVisible);
	void SetBuyResurrectBtnVisibility(bool bVisible);
	void SetBigMapVisibility(bool bVisible);
	void SetBackpackVisibility(bool bInValue);
	void RequestHideInteractionList();
	void RequestCancelHideInteractionList();
	void RemoveItemFromPickup(class UObject* InCardItem, bool bPickup);
	void PlayerTutorialSequence(bool bPlay);
	void PickupListRemoveDelegate__DelegateSignature(class UObject* CardItem, bool bPickup);
	void PickupListDelegate__DelegateSignature(class UObject* CardItem);
	void OnWidgetVisibilitySet__DelegateSignature(bool bVisible);
	void OnWidgetButtonClicked__DelegateSignature();
	void OnVehicleWeaponAbilityActivated__DelegateSignature(bool bInActive);
	void OnVehicleScopeValueChanged__DelegateSignature(float InValue);
	void OnVehicleScopeInitialized__DelegateSignature(class UUserWidget* Widget, bool bInSpectate);
	void OnUpdateVehicleInteractionDelegate__DelegateSignature(enum class EVehicleInterationUIState UiState, class ASolarVehiclePawn* InVehicleComponent);
	void OnTutorialSequenceRequested__DelegateSignature(bool bPlay);
	void OnTrySpawnSuperRadar__DelegateSignature(bool bSpawn);
	void OnTreatmentDelegate__DelegateSignature();
	void OnTeamMessageReceive__DelegateSignature(const class FString& MemberName, const class FString& Message1, bool bLocalPlayer, bool bSound, int32 PosInTeam, const class FString& Message2);
	void OnTeammateTalentStateChanged__DelegateSignature(enum class ETalentState TalentState, uint8 PosInTeam, float AdditionalParam);
	void OnTeammateStateChanged__DelegateSignature(bool NeedRefresh);
	void OnTeammateShieldChanged__DelegateSignature(uint8 PosInTeam, struct FShieldInfo& OldShield, struct FShieldInfo& NewShield);
	void OnTeammateReviveStateChanged__DelegateSignature(class ASolarPlayerState* RevivingMePlayer, class ASolarPlayerState* SolarPlayerState);
	void OnTeammateReviveItemChanged__DelegateSignature(uint8 PosInTeam, uint8 ReviveItemNum, bool bCanRebirth);
	void OnTeammateResurrectTimeChanged__DelegateSignature(class ASolarPlayerState* SolarPlayerState, int32 ResurrectTime);
	void OnTeammateRescueStateChanged__DelegateSignature(class ASolarCharacter* InCharacter);
	void OnTeammatePlatStateRemove__DelegateSignature(uint8 PosInTeam, bool bLastOne);
	void OnTeammateIntegerDataChanged__DelegateSignature(int32 Data, uint8 PosInTeam);
	void OnTeammateHPChanged__DelegateSignature(uint8 PosInTeam, float CurrentHP, float MaxHP);
	void OnTeammateCallForHelpNotify__DelegateSignature(class ASolarPlayerState* SolarPlayerState);
	void OnTeammateBattleStateChanged__DelegateSignature(class ASCMPlayerState* TeammateState);
	void OnTeammateActionStateChanged__DelegateSignature(class ASolarPlayerState* SolarPlayerState, const struct FGameplayTag& Tag, int32 NewCount);
	void OnSwitchEMP__DelegateSignature(class ASolarCharacter* InCharacter, bool InbSwitchOnEMP);
	void OnSuperScaningWidgetShow__DelegateSignature(bool bShow);
	void OnSuperScaningStart__DelegateSignature(TArray<class FString>& InScanPlayers);
	void OnSuperScaningRemovePlayer__DelegateSignature(const class FString& InRemovePlayer);
	void OnSuperScaningEnd__DelegateSignature();
	void OnStopCountDownDelegate__DelegateSignature(int32 InTextId);
	void OnSteamRechargeShieldDecl__DelegateSignature(bool bUseBigRecharger);
	void OnStartCountDownDelegate__DelegateSignature(struct FCountDownInfo& InCountDownInfo);
	void OnSprintIconHide__DelegateSignature();
	void OnSprintIconActived__DelegateSignature(struct FVector2D& InSprintPosition);
	void OnSpectateTargetItemsChanged__DelegateSignature(const TArray<struct FReplicateItemData>& InItemDatas);
	void OnSpectateTargetChanged(class ASolarPlayerState* OldTarget, class ASolarSpectateInfo* SpectateInfo);
	void OnSpectateReferToChanged__DelegateSignature(class ASolarPlayerState* ReferToPlayerState, enum class ESpectateReferToState State);
	void OnSpectateBattleUpgradeEffectUpdate__DelegateSignature(class ASolarSpectateInfo* SpectateInfo);
	void OnSpecTargetOrLocalCauseDamageChanged__DelegateSignature(float CauseDamage);
	void OnSpecTargetOrLocalAssistChanged__DelegateSignature(int32 Assist);
	void OnSpecTargetChanged__DelegateSignature(class ASolarPlayerState* OldTarget, class ASolarPlayerState* NewTarget);
	void OnSkydivingMemberDataUpdated__DelegateSignature(class ASolarPlayerState* MemberPS);
	void OnSkydivingFollowRequestResponded__DelegateSignature(class ASolarPlayerState* Follower, bool bAgreed);
	void OnSkydiveSpeedUpdate__DelegateSignature(float NewSpeed);
	void OnSkydiveFlyStateChanged__DelegateSignature(class ASolarCharacter* InCharacter);
	void OnSkydiveDataUpdate__DelegateSignature(float NewData);
	void OnSkydiveAltitudeUpdate__DelegateSignature(float NewHeight, float NewZValue);
	void OnSkillActivationChanged__DelegateSignature(bool bActivated);
	void OnSideAttributeSetRemoved__DelegateSignature(const class FString& SideName);
	void OnSideAttributeSetChanged__DelegateSignature(const class FString& SideName, struct FSideAttributeSet& SideRef);
	void OnShowGameNotice__DelegateSignature(int32 InNoticeID, struct FHUDNoticeParams& InNoiceParams);
	void OnShieldValueChanged__DelegateSignature(enum class EShieldWidgetState WidgetState, float CurValue, float ChangeValue, const class FString& SolarPlayerID, enum class EShieldRechargeState ShieldRechargeState, bool bFixPreAdd);
	void OnShieldDelegate__DelegateSignature();
	void OnShieldChanged__DelegateSignature(float CurValue, float MaxValue, int32 QualityColor, bool bAdvancedShield);
	void OnShieldAvailableChanged__DelegateSignature(bool bAvailable);
	void OnSetTreasureBoxActorDelegate__DelegateSignature(class AActor* InActor);
	void OnSetPickupSwitchDelegate__DelegateSignature(enum class EPickupItemType InType, bool InFlag);
	void OnSetBackpackDropMaskVisibility__DelegateSignature(bool bVisible);
	void OnSetActiveOpenBoxDelegate__DelegateSignature(bool Inactive);
	void OnSelectingBattleUpgradeEffectFinish__DelegateSignature(int32 SelectedIndex);
	void OnSelectingBattleUpgradeEffectBegin__DelegateSignature(class ASolarCharacter* Target, int32 Level, TArray<int32>& EffectIDArray);
	void OnScoutedCharactersChange__DelegateSignature(const TArray<class FString>& ScoutedCharacters, const TArray<class FString>& ToBeScoutedCharacters);
	void OnRoleGEShieldMultiRecoverCoolDownChange__DelegateSignature(int32 NewCount);
	void OnRoleAbilityUsingStatusChanged__DelegateSignature(const struct FGameplayTag& Tag, int32 NewCount);
	void OnRoleAbilityStateChange__DelegateSignature(int32 RoleAbilityIndex, int32 State);
	void OnRoleAbilityStartCDUTCTimeUpdate__DelegateSignature(int32 RoleAbilityIndex, float InServerTime);
	void OnRoleAbilityStartCD__DelegateSignature(int32 RoleAbilityIndex, float StartCDServerTime, float StartCDTimeForReplay);
	void OnRoleAbilityInputAction__DelegateSignature(int32 RoleAbilityIndex, bool bPress, bool bCanActive);
	void OnRoleAbilityHideControlHUD__DelegateSignature(bool bHide);
	void OnRoleAbilityEndCD__DelegateSignature(int32 RoleAbilityIndex);
	void OnRoleAbilityEnd__DelegateSignature(int32 RoleAbilityIndex);
	void OnRoleAbilityContinous__DelegateSignature(int32 RoleAbilityIndex, bool bTurnOn, float Duration);
	void OnRoleAbilityChange__DelegateSignature(int32 RoleAbilityIndex, bool bHaveAbility, int32 CharacterId, int32 PlayerLevel);
	void OnRoleAbilityCDDurationChange__DelegateSignature(int32 RoleAbilityIndex, int32 Duration, bool bDurationReduced);
	void OnRoleAbilityBuffUpdate__DelegateSignature(struct FActiveGameplayEffectHandle& ActiveEffectHandle, float Duration, float RemainTime, bool bInPrePhase, float PreDuration, float PreRemainTime);
	void OnRoleAbilityBuffPause__DelegateSignature(bool bIsMainDuration, class ASolarCharacter* SourceCharacter, uint8 AbilityIndex);
	void OnRoleAbilityBuffEnd__DelegateSignature(bool bIsMainDuration, struct FActiveGameplayEffectHandle& InGameplayEffectHandle);
	void OnRoleAbilityBuffContinous__DelegateSignature(bool bIsMainDuration, class ASolarCharacter* SourceCharacter, uint8 AbilityIndex, float Duration, float PreDuration, struct FActiveGameplayEffectHandle& ActiveEffectHandle);
	void OnRoleAbilityAddSummonBuff__DelegateSignature(struct FSoftObjectPath& ImagePath, class AActor* InActor);
	void OnReviveStateChanged__DelegateSignature(class ASolarPlayerState* RevivingMePlayer);
	void OnRepliableMessageChanged__DelegateSignature();
	void OnQuickVoiceWheelLongPressEnd__DelegateSignature(bool bPlayerDead);
	void OnPoisonEffectUpdated__DelegateSignature(float PosX, float PosY, float Radius);
	void OnPlayerFlagDisplayChanged__DelegateSignature(bool bDisplay);
	void OnPlayerDead__DelegateSignature(struct FKillInfo& DeathMsgInfo);
	void OnPickupListVisibilityChanged__DelegateSignature(bool bVisible);
	void OnPickupItemSet__DelegateSignature(TArray<class AActor*>& ObjectList, enum class EPickupItemType Type);
	void OnPickupItemSelected__DelegateSignature(class UObject* SelectWidget, int32 SelectWidgetThisID);
	void OnPickupFlagChanged__DelegateSignature(bool bFlag, bool bNotSelf);
	void OnPickupCheckValidUpdated__DelegateSignature(struct FItemCountsList& ItemCountsList);
	void OnPickupCheckStatesUpdated__DelegateSignature(bool bItemUpdate);
	void OnPickupCheckHighlightUpdated__DelegateSignature(enum class EPickupItemType Type, bool IsRecommend);
	void OnOverlapElectricShopDelegate__DelegateSignature(bool InOverlap);
	void OnNavMapMarked__DelegateSignature(uint8 PosInTeam, struct FVector2D& MarkPosition);
	void OnNavMapMarkCleared__DelegateSignature(uint8 PosInTeam);
	void OnMobileWeaponInputAction__DelegateSignature(enum class EInputButton InButtonType);
	void OnMemberFlagIDChanged__DelegateSignature(int32 FlagID, bool bClanFlag);
	void OnMaxShieldValueUpdate__DelegateSignature(float MaxShieldVal);
	void OnMarkButtonTouchMoved__DelegateSignature(float DegreeToCenter, const struct FVector2D& TouchLocalPos);
	void OnMarkButtonSimpleTriggered__DelegateSignature();
	void OnMarkButtonHoverChanged__DelegateSignature(bool bIsHovered);
	void OnKillLeaderChangedNotify__DelegateSignature(class ASolarPlayerState* KillLeader);
	void OnJetTimesChanged__DelegateSignature(int32 NewTimes);
	void OnJetModuleLevelChanged__DelegateSignature(int32 NewLevel);
	void OnJetFlyStateChanged__DelegateSignature(bool bStart);
	void OnJetFlyForbiddenChanged__DelegateSignature(enum class EJetFlyForbiddenType ForbiddenType, bool bAdded);
	void OnJetFlyDataUpdated__DelegateSignature(float Value, float Percent);
	void OnInteractionTriggerDelegate__DelegateSignature(struct FInteractionTriggerInfo& TriggerInfo);
	void OnInputTypeChanged__DelegateSignature(class ASolarPlayerState* PlayerState);
	void OnInputSprintLockStart__DelegateSignature();
	void OnInitElectricShopDelegate__DelegateSignature(class ASolarCharacter* InCharacter);
	class UUserWidget* OnHomelandGetWidget__DelegateSignature();
	int32 OnHitTraceUpdated__DelegateSignature(int32 HitTraceID, enum class EHitTraceType HitTraceType, float Angle, float WidgetScale);
	void OnHideUIByThisIDDelegate__DelegateSignature(int64 InThisID);
	void OnEShopWeaponUpgradeDelegate__DelegateSignature(class ASolarPlayerWeapon* InWeapon, class ASolarCharacter* InCharacter);
	void OnEShopWeaponChangeDelegate__DelegateSignature(class ASolarCharacter* InCharacter);
	void OnEShopSlotWeaponUpgradeDelegate__DelegateSignature(int32 InWeaponSlot);
	void OnEShopShieldUpgradeDelegate__DelegateSignature(class ASolarCharacter* InCharacter);
	void OnEShopPurchaseSuccessDelegate__DelegateSignature(int32 InProductID, class ASolarCharacter* InCharacter);
	void OnEShopInfoUpdateDelegate__DelegateSignature(class ASolarElectricShop* InElectricShop);
	void OnEnemyShieldValueChanged__DelegateSignature(enum class EShieldWidgetState WidgetState, float CurValue, float ChangeValue, const class FString& SolarPlayerID, enum class EShieldRechargeState ShieldRechargeState, bool bFixPreAdd);
	void OnEnemyShieldChanged__DelegateSignature(const class FString& SolarPlayerID, float CurValue, float MaxValue, int32 QualityColor, bool bAdvancedShield);
	void OnDrivingTutorialStopped__DelegateSignature();
	void OnDrivingStateChanged__DelegateSignature(enum class EDriveState DriveState);
	void OnDamagingActorsChange__DelegateSignature();
	void OnCreateReviveWorldMarkDelegate__DelegateSignature(class ASolarPlayerState* InPlayerState, struct FVector& InWorldLoc);
	void OnCharacterStateChanged__DelegateSignature();
	void OnCharacterSet__DelegateSignature(class ASolarCharacter* ControlledCharacter);
	void OnCharacterSelfRebirth__DelegateSignature(class ASolarCharacter* RebirthCharacter);
	void OnCharacterRescueStateChanged__DelegateSignature(enum class ERescueState NewRescueState);
	void OnCharacterNightComesActorChanged__DelegateSignature(class AActor* InActor);
	void OnCharacterLevelUp__DelegateSignature(int32 NewLevel, int32 OldLevel);
	void OnCharacterLevelExpChanged__DelegateSignature(int32 NewLevel, float NewExpRatio);
	void OnCharacterLevelChanged__DelegateSignature(int32 InLevel);
	void OnCharacterIDSet__DelegateSignature(int32 CharacterId);
	void OnCharacterHPChanged__DelegateSignature(float CurrentHP, float MaxHP);
	void OnCharacterGainExp__DelegateSignature(int32 ExpAdded);
	void OnCharacterDead__DelegateSignature(class ASolarCharacter* InCharacter);
	void OnCharacterAllReady__DelegateSignature(class ASolarCharacter* ControlledCharacter);
	void OnBombingStarted__DelegateSignature(int32 BombId, struct FVector& Location, float Radius);
	void OnBattleUpgradeEffect__DelegateSignature(enum class ESolarTablesEnum_BattleUpgradeEffectType EffectType, int32 ParamSum);
	void OnBattleModeChanged__DelegateSignature(uint8 NewModeType);
	void OnBattleHUDVisibilityChanged__DelegateSignature(bool bVisible);
	void OnBackpackTookPickup__DelegateSignature(struct FVector2D& NewPosition);
	void OnAirdropBoxInfoChangeDelegate__DelegateSignature(class AAirDropTreasureBox* InAirdropBox);
	void OnAimingEnemy__DelegateSignature(class ASolarCharacter* InEnemy);
	void MapVehicleSpawnListInitialized__DelegateSignature();
	void LocalPlayerSkidivingCaptainChanged__DelegateSignature(int32 TeamIndex, const class FString& PlayerName, bool IsLocalPlayer);
	void JoyStickSimpleDeleghate__DelegateSignature();
	bool IsElectricShopVisible();
	bool IsBigMapVisible();
	void IntUIInteractDelegate__DelegateSignature(int32 Value);
	void IntImplementableDelegate__DelegateSignature(int32 Value);
	void InternalCallSkydiveSpeed();
	void InternalCallSkydiveFlyStateChanged();
	void IntCharacterLuaDelegate__DelegateSignature(int32 Value);
	void IntBackpackDelegate__DelegateSignature(int32 Value);
	class USolarUserWidget* GetWorldMarkPanel();
	class UUserWidget* GetTeammateHomePanel();
	class UHUDDispatcherBase* GetHUDDispatcher_FromUI(class UWidget* InWidget);
	class UHUDDispatcherBase* GetHUDDispatcher_FromPC(class APlayerController* InPC);
	class UHUDDispatcherBase* GetHUDDispatcher_FromHUD(class AHUD* InHUD);
	class UHUDDispatcherBase* GetHUDDispatcher_FromCharacter(class ASolarCharacter* InCharacter, bool bCheckControlled);
	class UUserWidget* GetHomeMainBuild();
	class UUserWidget* GetHomeLevelUpUI();
	class UUserWidget* GetHomeFriendList();
	class UUserWidget* GetHomeBattleUI();
	void EquipVehicleWeapon__DelegateSignature(class ASolarVehicleWeapon* InVehicleWeapon);
	void BroadcastVJetForbiddenChanged(enum class EJetFlyForbiddenType Types, bool bAdded);
	void BroadcastVJetCDStateChanged(bool bCD);
	void BroadcastTrySpawnSuperRadar(bool bSpawn);
	bool BroadcastTryPickupFirstItem(bool bAutoPickup);
	void BroadcastToggleCursorVisibility(bool bIsVisible);
	void BroadcastToggleAutoFire();
	void BroadcastToggleAssitAim();
	void BroadcastSpectateTargetItemsChanged(TArray<struct FReplicateItemData>& InItemDatas);
	void BroadcastSpectateTargetChanged(class ASolarPlayerState* OldTarget, class ASolarPlayerState* NewTarget);
	void BroadcastSpectateBattleUpgradeEffectUpdate(class ASolarSpectateInfo* SpectateInfo);
	void BroadcastSkydiveSpeed();
	bool BroadcastShieldValueChanged(enum class EShieldWidgetState WidgetState, float InCurValue, float InChangeValue, const class FString& InSolarPlayerID, enum class EShieldRechargeState ShieldRechargeState, bool bFixPreAdd);
	void BroadcastShieldUpgradeStart();
	void BroadcastShieldUpgradeShopInteract();
	void BroadcastShieldUpgradeItemCountChanged(int32 NewCount, int32 LastCount);
	void BroadcastShieldUpgradeInterrupt();
	void BroadcastShieldUpgradeFinish();
	void BroadcastShieldFXUpdated();
	bool BroadcastShieldChanged(float CurValue, float MaxValue, int32 QualityColor, bool bAdvancedShield);
	bool BroadcastShieldAvailable(bool bAvailable);
	void BroadcastSettingRequestOpened(int32 InOwnerType);
	void BroadcastSettingRequestClosed();
	void BroadcastSetBackpackDropMaskVisibility(bool bVisible);
	void BroadcastSelectPreviousItem();
	void BroadcastSelectNextItem();
	void BroadcastSelectingBattleUpgradeEffectFinish(int32 SelectedIndex);
	void BroadcastSelectingBattleUpgradeEffectBegin(class ASolarCharacter* Target, int32 Level, TArray<int32>& EffectIDArray);
	void BroadcastScoutCharactersChange(const TArray<class FString>& ScoutedCharacters, const TArray<class FString>& ToBeScoutedCharacters);
	void BroadcastRescueBtnVisibility();
	void BroadcastRequsetPickupEntryPlayAnimCustom(class UObject* InCustomObj);
	void BroadcastRequsetPickupEntryPlayAnim(int32 InThisID);
	void BroadcastProfessionFunctionalChanged(bool bEnabled);
	void BroadcastPlayerFlagDisplayChanged(bool bDisplay);
	void BroadcastPickupToggleChanged();
	void BroadcastPickupEntryPlayAnim(float InAnimTime);
	void BroadcastOnTeammateStateChangedDelegate();
	void BroadcastOnTeammateRebirth();
	void BroadcastOnStopRescueTeammateCountDown(int32 InTextId);
	void BroadcastOnStopInteractionCountDown(struct FCountDownInfo& InCountInfo);
	void BroadcastOnStopCountDownDelegate(int32 InTextId);
	void BroadcastOnStartReviveItemRecycleCountDown(int32 CurrentTime, int32 DurationTime);
	void BroadcastOnStartRescueTeammateCountDown(struct FCountDownInfo& InCountDownInfo);
	void BroadcastOnStartInteractionCountDown(struct FCountDownInfo& InCountInfo);
	void BroadcastOnStartCountDownDelegate(struct FCountDownInfo& InCountDownInfo);
	void BroadcastOnSkydiveFlyStateChanged();
	void BroadcastOnShowGameNoticeDelegate(int32 InNoticeID, struct FHUDNoticeParams& InNoticeParams);
	void BroadcastOnSetTreasureBoxActorDelegate(class AActor* InActor);
	void BroadcastOnSetPickupSwitchDelegate(enum class EPickupItemType InType, bool InFlag);
	void BroadcastOnSetAirdropBoxActorDelegate(class AActor* InActor);
	void BroadcastOnSetActiveOpenBoxProgressDelegate(bool Inactive);
	void BroadcastOnSetActiveOpenBoxBtnDelegate(bool Inactive);
	void BroadcastOnRightMouseButtonDownEvent();
	void BroadcastOnReviveWorldMarkPlayAnim(class ASolarPlayerState* InPlayerState);
	void BroadcastOnReviveWillBeDisabledHint(int32 HintDuration);
	void BroadcastOnReviveStateChanged(class ASolarPlayerState* RevivingMeTeammatePlayer);
	void BroadcastOnReviveDisabledHint();
	void BroadcastOnRemoveReviveWorldMark(class ASolarPlayerState* InPlayerState);
	void BroadcastOnRemoveAllReviveWorldMark();
	void BroadcastOnRefreshBackpackWeaponPartDelegate();
	void BroadcastOnRefreshBackpackWeaponDelegate();
	void BroadcastOnRefreshBackpackItemDelegate();
	void BroadcastOnRefreshBackpackEquipDelegate();
	void BroadcastOnOverlapElectricShopDelegate(bool InOverlap);
	void BroadcastOnOnCreateReviveWorldMark(class ASolarPlayerState* InPlayerState, struct FVector& InWorldLoc);
	void BroadcastOnInteractionTriggerDisappear(struct FInteractionTriggerInfo& TriggerInfo);
	void BroadcastOnInteractionTriggerAppear(struct FInteractionTriggerInfo& TriggerInfo);
	bool BroadcastOnInteractEvent();
	void BroadcastOnInitElectricShopDelegate(class ASolarCharacter* InCharcter);
	void BroadcastOnHideTreasureBoxUIDelegate(int64 InThisID);
	void BroadcastOnHideAirdropBoxUIDelegate(int64 InThisID);
	void BroadcastOnGameUserPickupSettingChanged();
	void BroadcastOnEShopWeaponUpgradeDelegate(class ASolarPlayerWeapon* InWeapon, class ASolarCharacter* InCharacter);
	void BroadcastOnEShopWeaponChangeDelegate(class ASolarCharacter* InCharacter);
	void BroadcastOnEShopSlotWeaponUpgradeDelegate(int32 InWeaponSlot);
	void BroadcastOnEShopShieldUpgradeDelegate(class ASolarCharacter* InCharacter);
	void BroadcastOnEShopPurchaseSuccessDelegate(int32 InProductID, class ASolarCharacter* InCharacter);
	void BroadcastOnEShopPoolRefreshDelegate(class ASolarElectricShop* InElectricShop);
	void BroadcastOnEShopItemRefreshDelegate(class ASolarElectricShop* InElectricShop);
	void BroadcastOnEShopItemCDRefreshDelegate(class ASolarElectricShop* InElectricShop);
	void BroadcastOnBindPowerBarDelegates();
	void BroadcastOnBindItemPanelDelegates();
	void BroadcastOnBindHPPanelDelegates();
	void BroadcastOnBattleControlTeammateStateRemoved();
	void BroadcastOnAirdropProgressChangeDelegate(class AAirDropTreasureBox* InAirdropBox);
	void BroadcastOnAirdropCharChangeDelegate(class AAirDropTreasureBox* InAirdropBox);
	void BroadcastMigrateAccountVisibilityRequestChanged(bool bVisible);
	void BroadcastMaxShieldValueUpdate(float MaxShieldValue);
	void BroadcastJoyStickSprintStateReset();
	void BroadcastJoyStickResetAll();
	void BroadcastJoyStickInputReset();
	void BroadcastItemDiscarded(int32 InItemID, int32 InTotalCount);
	void BroadcastHJetTimesChargingProgress(float Value, float Percent);
	void BroadcastHJetForbiddenChanged(enum class EJetFlyForbiddenType Types, bool bAdded);
	void BroadcastHJetCDStateChanged(bool bCD);
	void BroadcastFireButtonsReset();
	bool BroadcastEnemyShieldValueChanged(enum class EShieldWidgetState WidgetState, float InCurValue, float InChangeValue, const class FString& InSolarPlayerID, enum class EShieldRechargeState ShieldRechargeState, bool bFixPreAdd);
	bool BroadcastEnemyShieldChanged(const class FString& InSolarPlayerID, float CurValue, float MaxValue, int32 QualityColor, bool bAdvancedShield);
	void BroadcastEndBackpackDragDrop(bool bVisible);
	void BroadcastDriveCustomizeOpened(int32 InLayoutType);
	void BroadcastDriveCustomizeClosed();
	void BroadcastDamagingActorsChange();
	void BroadcastCustomizeVisibilityRequestChanged(bool bVisible);
	bool BroadcastCheckPickupItemVaild(int32 InThisID);
	void BroadcastCharacterRescueStateChanged(enum class ERescueState NewRescueState);
	void BroadcastCharacterLevelExpChanged(int32 NewLevel, float NewExpRatio);
	void BroadcastCharacterHPState();
	void BroadcastCharacterGainExp(int32 ExpAdded);
	void BroadcastBuyResurrectBtnVisibility();
	void BroadcastBattleUpgradeEffect(enum class ESolarTablesEnum_BattleUpgradeEffectType EffectType, int32 ParamSum);
	void BroadcastBattleModeChanged(uint8 InModeType);
	void BroadcastBattleHUDVisibilityChanged(bool bVisible);
	void BroadcastBackpackTakesPickup(struct FVector2D& NewPosition);
	void BroadcastBackpackReleasesPickup();
	void BroadcastBackpackModeChanged(int32 NewMode);
	void BroadcastAimingEnemy(class ASolarCharacter* InEnemy);
	void BoolUIInteractDelegate__DelegateSignature(bool bValue);
	void BoolGameModeLuaDelegate__DelegateSignature(bool bValue);
	void BoolCharacterLuaDelegate__DelegateSignature(bool bValue);
	void BindLocalSpectateDelegates(class ASolarSpectateInfo* SpectateInfo);
	void AddItemToPickup(class UObject* InCardItem);
	void ActionWheelCommandExecDelegate__DelegateSignature();
	void ActionWheelCommandCancelDelegate__DelegateSignature();
};

// 0x148 (0x13F0 - 0x12A8)
// Class Solarland.OBHUDDispatcher
class UOBHUDDispatcher : public UHUDDispatcherBase
{
public:
	FMulticastInlineDelegateProperty_            OnUISettingHeadInfoStyleChanged;                   // 0x12A8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnToggleUISettingPlayerList;                       // 0x12B8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnToggleScoreboard;                                // 0x12C8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnToggleProgressControlButton;                     // 0x12D8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnToggleProgress;                                  // 0x12E8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnTogglePerspective;                               // 0x12F8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnToggleShortCutKey;                               // 0x1308(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnEnterSettlementStage;                            // 0x1318(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnReplayActivityHeatFragmentUpdated;               // 0x1328(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnReplayActivityHeatWidgetClicked;                 // 0x1338(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnBattleOBHUDTypeChanged;                          // 0x1348(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F94[0x70];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnBigMapWidgetPlayerNameSizeChange;                // 0x13C8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnPlayerWidgetChecked;                             // 0x13D8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	uint8                                        Pad_1F95[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOBHUDDispatcher* GetDefaultObj();

};

// 0x0 (0x348 - 0x348)
// Class Solarland.OBKeyboardWidget
class UOBKeyboardWidget : public USolarUserWidget
{
public:

	static class UClass* StaticClass();
	static class UOBKeyboardWidget* GetDefaultObj();

	class UUserWidget* FindKeyWidgetByKeyName(const class FString& KeyName);
};

// 0x0 (0x170 - 0x170)
// Class Solarland.RebuildableMeshRectangleWidget
class URebuildableMeshRectangleWidget : public UMeshRectangleWidget
{
public:

	static class UClass* StaticClass();
	static class URebuildableMeshRectangleWidget* GetDefaultObj();

};

// 0x260 (0x5A8 - 0x348)
// Class Solarland.OBMiniMapWidget
class UOBMiniMapWidget : public USolarUserWidget
{
public:
	class FString                                CurrentCheckedPlayerID;                            // 0x348(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMiniMapWidget*                        MiniMapWidget;                                     // 0x358(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URebuildableMeshRectangleWidget*       PlayerNavIconMeshWidget;                           // 0x360(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URebuildableMeshRectangleWidget*       PlayerNavDirMeshWidget;                            // 0x368(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URebuildableMeshRectangleWidget*       PlayerNavNameMeshWidget;                           // 0x370(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URebuildableMeshRectangleWidget*       PlayerNavDeadMeshWidget;                           // 0x378(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URebuildableMeshRectangleWidget*       PlayerNavGunLineMeshWidget;                        // 0x380(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                          PlayerNavRTCanvas;                                 // 0x388(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MiniMapPlayerNavScale;                             // 0x390(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        GunLineDelayTime;                                  // 0x394(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOBPlayerNavWidget*                    SpectatorNavWidget;                                // 0x398(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<int32, struct FTeamPlayerNavArray>      MapOBTeamPlayerNavWidgets;                         // 0x3A0(0x50)(ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TSubclassOf<class UOBPlayerNavWidget>        SpectatorNavWidgetClass;                           // 0x3F0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UOBPlayerNavWidget>        OBTeamPlayerNavWidgetClass;                        // 0x3F8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1F96[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UTextureRenderTarget2D*                MiniMapTexture;                                    // 0x410(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1F97[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector2D                             RTTexSize;                                         // 0x428(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        NavIconType;                                       // 0x430(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FMiniMapData                          OBMiniMapData;                                     // 0x434(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_1F98[0x15C];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOBMiniMapWidget* GetDefaultObj();

	void SpectatePlayer();
	void RefreshTexture();
	void OnSetPlayerEmitBullet(const struct FVector& StartLoc, const struct FVector& AimLoc, const class FString& SolarPlayerID);
	void OnSetOBTeamPlayerNamePanelScale(enum class EPlayerNamePanelScale InPanelScale);
	void OnSetCurrentCheckedPlayerWidget(const class FString& SelectedPlayerID);
	void OnPlayingScrubStart();
	void OnOBTeamPlayerNavInitialized();
	void OnBattleOBHUDTypeChanged(enum class EBattleOBHUDType& CurrentType);
	void InitRenderTexResources();
};

// 0xA0 (0x3E8 - 0x348)
// Class Solarland.OBPlayerInfoWidget
class UOBPlayerInfoWidget : public USolarUserWidget
{
public:
	class USolarTextBlock*                       Text_TeamNum;                                      // 0x348(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUIComponentPlayerName*                Text_NickName;                                     // 0x350(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTextBlock*                       Text_KillNum;                                      // 0x358(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDeathViewHPWidget*                    OBHP;                                              // 0x360(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTextBlock*                       Text_PlayerLevel;                                  // 0x368(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTextBlock*                       Txt_Lv_Head;                                       // 0x370(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                Img_Lv_Bg_1;                                       // 0x378(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCanvasPanel*                          Panel_Left;                                        // 0x380(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UButton*                               Btn_Arrow_Left;                                    // 0x388(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCanvasPanel*                          Panel_Right;                                       // 0x390(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UButton*                               Btn_Arrow_Right;                                   // 0x398(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarUserWidget*                      UI_Input_Device;                                   // 0x3A0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FA0[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UOBPlayerWeaponWidget*>         SlotWeaponCacheWidgets;                            // 0x3D8(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UOBPlayerInfoWidget* GetDefaultObj();

	void SpectatePrevTeammate();
	void SpectateNextTeammate();
	void SetIsCheater(bool bCheater);
	void OnWeaponSlotEquip(int32 InWeaponSlotID, class ASolarPlayerWeapon* InWeapon);
	void OnWeaponSlotActive(int32 InWeaponSlotID, class AActor* InActiveWeapon);
	void OnSpectateTargetChanged();
	void OnScrubCharactersCreated();
	void OnPlayerKillNumChange(uint8 KillCount);
	void OnPlayerInputTypeChanged(class ASolarPlayerState* InPS);
	void OnCharacterLevelChanged(int32 NewLevel);
};

// 0x70 (0x3B8 - 0x348)
// Class Solarland.OBPlayerMoreInfoWidget
class UOBPlayerMoreInfoWidget : public USolarUserWidget
{
public:
	class USolarImage*                           Img_Super_Skill;                                   // 0x348(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGaugeImage*                           Super_Skill_Countdown;                             // 0x350(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UProgressBar*                          Super_Skill_Progress_CD;                           // 0x358(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Img_Super_Skill_Forbid;                            // 0x360(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarImage*                           Img_Super_Skill_Shadow;                            // 0x368(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarTextBlock*                       Txt_Super_Skill_Progress;                          // 0x370(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarImage*                           Img_Tactical_Skill;                                // 0x378(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGaugeImage*                           Tactical_Skill_Countdown;                          // 0x380(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UProgressBar*                          Tactical_Skill_Progress_CD;                        // 0x388(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Img_Tactical_Skill_Forbid;                         // 0x390(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarImage*                           Img_Tactical_Skill_Shadow;                         // 0x398(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarTextBlock*                       Txt_Tactical_Skill_Progress;                       // 0x3A0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1FB7[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOBPlayerMoreInfoWidget* GetDefaultObj();

	void UpdatePlayerVJetFlyChargeUI(float RemainTime, float Percent);
	void UpdatePlayerMoreInfoUI();
	void UpdatePlayerJetFlyInfoUI();
	void UpdatePlayerHJetFlyChargeUI(float RemainTime, float Percent);
	void UnregisterDelegates();
	void StopRoleAbilityContinueAnim(int32 RoleAbilityIndex);
	void SetChargeState(bool bStart, bool InUsedForVertical);
	void RegisterDelegates();
	void PlayRoleAbilityRefreshAnim(int32 RoleAbilityIndex);
	void PlayRoleAbilityContinueAnim(int32 RoleAbilityIndex);
	void OnVJetChargeStateChanged(bool bStart);
	void OnSpectateTargetItemsChanged(const TArray<struct FReplicateItemData>& InItemDatas);
	void OnSpecTargetChanged(class ASolarPlayerState* OldTarget, class ASolarPlayerState* NewTarget);
	void OnRoleAbilityStateChange(int32 RoleAbilityIndex, int32 State);
	void OnRoleAbilityStartCD(int32 RoleAbilityIndex, float StartCDServerTime, float StartCDTime);
	void OnRoleAbilityContinous(int32 RoleAbilityIndex, bool bTurnOn, float Duration);
	void OnRoleAbilityChange(int32 RoleAbilityIndex, bool bHaveAbility, int32 CharacterId, int32 PlayerLevel);
	void OnRoleAbilityCDDurationChange(int32 RoleAbilityIndex, int32 Duration, bool bDurationReduced);
	void OnHJetChargeStateChanged(bool bStart);
	void OnCharacterJetFlyModuleLevelChanged(int32 NewLv);
	void OnBattleOBHUDTypeChanged(enum class EBattleOBHUDType& CurrentType);
	int32 GetSpectatedPlayerItemMaxPileByID(int32 InItemID);
	int32 GetSpectatedPlayerItemCountByID(int32 InItemID);
	int32 GetCharacterJetModuleLevel(bool InUsedForVertical);
};

// 0x38 (0x380 - 0x348)
// Class Solarland.PlayerNavWidget
class UPlayerNavWidget : public USolarUserWidget
{
public:
	class UWidgetSwitcher*                       IconSwitcher;                                      // 0x348(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                          PlayerNav;                                         // 0x350(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                          PlayerOutOfMapNav;                                 // 0x358(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                FOV;                                               // 0x360(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                ImageRoleNav;                                      // 0x368(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                            PlayerOrder;                                       // 0x370(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1FBD[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPlayerNavWidget* GetDefaultObj();

	void SwitchPlayerNav(bool bOutOfBounds);
	void SetBrushResourceObject(class UObject* InSprite);
	void ResetPlayerNav();
	void ReceivePlayerDead();
	void OnAllPlayerNavVisibilityChanged(bool bVisible);
};

// 0x98 (0x418 - 0x380)
// Class Solarland.OBPlayerNavWidget
class UOBPlayerNavWidget : public UPlayerNavWidget
{
public:
	class FString                                CurrentSolarPlayerID;                              // 0x380(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RecommendedZOrder;                                 // 0x390(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FC4[0x14];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UImage*                                Arror;                                             // 0x3A8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Fire_Arror;                                        // 0x3B0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarTextBlock*                       Text_TeamNumb;                                     // 0x3B8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarImage*                           Img_Bg;                                            // 0x3C0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarImage*                           Img_Frame;                                         // 0x3C8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarImage*                           Img_death;                                         // 0x3D0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarImage*                           Img_FrameArrow;                                    // 0x3D8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                          Panel_player;                                      // 0x3E0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                          Panel_OB;                                          // 0x3E8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetSwitcher*                       Wgs_mod;                                           // 0x3F0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUIComponentPlayerName*                Text_playername;                                   // 0x3F8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarButton*                          Btn_Player;                                        // 0x400(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Img_NameBg;                                        // 0x408(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsWidgetChecked;                                   // 0x410(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1FC5[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOBPlayerNavWidget* GetDefaultObj();

	void SetWidgetBeChecked(bool InIsChecked);
	void SetPlayerNamePanelScale(enum class EPlayerNamePanelScale InPanelScale);
	void SetPlayerIsFire(bool InIsFire);
	float GetPlayerNamePanelScale(enum class EPlayerNamePanelScale InPanelScale);
};

// 0x30 (0x378 - 0x348)
// Class Solarland.OBPlayerWeaponWidget
class UOBPlayerWeaponWidget : public USolarUserWidget
{
public:
	class UWidgetSwitcher*                       Switcher_Status;                                   // 0x348(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                Img_WP;                                            // 0x350(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                Img_WPSelected;                                    // 0x358(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class ASolarPlayerWeapon>     OwnerWeapon;                                       // 0x360(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1FC6[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTimerHandle                          LoadWeaponIconHandle;                              // 0x370(0x8)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UOBPlayerWeaponWidget* GetDefaultObj();

	class UTexture2D* GetWeaponTexture();
};

// 0x70 (0x3B8 - 0x348)
// Class Solarland.OBProgressBar
class UOBProgressBar : public USolarUserWidget
{
public:
	uint8                                        Pad_1FC8[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TotalTime;                                         // 0x350(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CurrentTime;                                       // 0x354(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsPause;                                          // 0x358(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bNeedShowActivityHeatData;                         // 0x359(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FC9[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnSetReplayTime;                                   // 0x360(0x10)(ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	class UButton*                               Btn_Rewind;                                        // 0x370(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UButton*                               Btn_PausePlay;                                     // 0x378(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UButton*                               Btn_FastForward;                                   // 0x380(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarButton*                          Btn_Speed_Left;                                    // 0x388(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarButton*                          Btn_Speed_Right;                                   // 0x390(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                            Txt_CurrentTime;                                   // 0x398(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                            Txt_TotalTime;                                     // 0x3A0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTextBlock*                       Txt_PlaybackSpeed;                                 // 0x3A8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetSwitcher*                       WidgetSwitcher_PausePlay;                          // 0x3B0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UOBProgressBar* GetDefaultObj();

	void UpdateSlider();
	void UpdatePlaybackSpeed();
	void SetTotalTime();
	void SetTextByTime(class UTextBlock* TextBlock, float InTime);
	void SetCurrentTime();
	void RegisterEvent();
	void OnWidgetRefreshed();
	void OnSliderValueChanged(float Value);
	void OnSetReplayTime__DelegateSignature();
	void OnReplayActivityHeatWidgetClicked(float ReplayTime);
	void OnClickSkipForwardButton();
	void OnClickSkipBackButton();
	void OnClickPlaybackSpeedUp();
	void OnClickPlaybackSlowDown();
	void OnClickPausePlayButton();
	void CallTogglePauseDispatcher(bool bPause);
	void CallOnSkipTimeDispatcher(float InTime);
};

// 0x8 (0x350 - 0x348)
// Class Solarland.OBRootWidget
class UOBRootWidget : public USolarUserWidget
{
public:
	class UCanvasPanel*                          Panel_ScopeUI;                                     // 0x348(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UOBRootWidget* GetDefaultObj();

	void AddScopeToPanel(class UUserWidget* InChildWidget, bool bInSpectate);
};

// 0xC8 (0x418 - 0x350)
// Class Solarland.OBScoreboard
class UOBScoreboard : public UOBSettlementBase
{
public:
	class UWidgetAnimation*                      Anim_Enter;                                        // 0x350(0x8)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UScrollBox*                            ScrollBox_TeamList;                                // 0x358(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCanvasPanel*                          Top3;                                              // 0x360(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCanvasPanel*                          Bg_Settlement;                                     // 0x368(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCanvasPanel*                          Bg_InGame;                                         // 0x370(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOBScoreboardSingleTopTeam*            FirstTeam;                                         // 0x378(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOBScoreboardSingleTopTeam*            SecondTeam;                                        // 0x380(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOBScoreboardSingleTopTeam*            ThirdTeam;                                         // 0x388(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UButton*                               CloseBtn;                                          // 0x390(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UHorizontalBox*                        Btn;                                               // 0x398(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UHorizontalBox*                        Remain_Total;                                      // 0x3A0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTileView*                             TileView_Others;                                   // 0x3A8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTextBlock*                       Txt_PlayerRemain;                                  // 0x3B0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTextBlock*                       Txt_PlayerTotal;                                   // 0x3B8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTextBlock*                       Txt_TeamRemain;                                    // 0x3C0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTextBlock*                       Txt_TeamTotal;                                     // 0x3C8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class E_Type_OB_Scoreboard              WidgetTypeChoice;                                  // 0x3D0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FCB[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FCupViewInfo                          CupViewInfo;                                       // 0x3D8(0x28)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FCC[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UOBScoreboardSingleTopTeam*>    TopThreeTeamWidget;                                // 0x408(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UOBScoreboard* GetDefaultObj();

	void UpdateTeamTotal();
	void UpdateTeamRemain();
	void UpdatePlayerTotal();
	void UpdatePlayerRemain();
	void SetWidgetType(enum class E_Type_OB_Scoreboard WidgetType);
	void OnWidgetTypeChangedEvent();
	void OnTeamDataChanged();
	void InitPanelWithData(const TArray<struct FDetailedTeamListViewInfo>& TeamDetailedInfo, struct FCupViewInfo* InCupViewInfo);
	void InitPanelInGame(class UOBSettlementRoot* InOnwer);
	void InitPanel(class UOBSettlementRoot* InOnwer);
	void CloseScoreboardInGame();
};

// 0x18 (0x360 - 0x348)
// Class Solarland.OBScoreboardSingleOtherTeam
class UOBScoreboardSingleOtherTeam : public USolarUserWidget
{
public:
	uint8                                        Pad_1FCD[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UOBScoreboardSingleTeam*               UI_OB_Scoreboard_SingleTeam;                       // 0x350(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTextBlock*                       Txt_Rank;                                          // 0x358(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UOBScoreboardSingleOtherTeam* GetDefaultObj();

	void SetIsCheater(bool bIsCheater);
};

// 0xE8 (0x430 - 0x348)
// Class Solarland.OBScoreboardSingleTeam
class UOBScoreboardSingleTeam : public USolarUserWidget
{
public:
	uint8                                        Pad_1FD1[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                SideName;                                          // 0x350(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Rank;                                              // 0x360(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FD2[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UOBSettlementRoot*                     UIOBRoot;                                          // 0x368(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTextBlock*                       Txt_TeamNumber;                                    // 0x370(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarImage*                           Img_TitleBox;                                      // 0x378(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarImage*                           Img_TitleBg;                                       // 0x380(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarButton*                          Btn_ViewDetail;                                    // 0x388(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOverlay*                              Overlay_Spectating;                                // 0x390(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCanvasPanel*                          Panel_ScoreboardUnit;                              // 0x398(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOBScoreboard*                         ParentScoreboard;                                  // 0x3A0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FDetailedListViewInfo>         CurrentDetailedInfo;                               // 0x3A8(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        TeamID;                                            // 0x3B8(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1FD3[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                TeamName;                                          // 0x3C0(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class ASolarPlayerState*>             Teammate;                                          // 0x3D0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_1FD4[0x50];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOBScoreboardSingleTeam* GetDefaultObj();

	void LuaShowDetailedDataList(class UWidget** OutWidget);
	void InitPanelWithData(struct FDetailedTeamListViewInfo* DetailedTeamInfo, int32 InRank, class UOBScoreboard* InScoreboard);
	void InitPanel(uint8 InTeamId, int32 InRank, class UOBSettlementRoot* InOBRoot, bool bInGame, bool bSpectating);
};

// 0x30 (0x58 - 0x28)
// Class Solarland.OBScoreboardSingleTeamData
class UOBScoreboardSingleTeamData : public UObject
{
public:
	uint8                                        Pad_1FD5[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FDetailedTeamListViewInfo>     DetailedTeamListViewInfo;                          // 0x40(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOBSettlementRoot*                     UIOBRoot;                                          // 0x50(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UOBScoreboardSingleTeamData* GetDefaultObj();

};

// 0x18 (0x360 - 0x348)
// Class Solarland.OBScoreboardSingleTopTeam
class UOBScoreboardSingleTopTeam : public USolarUserWidget
{
public:
	class UTexture2D*                            RankIcon;                                          // 0x348(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOBScoreboardSingleTeam*               UI_OB_Scoreboard_SingleTeam;                       // 0x350(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarImage*                           Img_Rank;                                          // 0x358(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UOBScoreboardSingleTopTeam* GetDefaultObj();

	void InitPanelWithData(struct FDetailedTeamListViewInfo* DetailedTeamInfo, int32 Rank, class UOBScoreboard* InScoreboard);
	void InitPanel(uint8 InTeamId, int32 InRank, class UOBSettlementRoot* InOBRoot);
};

// 0x40 (0x388 - 0x348)
// Class Solarland.OBScoreboardUnit
class UOBScoreboardUnit : public USolarUserWidget
{
public:
	class ASolarPlayerState*                     PlayerState;                                       // 0x348(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUIComponentPlayerName*                Txt_PlayerName;                                    // 0x350(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUIComponentPlayerName*                Txt_KillNum;                                       // 0x358(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUIComponentPlayerName*                Txt_Assist;                                        // 0x360(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUIComponentPlayerName*                Txt_DMGD;                                          // 0x368(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarUserWidget*                      UI_Input_Device;                                   // 0x370(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FD8[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOBScoreboardUnit* GetDefaultObj();

	void UpdatePlayerKillNum(class ASolarPlayerState* PS);
	void UpdatePlayerDamageDealt(float NewValue);
	void UpdatePlayerAssistNum(class ASolarPlayerState* PS);
	void SetRebirthOpacity();
	void SetIsCheater(bool bIsCheater);
	void SetDeathOpacity();
	void SetConnectStateOpacity(bool bUselessParam);
	void OnCharacterDead(class ASolarCharacter* InCharacter);
};

// 0x40 (0x388 - 0x348)
// Class Solarland.OBSettlementRoot
class UOBSettlementRoot : public USolarUserWidget
{
public:
	uint8                                        Pad_1FD9[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UWidgetSwitcher*                       PageSwitcher;                                      // 0x360(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOBVictoryTeam*                        UI_OB_VictoryTeam;                                 // 0x368(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOBDetailedDataList*                   UI_OB_DetailedData_List;                           // 0x370(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOBScoreboard*                         UI_OB_Scoreboard_AllTeam;                          // 0x378(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FDA[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOBSettlementRoot* GetDefaultObj();

	void ToggleScoreboard();
	void SortTeamsByTeamRank();
	void SkipSettlement();
	void ShowPage(int32 PageIndex);
	void ShowNextPage();
	void SetSwitcherVisibility(enum class ESlateVisibility InVisibility);
	void OnTDMVictoryAnimFinished();
	void OnEnterSettlementStage();
	void OnBattleOBHUDTypeChanged(enum class EBattleOBHUDType& CurrentType);
	void EnterTDMSettlement();
	void EnterBRSettlement();
};

// 0x30 (0x378 - 0x348)
// Class Solarland.OBSpectateInfoWidget
class UOBSpectateInfoWidget : public USolarUserWidget
{
public:
	class UCanvasPanel*                          Panel_CurrentTeam;                                 // 0x348(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCanvasPanel*                          Panel_CurrentPlayerInfo;                           // 0x350(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCanvasPanel*                          Panel_Direction;                                   // 0x358(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOBTeamInfoWidget*                     OB_TeamInfo;                                       // 0x360(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUserWidget*                           UI_OB_Target_Switcher;                             // 0x368(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FDD[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOBSpectateInfoWidget* GetDefaultObj();

	void OnUISettingUIAllChanged(bool bShow);
	void OnBattleOBHUDTypeChanged(enum class EBattleOBHUDType& CurrentType);
};

// 0x40 (0x388 - 0x348)
// Class Solarland.OBTeamInfoWidget
class UOBTeamInfoWidget : public USolarUserWidget
{
public:
	class USolarImage*                           Image_TeamBG;                                      // 0x348(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTextBlock*                       Text_TeamNum;                                      // 0x350(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTextBlock*                       Text_TeamKillCount;                                // 0x358(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UVerticalBox*                          Panel_Teammates;                                   // 0x360(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FDE[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOBTeamInfoWidget* GetDefaultObj();

	void OnTeamKillCountChanged(uint8 KillCount);
	void OnTeamDataChanged();
	void OnSpectateTargetChanged();
	void OnScrubCharactersCreated();
};

// 0x10 (0x38 - 0x28)
// Class Solarland.OBTeamListItemObject
class UOBTeamListItemObject : public UObject
{
public:
	uint8                                        Pad_1FDF[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOBTeamListItemObject* GetDefaultObj();

};

// 0x30 (0x378 - 0x348)
// Class Solarland.OBTeamListItemWidget
class UOBTeamListItemWidget : public USolarUserWidget
{
public:
	uint8                                        Pad_1FE0[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USolarImage*                           Image_TeamBG;                                      // 0x350(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarImage*                           Image_Frame;                                       // 0x358(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                            Text_TeamNum;                                      // 0x360(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UVerticalBox*                          Panel_Teammates;                                   // 0x368(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOBTeamListItemObject*                 DataObject;                                        // 0x370(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UOBTeamListItemWidget* GetDefaultObj();

	void SetIsCheater(bool bCheater);
};

// 0x38 (0x380 - 0x348)
// Class Solarland.OBTeamListPopupWidget
class UOBTeamListPopupWidget : public USolarUserWidget
{
public:
	class UOBTeamListWidget*                     OBTeamList;                                        // 0x348(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarUserWidget*                      UI_TabControl_TeamList;                            // 0x350(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Anim_Enter;                                        // 0x358(0x8)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Anim_Exit;                                         // 0x360(0x8)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FE1[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOBTeamListPopupWidget* GetDefaultObj();

	void UpdateNearbyTeamList();
	void ToggleShowPlayerList();
	void ShowNearbyTeamList();
	void ShowAllTeamList();
	void OnUISettingUIAllChanged(bool bShow);
	void OnBattleOBHUDTypeChanged(enum class EBattleOBHUDType& CurrentType);
	void OnAnimExitFinished();
	bool IsOBTeamListVisible();
};

// 0x78 (0x3C0 - 0x348)
// Class Solarland.OBTeamListWidget
class UOBTeamListWidget : public USolarUserWidget
{
public:
	class USolarListView*                        ListView_Teams;                                    // 0x348(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FE2[0x58];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class USolarOBUIModel*                       SolarOBUIModel;                                    // 0x3A8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UObject*>                       TeamItemObjects;                                   // 0x3B0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UOBTeamListWidget* GetDefaultObj();

	void OnTeamDataChanged();
};

// 0x68 (0x3B0 - 0x348)
// Class Solarland.OBTeammateInfoWidget
class UOBTeammateInfoWidget : public USolarUserWidget
{
public:
	class UUIComponentPlayerName*                Text_NickName;                                     // 0x348(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUIComponentPlayerName*                Text_KillNum;                                      // 0x350(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarButton*                          Btn_Spectate;                                      // 0x358(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDeathViewHPWidget*                    OBHP;                                              // 0x360(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                Image_SpectateIcon;                                // 0x368(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                Image_BoardedVehicleIcon;                          // 0x370(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOverlay*                              Overlay_Spectating;                                // 0x378(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarUserWidget*                      UI_Input_Device;                                   // 0x380(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FE3[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOBTeammateInfoWidget* GetDefaultObj();

	void UpdateRebirthUI(class ASolarCharacter* InSolarCharacter);
	void UpdateBuyResurrectionItemPlayerID(const class FString& PlayerId);
	void SetIsCheater(bool bCheater);
	void OnUpdateBoardedVehicleIcon();
	void OnTeammateDead();
	void OnTeammateAlive();
	void OnSpectateTargetChanged();
	void OnScrubCharactersCreated();
	void OnPlayerStateChange(bool bUselessParam);
	void OnPlayerRebirth();
	void OnPlayerKillNumChange(uint8 KillCount);
	void OnPlayerInputTypeChanged(class ASolarPlayerState* InPS);
	void OnPlayerDeadChange();
	void OnCharacterDead(class ASolarCharacter* InCharacter);
	void OnBtnSpectateClick();
	void OnBattleOBHUDTypeChanged(enum class EBattleOBHUDType& CurrentType);
};

// 0x40 (0x390 - 0x350)
// Class Solarland.OBVictory
class UOBVictory : public UOBSettlementBase
{
public:
	uint8                                        Pad_1FE7[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UWidgetAnimation*                      OpenVictoryAnim;                                   // 0x360(0x8)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      CloseVictoryAnim;                                  // 0x368(0x8)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FE9[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOBVictory* GetDefaultObj();

	void PlayAnim();
	void OnOpenVictoryAnimFinished();
	void OnCloseVictoryAnimFinished();
	void OnAnimEnd__DelegateSignature();
	void InitPanel(class UOBSettlementRoot* InOwner);
	void BroadcastOnAnimEnd();
};

// 0x8 (0x350 - 0x348)
// Class Solarland.OBVictoryMember
class UOBVictoryMember : public USolarUserWidget
{
public:
	class ASolarPlayerState*                     PlayerState;                                       // 0x348(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UOBVictoryMember* GetDefaultObj();

	void InitPlayer(class ASolarPlayerState* InState);
};

// 0x48 (0x398 - 0x350)
// Class Solarland.OBVictoryTeam
class UOBVictoryTeam : public UOBSettlementBase
{
public:
	class UOBVictory*                            BigVictory;                                        // 0x350(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOBVictory*                            SmallVictory;                                      // 0x358(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCanvasPanel*                          TeamPanel;                                         // 0x360(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTextBlock*                       Txt_TeamNum;                                       // 0x368(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTextBlock*                       Txt_KillNum;                                       // 0x370(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTextBlock*                       Txt_TeamCnt;                                       // 0x378(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UHorizontalBox*                        AvatarHorization;                                  // 0x380(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Anim_Enter;                                        // 0x388(0x8)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_1FEE[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOBVictoryTeam* GetDefaultObj();

	void OnAnimEndEvent();
	void InitPanel(class UOBSettlementRoot* InOwner);
};

// 0x48 (0x390 - 0x348)
// Class Solarland.OpenTreasureBoxProgressWidget
class UOpenTreasureBoxProgressWidget : public USolarUserWidget
{
public:
	uint8                                        Pad_1FFD[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USolarBattleModel*                     BattleViewModel;                                   // 0x350(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_1FFE[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UButton*                               Button_Open;                                       // 0x368(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UButton*                               Button_Cancel;                                     // 0x370(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UProgressBar*                          ProgressBar_Percent;                               // 0x378(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                ProgressBar_Percent_PC;                            // 0x380(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                            Txt_Time;                                          // 0x388(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UOpenTreasureBoxProgressWidget* GetDefaultObj();

	void UpdateProgress(class ASolarTreasureBoxActor* InBoxActor, float InProgress);
	void UnBindDelegates();
	bool TryOpenAirdropBox();
	void SetTBoxActor(class ASolarTreasureBoxActor* InBoxActor);
	void SetSelfVisibility(bool InShow);
	void SetAirdropBoxActor(class AActor* InBoxActor);
	void OnPressCancelButtonPC();
	bool OnPressButtonPC();
	void OnPressButtonOpen();
	void OnPressButtonCancel();
	void OnOpenCharacterChanged(class AAirDropTreasureBox* InBoxActor);
	void OnDrivingStateChanged(enum class EDriveState InDriveState);
	void OnBtnActiveChanged(bool Inactive);
	void OnAirdropProgressChanged(class AAirDropTreasureBox* InBoxActor);
	void HideSelfByThisID(int64 InThisID);
	void ForceCancel();
	bool BSameThisID(int64 InThisID);
	void BindDelegates();
};

// 0x30 (0x378 - 0x348)
// Class Solarland.OpenTreasureBoxWidget
class UOpenTreasureBoxWidget : public USolarUserWidget
{
public:
	uint8                                        Pad_2000[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UButton*                               Button_Open;                                       // 0x368(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                            Text_CostNum;                                      // 0x370(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UOpenTreasureBoxWidget* GetDefaultObj();

	void UpdateCost();
	void UpdateButtonState();
	void UnBindDelegates();
	bool TryOpenTreasureBox();
	void SetTreasureBoxActor(class AActor* InBoxActor);
	void SetTBoxActor(class ASolarTreasureBoxActor* InBoxActor);
	void SetSelfVisibility(bool InShow);
	void OnOpenBox();
	void OnDrivingStateChanged(enum class EDriveState InDriveState);
	void OnClickButtonOpen();
	void HideSelfByThisID(int64 InThisID);
	bool BSameThisID(int64 InThisID);
	void BindDelegates();
};

// 0x248 (0x270 - 0x28)
// Class Solarland.OpponentPerspectiveEffectController
class UOpponentPerspectiveEffectController : public UActorEffectController
{
public:
	float                                        ParamsSmoothSpeed;                                 // 0x28(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2001[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FOpponentPerspectiveMaterialParams    DefaultMaterialParams;                             // 0x30(0x220)(Edit, NativeAccessSpecifierPrivate)
	TArray<struct FOpponentPerspectiveMaterialParamsConditional> ConditionalMaterialParams;                         // 0x250(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2002[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UOpponentPerspectiveEffectController* GetDefaultObj();

};

// 0x58 (0x88 - 0x30)
// Class Solarland.OrnamentComponentVisibilityConfig
class UOrnamentComponentVisibilityConfig : public UDataAsset
{
public:
	struct FGameplayTagRequirements              VisibleTagRequirements;                            // 0x30(0x50)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTag                          VisibilityFlagTag;                                 // 0x80(0x8)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UOrnamentComponentVisibilityConfig* GetDefaultObj();

	struct FGameplayTagRequirements GetVisibleTagRequirements();
	struct FGameplayTag GetVisibilityFlagTag();
};

// 0x88 (0xB0 - 0x28)
// Class Solarland.PakHashManager
class UPakHashManager : public UObject
{
public:
	uint8                                        Pad_2004[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnPakHashCheckFailed;                              // 0x30(0x10)(BlueprintVisible, ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	bool                                         bEnablePakHash;                                    // 0x40(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2005[0x1F];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<class FString, class FString>           MountedPakHashMap;                                 // 0x60(0x50)(NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UPakHashManager* GetDefaultObj();

	bool IsPakFileHashsReady();
	bool IsEnablePakHash();
	TMap<class FString, class FString> GetReadyPakFileHashs();
	TArray<class FString> GetAllMountedPakNames();
	bool CheckAllMountedPaks(TMap<class FString, class FString>& BasePakMap, TMap<class FString, class FString>& PatchPakMap);
	void CalculatePakFileMD5();
};

// 0x48 (0x78 - 0x30)
// Class Solarland.ParallelMoveSubsystem
class UParallelMoveSubsystem : public UWorldSubsystem
{
public:
	uint8                                        Pad_2006[0x48];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UParallelMoveSubsystem* GetDefaultObj();

};

// 0x48 (0x78 - 0x30)
// Class Solarland.PassiveSkillDataAsset
class UPassiveSkillDataAsset : public UPrimaryDataAsset
{
public:
	struct FSoftClassPath                        SkillClassPath;                                    // 0x30(0x18)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                       SkillIconPath;                                     // 0x48(0x18)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FWrappedLocalTextID                   SkillName;                                         // 0x60(0x4)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FWrappedLocalTextID                   SkillDescription;                                  // 0x64(0x4)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FPassiveSkillLevelDescription> LevelUpConfigs;                                    // 0x68(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPassiveSkillDataAsset* GetDefaultObj();

};

// 0x18 (0x278 - 0x260)
// Class Solarland.PassiveSkillIcon
class UPassiveSkillIcon : public UUserWidget
{
public:
	class UImage*                                ImgIcon;                                           // 0x260(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2007[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPassiveSkillIcon* GetDefaultObj();

	void UpdateImageIcon(int32 InCharacterId);
};

// 0xE0 (0x428 - 0x348)
// Class Solarland.PickupButtonWidget
class UPickupButtonWidget : public USolarUserWidget
{
public:
	class UCheckBox*                             CheckBox_Normal;                                   // 0x348(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USizeBox*                              SizeBox_Normal;                                    // 0x350(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                CurrentCheckBoxSpName;                             // 0x358(0x10)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                CheckBoxIconNormalSpName;                          // 0x368(0x10)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                CheckBoxIconHightLightSpName;                      // 0x378(0x10)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                CheckBoxIconPrefix;                                // 0x388(0x10)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                             Vecter2DZero;                                      // 0x398(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                             Vecter2DOne;                                       // 0x3A0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EPickupItemType                   FirstExistType;                                    // 0x3A8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EPickupItemType                   CurrentDisplayType;                                // 0x3A9(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2009[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AActor*>                        CurrentDispayActorList;                            // 0x3B0(0x10)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_200A[0x68];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPickupButtonWidget* GetDefaultObj();

	void UpdateCheckBoxesVisibilityRef(int32 InItemCount);
	void UnbindPickUpDelegates();
	void SetPickupSwitchByType(enum class EPickupItemType InType, bool InFlag);
	void SetItemDataRef(TArray<class AActor*>& InObjectList, enum class EPickupItemType InType);
	void OnUpdatePickupListStates(bool bItemUpdate);
	void OnUpdateCheckBoxesHighLight(enum class EPickupItemType InType, bool IsRecommend);
	void OnTogglePickupListByKeyboard();
	void OnTogglePickupList(bool Flag, bool NotSelf);
	void OnPickupListClear();
	void OnCheckNormal(bool IsChecked);
	void BindPickUpDelegates();
};

// 0x68 (0x90 - 0x28)
// Class Solarland.PickupItemObject
class UPickupItemObject : public UObject
{
public:
	uint8                                        Pad_200B[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EPickupListItemType               ListViewDataType;                                  // 0x30(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_200C[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UObject*                               CustomizedData;                                    // 0x38(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<int32, struct FPickupListViewItemData>  MergedDatas;                                       // 0x40(0x50)(NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UPickupItemObject* GetDefaultObj();

	void ResetData();
};

// 0x360 (0x6A8 - 0x348)
// Class Solarland.PickupItemWidget
class UPickupItemWidget : public USolarUserWidget
{
public:
	uint8                                        Pad_200D[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UCanvasPanel*                          CanvasPanel_Anim;                                  // 0x350(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                            Debug;                                             // 0x358(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOverlay*                              Item;                                              // 0x360(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Img_Quality_BG;                                    // 0x368(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Img_Quality_BG_Line;                               // 0x370(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                ItemImage_BG;                                      // 0x378(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                ItemImage;                                         // 0x380(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                TagImage;                                          // 0x388(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                ImgBulletType;                                     // 0x390(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarTextBlock*                       ItemName;                                          // 0x398(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                            ItemCount;                                         // 0x3A0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                            ItemCountAdd;                                      // 0x3A8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarTextBlock*                       ItemDesc;                                          // 0x3B0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarTextBlock*                       Txt_WeaponSkill;                                   // 0x3B8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USizeBox*                              ItemSubDesc;                                       // 0x3C0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                          CardItemIcon;                                      // 0x3C8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarCheckBox*                        Mark;                                              // 0x3D0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USizeBox*                              SizeBox_Select;                                    // 0x3D8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FSolarItemData                        PreviewItemData;                                   // 0x3E0(0xB8)(BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	TMap<int32, struct FPickupListViewItemData>  MergedDatas;                                       // 0x498(0x50)(Protected, NativeAccessSpecifierProtected)
	enum class EPickupListItemType               ListViewDataType;                                  // 0x4E8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_200E[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UObject*                               CustomizeData;                                     // 0x4F0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                WeaponPartPrePath;                                 // 0x4F8(0x10)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                ItemPrePath;                                       // 0x508(0x10)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                          ColorNormal;                                       // 0x518(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                          ColorRecommend;                                    // 0x528(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                          ColorWeaponUp;                                     // 0x538(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                          ColorWeaponDown;                                   // 0x548(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<enum class EWeaponType, struct FSoftObjectPath> WeaponType2BulltSpMap;                             // 0x558(0x50)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	int32                                        WeaponMaxLevelLocalID;                             // 0x5A8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        WeaponUpgradeLocalID;                              // 0x5AC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bForceResetAnim;                                   // 0x5B0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bMarkForceUpdate;                                  // 0x5B1(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_200F[0x7B];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bImplementedUpdateFunc;                            // 0x62D(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2010[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FLinearColor>                  ImgQualityBGColors;                                // 0x630(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FSlateColor>                   ItemNameColors;                                    // 0x640(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<int32, class UTexture2D*>               CacheQualityBgMap;                                 // 0x650(0x50)(NativeAccessSpecifierPrivate)
	uint8                                        Pad_2011[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPickupItemWidget* GetDefaultObj();

	void UpdateQuality(int32 SpecifyQuality);
	void TryResetEntryAnim();
	void OnUpdateCustomizedItem(class UObject* InObject);
	void OnRquestEntryPlayAnimCustom(class UObject* InCustomObj);
	void OnRquestEntryPlayAnim(int32 InThisID);
	void OnGameUserSettingChanged();
	void OnCustomizedItemClicked(class UObject* InObject);
	void OnCheckBoxMarkChanged(bool bIsChecked);
	void MarkItemInPickupList();
};

// 0x180 (0x4C8 - 0x348)
// Class Solarland.PickupListWidget
class UPickupListWidget : public USolarUserWidget
{
public:
	class USizeBox*                              SizeBoxItemList;                                   // 0x348(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarListView*                        ItemList;                                          // 0x350(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPickupSightWidget*                    UI_Pickup_Sight;                                   // 0x358(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                             ScopeOffset;                                       // 0x360(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        PickupItemCount;                                   // 0x368(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RefreshSelectDelay;                                // 0x36C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  PickupPreActionName;                               // 0x370(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  PickupNextActionName;                              // 0x378(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                             ZeroVector;                                        // 0x380(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTimerHandle                          PushHandler;                                       // 0x388(0x8)(NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        DisplayLength;                                     // 0x390(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsMovePos;                                        // 0x394(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_201C[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        SelectScopeThisID;                                 // 0x398(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_201D[0x1C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<int64, class UPickupItemObject*>        CachedPickupItemsMap;                              // 0x3B8(0x50)(Protected, NativeAccessSpecifierProtected)
	TMap<int32, class UPickupItemObject*>        MergedPickupItemsMap;                              // 0x408(0x50)(Protected, NativeAccessSpecifierProtected)
	TArray<class UObject*>                       WarppedItemList;                                   // 0x458(0x10)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UObject*>                       WarppedTeamCardList;                               // 0x468(0x10)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_201E[0x50];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPickupListWidget* GetDefaultObj();

	void UnbindPickUpDelegates();
	bool TryPickupFirstItem(bool bAutoPickup);
	void SetSelectPreviousItem();
	void SetSelectNextItem();
	void SetIsMovePostion(bool InIsMovePos);
	void RemoveCardItem(class UObject* InCardItem, bool bPickup);
	void RefreshPickupSightWidget(class UObject* InSelectWidget, int32 InSelectWidgetThisID);
	void RefreshListViewNextTick();
	void OnTogglePickupList(bool bShow, bool NotToSelf);
	void OnPickupListCalculated(TArray<class AActor*>& InActorList, enum class EPickupItemType InType);
	void OnEntryPlayPickupAnim(float InAnimTime);
	void OnDrivingStateChanged(enum class EDriveState InDriveState);
	class UObject* GetCustomObjData(class UObject* InItemData);
	bool CheckIsPickupItemValid(int32 InThisID);
	void BindPickUpDelegates();
	void AddCardItem(class UObject* InCardItem);
};

// 0xA8 (0x3F0 - 0x348)
// Class Solarland.PickupSightWidget
class UPickupSightWidget : public USolarUserWidget
{
public:
	class UImage*                                Img_WeaponA;                                       // 0x348(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Img_WeaponB;                                       // 0x350(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Img_Backpack;                                      // 0x358(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Img_DisableA;                                      // 0x360(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Img_DisableB;                                      // 0x368(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Img_Border_A;                                      // 0x370(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Img_Border_B;                                      // 0x378(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Img_Disable_Bag;                                   // 0x380(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                          Panel_WP_UnarmA;                                   // 0x388(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                          Panel_WP_UnarmB;                                   // 0x390(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                          Panel_Arrow_Left;                                  // 0x398(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                          Panel_Arrow_Right;                                 // 0x3A0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUIWeaponPartWidget*                   WeaponPartA;                                       // 0x3A8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUIWeaponPartWidget*                   WeaponPartB;                                       // 0x3B0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUIWeaponPartWidget*                   WeaponPartBag;                                     // 0x3B8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EWeaponPartType                   PickScopeType;                                     // 0x3C0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2054[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        PickScopeLevel;                                    // 0x3C4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AActor*                                PickActor;                                         // 0x3C8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        PickThisId;                                        // 0x3D0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EItemType                         PickActorType;                                     // 0x3D4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                          ColorDisable;                                      // 0x3D8(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2057[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPickupSightWidget* GetDefaultObj();

	void UpdateBagScope();
	void OnWeaponUpgradeLevel(int32 InWeaponSlot);
	void OnWeaponUpdate(class ASolarCharacter* InCharacter);
	void OnClickWeaponB(struct FGeometry& InGeometry, struct FPointerEvent& InMouseEvent);
	void OnClickWeaponA(struct FGeometry& InGeometry, struct FPointerEvent& InMouseEvent);
	void OnClickImgDisableBag(struct FGeometry& InGeometry, struct FPointerEvent& InMouseEvent);
	void OnClickImgDisableB(struct FGeometry& InGeometry, struct FPointerEvent& InMouseEvent);
	void OnClickImgDisableA(struct FGeometry& InGeometry, struct FPointerEvent& InMouseEvent);
	void OnClickBag(struct FGeometry& InGeometry, struct FPointerEvent& InMouseEvent);
};

// 0x20 (0x280 - 0x260)
// Class Solarland.PlayerMark
class UPlayerMark : public UUserWidget
{
public:
	class UImage*                                PlayerMarkImage;                                   // 0x260(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                            Length;                                            // 0x268(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarMapManager*                      MapManager;                                        // 0x270(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                             MarkPoint;                                         // 0x278(0x8)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UPlayerMark* GetDefaultObj();

};

// 0x3C8 (0x710 - 0x348)
// Class Solarland.PlayerOperationList
class UPlayerOperationList : public USolarUserWidget
{
public:
	uint8                                        Pad_2070[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<class FString, class UWidget*>          CollectedLayout;                                   // 0x358(0x50)(ExportObject, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_2071[0x50];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EPlayerWidgetState                WidgetVisibilityState;                             // 0x3F8(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2072[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UCanvasPanel*                          Panel_AngleView;                                   // 0x400(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetControlGroup*                   FlyActiveControl;                                  // 0x408(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetControlGroup*                   JetActiveControl;                                  // 0x410(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarMovablePad*                      FreeLookPad;                                       // 0x418(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                FreeLookIcon;                                      // 0x420(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Img_SprintActive;                                  // 0x428(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Img_SprintLock;                                    // 0x430(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                FX_CircleLoop;                                     // 0x438(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UPaperSprite>           PressedFreeLook;                                   // 0x440(0x28)(Edit, BlueprintVisible, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UPaperSprite>           ReleasedFreeLook;                                  // 0x468(0x28)(Edit, BlueprintVisible, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UTexture>               SkydiveSprintImage;                                // 0x490(0x28)(Edit, BlueprintVisible, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UTexture>               SkydiveSprintHoveredImage;                         // 0x4B8(0x28)(Edit, BlueprintVisible, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UTexture>               VehicleAutoMoveImage;                              // 0x4E0(0x28)(Edit, BlueprintVisible, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UTexture>               VehicleAutoMoveHoveredImage;                       // 0x508(0x28)(Edit, BlueprintVisible, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                          Panel_SpectateHide;                                // 0x530(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHUDCountdownWidget*                   Panel_CountDown;                                   // 0x538(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarInputButton*                     BT_Jump;                                           // 0x540(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UButton*                               BTN_TeamRescue;                                    // 0x548(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetSwitcher*                       WidgetSwitcher_RescueBTN;                          // 0x550(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHUDPassiveHeadWidget*                 UI_PassiveHead_item;                               // 0x558(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                          Panel_Crouch;                                      // 0x560(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                          Sprint;                                            // 0x568(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                          SprintActiveOncePanel;                             // 0x570(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarTextBlock*                       Txt_JoystickLock;                                  // 0x578(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      FX_CircleOnce_Anim;                                // 0x580(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      FX_CircleLoop_Anim;                                // 0x588(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        JoystickLockTipsSprintTextID;                      // 0x590(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        JoystickLockTipsSkydiveTextID;                     // 0x594(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UButton*                               BTN_BuyResurrection;                               // 0x598(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                          Panel_ShieldUpgrade;                               // 0x5A0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetSwitcher*                       Switcher_State;                                    // 0x5A8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                          Panel_Btn;                                         // 0x5B0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                          Panel_CD;                                          // 0x5B8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarButton*                          Btn_ShiledUpgrade;                                 // 0x5C0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Img_Light;                                         // 0x5C8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Img_Enter_Light_1;                                 // 0x5D0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Img_Enter_Light_2;                                 // 0x5D8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Img_Loop_Light_1;                                  // 0x5E0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Img_Loop_Light_2;                                  // 0x5E8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Img_Loop_Arrow_3;                                  // 0x5F0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2073[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UImage*                                Img_Shield;                                        // 0x600(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                            Text_GameProgressTime;                             // 0x608(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UButton*                               BTN_GameProgressCancel;                            // 0x610(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGaugeImage*                           Image_GameProgressBar;                             // 0x618(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Anim_ShieldUpgrade_Enter;                          // 0x620(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Anim_ShieldUpgrade_Exit;                           // 0x628(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CircleOnceAnimInterval;                            // 0x630(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        FastReliefSkillCharacterID;                        // 0x634(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2075[0x50];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class USolarButton*                          BT_ElectricShop;                                   // 0x688(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2076[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        EShopHUDCheckTime;                                 // 0x69C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                EShopHUDName;                                      // 0x6A0(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2077[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UHorizontalBox*                        Vehicle_Drive;                                     // 0x6B8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHorizontalBox*                        Vehicle_Passenger;                                 // 0x6C0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHorizontalBox*                        Vehicle_Passenger_PC;                              // 0x6C8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                          Vehicle_Repair_Status;                             // 0x6D0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                          Panel_Vehicle_Drive_Passenger;                     // 0x6D8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarVehicleHealthWidget*             UI_Vehicle_Health;                                 // 0x6E0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetSwitcher*                       WidgetSwitcher_VehicleRepair;                      // 0x6E8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWalkWidgetNew*                        WalkJoyStick;                                      // 0x6F0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bJoyStickVisible : 1;                              // Mask: 0x1, PropSize: 0x10x6F8(0x1)(NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        BitPad_1B0 : 7;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_207A[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UCanvasPanel*                          Panel_FollowDance;                                 // 0x700(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarInputButton*                     Btn_FollowDance;                                   // 0x708(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UPlayerOperationList* GetDefaultObj();

	void UpdateFreeLookUI(bool bHide);
	void SwitchWidgetVisibilityByState(enum class EPlayerWidgetState NewState);
	void SetUIShowForSwimming(bool bSwimming);
	void SetUIShowForSpectateMode(bool InSepectateMode);
	void SetShowBattleControls(bool bShow);
	void SetRescueBtnVisibility(bool bShow);
	void SetJoyStickForVehicle();
	void SetJoyStickForSkydive();
	void SetJoyStickForNormal();
	void SetJoyStickDisplay(bool bShow, bool bParachutingType);
	void SetForceCollapsedFreeLook(bool bCollapsed);
	void SetCanClimbFromWater(bool bEnable);
	void SetBuyResurrecBTNVisibility(bool bShow);
	void ScopeUIStateChanged(bool BOpened);
	void ResetJoyStickSprintState();
	void ResetJoyStickControlInput();
	void ResetJoyStick();
	void RecheckElectricShopInteraction();
	void OnVehicleWeaponAbilityActivated(bool bInActive);
	void OnVehicleTypeChanged();
	void OnUpdateVehicleInteractionUIState(enum class EVehicleInterationUIState InUiState, class ASolarVehiclePawn* InVehicleComponent);
	void OnTerminateSprintFree();
	void OnSprintLockIconActiveFunc(const struct FVector2D& SprintPosition);
	void OnSprintIconHideFunc();
	void OnSprintIconActiveFunc(const struct FVector2D& SprintPosition);
	void OnSpectateTargetChanged(class ASolarPlayerState* OldTarget, class ASolarPlayerState* NewTarget);
	void OnShieldUpgradeStart();
	void OnShieldUpgradeItemChanged(int32 NewCount, int32 LastCount);
	void OnShieldUpgradeInterrupt();
	void OnShieldUpgradeFinish();
	void OnShieldChanged(float InCurValue, float InMaxValue, int32 QualityColor, bool bIsAdvancedShield);
	void OnShieldAvailableChanged(bool bShow);
	void OnSettingConfigSaved();
	void OnPickupSwitchChanged(bool Inactive, bool InNotToSelf);
	void OnLocalPlaySet();
	void OnInVehicleJoyStickChange(enum class EDriveState InDriveState);
	void OnFreeLookPadRelease(struct FGeometry& InGeometry, struct FPointerEvent& Event);
	void OnFreeLookPadPressed(struct FGeometry& InGeometry, struct FPointerEvent& Event);
	void OnEnterParachuting();
	void OnEnterLanding();
	void OnEnterCruising();
	void OnElectricShopBtnClickedPC();
	void OnElectricShopBtnClicked();
	void OnDrivingStateChanged(enum class EDriveState InDriveState);
	void OnClickFollowDance();
	void OnClickBuyResurrection();
	void OnClickBtnTeamRescue();
	void OnClickBtnShieldUpgrade();
	void OnClickBtnCancelShieldUpgrade();
	void OnCharacterUsingSkillStatusChanged(const struct FGameplayTag& Tag, int32 NewCount);
	void OnCharacterSet(class ASolarCharacter* ControlledCharacter);
	void OnCharacterOverlapedElectricShop(bool InFlag);
	void OnCharacterIDSet(int32 InCharacterId);
	void InputSprintLockStart();
	void InputSprintFreeStart();
	enum class EDriveState GetLocallPlayerDriveState();
	void DoUpdateEShopButton();
	bool CheckEShopHUDActive();
	void ApplyPlayerJoyStickLayout();
};

// 0x8 (0x718 - 0x710)
// Class Solarland.PlayerOperationListPC
class UPlayerOperationListPC : public UPlayerOperationList
{
public:
	class UCanvasPanel*                          Panel_MobileHide;                                  // 0x710(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UPlayerOperationListPC* GetDefaultObj();

	void OnChangedDriveState(enum class EDriveState InDriveState);
};

// 0x178 (0x228 - 0xB0)
// Class Solarland.WeaponRecoilComponent
class UWeaponRecoilComponent : public UActorComponent
{
public:
	uint8                                        Pad_20AA[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USolarGameInstanceBase*                GameInstance;                                      // 0xB8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bHActive;                                          // 0xC0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bVActive;                                          // 0xC1(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bRActive;                                          // 0xC2(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_20AB[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ASolarWeapon*                          MyWeaponActor;                                     // 0xC8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USingleWeaponConfig*                   WeaponConfig;                                      // 0xD0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCurveFloat*                           YawCurve;                                          // 0xD8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCurveFloat*                           PitchCurve;                                        // 0xE0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCurveFloat*                           RollCurve;                                         // 0xE8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCurveFloat*                           ScopeRollCurve;                                    // 0xF0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCurveFloat*                           ScopePitchCurve;                                   // 0xF8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FRichCurveKey>                 OriginalScopePitchKeys;                            // 0x100(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAmmoConfig*                           CurrentAmmoConfig;                                 // 0x110(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_20AE[0xC8];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UCurveFloat*>                   YawCurveArray;                                     // 0x1E0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UCurveFloat*>                   PitchCurveArray;                                   // 0x1F0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCurveFloat*                           PitchEndCurve;                                     // 0x200(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UCurveFloat*>                   RollCurveArray;                                    // 0x208(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UCurveFloat*>                   ScopeRollCurveArray;                               // 0x218(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UWeaponRecoilComponent* GetDefaultObj();

	void SetRecoilVActive(bool bActive);
	void SetRecoilRActive(bool bActive);
	void SetRecoilHActive(bool bActive);
	void SetRecoilActive(bool bActive);
	bool JudgeHorizontalRecoilDir(struct FVector& FactorVector, bool bCurrentRight, int32 InstantCout);
	bool IsRunning();
	class UCurveFloat* GetYawCurve(uint32 Mode, class UAmmoConfig* AmmoConfig);
	class UCurveFloat* GetRollCurve(uint32 Mode, class UAmmoConfig* AmmoConfig);
	class UCurveFloat* GetPitchCurve(uint32 Mode, class UAmmoConfig* AmmoConfig);
	struct FRotator GetCurrentRecoil();
	struct FRotator GetAndClearCurrentRecoil();
	void Fire(bool Hipfire, bool Primary);
};

// 0x10 (0x238 - 0x228)
// Class Solarland.PlayerWeaponRecoilComponent
class UPlayerWeaponRecoilComponent : public UWeaponRecoilComponent
{
public:
	uint8                                        Pad_20B2[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class ECharacterStateForWeapon          CurrentCharacterState;                             // 0x230(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EPosture                          CurrentPostureType;                                // 0x231(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_20B3[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPlayerWeaponRecoilComponent* GetDefaultObj();

};

// 0x8 (0x30 - 0x28)
// Class Solarland.PostLoadEffectUIData
class UPostLoadEffectUIData : public UGameplayEffectUIData
{
public:
	bool                                         bPostLoaded;                                       // 0x28(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_20B6[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPostLoadEffectUIData* GetDefaultObj();

	void ReceivePostLoadUIData(struct FGameplayEffectSpec& OwnerSpec);
};

// 0x318 (0x540 - 0x228)
// Class Solarland.PreviewActor
class APreviewActor : public AActor
{
public:
	uint8                                        Pad_20E0[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            DefaultSpawnTransform;                             // 0x230(0x30)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FTransform                            ShowTransformRight;                                // 0x260(0x30)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FTransform                            ShowTransformBattlePassRight;                      // 0x290(0x30)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FTransform                            ShowTransformLuckDraw;                             // 0x2C0(0x30)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FTransform                            ShowTransformCarouselDraw;                         // 0x2F0(0x30)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FTransform                            ShowTransformGetReward;                            // 0x320(0x30)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FTransform                            ShowTransformGrowTask;                             // 0x350(0x30)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FTransform                            ShowTransformSupplyBoxRaffle;                      // 0x380(0x30)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FTransform                            ShowTransformSupplyBoxLobby;                       // 0x3B0(0x30)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FTransform                            ShowTransformCharacterWarehouse;                   // 0x3E0(0x30)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UCurveVector>           DissolveCurvePath;                                 // 0x410(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UMaterialInterface>     DissolveMatPath;                                   // 0x438(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UCurveVector>           FresnelCurvePath;                                  // 0x460(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UMaterialInterface>     FresnelMatPath;                                    // 0x488(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UParticleSystem>        SwitchParticleEffectPath;                          // 0x4B0(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20E6[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bPlaySwitchEffect;                                 // 0x4E0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20E7[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        SwitchEffectInterval;                              // 0x4E4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SelfDelayShowSeconds;                              // 0x4E8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_20E8[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FBackpackAnimInfo                     BackpackAnimInfo;                                  // 0x4F0(0xC)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_20E9[0x44];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class APreviewActor* GetDefaultObj();

	void UpdatePreviewActorConfig(const struct FVector& DefaultLoc);
	void TransformToMirror(enum class EItemType ItemType, const struct FTransform& OriginalTransform);
	void TransformCapsuleToMirror(const struct FTransform& OriginalTransform);
	void TransformBackpackToMirror(const struct FTransform& OriginalTransform);
	void StartPlaySwitchEffect();
	void StartPlayFresnelEffect();
	void StartPlayDissovleEffect();
	void ShowAnimLuaCall();
	void ShowAnim();
	void ShowActorWithTrans(struct FTransform& InOffset);
	void ShowActor();
	void SetSwitchEffectCompProperties(class UMeshComponent* EffectComp, class UMeshComponent* DefaultComp, struct FSwitchEffectInfo* EffectInfo, class UMaterialInterface* EffectMat);
	void SetSwitchEffectComp(const TArray<class UActorComponent*>& DefaultComps, class UMaterialInterface* EffectMat, TArray<struct FSwitchEffectInfo>* EffectInfos);
	void PlayAnimInfo(struct FVertexAnimInfo& InAnimInfo);
	void PlayAnim(int32 InStartFrame, int32 InEndFrame, float InLength, bool InLoop);
	void HideActor();
	void DetachFX(class AActor* FXActor);
	void CreateStaticOrnaments(class USkeletalMeshComponent* SkeletalMesh, TMap<struct FGameplayTag, struct FStaticMeshOrnamentConfig>& OrnamentsConfig);
	void CreateSkeletalOrnaments(class USkeletalMeshComponent* SkeletalMesh, TMap<struct FGameplayTag, struct FSkeletalMeshOrnamentConfig>& OrnamentsConfig);
	void CreateOrnaments(class USkeletalMeshComponent* SkeletalMesh, class UCharacterSkinConfig* SkinConfig);
	void CreateChildActorOrnaments(class USkeletalMeshComponent* SkeletalMesh, TMap<struct FGameplayTag, struct FChildActorOrnamentConfig>& OrnamentsConfig);
	class AActor* AttachFX(const class FString& FXBPPath, const class FString& SokectName, bool AutoActivate);
};

// 0x10 (0x550 - 0x540)
// Class Solarland.PreviewHomeActor
class APreviewHomeActor : public APreviewActor
{
public:
	class USolarHomeActorManager*                HomeActorMgr;                                      // 0x540(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  StaticMeshComp;                                    // 0x548(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class APreviewHomeActor* GetDefaultObj();

	void SetMaterial(int32 InItemID);
	class UDataTable* GetTextureDataTable();
	class USolarHomeShaderConfig* GetShaderConfig();
};

// 0x30 (0x290 - 0x260)
// Class Solarland.QuickChatUnit
class UQuickChatUnit : public UUserWidget
{
public:
	class UButton*                               BtnUnit;                                           // 0x260(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarTextBlock*                       TxtChat;                                           // 0x268(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_20F7[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UQuickChatUnit* GetDefaultObj();

	void SendChatMessage();
	void OnChatMessageReleased();
	void OnChatMessagePressed();
};

// 0xC8 (0x410 - 0x348)
// Class Solarland.QuickVoice
class UQuickVoice : public USolarUserWidget
{
public:
	uint8                                        Pad_2101[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UCanvasPanel*                          CanvasPanel_60;                                    // 0x358(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarCheckBox*                        Cancel;                                            // 0x360(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarCheckBox*                        GetIn;                                             // 0x368(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarCheckBox*                        Rescue;                                            // 0x370(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarCheckBox*                        FollowMe;                                          // 0x378(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarCheckBox*                        Weapon;                                            // 0x380(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarCheckBox*                        Vehicle;                                           // 0x388(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarCheckBox*                        Attack;                                            // 0x390(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarCheckBox*                        Defend;                                            // 0x398(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarCheckBox*                        Someone;                                           // 0x3A0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOverlay*                              Overlay_Point;                                     // 0x3A8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarTextBlock*                       Txt_Content;                                       // 0x3B0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Img_Arrow_0;                                       // 0x3B8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Anim_Enter;                                        // 0x3C0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Exit_Enter;                                        // 0x3C8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PointMoveRange;                                    // 0x3D0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PointMoveSensitivity;                              // 0x3D4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CancelSelectRadius;                                // 0x3D8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2104[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class USolarCheckBox*>                AllCheckBoxs;                                      // 0x3E0(0x10)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2105[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UQuickVoice* GetDefaultObj();

	void ReceiveMarkButtonTouchMoved(float DegreeToCenter, const struct FVector2D& TouchLocalPos);
	void ReceiveMarkButtonHoverChanged(bool bIsHovered);
	void ReceiveMarkButtonDragSelectEnded(bool bPlayerDead);
	void ReceiveMarkButtonBeenLongPressed();
	void OnSelectedChanged(int32 ChosenIndex);
	void OnExitAnimFinished();
	void OnCustomGameStateChanged(enum class ESCMInGameState NewGameState);
	void OnCharacterDead(class ASolarCharacter* InCharacter);
	void InitCheckBoxesArray();
	void DoSelectOption(int32 ChosenIndex);
	void CloseQuickChatWheel();
};

// 0x8 (0x30 - 0x28)
// Class Solarland.RadarEffectController
class URadarEffectController : public UActorEffectController
{
public:
	uint8                                        Pad_2106[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class URadarEffectController* GetDefaultObj();

};

// 0x0 (0x228 - 0x228)
// Class Solarland.RandomPackActorBase
class ARandomPackActorBase : public AActor
{
public:

	static class UClass* StaticClass();
	static class ARandomPackActorBase* GetDefaultObj();

	void InitAnimationPosition(class USkeletalMeshComponent* Mesh);
};

// 0x180 (0x4C8 - 0x348)
// Class Solarland.RoleSkillWidget
class URoleSkillWidget : public USolarUserWidget
{
public:
	class UImage*                                Icon_Skill;                                        // 0x348(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarTextBlock*                       Txt_SkillType;                                     // 0x350(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Img_Skill;                                         // 0x358(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarImage*                           Img_Bg_Border;                                     // 0x360(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarImage*                           Img_Bg_1;                                          // 0x368(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Img_SkillBg;                                       // 0x370(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Img_Loop;                                          // 0x378(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USizeBox*                              Img_Loop_Box;                                      // 0x380(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Loop_Anim;                                         // 0x388(0x8)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      LevelUp_Anim;                                      // 0x390(0x8)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                          Panel_ReduceCD;                                    // 0x398(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarTextBlock*                       Txt_Progress;                                      // 0x3A0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UProgressBar*                          Progress_CD;                                       // 0x3A8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Refresh_Anim;                                      // 0x3B0(0x8)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Reduce_Anim;                                       // 0x3B8(0x8)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Img_Forbid;                                        // 0x3C0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                          Panel_Continuous;                                  // 0x3C8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Continued_Loop_Anim;                               // 0x3D0(0x8)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Progress_Duration;                                 // 0x3D8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Img_Loop_New;                                      // 0x3E0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Img_Skill_Continuous;                              // 0x3E8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Img_BtnBg;                                         // 0x3F0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UButton*                               BtnCancel;                                         // 0x3F8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarMovablePad*                      RoleSkillPad;                                      // 0x400(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                               PanelKeyMapping;                                   // 0x408(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PadPaddingOnPress;                                 // 0x410(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2126[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class ERoleWidgetType                   RoleWidgetType;                                    // 0x41C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2127[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FLinearColor>                  ImgBorderColor;                                    // 0x420(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FLinearColor>                  IconColor;                                         // 0x430(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FLinearColor>                  ImgBGColor;                                        // 0x440(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<float>                                TacticalIconCapacity;                              // 0x450(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FLinearColor>                  QualityColorBase;                                  // 0x460(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FLinearColor>                  QualityColorDecorate;                              // 0x470(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bInCD;                                             // 0x480(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2129[0x47];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class URoleSkillWidget* GetDefaultObj();

	void UpdateReduceCDWidgetColor(int32 QualityIndex);
	void OnSuperScaningWidgetShow(bool bShow);
	void OnRoleAbilityStateChange(int32 AbilityIndex, int32 State);
	void OnRoleAbilityStartCDServerTimeUpdate(int32 AbilityIndex, float InServerTime);
	void OnRoleAbilityStartCD(int32 AbilityIndex, float InStartCDServerTime, float StartCDTimeForReplay);
	void OnRoleAbilityInputAction(int32 AbilityIndex, bool bPress, bool bCanActive);
	void OnRoleAbilityEndCD(int32 AbilityIndex);
	void OnRoleAbilityEnd(int32 AbilityIndex);
	void OnRoleAbilityContinous(int32 AbilityIndex, bool bTurnOn, float Duration);
	void OnRoleAbilityChange(int32 AbilityIndex, bool bHaveRoleAbility, int32 CharacterId, int32 PlayerLevel);
	void OnRoleAbilityCDDurationChange(int32 AbilityIndex, int32 Duration, bool bDurationReduced);
	void OnPadRelease(struct FGeometry& InGeometry, struct FPointerEvent& Event);
	void OnPadPress(struct FGeometry& InGeometry, struct FPointerEvent& Event);
	void OnExitSpectateMode();
	void OnEntertSpectateMode();
	void OnControllerCharacterSet(class ASolarCharacter* ControlledCharacter);
	void OnChangeDriveState(enum class EDriveState InDriveState);
	void OnCancelBtnRelease();
	void OnCancelBtnPress();
	void OnBattleHUDVisibleChange(bool bVisible);
	void CancelAbility();
};

// 0x50 (0x2B0 - 0x260)
// Class Solarland.RotationBarMarkWidget
class URotationBarMarkWidget : public UUserWidget
{
public:
	uint8                                        Pad_2132[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  FlagName;                                          // 0x288(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  TextName;                                          // 0x290(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                FlagImage;                                         // 0x298(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                            TextBlock;                                         // 0x2A0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AActor>                 TargetActor;                                       // 0x2A8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class URotationBarMarkWidget* GetDefaultObj();

	void SetupOrder(int32 InOrderID);
	void SetUpdateState(bool ShouldUpdateLocation);
	void SetPosition(const struct FVector2D& InPosition);
	void SetFlagIcon(class UPaperSprite* InSprite);
	void InitializeMark(class AActor* InTargetActor, bool InMoveable);
	float GetAngle();
};

// 0xD8 (0x420 - 0x348)
// Class Solarland.RotationBarWidget
class URotationBarWidget : public USolarUserWidget
{
public:
	TMap<uint8, class URotationBarMarkWidget*>   MarkList;                                          // 0x348(0x50)(ExportObject, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<class URotationBarMarkWidget*>        CustomMarkList;                                    // 0x398(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class URotationBarMarkWidget*>        BuildingFlagList;                                  // 0x3A8(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class URotationBarMarkWidget*>        ActorMarkList;                                     // 0x3B8(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class URotationBarMarkWidget>    MarkWidgetClass;                                   // 0x3C8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                MarkWidgetName;                                    // 0x3D0(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                MarkAtlasType;                                     // 0x3E0(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  PanelName;                                         // 0x3F0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  DirectionImage1Name;                               // 0x3F8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  DirectionImage2Name;                               // 0x400(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCanvasPanel*                          DirectionPanel;                                    // 0x408(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                DirectionImage1;                                   // 0x410(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                DirectionImage2;                                   // 0x418(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class URotationBarWidget* GetDefaultObj();

	void ShowMark(uint8 InPosInTeam, const struct FVector& InPosition);
	TArray<class URotationBarMarkWidget*> ShowActorMarkWithArray(const TArray<class AActor*>& TargetActor);
	class URotationBarMarkWidget* ShowActorMark(class AActor* TargetActor);
	void OnRotationBarVisibilityChanged(bool bVisible);
	void InitBuildingFlag();
	TArray<int32> GetLocationIconIDs(int32 InMapID);
	struct FBuildingData GetBuildingData(int32 InIconID);
	class URotationBarMarkWidget* CreateCustomMark(TSubclassOf<class URotationBarMarkWidget> RotationBarMarkClass, struct FVector& InMarkPos, int32 InZOrder);
	bool ContainMapID(int32 InMapID);
	void CleanMark(uint8 InPosInTeam);
	void CleanCustomMark(class URotationBarMarkWidget* InMarkWidget);
	void CleanActorMarkWithWidgetArray(const TArray<class URotationBarMarkWidget*>& TargetMarkWidget);
	void CleanActorMarkWithWidget(class URotationBarMarkWidget* TargetMarkWidget);
	void CleanActorMarkWithActorArray(const TArray<class AActor*>& TargetActor);
	void CleanActorMarkWithActor(class AActor* TargetActor);
};

// 0xD8 (0x420 - 0x348)
// Class Solarland.SafeAreaProgressWidget
class USafeAreaProgressWidget : public USolarUserWidget
{
public:
	class UImage*                                Var_Avatar;                                        // 0x348(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Var_PoisonBar;                                     // 0x350(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Var_ImageWarnning;                                 // 0x358(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                            Var_TextDistance;                                  // 0x360(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                            Var_TextTime;                                      // 0x368(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPanelWidget*                          Var_TimePanel;                                     // 0x370(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_214C[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UPaperSprite>           Warning01;                                         // 0x380(0x28)(Edit, BlueprintVisible, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UPaperSprite>           Warning02;                                         // 0x3A8(0x28)(Edit, BlueprintVisible, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_214E[0x50];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USafeAreaProgressWidget* GetDefaultObj();

};

// 0x248 (0x558 - 0x310)
// Class Solarland.SolarGameMode
class ASolarGameMode : public AGameMode
{
public:
	FMulticastInlineDelegateProperty_            PreStartPlay;                                      // 0x310(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FDelegateProperty_                           CalledStartPlay;                                   // 0x320(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            PostStartPlay;                                     // 0x330(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            PreHandleMatchHasStarted;                          // 0x340(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FDelegateProperty_                           CalledHandleMatchHasStarted;                       // 0x350(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            PostHandleMatchHasStarted;                         // 0x360(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            PreRestartPlayer;                                  // 0x370(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FDelegateProperty_                           CalledRestartPlayer;                               // 0x380(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            PostRestartPlayer;                                 // 0x390(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            PreEndPlay;                                        // 0x3A0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FDelegateProperty_                           CalledEndPlay;                                     // 0x3B0(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            PostEndPlay;                                       // 0x3C0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<class UGameModeCompBase*>             GameModeComponents;                                // 0x3D0(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_219C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        GamePlayMode;                                      // 0x3E4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<TSubclassOf<class AActor>>            ManagerClasses;                                    // 0x3E8(0x10)(Edit, ZeroConstructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                CharacterClassPath;                                // 0x3F8(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CharacterIdInTrainningCourse;                      // 0x408(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SkinIdInTrainningCourse;                           // 0x40C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        BagIdInTrainingCourse;                             // 0x410(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bManuallyModifyCharacter;                          // 0x414(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_219D[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        SpecifiedCharacterSkinID;                          // 0x418(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bManuallyModifyCharacterBagId;                     // 0x41C(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_219E[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        SpecifiedCharacterBagID;                           // 0x420(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bManuallyModifyCharacterBagTrailId;                // 0x424(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_21A0[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        SpecifiedCharacterBagTrailID;                      // 0x428(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_21A1[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnPostSpawnDefaultSolarCharacterAtTransform;       // 0x430(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class USolarGameModeAIComponent*             AIMgrComponent;                                    // 0x440(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarGameModeStatisticsComponent*     StatComponent;                                     // 0x448(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class ASolarTeamInfo*>                Teams;                                             // 0x450(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class ASolarTeamInfo*>                AliveTeams;                                        // 0x460(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class ASolarPlayerState*>             AlivePlayers;                                      // 0x470(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ASolarTeamInfo>            TeamClass;                                         // 0x480(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDataTable*                            TeamDataTable;                                     // 0x488(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_21A2[0xB0];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class ASolarFlyTrail*                        FlyTrailActor;                                     // 0x540(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class FString>                        BannedPlayerIDList;                                // 0x548(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class ASolarGameMode* GetDefaultObj();

	void UpdatePlayerDataForBotAI(int32 AIConfigID, class ASolarPlayerState* PlayerState);
	void UpdatePlayerData(int32 CharacterSkinID, int32 CharacterBagID, int32 CharacterBagTrailID, class ASolarPlayerState* PlayerState);
	void UpdateDeserterTag(class ASolarPlayerState* PlayerState);
	void UpdateBotPlayerData(class ASolarPlayerState* PlayerState);
	void UpdateAliveTeamsAndPlayers();
	class FString TryKickOutOnlinePlayer(const class FString& PlayerId, bool IsAllowReconnect);
	void SolarGM_SetAntiCheatData(const class FString& InVariableName, float InMin, float InMax, float InThreshold, bool bInBanPlayer);
	void SetGamePlayMode(int32 InGamePlayMode);
	void SendHitMsgWithBool(class ASolarCharacterBase* HitedPlayer, TScriptInterface<class ISolarCharacterController>& PC, enum class ESolarHitType MsgType, float Damage, bool bo);
	void SendHitMsg(class ASolarCharacterBase* HitedPlayer, TScriptInterface<class ISolarCharacterController>& PC, enum class ESolarHitType MsgType, float Damage, const class FString& Params);
	void RestartPlayerTakeChargeEvent__DelegateSignature(bool* bOutSuccess, TArray<class UGameModeCompBase*>& ComponentCollection, class AController* NewPlayer);
	void RestartPlayerEvent__DelegateSignature(TArray<class UGameModeCompBase*>& ComponentCollection, class AController* NewPlayer);
	void PresettleAll();
	void PreAssignTeam(uint8 DesiredTeamID, class ASolarPlayerState* PlayerState);
	void PostSpawnDefaultSolarCharacterAtTransformDelegate__DelegateSignature(class ASolarPlayerState* NewPlayer, class ASolarCharacter* NewCharacter);
	void OnStartBattleresponded();
	bool OnPlayerReJoinRequest(const class FString& PlayerId, class FString* ErrorMsg);
	void NotifyItemStateChanged(class AActor* Item, int32 State);
	void KickOutPlayerToLobby(const class FString& InPlayerID);
	void KickOutAllPlayerToLobby();
	bool IsBannedForCheating(const class FString& PlayerId);
	void InitCharacterClassPath(int32 CharacterId);
	void GetTeams(TArray<class ASolarTeamInfo*>* OutTeams, bool FilterNoMemberTeam, bool FilterAlreadySettled);
	TArray<int32> GetRandomAISkinID(class ASolarPlayerState* InPS);
	int32 GetMatchTeammateCount();
	int32 GetGamePlayMode();
	class UGameModeGlobalSetting* GetGameModeSetting(class UObject* WorldContextObject);
	void GetEmptyTeams(TArray<class ASolarTeamInfo*>* OutTeams, bool Reverse);
	int32 GetBotAINumber();
	void GameModeComponentTakeChargeEvent__DelegateSignature(bool* bOutSuccess, TArray<class UGameModeCompBase*>& ComponentCollection);
	void GameModeComponentEvent__DelegateSignature(TArray<class UGameModeCompBase*>& ComponentCollection);
	void EndPlayTakeChargeEvent__DelegateSignature(bool* bOutSuccess, TArray<class UGameModeCompBase*>& ComponentCollection, enum class EEndPlayReason EndPlayReason);
	void EndPlayEvent__DelegateSignature(TArray<class UGameModeCompBase*>& ComponentCollection, enum class EEndPlayReason EndPlayReason);
	class ASolarPlayerState* CreateBotAISingle(int32 CharacterId, struct FVector& Location, const TArray<enum class ETeamType>& JoinPolicies, TSubclassOf<class ASolarBotAIController> ControllerClass, int32 Difficultly);
	class ASolarPlayerState* CreateBotAIAndJoinTeamByName(int32 CharacterId, struct FVector& Location, const class FString& TeamName, TSubclassOf<class ASolarBotAIController> ControllerClass, int32 Difficultly);
	class ASolarPlayerState* CreateBotAIAndJoinTeamByID(int32 CharacterId, struct FVector& Location, uint8 TeamID, TSubclassOf<class ASolarBotAIController> ControllerClass, int32 Difficultly);
	class ASolarPlayerState* CreateBotAIAndJoinTeam(int32 CharacterId, struct FVector& Location, class ASolarTeamInfo* TeamInfo, TSubclassOf<class ASolarBotAIController> ControllerClass, int32 Difficultly);
	bool CanPlayerBattle(class ASolarPlayerState* PlayerState);
};

// 0x30 (0x588 - 0x558)
// Class Solarland.SBattleGameMode
class ASBattleGameMode : public ASolarGameMode
{
public:
	FMulticastInlineDelegateProperty_            OnPlayerDisconnectedGame;                          // 0x558(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnPlayerReconnectedGame;                           // 0x568(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_21B7[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        SettlementStageConfigID;                           // 0x580(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_21B8[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASBattleGameMode* GetDefaultObj();

	void SettlePlayerBattleData(class ASolarPlayerState* Player);
	void ReceiveBattleSettlement();
	void ReceiveBattleOver();
	void OnPlayerLeaveDSTimeOut(class ASolarPlayerState* PlayerState);
	bool IsAutoSettlementWhenKilled();
	bool IsAllowReconnectGame(class ASolarPlayerState* Player);
};

// 0x1B0 (0x448 - 0x298)
// Class Solarland.SolarGameState
class ASolarGameState : public AGameState
{
public:
	uint8                                        Pad_2219[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class ASolarPlayerState*>             SolarPlayerStateArray;                             // 0x2A0(0x10)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class ASolarPlayerState*>             RealPlayerStateArray;                              // 0x2B0(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bShowBattlePrompt : 1;                             // Mask: 0x1, PropSize: 0x10x2C0(0x1)(Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_1D5 : 7;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_221A[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<int32>                                MapVehicleSpawnTypes;                              // 0x2C8(0x10)(Net, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_221B[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FPrePooledBundle>              PrePooledBundles;                                  // 0x2E8(0x10)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        RemainingPlayersCount;                             // 0x2F8(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        AlivePlayersCount;                                 // 0x2FC(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        RemainingTeamCount;                                // 0x300(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        PlayersCount;                                      // 0x304(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        TeamCount;                                         // 0x308(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        TotalBoardingNum;                                  // 0x30C(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        CapsulePlayerNum;                                  // 0x310(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        SettlementStageConfigID;                           // 0x314(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSet<class UClass*>                          LimitMaxReplicatedNumClasses;                      // 0x318(0x50)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	float                                        StartTime;                                         // 0x368(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        NumPlayers;                                        // 0x36C(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        GameWarmID;                                        // 0x370(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TeammateNumMode;                                   // 0x374(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bLuaReportBattleEndServer;                         // 0x378(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_221E[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameStartConditionList               GameStartConditions;                               // 0x380(0x58)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class USolarGameplayConfigComponent*         GameplayConfigComponent;                           // 0x3D8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class ASolarTeamInfo*>                Teams;                                             // 0x3E0(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        NumReplicatedTeams;                                // 0x3F0(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_221F[0x4F];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class USolarPlayerActivityHeatComponent*     SolarPlayerActivityHeatComponent;                  // 0x440(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class ASolarGameState* GetDefaultObj();

	void SetTeamLastVehicleLocation(uint8 InTeamId, struct FVector& InVehiclePosition);
	void SetSettlementStageConfigID(int32 InConfigID);
	void ServerUpdateMapVehicleSpawnTypes(TArray<int32>& InSpawnTargetVehicleTypes);
	void PlayTeamVictoryVoice();
	void OnSafeAreaIndexChanged(int32 NewIndex);
	void OnRep_SettlementStageConfigID();
	void OnRep_RemainingTeamCountChange();
	void OnRep_OnPlayersCountChange();
	void OnRep_OnAlivePlayersCountChange();
	void OnRep_NumReplicatedTeams();
	void OnRep_NumPlayers(int32 PreviousNumPlayers);
	void OnRep_CapsulePlayerNum();
	void OnRecordingConnectionChanged();
	void OnLocalSpectateTargetChanged(class ASolarPlayerState* OldTarget, class ASolarSpectateInfo* SpectateInfo);
	void NotifyCheatedPlayer(class ASolarPlayerState* CheatedPlayerState, class FText& OutReason);
	void NotifyBombingEnd(int32 BombId);
	void NotifyBombingBegin(int32 BombId, struct FVector& Location, float Radius);
	void NotifyAbnormalPlayer(class ASolarPlayerState* AbnormalPlayerState, class FText& OutReason);
	void NetMulticastNotifyCheatedPlayer(class ASolarPlayerState* CheatedPlayerState, class FText& BanReason);
	void K2_SetCanShowBattlePrompt(bool NewValue);
	bool IsSupportWeaponUpgrade();
	bool IsSupportCharacterTacticalAbility();
	bool IsSupportCharacterSuperAbility();
	bool IsSupportCharacterRole();
	bool IsSupportCharacterInGameLeveling();
	float GetWorldStartTimeSeconds();
	int32 GetWatchingPlayerCount(bool IgnoreOffline);
	void GetTeams(TArray<class ASolarTeamInfo*>* OutTeams, bool FilterNoMemberTeam, bool FilterAlreadySettled);
	class ASolarPlayerState* GetTeamPlayerState(uint8 InTeamId, uint8 InPosInTeam);
	int32 GetTeamNumCount();
	uint8 GetTeammateNum(uint8 InTeamId);
	class ASolarTeamInfo* GetTeamByName(const class FString& InTeamName);
	class ASolarTeamInfo* GetTeam(uint8 InTeamId);
	enum class ERoleSkillOperation GetTacticalSkillStateOperationOnInit();
	enum class ERoleSkillOperation GetSuperSkillStateOperationOnInit();
	class ASolarPlayerState* GetSpecTargetOrLocalPlayerState();
	class ASolarSafeArea* GetSolarSafeArea();
	int32 GetSettlementStageConfigID();
	int32 GetRemainingTeamCount();
	int32 GetRemainingPlayersCount();
	void GetPlayerTeams(TArray<class ASolarTeamInfo*>* OutTeams, bool FilterAlreadySettled);
	class ASolarPlayerState* GetPlayerStateByPlayerId(const class FString& InPlayerID);
	class ASolarPlayerState* GetPlayerStateByNickName(const class FString& InNickName);
	int32 GetPlayersCount();
	class ASolarCharacter* GetPlayerByPlayerID(const class FString& InPlayerID);
	void GetOnlyPlayerTeams(TArray<class ASolarTeamInfo*>* OutTeams, bool FilterAlreadySettled);
	void GetOnlyBotTeams(TArray<class ASolarTeamInfo*>* OutTeams, bool FilterAlreadySettled);
	class ASolarPlayerState* GetOfflinePlayerState(const class FString& OfflinePlayerId);
	class ASolarPlayerState* GetLocalSolarPlayerState();
	bool GetCanShowBattlePrompt();
	float GetBattleStartTimeSeconds();
	void GetAllCharactersExceptTeammate(TArray<class ASolarCharacter*>* CharacterArray);
	int32 GetAliveSolarPlayersCount(bool IgnoreOffline);
	int32 GetAlivePlayersCount();
	uint8 GetAlivePlayerNumInTeamExceptDying(uint8 InTeamId, bool bExceptCheater);
	uint8 CalculateTeamNum();
	void CacheSafeArea(class ASolarSafeArea* SafeArea);
};

// 0x20 (0x468 - 0x448)
// Class Solarland.SBattleGameState
class ASBattleGameState : public ASolarGameState
{
public:
	uint8                                        Pad_222F[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         IsBattleEnd;                                       // 0x460(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsBattleSettlement;                                // 0x461(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EBattleEndType                    BattleEndType;                                     // 0x462(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2230[0x5];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASBattleGameState* GetDefaultObj();

	bool IsBattleOver();
	bool GetIsBattleSettlement();
	enum class EBattleEndType GetBattleEndType();
};

// 0x20 (0x180 - 0x160)
// Class Solarland.SBattleRoyaleGameModeAIComp
class USBattleRoyaleGameModeAIComp : public USolarGameModeAIComponent
{
public:
	bool                                         bBotSkipAICruise;                                  // 0x160(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2237[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MaxLootDistanceToAirline;                          // 0x164(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanSelectLootZoneOutPoisonCircle;                 // 0x168(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2238[0x17];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USBattleRoyaleGameModeAIComp* GetDefaultObj();

};

// 0x1B8 (0x740 - 0x588)
// Class Solarland.SCustomGameMode
class ASCustomGameMode : public ASBattleGameMode
{
public:
	uint8                                        Pad_2271[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TimeOutSeconds;                                    // 0x590(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2272[0xB4];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UCGMLogicComponent*                    LogicComponent;                                    // 0x648(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCGMDeathComponent*                    DeathComponent;                                    // 0x650(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2273[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class ASCMPlayerController*>          WaitingPlayers;                                    // 0x668(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2274[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnPlayerJoin;                                      // 0x688(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnAIJoin;                                          // 0x698(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnPlayerOutEvent;                                  // 0x6A8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<TSubclassOf<class AGameManagerBase>>  GameManagerClasses;                                // 0x6B8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UCGMLogicComponent>        LogicComponentClass;                               // 0x6C8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UCGMDeathComponent>        DeathComponentClass;                               // 0x6D0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class USCMPlayerRPCComponent>    PlayerRPCComponentClass;                           // 0x6D8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2275[0x60];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASCustomGameMode* GetDefaultObj();

	void TimerStartGame();
	void StartBattle();
	bool RequestAllowReconnectGame(class ASCMPlayerState* InPC);
	void ReceiveSpectatorJoinData(class ASCMPlayerState* Player);
	void ReceiveServerLevelLoaded(const class FString& LevelName);
	bool ReceivePlayerTeamPreJoinRequest(TArray<class ASCMPlayerState*>& PreJoinPlayers, int32 TeamID);
	bool ReceivePlayerReJoinRequest(const class FString& PlayerId, class FString* ErrorMsg);
	void ReceivePlayerReJoin(class ASCMPlayerState* NewPlayer);
	void ReceivePlayerPreLogin(const class FString& PlayerId, class ASCMPlayerState* OfflinePlayer, class FString* ErrorMsg);
	void ReceivePlayerNonSpectatorJoinData(class ASCMPlayerState* Player);
	void ReceivePlayerLevelLoaded(class ASCMPlayerController* Player, const class FString& LevelName);
	void ReceivePlayerJoinData(const class FString& PlayerId);
	void ReceivePlayerJoinBattle(class ASCMPlayerState* NewPlayer, bool IsAI);
	void ReceivePlayerJoin(class ASCMPlayerState* NewPlayer, bool IsAI);
	void ReceivePlayerCheat(class ASolarPlayerState* InCheater);
	void ReceivePlayerCancelJoin(const class FString& PlayerId);
	void ReceivePlayerBattleEnd(class ASCMPlayerState* Player, enum class ESCMPlayerOutType OutType);
	void ReceivePlayerAbnormal(class ASolarPlayerState* InAbnormalPlayer);
	void ReceiveOBPlayersChanged();
	void ReceiveGameModeInit();
	void ReceiveBattleTick(float InBattleTime, float DeltaTime);
	void ReceiveBattleEnd();
	void ReceiveBattleBegin();
	void OnTeamInTournamentSettled(const class FString& Side, uint8 TeamID);
	void OnReceivePlayerLogin(class APlayerController* PlayerController);
	void OnReceivePlayerBattleStart(class APlayerController* PlayerController);
	void OnReceiveBattleStart();
	void OnPlayerSettled(class ASCMPlayerState* Player);
	void OnPlayerOut__DelegateSignature(class ASCMPlayerState* Player, enum class ESCMPlayerOutType OutType);
	void OnPlayerOfflineTimeOut(class ASCMPlayerState* OfflineTimeoutPlayer);
	void OnPlayerJoin__DelegateSignature(class ASCMPlayerState* Player);
	void OnPlayerGiveUp(class ASCMPlayerState* OfflineTimeoutPlayer);
	void OnMatchEnd(int32 RPCID);
	void OnDSClose();
	void OnBotAIDataReady(int32 AICount);
	void OnAIJoin__DelegateSignature(class ASCMPlayerState* BotAI);
	void NotifyDSBattleOver();
	void NotifyBotAIDataReady(int32 AICount);
	bool IsEnableLogicComp();
	int32 GetCurMapID();
	void CreateHomeActor(const class FString& Path);
	bool CheckLogicComponentIsA(TSoftClassPtr<class UCGMLogicComponent> ClassPath);
	bool ChangePlayerCharacter(class ASCMPlayerState* Player, int32 CharacterId, int32 SkinId);
	bool ChangeBotAICharacter(class ASolarPlayerState* Player, int32 CharacterId, int32 SkinId);
};

// 0x0 (0x740 - 0x740)
// Class Solarland.SCBattleRoyaleGameMode
class ASCBattleRoyaleGameMode : public ASCustomGameMode
{
public:

	static class UClass* StaticClass();
	static class ASCBattleRoyaleGameMode* GetDefaultObj();

};

// 0x0 (0x740 - 0x740)
// Class Solarland.SCBountyGameMode
class ASCBountyGameMode : public ASCustomGameMode
{
public:

	static class UClass* StaticClass();
	static class ASCBountyGameMode* GetDefaultObj();

};

// 0x118 (0x5E0 - 0x4C8)
// Class Solarland.SolarCharacterBase
class ASolarCharacterBase : public ACharacter
{
public:
	uint8                                        Pad_227E[0x2C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSpawnedActorHandle                   CachedActorHandle;                                 // 0x4F4(0x4)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USolarAbilityComponent*                SolarAbilityComponent;                             // 0x4F8(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPendingEnterWater;                                // 0x500(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_227F[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ASolarCharacterBase*                   InstigatorCharacter;                               // 0x508(0x8)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class UParticleSystem>        DedicatedDeathEffect;                              // 0x510(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UParticleSystem>        DeathEffectSoft;                                   // 0x518(0x28)(Edit, BlueprintVisible, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2280[0x34];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        VehicleCollisionProtectionTimeOnJumpingOff;        // 0x574(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PushYScale;                                        // 0x578(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PushXScaleOnSwimming;                              // 0x57C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PushYScaleOnSwimming;                              // 0x580(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PushZScaleOnSwimming;                              // 0x584(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarAbilitySystemComponent*          SolarAbilitySystemComponent;                       // 0x588(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2281[0x24];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bHoldSignificanceWhenDyingForAutonomous;           // 0x5B4(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2282[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAkComponent*                          AkAudioComponent;                                  // 0x5B8(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarAkGameObject*                    SolarAkGameObject;                                 // 0x5C0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCharacterSoundConfig*                 CharacterSoundConfig;                              // 0x5C8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2283[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASolarCharacterBase* GetDefaultObj();

	void SetAttributeWithGAS(const struct FGameplayAttribute& InAttribute, enum class EGameplayModOp ModifyType, float InValue);
	void ResetAudioComponentTransform();
	void PostAkEventByName(const class FString& EventName1, const class FString& EventName2);
	void OnRep_PendingEnterWater();
	void MulticastAddHitTrace(struct FHitTraceInfo& Info);
	bool K2_IsInWater();
	bool K2_IsAlive();
	bool IsPlayerLocallyControlled();
	bool IsInWater();
	bool IsInSight(struct FVector& InTargetPos, float InMaxAngle, bool bHorizontalOnly);
	bool IsInRoom();
	bool IsBlocked(class AActor* InOtherActor);
	bool InSameTeamWithFirstPlayerController();
	void InitSolarAkGameObject(class UActorComponent* Component, bool bReset);
	class FString GetSoundEventString(enum class ECharacterSoundOpt SoundOpt);
	class USolarAkGameObject* GetSolarAkGameObject();
	class USolarAbilitySystemComponent* GetSafeASC();
	float GetMaxHealth();
	float GetCurrentHealth();
	enum class ESolarCharacterType GetCharacterType();
	struct FVector GetCharacterLocation(bool bMiddle);
	struct FVector GetCharacterDirection();
	class USolarBackpackComponent* GetBackpack();
	void ClientOnPushedByVehicle();
	bool CheckOpenParticleOptimization(int32 Bias);
	void ChangeCurrentHealthWithGAS(enum class EGameplayModOp ModifyType, float InValue);
};

// 0x1AB0 (0x2090 - 0x5E0)
// Class Solarland.SolarCharacter
class ASolarCharacter : public ASolarCharacterBase
{
public:
	uint8                                        Pad_22F2[0x80];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            PendingBeginPlay;                                  // 0x660(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_22F3[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnPlayerStatePossessDelegate;                      // 0x688(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnPlayerStateRepDelegate;                          // 0x698(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	enum class ESolarCharacterType               SolarCharacterType;                                // 0x6A8(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_22F4[0x5B];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector2D                             CharacterCapsuleSizeOverride;                      // 0x704(0x8)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_22F5[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bInRoom;                                           // 0x70D(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_22F6[0x2D];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FReconnectionParams                   ReconnectionParams;                                // 0x73B(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_22F7[0x1C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class USolarAnimInstance*                    SolarAnimInstance;                                 // 0x758(0x8)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<enum class ESpecAnimInstType, class UAnimInstance*> SolarAnimInstances;                                // 0x760(0x50)(BlueprintVisible, Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_22F8[0x14];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        BodyHitSoundCount;                                 // 0x7C4(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        BodyHitByPunchSoundCount;                          // 0x7C8(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_22F9[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class ASolarPile*>                    ChargingPileQueue;                                 // 0x7D0(0x10)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_22FA[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnCharacterIDSet;                                  // 0x808(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnSkinIDSet;                                       // 0x818(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnCharacterSkinReset;                              // 0x828(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	enum class ECharacterBodyScaleType           BodyScaleType;                                     // 0x838(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_22FB[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        AssignedCharacterID;                               // 0x83C(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        AssignedSkinID;                                    // 0x840(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_22FC[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<struct FGameplayTag, class USkeletalMeshComponent*> SkeletalOrnaments;                                 // 0x850(0x50)(ExportObject, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TMap<struct FGameplayTag, class UStaticMeshComponent*> StaticOrnaments;                                   // 0x8A0(0x50)(ExportObject, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TMap<struct FGameplayTag, class UChildActorComponent*> ChildActorOrnaments;                               // 0x8F0(0x50)(ExportObject, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TMap<struct FGameplayTag, struct FCharacterTagListenerForOrnamentComp> OrnamentCompVisibleTagDependencies;                // 0x940(0x50)(ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FOrnamentMontageInfo                  OrnamentMontageInfo;                               // 0x990(0x18)(Net, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_22FD[0x140];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	class USolarAttributeSubComponent*           AttributeSubComp;                                  // 0xAE8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_22FE[0x38];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class ASolarBackpackActor*                   SolarBackpackActor;                                // 0xB28(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarBackpackComponent*               SolarBackpackComponent;                            // 0xB30(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_22FF[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnBackpackItemUpdate;                              // 0xB58(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnBackpackEnergyUpdate;                            // 0xB68(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnBackpackEquipUpdate;                             // 0xB78(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnBatteryIdUpdate;                                 // 0xB88(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnEnergyStateUpdate;                               // 0xB98(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnChargeInfoUpdate;                                // 0xBA8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnConsumableNumUpdated;                            // 0xBB8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnMaxEnergyUpdate;                                 // 0xBC8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnCurEnergyUpdate;                                 // 0xBD8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnBackpackWeaponPartUpdate;                        // 0xBE8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMap<int32, int32>                           ShieldUpMatCostMap;                                // 0xBF8(0x50)(NativeAccessSpecifierPublic)
	TMap<int32, int32>                           MaxPileMap;                                        // 0xC48(0x50)(NativeAccessSpecifierPublic)
	TArray<struct FReplicateMaxPileData>         MaxPileArray;                                      // 0xC98(0x10)(Net, ZeroConstructor, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<int32, struct FSolarItemData>           IdKeyItemMap;                                      // 0xCA8(0x50)(NativeAccessSpecifierPublic)
	TArray<struct FReplicateItemData>            IdKeyItemArray;                                    // 0xCF8(0x10)(Net, ZeroConstructor, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<enum class EItemType, struct FSolarItemData> TypeKeyItemMap;                                    // 0xD08(0x50)(NativeAccessSpecifierPublic)
	TArray<struct FReplicateItemData>            TypeKeyItemArray;                                  // 0xD58(0x10)(Net, ZeroConstructor, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FReplicateItemData>            WeaponDataArray;                                   // 0xD68(0x10)(Net, ZeroConstructor, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<int32, struct FSolarItemData>           WeaponDataMap;                                     // 0xD78(0x50)(NativeAccessSpecifierPublic)
	uint8                                        Pad_2300[0x50];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<int32>                                WeaponPartsArray;                                  // 0xE18(0x10)(Net, ZeroConstructor, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2301[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<uint8>                                IgnoreScopeSlots;                                  // 0xE30(0x10)(Net, ZeroConstructor, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        EnergyState;                                       // 0xE40(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2302[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MaxEnergyValue;                                    // 0xE44(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CurrEnergyValue;                                   // 0xE48(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxExtraEnergyValue;                               // 0xE4C(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CurrExtraEnergyValue;                              // 0xE50(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        EnergyModuleID;                                    // 0xE54(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AddedEnergyMax;                                    // 0xE58(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ExtraEnergyModuleID;                               // 0xE5C(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AddedExtraEnergyMax;                               // 0xE60(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        VJetPackModuleID;                                  // 0xE64(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        HJetPackModuleID;                                  // 0xE68(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2303[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bSettingEnergyCostEnabled;                         // 0xE6D(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2304[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        DayLightID;                                        // 0xE70(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SolarChargeRatio;                                  // 0xE74(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bReviveItemCleared;                                // 0xE78(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2305[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FBackpackJetPrepelInfo                JetPropellingInfo;                                 // 0xE7C(0xC)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)
	enum class EBackpackPropellingMode           BackpackPropellingMode;                            // 0xE88(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2306[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector2D                             InputVector;                                       // 0xE8C(0x8)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2307[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USolarInputActionContext*              InputActionContext;                                // 0xEA0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EIdleTurnType                     IdleTurnType;                                      // 0xEA8(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2308[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRotator                              CharacterLookAt;                                   // 0xEB0(0xC)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_2309[0x24];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FCharacterOperationEvent              CharacterOperationEvt;                             // 0xEE0(0x10)(NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_230A[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnHealthUpdateDelegate;                            // 0xF08(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	float                                        PendingRegeneration;                               // 0xF18(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DiedTime;                                          // 0xF1C(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_230B[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	uint8                                        bIsDeathVerge : 1;                                 // Mask: 0x1, PropSize: 0x10xF24(0x1)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_1DE : 7;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_230C[0x13];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class USolarTeamRescueComponent*             SolarTeamRescueComponent;                          // 0xF38(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class ASolarCharacter>        RescuingCharater;                                  // 0xF40(0x8)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class ASolarUAVRescue>        RescuingUAV;                                       // 0xF48(0x8)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ERescueState                      CurrentRescueState;                                // 0xF50(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ERescueState                      LastRescueState;                                   // 0xF51(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_230D[0x2E];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TWeakObjectPtr<class ASolarCharacter>        RescuedCharater;                                   // 0xF80(0x8)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RescuedStartTime;                                  // 0xF88(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_230E[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UStaticMeshComponent*                  RescueInjector;                                    // 0xF90(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_230F[0x24];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        RescueTime;                                        // 0xFBC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2310[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class ASolarPlayerWeapon*>            DeathBoxWeaponArray;                               // 0xFC8(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FSolarItemData>                DeathBoxArray;                                     // 0xFD8(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        DeathBoxEnergy;                                    // 0xFE8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2311[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ASolarWaterActorNew*                   WaterActor;                                        // 0xFF0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystemComponent*              SwimmingWaterEffect;                               // 0xFF8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystemComponent*              HeavyJumpWaterEffect;                              // 0x1000(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UParticleSystemComponent*>      HorizontalFlyWaterEffects;                         // 0x1008(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2312[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class USolarItemComponent*                   SolarItemComponent;                                // 0x1028(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarPickupComponent*                 SolarPickupComponent;                              // 0x1030(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsElectricStoreOpened;                            // 0x1038(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2313[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USolarTreatmentComponent*              SolarTreatmentComponent;                           // 0x1040(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ESolarTreatmentState              CurrentTreatState;                                 // 0x1048(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2314[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        TreatmentCount;                                    // 0x104C(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2315[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnShieldRecharge;                                  // 0x1058(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnShieldBreak;                                     // 0x1068(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnShowShieldHUD;                                   // 0x1078(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnShowShieldHUDItem;                               // 0x1088(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnShieldUpFX;                                      // 0x1098(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnCurShieldValueChanged;                           // 0x10A8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnShieldIDChanged;                                 // 0x10B8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnShieldValueLow;                                  // 0x10C8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnShieldValueChanged;                              // 0x10D8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_2316[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        CurrShieldId;                                      // 0x10EC(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        CurUniqueShieldId;                                 // 0x10F0(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxShieldValue;                                    // 0x10F4(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        NextUpgradeShieldID;                               // 0x10F8(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        NextUpgradeShieldEnergy;                           // 0x10FC(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CurrShieldValue;                                   // 0x1100(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EShieldState                      CurrShieldState;                                   // 0x1104(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2317[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        CurrShieldLevel;                                   // 0x1108(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2318[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bHasPreAdd;                                        // 0x1110(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2319[0xA7];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UStaticMeshComponent*                  ShieldRepairOperator;                              // 0x11B8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMesh*                           ShieldOperatorSM;                                  // 0x11C0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMesh*                           ShieldOperatorBigSM;                               // 0x11C8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystemComponent*              ShieldRepairFX;                                    // 0x11D0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystemComponent*              ShieldMultiRecoverFX;                              // 0x11D8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystemComponent*              ShieldUpgradeBodyFX;                               // 0x11E0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  ShieldUpgradeOperator;                             // 0x11E8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMesh*                           ShieldUpgradeOperatorSM;                           // 0x11F0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTimeline                             ShieldOperatorExpandTimeline;                      // 0x11F8(0x98)(ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FTimeline                             ShieldOperatorNarrowTimeline;                      // 0x1290(0x98)(ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TMap<enum class EShieldSoundType, struct FShieldSoundData> ShieldSounds;                                      // 0x1328(0x50)(Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_231A[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UStaticMeshComponent*                  TreasureBoxOperator;                               // 0x1380(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ADeathTreasureBox*                     CurChargingDeathBox;                               // 0x1388(0x8)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class ADeathTreasureBox*>             DeathBoxes;                                        // 0x1390(0x10)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_231B[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnLocalPlayerSpectateMeStatusChanged;              // 0x13A8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_231C[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FDelegateProperty_                           OnHUDNickNameSet;                                  // 0x13E8(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)
	FDelegateProperty_                           OnHUDTeamPosSet;                                   // 0x13F8(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)
	FDelegateProperty_                           OnHUDDistanceSet;                                  // 0x1408(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)
	FDelegateProperty_                           OnHUDDistanceDisplaySet;                           // 0x1418(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)
	FDelegateProperty_                           OnHUDRescueBtnActivitySet;                         // 0x1428(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)
	class USolarTeammateHUDWidgetComponent*      TeammateHUDComp;                                   // 0x1438(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_231D[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        HUDZNomral;                                        // 0x1448(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        HUDChangeTime;                                     // 0x144C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_231E[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class USolarRadarComponent*                  SolarRadarComponent;                               // 0x1468(0x8)(Edit, ExportObject, ZeroConstructor, Transient, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRadarDataSpecContainer               ActivatedRadars;                                   // 0x1470(0x120)(Net, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class ASolarRadarStation>     TargetRadarStation;                                // 0x1590(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class ASolarElectricShop>     TargetElectricShop;                                // 0x1598(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_231F[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTimerHandle                          StatisticsTimerHandle;                             // 0x15B0(0x8)(NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2320[0x70];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class ASolarCharacter*                       CachedInstigatorCharacter;                         // 0x1628(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2321[0x14];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ArmorReduceValue;                                  // 0x1644(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HeadHitValue;                                      // 0x1648(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2322[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnTakeDamageDelegate;                              // 0x1650(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_2323[0x14];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        InstigatorCharacterWeaponItemID;                   // 0x1674(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FCriticalHitInfo>              CriticalHits;                                      // 0x1678(0x10)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2324[0x68];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UWorldMarkComponent*                   WorldMarkComponent;                                // 0x16F0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UIMChatObject*                         IMChatObj;                                         // 0x16F8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        AIActorCapacity;                                   // 0x1700(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2325[0xAC];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        StandJogSpeed;                                     // 0x17B0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StandRunSpeed;                                     // 0x17B4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StandSprintSpeed;                                  // 0x17B8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CrouchJogSpeed;                                    // 0x17BC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CrouchRunSpeed;                                    // 0x17C0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CrouchSprintSpeed;                                 // 0x17C4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2326[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnJogSetClient;                                    // 0x17D0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                         bIsSprintingMove;                                  // 0x17E0(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2327[0x57];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class USolarCharacterMovementComponent*      CachedSolarCharacterMovement;                      // 0x1838(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        BitPad_1DF : 1;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        bIsJog : 1;                                        // Mask: 0x2, PropSize: 0x10x1840(0x1)(Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        BitPad_1E0 : 6;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_2328[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MoveSpeedReduceBonusInHipFire;                     // 0x1844(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        MoveSpeedReduceBonusInAdsHipFire;                  // 0x1848(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2329[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	enum class ECustomJumpType                   CurrentCustomJumpType;                             // 0x185C(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_232A[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EJetFlyType                       CurrentJetFlyType;                                 // 0x185F(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bNewJetFlyCheckFlag : 1;                           // Mask: 0x1, PropSize: 0x10x1860(0x1)(Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_1E1 : 7;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_232B[0x47];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UAnimSequence*                         CruiseStartAnim;                                   // 0x18A8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                         CruiseLoopAnim;                                    // 0x18B0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                         CruiseEndAnim;                                     // 0x18B8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PrepareToParachuteStartTime;                       // 0x18C0(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PrepareToParachuteDuration;                        // 0x18C4(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               PrepareToParachuteLocation;                        // 0x18C8(0xC)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               AgreedParachuteLocation;                           // 0x18D4(0xC)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_232C[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        CapsuleID;                                         // 0x18F8(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bEnableCruising;                                   // 0x18FC(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_232D[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ASolarCapsuleRoot*                     BoardedRoot;                                       // 0x1900(0x8)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ECruiseState                      CruiseState;                                       // 0x1908(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_232E[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        ForceParachuteCountDown;                           // 0x190C(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCharacterCruiseComponent*             CruiseComponentPrivate;                            // 0x1910(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_232F[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnSkydiveTraced;                                   // 0x1920(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	class AExponentialHeightFog*                 HeightFogActor;                                    // 0x1930(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UParticleSystemComponent*>      SkydiveFlyingEffects;                              // 0x1938(0x10)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UParticleSystemComponent*>      SkydiveLandingEffects;                             // 0x1948(0x10)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UParticleSystemComponent*>      SkydiveWholeLifetimeEffects;                       // 0x1958(0x10)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ESkydiveStage                     CurrentSkydiveStage;                               // 0x1968(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2330[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnSkydivingStageChangedDelegate;                   // 0x1970(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_2331[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UActorComponent*                       FollowedLeaderMovementComponent;                   // 0x19A0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2332[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UWeaponSystemPlayerBase*               WeaponSystemComponent;                             // 0x19D8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, InstancedReference, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2333[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnCharacterFired;                                  // 0x19E8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_2334[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class USkeletalMeshComponent*                FirstPersonMesh;                                   // 0x1A10(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2335[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class ASolarPlayerWeapon*                    TempSwitchWeapon;                                  // 0x1A28(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ASolarPlayerWeapon*                    CachedCurrentWeapon;                               // 0x1A30(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2336[0xC8];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UWeaponSystemVehicleComponent*         WeaponSystemVehicle;                               // 0x1B00(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, InstancedReference, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2337[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FBoardedVehicleInfo                   BoardedVehicleInfo;                                // 0x1B20(0x10)(BlueprintVisible, BlueprintReadOnly, Transient, NoDestructor, NativeAccessSpecifierPublic)
	bool                                         bOutVehicleShot;                                   // 0x1B30(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2338[0xC7];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UStaticMeshComponent*                  VehicleRepairToolMesh;                             // 0x1BF8(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2339[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnCharacterActivateEMP;                            // 0x1C18(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnCharacterSwitchEMPEffect;                        // 0x1C28(0x10)(ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	bool                                         bActiveEMP;                                        // 0x1C38(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bActiveInfiniteAmmo;                               // 0x1C39(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bNoticedCantCharge;                                // 0x1C3A(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ESkillAnimType                    CurrentSkillAnimType;                              // 0x1C3B(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class ESkillAnimRightHandType           CurrentSkillAnimRightHandType;                     // 0x1C3C(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_233A[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UStaticMeshComponent*                  MassInvWarningIconComponent;                       // 0x1C40(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_233B[0x38];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UScoutEnemyObject*                     ScoutEnemyObj;                                     // 0x1C80(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDuckRollingMeshComponent*             CachedDuckRollingMeshComponent;                    // 0x1C88(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_233C[0x78];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	uint8                                        WallRunSurfaceAngle;                               // 0x1D08(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EWallRunState                     WallRunState;                                      // 0x1D09(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_233D[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        LeadDanceID;                                       // 0x1D0C(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_233E[0xA0];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                DebugStringBotAIInfo;                              // 0x1DB0(0x10)(Net, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                DebugStringToDrawGASServer;                        // 0x1DC0(0x10)(Net, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                DebugStringDSTransferLog;                          // 0x1DD0(0x10)(Net, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        RoleAbilityCharacterID;                            // 0x1DE0(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_233F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<int32>                                RoleAbilityBoundPlayerLevels;                      // 0x1DE8(0x10)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FGameplayAbilitySpecHandle>    RoleAbilitySpecHandles;                            // 0x1DF8(0x10)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, RepNotify, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<float>                                RoleAbilityStartCDServerTime;                      // 0x1E08(0x10)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, RepNotify, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2340[0x40];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        BattleUpgradeEffectCurrentLevel;                   // 0x1E58(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2341[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FBattleUpgradeEffectContainer         BattleUpgradeEffects;                              // 0x1E60(0x120)(Net, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_2342[0x80];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TWeakObjectPtr<class ASolarUAVRescue>        PermanentRescueUAV;                                // 0x2000(0x8)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2343[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<class ASkywardDiveLauncher*, bool>      AvailableSkywardDiveLaunchers;                     // 0x2028(0x50)(NativeAccessSpecifierPublic)
	uint8                                        Pad_2344[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASolarCharacter* GetDefaultObj();

	bool WorldToScreen(struct FVector& Location, struct FVector2D* Screen);
	void UseDanceEmoteByID(int32 ID);
	void UpgradeShieldResponse(bool bSuccess);
	void UpgradeGenericSkill(int32 LevelUp);
	void UpgradeClassTypeSkill(int32 LevelUp);
	void UpdateWeaponCrosshair(float InDeltaTime);
	void UpdateVehicleStealthProgress(float StealthMaterialPercent);
	void UpdateTeammateHUDData(uint8 InNewPosInTeam);
	void UpdateShieldUpgradeMatMaxPile();
	void UpdateShieldPropertyByAblility();
	void UpdateRoleAbilityState(uint8 RoleAbilityIndex, enum class ERoleSkillOperation Ope);
	void UpdateJetFlyDataToSpectating();
	void UpdateExtraMagToSpectateInfo(class ASolarSpectateInfo* SpectateInfo);
	void UpdateDyingAttr(float DeltaTime);
	float UpdateCurrentHealth(float UpdateValue, enum class EHealthChangeType ChangeType, class ASolarCharacter* InInstigatorCharacter, class AActor* InDamageCauserActor, struct FSolarPointDamageEvent* DamageEvent);
	void UpdateBattleUpgradeEffectToSpectateInfo(class ASolarSpectateInfo* SpectateInfo);
	void UnbindActorToSelfTeam(class AActor* Actor);
	void TurnCharacterWithAngle(float Degree, bool bIsYawOrPitch);
	void TurnCharacterToDirection(struct FVector& Dir);
	void TryStopSpectateCountdown();
	void TryStopShieldRecharge();
	void TryStatisticsRechargedTimes();
	void TryStartSpectateCountdown();
	void TryStartShieldRecharge(bool bUseBigRecharger);
	void TrySetTeammateHUDShow();
	void TrySetTeammateHUDHide();
	void TrySetTeamateHUDVisiblity();
	void TryRechargeShield(bool bUseBigRecharger);
	void TryHideShieldOperator();
	void TryDiscardShieldUpgradeMatItems(int32 InItemNum);
	void TryCreatingOwnTeammate();
	void TryBreakShieldRecharge();
	void TryBreakScopeStatus();
	void TryBindPowerBarDelegates();
	void TryBindPickupDelegates();
	void TryBindItemPanelDelegates();
	void TryBindHPPanelDelegates();
	void TryAutoMarkItemForTeammateServer(TArray<struct FSolarItemData>& ItemData);
	void ToggleDebugInfo();
	void ToggleDebugGASInfo();
	void TickShieldOperatorTimeline(float InDeltaTime);
	float TakeDamageResolve(float Damage, struct FSolarPointDamageEvent& DamageEvent, class ASCMPlayerState* EventInstigator, class AActor* DamageCauser);
	void Suicide();
	void StopTreatmentProgressBar();
	void StopTreatment();
	void StopShieldRechargeProgressBar();
	void StopShieldRechargeProgress();
	void StopRescueProgressBar(int32 TextID);
	void StopRepairWeakPointProgressBar();
	void StopClimbSound();
	void StatisticElectricShopOnActivated(struct FVector& InLocation);
	void StartTreatmentProgressBar(float Duration);
	void StartTreatment();
	void StartShieldRechargeProgressBar(float InRechargeDuration, int32 InContributorCharacterId);
	void StartShieldRechargeProgress();
	void StartRescueProgressBar(float Duration, float RemainingTime, int32 TextID, bool bShowBtn, bool bIsUAV);
	void StartRepairWeakPointProgressBar(float Duration);
	void SpecAnimInstStopMontage(enum class ESpecAnimInstType SpecAnimType, class UAnimMontage* AnimMontage);
	float SpecAnimInstPlayMontage(enum class ESpecAnimInstType SpecAnimType, class UAnimMontage* AnimMontage, float InPlayRate, class FName StartSectionName);
	class UAnimMontage* SpecAnimInstGetCurrentMontage(enum class ESpecAnimInstType SpecAnimType);
	void SpawnDeathBoxActor(class ASolarPlayerState* InKillerPS);
	void SolarLaunchCharacter(struct FVector& LaunchVelocity, bool bXYOverride, bool bZOverride, class AActor* JumpPad);
	void ShowShieldUIFX(int32 ShiledID);
	void ShowShieldUI(bool IsShow);
	void ShowRevivePickupEffect();
	void ShowReviveClearEffect();
	void ShowRescueInjector();
	void ShowNoticeCantCharge();
	bool ShouldForceOverrideDamageTaken(float Damage, struct FSolarPointDamageEvent& DamageEvent, class ASCMPlayerState* EventInstigator, class AActor* DamageCauser, float* OverrideDamageTaken);
	void ShieldUpgradeToNextLevel();
	void ShieldOperatorInterpFunc(float InValue);
	void SetSpectateTargetCharacter(class ASolarCharacter* InSpectateTargetCharacter);
	void SetSelfEnergyCostEnable(bool bEnable);
	void SetOpenScopeDuration(float InDuration, bool bInOpenScope);
	void SetNewCharacterSkin(class USkeletalMesh* NewMesh, class UMaterialInterface* NewMaterial, class UClass* NewAnimClass);
	void SetMaxWalkSpeed(float NewWalkSpeed);
	void SetInfiniteAmmoState(bool Enable);
	void SetCurrShieldValue(float InValue);
	void SetCurrExtraEnergy(float Amount);
	void SetBackpackConfig(int32 InCharacterId);
	void SetActiveRescueBtn(bool bIsActive);
	void ServerUseItemRequest(int32 ItemID, int32 Num);
	bool ServerUpgradeShield();
	void ServerUpdateWallRunState(enum class EWallRunState NewState);
	void ServerUpdateWallRunAngle(uint8 ClientAngle);
	void ServerTryRechargeShield(float InRecoverySpeed);
	void ServerTriggerRadarStation(class ASolarRadarStation* InRadarStation);
	void ServerSwitchVehicleSeat(float LocalTime, class ASolarVehiclePawn* InVehicle, int32 TargetSeatIndex, struct FVector_NetQuantize& VehicleLocation, struct FVector_NetQuantizeNormal& VehicleEuler);
	void ServerSwitchShield(struct FSolarItemData& NewShieldData);
	void ServerStatisticsRechargedTimes(int32& RechargedTimes, int32& BigRechargedTimes);
	void ServerStatisticElectricShopOnActivated(struct FVector& InLocation);
	void ServerStartRescue(class ASolarCharacter* TargetCharacter);
	void ServerSetTreasureBoxState(class ASolarTreasureBoxActor* TreasureBox, enum class ETreasureBoxState NewState, class ASolarCharacter* RequestCharacter);
	void ServerSetJetPackModule(int32 NewJetPackModuleID, bool bForVertical);
	void ServerSetInputVector(uint16 AxisX, uint16 AxisY);
	void ServerSetIdleTurnType(enum class EIdleTurnType TurnType);
	void ServerSetEnergyState(enum class EEnergyState State);
	void ServerSetDebugCharacterGASValue(int32 Value);
	void ServerSetCurChargingDeathBox(class ADeathTreasureBox* DeathBox);
	void ServerSetChargingPile(bool bEnter, class ASolarPile* InChargingPile);
	void ServerSetCharacterOperation(enum class ECharacterOperation InType, class UObject* Target);
	void ServerSetCanBeDamaged(bool bInCanBeDamaged);
	void ServerSendGameplayEvent(struct FGameplayTag& EventTag, struct FGameplayEventData& Payload);
	void ServerSelectLevelSkill(int32 Level, int32 SelectedIndex);
	void ServerRPCUpgradeWeapon(class ASolarElectricShop* InTargetShop, class ASolarPlayerWeapon* InTargetWeapon);
	void ServerRPCUpgradeShield();
	void ServerRPCTakeWeaponPartToBag(int32 Slot, int32 WeaponPartType);
	void ServerRPCTakeBagPartToWeapon(int32 Slot, int32 WeaponPartType);
	void ServerRPCSwitchWeaponPart(int32 Slot, int32 WeaponPartType);
	void ServerRPCSetSelfEnergyCostEnable(bool bEnable);
	void ServerRPCPurchaseEShopItems(int32 InProductID, bool bIsRecommend, class ASolarElectricShop* InTargetShop);
	void ServerRPCDisplayAllElectricShops();
	void ServerRPCDiscardWeaponPart(int32 Slot, int32 WeaponPartType);
	void ServerRPCDiscardWeapon(int32 InSlot);
	void ServerRPCDiscardItem(int32 InItemID, int32 InItemNum);
	void ServerRequestStartResurrect(class ADeathTreasureBox* TargetDeathBox);
	void ServerRequestCancelResurrect();
	void ServerPlayTreatmentCancelSound();
	void ServerPickUpWeapon(class AActor* Actor, bool bIsAutoPickup, const struct FVector& ClientCharPos, const struct FVector& ClientItemPos);
	void ServerPickUpTreasureItem(class ASolarTreasureBoxActor* TreasureBox, int64 ItemThisID, bool bIsAutoPickup, int32 TargetIndex, const struct FVector& ClientCharPos, const struct FVector& ClientItemPos);
	void ServerPickUpItem(class ASolarItemActor* ItemActor, bool bIsAutoPickup, int32 TargetIndex, const struct FVector& ClientCharPos, const struct FVector& ClientItemPos);
	void ServerPerformShieldUpgradeInteract(class ASolarShieldUpgradeItemShop* InShop);
	void ServerOpenAirDropTreasureBox(class AAirDropTreasureBox* InAirDropTreasureBox);
	void ServerOnDestructActor(class ASolarDestructibleActor* DestructibleActor, class ASolarVehiclePawn* VehiclePawn, float SpeedDifference, const struct FVector& Impulse, const struct FVector& ImpactPoint);
	void ServerMoveNoBaseEx(float Timestamp, const struct FVector_NetQuantize10& InAccel, const struct FVector_NetQuantize100& ClientLoc, uint8 CompressedMoveFlags, uint8 ClientRoll, uint32 View, uint8 ClientMovementMode, uint32 ClientCustomMoveData);
	void ServerMoveDualNoBaseEx(float TimeStamp0, const struct FVector_NetQuantize10& InAccel0, uint8 PendingFlags, uint32 View0, float Timestamp, const struct FVector_NetQuantize10& InAccel, const struct FVector_NetQuantize100& ClientLoc, uint8 NewFlags, uint8 ClientRoll, uint32 View, uint8 ClientMovementMode, uint32 ClientCustomMoveData);
	void ServerKillMe(enum class ESCMDamageType DamageType);
	void ServerInitSheildComp(int32 InShiledID);
	void ServerHideShieldOperator();
	void ServerGMVehicleSubHealth(int32 SubHealth);
	void ServerGetOnVehicle(float LocalTime, class ASolarVehiclePawn* InVehicle, int32 SeatIndex);
	void ServerGetOffVehicleEjectedByDefaultParams(bool bNeedNotify, struct FVector_NetQuantizeNormal& EjectDirection);
	void ServerGetOffVehicleEjected(bool bNeedNotify, struct FVector_NetQuantizeNormal& EjectDirection, struct FVehicleEjectParams& Params);
	void ServerGetOffVehicle(bool bNeedNotify);
	void ServerDetectBlock();
	void ServerConsumeExtraEnergy(float InAmount, enum class EEnergyUsage InUsage);
	void ServerConsumeEnergy(float InAmount, enum class EEnergyUsage InUsage);
	void ServerClearJetModule();
	void ServerClearEnergyState(enum class EEnergyState State);
	void ServerChangeRechargeState(bool bRecharge, bool bUseBigRecharger);
	void ServerCancelVehicleAbility(uint8 AbilityIndex);
	void ServerCancelVault(float InAnimPosition, const struct FVector& InLandLocation);
	void ServerCancelRescue();
	void ServerCancelOpenAirDropTreasureBox(class AAirDropTreasureBox* InAirDropTreasureBox);
	void ServerCancelMeleeWarp();
	void ServerBackpackGM(enum class EGmType InGmType, int32 InItemID, int32 InItemNum, int32 InSlot);
	void ServerAskForActiveAbilityInfosToRestoreOnReconnected();
	void ServerApplyVehicleAbility(uint8 AbilityIndex);
	void ServerAddVehicleTime(float InAddTime);
	void RoleAbilityForbiddenAbilityTagCallback(const struct FGameplayTag& Tag, int32 NewCount, uint8 AbilityIndex);
	void RoleAbilityEndedCallBack(class UGameplayAbility* InAbility);
	void RoleAbilityCoolDownTagCallback(const struct FGameplayTag& Tag, int32 NewCount, uint8 AbilityIndex);
	void RoleAbilityCoolDownResetCallback(const struct FGameplayTag& Tag, int32 NewCount, uint8 AbilityIndex);
	void RoleAbilityCommittedCallBack(class UGameplayAbility* InAbility);
	void RoleAbilityActiveCallBack(class UGameplayAbility* InAbility);
	void ReturnMostValuableItemIDServer(uint8 TeammatePosInTeam, int64 ItemThisID);
	void ResponseChosenMark();
	void RequestUseBackpackItemServer(int32 InItemID, int32 InItemNum);
	void RequestToStopVehicleRepairing();
	void RequestToStartVehicleRepairing(class ASolarVehiclePawn* InVehicle);
	void RequestPlayShieldSound(struct FShieldSoundData* ShieldSound, bool bIsOnly1P);
	void RequestDisplayAllElectricShops();
	void RequestCancelRescue();
	void RemoveTreasureBoxOperator();
	void RemoveTempComponent(class UPrimitiveComponent* TargetComp);
	void RemoveTempAttributeModifies(int32 AttributeID, bool bCumulOrFact, class FName Tag);
	void RemoveShieldUpgradeOperator();
	void RemoveShieldRepairEffectItem();
	void RemoveShieldOperator();
	void RefreshWeaponDataMapAndArray();
	void RefreshTypeItemMapAndArray();
	void RefreshTeammateHUDUI(class ASolarPlayerState* SelfData);
	void RefreshRenderConsoleVarForSkydive();
	void RefreshMaxPileMapAndArray();
	void RefreshIdItemMapAndArray();
	void ReceiveUpdateSkydiveLandingEffects(float DistanceToGround);
	void ReceiveUpdateSkydiveFlyingEffects(float FallingRate);
	void ReceivePlaySkydiveLandingEndEffects(bool bIsInWater);
	void ReceivedOnShieldIdChanged(int32 LastShieldId);
	void ReceiveAfterTakeDamageResolve(float Damage, struct FSolarPointDamageEvent& DamageEvent, class ASCMPlayerState* EventInstigator, class AActor* DamageCauser);
	void QuitVehicleWholeShield();
	void QuitVehicleStealth();
	void PurchaseEShopItemsResponse(int32 InProductID, bool bSuccess, class ASolarElectricShop* InTargetShop);
	void PostNotEnoughEnergyNotice();
	void PlaySquatSound();
	void PlaySpeedUpEffect(bool bIsUp);
	void PlayShieldSoundByType(enum class EShieldSoundType ShieldSoundType);
	void PlayParachuteStartSound();
	void PlayMontageOnOrnament(const struct FGameplayTag& OrnamentTag, class UAnimMontage* MontageToPlay);
	void PlayerStateReplicatedForHUD();
	void OnVaultInput();
	void OnUsingSkillStatusChanged(const struct FGameplayTag& Tag, int32 NewCount);
	void OnUpdateShieldId();
	void OnUIDurationGameplayEffectRemoved(struct FActiveGameplayEffect& ActiveGameplayEffect);
	void OnUIDurationGameplayEffectApplied(class UAbilitySystemComponent* ASC, struct FGameplayEffectSpec& InGameplayEffectSpec, const struct FActiveGameplayEffectHandle& InGameplayEffectHandle);
	void OnUAVSpawnRelatedTagChange(const struct FGameplayTag& Tag, int32 NewCount);
	void OnTeamIDChange();
	void OnTakeDamage__DelegateSignature(class ASolarCharacter* Character, struct FSolarPointDamageEvent& DamageEvent, float HPDamage);
	void OnStartResurrectProgress(int32 InTextId, float InDuration, float InRemaining, bool bShowCancel);
	void OnSpawnExpItem();
	void OnSkydiveTraced__DelegateSignature(struct FHitResult& HitResult);
	void OnSkydiveStageChanged(enum class ESkydiveStage LastStage, enum class ESkydiveStage CurrentStage);
	void OnShowShieldHUD__DelegateSignature(bool bIsShowShieldHUD);
	bool OnShouldTakeDamage(float Damage, struct FSolarPointDamageEvent& DamageEvent, class ASCMPlayerState* EventInstigator, class AActor* DamageCauser);
	void OnShieldValueLowDelegate__DelegateSignature(bool bIsShieldValueLow);
	void OnShieldValueChanged__DelegateSignature(enum class EShieldWidgetState WidgetState, float CurValue, float ChangeValue, enum class EShieldRechargeState ShieldRechargeState, bool bFixPreAdd);
	void OnShieldRechargeStart();
	void OnShieldRechargeProgressBarComplete();
	void OnShieldRechargeProgressBarCancel();
	void OnShieldRechargeEnd();
	void OnShieldIDChangedDelegate__DelegateSignature(bool bShiledAvailable, float CurValue, float MaxValue, int32 QualityColor, bool bIsAdvancedShield);
	void OnSheildUpFXDelegate__DelegateSignature();
	void OnSheildRechargeDelegate__DelegateSignature();
	void OnSheildBreakDelegate__DelegateSignature();
	void OnReplayCameraModeChanged(enum class EReplayCameraMode OldMode, enum class EReplayCameraMode CurMode);
	void OnRepItemWeaponParts();
	void OnRepIgnoreScopeSlots();
	void OnRep_WeaponSystemVehicle();
	void OnRep_WeaponSystemComponentChanged();
	void OnRep_WeaponDataMap();
	void OnRep_VJetPackModuleID();
	void OnRep_TypeKeyItemArrayChange();
	void OnRep_TreatmentState(enum class ESolarTreatmentState LastState);
	void OnRep_TreatmentCount(int32 LastCount);
	void OnRep_SettingEnergyCostChanged();
	void OnRep_RoleAbilityStartCDServerTime();
	void OnRep_RoleAbilitySpecHandles();
	void OnRep_ReviveItemCleared();
	void OnRep_RescueState();
	void OnRep_RescuedStartTime(float LastRescuedStartTime);
	void OnRep_PlayBodyHitSound(int32 LastBodyHitSoundCount);
	void OnRep_PlayBodyHitByPunchSound(int32 LastBodyHitByPunchSoundCount);
	void OnRep_PendingRegeneration();
	void OnRep_OutVehicleShotState();
	void OnRep_OrnamentMontageInfo(const struct FOrnamentMontageInfo& LastInfo);
	void OnRep_MaxPileArrayChange();
	void OnRep_MaxExtraEnergyChanged();
	void OnRep_JetPropellingInfo();
	void OnRep_IsDeathVerge();
	void OnRep_IdKeyItemArrayChange();
	void OnRep_HJetPackModuleID();
	void OnRep_ForceParachuteCountDown();
	void OnRep_ExtraEnergyModuleIDChanged();
	void OnRep_EnergyStateChanged();
	void OnRep_EnableCruising();
	void OnRep_DiedTime();
	void OnRep_CurUniqueShieldId();
	void OnRep_CurrShieldValue(float PreviousValue);
	void OnRep_CurrShieldState(enum class EShieldState LastState);
	void OnRep_CurrShieldId(int32 InLastShieldId);
	void OnRep_CurrentSkydiveStage(enum class ESkydiveStage LastStage);
	void OnRep_CurrentSkillAnimType();
	void OnRep_CurrentEnergyChanged(float LastEnergyValue);
	void OnRep_CurChargingDeathBoxChanged(class ADeathTreasureBox* PreBox);
	void OnRep_CruiseState();
	void OnRep_CharacterCapsuleSizeOverride();
	void OnRep_CapsuleID();
	void OnRep_BackpackPropellingMode();
	void OnRep_AssignedCharacterID();
	void OnRep_ActiveInfiniteAmmo();
	void OnRep_ActiveEMP();
	void OnPlayingScrubCharactersCreated();
	void OnPlayerKilled(class ASCMPlayerState* KillerPlayer, struct FSolarPointDamageEvent* InDamageEvent, class AActor* InDamageCauser);
	void OnPlayerKill(class ASCMPlayerState* KilledPlayer, struct FSolarPointDamageEvent* InDamageEvent, class AActor* InDamageCauser);
	void OnPlayerDataRepAsPlayer(uint8 TeamID);
	void OnPlayerBackpackEnergyUpdate();
	void OnPickupSettingChanged();
	void OnOwnTeammateHUDCreated(class ASolarPlayerState* SelfData);
	void OnOutVehicleStateChanged();
	void OnMaxEnergyUpdateEvent__DelegateSignature(float InMaxValue);
	void OnLocalPlayerSpectateTargetChanged(class ASolarPlayerState* OldTarget, class ASolarSpectateInfo* LocalPlayerSpectateInfo);
	void OnLocalPlayerSpectateMeStatusChanged__DelegateSignature(class ASolarCharacter* Character, bool bIsSpectating);
	void OnLevelSequence_PlayAirborneJumpSound();
	void OnJogSetClient__DelegateSignature(bool bSet);
	void OnHUDTeamPosSet__DelegateSignature(uint8 PosInTeam);
	void OnHUDRescueBtnActivitySet__DelegateSignature(bool bIsActive);
	void OnHUDNickNameSet__DelegateSignature(const class FString& NickName);
	void OnHUDDistanceSet__DelegateSignature(float Distance);
	void OnHUDDistanceDisplaySet__DelegateSignature(bool bShown);
	void OnHealthUpdated__DelegateSignature(class ASolarCharacter* Character);
	bool OnExitOpenTreasureBox();
	bool OnEnterOpenTreasureBox();
	void OnEnterCombat(enum class EEnterBattleType battleType);
	void OnEnergyStateUpdateEvent__DelegateSignature(uint8 InEnergyState);
	void OnDrivingStateChanged(class ASolarVehiclePawn* SolarVehicle, enum class EDriveState NewDriveState, enum class EDriveState OldDriveState, int32 NewSeatIndex, int32 OldSeatIndex);
	void OnDetectRadarStation(bool bEnter, class ASolarRadarStation* InRadarStation);
	void OnDetectElectricShop(bool bEnter, class ASolarElectricShop* InElectricShop);
	void OnCurShieldValueChangedDelegate__DelegateSignature(enum class EShieldWidgetState WidgetState, float InCurValue, float InChangeValue, const class FString& InSolarPlayerID);
	void OnCurEnergyUpdateEvent__DelegateSignature(float InCurValue, float InChangeValue);
	void OnConsumableNumChangedEvent__DelegateSignature();
	void OnClientMovementComponentEnabled();
	void OnChargeInfoUpdateEvent__DelegateSignature(class ASolarCharacter* OwnerCharacter, float ChargeFrequency, float ChargeQuantity);
	void OnCharacterSpawnDeathBox(bool bCheat, bool bKilledByTeammate, int32 InExpItemCount, int32 InMaxSheildMatCount, class ASolarPlayerState* InKillerPS);
	void OnCharacterSkinReset__DelegateSignature();
	void OnCharacterDeathEnd();
	void OnCharacterDaraSet__DelegateSignature(int32 DataID);
	void OnCancelResurrectProgress(int32 InTextId);
	void OnBatteryIdUpdateEvent__DelegateSignature(int32 InBatteryId);
	void OnBackpackWeaponPartUpdateEvent__DelegateSignature();
	void OnBackpackItemUpdateEvent__DelegateSignature();
	void OnBackpackEquipUpdateEvent__DelegateSignature();
	void OnBackpackEnergyUpdateEvent__DelegateSignature();
	void OnApplyDyingDamage(float DeltaTime);
	void NotifyLeaveSafeArea();
	void NotifyEnterSafeArea();
	void NetTriggerRadarStation();
	bool NetGetOnVehicle(class ASolarVehiclePawn* InVehicle, int32 SeatIndex);
	bool NetGetOffVehicle(bool bShouldEject, bool bNeedNotify);
	void MultiSetGetOffVehicleLocationAndRotation(struct FVector& DropLocation, float TeleportRotYaw);
	void MultiResetCharacter(struct FVector& Location, struct FRotator& Rotation, bool bClearWeapons);
	void MultiOnRebirth();
	void MulticastPlayDuckRollingHitCharacterEffect(class ASolarCharacter* TargetCharacter, struct FVector& HitLocation, bool bNoDamage);
	void MarkWarningOnWorld();
	void MarkQuickChatOnWorld(const class FString& IconImg);
	void MarkPointOnWorld();
	void MarkItemInPickupList(struct FVector& ItemLocation, struct FSolarItemData& ItemData);
	void K2_SetCanShowBattlePrompt(bool NewValue);
	void K2_RemoveGameplayTag(const struct FGameplayTag& Tag, bool bReplicated);
	void K2_PlaySoundGroup(class FName GroupName, const struct FSoundGroupPlayContext& Context);
	bool K2_IsSwimming();
	bool K2_IsInAir();
	bool K2_HasMatchingGameplayTag(const struct FGameplayTag& Tag);
	class UWidgetComponent* K2_GetTeamHUDComp();
	class AHUD* K2_GetControlledHUD();
	void K2_AddGameplayTag(const struct FGameplayTag& Tag, bool bReplicated);
	bool IsWeaponsAvailable();
	bool IsWeaponCauseTeamDamage();
	bool IsViewportFocused();
	bool IsVerticalJetFlying();
	bool IsVehicleFire();
	bool IsTeammateWithLocalOrSpecTargetPlayer(bool bIncludingSelf);
	bool IsTeammateWith(class ASolarCharacter* Other);
	bool IsTeamHUDValid();
	bool IsSprinting();
	bool IsSpectatingOtherPlayer();
	bool IsSkyCharging();
	bool IsShieldValueLow();
	bool IsShieldMaxLevel();
	bool IsShieldFullyCharged();
	bool IsScopeOpening();
	bool IsRescuing();
	bool IsReplayPlaying();
	bool IsReloading();
	bool IsRechargerEnough();
	bool IsPlayerLocallyControlledOrSpectated();
	bool IsPileCharging();
	bool IsOwnerOffline();
	bool IsOpeningTreasureBox();
	bool IsNoCharging();
	bool IsMovingOnGround(enum class EVelocityStatus VelocityStatus);
	bool IsMeleeAttacking();
	bool IsMaxLevelInGame();
	bool IsLocalPlayerSpectateAsThirdPerson();
	bool IsLaunching();
	bool IsJumping();
	bool IsJetFlying();
	bool IsInVehicle();
	bool IsInSkywardDive();
	bool IsInsideVehicle();
	bool IsInShoulderOrScopeView();
	bool IsInScopeView();
	bool IsInRescueState();
	bool IsInMassInvisibilityPrepare();
	bool IsInMassInvisibility();
	bool IsInInvisibleStatus();
	bool IsInDeathVerge();
	bool IsHumanCharacter();
	bool IsHorizontalJetFlying();
	bool IsHoldingWeapon();
	bool IsFullHealth();
	bool IsFullBodyMeleeAttacking();
	bool IsFiring();
	bool IsExistWeaponSeatedVehicleSeat();
	bool IsEnergyCostAndChargeDisabled();
	bool IsE2M();
	bool IsDying();
	bool IsDoingAnyAttack();
	bool IsCruising();
	bool IsClimbing(bool bIncludeWallRun);
	bool IsCharacterDebugBlockDetectionEnabled();
	bool IsCanShowTeammateHUD();
	bool IsBoxCharging();
	bool IsBolting();
	bool IsBigRechargerEnough();
	bool IsBeingSpectated();
	bool IsBeingRescue();
	bool IsAllEnergyFull();
	bool IsAiming();
	bool IsAbleToContinueRecharge();
	void InputRoleAbilityTacticalReleased();
	void InputRoleAbilityTacticalPressed();
	void InputRoleAbilitySuperReleased();
	void InputRoleAbilitySuperPressed();
	void InputCancelRoleAbility();
	void InitShieldUpgradeMatMaxPile();
	void InitShieldPropertyByConfig();
	void InitShieldOperatorTimeline();
	void InitializeCharacterData(int32 InCharacterId, int32 InSkinID);
	void InitGameStatisticEquipment();
	void InitCharacterDefaultShield(struct FSolarItemData& InShiledID);
	void IncreaseRechargedTimes();
	void HideShieldUpgradeOperator();
	void HideShieldRepairEffectItem();
	void HideShieldOperator();
	void HideRescueInjector();
	bool HasBlockBetweenUs(class AActor* A, class AActor* B, bool bIsVehicle, bool bShowLog);
	bool HasAnyShieldEquiped();
	bool HasAnyRecharger();
	bool HandleDying(enum class EHealthChangeType ChangeType, class AController* InstigatorController);
	TMap<enum class EWeaponPartType, int32> GetWeaponPartsMap();
	TArray<int32> GetWeaponPartsArray();
	bool GetWeaponItemDataBySlot(int32 InSlot, struct FSolarItemData* ItemData);
	TMap<int32, struct FSolarItemData> GetWeaponDataMap();
	int32 GetVerticalJetFlyTotalTimes();
	int32 GetVerticalJetFlyRestTimes();
	void GetVerticalJetFlyCharging(float* OutValue, float* OutPercent);
	void GetVerticalJetFlyCD(float* OutValue, float* OutPercent);
	class ASolarVehicleWeapon* GetVehicleWeapon();
	uint8 GetVehicleAbilityCounter();
	TMap<enum class EItemType, struct FSolarItemData> GetTypeKeyItemMap();
	float GetTreatmentRemaining();
	float GetTreatmentDuration();
	void GetTeamHUDTranslucentData(float* CheckDistance, float* TranslucentValue);
	class UUserWidget* GetTeamHUD();
	class ASolarSpectateInfo* GetSpectateInfo();
	class UAnimInstance* GetSpecAnimInstance(enum class ESpecAnimInstType SpecAnimType);
	class ASolarReplayPlayerController* GetSolarReplayPlayerController();
	class ASolarPlayerState* GetSolarPlayerState();
	class FString GetSolarPlayerID();
	class ASolarPlayerController* GetSolarPlayerController(bool bSkipPossessCheck);
	class USolarCharacterMovementComponent* GetSolarCharacterMovementComponent();
	class ASolarBotAIController* GetSolarAIController();
	class USolarAbilitySystemComponent* GetSolarAbilitySystemComponentSimple();
	struct FVector GetSocketLocationAtPrimaryMesh(class FName& InSocketName);
	float GetSkydiveLandingHeight();
	class UCharacterSkinConfig* GetSkinConfig(int32 InSkinID);
	int32 GetShieldWorthByID(int32 InShieldID);
	int32 GetShieldUpgradeNeedMatNum();
	int32 GetShieldUpgradeMatNum();
	int32 GetShieldUpgradeMatMaxPile();
	float GetShieldRecoveryAmount();
	float GetShieldRechargeRemainningTime();
	float GetShieldRechargeDuration();
	int32 GetShieldMaxLevel();
	class USolarCharacterMovementComponent* GetSafeSolarCharacterMovement();
	enum class ERoleSkillStatus GetRoleAbilityState(uint8 RoleAbilityIndex);
	class ASolarUAVRescue* GetRescuingUAV();
	class ASolarCharacter* GetRescuingCharacter();
	float GetRescueTime();
	float GetRecoveryDuartionModify();
	float GetRecoveryAmountModify();
	class ASolarUAVRescue* GetPermanentRescueUAV();
	struct FRotator GetNormalizeCameraRotation();
	bool GetNewItemData(int32 InItemID, int32 InItemNum, struct FSolarItemData* OutItemData);
	uint8 GetMyTeamID();
	float GetMaxShieldValue();
	float GetMaxExtraEnergy();
	float GetMaxEnergy();
	class ASolarPlayerState* GetLastDownBy();
	int32 GetJetPackModuleLevel(bool bVertical);
	int32 GetItemNumById(int32 InItemID);
	int32 GetItemMaxPile(int32 InItemID);
	bool GetItemDataByType(enum class EItemType ItemType, struct FSolarItemData* ItemData);
	bool GetItemDataById(int32 InItemID, struct FSolarItemData* ItemData);
	bool GetIsActiveEMP();
	struct FVector GetInputVector();
	TMap<int32, struct FSolarItemData> GetIdKeyItemMap();
	int32 GetHorizontalJetFlyTotalTimes();
	int32 GetHorizontalJetFlyRestTimes();
	void GetHorizontalJetFlyCharging(float* OutValue, float* OutPercent);
	void GetHorizontalJetFlyCD(float* OutValue, float* OutPercent);
	int32 GetGenericSkillLevel();
	float GetFactorialAttributeModifies(int32 AttributeID);
	int32 GetExtraEnergyModuleID();
	float GetEnergyConsumptionModify();
	enum class EDriveState GetDriveState();
	class AActor* GetDamagerCauserActor();
	float GetCurrShieldValue();
	int32 GetCurrShieldID();
	float GetCurrExtraEnergy();
	class ASolarPlayerWeapon* GetCurrentWeapon();
	enum class EWalkMode GetCurrentWalkMode();
	float GetCurrentVehicleAbilityCooldownRemaining(uint8 AbilityIndex);
	float GetCurrentVehicleAbilityCooldownDuration(uint8 AbilityIndex);
	int32 GetCurrentShieldLevel();
	enum class ECustomJumpType GetCurrentCustomJumpType();
	float GetCurrEnergy();
	float GetCumulativeAttributeModifies(int32 AttributeID);
	class APlayerController* GetControllingOrReplayController();
	class UStaticMesh* GetClipMeshOfHoldingWeapon();
	int32 GetClassTypeSkillLevel();
	void GetChargingStateForUI(bool* IsSky, bool* IsPile, bool* IsBox, bool* IsE2M);
	struct FRotator GetCharacterLookAt();
	bool GetCanShowBattlePrompt();
	struct FRotator GetCameraRotation();
	struct FVector GetCameraLocation();
	void GetAllSkydiveLandingEffects(TArray<class UParticleSystemComponent*>* OutEffects);
	void GetAllSkydiveFlyingEffects(TArray<class UParticleSystemComponent*>* OutEffects);
	void GatheringDeathBoxItem(bool bCheat, bool bKilledByTeammate, int32 InExpItemCount, int32 InMaxSheildMatCount);
	void GameStatisticsWeaponHit(class ASolarCharacterBase* DamageCauserCharacter, struct FSolarPointDamageEvent& DamageInfo, float ActualDamage);
	void GameStatisticsVehicleLanded(struct FHitResult& Hit);
	void GameStatisticsVehicleInAir();
	void GameStatisticsVehicleHit(class AActor* DamageCauser, float HitDamage);
	void GameStatisticsItemChange(int32 ItemID, enum class EItemChangeType PickType, int32 OldNum, int32 NewNum, int32 TriggerType);
	void GameStatisticsGodWeapon();
	void GameStatisticsGetOnVehicleReason(int32 Type, const class FString& Type_Parameter);
	void GameStatisticsGetOffVehicleReason(class ASolarWeapon* CurrentWeapon, const class FString& Param);
	void GameStatisticsEquipment();
	void GameStatisticsElectricShopActivated(struct FVector& InLocation);
	void GameStatisticsDamageReason(struct FSolarPointDamageEvent& InDamageEvent, float ActualDamage);
	void GameStatisticsCharacterSkill(bool bIsSuperSkill);
	void GameStatisticsBackpackFly(struct FBackpackStatisticsInfo& InBackpackStatisticsInfo);
	void ForceBreakSprintState();
	void FindMostValuableItemClient(TArray<struct FSolarItemData>& ItemData, uint8 FromWhichTeammate);
	void ExitDyingMovement();
	void ExitDeathVerge(bool bClientSimulation);
	void ExecuteGM(const class FString& GMType, const class FString& Param1, const class FString& Param2);
	void EnterVehicleWholeShield(class UMaterialInterface* ShieldMaterialSource);
	void EnterVehicleStealth();
	void EnterDyingMovement();
	void EnterDeathVerge(bool bClientSimulation);
	void EnableCharacterDebugInfo_BlockDetection(bool bEnabled);
	void DoReceivingPoisonDamage();
	void DoOperation(enum class ECharacterOperation OperationType, class UObject* Target);
	void DisCardShield();
	void CreateTreasureBoxOperator();
	void CreateShieldUpgradeOperator();
	void CreateShieldRepairEffectItem();
	void CreateShieldOperator();
	class UWidgetComponent* CreateOwnTeammateHUDInternal(class ASolarPlayerState* SelfData);
	class UWidgetComponent* CreateOwnTeammateHUD();
	void ClientUpdateTracking(int32 Mode, int32 Index, struct FVector& Location);
	void ClientSuperRadarOnceScanned(int32 ScannedNum);
	void ClientStartRecharge(float InCurrentValue, float InRecoveryDuration, float InRecoveryAmount, enum class EShieldRechargeState ShieldRechargeType, int32 InShieldContributorCharacterId, bool bFixPreAdd);
	void ClientSetServerBlockDetectionResult(const class FString& Info);
	void ClientRPCDisplayAllElectricShops(TArray<struct FVector>& AllPositions);
	void ClientRestoreActiveAbilitiesOnReconnected(TArray<struct FRestoreAbilityInfo>& SpecHandles);
	void ClientReceiveVehicleWeaponMessageArray(TArray<struct FPlayerWeaponMsg>& InPlayerWeaponMessageArray);
	void ClientReceiveVehicleWeaponMessage(struct FPlayerWeaponMsg& InPlayerWeaponMessage);
	void ClientReceiveScanResult(TArray<struct FScannedInfo_NetQuantize>& ScannedDatas, float& SpanTimer);
	void ClientReceiveCharacterWeaponMessageArray(TArray<struct FPlayerWeaponMsg>& InPlayerWeaponMessageArray);
	void ClientReceiveCharacterWeaponMessage(struct FPlayerWeaponMsg& InPlayerWeaponMessage);
	void ClientRadarOnceScanned(int32 ScannedNum);
	void ClientPlaySoundGroup(class FName& GroupName);
	void ClientPlayKillEffect(class ASolarWeapon* AttackerWeapon);
	void ClientPlayHitEffect(struct FHitResult& HitResult, TSubclassOf<class ASolarBullet> BulletClass, enum class ESolarHitType HitType, class APlayerController* Attacker, struct FVector& RelativeVector, float VFXScale, class ASolarWeapon* AttackerWeapon);
	void ClientOpenAirdropResponse(bool bIsOpening);
	void ClientOnTriggerCharacterDown();
	void ClientOnShieldUpgrade();
	void ClientOnReconnecting(struct FReconnectionParams& Params);
	void ClientOnContinuousTreatmentStarted();
	void ClientNotifyMarkedBySuperRadar(float InRadarLifeTime, struct FGameplayTag& InTag);
	void ClientNotifyMarkedByOnceScan(float InRadarLifeTime, struct FGameplayTag& InTag);
	void ClientNotifyGameProgressCondition(struct FGameplayTag& InProgressTag);
	void ClientNotifyCharacterExposed(float InRadarLifeTime, struct FGameplayTag& InTag);
	void ClientNoticePickup(int32 ItemID, int32 ItemQuality);
	void ClientLeaveFromSkywardDiveLauncher(class ASkywardDiveLauncher* InLauncher);
	void ClientKilledCharacter();
	void ClientHideShieldOperator();
	void ClientEnterAndRefreshSkywardDiveLauncher(class ASkywardDiveLauncher* InLauncher, bool bInHasAvailableDevice);
	void ClientCreateTreatEffect();
	void ClientCompleteRecharge(float InCurrentValue, float InChangeValue);
	void ClientCancelRecharge(bool BreakAnimOnly, float InCurrentValue, float InChangeValue, float MaxShieldVal, enum class EShieldCancelRechargeReason CancelReason);
	void ClientBroadcastCharacterRoleAbilityContinousEvent(float Duration, bool bAutoClose, uint8 RoleAbilityIndex);
	void ClientAddHitTrace(struct FHitTraceInfo& Info);
	void ClientAckValidShieldUpgradeInteract(class ASolarShieldUpgradeItemShop* InShop, enum class EShieldUpgradeInteractAckType AckReason);
	void ClearGameStatisticEquipment();
	void ClearDeathBoxData();
	float CheckSelfAltitudeInstantlyByTrace(struct FHitResult* HitGeography, bool bCheckEveryFrame, float TraceDistOverride, bool bSimpleCheck);
	void ChangeSeatByIndex(int32 TargetSeatIndex);
	void ChangeSeatByDefault();
	void CGM_SpawnDeathBox();
	void CGM_EnterDeath();
	bool CanStickOutOfVehicle(bool bIgnoreSelfWeaponCheck);
	bool CanRebirth();
	bool CanOperateBackpack();
	bool CanMarkPointOnWorld();
	void CancelVehicleAbility();
	void CancelTreatment();
	void CalculateBubbleKillNum(TArray<class ASolarCharacter*>* InstigatorCharacters, class AActor* AttackWeapon);
	void BroadcastCharacterRoleAbilityContinousEvent(float Duration, bool bAutoClose, uint8 RoleAbilityIndex);
	void BreakRechargeShield();
	void BindUpdateHUDToOnHealthUpdateDelegateProc(class ASolarCharacter* Character);
	void BindLocalPlayerSpectateDelegates(class ASolarSpectateInfo* LocalSpecInfo);
	void BindActorToSelfTeam(class AActor* Actor);
	void BeginplayPending__DelegateSignature();
	void BeginPlayBlueprint();
	void AutoMarkItemForTeammateClient(int64 ItemThisID);
	void ApplyVehicleAbility(uint8 AbilityIndex);
	void AfterTakeDamageResolve(float Damage, struct FSolarPointDamageEvent& DamageEvent, class ASCMPlayerState* EventInstigator, class AActor* DamageCauser);
	void AfterDealDamageResolve(float Damage, struct FSolarPointDamageEvent& DamageEvent, class ASCMPlayerState* EventInstigator, class AActor* DamageCauser);
	void AddTrackingTarget(class ASolarCharacterBase* Tracked);
	void AddTempAttributeModifies(int32 AttributeID, bool bCumulOrFact, class FName Tag, float Value);
	void AddDebugString(const class FString& DebugString);
	void AddCurrExtraEnergyValue(float DeltaEnergy);
};

// 0x0 (0x2090 - 0x2090)
// Class Solarland.SCMCharacter
class ASCMCharacter : public ASolarCharacter
{
public:

	static class UClass* StaticClass();
	static class ASCMCharacter* GetDefaultObj();

};

// 0x48 (0x78 - 0x30)
// Class Solarland.SCMLoadLevelAction
class USCMLoadLevelAction : public UBlueprintAsyncActionBase
{
public:
	uint8                                        Pad_2345[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnElementLoadComplete;                             // 0x58(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnLoadComplete;                                    // 0x68(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class USCMLoadLevelAction* GetDefaultObj();

	class USCMLoadLevelAction* LoadLevel(class UObject* WorldContextObject, const class FString& LevelName, TArray<class FString>& Elements);
	void HandleLoadComplete();
};

// 0x28 (0x58 - 0x30)
// Class Solarland.SCMLoadElementAction
class USCMLoadElementAction : public UBlueprintAsyncActionBase
{
public:
	uint8                                        Pad_2346[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnElementLoadComplete;                             // 0x48(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class USCMLoadElementAction* GetDefaultObj();

	class USCMLoadElementAction* LoadElementLevel(class UObject* WorldContextObject, TArray<class FString>& Elements);
	void HandleElementLoadComplete();
};

// 0x28 (0x58 - 0x30)
// Class Solarland.SCMUnLoadElementAction
class USCMUnLoadElementAction : public UBlueprintAsyncActionBase
{
public:
	uint8                                        Pad_2347[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnElementUnLoadComplete;                           // 0x48(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class USCMUnLoadElementAction* GetDefaultObj();

	class USCMUnLoadElementAction* UnLoadElementLevel(class UObject* WorldContextObject, TArray<class FString>& Elements);
	void HandleElementUnLoadComplete();
};

// 0x58 (0x280 - 0x228)
// Class Solarland.SCMMapElementBase
class ASCMMapElementBase : public AActor
{
public:
	bool                                         bPersistent;                                       // 0x228(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2348[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                Side;                                              // 0x230(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Job;                                               // 0x240(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                ElementID;                                         // 0x250(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ESCMMapElementType                Type;                                              // 0x260(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ESCMMapElementStateType           State;                                             // 0x261(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ESCMMapElementVisibilityType      Visibility;                                        // 0x262(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2349[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class USCMMapElementRPCComponent> MapElementRPCComponentClass;                       // 0x268(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ElementName;                                       // 0x270(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bUseSceneActorOptimization;                        // 0x278(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_234A[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASCMMapElementBase* GetDefaultObj();

	enum class ESCMMapElementVisibilityType SetElementVisibility(enum class ESCMMapElementVisibilityType NewType);
	enum class ESCMMapElementStateType SetElementState(enum class ESCMMapElementStateType NewState);
	void OnRep_ElementVisibility();
	void OnRep_ElementState();
	void OnElementVisibilityChanged(enum class ESCMMapElementVisibilityType CurrentVisibility);
	void OnElementStateChanged(enum class ESCMMapElementStateType CurrentState);
};

// 0x0 (0xB0 - 0xB0)
// Class Solarland.SCMMapElementRPCComponent
class USCMMapElementRPCComponent : public UActorComponent
{
public:

	static class UClass* StaticClass();
	static class USCMMapElementRPCComponent* GetDefaultObj();

};

// 0x30 (0x60 - 0x30)
// Class Solarland.SCMMatchChannelAction
class USCMMatchChannelAction : public UBlueprintAsyncActionBase
{
public:
	uint8                                        Pad_234E[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UObject*                               WorldContextObject;                                // 0x48(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	FMulticastInlineDelegateProperty_            OnMatchChannelChange;                              // 0x50(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class USCMMatchChannelAction* GetDefaultObj();

	class USCMMatchChannelAction* OpenMatchChannel(class UObject* WorldContextObject, enum class EMatchType MatchType, TArray<int32>& PlayerStructure, int32 MaxMatchTime);
	void HandleMatchChannelChange(bool InMatchResult, int32 RPCID);
};

// 0x8F8 (0xEA0 - 0x5A8)
// Class Solarland.SolarPlayerController
class ASolarPlayerController : public APlayerController
{
public:
	uint8                                        Pad_239A[0x40];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnPawnReplicated;                                  // 0x5E8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnPlayerStateRepDelegate;                          // 0x5F8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnCatchInputActionDelegate;                        // 0x608(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnEnterLandingDelegate;                            // 0x618(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnNotifiedMarkedItemWasPickedUpDelegate;           // 0x628(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class USolarInputManager*                    InputManager;                                      // 0x638(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_239B[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAiPalComponent*                       AiPalComponent;                                    // 0x648(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarEasyAntiCheatComponent*          AntiCheatComponent;                                // 0x650(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnHUDSpawnedDelegate;                              // 0x658(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_239C[0xF0];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class USolarInputModePolicyComponent*        SolarInputModePolicyComponent;                     // 0x758(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class USolarInputActionContext*>      InputActionContextArray;                           // 0x760(0x10)(ZeroConstructor, Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_239D[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector2D                             InputMovementVector;                               // 0x778(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        InputRotatePitch;                                  // 0x780(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_239E[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ActionWheelHoldDownTime;                           // 0x790(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_239F[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        WorldMarkMessageDelayTime;                         // 0x7A4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WarningMarkRadius;                                 // 0x7A8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PingHoldDownTime;                                  // 0x7AC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VoiceWheelMouseMoveRatio;                          // 0x7B0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WheelRadius;                                       // 0x7B4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CancelRadius;                                      // 0x7B8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OpenMarkWheelRadius;                               // 0x7BC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23A0[0x68];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UActorMarkBase*>                DeathBoxWorldMarks;                                // 0x828(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_23A1[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DeathBoxMarksRefreshInterval;                      // 0x83C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_23A2[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        MaxDeathBoxWorldMarkNumber;                        // 0x844(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UActorMarkBase>            DeathBoxMarkClass;                                 // 0x848(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_23A3[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class USolarCharacterSpringArmComponent> FollowArmClass;                                    // 0x878(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class USolarCharacterCameraComponent> FollowCameraClass;                                 // 0x880(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FreeLookSmoothSpeed;                               // 0x888(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23A4[0x1C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class USolarCharacterSpringArmComponent*     FollowArm;                                         // 0x8A8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USolarCharacterCameraComponent*        FollowCamera;                                      // 0x8B0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_23A5[0xA8];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                PlayerId;                                          // 0x960(0x10)(Net, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23A6[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        VehicleInteractionDistance;                        // 0x988(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23A7[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class ASolarVehiclePawn*>             InteractingVehicles;                               // 0x990(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ASolarVehiclePawn*                     BestInteractingVehicle;                            // 0x9A0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23A8[0x68];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnTeammateHUDDodgeSet;                             // 0xA10(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMap<class ASolarCharacter*, int32>          TeammateCandidates;                                // 0xA20(0x50)(BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	bool                                         bIsAlreadyParachuted;                              // 0xA70(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23A9[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FGameplayHitInfo>              WeaponMessageArray;                                // 0xA78(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_23AA[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<TWeakObjectPtr<class AActor>>         UniqueActorArray;                                  // 0xAA0(0x10)(ZeroConstructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        HangUpTime;                                        // 0xAB0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23AB[0x1C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TWeakObjectPtr<class UUserWidget>            DamageTextWidget;                                  // 0xAD0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FSolarDamageText>              SameFrameDamageTextDataCache;                      // 0xAD8(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FTimerHandle                          SameFrameDamageTextDataHandle;                     // 0xAE8(0x8)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_23AC[0xA8];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnSpectateInfoRep;                                 // 0xB98(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_23AD[0x60];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSoftClassPath                        SwitchTargetCameraControlCompClass;                // 0xC08(0x18)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowCursorWhenSpectateOthers;                     // 0xC20(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23AE[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        SpectateNetCamUpdatePositionLimit;                 // 0xC24(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23AF[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class APlayerController*                     ScoutPlayerController;                             // 0xC30(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AActor*                                ScoutViewTarget;                                   // 0xC38(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarSwitchTargetCameraControlComp*   SolarSwitchTargetCameraControlComp;                // 0xC40(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_23B0[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<int32>                                UsableJetpacks;                                    // 0xC50(0x10)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<int32>                                UsableTailFlames;                                  // 0xC60(0x10)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<int32>                                AllCharacterSkins;                                 // 0xC70(0x10)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  PickUpExpItemSound;                                // 0xC80(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                CachedRechamberSound;                              // 0xC88(0x10)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_23B1[0x3C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  EMPScreenEffectName;                               // 0xCD4(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        AntiCheatUploadInterval;                           // 0xCDC(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFixedAntiCheatData                   FixedAntiCheatData;                                // 0xCE0(0x1C)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_23B2[0x84];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FString>                        CustomAntiCheatNames;                              // 0xD80(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                        CustomAntiCheatContents;                           // 0xD90(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23B3[0x100];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASolarPlayerController* GetDefaultObj();

	void WorldMarkWheelYAxis(float Movement);
	void WorldMarkWheelXAxis(float Movement);
	void WorldMarkDelayExecFunction();
	void UseMedicine();
	void UpdateEnableAiPalRate(int32 Rate);
	void UnMarkWorldInLevel(int64 InstanceID);
	void Turn(float Value);
	void TryRecordBattlePlayerData();
	void TryRechargeShield(bool bUseBigRecharger);
	void TriggerVoiceByType(enum class EPassiveTriggeredVoice VoiceType);
	void TriggerVoiceByNumber(int32 VoiceIndex);
	void ToggleEMPScreenEffect(bool bInVisible);
	void ToggleCursor();
	void TakeOverNextClientSetViewTargetBySwitchTargetComp(bool bRestartBlendEvenIfSameTarget);
	void SwtichVehicleSeatNotification();
	void SwitchWeaponByReverseOrder();
	void SwitchWeaponByOrder();
	void SwitchSpectatedCharacterInTeam(int32 PosInTeam);
	void SwitchInputBinding(class FName& InputName, enum class EInputSwitchType SwitchTpye);
	void StopSpectateCountdown();
	void StopRecordingAtDS();
	void StartSpectateCountdown(const struct FRepCountdownData& InCountdownData);
	void StartRecordingAtDS(const class FString& Filename, const class FString& UploadUrl, enum class ERecordingType ForceRecordingType);
	void SolarSlot(int32 ID);
	void SolarShowPanelUI(int32 Type);
	void SolarServerNetProfileStop();
	void SolarServerNetProfileStart();
	void SolarOpenUI(const class FString& UIID, int32 RootID);
	void SolarModule(int32 ID);
	void SolarISPC(const class FString& _str);
	void SolarGM_Weapon(const class FString& Type, const class FString& ParamOne, const class FString& ParamTwo);
	void SolarGM_UpdateTaskInfo();
	void SolarGM_TeleportToBotAIServer(uint32 CtrlIndex);
	void SolarGM_StopRecordingAtDS();
	void SolarGM_StopBotAIBehaviorTreeServer(bool bStop);
	void SolarGM_StartShrinkSafeArea();
	void SolarGM_StartRecordingAtDS(const class FString& Filename, const class FString& UploadUrl, enum class ERecordingType ForceRecordingType);
	void SolarGM_SpawnBotAIAtCrosshairByNumServer(int32 Num, int32 CharacterId, bool bAsTeammate, int32 DifficultyLevel);
	void SolarGM_SpawnBotAIAtCrosshair(int32 CharacterId, bool bAsTeammate, int32 DifficultyLevel);
	void SolarGM_SpawnAIAtCrosshairServer(int32 CharacterId, bool bAsTeammate, int32 DifficultyLevel);
	void SolarGM_ShowRedZoneDamage(bool IsShow);
	void SolarGM_ShowNotice(int32 NoticeId);
	void SolarGM_SetTeamID(int32 InTeamId);
	void SolarGM_SetStatDataForDebug();
	void SolarGM_SetSolarPlayerID(const class FString& InSolarPlayer);
	void SolarGM_SetReconnection(bool IsReconnection);
	void SolarGM_SetPlayerData(const class FString& InPlayerID);
	void SolarGM_SetGyroscopeTiltZThresholdSwitch(const class FString& bSwitch);
	void SolarGM_SetGyroscopeTiltZThreshold(float Value);
	void SolarGM_SetGyroscopeTiltYThreshold(float Value);
	void SolarGM_SetGyroscopeTiltFrameCount(float Value);
	void SolarGM_SetGyroscopeRotationRateYThreshold(float Value);
	void SolarGM_SetGyroscopeRotationRateXThreshold(float Value);
	void SolarGM_ServerStartShrinkSafeArea();
	void SolarGM_ServerShowRedZoneDamage(bool IsShow);
	void SolarGM_ServerSetTeamID(int32 InTeamId);
	void SolarGM_ServerSetStatDataForDebug();
	void SolarGM_ServerSetSolarPlayerID(const class FString& InSolarPlayer);
	void SolarGM_ServerSetReconnection(bool IsReconnection);
	void SolarGM_ServerSetPlayerData(const class FString& InPlayerID);
	void SolarGM_ServerMarkVehicleSpawnerInMap();
	void SolarGM_ServerDumpAllPlayer();
	void SolarGM_ServerDebugOffline();
	void SolarGM_ServerConsoleCommand(const class FString& InConsoleCommand);
	void SolarGM_ServerClosePoisonDamage(bool IsClose);
	void SolarGM_ServerChangeDayLight(int32 ID);
	void SolarGM_ResetZoneBombsFire();
	void SolarGM_RedZoneServer(int32 ZoneId);
	void SolarGM_RedZone(int32 ZoneId);
	void SolarGM_PoisonServer(const class FString& GMType);
	void SolarGM_Poison(const class FString& GMType);
	void SolarGM_PlayerUndetectableByAIServer(int32 DebugValue);
	void SolarGM_PlayerUndetectableByAI(int32 DebugValue);
	void SolarGM_NoviceGuidance(int32 ActionID, bool bOn);
	void SolarGM_NotifyPlayerHasCheatByNickName(const class FString& NickName);
	void SolarGM_NotifyPlayerHasCheat(const class FString& SolarPlayerID);
	void SolarGM_KillAllAIServer(bool KillBot);
	void SolarGM_KickMeOut();
	void SolarGM_InitTaskInfo();
	void SolarGM_GoPreviousHomeCameraMode();
	void SolarGM_GoNextHomeCameraMode();
	void SolarGM_GoHomeCameraModeByIndex(int32 Index);
	void SolarGM_GMGoSpectatePreviousPlayer();
	void SolarGM_GMGoSpectatePlayerByIndex(uint32 Index);
	void SolarGM_GMGoSpectateNextPlayer();
	void SolarGM_Freelook(bool Open);
	void SolarGM_DumpAllPlayer(bool bSendToServer);
	void SolarGM_DebugOffline();
	void SolarGM_DebugAllAIServer(int32 DebugValue);
	void SolarGM_DebugAllAI(int32 DebugValue);
	void SolarGM_ClosePoisonDamage(bool IsClose);
	void SolarGM_ClientShowRedZoneDamage(const struct FVector& bombLocation, const struct FVector& Characterlocation, float Distance, float Damage);
	void SolarGM_ClientSetPlayerData(const class FString& InPlayerID);
	void SolarGM_ClientMarkVehicleSpawnerInMap(TArray<struct FVector>& VehicleSpawnerLocations, TArray<int32>& VehicleSpawnerSpawnIds);
	void SolarGM_ClientGotoLogin();
	void SolarGM_ClientDumpAllPlayer(const class FString& DumpString);
	void SolarGM_Character(const class FString& GMType, const class FString& Param1, const class FString& Param2);
	void SolarGM_ChangeVehicleVectorProperty(const class FString& InPropertyName, float InX, float InY, float InZ);
	void SolarGM_ChangeVehicleRotatorProperty(const class FString& InPropertyName, float InPitch, float InYaw, float InRoll);
	void SolarGM_ChangeVehicleIntProperty(const class FString& InPropertyName, int32 InInt);
	void SolarGM_ChangeVehicleGASAttribute(const class FString& InPropertyName, float InValue);
	void SolarGM_ChangeVehicleFloatProperty(const class FString& InPropertyName, float InFloat);
	void SolarGM_ChangeVehicleCurveProperty(const class FString& InPropertyName, uint8 InChangeType, float InKey, float InValue);
	void SolarGM_ChangeVehicleBoolProperty(const class FString& InPropertyName, bool InBool);
	void SolarGM_ChangeDayLight(int32 ID);
	void SolarGM_BattleLua(const class FString& CmdName, TArray<class FString>& Params);
	void SolarGM_Battle(const class FString& CmdName, TArray<class FString>& Params);
	void SolarGM(const class FString& _str);
	void SolarEnergy(int32 InMode, int32 ID);
	void SolarCloseUI(const class FString& UIID);
	void SolarClosePanelUI(int32 Type);
	void SolarClientNetProfileStop();
	void SolarClientNetProfileStart();
	void ShowBackpackUI();
	void SetInputActionSwitch(int32 ActionID, bool bOn);
	void SetAllTeammateHUDDodge(bool bDodge);
	void ServerUpdateTaskInfo();
	void ServerUnforbidRoleAbilitySkillDebugOnly();
	void ServerTriggleScreenshotTask(const class FString& TargetPlayerId);
	void ServerTeleportTo(struct FVector& DestLocation);
	void ServerSyncPlayerSelfReport();
	void ServerSwitchSpectatedCharacterInTeam(int32 PosInTeam);
	void ServerSpawnVehicleWithVehicleID(int32 VehicleID);
	void ServerSpawnVehicle(int32 SpawnID);
	void ServerSpawnTreasureBox(int32 TreasureBoxID);
	void ServerSpawnSolarRadar(const class FString& BpPath);
	void ServerSpawnOutcomeContent(int32 OutcomeID);
	void ServerSpawnChargingPile(const class FString& BpPath);
	void ServerSpawnAirship(float Loc_X, float Loc_Y);
	void ServerSpawnAirdrop(int32 AirdropID);
	void ServerSolarWeaponSpreadForWeapon(float MaxSpeed, float MinSpread, float HipFireBaseSpread, float ADSBaseSpread, float VhADSBaseSpread, float SpreadStatuSpeed);
	void ServerSolarWeaponReload(int32 PrimaryAmmoCap, int32 SecondaryAmmoCap);
	void ServerSolarWeaponOverload(bool CanOverload, float OverloadMaxValue, float NormalOverloadCoolingRate, float OverloadCoolingPeriod);
	void ServerSolarWeaponFiringMode(bool bSingleFire, bool bBurst, bool bAuto, bool OneKeyFire, float HitHead);
	void ServerSolarSetPlayerValue(const class FString& InType, const class FString& InValue);
	void ServerSolarAmmoSpreadPerBullet(int32 AmmoIndex, float ADSSpreadCOP, float VhADSSpreadCOP, float SpreadFirePreTime, float SpreadPostFireSpeed, float SpreadRestorePreTime, float SpreadRestoreSpeed);
	void ServerSolarAmmoRangeSpeedDamage(int32 AmmoIndex, float MaxRange, float EffRange, float Radius, float InitSpeed, float FireStreakBreakTime, float DamageMaxRange, float DamageEffRange, float PostFireOverload);
	void ServerSolarAmmoFiring(int32 AmmoIndex, int32 FireCostType, int32 FireCostPerAttack, int32 FireSpeedChangeTime, float FireSpeedChangeCOP, float FastestFireInterval, float BaseInterval, float SlowestFireInterval);
	void ServerSolarAmmoBoltAndMag(int32 AmmoIndex, float BoltActionTime, float StartBoltDuration, bool UsePrimaryModeAmmoCap, bool UseBag);
	void ServerSolarAmmoBasicMovement(int32 AmmoIndex, int32 TimedExplode, int32 BounceTimes, float LifeTime, float BaseReloadTime, int32 TrajectoryType, float CustomValue);
	void ServerSetRoleAbilitySkillCDDurationDebugOnly(float InCD);
	void ServerSetPlayerLevel(int32 InLevel);
	void ServerSetHangUpBehavior();
	void ServerSetFreeLook(bool bInFreeLook);
	void ServerSetClientRecording_Impl(bool bInRecording);
	void ServerSetAppLifetimeState(enum class EAppLifetimeState NewLifeState);
	void ServerSetActorOwner(class AActor* TargetActor);
	void ServerScreenshotProcessing(struct FSShotImageInfo& ImageInfo);
	void ServerRPCResetZoneBombsFire();
	void ServerResetUniqueSkillCDDebugOnly();
	void ServerRequestTransferSkydivingLeaderTo(uint8 PosInTeam);
	void ServerRequestSkydivingFollow(class ASolarPlayerState* LeaderPlayerState);
	void ServerReqStartReviveItemRecycleCountDownData();
	void ServerPlayerUpgrade(int32 InLevel);
	void ServerPlayerResumeSettlement();
	void ServerPlayerRequestLogout();
	void ServerPlayerOutBySelf(enum class ESCMPlayerOutPath InPath);
	void ServerPlayerGoToSettlement();
	void ServerNotifyShowEmoji(int32 EmojiID, class ASolarCharacter* UseEmojiCharacter, float ValidEmojiUseDistance);
	void ServerNotifyPlayerHasCheatByNickName(const class FString& NickName);
	void ServerNotifyPlayerHasCheat(const class FString& SolarPlayerID);
	void ServerNetProfile(bool StartOrStop);
	void ServerInitTaskInfo();
	void ServerGoSpectatePreviousPlayer();
	void ServerGoSpectatePlayerByPlayerIdInternal(const class FString& SolarPlayerID);
	void ServerGoSpectatePlayerByPlayerId(const class FString& SolarPlayerID);
	void ServerGoSpectatePlayerByIndex_Internal(int32 Index);
	void ServerGoSpectatePlayerByIndex(int32 Index);
	void ServerGoSpectateNextPlayer();
	void ServerGainExperience(int32 InExp);
	void ServerEnableCheats();
	void ServerCmd(const class FString& Cmd);
	void ServerClearUniqueSkillCDDebugOnly();
	void ServerChangeVehicleVectorProperty(const class FString& InPropertyName, float InX, float InY, float InZ);
	void ServerChangeVehicleRotatorProperty(const class FString& InPropertyName, float InPitch, float InYaw, float InRoll);
	void ServerChangeVehicleIntProperty(const class FString& InPropertyName, int32 InFloat);
	void ServerChangeVehicleGASAttribute(const class FString& InPropertyName, float InValue);
	void ServerChangeVehicleFloatProperty(const class FString& InPropertyName, float InFloat);
	void ServerChangeVehicleCurveProperty(const class FString& InPropertyName, uint8 InChangeType, float InKey, float InValue);
	void ServerChangeVehicleBoolProperty(const class FString& InPropertyName, bool InBool);
	void ServerCancelSkydivingFollow();
	void SendRepliableMessageServer(int32& Message);
	void SendRepliableMessageInMsgBucket(TArray<int32>& MessageIDs);
	void SendRepliableMessageByMessageID(int32& ID);
	void SendQuickMessageServer(const class FString& Message, bool bSound);
	void SendQuickMessageNewServer(int32& VoiceType);
	void SendQuickMessageNewClient(const class FString& NickName, int32& VoiceType, int32& CharID, int32& SkinId, bool bGender, int32& PosInTeam, bool bLocalPlayer, bool bShowLocMessage);
	void SendQuickMessageClient(const class FString& NickName, const class FString& Message, bool IsLocalPlayer, bool bSound, int32 PosInTeam);
	void SendLocalizationTeamMessageServer(int32 TextID, TArray<struct FLocTextParam>& TextParams, const class FString& SoundEvent);
	void SendLocalizationTeamMessageNewServer(TArray<struct FLocTextParam>& TextParams, int32& SoundID1, int32& SoundDI2);
	void SendLocalizationTeamMessageNewClient(int32& CharacterId, int32& SkinId, bool bGender, int32& SoundID1, const class FString& NickName, TArray<struct FLocTextParam>& TextParams, int32 PosInTeam, int32& SoundID2);
	void SendLocalizationTeamMessageClient(class ASolarPlayerState* SenderPS, int32 TextID, TArray<struct FLocTextParam>& TextParams, const class FString& SoundEvent, int32 PosInTeam);
	void SendLocalizationTeamMessage(int32 TextID, TMap<class FString, int32>& TextParamsId, const class FString& SoundEvent1, const class FString& SoundEvent2);
	void SendDamageTextDataNextTick(struct FSolarDamageText& InSolarDamageText);
	void ResetJoyStickControlInput();
	void ResetAllInput();
	void RequestTransferSkydivingLeaderTo(uint8 PosInTeam);
	void RequestSkydivingFollow(class ASolarPlayerState* LeaderPlayerState);
	void RequestNotifyShowEmoji(int32 EmojiID, class ASolarCharacter* UseEmojiCharacter, float ValidEmojiUseDistance);
	void RecordSpectateInfoToBI(struct FSpectateReportInfo* SpectateReportInfo);
	void QuickMessageLuaCall(const class FString& Message, bool bSound);
	int32 QueryStage();
	void PushInputModeUIOnly(class FName Name, bool bShowCursor, class UWidget* InWidgetToFocus, bool bLockMouseToViewport);
	void PushInputModeGameOnly(class FName Name, bool bShowCursor);
	void PushInputModeGameAndUI(class FName Name, bool bShowCursor, class UWidget* InWidgetToFocus, bool bLockMouseToViewport, bool bHideCursorDuringCapture);
	void PostInputAction(class FName ActionName, enum class EInputEvent KeyEvent);
	void PostAkEventByName(const class FString& EventName1, const class FString& EventName2);
	void PopInputMode(class FName Name);
	void PlayerGoToSettleMent();
	void PlayerGotoLobbyWithLogout();
	void PassiveTriggeredVoice(enum class EPassiveTriggeredVoice VoiceType);
	void OnVehiclePitchRotateInputDelegate__DelegateSignature(float InputValue);
	void OnTeamNumChangeFun(enum class ESCMDataChangeType ChangeType, int32 OldValue, int32 NewValue);
	void OnTeammateHUDDodgeSet__DelegateSignature(bool bDodge);
	void OnSuperScaningStart(TArray<class FString>& InScanPlayers);
	void OnSuperScaningRemovePlayer(const class FString& InRemovePlayer);
	void OnSuperScaningEnd();
	void OnStopUpdateSpectateInfo(class ASolarSpectateInfo* SpecInfo);
	void OnSpectateTargetItemsChanged(class ASolarSpectateInfo* SpecInfo);
	void OnSpectateTargetChangedHandler(class ASolarPlayerState* OldTarget, class ASolarSpectateInfo* MySpecInfo);
	void OnSpectateInfoRep__DelegateSignature(class ASolarSpectateInfo* SpectateInfo);
	void OnSkydivingStatusUpdated(class ASolarPlayerState* SelfPlayerState, bool bInIsSkydiving);
	void OnShowGameNotice(int32 InNoticeID, TMap<class FString, class FString>& InNoticeParams);
	TArray<class URotationBarMarkWidget*> OnShowActorMarkDelegate__DelegateSignature(const TArray<class AActor*>& MarkActors);
	void OnSeamlessTravelEnd();
	void OnScopeAxisInput(float InAxisValue);
	void OnReviveSelfTriggered(bool bAppear);
	void OnReceiveBattleEnd();
	void OnPutAwayWeaponPressed();
	void OnPlayerStateSpectateInfoRepHandler(class ASolarSpectateInfo* SpecInfo);
	void OnPlayerStateRepHandlerForSpectate(enum class EPlayerStateRepType RepType, class APlayerState* InPlayerState);
	void OnPawnReplicated__DelegateSignature();
	void OnNotifiedMarkedItemWasPickedUpDelegate__DelegateSignature(int64& InItemInstanceId);
	void OnEnterVoyageDelegate__DelegateSignature();
	void OnEnterLanding();
	void OnCustomizeLevelLoaded();
	void OnClientRecordingChanged(bool bInRecording);
	void OnCleanActorMarkWithWidgetsDelegate__DelegateSignature(const TArray<class URotationBarMarkWidget*>& MarkWidgets);
	void OnCleanActorMarkWithActorsDelegate__DelegateSignature(const TArray<class AActor*>& MarkActors);
	void OnCharacterRebirthLua();
	void OnCharacterDeathLua();
	void OnCatchInputActionDelegate__DelegateSignature(class FName ActionName, enum class EInputEvent InputEventType);
	void OnBeginUpdateSpectateInfo(class ASolarSpectateInfo* SpecInfo);
	void OnBeforeSpectateTargetChange(class ASolarPlayerState* NewTarget, class ASolarSpectateInfo* SpectateInfo);
	void OnAppHasReactivated();
	void OnAppHasDeactiveated();
	void OnActionWheelClosed();
	void NotifyMonsterSpawn();
	void NotifyCrouchIsLocked();
	void NotifyAppReactivate();
	void NotifyAppHasDeactivate();
	void NofityCustomizeLevelLoaded();
	void MarkWorldInLevelLuaCall(struct FWorldMarkData& InWorldMarkedData);
	void MarkWorldInLevel(struct FWorldMarkData& InWorldMarkedData);
	void MarkPointInNavMapLuaCall(struct FVector2D& InMarkedPoint);
	void MarkPointInNavMap(struct FVector2D& InMarkedPoint, bool bFromWorldMark);
	void MarkOnWorldByMinimapPosition(int32 PosInTeam, struct FVector2D& MinimapPos);
	void MarkedAsAppHasReactivated();
	void MarkedAsAppHasDeactivated();
	void LuaShowUI(const class FString& WidgetPath, const class FString& UIName);
	void LuaClientUpdateAimbotSlidingWindowPolicyParm(int32 AimbotSwitch, int32 WindowSize, int32 MaxMutation);
	void LuaCallInputTouch(uint32 Handle, enum class ETouchType Type, struct FVector2D& TouchLocation);
	void LookUp(float Value);
	void LogMarkAndQuickVoice(int32 Type, int32 SubType);
	void KickMeOutAtDS(const class FString& InPlayerID);
	void K2_ShowDamageText(float InDamage, struct FHitResult& InHitResult, class AActor* InDamageSource, class AController* InAutonomousController, struct FSolarPointDamageEvent& InPointDamageEvent);
	bool IsThirdPersonSpectateCameraMode();
	bool IsSpectatingOtherPlayer();
	bool IsMatching();
	bool IsHasSkydiveAndEnd();
	bool IsHasCharacterAndSkin(int32 CharacterId, int32 SkinId);
	void InputWorldMarkReleased();
	void InputWorldMarkPressed();
	void InputVerticalJetReleased();
	void InputVerticalJetPressed();
	void InputVehicleInteractionReleased();
	void InputVehicleInteractionPressed();
	void InputUseRecommendBtnPCReleased();
	void InputUseRecommendBtnPCPressed();
	void InputUseMedicineReleased();
	void InputUseMedicinePressed();
	void InputToggleTertiaryWeapon_Checkbox();
	void InputToggleSkydivingFollowRouletteTriggered();
	void InputToggleSecondaryWeaponReleased();
	void InputToggleSecondaryWeaponPressed();
	void InputToggleSecondaryWeapon_Checkbox();
	void InputTogglePrimaryWeaponReleased();
	void InputTogglePrimaryWeaponPressed();
	void InputTogglePrimaryWeapon_Checkbox();
	void InputTogglePickupReleased();
	void InputTogglePickupPressed();
	bool InputTestPriority3Pressed();
	bool InputTestPriority2Pressed();
	bool InputTestPriority1Released();
	bool InputTestPriority1Pressed();
	void InputSwitchToSeatTwoPressed();
	void InputSwitchToSeatThreePressed();
	void InputSwitchToSeatOnePressed();
	void InputSwitchToSeatFourPressed();
	void InputSwitchFireModeReleased();
	void InputSwitchFireModePressed();
	void InputStartRepairVehicleReleased();
	void InputSprintLockStart();
	void InputSprintFreeTerminate();
	void InputSprintFreeStart();
	void InputSprintFreeReleasedOnPC();
	void InputSprintFreePressedOnPC();
	void InputSkydivingFollowRouletteSelect4();
	void InputSkydivingFollowRouletteSelect3();
	void InputSkydivingFollowRouletteSelect2();
	void InputSkydivingFollowRouletteSelect1();
	void InputSkydivingFollowRouletteSelect(int32 PosInTeam);
	void InputShieldUpgradeReleased();
	void InputShieldUpgradePressed();
	void InputShieldUpgradeCancelReleased();
	void InputShieldUpgradeCancelPressed();
	void InputRightMouseButtonReleased();
	void InputRightMouseButtonPressed();
	void InputReviveSelfReleased();
	void InputReloadReleased();
	void InputReloadPressed();
	void InputRechargeShieldReleased();
	void InputRechargeShieldPressed();
	void InputQuickAdsReleased();
	void InputQuickAdsPressed();
	void InputPSTouchpadButton(float InValueX);
	void InputPickupReleased();
	void InputPickupPressed();
	void InputMoveRight(float InValueY);
	void InputMovementYReceived(float InValueY);
	void InputMovementXReceived(float InValueX);
	void InputMoveForward(float InValueX);
	void InputMapPressed();
	void InputLeftFireReleased();
	void InputLeftFirePressed();
	void InputKeepSprintPressed();
	void InputJumpReleased();
	void InputJumpPressed();
	void InputItemActionWheelReleased();
	void InputItemActionWheelPressed();
	void InputInteractPressed();
	void InputInteractAndReloadReleased();
	void InputInteractAndReloadPressed();
	void InputHorizontalJetReleased();
	void InputHorizontalJetPressed();
	void InputGunsightReleased();
	void InputGunsightPressed();
	void InputGetOnVehicleReleased();
	void InputGetOffVehicleReleased();
	void InputFreeLookReleased();
	void InputFreeLookPressed();
	void InputFireReleased();
	void InputFirePressed();
	void InputEquip2Released();
	void InputEquip2Pressed();
	void InputEquip1Released();
	void InputEquip1Pressed();
	void InputEmoteActionWheelReleased();
	void InputEmoteActionWheelPressed();
	void InputEjectReleased();
	void InputEjectPressed();
	void InputDriveVehicleReleased();
	void InputCrouchReleased();
	void InputCrouchPressed();
	void InputCancelVehicleAbilityReleased();
	void InputCancelSkydivingFollowingTriggered();
	void InputBuilding();
	void InputBigRechargeShieldReleased();
	void InputBigRechargeShieldPressed();
	void InputBackpackReleased();
	void InputBackpackPressed();
	void InputAltFireReleased();
	void InputAltFirePressed();
	void InputActiveVehicleSecondAbilityReleased();
	void InputActiveVehicleSecondAbilityPressed();
	void InputActiveVehicleFirstAbilityReleased();
	void InputActiveVehicleFirstAbilityPressed();
	void InputActionWheelPreviousPage();
	void InputActionWheelNextPage();
	void InputActionWheelExec();
	void InputActionWheelCancel();
	void InputActionSecondaryReleased();
	void InputActionSecondaryPressed();
	void InputActionPrimaryReleased();
	void InputActionPrimaryPressed();
	bool IfSolarCharacterIsDriver();
	void HighlightDataRpcConnection(const class FString& HighlightDataStr);
	bool HasSkin(int32 InSkinID);
	void HandleBeginSpectateRequest();
	void GyroscopeTilt(const struct FVector& Tilt);
	void GyroscopeRotationRate(const struct FVector& RotationRate);
	class ASolarCharacter* GetViewportFocusedCharacter(bool bReturnPossessedCharacterIfSpectateNull);
	struct FVector2D GetViewportCenter();
	class ASolarPlayerState* GetSpectateTargetPlayerState();
	class ASolarSpectateInfo* GetSpectateInfo();
	class ASolarCharacter* GetSpectatedCharacter();
	class ASolarPlayerState* GetSolarViewPlayerState();
	class ASolarPlayerState* GetSolarPlayerState();
	class ASolarCharacter* GetSolarCharacter();
	enum class EPlayerNetStateInGame GetPlayNetStateInGame();
	struct FRotator GetPlayerViewRotation(bool bWithoutCameraModifiers, bool bWithRotationInput);
	struct FVector GetPlayerViewLocation(bool bWithoutCameraModifiers, bool bWithRotationInput);
	class UPlayerStatisticsData* GetPlayerStatData();
	class FString GetPlayerID();
	class FString GetNoticeLocalText(int32 InNoticeID, TMap<class FString, class FString>& InNoticeParams);
	uint8 GetMyTeamID();
	uint8 GetMyPosInTeam();
	struct FVector2D GetMyMarkedPointInNavMap();
	int32 GetMultiKillNum();
	int32 GetKillNum();
	int32 GetKillingSpreesNum();
	bool GetIsDropAndPickUpItemOrWeaponSwitchOnValue();
	class USolarInputModePolicyComponent* GetInputModePolicyComp();
	struct FSolarInputModeDataBase GetInputMode(class FName Name, enum class ESolarInputMode* OutInputMode, bool* bFound);
	class USolarCameraComponent* GetCurrentCameraComponent();
	void GetControlledVehiclePropertyContainer(TArray<class UObject*>* OutObjects);
	struct FRotator GetCharacterViewRotation();
	struct FRotator GetCameraRotation();
	struct FVector GetCameraLocation();
	class ASolarCharacter* GetCameraFocusedCharacter();
	float GetCameraDefaultFOVAngle();
	float GetCameraCurrentFOVAngle();
	class USolarCameraComponent* GetActiveCamera();
	void ForceCompleteClientBlendToSpectateTarget();
	void ExcludeDifferentTeam(int32 TeamID);
	void EndOBCurrentBattle();
	void DropPassengerNotification();
	void DestroyCharacterCorpse();
	void DebugUpdateTask();
	void DebugSetPlayerData();
	void DebugInitTask();
	void CustomModeShowNotice(int32 InType, int32 InNoticeID, class UClass* InClass, float InTime, const class FString& InText, class UObject* InIcon, int32 InNoticeColor);
	void CustomAntiCheatDataExport(TArray<class FString>& DataName, TArray<class FString>& DataContent);
	void ClientSyncPlayerSelfReport(struct FSolarPlayerReport& SelfReport, struct FSolarGameModeInfo& GameInfo);
	void ClientStartReviveItemRecycleCountDown(int32 CurrentTime, int32 DurationTime);
	void ClientShowUI(const class FString& WidgetPath, const class FString& UIName);
	void ClientShowDiePage();
	void ClientScreenshotTask(struct FScreenshotSetting& Setting);
	void ClientReviveWillBeDisabledHint(int32 Duration);
	void ClientReviveBeDisabledHint();
	void ClientRespondSkydivingFollowAutoChangedOnLeaderLeaving(class ASolarPlayerState* NewLeaderPlayerState, class ASolarPlayerState* OldLeaderPlayerState);
	void ClientReplacePlayerKillEffect(class AActor* InSource, class AActor* InTarget);
	void ClientReceviceDamageText(TArray<struct FSolarDamageText>& InSolarDamageTextDatas);
	void ClientRaiseScreenshotJob(enum class EShotMomentFlag ShotMoment);
	void ClientPlayerGoToSettlement(TArray<struct FSolarPlayerReport>& Reports, struct FSolarGameModeInfo& GameInfo, TArray<int32>& InSettlementPageIndexs, bool IsCustomRoom);
	void ClientPlayerActivityHeatUpdate(const class FString& ActivityHeatFragmentStr);
	void ClientNotifyShowEmoji(int32 EmojiID, class ASolarCharacter* UseEmojiCharacter);
	void ClientNotifyCheatedPlayer(class FText& OutReason);
	void ClientNotifyAbnormalPlayer(class FText& OutReason);
	void ClientEnableAiPalComponent(int32 Rate);
	void ClientDoCharacterOperation(struct FCharacterOperationEvent& ChOperationEvt);
	void ClientCloseUI(const class FString& UIName);
	void ClientClearAudioListenerOverride();
	void ClientCharacterIsDead();
	void ClientBeginOBCurrentBattleInternal();
	void ClearMarkedPointInNavMapLuaCall();
	void ClearMarkedPointInNavMap();
	void ChangeVehicleVectorPropertyInternal(const class FString& InPropertyName, float InX, float InY, float InZ);
	void ChangeVehicleRotatorPropertyInternal(const class FString& InPropertyName, float InPitch, float InYaw, float InRoll);
	void ChangeVehicleIntPropertyInternal(const class FString& InPropertyName, int32 InFloat);
	void ChangeVehicleFloatPropertyInternal(const class FString& InPropertyName, float InFloat);
	void ChangeVehicleCurvePropertyInternal(const class FString& InPropertyName, uint8 InChangeType, float InKey, float InValue);
	void ChangeVehicleBoolPropertyInternal(const class FString& InPropertyName, bool InBool);
	bool CanWorldMark();
	bool CanSolarCharacterLaunchJetPack();
	bool CanSolarCharacterInput();
	bool CanSolarCharacterCrouch();
	void CancelSkydivingFollow();
	void BuildSkydivingFollowOnLeavingTeam(bool bIgnoreNotification);
	void BuildSkydivingFollowOnEnteringTeam();
	void BpServerCheckAndUpdateAimbotSlidingWindowPolicyParm(int32 AimbotSwitch, int32 WindowSize, int32 MaxMutation);
	void BindDelegatesDependGameState();
	void BeNotifiedMarkedItemWasPickedUp(int64& InItemInstanceId);
	void BeginOBCurrentBattle();
	void BackToLobby();
	void AssembleCustomAntiCheatData(class ASolarWeapon* ActiveWeapon, class ASolarVehiclePawn* BoardedVehicle);
	void AntiCheatDataSchedulerUpload(TArray<class FString>& DataName, TArray<class FString>& DataContent, struct FFixedAntiCheatData& FixedData);
	void AddTeammateCandidate(class ASolarCharacter* Candidate, int32 TeamID);
};

// 0x8 (0xEA8 - 0xEA0)
// Class Solarland.SCMPlayerController
class ASCMPlayerController : public ASolarPlayerController
{
public:
	class USCMPlayerRPCComponent*                RpcComponent;                                      // 0xEA0(0x8)(BlueprintVisible, ExportObject, Net, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class ASCMPlayerController* GetDefaultObj();

	void ServerHandlePlayerLevelLoaded(const class FString& LevelName);
	void RequestUpdataDataManager();
};

// 0x0 (0xB0 - 0xB0)
// Class Solarland.SCMPlayerRPCComponent
class USCMPlayerRPCComponent : public UActorComponent
{
public:

	static class UClass* StaticClass();
	static class USCMPlayerRPCComponent* GetDefaultObj();

	void ReceivedLevelLoaded(const class FString& LevelName);
	void ReceivedCharacter();
	void ReceivedBeginLevelLoad(const class FString& LevelName);
};

// 0x60 (0x2B8 - 0x258)
// Class Solarland.SCMPlayerStart
class ASCMPlayerStart : public APlayerStart
{
public:
	float                                        Distance;                                          // 0x258(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23B4[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                Side;                                              // 0x260(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Job;                                               // 0x270(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                ElementID;                                         // 0x280(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ESCMMapElementType                Type;                                              // 0x290(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ESCMMapElementStateType           State;                                             // 0x291(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ESCMMapElementVisibilityType      Visibility;                                        // 0x292(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23B5[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  ElementName;                                       // 0x294(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23B6[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FVector>                       PlayerLocations;                                   // 0x2A0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_23B7[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASCMPlayerStart* GetDefaultObj();

	enum class ESCMMapElementVisibilityType SetElementVisibility(enum class ESCMMapElementVisibilityType NewType);
	enum class ESCMMapElementStateType SetElementState(enum class ESCMMapElementStateType NewState);
	void OnElementVisibilityChanged(enum class ESCMMapElementVisibilityType CurrentVisibility);
	void OnElementStateChanged(enum class ESCMMapElementStateType CurrentState);
};

// 0x7A8 (0xAD8 - 0x330)
// Class Solarland.SolarPlayerState
class ASolarPlayerState : public APlayerState
{
public:
	FMulticastInlineDelegateProperty_            OnTeammatePlayerStateRepDelegate;                  // 0x330(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnTeammatePlayerStateRemovedInPreparatoryPhaseDelegate; // 0x340(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnTeammatePlayerStateRemovedInBattlePhaseDelegate; // 0x350(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnPlayerChangedGoldsDelegate;                      // 0x360(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnOBPlayerRepDelegate;                             // 0x370(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	int32                                        Gold;                                              // 0x380(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23D6[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<int32>                                CostedGolds;                                       // 0x388(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<int32>                                ReceivedGolds;                                     // 0x398(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CharacterId;                                       // 0x3A8(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SkinId;                                            // 0x3AC(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                ClanId;                                            // 0x3B0(0x10)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                ClanName;                                          // 0x3C0(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                ClanShortName;                                     // 0x3D0(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        BagId;                                             // 0x3E0(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CapsuleID;                                         // 0x3E4(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                SolarPlayerID;                                     // 0x3E8(0x10)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                NickName;                                          // 0x3F8(0x10)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                       BattleVoiceId;                                     // 0x408(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23D7[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int64                                        RTCType;                                           // 0x410(0x8)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint64                                       UserId;                                            // 0x418(0x8)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        PosInTeam;                                         // 0x420(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23D8[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                Side;                                              // 0x428(0x10)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Job;                                               // 0x438(0x10)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CharacterLevel;                                    // 0x448(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        AvatarID;                                          // 0x44C(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        AvatarFrameID;                                     // 0x450(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Gender;                                            // 0x454(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        AccountLevel;                                      // 0x458(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        FriendNum;                                         // 0x45C(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RoleID;                                            // 0x460(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23D9[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FMedalInfo>                    Medals;                                            // 0x468(0x10)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FBattleCharacterData>          AllCharacterData;                                  // 0x478(0x10)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FBattleCharacterData                  CurUsedCharacterData;                              // 0x488(0x48)(BlueprintVisible, BlueprintReadOnly, Net, NoDestructor, NativeAccessSpecifierPublic)
	TArray<struct FExpRankMedalData>             AllExpRankMedalData;                               // 0x4D0(0x10)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLastBattleInfo                       LastBattleInfo;                                    // 0x4E0(0x1C)(ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	int32                                        RoleUltimateSkillCDState;                          // 0x4FC(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FSettlementParam_ExtraRewardInfo> ExtraRewards;                                      // 0x500(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FSettlementReward>             SettlementRewards;                                 // 0x510(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FSettlementCrateReward>        CrateRewards;                                      // 0x520(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                       PlayerNumber;                                      // 0x530(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23DA[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<int32, int32>                           VehicleSkinData;                                   // 0x538(0x50)(NativeAccessSpecifierPublic)
	float                                        CurrentHealth;                                     // 0x588(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxHealth;                                         // 0x58C(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FShieldInfo                           CurShieldInfo;                                     // 0x590(0x8)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        ReviveItemNum;                                     // 0x598(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        ReviveCountByItem;                                 // 0x599(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23DB[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        TalentID;                                          // 0x59C(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        LikeValue;                                         // 0x5A0(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ReceivedGiftNum;                                   // 0x5A4(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SpectatorNum;                                      // 0x5A8(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETalentState                      TalentState;                                       // 0x5AC(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         HasBackendVerified;                                // 0x5AD(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         HasGroupBackendVerified;                           // 0x5AE(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23DC[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector2D                             MarkedPointInNavMap;                               // 0x5B0(0x8)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               SelfLastVehicleLocation;                           // 0x5B8(0xC)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               TeamLastVehicleLocation;                           // 0x5C4(0xC)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        CurrentPlayerStateInGame;                          // 0x5D0(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        CurrentCharacterStateInGame;                       // 0x5D1(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23DD[0x56];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        AccountFlag;                                       // 0x628(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ClanFlag;                                          // 0x62C(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<int32>                                EquippedEmotes;                                    // 0x630(0x10)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                OS;                                                // 0x640(0x10)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                OsType;                                            // 0x650(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                DeviceModel;                                       // 0x660(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ECommonInputType                  InputType;                                         // 0x670(0x1)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsSameTeamWithLocalPlayer;                        // 0x671(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         HasReconnection;                                   // 0x672(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23DE[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bHasHangUpBehavior;                                // 0x678(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23DF[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        HangUpTime;                                        // 0x67C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OfflineBattleTime;                                 // 0x680(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Elo;                                               // 0x684(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RankLevel;                                         // 0x688(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RankLevel2;                                        // 0x68C(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        LegendRank;                                        // 0x690(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        VipType;                                           // 0x694(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23E0[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        WarmupTag;                                         // 0x698(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Frustration;                                       // 0x69C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bMonitor;                                          // 0x6A0(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        LobbyTeamMemberNum;                                // 0x6A1(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23E1[0x16];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bTeamIDHasChanged;                                 // 0x6B8(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23E2[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        RepliableMessageID;                                // 0x6BC(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RepliableMessageStartTime;                         // 0x6C0(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23E3[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bIsOBPlayer;                                       // 0x6D0(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23E4[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        WarmId;                                            // 0x6D4(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        WarmType;                                          // 0x6D8(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         AllowOtherJoin;                                    // 0x6DC(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23E5[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        WaitTimeBeforeEnterSpectateMode;                   // 0x6E0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23E6[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnSpectateInfoRep;                                 // 0x6E8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class ASolarPlayerState*                     KillerPlayerState;                                 // 0x6F8(0x8)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ASolarPlayerState*                     RevengePlayerState;                                // 0x700(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FKillEnemySnapshot>            KilledEnemysRecord;                                // 0x708(0x10)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ASolarSpectateInfo*                    SpectateInfo;                                      // 0x718(0x8)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EPlayerNetStateInGame             NetStateInGame;                                    // 0x720(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bHasLogin;                                         // 0x721(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_23E7[0xE];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bHasUpdateByServerData;                            // 0x730(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_23E8[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USolarReplayHighlightComponent*        ReplayHightlightComp;                              // 0x738(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        KillNum;                                           // 0x740(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23E9[0x1C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        AssistNum;                                         // 0x760(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23EA[0x1C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               DeathPos;                                          // 0x780(0xC)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ReconnectNum;                                      // 0x78C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23EB[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MultiKillDurationTime;                             // 0x7A0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_23EC[0x14];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TotalReceivedDamage;                               // 0x7B8(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        HealSelf;                                          // 0x7BC(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ReceivedHeal;                                      // 0x7C0(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LifeTime;                                          // 0x7C4(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSettlementTempData                   SettleSyncData;                                    // 0x7C8(0xD8)(NativeAccessSpecifierPublic)
	int32                                        PlayerRank;                                        // 0x8A0(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsAce;                                             // 0x8A4(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bMVP;                                              // 0x8A5(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23ED[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         IsVictory;                                         // 0x8A7(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MvpScore;                                          // 0x8A8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        KDA;                                               // 0x8AC(0x4)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ResurrectionTimes;                                 // 0x8B0(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CharacterExp;                                      // 0x8B4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<int32>                                CharacterExpReason;                                // 0x8B8(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        GainCombatScore;                                   // 0x8C8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        AccountExp;                                        // 0x8CC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<int32, int32>                           WeaponExps;                                        // 0x8D0(0x50)(NativeAccessSpecifierPublic)
	int32                                        Zomborg;                                           // 0x920(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ZomborgExtra;                                      // 0x924(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<enum class ESCMPlayerPunishType>      SettlePunishTypes;                                 // 0x928(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<int32>                                StrategyConditionIDs;                              // 0x938(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SettlementDisplayStrategyID;                       // 0x948(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23EE[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class ESCMPlayerOutPath                 PlayerOutPath;                                     // 0x94F(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<int32>                                UsedCharacterIDs;                                  // 0x950(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPresettling;                                      // 0x960(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHasSettled;                                       // 0x961(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsPlayerBattleEnd;                                // 0x962(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_23EF[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        InteractValue;                                     // 0x964(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LastInteractTime;                                  // 0x968(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DamageFactor;                                      // 0x96C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehicleProbability;                                // 0x970(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsTimeoutPlayer;                                  // 0x974(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bShowBattlePrompt : 1;                             // Mask: 0x1, PropSize: 0x10x975(0x1)(Net, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_1E2 : 7;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_23F0[0x22];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FExposeLocationMap                    ExposeLocationMap;                                 // 0x998(0x58)(Protected, NativeAccessSpecifierProtected)
	TArray<class ASolarPlayerState*>             ExposeLocationArray;                               // 0x9F0(0x10)(Net, ZeroConstructor, RepNotify, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               PlayerLocation;                                    // 0xA00(0xC)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_23F1[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ASolarPlayerState*                     ExposeTo;                                          // 0xA10(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_23F2[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        SkydivingLeaderPosInTeam;                          // 0xA20(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        SkydivingFollowFormationPos;                       // 0xA24(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_23F3[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class ESkydivingState                   SkydivingState;                                    // 0xA2C(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23F4[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USolarAchievementComponent*            AchievementComponent;                              // 0xA30(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23F5[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<int32>                                PreCompletedAchievementIDs;                        // 0xA40(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        PlayerLevel;                                       // 0xA50(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PlayerExperience;                                  // 0xA54(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        HistoryShieldUpgradeItemNum;                       // 0xA58(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23F6[0x1C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class ASpatializeInfoTrack*                  TrackInfo;                                         // 0xA78(0x8)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TrackMaxRevealDistance;                            // 0xA80(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EAppLifetimeState                 AppLifetimeState;                                  // 0xA84(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23F7[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        TailFlameId;                                       // 0xA88(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23F8[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ASolarTeamInfo*                        Team;                                              // 0xA90(0x8)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23F9[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FSolarBattleWeaponData>        BattleWeaponDataArray;                             // 0xAA8(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AHeroPickInfo*                         HeroPickInfo;                                      // 0xAB8(0x8)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_23FA[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASolarPlayerState* GetDefaultObj();

	bool WillFollowMovementOfSkydivingLeader();
	void UpgradePlayerLevel(int32 LevelAdded);
	void UpdateCurUseCharacterData(int32 InCharacterId);
	void UpdateCurUseCharacterAndSkinData(int32 InCharacterId, int32 InSkinID);
	void UpdateAICharacterDataList(struct FBattleCharacterData& InCharacterData);
	bool TryGetVehicleDamageInfo(TArray<int32>* OutVehicleDamageInfo);
	bool TryGetSafeAreaInfo(TArray<int32>* OutSafeZoneInfo);
	bool TryGetPlayerBackpackItems(TArray<int32>* OutWeaponIds);
	void SyncMarkedWorldData(struct FWorldMarkData& InMarkData);
	void SynchronizePlayerStateInGame(enum class EPlayerStateInGame InEPlayerStateInGame, bool InIfOrNot);
	void SynchronizeCharacterStateInGame(enum class ECharacterStateInGame InECharacterStateInGame, bool InIfOrNot);
	void StatWeaponLevelAndTime();
	void StatWeaponBattleDetailInfo();
	void StatVehicleDriveTypeLuaCall(int32 DriveType);
	void StatVehicleDriveType(int32 DriveType);
	void ShowTeammatesHUD(TArray<class ASolarPlayerState*>& TeammateStates, class ASolarPlayerState* InSpectateTargetPlayerState);
	void SetRoleUltimateSkillCDState(int32 NewState);
	void SetRoleID(int32 InRoleID);
	void SetPlayerNetStateInGame(enum class EPlayerNetStateInGame InPlayerNetStateInGame);
	void SetIsTimeoutPlayer(bool InValue);
	void SetIsPlayerBattleEnd(bool bPlayerBattleEnd);
	void SetDeathboxSkinId(TArray<int32>& InOwnedDeathboxSkinIds);
	void SetAllCharactersDeathboxSkinId(TMap<int32, int32>& InCharactersDeathboxSkinId);
	void ServerUpdateInputType(enum class ECommonInputType NowInputType);
	void ServerUnexposeLocationToOtherOnce(class ASolarPlayerState* OtherPS);
	void ServerUnexposeLocationToOther(class ASolarPlayerState* OtherPS);
	void ServerPlayerSelectSkin(int32 InCharacterId, int32 InSkinID);
	void ServerExposeLocationToOther(class ASolarPlayerState* OtherPS);
	void ServerChangeRoleID(int32 InRoleID);
	void ReviseWeaponExp(int32 Weaponid, int32 WeaponExp, int32 CurLevel, int32 CurExp);
	void RequestServerUpdateInputType(enum class ECommonInputType NowInputType);
	void ReceiveTeamIdReplicated();
	void ReceiveTalentStateSet(enum class ETalentState InState);
	void ReceiveTalentIDReplication(enum class EPlayerStateRepType RepType, class APlayerState* ClientOwnerPS);
	void ReceiveSideReplicatedAfter();
	void ReceivePostInitializeComponents();
	bool ReceiveGold(int32 InReceivedGold, bool NeedSyncToServer, bool NeedSyncToDS);
	void ReceiveClientInitialize(class AController* C);
	void PlayerSelectSkin(int32 InCharacterId, int32 InSkinID);
	void PlayerSelectHero(int32 InCharacterId, int32 InSkinID, bool bConfirm);
	bool PlayerIsResurrecting();
	bool PlayerHasLogin();
	bool PlayerCanRebirthByReviveItem(bool bCheckItemNum, bool bIncludingReviving);
	bool PlayerCanRebirthByBuyResurrection();
	bool PlayerCanRebirthByAllMeans();
	bool PlayerCanRebirthBlueprint();
	bool PlayerCanRebirth();
	bool PlayerCanBuyRescue();
	void OnUpdatedPlayerStateLoginData();
	void OnTeammatePlayerStateRepDelegate__DelegateSignature();
	void OnTeammatePlayerStateRemovedDelegate__DelegateSignature(uint8& InPosInTeam, bool InIsLastOne);
	void OnTeamInfoChanged__DelegateSignature(class ASolarTeamInfo* PreviousTeam, class ASolarTeamInfo* NowTeam);
	void OnStopReceiveExposedLocation(class ASolarPlayerState* OtherPS);
	void OnStartResurrectProgress(int32 InTextId, float InDuration, float InRemaining, bool bShowCancel);
	void OnSpectateTargetChanged(class ASolarPlayerState* InOldTarget, class ASolarSpectateInfo* InSpectateInfo);
	void OnSpectateInfoRep__DelegateSignature(class ASolarSpectateInfo* SpectateInfo);
	void OnRequestStartResurrect(class ADeathTreasureBox* InDeatbox);
	void OnRequestCancelResurrect(class ADeathTreasureBox* InDeatbox);
	void OnReplayRecordingStarted();
	void OnRep_UserId();
	void OnRep_TotalReceivedDamage();
	void OnRep_TeammatesState();
	void OnRep_TeamLastVehicleLocation();
	void OnRep_TeamChanged(class ASolarTeamInfo* PreviousTeam);
	void OnRep_TalentID();
	void OnRep_TailFlameId();
	void OnRep_SpectateInfo();
	void OnRep_SkydivingState();
	void OnRep_SkydivingLeaderPosInTeam(int32 OldValue);
	void OnRep_SkinId();
	void OnRep_Side(const class FString& OldSide);
	void OnRep_SelfLastVehicleLocation();
	void OnRep_RTCType();
	void OnRep_RoleID();
	void OnRep_ReviveItemNum();
	void OnRep_ReviveCountByItem();
	void OnRep_RepliableMsg();
	void OnRep_PosInTeam(uint8& InLastPosInTeam);
	void OnRep_PlayerLocation();
	void OnRep_PlayerLevel();
	void OnRep_PlayerExp();
	void OnRep_NickName(const class FString& OldNickName);
	void OnRep_NetStateInGame();
	void OnRep_MaxHealth();
	void OnRep_MarkedPointInNavMap();
	void OnRep_KillNum();
	void OnRep_Job();
	void OnRep_IsOBPlayer();
	void OnRep_InputType();
	void OnRep_HeroPickInfo();
	void OnRep_HasSettled();
	void OnRep_Gold();
	void OnRep_ExposeLocationArray();
	void OnRep_CurShieldInfo(struct FShieldInfo& InLastShieldInfo);
	void OnRep_CurrentPlayerStateInGame(uint8& InLastPlayerStateInGame);
	void OnRep_CurrentHealth();
	void OnRep_CurrentCharacterStateInGame(uint8& InLastCharacterStateInGame);
	void OnRep_ClanId();
	void OnRep_ClanFlag();
	void OnRep_CharacterId();
	void OnRep_BattleVoiceId();
	void OnRep_BagId();
	void OnRep_AssistNum();
	void OnRep_AccountFlag();
	void OnRefreshReviveInfo();
	void OnReceiveExposedLocation(class ASolarPlayerState* OtherPS, struct FVector& Location);
	class FString OnPlayerUpgrade(int32 NewLevel, bool bFromServer);
	void OnPlayerUpdateStatData(enum class EStatisticsType InType);
	void OnPlayerGainExperience(int32 GainedExp, int32 CurrentExp, int32 TotalExp, enum class EExpBehaviorType BehaviorType);
	void OnPlayerChangedGolds(enum class EPlayerChangedGoldType ChangedGoldType, int32 CostGoldNum, enum class EPlayerChangedGoldResult CostResult);
	void OnOtherPlayerStopSpectateMyTeam(class ASolarSpectateInfo* InSpectateInfo);
	void OnOtherPlayerStopSpectateMe(class ASolarPlayerState* InSpectatorPlayerState, class ASolarSpectateInfo* InSpectateInfo);
	void OnOtherPlayerBeginSpectateMe(class ASolarPlayerState* InSpectatorPlayerState, class ASolarSpectateInfo* InSpectateInfo);
	void OnOBPlayerRepDelegate__DelegateSignature(bool bIsOBPlayer);
	void OnInputTypeChanged(enum class ECommonInputType NowInputType);
	void OnDamageChanged__DelegateSignature(float Damage);
	void OnClientSpectateTargetChanged(class ASolarPlayerState* InOldTarget, class ASolarSpectateInfo* InSpectateInfo);
	void OnCancelResurrectProgress(int32 InTextId);
	void NotifyUpdateTeamMateLevelUI();
	void NotifyAddExperience(int32 ExpAdded);
	void NewMarkedWorldDataInClient(int32 InPosInTeam, struct FWorldMarkData& InMarkData);
	bool NeedPerformSpectateInfoOnSimulate();
	int32 LuaGetExpFromWeaponImplementation(enum class EExpBehaviorType InBehaviorType, int32 InParamOne, int32 InParamTwo, float InDamage);
	void LeaveTeam();
	void JoinTeamByPolicies(const TArray<enum class ETeamType>& JoinPolicies);
	void JoinTeamByName(const class FString& InTeamName);
	void JoinTeamByID(uint8 InTeamId);
	void JoinTeam(class ASolarTeamInfo* InTeam);
	bool IsWaitingLogin();
	bool IsUsingClanForFlag();
	bool IsUnfollowShortcutEnabled();
	bool IsTimeOutPlayer();
	bool IsTeammateWithLocalOrSpecTargetPlayer();
	bool IsTeammateWith(class ASolarPlayerState* Other);
	bool IsSpectatingOtherPlayer();
	bool IsSkydivingLeader();
	bool IsSkydivingCompleted();
	bool IsSkydiving();
	bool IsSameTeamWithLocalPlayer();
	bool IsReconnecting();
	bool IsPreStartSkydiving();
	bool IsPlayerWaitingForTeammatesHelp();
	bool IsPlayerTeam();
	bool IsPlayerOnline();
	bool IsPlayerOffline();
	bool IsPlayer();
	bool IsOutBySelf();
	bool IsOfflinePlayer();
	bool IsOBPlayer();
	bool IsMySkydivingLeader(int32 LeaderPosInTeam);
	bool IsMVP();
	bool IsMaxLevelInGame();
	bool IsLocalPlayerCameraFocusingMe();
	bool IsKickOutByServer();
	bool IsBuyingResurrection();
	bool IsBeingSpectated();
	bool IsAIPlayer();
	bool IsACheater();
	void InitInputType();
	void IncreaseReviveCount();
	void HideTeammatesHUD(TArray<class ASolarPlayerState*>& TeammateStates);
	bool HasSkydivingLeader();
	bool HasSettled();
	bool HasCheatSelf();
	int32 GetWeaponSettlmentExp(int32 Weaponid);
	int32 GetVehicleSkinID(int32 VehicleID);
	class FString GetUserID();
	TArray<int32> GetUsableTailFlameIds();
	void GetUsableSkinsForCharacter(int32 InCharacterId, TArray<int32>* Result, bool* bCharacterUsable);
	TArray<int32> GetUsableJetpackIds();
	float GetTotalReceivedDamage();
	float GetTotalCausedDamage();
	uint8 GetTeamRank();
	void GetTeammatePlayers(bool bIncludingSelf, TArray<class ASolarPlayerState*>* OutTeammates);
	class ASolarPlayerState* GetTeammatePlayerByPosInTeam(int32 InPosInTeam);
	int32 GetTeammateNum(bool bIncludeSelf);
	uint8 GetTeamID();
	class USolarGameModeStatisticsComponent* GetStatComponent();
	class ASolarSpectateInfo* GetSpectateTargetSpectateInfo();
	class ASolarPlayerState* GetSpectateTargetPlayerState();
	class ASolarCharacter* GetSpectateTargetCharacter();
	class ASolarSpectateInfo* GetSpectateInfo();
	class ASolarReplayPlayerController* GetSolarReplayPlayerController();
	class ASolarPlayerController* GetSolarPlayerController();
	class ASolarCharacter* GetSolarCharacter();
	class ASolarBotAIController* GetSolarBotAIController();
	int32 GetRankScore();
	int32 GetRankLevelID();
	class ASolarCharacter* GetPossessedCharacter();
	class UPlayerStatisticsData* GetPlayerStatData();
	enum class EPlayerNetStateInGame GetPlayerNetState();
	class FString GetPlayerNameWithoutUID();
	TArray<struct FMedalInfo> GetMedalInfo();
	int32 GetMaxShieldMatCountToDeathbox();
	class ASolarPlayerState* GetLocalPlayerState();
	class ASolarPlayerState* GetLocalOrSpecTargetPlayerState();
	class ASolarCharacter* GetLocalOrSpecTargetCharacter();
	class ASolarCharacter* GetLocalCharacter();
	int32 GetLegendRank();
	class ASolarPlayerState* GetKillerPlayerState();
	bool GetIsPlayerBattleEnd();
	float GetExpSettleModePunishRatio();
	int32 GetExpItemCount(int32 InLevelGap);
	int32 GetExpByBehavior(enum class EExpBehaviorType InBehaviorType, int32 InParamOne, int32 InParamTwo, float InDamage);
	int32 GetDriveVehicleID();
	struct FVector GetDeathBoxLocation();
	float GetCurrentTalentCDDuration();
	float GetCurrentTalentActiveDuration();
	void GetCurrentSkinForCharacter(int32 InCharacterId, bool* bCharacterUsable, int32* OutSkinId);
	struct FVector GetCharacterLocation();
	TArray<class FString> GetBuyResurrectionSavedTeammateIDArr();
	TArray<int32> GetBuyResurrectionSavedTeammateBonusArr();
	bool CostGold(int32 InCostedGold, bool NeedSyncToServer);
	void ClientNotifyKillNumChanged(int32 KillNumber, int32 SpreesNum);
	void ClientImmediatelyTeammatesSkinID(TArray<class ASolarPlayerState*>& InTeammates, TArray<int32>& InSkinID);
	void ClearTeammatesMark();
	bool CheckIfTeamLastVehicleLocationValid();
	bool CheckIfTeamIdValid();
	bool CheckIfSelfLastVehicleLocationValid();
	bool CheckIfPosInTeamValid();
	bool CheckIfMarkedPointInNavMapValid();
	bool CheckIfInactive();
	bool CheckIfDataValid();
	bool CheckIfBeInSpecifiedPlayerState(enum class EPlayerStateInGame InEPlayerStateInGame);
	bool CheckIfBeInSpecifiedCharacterState(enum class ECharacterStateInGame InECharacterStateInGame);
	bool CheckIfBattleVoiceIdValid();
	bool CheckGoldIsEnough(int32 InCostedGold);
	void ChangeTailFlameId(int32 InTailFlameId);
	void ChangeBagById(int32 InBagId);
	bool CanReviveItemPutInDeathBox();
	bool CanAcceptSkydivingLeaderTransferRequest(class ASolarPlayerState* RequesterPlayerState);
	bool CanAcceptSkydivingFollowRequest(class ASolarPlayerState* RequesterPlayerState);
	bool CanAcceptSkydivingFollowInvitation(class ASolarPlayerState* InviterPlayerState);
	int32 CalculateZomborg();
	float CalculateCharacterExp();
	float CalculateAccountExp();
	void AssignPosInTeam();
	void AddMarkedWorldData(int32 InPosInTeam, struct FWorldMarkData& InMarkData);
	void AddExperience(int32 InExp, enum class EExpBehaviorType InType);
};

// 0x70 (0xB48 - 0xAD8)
// Class Solarland.SCMPlayerState
class ASCMPlayerState : public ASolarPlayerState
{
public:
	enum class ESCMPlayerState                   BattleState;                                       // 0xAD8(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ESCMPlayerOutType                 PlayerOutType;                                     // 0xAD9(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ESCMPlayerType                    PlayerType;                                        // 0xADA(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ESCMPlayerGameRole                PlayerGameRole;                                    // 0xADB(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2401[0x14];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnSideChange;                                      // 0xAF0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<struct FSCMReplicateHostData>         ReplicateData;                                     // 0xB00(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2402[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ReviveStartTime;                                   // 0xB20(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2403[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ASolarPlayerState*                     RevivingTeammatePS;                                // 0xB28(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2404[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class USolarTaskComponent*                   TaskSystem;                                        // 0xB40(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class ASCMPlayerState* GetDefaultObj();

	void UpdateTaskInfo(struct FTaskUpdateInfo& InTaskInfo);
	void UpDateDataManager(TArray<struct FSCMReplicateHostData>& InReplicateData, bool bInit);
	void ServerBeginSpectate(class ASCMPlayerState* TargetPlayer);
	void RequestStartGame();
	void RequestSetWeaponTypeAvailableLuaCall(enum class EWeaponUIType WeaponUIType, bool bIsAvailable);
	void RequestSetWeaponTypeAvailable(enum class EWeaponUIType WeaponUIType, bool bIsAvailable);
	void RequestSetWeaponAvailableLuaCall(int32 Weaponid, bool bIsAvailable);
	void RequestSetWeaponAvailable(int32 Weaponid, bool bIsAvailable);
	void RequestSetVehicleTypeAvailableLuaCall(int32 VehicleTypeID, bool bIsAvailable);
	void RequestSetVehicleTypeAvailable(int32 VehicleTypeID, bool bIsAvailable);
	void RequestSetVehicleClassAvailableLuaCall(enum class EVehicleClass VehicleClass, bool bIsAvailable);
	void RequestSetVehicleClassAvailable(enum class EVehicleClass VehicleClass, bool bIsAvailable);
	void RequestSetUserSettingLuaCall(const class FString& Name, const class FString& Value);
	void RequestSetUserSetting(const class FString& Name, const class FString& Value);
	void RequestSetRoomPoolPrizeTypeLuaCall(int32 TypeID);
	void RequestSetRoomPoolPrizeType(int32 TypeID);
	void RequestSetRoomPasswdLuaCall(const class FString& Passwd);
	void RequestSetRoomPasswd(const class FString& Passwd);
	void RequestSetRoomNameLuaCall(const class FString& Name);
	void RequestSetRoomName(const class FString& Name);
	void RequestSetRoomLevelLimitLuaCall(int32 Level);
	void RequestSetRoomLevelLimit(int32 Level);
	void RequestSetInviteEnableLuaCall(bool bEnable);
	void RequestSetInviteEnable(bool bEnable);
	void RequestSetExchangeEnableLuaCall(bool bEnable);
	void RequestSetExchangeEnable(bool bEnable);
	void RequestKickPlayerOut(class ASCMPlayerState* Player);
	void RequestExchangeSidesAndPos(class ASCMPlayerState* PlayerA, class ASCMPlayerState* PlayerB);
	void RequestChangeSide(class ASCMPlayerState* Player, const class FString& NewSide, int32 NewPosInTeam);
	void RequesJoinOB(class ASCMPlayerState* Player);
	void OnUpdateLifeTime();
	void OnRep_RevivingTeammatePS(class ASolarPlayerState* LastRevivingTeammatePS);
	void OnRep_BattleState();
	void OnPlayerKilled(class ASCMPlayerState* KillerPlayer, struct FSolarPointDamageEvent* InDamageEvent, class AActor* InDamageCauser);
	void OnPlayerKill(class ASCMPlayerState* KilledPlayer, struct FSolarPointDamageEvent* InDamageEvent, class AActor* InDamageCauser);
	void NotifyUpdateCGMData(const class FString& InDataName);
	void NotifyClientUpdateDataManager(bool bInit);
	bool NeedConsiderRepData();
	bool IsPreJoinPlayer();
	void InitTaskInfo(struct FBattlePassInfo& InTaskInfo);
	TArray<struct FSCMReplicateHostData> GetReplicateDataArray();
	TArray<class ASCMPlayerState*> GetMySidePlayerList();
	TArray<class ASCMPlayerState*> GetMySideJobPlayerList();
	void CanPlayerBattle();
};

// 0x0 (0xB48 - 0xB48)
// Class Solarland.SCMSettlementPlayerState
class ASCMSettlementPlayerState : public ASCMPlayerState
{
public:

	static class UClass* StaticClass();
	static class ASCMSettlementPlayerState* GetDefaultObj();

};

// 0x0 (0x348 - 0x348)
// Class Solarland.ScopeFullScreenWidget
class UScopeFullScreenWidget : public USolarUserWidget
{
public:

	static class UClass* StaticClass();
	static class UScopeFullScreenWidget* GetDefaultObj();

};

// 0xC0 (0xF0 - 0x30)
// Class Solarland.ScoutEnemyConfig
class UScoutEnemyConfig : public UDataAsset
{
public:
	bool                                         bShowDebug;                                        // 0x30(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2405[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        ScoutMaxNum;                                       // 0x34(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TimeToScanEffect;                                  // 0x38(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxDetectionDistance;                              // 0x3C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             BondingBoxExtent;                                  // 0x40(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSupportHipFire;                                   // 0x48(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2406[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<enum class EWeaponScopeType, float>     BoxScaleRatioByScope;                              // 0x50(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TArray<enum class EObjectTypeQuery>          TargetOccBlockTypes;                               // 0xA0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 BlockWithMyTags;                                   // 0xB0(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 BlockWithEnemyTags;                                // 0xD0(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UScoutEnemyConfig* GetDefaultObj();

};

// 0x58 (0x80 - 0x28)
// Class Solarland.ScoutEnemyObject
class UScoutEnemyObject : public UObject
{
public:
	uint8                                        Pad_2407[0x48];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UScoutEnemyConfig*                     ScoutEnemyConfig;                                  // 0x70(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2408[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UScoutEnemyObject* GetDefaultObj();

};

// 0x118 (0x580 - 0x468)
// Class Solarland.SCustomGameState
class ASCustomGameState : public ASBattleGameState
{
public:
	uint8                                        Pad_240B[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class ESCMInGameState                   InGameState;                                       // 0x470(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_240C[0x1F];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FCustomRoomData                       CustomRoomData;                                    // 0x490(0x78)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	bool                                         bCustomRoomMode;                                   // 0x508(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_240D[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AGameManagerBase*>              GameManagers;                                      // 0x510(0x10)(Net, ZeroConstructor, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AGameDataManager*                      GameDataManager;                                   // 0x520(0x8)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AGameJobManager*                       GameJobManager;                                    // 0x528(0x8)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_240E[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UCGMManagerConfigComponent*            ManagerConfigComponent;                            // 0x540(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ACGFormula*                            InsFormula;                                        // 0x548(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class ASolarPlayerState*>             PlayersWithTrackingAbility;                        // 0x550(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class ASpatializeInfoTrack*>          TrackInfos;                                        // 0x560(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_240F[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASCustomGameState* GetDefaultObj();

	void SetRoomPoolPrizeType(int32 TypeID);
	void SetRoomPasssd(const class FString& Passwd);
	void SetRoomName(const class FString& Name);
	void SetRoomLevelLimit(int32 Level);
	void SetRoomEnableSwapPos(bool bIsEnabled);
	void SetRoomEnableInvite(bool bIsEnabled);
	void OnTournamentBattleEnd();
	void OnSidePosInTeamChange(const class FString& SideName);
	void OnSideListPostChanged();
	void OnSideListChange(TArray<struct FSCMSideData>& SideList);
	void OnServerCustomRoomDataReady();
	void OnRep_InGameState();
	void OnRep_GameManagerList();
	void OnRep_GameJobManager();
	void OnRep_GameDataManager();
	void OnRep_CustomRoomData();
	void OnPlayerBattleStateChange(class ASCMPlayerState* PlayerState);
	void OnOBPlayerListChange();
	void OnDataManagerPrepare();
	void OnCustomRoomDataChange(struct FCustomRoomData& InCustomRoomData);
	void NotifyVipPlayerJoin(int32 FlagID, uint8 VipType, const class FString& NickName, bool bCustomRoom, bool bInTournament);
	void NotifyRoomDataChanged();
	void MultiClientAllManagersOnRepDelegate__DelegateSignature();
	bool IsNeedCalculateTournamentPoints();
	bool IsInTournament();
	bool IsCustomRoomMode();
	bool IsAtNonSettlementStage();
	void InitKnockoutPointParams(struct FKnockoutParams* InParams);
	struct FTournamentData GetTournamentData();
	class UCGMManagerConfigComponent* GetManagerConfigComponent();
	class ACGFormula* GetFormula();
	struct FCustomRoomData GetCustomRoomData();
	class UCGMGameplayConfig* GetCGMGameplayConfig();
	void ClearCustomRoomData();
	int32 CalculateKnockoutPoints(int32 InTeamRank, int32 InKillNum, float InTotalDamage, float InTotalDamageTaken);
};

// 0x0 (0x580 - 0x580)
// Class Solarland.SCSettlementGameState
class ASCSettlementGameState : public ASCustomGameState
{
public:

	static class UClass* StaticClass();
	static class ASCSettlementGameState* GetDefaultObj();

};

// 0xD8 (0x108 - 0x30)
// Class Solarland.SolarGameModeWeaponAction
class USolarGameModeWeaponAction : public UBlueprintAsyncActionBase
{
public:
	FMulticastInlineDelegateProperty_            OnCompleted;                                       // 0x30(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_2413[0xC8];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarGameModeWeaponAction* GetDefaultObj();

	class USolarGameModeWeaponAction* SetCharacterWeaponBySeq(class UObject* WorldContextObject, class ASolarCharacter* TargetCharacter, bool bDestroyPrevWeapon, enum class EWeaponSlotType Slot, int32 ItemID);
	void OnWeaponCreated(enum class EWeaponSlotType SlotIndex, class ASolarPlayerWeapon* WeaponPtr, class USolarBackpackComponent* SolarBackpackComponent);
	void CreateWeaponAsync(enum class EWeaponSlotType SlotIndex, bool bDestroyPrevWeapon, struct FSolarItemData& InItemData, class USolarBackpackComponent* InSolarBackpackComponent);
};

// 0x0 (0x28 - 0x28)
// Class Solarland.SCustomGameModeLibrary
class USCustomGameModeLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class USCustomGameModeLibrary* GetDefaultObj();

	bool ValidateAirline(class UObject* InWorldContext, class FString* OutMsg, const struct FVector& InHalfBufferExtent, float DrawDebugTime);
	bool UnBindPlayerReconnectedGameEvent(class UObject* WorldContextObject, FDelegateProperty_& Deletage);
	bool UnbindDataChangeEventVector3(class UObject* WorldContextObject, enum class ESCMHostType HostType, const class FString& HostID, const class FString& DataName, FDelegateProperty_& Delegate);
	bool UnbindDataChangeEventString(class UObject* WorldContextObject, enum class ESCMHostType HostType, const class FString& HostID, const class FString& DataName, FDelegateProperty_& Delegate);
	bool UnbindDataChangeEventInt(class UObject* WorldContextObject, enum class ESCMHostType HostType, const class FString& HostID, const class FString& DataName, FDelegateProperty_& Delegate);
	bool UnbindDataChangeEventFloat(class UObject* WorldContextObject, enum class ESCMHostType HostType, const class FString& HostID, const class FString& DataName, FDelegateProperty_& Delegate);
	bool UnbindDataChangeEventByte(class UObject* WorldContextObject, enum class ESCMHostType HostType, const class FString& HostID, const class FString& DataName, FDelegateProperty_& Delegate);
	bool UnbindDataChangeEventBool(class UObject* WorldContextObject, enum class ESCMHostType HostType, const class FString& HostID, const class FString& DataName, FDelegateProperty_& Delegate);
	void TryActivateAbilityByTag(class USolarAbilitySystemComponent* SolarAbilitySystemComponent, struct FGameplayTag& AbilityTag, bool bAllowRemoteActivation);
	bool SwitchPlayerSideJob(class UObject* WorldContextObject, class ASCMPlayerState* PlayerA, class ASCMPlayerState* PlayerB);
	bool SwitchPlayerPosInTeam(class UObject* WorldContextObject, class ASCMPlayerState* PlayerA, class ASCMPlayerState* PlayerB);
	bool SwitchOBPlayerWithPlayer(class UObject* WorldContextObject, class ASCMPlayerState* OBPlayer, class ASCMPlayerState* Player);
	void StopSpectateOtherPlayer(class ASCMPlayerState* Player);
	void SpawnVehicleByIDAtTheSpecified(class UObject* WorldContextObject, int32 ID, const struct FTransform& Transform);
	void SideLogGameStateStatistics(class UObject* WorldContextObject, const class FString& LogName, const class FString& SideName, TMap<class FString, class FString>& LogValues);
	void SideEnterHeroPick(class UObject* WorldContextObject, const class FString& SideName);
	bool ShowTargetSettlementPage(class UObject* WorldContextObject);
	class UUserWidget* ShowSolarWidget(class UObject* WorldContextObject, TSubclassOf<class UUserWidget> WidgetClass, enum class EUIRoot UILayer, bool bInShowPersistent);
	bool ShowNextSettlementPage(class UObject* WorldContextObject);
	void ShowGameNoticeCustom(class UObject* WorldContextObject, const class FString& NoticeText, enum class ECustomNoticeType NoticeType, TSubclassOf<class UUINoticeBase> NoticeClass, float NoticeTime, enum class ECustomNoticeColor NoticeColor, class UPaperSprite* NoticeIcon);
	void ShowGameNoticeByID(class UObject* WorldContextObject, int32 NoticeId);
	bool SetWeaponParts(class UObject* WorldContextObject, class ASolarWeapon* TargetWeapon, struct FWeaponPartsData& Parts);
	void SetupBotDifficulty(TArray<class ASolarBotAIController*>& BotPlayers, int32 Difficulty);
	void SetSpectateConditions(class ASolarPlayerState* Player, struct FSpectateConditions& Conditions);
	bool SetPlayerDataVector3(class ASCMPlayerState* PlayerState, const class FString& DataName, struct FVector& InValue);
	bool SetPlayerDataString(class ASCMPlayerState* PlayerState, const class FString& DataName, const class FString& InValue);
	bool SetPlayerDataInt(class ASCMPlayerState* PlayerState, const class FString& DataName, int32 InValue);
	bool SetPlayerDataFloat(class ASCMPlayerState* PlayerState, const class FString& DataName, float InValue);
	bool SetPlayerDataByte(class ASCMPlayerState* PlayerState, const class FString& DataName, uint8 InValue);
	bool SetPlayerDataBool(class ASCMPlayerState* PlayerState, const class FString& DataName, bool InValue);
	void SetModifyColorGrading(bool InEnable, const struct FLinearColor& InGain, const struct FLinearColor& InSaturation, const struct FLinearColor& InContrast);
	bool SetDataVector3(class UObject* WorldContextObject, enum class ESCMHostType HostType, const class FString& HostID, const class FString& DataName, struct FVector& InValue);
	bool SetDataString(class UObject* WorldContextObject, enum class ESCMHostType HostType, const class FString& HostID, const class FString& DataName, const class FString& InValue);
	bool SetDataInt(class UObject* WorldContextObject, enum class ESCMHostType HostType, const class FString& HostID, const class FString& DataName, int32 InValue);
	bool SetDataFloat(class UObject* WorldContextObject, enum class ESCMHostType HostType, const class FString& HostID, const class FString& DataName, float InValue);
	bool SetDataByte(class UObject* WorldContextObject, enum class ESCMHostType HostType, const class FString& HostID, const class FString& DataName, uint8 InValue);
	bool SetDataBool(class UObject* WorldContextObject, enum class ESCMHostType HostType, const class FString& HostID, const class FString& DataName, bool InValue);
	bool SetBattleUISubItemVisibilityBySabotageGameMode(class UObject* WorldContextObject);
	void ServerSetCustomSpawnBlacklist(class UObject* WorldContextObject, TArray<int32>& InWeaponBlacklist, TArray<int32>& InWeaponWhitelist, TArray<int32>& InVehicleBlacklist, TArray<int32>& InVehicleWhitelist);
	void SaveGame(class UObject* WorldContextObject);
	bool ResurrectCharacter(class UObject* WorldContextObject, class ASolarCharacter* Character, struct FTransform& Transform, bool bClearAllItems, bool bEmptyEnergy, bool bReChargeJetToFull, bool bClearWeapons, enum class EPlayerResurrectType PlayerResurrectType);
	void RenumberAllPlayerPosInTeam(class UObject* WorldContextObject);
	void RemoveSpecificRankChangeEvent(class UObject* WorldContextObject, const class FString& RankName, int32 TargetRank, FDelegateProperty_& SpecificRankChangeEvent);
	void RemoveRankListChangeEvent(class UObject* WorldContextObject, const class FString& RankName, struct FSCMRankEventHandle* RankListEventHandle);
	void RemovePlayerData(class ASCMPlayerState* PlayerState, const class FString& DataName);
	void RemoveHostRankChangeEvent(class UObject* WorldContextObject, const class FString& RankName, const class FString& HostID, enum class ESCMHostType HostType, FDelegateProperty_& HostRankChangeEvent);
	void RemoveGameplayCue(class UAbilitySystemComponent* AbilitySystemComponen, const struct FGameplayTag& GameplayCueTag);
	void RemoveData(class UObject* WorldContextObject, enum class ESCMHostType HostType, const class FString& HostID, const class FString& DataName);
	class UActorMarkBase* RegisterWorldMarkOnPos(class UObject* WorldContextObject, TSubclassOf<class UActorMarkBase> InActorMarkClass, const struct FVector& Pos);
	bool PreAssignPlayerSideJob(class UObject* WorldContextObject, class ASCMPlayerState* Player, const class FString& InSide, const class FString& InJob, int32 PosInTeam);
	bool PlusData(class UObject* WorldContextObject, enum class ESCMHostType HostType, const class FString& HostID, const class FString& DataName, float InValue);
	void PlayersSettlement(class UObject* WorldContextObject, const TArray<class ASolarPlayerState*>& TargetPlayers);
	void PlayerReportServer(class UObject* WorldContextObject, class ASolarPlayerState* PS, enum class EStatisticsType StatisticsType, int32 InValue, bool IsIncrease);
	void PlayerOutBySelf(class UObject* WorldContextObject, enum class ESCMPlayerOutPath InPath);
	void PlayerLogGameStateStatistics(class UObject* WorldContextObject, const class FString& LogName, class ASCMPlayerState* PlayerState, TMap<class FString, class FString>& LogValues, bool IncludeStatisticsData);
	void PlayerEnterHeroPick(class UObject* WorldContextObject, class ASCMPlayerState* Player);
	void PlaceCharacter(class UObject* WorldContextObject, class ASolarCharacter* Character, struct FTransform& Transform, bool bClearAllItems, bool bEmptyEnergy, bool bReChargeJetToFull, bool bClearWeapons);
	void NotifyPlayerCheat(class UObject* InWorldContext, class ASCMPlayerState* InPlayer);
	void NotifyPlayerAbnormal(class UObject* InWorldContext, class ASCMPlayerState* InPlayer);
	void NotifyAIMgrSpawnFinished(class UObject* WorldContextObject);
	void NotifyAIMgrBattleStarted(class UObject* WorldContextObject);
	void LetPlayerOut(class UObject* WorldContextObject, const TArray<class ASCMPlayerState*>& TargetPlayers, enum class ESCMPlayerOutType OutType, bool bReportSettleReward, bool bGoSpectator, bool bRemoveSide, class FText OutReason);
	void LetBattleEnd(class UObject* WorldContextObject, enum class EBattleEndType BattleEndType);
	void LetAllPlayersOut(class UObject* WorldContextObject, enum class EBattleEndType BattleEndType);
	bool IsSideCanJoinAI(class UObject* WorldContextObject, const class FString& SideName);
	bool IsPlayingReplay(class UObject* WorldContextObject);
	bool IsMatching(class ASCMPlayerState* InPS);
	bool IsInPreparation(class UObject* WorldContextObject);
	bool IsEnablePlayerUpgrade(class UObject* WorldContextObject);
	bool IsEnableAITeamManager(class UObject* WorldContextObject);
	bool IsCustomRoomMode(class UObject* WorldContextObject);
	bool InsertWidgetToMapUISlot(class UObject* WorldContextObject, class UPanelSlot** OutResultSlot, class UWidget* InChildWidget, class FName PanelName, bool bReplaceOldWidget);
	bool InsertWidgetToBattleUISlot(class UObject* WorldContextObject, class UPanelSlot** OutResultSlot, class UWidget* InChildWidget, class FName PanelName, bool bReplaceOldWidget);
	bool InsertWidgetToBackpackUISlot(class UObject* WorldContextObject, class UPanelSlot** OutResultSlot, class UWidget* InChildWidget, class FName PanelName, bool bReplaceOldWidget);
	void InitializeSkydivingRelatedAbilities(class ASolarCharacter* SolarCharacter);
	void InitBotCruiseAIComp(class UAirlineCruiseComponent* AirlineCruiseComponent, class USBattleRoyaleGameModeAIComp* SBattleRoyaleGameModeAIComp);
	void InitAirLineAndCrusiseInfo(const TArray<class ASolarCharacter*>& CharacterArr, const struct FTransform& StartTransform, class UAirlineCruiseComponent* AirlineCruiseComponent, float Speed, const struct FVector2D& StartPoint, const struct FVector2D& EndPoint, const struct FVector2D& CanParachutePoint, const struct FVector2D& ForceParachutePoint, bool bCreateRootIfNull, TSubclassOf<class ASolarCapsuleActor> DefaultCapsuleActorClass);
	void InformBotVictory(TArray<class ASolarPlayerState*>& VictoryTeamBots);
	bool HasBlockBetweenUs(class AActor* A, class AActor* B, bool bIsVehicle);
	bool GetWeaponParts(class UObject* WorldContextObject, class ASolarWeapon* TargetWeapon, struct FWeaponPartsData* Parts);
	class ASolarWeapon* GetWeaponBySlot(class UObject* WorldContextObject, class ASolarCharacter* TargetCharacter, int32 Slot);
	void GetStartBattleRequestInfo(class UObject* WorldContextObject, struct FStartBattleRequestInfo* OutResult);
	bool GetSpecificRankData(class UObject* WorldContextObject, const class FString& RankName, int32 TargetRank, struct FSCMRankData* OutData);
	int32 GetSolarItemManagerAirDropRelatedInfo(class UObject* WorldContextObject, class ASolarSafeArea* SafeArea, int32 ChestID, TArray<struct FTransform>* TransformsArr);
	class UUserWidget* GetSolarDisplayWidget(class UObject* WorldContextObject, TSubclassOf<class UUserWidget> WidgetClass);
	class USolarSaveGame* GetSaveGame(class UObject* WorldContextObject);
	class ASolarSafeArea* GetSafeArea(class UObject* WorldContextObject);
	bool GetRankListData(class UObject* WorldContextObject, const class FString& RankName, int32 BeginRank, int32 EndRank, TArray<struct FSCMRankData>* OutResult);
	void GetPlayerStatisticData(class UObject* WorldContextObject, class ASolarPlayerState* PS, enum class EStatisticsType StatisticsType, int32* OutValue);
	class ASCMPlayerState* GetPlayerStateByCharacterOrController(class ASolarCharacter* Player, class ASCMPlayerController* Controller);
	class APawn* GetPlayerPawn(class ASCMPlayerState* Player, enum class EPlayerPawnType* OutType);
	bool GetPlayerDataVector3(class ASCMPlayerState* PlayerState, const class FString& DataName, struct FVector* OutValue);
	bool GetPlayerDataString(class ASCMPlayerState* PlayerState, const class FString& DataName, class FString* OutValue);
	bool GetPlayerDataInt(class ASCMPlayerState* PlayerState, const class FString& DataName, int32* OutValue);
	bool GetPlayerDataFloat(class ASCMPlayerState* PlayerState, const class FString& DataName, float* OutValue);
	bool GetPlayerDataByte(class ASCMPlayerState* PlayerState, const class FString& DataName, uint8* OutValue);
	bool GetPlayerDataBool(class ASCMPlayerState* PlayerState, const class FString& DataName, bool* OutValue);
	void GetPlayerBattleRequestInfo(class UObject* WorldContextObject, const class FString& InSolarPlayerID, struct FPlayerBattleRequestInfo* OutResult);
	TArray<class ASCMPlayerState*> GetOBPlayers(class UObject* WorldContextObject);
	class FString GetNoticeFormatText(class UObject* WorldContextObject, int32 InLocalizationID, TMap<class FString, class FString>& FormatContext);
	int32 GetMatchRuleID(class UObject* WorldContextObject);
	TArray<int32> GetMatchingMapIds(class UObject* WorldContextObject);
	bool GetMapDataVector3(class UObject* WorldContextObject, enum class ESCMHostType HostType, const class FString& HostID, const class FString& DataName, const class FString& InKey, struct FVector* OutValue);
	bool GetMapDataString(class UObject* WorldContextObject, enum class ESCMHostType HostType, const class FString& HostID, const class FString& DataName, const class FString& InKey, class FString* OutValue);
	bool GetMapDataInt(class UObject* WorldContextObject, enum class ESCMHostType HostType, const class FString& HostID, const class FString& DataName, const class FString& InKey, int32* OutValue);
	bool GetMapDataFloat(class UObject* WorldContextObject, enum class ESCMHostType HostType, const class FString& HostID, const class FString& DataName, const class FString& InKey, float* OutValue);
	bool GetMapDataByte(class UObject* WorldContextObject, enum class ESCMHostType HostType, const class FString& HostID, const class FString& DataName, const class FString& InKey, uint8* OutValue);
	bool GetMapDataBool(class UObject* WorldContextObject, enum class ESCMHostType HostType, const class FString& HostID, const class FString& DataName, const class FString& InKey, bool* OutValue);
	class ASCMPlayerState* GetLocalPlayer(class UObject* WorldContextObject);
	class AGameJobManager* GetJobManager(class UObject* WorldContextObject);
	void GetJobList(class UObject* WorldContextObject, const class FString& Side, TArray<class FString>* OutResult);
	enum class ESCMInGameState GetInGameState(class UObject* WorldContextObject);
	int32 GetHostRank(class UObject* WorldContextObject, const class FString& RankName, enum class ESCMHostType HostType, const class FString& HostID);
	void GetHostKeyArray(class UObject* WorldContextObject, enum class ESCMHostType HostType, TArray<class FString>* OutResult);
	class FString GetGameModeParam(class UObject* WorldContextObject, const class FString& InParamKey);
	int32 GetGameModeID(class UObject* WorldContextObject);
	int32 GetGameModeGroupId(class UObject* WorldContextObject);
	class AGameManagerBase* GetGameManager(class UObject* WorldContextObject, TSubclassOf<class AGameManagerBase> ManagerClass);
	class ADefenderManager* GetDefenderManager(class UObject* WorldContextObject, TSubclassOf<class ADefenderManager> ManagerClass);
	bool GetDataVector3(class UObject* WorldContextObject, enum class ESCMHostType HostType, const class FString& HostID, const class FString& DataName, struct FVector* OutValue);
	bool GetDataString(class UObject* WorldContextObject, enum class ESCMHostType HostType, const class FString& HostID, const class FString& DataName, class FString* OutValue);
	bool GetDataInt(class UObject* WorldContextObject, enum class ESCMHostType HostType, const class FString& HostID, const class FString& DataName, int32* OutValue);
	bool GetDataFloat(class UObject* WorldContextObject, enum class ESCMHostType HostType, const class FString& HostID, const class FString& DataName, float* OutValue);
	bool GetDataByte(class UObject* WorldContextObject, enum class ESCMHostType HostType, const class FString& HostID, const class FString& DataName, uint8* OutValue);
	bool GetDataBool(class UObject* WorldContextObject, enum class ESCMHostType HostType, const class FString& HostID, const class FString& DataName, bool* OutValue);
	class ACustomRoomManager* GetCustomRoomManager(class UObject* WorldContextObject);
	struct FCustomRoomData GetCustomRoomData(class UObject* WorldContextObject);
	float GetCurBattleTime(class UObject* WorldContextObject);
	class UCGMGameplayConfig* GetCGMGameplayConfig(class UObject* WorldContextObject);
	void GetAvatarSkillInfoWithID(class UObject* WorldContextObject, int32 CharacterId, struct FClassInfo* OutSkillInfo);
	void GetAvatarPortraitWithID(class UObject* WorldContextObject, int32 SkinId, class UTexture2D** OutAvatar);
	void GetAvatarIconWithID(class UObject* WorldContextObject, int32 InAvatarID, class UTexture2D** OutAvatar);
	void GetAvatarIcon(class ASolarPlayerState* InPS, class UTexture2D** OutAvatar);
	bool GetAILevelConfigCurrentMatch(class UObject* WorldContextObject, TMap<int32, int32>* AILevelConfig);
	int32 GetAIAccompanyTimelineID(class UObject* WorldContextObject);
	void FindPlayerSideJob(class UObject* WorldContextObject, const class FString& InSide, const class FString& InJob, int32* OutCountCurrent, int32* OutCountMax, int32* OutMatchCountCurrent, int32* OutMatchCountMax);
	TArray<class ASCMPlayerState*> FindPlayers(class UObject* WorldContextObject, TArray<uint8>& TeamIds, TArray<class FString>& TeamNames, TArray<enum class ESCMPlayerState>& States);
	class ASCMPlayerState* FindPlayerByPlayerID(class UObject* WorldContextObject, const class FString& PlayerId);
	class ASCMPlayerState* FindOBPlayerByPlayerID(class UObject* WorldContextObject, const class FString& PlayerId);
	TArray<class ASCMPlayerState*> FindBotAI(class UObject* WorldContextObject, TArray<uint8>& TeamIds, TArray<class FString>& TeamNames, TArray<enum class ESCMPlayerState>& States);
	void ExecuteGameplayCue(class UAbilitySystemComponent* AbilitySystemComponen, const struct FGameplayTag& GameplayCueTag, struct FGameplayCueParameters& GameplayCueParameters);
	void EnableSpeedUpEffect(class ASolarCharacter* Player, bool bEnable);
	void EnablePoisonEffect(class UObject* WorldContextObject, bool bEnable);
	class UTexture2D* DrawDebugPointInMapImg(class UObject* WorldContextObject, class UTexture2D* Tex, const class FString& Path, const TArray<struct FVector>& PointArrA, const struct FColor& PointAColor, float PointASize, const TArray<struct FVector>& PointArrB, const struct FColor& PointBColor, float PointBSize);
	int32 DeleteAIFromBattleForPlayer(class UObject* WorldContextObject, TArray<class ASCMPlayerState*>& AIPlayers);
	class UUserWidget* CreateSolarWidget(class UObject* WorldContextObject, TSubclassOf<class UUserWidget> WidgetClass, enum class EUIRoot UILayer, bool bInShowPersistent);
	class UWidgetComponent* CreateOverheadHUD(class ASolarCharacter* SolarCharacter, TSubclassOf<class UUserWidget> Widget);
	class ASCMPlayerState* CreateBotAISingle(class UObject* WorldContextObject, int32 CharacterId, struct FVector& SpawnLocation, TSubclassOf<class ASolarBotAIController> ControllerClass, int32 Difficulty, bool bAllowMix, const class FString& Side, const class FString& Job);
	TArray<class ASCMPlayerState*> CreateBotAI(class UObject* WorldContextObject, TMap<int32, int32>& TempleteMap, int32 SpawnNum, struct FVector& SpawnLocation, TSubclassOf<class ASolarBotAIController> ControllerClass, int32 Difficulty, bool bAllowMix, const class FString& Side, const class FString& Job);
	void CreateAirdropByOutcomeIDWithCharacter(class UObject* WorldContextObject, struct FTransform& SpawnTrans, TSubclassOf<class ASolarTreasureBoxSpawner> SolarTreasureBoxSpawnerClass, int32 OutcomeID, int32 ChestID, int32 ChestSpawnID, float AirDropSpawnDelay, class ASolarCharacter* InCharacter, float InStartHeight);
	void CreateAirdropByOutcomeIDWithAirship(class UObject* WorldContextObject, TSoftClassPtr<class ASolarAirship> SolarAirshipClass, struct FTransform& SpawnTrans, TSubclassOf<class ASolarTreasureBoxSpawner> SolarTreasureBoxSpawnerClass, int32 OutcomeID, int32 ChestID, int32 ChestSpawnID);
	void CreateAirdropByOutcomeID(class UObject* WorldContextObject, struct FTransform& SpawnTrans, TSubclassOf<class ASolarTreasureBoxSpawner> SolarTreasureBoxSpawnerClass, int32 OutcomeID, int32 ChestID, int32 ChestSpawnID, float AirDropSpawnDelay, float InStartHeight);
	void CreateAirdropByItemID(class UObject* WorldContextObject, struct FTransform& SpawnTrans, TSubclassOf<class ASolarTreasureBoxSpawner> SolarTreasureBoxSpawnerClass, const TArray<struct FSolarItemData>& ItemDataArr, int32 ChestID, int32 ChestSpawnID, float AirDropSpawnDelay, class ASolarCharacter* InCharacter, float InStartHeight);
	void CreateAirdropByCharacter(class UObject* WorldContextObject, struct FTransform& SpawnTrans, TSubclassOf<class ASolarTreasureBoxSpawner> SolarTreasureBoxSpawnerClass, const TArray<struct FSolarItemData>& ItemDataArr, int32 ChestID, int32 ChestSpawnID, float AirDropSpawnDelay, class ASolarCharacter* InCharacter, float InStartHeight);
	void CloseSupplement(class UObject* WorldContextObject);
	void CloseSolarWidget(class UObject* WorldContextObject, TSubclassOf<class UUserWidget> WidgetClass);
	void ClearPlayerDataChangeEvent(class ASCMPlayerState* PlayerState, const class FString& DataName);
	bool ClearMapUISlot(class UObject* WorldContextObject, class FName PanelName);
	void ClearDataChangeEvent(class UObject* WorldContextObject, enum class ESCMHostType HostType, const class FString& HostID, const class FString& DataName);
	void ClearCharacterAllItems(class ASolarCharacter* Player, bool bEmptyWeaponsOnly);
	bool ClearBattleUISlot(class UObject* WorldContextObject, class FName PanelName);
	bool ClearBackpackUISlot(class UObject* WorldContextObject, class FName PanelName);
	bool ClearBackpackItem(class ASolarCharacter* InCharacter, int32 InItemID);
	bool ChangePlayerSideJob(class UObject* WorldContextObject, class ASCMPlayerState* Player, const class FString& InSide, const class FString& InJob, int32 PosInTeam);
	bool ChangePlayerOB(class UObject* WorldContextObject, class ASCMPlayerState* Player);
	bool ChangePlayerCharacter(class ASCMPlayerState* TargetPlayer, int32 CharacterId, int32 SkinId);
	void CancelAbilityByTag(class USolarAbilitySystemComponent* SolarAbilitySystemComponent, struct FGameplayTag& AbilityTag);
	bool BindSpecificRankChangeEvent(class UObject* WorldContextObject, const class FString& RankName, int32 TargetRank, FDelegateProperty_& SpecificRankChangeEvent);
	bool BindRankListChangeEvent(class UObject* WorldContextObject, const class FString& RankName, struct FSCMRankEventHandle& RankListEventHandle);
	bool BindPlayerReconnectedGameEvent(class UObject* WorldContextObject, FDelegateProperty_& Deletage);
	bool BindPlayerDataChangeEventVector3(class ASCMPlayerState* PlayerState, const class FString& DataName, FDelegateProperty_& InEvent);
	bool BindPlayerDataChangeEventString(class ASCMPlayerState* PlayerState, const class FString& DataName, FDelegateProperty_& InEvent);
	bool BindPlayerDataChangeEventInt(class ASCMPlayerState* PlayerState, const class FString& DataName, FDelegateProperty_& InEvent);
	bool BindPlayerDataChangeEventFloat(class ASCMPlayerState* PlayerState, const class FString& DataName, FDelegateProperty_& InEvent);
	bool BindPlayerDataChangeEventByte(class ASCMPlayerState* PlayerState, const class FString& DataName, FDelegateProperty_& InEvent);
	bool BindPlayerDataChangeEventBool(class ASCMPlayerState* PlayerState, const class FString& DataName, FDelegateProperty_& InEvent);
	bool BindHostRankChangeEvent(class UObject* WorldContextObject, const class FString& RankName, const class FString& HostID, enum class ESCMHostType HostType, FDelegateProperty_& HostRankChangeEvent);
	bool BindDataChangeEventVector3(class UObject* WorldContextObject, enum class ESCMHostType HostType, const class FString& HostID, const class FString& DataName, FDelegateProperty_& InEvent);
	bool BindDataChangeEventString(class UObject* WorldContextObject, enum class ESCMHostType HostType, const class FString& HostID, const class FString& DataName, FDelegateProperty_& InEvent);
	bool BindDataChangeEventInt(class UObject* WorldContextObject, enum class ESCMHostType HostType, const class FString& HostID, const class FString& DataName, FDelegateProperty_& InEvent);
	bool BindDataChangeEventFloat(class UObject* WorldContextObject, enum class ESCMHostType HostType, const class FString& HostID, const class FString& DataName, FDelegateProperty_& InEvent);
	bool BindDataChangeEventByte(class UObject* WorldContextObject, enum class ESCMHostType HostType, const class FString& HostID, const class FString& DataName, FDelegateProperty_& InEvent);
	bool BindDataChangeEventBool(class UObject* WorldContextObject, enum class ESCMHostType HostType, const class FString& HostID, const class FString& DataName, FDelegateProperty_& InEvent);
	bool BeginSpectateOtherPlayer(class UObject* WorldContextObject, class ASolarPlayerState* Player, class ASolarPlayerState* TargetPlayerState);
	void BeginCruise(const TArray<class ASolarCharacter*>& CharacterArr, class UAirlineCruiseComponent* AirlineCruiseComponent, float* IntoParachuteZoneTime, float* ForceParachuteTime, float* CruiseEndTime);
	void AddGameplayCue(class UAbilitySystemComponent* AbilitySystemComponen, const struct FGameplayTag& GameplayCueTag, struct FGameplayCueParameters& GameplayCueParameters);
	enum class EItemModifyResult AddBackpackItem(class ASolarCharacter* InCharacter, int32 InItemID, int32 InItemNum, bool InDropItem);
};

// 0x18 (0x40 - 0x28)
// Class Solarland.SCustomizedGameModeManager
class USCustomizedGameModeManager : public UObject
{
public:
	uint8                                        Pad_24CC[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USolarGameMode_ElementManager*         ElementManager;                                    // 0x30(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_24CD[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USCustomizedGameModeManager* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Solarland.SCustomizedModeManagerInterface
class ISCustomizedModeManagerInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class ISCustomizedModeManagerInterface* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Solarland.SCustomMode_ElementInterface
class ISCustomMode_ElementInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class ISCustomMode_ElementInterface* GetDefaultObj();

	void ResetElement();
	void FollowTarget(class AActor* Target);
};

// 0x60 (0xB0 - 0x50)
// Class Solarland.SelfHealingCueNotify_Static
class USelfHealingCueNotify_Static : public UGameplayCueNotify_Static
{
public:
	struct FVector                               RepairUIOffset;                                    // 0x50(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_24CE[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UMaterialInstance>      RepairMaterial;                                    // 0x60(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UStaticMesh>            RepairMesh;                                        // 0x88(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class USelfHealingCueNotify_Static* GetDefaultObj();

};

// 0x30 (0x68 - 0x38)
// Class Solarland.SeparatedPackagesSettings
class USeparatedPackagesSettings : public UDeveloperSettings
{
public:
	class FString                                PackageSavedSubDirctory;                           // 0x38(0x10)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                PackageServerSubURL;                               // 0x48(0x10)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FSeparatedPackageInfo>         SeparatedPackagesInfo;                             // 0x58(0x10)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class USeparatedPackagesSettings* GetDefaultObj();

	bool FindSeparatedPackageInfoByID(int32 InPkgID, struct FSeparatedPackageInfo* OutInfo);
};

// 0xD0 (0xF8 - 0x28)
// Class Solarland.SeparatedPkgDownloader
class USeparatedPkgDownloader : public UObject
{
public:
	FMulticastInlineDelegateProperty_            OnDownloadInfoDetected;                            // 0x28(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnSepPkgDownloading;                               // 0x38(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnSepPkgReady;                                     // 0x48(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnSepPkgDownloadFailed;                            // 0x58(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnHashCheckFailedPkgDownloader;                    // 0x68(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	enum class EDownloadState                    DownloadState;                                     // 0x78(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_24D4[0x27];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	int64                                        StartTimestamp;                                    // 0xA0(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_24D5[0x50];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USeparatedPkgDownloader* GetDefaultObj();

	void StartGettingSeparatedPackage();
	bool ResumeDownloadSeparatedPaks();
	void ResumeDownloading();
	bool PauseDownloadSeparatedPaks();
	void OnPaksMountFailed();
	void OnPaksMountCompleted(int32 InLastMountOrder);
	void OnPaksFailed(enum class EFileDownloadError InErrorType, int32 InErrorCode, TArray<class FString>& Headers);
	void OnPackageListFailed(enum class EFileDownloadError InErrorType, int32 InErrorCode, TArray<class FString>& Headers);
	void OnHashCheckFailed();
	void OnEacPakCompleted(const class FString& LocalFilePath, int64 CDNServerTimeStamp);
	void OnEachPakDownloading(const class FString& Filename, int32 DownloadSize, int32 TotalSize, int32 CachedSize);
	void OnAllPaksCompleted(TArray<class FString>& LocalFilePaths, int64 CDNServerTimeStamp);
	int64 GetLocalTime();
	void CollectPaksFromList(const class FString& LocalFilePath, int64 CDNServerTimeStamp);
	void ClearEvents();
};

// 0x100 (0x128 - 0x28)
// Class Solarland.SeparatedPkgListDownloader
class USeparatedPkgListDownloader : public UObject
{
public:
	FMulticastInlineDelegateProperty_            OnSepPkgListDownloading;                           // 0x28(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnSepPkgListReady;                                 // 0x38(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_24D6[0xE0];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USeparatedPkgListDownloader* GetDefaultObj();

	void SepPkgListReady(int32 PkgID);
	void SepPkgDownloading(int32 PkgID, int32 ChunkDownloadedSize, int32 ChunkTotalSize);
};

// 0x128 (0x158 - 0x30)
// Class Solarland.SeparatedPkgManager
class USeparatedPkgManager : public UGameInstanceSubsystem
{
public:
	FMulticastInlineDelegateProperty_            OnFileListDownloaded;                              // 0x30(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnFileListFailed;                                  // 0x40(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnSepPkgDataInitFinish;                            // 0x50(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_24E3[0x90];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<int32, class USeparatedPkgDownloader*>  ActiveDownloaders;                                 // 0xF0(0x50)(Protected, NativeAccessSpecifierProtected)
	class USolarlandFileDownloader*              FileListDownloader;                                // 0x140(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_24E4[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USeparatedPkgManager* GetDefaultObj();

	bool TryStartDownloadHighResResources(class USeparatedPkgListDownloader** OutDownloder);
	void StartDownloadFileList(const class FString& InCurrentCDNURL);
	bool RequireSeparatedPackageListDownload(TArray<int32>& PkgIDList, class USeparatedPkgListDownloader** OutDownloader);
	bool RequireSeparatedPackageDownload(int32 InPkgID, class USeparatedPkgDownloader** OutDownloader, bool bIncludeMain, bool bIncludeOptional);
	void OnPackageFileListFailed(enum class EFileDownloadError InErrorType, int32 InErrorCode, TArray<class FString>& Headers);
	void OnPackageFileListDownload(const class FString& LocalFilePath, int64 CDNServerTimeStamp);
	bool IsSepareatedPkgListDownloading(TArray<int32>& PkgIDList);
	bool IsSepareatedPkgDownloading(int32& PkgID);
	bool IsSeparatedPackageListAvailable(TArray<int32>& PkgIDList);
	bool IsSeparatedPackageFileListExist();
	bool IsSeparatedPackageAvailable(int32 InPkgID);
	void InitPakIDToFileNameMap();
	bool IfSeparatedPakDownloaded(int32 PakID, bool bIsOptional);
	bool GetTotalSizeOfPak(int32 InPackageID, int32* OutTotalSize);
	class USeparatedPkgManager* GetSeparatedPackageManager(class UObject* WorldContextObject);
	int32 GetDownloadedSizeOfPak(int32 ChunkID);
	class USeparatedPkgDownloader* GetActiveDownloader(int32 InPkgID);
	void ClearSepPkgDownloader(int32 InPkgID);
	void ClearAllDownloaders();
	void AllOptionalPaksDownloaded(bool bAllDownloaded);
};

// 0x20 (0x90 - 0x70)
// Class Solarland.SequenceNode
class USequenceNode : public UActionNode
{
public:
	TArray<class UActionNode*>                   Nodes;                                             // 0x70(0x10)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UActionNode*>                   ExecutingNodes;                                    // 0x80(0x10)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class USequenceNode* GetDefaultObj();

	int32 TotalCount();
	class UActionNode* GetCurrentExecutingNode();
	class USequenceNode* Append(class UActionNode* Node);
};

// 0x0 (0x228 - 0x228)
// Class Solarland.SettlementFormula
class ASettlementFormula : public AActor
{
public:

	static class UClass* StaticClass();
	static class ASettlementFormula* GetDefaultObj();

	TArray<class FString> MakeStringForLuaByAnyStruct(class UObject* AnyStruct);
	int32 GetZomborg(struct FSettlementParam_Zomborg& InParam);
	void GetWeeklyChallenge(const class FString& InSolarPlayerID, TArray<class FString>* OutChallengeName, TArray<int32>* OutChallengeValue);
	int32 GetWeaponExp(struct FSettlementParam_WeaponExp& InParam);
	void GetStrategyGuideConditions(class ASolarPlayerState* InPS, TArray<int32>* OutResult);
	TArray<int32> GetShowPageIndexs(struct FSettlementParam_PageParam& InParam);
	TArray<class FString> GetSettlementItems(struct FSettlementParam_CommonExp& InParam);
	TArray<class FString> GetPersonalResultPlayerExData(const class FString& SolarPlayerID, class FString* PBName);
	float GetKDA(struct FSettlementParam_KDA& InParam);
	TArray<class FString> GetGroupResultPlayerExData(const class FString& SolarPlayerID, class FString* PBName);
	TArray<struct FSettlementParam_ExtraRewardInfo> GetExtraRewards(struct FSettlementParam_CommonExp& InParam);
	int32 GetCharaterExp(struct FSettlementParam_CommonExp& InParam, struct FSolarGameModeInfo& InGameInfo);
	int32 GetAccountExp(struct FSettlementParam_CommonExp& InParam, struct FSolarGameModeInfo& InGameInfo);
	float CalculateMVPScore(struct FSolarGameModeInfo& GameInfo, struct FSettlementParam_MVP& Param);
};

// 0x10 (0x568 - 0x558)
// Class Solarland.SettlementGameMode
class ASettlementGameMode : public ASolarGameMode
{
public:
	uint8                                        Pad_24EC[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASettlementGameMode* GetDefaultObj();

	void PostLevelLoad();
};

// 0x50 (0x80 - 0x30)
// Class Solarland.SettlementPageConfig
class USettlementPageConfig : public UDataAsset
{
public:
	int32                                        PageSkipIndex;                                     // 0x30(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_24ED[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<TSoftClassPtr<class USolarUWSettlementBase>> SettlementPage;                                    // 0x38(0x10)(Edit, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                EnterSettleSoundEvent;                             // 0x48(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                ExitSettleSoundEvent;                              // 0x58(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<int32>                                PageIndexs;                                        // 0x68(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsCustomRoom;                                      // 0x78(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_24EE[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USettlementPageConfig* GetDefaultObj();

};

// 0x28 (0x50 - 0x28)
// Class Solarland.SettlementStageManager
class USettlementStageManager : public UObject
{
public:
	uint8                                        Pad_24EF[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USolarGameInstanceBase*                SolarGameInstance;                                 // 0x30(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        CurStageIndex;                                     // 0x38(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        SettlementStageConfigID;                           // 0x3C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDataTable*                            SettlementConfig;                                  // 0x40(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ASettlementFormula*                    Formula;                                           // 0x48(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class USettlementStageManager* GetDefaultObj();

	void UpdateModeConfig(int32 InConfigID);
	void SkipToTarget();
	void ShowNextStage();
	void ShowDiePage();
	void Init();
	TSubclassOf<class USolarUWSettlementBase> GetSettlementUIClass();
	int32 GetSettlementStageID();
	struct FSettlementConfig GetSettlementConfigRow();
	class ASettlementFormula* GetFormula();
	class FString GetClassRelativePathName(class UClass* InClass);
	void CloseDiePage();
};

// 0x8 (0x270 - 0x268)
// Class Solarland.ShieldUpgradeItemShopAnimInst
class UShieldUpgradeItemShopAnimInst : public UAnimInstance
{
public:
	enum class EShieldUpgradeItemShopOpenState   OpenState;                                         // 0x268(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_24F0[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UShieldUpgradeItemShopAnimInst* GetDefaultObj();

};

// 0x0 (0x558 - 0x558)
// Class Solarland.SNonCombatGameMode
class ASNonCombatGameMode : public ASolarGameMode
{
public:

	static class UClass* StaticClass();
	static class ASNonCombatGameMode* GetDefaultObj();

};

// 0x8 (0x560 - 0x558)
// Class Solarland.SHomeGameMode
class ASHomeGameMode : public ASNonCombatGameMode
{
public:
	uint8                                        Pad_24F3[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASHomeGameMode* GetDefaultObj();

	class APawn* SpawnHomePawnAtTransformAndPossess(class AController* NewPlayer, struct FTransform& SpawnTransform);
	void OnSelfPawnSpawned();
	void OnReceiveRoomData();
	void InitFavoriteWeapons();
};

// 0x0 (0x448 - 0x448)
// Class Solarland.SNonCombatGameState
class ASNonCombatGameState : public ASolarGameState
{
public:

	static class UClass* StaticClass();
	static class ASNonCombatGameState* GetDefaultObj();

};

// 0x0 (0x448 - 0x448)
// Class Solarland.SHomeGameState
class ASHomeGameState : public ASNonCombatGameState
{
public:

	static class UClass* StaticClass();
	static class ASHomeGameState* GetDefaultObj();

};

// 0x28 (0x60 - 0x38)
// Class Solarland.ShootingTargetSettings
class UShootingTargetSettings : public UDeveloperSettings
{
public:
	float                                        ShootingTargetCleanupTime;                         // 0x38(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RingSegments;                                      // 0x3C(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RingSize;                                          // 0x40(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HitPointSize;                                      // 0x44(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIgnoreDPIScale;                                   // 0x48(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_24F4[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        HUDRingRadius;                                     // 0x4C(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             HUDRingOffset;                                     // 0x50(0x8)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             HUDTextOffsetOnRing;                               // 0x58(0x8)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UShootingTargetSettings* GetDefaultObj();

};

// 0x68 (0x380 - 0x318)
// Class Solarland.ShootingTargetComponent
class UShootingTargetComponent : public USceneComponent
{
public:
	TArray<struct FShootingTargetRing>           Rings;                                             // 0x318(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bAutoShowDebug;                                    // 0x328(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bAutoCleanup;                                      // 0x329(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_24F6[0x56];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UShootingTargetComponent* GetDefaultObj();

	void K2_OnScoreUpdated(float TotalScore, TArray<float>& RingScores);
	void K2_OnCleanup();
};

// 0x18 (0x40 - 0x28)
// Class Solarland.SimpleEffectController
class USimpleEffectController : public UActorEffectController
{
public:
	float                                        SmoothSpeed;                                       // 0x28(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TargetValue;                                       // 0x2C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bFinishOnReached;                                  // 0x30(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSmoothToValueOnStop;                              // 0x31(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_24F7[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TargetValueOnStop;                                 // 0x34(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_24F8[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USimpleEffectController* GetDefaultObj();

};

// 0x878 (0x8A8 - 0x30)
// Class Solarland.SingleWeaponConfig
class USingleWeaponConfig : public UDataAsset
{
public:
	struct FWeaponDebugFlag                      DebugFlag;                                         // 0x30(0x4)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	enum class ESolarWeaponBrand                 WeaponBrand;                                       // 0x34(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EWeaponType                       WeaponType;                                        // 0x35(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSupportSecondaryFire;                             // 0x36(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_24FB[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<class FString, float>                   CharacterStateWeightMap;                           // 0x38(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TArray<struct FMoveSpeedReduceCurveConfig>   MoveSpeedReduceCurveConfigs;                       // 0x88(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MoveSpeedReduceBonusInHipFire;                     // 0x98(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MoveSpeedReduceBonusInAdsHipFire;                  // 0x9C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FSolarWeaponFireSocketData>    FireSockets;                                       // 0xA0(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                          MultiMuzzleSocketNames;                            // 0xB0(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                          MultiBulletSocketNames;                            // 0xC0(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                          MultiCastShellSocketNames;                         // 0xD0(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                          MultiCastShellOnScopeSocketNames;                  // 0xE0(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsSingleWeapon;                                   // 0xF0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanSuspendBolt;                                   // 0xF1(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsHeavyFireWeapon;                                // 0xF2(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsFlamethrowerWeapon;                             // 0xF3(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseSpecialFireInputRespondConfig;                 // 0xF4(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSolarWeaponFireInputRespondConfig    FireInputRespondConfig;                            // 0xF5(0xA)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	bool                                         bSupportSingleShootMode;                           // 0xFF(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSupportAutoShootMode;                             // 0x100(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSupportBurstShootMode;                            // 0x101(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_24FC[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        AimOffsetReferenceAimDistance;                     // 0x104(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxSpread;                                         // 0x108(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinSpread;                                         // 0x10C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HipFireBaseSpread;                                 // 0x110(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ShoulderFireBaseSpread;                            // 0x114(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ADSBaseSpread;                                     // 0x118(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VhADSBaseSpread;                                   // 0x11C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWeaponShootConfig*                    WeaponShootConfig;                                 // 0x120(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCalcSpreadByStandardDistance;                     // 0x128(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_24FD[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        SpreadStandardDistance;                            // 0x12C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpreadStandardOriginMaxRange;                      // 0x130(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCalcSpreadByDistributionCurve;                    // 0x134(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_24FE[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRuntimeFloatCurve                    SpreadDistributionCurve;                           // 0x138(0x88)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TMap<class FString, float>                   SpreadCOPMap;                                      // 0x1C0(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	float                                        SpreadStatuSpeed;                                  // 0x210(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_24FF[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<class FString, float>                   SpreadStatuIncreaseCoefficient;                    // 0x218(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TMap<class FString, float>                   SpreadStatuReduceCoefficient;                      // 0x268(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TArray<struct FVector2D>                     CustomSpreadArray;                                 // 0x2B8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class USolarWeaponAT_CtrlFireBase> CtrlFireTaskClass;                                 // 0x2C8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class USolarWeaponAT_FireBase>   FireTaskClass;                                     // 0x2D0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAmmoConfig*                           PrimaryAmmo;                                       // 0x2D8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PrimaryAmmoIndex;                                  // 0x2E0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PrimaryAmmoCap;                                    // 0x2E4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAmmoConfig*                           SecondaryAmmo;                                     // 0x2E8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SecondaryAmmoIndex;                                // 0x2F0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SecondaryAmmoCap;                                  // 0x2F4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAmmoConfig*                           UpgradedSecAmmo;                                   // 0x2F8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          UpgradedSecAmmoColor;                              // 0x300(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bNeedOverload;                                     // 0x310(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2500[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        OverloadMaxValue;                                  // 0x314(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        NormalOverloadCoolingRate;                         // 0x318(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2501[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UCurveFloat*                           NormalOverloadCoolingCurve;                        // 0x320(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OverloadCoolingPeriod;                             // 0x328(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2502[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UCurveFloat*                           OverloadReduceRateCurve;                           // 0x330(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OverloadWarningRate;                               // 0x338(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WeaponSwitchTime;                                  // 0x33C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanAutoFire;                                      // 0x340(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2503[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        AutoFireDelayMs;                                   // 0x344(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AutoFireEndDelayMs;                                // 0x348(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AutoFireCompensationRate;                          // 0x34C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanAimAssist;                                     // 0x350(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2504[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FWeaponAssistAimWeaponConfigAll       AssistAimWeaponConfigAll;                          // 0x358(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FWeaponAssistAimWeaponConfigAll       AssistAimWeaponConfigAllGamepad;                   // 0x3B8(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FSolarWeaponFPPData                   DefaultFPPData;                                    // 0x418(0x68)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TArray<struct FSolarWeaponFPPConfig>         FPPConfigByAspectRatioArray;                       // 0x480(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bOneKeyScope;                                      // 0x490(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2505[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ScopeOpenTime;                                     // 0x494(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ScopeOpenFOVTimeScale;                             // 0x498(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2506[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<enum class EWeaponPartType>           SupportChangeTypeArray;                            // 0x4A0(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<int32>                                DefaultPartsArray;                                 // 0x4B0(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RecoilFireTimeWithScope;                           // 0x4C0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RecoilRecoverTimeWithScope;                        // 0x4C4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RecoilMagnitudeWithScope;                          // 0x4C8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2507[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UCurveFloat*                           RecoilCurveWithScope;                              // 0x4D0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RecoilSkipSequenceSumWithScope;                    // 0x4D8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2508[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FVector2D>                     RecoilCurveSequenceWithScope;                      // 0x4E0(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RecoilFireTimeNoScope;                             // 0x4F0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RecoilRecoverTimeNoScope;                          // 0x4F4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RecoilMagnitudeNoScope;                            // 0x4F8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2509[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UCurveFloat*                           RecoilCurveNoScope;                                // 0x500(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RecoilSkipSequenceSumNoScope;                      // 0x508(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_250A[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FVector2D>                     RecoilCurveSequenceNoScope;                        // 0x510(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsGatling;                                        // 0x520(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_250B[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        GatlingRotaryAcceleration;                         // 0x524(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GatlingFireRotarySpeed;                            // 0x528(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GatlingMaxRotarySpeed;                             // 0x52C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GatlingHoldTime;                                   // 0x530(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GatlingRotaryAttenuation;                          // 0x534(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GatlingScatteringMagnification;                    // 0x538(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_250C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UParticleSystem*                       GatlingOverHeatSmokeEffect;                        // 0x540(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TSubclassOf<class UGameplayAbility>>  GasAbilities;                                      // 0x548(0x10)(Edit, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HeadshotDamageFactor;                              // 0x558(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  Socket;                                            // 0x55C(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  LeftHandIKTargetSocket;                            // 0x564(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  LeftHandIKTargetFemaleSocket;                      // 0x56C(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               LeftHandIkEffectLocation;                          // 0x574(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               LeftHandIkJointLocation;                           // 0x580(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               LeftHandIkJointLocationForGunIdle;                 // 0x58C(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               LeftHandIkJointLocationForGunIdleWhenCrouch;       // 0x598(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               RightHandIkEffectLocation;                         // 0x5A4(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               RightHandIkJointLocation;                          // 0x5B0(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLeftHandGripConfig                   LeftHandGripRotationConfig;                        // 0x5BC(0x84)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FLeftHandGripConfig                   LeftHandGripRotationConfigForGunIdle;              // 0x640(0x84)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	bool                                         bShowCoolDownWidget;                               // 0x6C4(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_250D[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UCrossHairWidget>          Crosshair;                                         // 0x6C8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UFeedbackWidget>           FeedbackWidget;                                    // 0x6D0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSolarWeaponCrosshairData             CrosshairWidgetData;                               // 0x6D8(0x38)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                       WeaponIcon;                                        // 0x710(0x18)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSlateBrush                           PrimaryFireBrush;                                  // 0x728(0x98)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	int32                                        PrimaryFireTxt;                                    // 0x7C0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_250E[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSlateBrush                           SecondaryFireBrush;                                // 0x7C8(0x98)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	int32                                        SecondaryFireTxt;                                  // 0x860(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_250F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                WeaponTextType;                                    // 0x868(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                       ItemIcon;                                          // 0x878(0x18)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                       UpgradeParticleSystem;                             // 0x890(0x18)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class USingleWeaponConfig* GetDefaultObj();

	void InitSupportChangeTypeArray(const TArray<int32>& Data);
	void InitStatuSpreadCoefficient(TArray<class FString>& Increasekeys, TArray<float>& Increasevalues, TArray<class FString>& Reducekeys, TArray<float>& Reducevalues);
	void InitSpreadData(float Max, float Min, float Hipbase, float Adsbase, float Vhadsbase, float Statuspeed);
	void InitSpreadCOPMap(TArray<class FString>& Keys, TArray<float>& Values);
	void InitScopeData(bool Onekey, float Scopetime);
	void InitOverload(bool InAllow, float InMax, float InNormalCoolingRate, float InCoolingPeriod, float InOverloadWarningRate);
	void InitBase(int32 WPType);
	bool GetIsSupportPart(enum class EWeaponPartType Type);
};

// 0x30 (0x60 - 0x30)
// Class Solarland.SkeletalMeshComponentConfig
class USkeletalMeshComponentConfig : public UDataAsset
{
public:
	struct FSoftObjectPath                       AnimClass;                                         // 0x30(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                       SkeletalMesh;                                      // 0x48(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class USkeletalMeshComponentConfig* GetDefaultObj();

};

// 0x68 (0x98 - 0x30)
// Class Solarland.SkillBPAndExtraConfig
class USkillBPAndExtraConfig : public UDataAsset
{
public:
	struct FSoftObjectPath                       SkillBlueprint;                                    // 0x30(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SkillLevel;                                        // 0x48(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SkillItemQuality;                                  // 0x4C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        InnerSkillDescription;                             // 0x50(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ShortSkillDescription;                             // 0x54(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SkillCD;                                           // 0x58(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        BuffUIPriority;                                    // 0x5C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DynamicBuffRemainTime;                             // 0x60(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2510[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSoftObjectPath                       SkillIcon;                                         // 0x68(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                       GrowIcon;                                          // 0x80(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class USkillBPAndExtraConfig* GetDefaultObj();

};

// 0xA0 (0xD0 - 0x30)
// Class Solarland.SkillConfig
class USkillConfig : public UDataAsset
{
public:
	int32                                        SkillName;                                         // 0x30(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SkillType;                                         // 0x34(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SkillDescription;                                  // 0x38(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2511[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSoftObjectPath                       SkillIcon;                                         // 0x40(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                KillIcon;                                          // 0x58(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SkillVoiceDelay;                                   // 0x68(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        CanCancelPhaseFlag;                                // 0x6C(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2512[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        CanCancelContinuousBegin;                          // 0x70(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CanCancelContinuousEnd;                            // 0x74(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        VoiceTriggerTiming;                                // 0x78(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2513[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<int32, class USkillBPAndExtraConfig*>   SkillExtraConfigByPlayerLevel;                     // 0x80(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class USkillConfig* GetDefaultObj();

};

// 0x0 (0x348 - 0x348)
// Class Solarland.SkillScanWidget
class USkillScanWidget : public USolarUserWidget
{
public:

	static class UClass* StaticClass();
	static class USkillScanWidget* GetDefaultObj();

	void OnCameraRight(float Value);
	void OnCameraForward(float Value);
};

// 0x188 (0x1B8 - 0x30)
// Class Solarland.SkydiveConfig
class USkydiveConfig : public UDataAsset
{
public:
	float                                        DefaultFallingSpeed;                               // 0x30(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinFallingSpeed;                                   // 0x34(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FallingBrakingDeceleration;                        // 0x38(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2514[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRuntimeFloatCurve                    FlyingForwardPitchMappingCurve;                    // 0x40(0x88)(Edit, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                    MaxFlyingForwardSpeedCurve;                        // 0xC8(0x88)(Edit, NativeAccessSpecifierPublic)
	float                                        MaxFlyingSidewardSpeed;                            // 0x150(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxFlyingAcceleration;                             // 0x154(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinFlyingBrakingDeceleration;                      // 0x158(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxFlyingBrakingDeceleration;                      // 0x15C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FlyingRotationSmoothSpeedYaw;                      // 0x160(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FlyingRotationSmoothSpeedPitch;                    // 0x164(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FlyingRotationSmoothSpeedYawOnFollowing;           // 0x168(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FlyingRotationSmoothSpeedPitchOnFollowing;         // 0x16C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LandingHeight;                                     // 0x170(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LandingFallingSpeed;                               // 0x174(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LandingFallingBrakingDeceleration;                 // 0x178(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LandingMaxFlyingSpeed;                             // 0x17C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LandingFlyingAcceleration;                         // 0x180(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2515[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FName>                          LandingIgnoredActorTags;                           // 0x188(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FVector>                       FollowFormation;                                   // 0x198(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SmoothTimeToCatchUpWithLeaderOnBeginning;          // 0x1A8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCharacterMovementNetworkOptions      NetworkOptions;                                    // 0x1AC(0xC)(Edit, NoDestructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class USkydiveConfig* GetDefaultObj();

};

// 0x20 (0x368 - 0x348)
// Class Solarland.SkydivingFollowWidget
class USkydivingFollowWidget : public USolarUserWidget
{
public:
	uint8                                        Pad_2518[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USkydivingFollowWidget* GetDefaultObj();

	void UpdateRouletteOpenState(bool bIsOpen);
	void UpdateRouletteForbidStateForPosInTeam(int32 PosInTeam, bool bForbid);
	void ToggleRoulette();
	void SwitchToUnfollow();
	void SwitchToTransfer(float CooldownStartTime, float CooldownEndTime);
	void SwitchToFollow();
	void SetRouletteVisibility(bool bVisible);
	void SetRelationButtonGroupVisibility(bool bVisible);
	void SetParachuteButtonVisibility(bool bVisible);
	void SetCruisePlayerNumVisibility(bool bVisible);
	void OnSkydivingRouletteSelect(int32 PosInTeam);
	void OnCruiseCharacterCountUpdated(int32 TotalCount, int32 CruiseCount);
	void NotifyCannotFollowTeammateAt(int32 PosInTeam, bool bSelfHasFollower);
	void InitRouletteMemberPosition(TArray<int32>& PositionArray);
	void ExpandRoulette();
	void CollapseRoulette();
};

// 0x158 (0x3E0 - 0x288)
// Class Solarland.SummonItemBase
class ASummonItemBase : public APawn
{
public:
	uint8                                        Pad_251C[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UAkComponent*                          AkAudioComponent;                                  // 0x2A8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  HPBar;                                             // 0x2B0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FSpawnedActorHandle                   CachedActorHandle;                                 // 0x2B8(0x4)(NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class ASolarCharacter>        SourceSummoner;                                    // 0x2BC(0x8)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ESolarSummonDeathReason           DeathReason;                                       // 0x2C4(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_251D[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        CurrentHealth;                                     // 0x2C8(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bDead;                                             // 0x2CC(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_251E[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        FunctionalTimerMax;                                // 0x2D0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FunctionalTimerDelta;                              // 0x2D4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_251F[0x14];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               CenterOffset;                                      // 0x2EC(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayEffectSpecHandle             GEToSelfHandle;                                    // 0x2F8(0x10)(BlueprintVisible, Protected, ExposeOnSpawn, NativeAccessSpecifierProtected)
	struct FGameplayEffectSpecHandle             GEToTargetHandle;                                  // 0x308(0x10)(BlueprintVisible, Protected, ExposeOnSpawn, NativeAccessSpecifierProtected)
	float                                        MaxHealth;                                         // 0x318(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ReducedHealth;                                     // 0x31C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DelayDestroyTime;                                  // 0x320(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bTeammateDamage;                                   // 0x324(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bSuicideWithSummonerChange;                        // 0x325(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2520[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TimeDuration;                                      // 0x328(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bOnlyOne;                                          // 0x32C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bEnableHPBar;                                      // 0x32D(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bHPDefaultVisible;                                 // 0x32E(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2521[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  HPBarTagName;                                      // 0x330(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  HPBarPercentName;                                  // 0x338(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  HPBarColorName;                                    // 0x340(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                          HPBarColorTeammate;                                // 0x348(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                          HPBarColorEnemy;                                   // 0x358(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        HPBarMaterialIndex;                                // 0x368(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               CenterLocationOffset;                              // 0x36C(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DestroyDeathWithinSeconds;                         // 0x378(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bSupportAssistAim;                                 // 0x37C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2522[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FWeaponAssistAimTargetConfig          AssistAimTargetConfig;                             // 0x380(0x48)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	bool                                         bCanAffectedByEMP;                                 // 0x3C8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bShowDamageText;                                   // 0x3C9(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2523[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USolarSpawnAdjustConfig*               SpawnAdjustConfig;                                 // 0x3D0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bDebug;                                            // 0x3D8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2524[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASummonItemBase* GetDefaultObj();

	void SwitchFunctionalTimer(bool InbEnable, float InMaxTime);
	void Suicide();
	bool RequestPlaySoundByTeam(TMap<enum class ESolarSummonSoundType, struct FSolarSummonSoundData>& InSoundData);
	bool RequestPlaySound(TArray<class FString>& InSoundData);
	void ReceiveUpdateHealthEvent(float InCurrentHealthRate);
	void ReceiveUpdateFunctionalTimerEvent(float InTimerRate);
	void ReceiveDeathEvent(enum class ESolarSummonDeathReason InDeathReason);
	void OnSourceCharacterChange();
	void OnRep_Dead();
	void OnRep_CurrentHealth();
	bool IsDead();
	TWeakObjectPtr<class ASolarCharacter> GetSourceSummoner();
	float GetMaxHealth();
	float GetCurrentHealth();
	class UClass* GetClassType();
};

// 0xB8 (0x498 - 0x3E0)
// Class Solarland.SkywardDiveLauncher
class ASkywardDiveLauncher : public ASummonItemBase
{
public:
	class USkeletalMeshComponent*                GroundMesh;                                        // 0x3E0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBoxComponent*                         TriggerVolume;                                     // 0x3E8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpawnTimeConfig;                                   // 0x3F0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2527[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UParticleSystem*                       AvailableDeviceParticle;                           // 0x3F8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       SpawnBeamParticle;                                 // 0x400(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                SpawnSoundName;                                    // 0x408(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                         SpawnAnim;                                         // 0x418(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FLaunchDeviceInfo>             LauncherDeviceArray;                               // 0x420(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CharacterLaunchPadHeightOffset;                    // 0x430(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LowHealthPercentage;                               // 0x434(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       LowHealthParticle;                                 // 0x438(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       DeathExplodeParticle;                              // 0x440(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                DeathExplodeSoundName;                             // 0x448(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystemComponent*              SpawnBeamEffect;                                   // 0x458(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystemComponent*              LowHealthEffect;                                   // 0x460(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bNewlySpawned;                                     // 0x468(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2528[0x2F];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASkywardDiveLauncher* GetDefaultObj();

	void OnTriggerVolumeOverlapedEnd(class UPrimitiveComponent* OverlappedComp, class AActor* Other, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void OnTriggerVolumeOverlapedBegin(class UPrimitiveComponent* OverlappedComp, class AActor* Other, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
};

// 0xE0 (0x308 - 0x228)
// Class Solarland.SolarAbility
class ASolarAbility : public AActor
{
public:
	TSubclassOf<class ASolarAbility>             MyAbilityClass;                                    // 0x228(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TSubclassOf<class USolarAbilityEffect>> AbilityEffectClasses;                              // 0x230(0x10)(Edit, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class ASolarCharacter>        AbilitySourceCharacter;                            // 0x240(0x8)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_252F[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            SpawnTransform;                                    // 0x250(0x30)(BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                         InstancedAbility;                                  // 0x280(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         DoNotAutoApply;                                    // 0x281(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ApplyToSource;                                     // 0x282(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         RadialAbility;                                     // 0x283(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RadialAbilityRadius;                               // 0x284(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bRadialIgnoreCollision;                            // 0x288(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bRadialIgnoreVehicle;                              // 0x289(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         CheckSourceToTargetCollision;                      // 0x28A(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         EnableAbilityDebug;                                // 0x28B(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bActivated;                                        // 0x28C(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2530[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                ExtraInfo;                                         // 0x290(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                InitiatorActor;                                    // 0x2A0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkComponent*                          AkAudioComponent;                                  // 0x2A8(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarAkGameObject*                    SolarAkGameObject;                                 // 0x2B0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<class FString, float>                   EffectParams;                                      // 0x2B8(0x50)(Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class ASolarAbility* GetDefaultObj();

	void WeaponApplyAbility(class UObject* WorldContextObject, TSubclassOf<class ASolarAbility> SolarAbilityClass, class AActor* SourceActor, class AActor* TargetActor, struct FVector& HitLocation, class FName& HitBoneName, float Scale, struct FRotator& ProjRotator, const class FString& InExtarInfo, class UPrimitiveComponent* HitComponent);
	void StopSound();
	void StaticRemoveSolarAbilityFrom(TSubclassOf<class ASolarAbility> AbilityClass, class AActor* AffectingActor);
	void StaticApplySolarAbilityToWithHitResult(TSubclassOf<class ASolarAbility> AbilityClass, class AActor* AffectingActor, struct FHitResult& HitResult, float Scale, const class FString& InExtarInfo, class AActor* SourceAcotr, class AActor* Initiator, bool ValidSourceLocation, struct FVector& SourceLocation);
	void StaticApplySolarAbilityTo(TSubclassOf<class ASolarAbility> AbilityClass, class AActor* AffectingActor, class AActor* SourceAcotr, class AActor* Initiator, bool ValidSourceLocation, struct FVector& SourceLocation, struct FVector& HitLocation, class FName& HitBoneName, float Scale, const class FString& InExtraInfo, class UPrimitiveComponent* HitComponent);
	void ServerSetActivated();
	void RestoreSound();
	void RemoveSolarAbilityFrom(class AActor* ApplyToActor);
	void PlaySound();
	void PauseSound();
	bool IsLocalControl();
	bool InSameTeam();
	void InitSolarAkGameObject(class UActorComponent* Component, bool bReset);
	bool CheckActor(class AActor* SourceActor, class AActor* TargetActor);
	void ApplySolarAbilityTo(class AActor* ApplyToActor, class AActor* SourceActor);
};

// 0xF0 (0x1A0 - 0xB0)
// Class Solarland.SolarAbilityComponent
class USolarAbilityComponent : public UActorComponent
{
public:
	uint8                                        Pad_2531[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<TSubclassOf<class USolarAbilityEffect>, class USolarAbilityEffect*> AppliedEffectMap;                                  // 0xB8(0x50)(NativeAccessSpecifierPublic)
	TMap<TSubclassOf<class USolarAbilityEffect>, class USolarAbilityEffect*> AppliedEffectsThisTick;                            // 0x108(0x50)(NativeAccessSpecifierPublic)
	TArray<struct FReplicateEffectData>          ReplicateEffectDatas;                              // 0x158(0x10)(Net, ZeroConstructor, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2532[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         CharacterWeaponDisable;                            // 0x170(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         CharacterMarked;                                   // 0x171(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2533[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MoveSpeedCoeffient;                                // 0x174(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                    OriginalMaterial;                                  // 0x178(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ShieldRechargeCostCoefficient;                     // 0x180(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2534[0x1C];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarAbilityComponent* GetDefaultObj();

	void OnRep_SpeedCoeffient();
	void OnRep_ReplicateEffectData();
	int32 GetCharacterLevel();
};

// 0x170 (0x198 - 0x28)
// Class Solarland.SolarAbilityEffect
class USolarAbilityEffect : public UObject
{
public:
	struct FSoftObjectPath                       EffectIconPath;                                    // 0x28(0x18)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FSolarAttributeModifier>       AttributeModifiers;                                // 0x40(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAllowMultiple;                                    // 0x50(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2535[0xBF];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class ASolarCharacterBase*                   AbilityEffectAffectingCharacter;                   // 0x110(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarAbilityComponent*                AbilityEffectAffectingAbilityComponent;            // 0x118(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ASolarAbility*                         AffectingAbility;                                  // 0x120(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                ExtraInfo;                                         // 0x128(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class FString, float>                   AttributeParamMap;                                 // 0x138(0x50)(NativeAccessSpecifierPublic)
	uint8                                        Pad_2536[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarAbilityEffect* GetDefaultObj();

};

// 0xF8 (0x13F0 - 0x12F8)
// Class Solarland.SolarAbilitySystemComponent
class USolarAbilitySystemComponent : public UAbilitySystemComponent
{
public:
	uint8                                        Pad_2541[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USolarGameplayAbilitySet*              DefaultAbilitySet;                                 // 0x1300(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2542[0xB0];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class USkeletalMeshComponent*                OptionMeshForRepMontage;                           // 0x13B8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPendingMontageRepForMesh;                         // 0x13C0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2543[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FGameplayAbilityLocalAnimMontageForMesh> LocalAnimMontageInfoForMeshes;                     // 0x13C8(0x10)(ZeroConstructor, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FGameplayAbilityRepAnimMontageForMesh> RepAnimMontageInfoForMeshes;                       // 0x13D8(0x10)(Net, ZeroConstructor, RepNotify, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2544[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarAbilitySystemComponent* GetDefaultObj();

	struct FGameplayAbilitySpecHandle UpgradeAbilityLevelBySpec(const struct FGameplayAbilitySpecHandle& AbilitySpecHandle, bool bForNextActivate, int32 LevelUp);
	void UpgradeAbilityLevelByClass(TSubclassOf<class UGameplayAbility> AbilityClass, bool bForNextActivate, int32 LevelUp);
	void UpgradeAbilityLevel(const struct FGameplayTagContainer& AbilityTags, bool bForNextActivate, int32 LevelUp);
	void ServerCurrentMontageSetPlayRateForMesh(class USkeletalMeshComponent* InMesh, class UAnimMontage* ClientAnimMontage, float InPlayRate);
	void ServerCurrentMontageSetNextSectionNameForMesh(class USkeletalMeshComponent* InMesh, class UAnimMontage* ClientAnimMontage, float ClientPosition, class FName SectionName, class FName NextSectionName);
	void ServerCurrentMontageJumpToSectionNameForMesh(class USkeletalMeshComponent* InMesh, class UAnimMontage* ClientAnimMontage, class FName SectionName);
	void PostDefaultAbilitiesGranted();
	void OnRep_ReplicatedAnimMontageForMesh();
	void OnNotifiedTagChanged(struct FGameplayTag& Tag, bool bAdded);
	void OnInternalMetaAttributeUpdate(class USolarMetaAttributeSet* MetaAttributeSet, struct FGameplayModifierEvaluatedData* EvaluatedData, struct FGameplayEffectSpec& EffectSpec, struct FMetaAttributeUpdateEvent* UpdateEvent);
	void NotifySourceMetaAttributeExecution(struct FMetaAttributeUpdateEvent& UpdateEvent);
	void K2_RemoveGameplayCueLocalShared(class UObject* Instigator, const struct FGameplayTag& GameplayCueTag, const struct FGameplayCueParameters& GameplayCueParameters);
	void K2_RemoveGameplayCueLocal(const struct FGameplayTag& GameplayCueTag, const struct FGameplayCueParameters& GameplayCueParameters);
	int32 K2_RemoveActiveEffectsWithTag(const struct FGameplayTag& GameplayTag);
	struct FGameplayAbilitySpecHandle K2_GiveAbilityAndActivateOnce(TSubclassOf<class UGameplayAbility> AbilityClass, int32 Level);
	struct FGameplayAbilitySpecHandle K2_GiveAbility(TSubclassOf<class UGameplayAbility> AbilityClass, int32 Level);
	void K2_GetEffectMaxTimeRemainingAndDuration(const struct FGameplayTag& EffectTag, float* TimeRemaining, float* Duration);
	class UAttributeSet* K2_FindOwnedAttributeSetByClass(TSubclassOf<class UAttributeSet> Class);
	void K2_ExecuteGameplayCueLocal(const struct FGameplayTag& GameplayCueTag, const struct FGameplayCueParameters& GameplayCueParameters);
	void K2_ClearAbility(struct FGameplayAbilitySpecHandle& Handle);
	void K2_CancelAbilityByTag(const struct FGameplayTag& AbilityTag);
	void K2_AddGameplayCueLocalShared(class UObject* Instigator, const struct FGameplayTag& GameplayCueTag, const struct FGameplayCueParameters& GameplayCueParameters);
	void K2_AddGameplayCueLocal(const struct FGameplayTag& GameplayCueTag, const struct FGameplayCueParameters& GameplayCueParameters);
	bool IsNotifiedTagAvailable(struct FGameplayTag& Tag);
	struct FGameplayAbilitySpecHandle GiveDefaultAbility(TSubclassOf<class UGameplayAbility> AbilityClass);
	struct FActiveGameplayEffectHandle ChangeActiveEffectRemainTime(const struct FActiveGameplayEffectHandle& InEffect, float InValue, enum class EGameplayModOp InOption);
	struct FActiveGameplayEffectHandle ChangeActiveEffectDuration(const struct FActiveGameplayEffectHandle& InEffect, float InDuration, enum class EActiveEffectDurationChangeProxy InChangeProxy);
};

// 0x0 (0x28 - 0x28)
// Class Solarland.SolarAbilitySystemInterface
class ISolarAbilitySystemInterface : public IAbilitySystemInterface
{
public:

	static class UClass* StaticClass();
	static class ISolarAbilitySystemInterface* GetDefaultObj();

	class USolarAbilitySystemComponent* GetSolarAbilitySystemComponent();
};

// 0x0 (0x28 - 0x28)
// Class Solarland.SolarAbilitySystemLibrary
class USolarAbilitySystemLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class USolarAbilitySystemLibrary* GetDefaultObj();

	bool MMC_GetCapturedAttributeMagnitude(struct FGameplayEffectAttributeCaptureDefinition& Def, struct FGameplayEffectSpec& Spec, const struct FGameplayTagContainer& SourceTags, const struct FGameplayTagContainer& TargetTags, float* Magnitude);
	void MarkStackCountHandledManually(struct FGameplayEffectCustomExecutionOutput& Output);
	void MarkGameplayCuesHandledManually(struct FGameplayEffectCustomExecutionOutput& Output);
	void MarkConditionalGameplayEffectsToTrigger(struct FGameplayEffectCustomExecutionOutput& Output);
	struct FGameplayModifierInfo MakeSimpleGameplayModifierInfo(const struct FGameplayAttribute& InAttribute);
	struct FGameplayModifierEvaluatedData MakeSimpleGameplayModifierEvaluatedData(const struct FGameplayAttribute& InAttribute, enum class EGameplayModOp InModOp, float InMagnitude);
	struct FGameplayModifierEvaluatedData MakeGameplayModifierEvaluatedData(const struct FGameplayAttribute& InAttribute, enum class EGameplayModOp InModOp, float InMagnitude, struct FActiveGameplayEffectHandle& InHandle);
	struct FAttributeSubSetting MakeAttributeSubSetting(int32 InAttributeSubID, float InValue);
	struct FGameplayEffectContextHandle GetEffectContext(struct FGameplayEffectSpec& Spec);
	float GetCurrentValueFromAttribute(struct FGameplayAttributeData& Attribute);
	struct FGameplayTagContainer GetCapturedTargetTags(struct FGameplayEffectSpec& Spec);
	struct FGameplayTagContainer GetCapturedSourceTags(struct FGameplayEffectSpec& Spec);
	float GetBaseValueFromAttribute(struct FGameplayAttributeData& Attribute);
	bool FindAttribute(const class FString& CombinedName, struct FGameplayAttribute* OutAttribute);
	class UGameplayAbility* EffectContextHandle_GetAbility(struct FGameplayEffectContextHandle& Handle);
	class UAbilitySystemComponent* CustomExecParams_GetTargetAbilitySystemComponent(struct FGameplayEffectCustomExecutionParameters& Parameters);
	class UAbilitySystemComponent* CustomExecParams_GetSourceAbilitySystemComponent(struct FGameplayEffectCustomExecutionParameters& Parameters);
	struct FGameplayTagContainer CustomExecParams_GetPassedInTags(struct FGameplayEffectCustomExecutionParameters& Parameters);
	struct FGameplayEffectSpec CustomExecParams_GetOwningSpec(struct FGameplayEffectCustomExecutionParameters& Parameters);
	TArray<struct FActiveGameplayEffectHandle> CustomExecParams_GetIgnoreHandles(struct FGameplayEffectCustomExecutionParameters& Parameters);
	struct FAttributeSubSetting CancelAttributeSubSetting(int32 InAttributeSubID);
	void BreakGameplayModifierInfo(struct FGameplayModifierInfo& InModifier, struct FGameplayAttribute* OutAttribute, enum class EGameplayModOp* OutModType, struct FGameplayTagRequirements* OutSourceTags, struct FGameplayTagRequirements* OutTargetTags);
	void AddOutputModifier(struct FGameplayEffectCustomExecutionOutput& Output, struct FGameplayModifierEvaluatedData& InOutputMod);
};

// 0x20 (0xA0 - 0x80)
// Class Solarland.SolarAbilityTask_WaitInputCommand
class USolarAbilityTask_WaitInputCommand : public USolarAbilityTask
{
public:
	FMulticastInlineDelegateProperty_            OnCommand;                                         // 0x80(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_254D[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarAbilityTask_WaitInputCommand* GetDefaultObj();

	class USolarAbilityTask_WaitInputCommand* CreateTask(class UGameplayAbility* OwningAbility, class FName ActionName, enum class EInputEvent InputEvent);
};

// 0x8 (0x30 - 0x28)
// Class Solarland.SolarGameManager
class USolarGameManager : public USolarAbstractManager
{
public:
	class USolarGameInstanceBase*                OwnerGameInstance;                                 // 0x28(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class USolarGameManager* GetDefaultObj();

	void ReceiveManagerIntialized();
};

// 0x8 (0x38 - 0x30)
// Class Solarland.SolarABTestManager
class USolarABTestManager : public USolarGameManager
{
public:
	uint8                                        Pad_254E[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarABTestManager* GetDefaultObj();

};

// 0x10 (0x38 - 0x28)
// Class Solarland.SolarAccessLuaDataUtils
class USolarAccessLuaDataUtils : public UObject
{
public:
	uint8                                        Pad_254F[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USolarGameInstanceBase*                SolarGameInstance;                                 // 0x30(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class USolarAccessLuaDataUtils* GetDefaultObj();

	void GetMatchResult(struct FMatchResult& MatchResult);
};

// 0x0 (0x228 - 0x228)
// Class Solarland.AchievementFormula
class AAchievementFormula : public AActor
{
public:

	static class UClass* StaticClass();
	static class AAchievementFormula* GetDefaultObj();

	class USolarAchievementComponent* GetAchievementComponent();
	int32 GetAchievedTargetValue(int32 InAchievementID);
	TArray<int32> GetAchievedConditionValue(int32 InAchievementID);
};

// 0x110 (0x1C0 - 0xB0)
// Class Solarland.SolarAchievementComponent
class USolarAchievementComponent : public UActorComponent
{
public:
	class UDataTable*                            AchievementHandleConfig;                           // 0xB0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class AAchievementFormula>       AchievementFormulaClass;                           // 0xB8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AAchievementFormula*                   AchievementFormula;                                // 0xC0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2552[0xA8];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<int32, struct FAchievementResult>       AllStatisticAchievement;                           // 0x170(0x50)(Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class USolarAchievementComponent* GetDefaultObj();

	void UnlockAchievement(int32 InAchievementID);
	void SetAchievementValue(int32 InAchievementID, int32 InUpdateValue);
	bool IsAchievementCompleted(int32 InAchievementID);
	void IncreaseAchievementValue(int32 InAchievementID, int32 InUpdateValue);
	int32 GetAchievementPorgressValue(int32 InAchievementID);
};

// 0x8 (0x38 - 0x30)
// Class Solarland.SolarActivityManager
class USolarActivityManager : public USolarGameManager
{
public:
	uint8                                        Pad_2553[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarActivityManager* GetDefaultObj();

};

// 0xB0 (0xE0 - 0x30)
// Class Solarland.SolarActorCollisionIgnoreSystem
class USolarActorCollisionIgnoreSystem : public UWorldSubsystem
{
public:
	uint8                                        Pad_2554[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<class AActor*, uint8>                   TeamIgnoreCollisionActorMap;                       // 0x40(0x50)(NativeAccessSpecifierPrivate)
	TMap<class AActor*, enum class ESolarIgnoreCollisionType> TypeIgnoreCollisionActorMap;                       // 0x90(0x50)(NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class USolarActorCollisionIgnoreSystem* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Solarland.SolarActorInterface
class ISolarActorInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class ISolarActorInterface* GetDefaultObj();

	struct FVector GetCenterLocation();
};

// 0xA0 (0xD0 - 0x30)
// Class Solarland.SolarActorPoolManager
class USolarActorPoolManager : public UGameInstanceSubsystem
{
public:
	uint8                                        Pad_2556[0xA0];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarActorPoolManager* GetDefaultObj();

	bool PushActor(class AActor* Actor);
	void OnActorDestroyed(class AActor* Actor);
	class USolarActorPoolManager* Get(class UObject* WorldContextObject);
};

// 0x0 (0x28 - 0x28)
// Class Solarland.SolarAdapterSlotInterface
class ISolarAdapterSlotInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class ISolarAdapterSlotInterface* GetDefaultObj();

	void OnLoadAdapterSlotWidgetFinished();
	void OnChangeAdapterSlotWidgetParameters(TArray<struct FWidgetOverrideParam>& Params);
	void OnChangeAdapterSlotWidgetGameplayTag(struct FGameplayTag& InGameplayTag, TArray<class FString>& MetaData);
};

// 0x78 (0x1C8 - 0x150)
// Class Solarland.SolarAdapterWidget
class USolarAdapterWidget : public UContentWidget
{
public:
	enum class EWidgetLoadType                   WidgetLoadType;                                    // 0x150(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2557[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSoftClassPath                        MobileWidgetPath;                                  // 0x158(0x18)(Edit, BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FSoftClassPath                        DesktopWidgetPath;                                 // 0x170(0x18)(Edit, BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FWidgetOverrideParam>          OverrideParamList;                                 // 0x188(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FSoftClassPath                        CurWidgetPath;                                     // 0x198(0x18)(ZeroConstructor, Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUserWidget*                           AdapteeWidget;                                     // 0x1B0(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2558[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarAdapterWidget* GetDefaultObj();

	void RefreshUIByOverrideParams(TArray<struct FWidgetOverrideParam>& WidgetOverrideParams);
	void LoadUserWidgetResource();
	class UUserWidget* GetAdapteeWidget();
};

// 0x58 (0x2B8 - 0x260)
// Class Solarland.SolarAdvProgressBoard
class USolarAdvProgressBoard : public UUserWidget
{
public:
	class UImage*                                ProgressBoard;                                     // 0x260(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstance*                     ProgressShader;                                    // 0x268(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          IncreaseColor;                                     // 0x270(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          DecreaseColor;                                     // 0x280(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2559[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarAdvProgressBoard* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Solarland.SolarAICondition
class USolarAICondition : public UObject
{
public:

	static class UClass* StaticClass();
	static class USolarAICondition* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Solarland.SolarAICondition_BlueprintBase
class USolarAICondition_BlueprintBase : public USolarAICondition
{
public:

	static class UClass* StaticClass();
	static class USolarAICondition_BlueprintBase* GetDefaultObj();

	bool ReceiveExecute(class UObject* OwnerExecutor);
};

// 0x0 (0x28 - 0x28)
// Class Solarland.SolarAICondition_TagState
class USolarAICondition_TagState : public USolarAICondition
{
public:

	static class UClass* StaticClass();
	static class USolarAICondition_TagState* GetDefaultObj();

};

// 0x10 (0x38 - 0x28)
// Class Solarland.SolarAICondition_TagStateTime
class USolarAICondition_TagStateTime : public USolarAICondition_TagState
{
public:
	enum class ESolarAITagStateTimeType          TimeType;                                          // 0x28(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_255B[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSolarAIValueCompare                  CompareIns;                                        // 0x2C(0xC)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class USolarAICondition_TagStateTime* GetDefaultObj();

};

// 0x20 (0x48 - 0x28)
// Class Solarland.SolarAICondition_ScoreBase
class USolarAICondition_ScoreBase : public USolarAICondition_TagState
{
public:
	TArray<class USolarAIConditionScoreItem*>    ScoreItems;                                        // 0x28(0x10)(Edit, ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FSolarAIValueCompare                  CompareIns;                                        // 0x38(0xC)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_255C[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarAICondition_ScoreBase* GetDefaultObj();

};

// 0x8 (0x30 - 0x28)
// Class Solarland.SolarAIConditionScoreItem
class USolarAIConditionScoreItem : public UObject
{
public:
	float                                        ItemWeight;                                        // 0x28(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_255D[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarAIConditionScoreItem* GetDefaultObj();

};

// 0x0 (0x30 - 0x30)
// Class Solarland.SolarAICondScoreItem_BoolBase
class USolarAICondScoreItem_BoolBase : public USolarAIConditionScoreItem
{
public:

	static class UClass* StaticClass();
	static class USolarAICondScoreItem_BoolBase* GetDefaultObj();

};

// 0x0 (0x30 - 0x30)
// Class Solarland.SolarAICondScoreItem_BoolBaseBP
class USolarAICondScoreItem_BoolBaseBP : public USolarAICondScoreItem_BoolBase
{
public:

	static class UClass* StaticClass();
	static class USolarAICondScoreItem_BoolBaseBP* GetDefaultObj();

	bool ReceiveProvideItemBaseBoolBot(class ASolarBotAIController* BotController, class ASolarCharacter* SolarChar);
	bool ReceiveProvideItemBaseBool(class UObject* OwnerExecutor);
};

// 0x0 (0x30 - 0x30)
// Class Solarland.SolarAICondScoreItem_FloatBase
class USolarAICondScoreItem_FloatBase : public USolarAIConditionScoreItem
{
public:

	static class UClass* StaticClass();
	static class USolarAICondScoreItem_FloatBase* GetDefaultObj();

};

// 0x8 (0x38 - 0x30)
// Class Solarland.SolarAICondScoreItem_FloatLinearClamp
class USolarAICondScoreItem_FloatLinearClamp : public USolarAICondScoreItem_FloatBase
{
public:
	float                                        ClampFloatValueMin;                                // 0x30(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ClampFloatValueMax;                                // 0x34(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class USolarAICondScoreItem_FloatLinearClamp* GetDefaultObj();

};

// 0x0 (0x38 - 0x38)
// Class Solarland.SolarAICondScoreItem_FloatBaseBP
class USolarAICondScoreItem_FloatBaseBP : public USolarAICondScoreItem_FloatLinearClamp
{
public:

	static class UClass* StaticClass();
	static class USolarAICondScoreItem_FloatBaseBP* GetDefaultObj();

	float ReceiveProvideItemBaseFloatBot(class ASolarBotAIController* BotController, class ASolarCharacter* SolarChar);
	float ReceiveProvideItemBaseFloat(class UObject* OwnerExecutor);
};

// 0x8 (0x40 - 0x38)
// Class Solarland.SolarAICondScoreItem_CharHP
class USolarAICondScoreItem_CharHP : public USolarAICondScoreItem_FloatLinearClamp
{
public:
	bool                                         bPercent;                                          // 0x38(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2562[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarAICondScoreItem_CharHP* GetDefaultObj();

};

// 0x18 (0x50 - 0x38)
// Class Solarland.SolarAICondScoreItem_BotTagStateTime
class USolarAICondScoreItem_BotTagStateTime : public USolarAICondScoreItem_FloatLinearClamp
{
public:
	enum class ESolarAITagStateTimeType          TimeType;                                          // 0x38(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2563[0x17];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarAICondScoreItem_BotTagStateTime* GetDefaultObj();

};

// 0x28 (0x370 - 0x348)
// Class Solarland.SolarAIControllerBase
class ASolarAIControllerBase : public AAIController
{
public:
	uint8                                        Pad_2564[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UBehaviorTree*                         BehaviorTree;                                      // 0x350(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAISenseConfig_Sight*                  SightConfig;                                       // 0x358(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAISenseConfig_Damage*                 DamageSenseConfig;                                 // 0x360(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        AICharacterID;                                     // 0x368(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2565[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASolarAIControllerBase* GetDefaultObj();

	void DestroyCharacterCorpse();
};

// 0x0 (0x28 - 0x28)
// Class Solarland.SolarAILibrary
class USolarAILibrary : public UObject
{
public:

	static class UClass* StaticClass();
	static class USolarAILibrary* GetDefaultObj();

	class ASolarBotAIController* SpawnBotAtLocation(class UObject* WorldContextObject, const struct FVector& SpawnLocation, TSubclassOf<class ASolarBotAIController> ControllerClass, int32 CharacterId, int32 SkinId, int32 TeamID);
	bool IsLocationOnPlayerSight(class UObject* WorldContextObject, struct FVector& TestLocation, float TraceStartOffsetZ, float MaxRange, bool bIgnoreSpectatePlayer);
	bool HasPlayersInRange(class UObject* WorldContextObject, struct FVector& TestLocation, int32* Count, float RangeRadius, bool bIncludeBot, bool bOnlyDrivers);
	bool GetValidCharacterID(class ASolarPlayerState* TargetPS, int32* OutCharacterID, int32* OutSkinId);
	struct FVector GetPoisonCircleCenter(class UObject* WorldContextObject, bool bDoProject, bool bUseNavmesh, const struct FVector& Extent);
	void ApplyDamageEventBetweenPreservedBot(class ASolarBotAIController* Target, float DamageValue, const struct FSolarPointDamageEvent& DamageEvent, class ASolarBotAIController* EventInstigator, class AActor* DamageCauser);
};

// 0xF8 (0x390 - 0x298)
// Class Solarland.SolarItemSpawner
class ASolarItemSpawner : public ASolarMapElementBase
{
public:
	int32                                        SpawnerID;                                         // 0x298(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_256F[0x2C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	enum class ESpawnStage                       SpawnStage;                                        // 0x2C8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ESpawnerType                      SpawnerType;                                       // 0x2C9(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ESpawnerLevel                     SpawnerLevel;                                      // 0x2CA(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2570[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        OutcomeID;                                         // 0x2CC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               OriginPos;                                         // 0x2D0(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               BoxExtent;                                         // 0x2DC(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FBox                                  SpawnerBox;                                        // 0x2E8(0x1C)(ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                        RotateAngleRange;                                  // 0x304(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         HasSpawnedItem;                                    // 0x308(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bActiveSpawner;                                    // 0x309(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2571[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                SyncItemId;                                        // 0x310(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         BOpenLog;                                          // 0x320(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bRefresh;                                          // 0x321(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2572[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        RefreshTime;                                       // 0x324(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseSpawnerTransform;                              // 0x328(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bToTheGround;                                      // 0x329(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2573[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        NumberOfPoints;                                    // 0x32C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FScalarParams;                                     // 0x330(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EItemAppearanceType               AppearanceType;                                    // 0x334(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUpdateOverlap;                                    // 0x335(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2574[0x22];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTimerHandle                          ItemLoadHandle;                                    // 0x358(0x8)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FTimerHandle                          ItemSpawnHandle;                                   // 0x360(0x8)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FTimerHandle                          ItemRefreshHandle;                                 // 0x368(0x8)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2575[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASolarItemSpawner* GetDefaultObj();

	void SpawnSingleItem();
	void SpawnInNextTick();
	void SaveSpawnerRange();
	void RandomRotatorForItem(enum class EItemType ItemType, struct FQuat* TargetRotator);
	void RandomPosInBoundingBox(struct FVector* TargetPos);
	void PlaceItemToTheGround(struct FVector* InOutLocation);
	void OnItemSpawned(class AActor* Item);
	void OnAsyncLoadComplete(const struct FSoftClassPath& SClassPath, const struct FSolarItemData& ItemData);
	void NetStartSpawnItems(class ASolarItemRootActor* OwnerActor);
	void LoadSingleWeaponAsset(struct FSolarItemData& ItemData);
	void LoadSingleItemAsset();
	void LoadInNextTick();
	void InitSpawnerBound();
	void GetSuitableDropPos(struct FVector* TargetPos);
	void GenerateDropPosition();
	void ClearUnpickedItems();
	void ClearLoopTimer();
};

// 0x40 (0x3D0 - 0x390)
// Class Solarland.SolarAirDropSpawner
class ASolarAirDropSpawner : public ASolarItemSpawner
{
public:
	bool                                         IsActive;                                          // 0x390(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2576[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        SpawnDelay;                                        // 0x394(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AudioActorHeightOffset;                            // 0x398(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AudioActorFallSpeed;                               // 0x39C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftClassPath                        PillarMeshBPClassPathName;                         // 0x3A0(0x18)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2577[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        ChestID;                                           // 0x3C0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2578[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASolarAirDropSpawner* GetDefaultObj();

};

// 0x10F8 (0x1380 - 0x288)
// Class Solarland.SolarVehiclePawn
class ASolarVehiclePawn : public APawn
{
public:
	uint8                                        Pad_2587[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UPrimitiveComponent*                   VehicleRoot;                                       // 0x2B8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkeletalMeshComponentBudgeted*        VehicleMesh;                                       // 0x2C0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint32                                       VehicleID;                                         // 0x2C8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bVehicleMeshAggregationTick;                       // 0x2CC(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2588[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftClassPtr<class USkeletalMeshComponentBudgeted> VehicleStencilClass;                               // 0x2D0(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkeletalMeshComponentBudgeted*        VehicleStencilNew;                                 // 0x2F8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarNetMovementComponent*            NetMovementComponent;                              // 0x300(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAkComponent*                          AkComponent;                                       // 0x308(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarVehicleAbilitySystemComponent*   VehicleAbilitySystem;                              // 0x310(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarVehicleSpringArmComponent*       SpringArmComponent;                                // 0x318(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarVehicleCameraComponent*          CameraComponent;                                   // 0x320(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarVehicleAttributeSet*             VehicleAttributeSet;                               // 0x328(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FBasedMovement                        BasedMovement;                                     // 0x330(0x28)(NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<struct FVehicleSeatSlot>              SeatSlots;                                         // 0x358(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        HealthUIID;                                        // 0x368(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2589[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UTexture2D>             VehicleBrandIcon;                                  // 0x370(0x28)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        OverlapWaterRadius;                                // 0x398(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               OutVehicleOffset;                                  // 0x39C(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        WaterDraftDepth;                                   // 0x3A8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CarpadProtectTime;                                 // 0x3AC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CarPadAccelerationMultiplier;                      // 0x3B0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_258A[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FVector>                       DropPassengerLocations;                            // 0x3B8(0x10)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               DropPassengerAtTop;                                // 0x3C8(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  BodySocketName;                                    // 0x3D4(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               DamageBoxLocation;                                 // 0x3DC(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               DamageBoxExtent;                                   // 0x3E8(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_258B[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FName>                          PenetrationDamageBones;                            // 0x3F8(0x10)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        VehicleMaxSpeedOnUI;                               // 0x408(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EVehicleControlUIType             VehicleControlUIType;                              // 0x40C(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EVehicleAnimationType             VehicleAnimationType;                              // 0x40D(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_258C[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  VehicleDirectionBoneForPassenger;                  // 0x410(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_258D[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVehicleVFX                           NosCameraVFX;                                      // 0x420(0x90)(Edit, Protected, NativeAccessSpecifierProtected)
	float                                        NOSCameraEffectAngle;                              // 0x4B0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_258E[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVehicleVFX                           GCCameraVFX;                                       // 0x4C0(0x90)(Edit, Protected, NativeAccessSpecifierProtected)
	float                                        GCCameraEffectAngle;                               // 0x550(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_258F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FVehicleVFX>                   NosVFXes;                                          // 0x558(0x10)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<enum class EPhysicalSurface, TSoftObjectPtr<class UParticleSystem>> RaiseDustEffects;                                  // 0x568(0x50)(Edit, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	float                                        SpeedThresholdForCollidingDamage;                  // 0x5B8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SpeedThresholdForStandingOn;                       // 0x5BC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SpeedThresholdForGetOnVehicle;                     // 0x5C0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2590[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UParticleSystem>        EnterWaterVFX[0x4];                                // 0x5C8(0xA0)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SprayVelocity;                                     // 0x668(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        HeavyInSpeed;                                      // 0x66C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CriticalAngle;                                     // 0x670(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               OffsetBasedVechileLoction;                         // 0x674(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CollisionSparkThreshold;                           // 0x680(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2591[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UParticleSystem>        CollisionSparkParticle;                            // 0x688(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  CollisionSparkParamNowel;                          // 0x6B0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  CollisionSparkParamQuantity;                       // 0x6B8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        VehicleSpeedThresholdToPlayVFX;                    // 0x6C0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2592[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRuntimeFloatCurve                    CollisionSparkCurveFromImpulseToNowel;             // 0x6C8(0x88)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FRuntimeFloatCurve                    CollisionSparkCurveFromImpulseToQuantity;          // 0x750(0x88)(Edit, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_2593[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVehicleVFX                           SpeedParticle;                                     // 0x7E0(0x90)(Edit, Protected, NativeAccessSpecifierProtected)
	TArray<struct FVehicleVFXMesh>               DriverOnVFXMeshes;                                 // 0x870(0x10)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FVehicleVFX>                   DriverOnVFXs;                                      // 0x880(0x10)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               SpawnOffset;                                       // 0x890(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2594[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UVehicleCameraDataAsset*               CameraDataAsset;                                   // 0x8A0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                SpeedVibrationHeString;                            // 0x8A8(0x10)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRuntimeFloatCurve                    SpeedVibrationCurve;                               // 0x8B8(0x88)(Edit, Protected, NativeAccessSpecifierProtected)
	float                                        MinSpeedDifferenceForCollisionVibration;           // 0x940(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2595[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                CollisionVibrationHeString;                        // 0x948(0x10)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                LandingVibrationHeString;                          // 0x958(0x10)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRuntimeFloatCurve                    LandingVibrationCurve;                             // 0x968(0x88)(Edit, Protected, NativeAccessSpecifierProtected)
	float                                        MaxSpeedDecelerationRate;                          // 0x9F0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2596[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSolarVehicleMaterialData             BackLampData;                                      // 0x9F8(0x28)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FSolarVehicleMaterialData>     VehicleMaterialDataArray;                          // 0xA20(0x10)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarVehicleSoundDataAsset*           VehicleSoundDataAsset;                             // 0xA30(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UGameplayEffect>           DefaultAttributes;                                 // 0xA38(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UGameplayEffect>           CanDriveEffect;                                    // 0xA40(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UGameplayEffect>           CanGetOnEffect;                                    // 0xA48(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UGameplayEffect>           UnderWaterEffect;                                  // 0xA50(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class ASolarAbility>             ExplosionAbilityClass;                             // 0xA58(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FSolarDamageInfo                      ExplosionDamageInfo;                               // 0xA60(0x40)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FVehicleVFX                           ExplosionVFX;                                      // 0xAA0(0x90)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FVehicleVFXMesh                       VehicleBrokenMesh;                                 // 0xB30(0x80)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FVehicleVFX                           VehicleDamagedVFXs[0x5];                           // 0xBB0(0x2D0)(Edit, Protected, NativeAccessSpecifierProtected)
	TSubclassOf<class UGameplayEffect>           VehicleDamageStatusEffects[0x5];                   // 0xE80(0x28)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MaxLodLevelForUpdateVisual;                        // 0xEA8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2597[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FVehicleWeakPointSpec>         VehicleWeakPointContainer;                         // 0xEB0(0x10)(Edit, Net, ZeroConstructor, RepNotify, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPrimitiveComponent*                   PlatformComponent;                                 // 0xEC0(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCanStandOnPlatform;                               // 0xEC8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2598[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DistanceThresholdForAttachPlatform;                // 0xECC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DegreeThresholdForAttachPlatform;                  // 0xED0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SpeedThresholdForAttachPlatform;                   // 0xED4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TimerForPenetration;                               // 0xED8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PenetrationThreshold;                              // 0xEDC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CollideDamage;                                     // 0xEE0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CrashDamageWeight;                                 // 0xEE4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SelfCrashDamageRate;                               // 0xEE8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PassengerDamageRatio;                              // 0xEEC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinPlayerDamageVelocity;                           // 0xEF0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CollidedCharacterDmgRatio;                         // 0xEF4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CollideUpBoundingRatio;                            // 0xEF8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2599[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UCurveFloat*                           CollidePushSpeedCurve;                             // 0xF00(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CollidePushUpAngle;                                // 0xF08(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CharacterProtectTime;                              // 0xF0C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CollisionLinearVelocityDampingForSimulatedProxy;   // 0xF10(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CollisionLinearVelocityDampingSetDelay;            // 0xF14(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CollisionCompensationImpulseForSimulatedProxy;     // 0xF18(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_259A[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<int32>                                StealthHideMats;                                   // 0xF20(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_259B[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bRemoveStencil;                                    // 0xF38(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_259C[0x17];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         IsLaunch;                                          // 0xF50(0x1)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_259D[0x1F];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastSparseDelegateProperty_            OnPlayerGetOnVehicle;                              // 0xF70(0x1)(InstancedReference, BlueprintAssignable, NoDestructor, NativeAccessSpecifierPublic)
	FMulticastSparseDelegateProperty_            OnPlayerGetOffVehicle;                             // 0xF71(0x1)(InstancedReference, BlueprintAssignable, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_259E[0x116];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<int32>                                OccupiedSeats;                                     // 0x1088(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarInputActionContext*              InputActionContext;                                // 0x1098(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_259F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector_NetQuantizeNormal             ReplicatedPlayerInputVector;                       // 0x10A4(0xC)(Net, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_25A0[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector_NetQuantize                   RepLocation;                                       // 0x10BC(0xC)(Net, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_25A1[0x40];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AActor*>                        ActorsOnPlatform;                                  // 0x1108(0x10)(ZeroConstructor, Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_25A2[0x24];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSpawnedActorHandle                   CachedActorHandle;                                 // 0x113C(0x4)(Net, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        CurPlayerInputMask;                                // 0x1140(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        ReplicatedPlayerInputMask;                         // 0x1141(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_25A3[0x6E];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class USolarNavModifierComponent*            SolarNavModifierComp;                              // 0x11B0(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDynamicAffectNavigation;                          // 0x11B8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25A4[0x4F];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        SkinId;                                            // 0x1208(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_25A5[0x14];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FAbilityCooldownTimer>         ActivedAbilityCooldownArray;                       // 0x1220(0x10)(Net, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_25A6[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bVehicleBurningStart;                              // 0x1231(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_25A7[0xC6];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        EnterWaterDuration;                                // 0x12F8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_25A8[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        WaterLineHeight;                                   // 0x1300(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_25A9[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ASolarWaterActorNew*                   WaterActor;                                        // 0x1308(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_25AA[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UCurveFloat*                           SpeedCameraShakeCurve;                             // 0x1330(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                           SpeedScreenEffectOpacityCurve;                     // 0x1338(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                           SpeedScreenEffectPlayRateCurve;                    // 0x1340(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinCameraShakeSpeed;                               // 0x1348(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinScreenEffectSpeed;                              // 0x134C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UCameraShake>              VehicleSpeedCameraShake;                           // 0x1350(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  VehicleSpeedScreenEffectRowId;                     // 0x1358(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25AB[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASolarVehiclePawn* GetDefaultObj();

	void UpdateRequiredAbilityInfo(const struct FGameplayTag& Tag, int32 NewCount);
	void UpdateBlockedAbilityInfo(const struct FGameplayTag& Tag, int32 NewCount);
	void StatVehicleAutoMove(int32 MoveTime);
	void SetWeakPointHealth(uint8 WeakPointID, float InHealth);
	void SetTakeMoveInput(bool bInTakeDirection, bool bInTakeRotation);
	void SetPlayerInputVector(struct FVector2D& InputVector, float CameraYaw);
	void SetCurrentHealth(float InHealth);
	void SetCrossCarpad(class ASolarCarPad* InCarpad);
	void ServerSetPlayerInput(struct FVector_NetQuantizeNormal& InputVector, uint8 InputMask);
	void ServerSetCrossCarpad(class ASolarCarPad* InCarpad);
	void ServerSendsTransformToEveryoneWithMovementBase(TArray<uint8>& Value, class ASolarVehiclePawn* InMovementBase);
	void ServerSendsTransformToEveryone(TArray<uint8>& Value);
	void ServerSendsTeleportStateToEveryone(struct FVector_NetQuantize& InLocation, struct FVector_NetQuantizeNormal& InNormalizeEuler, float InServerTimeStamp);
	void ServerSendCorrectionToClient(float ServerTimeStamp, const struct FVector_NetQuantize& WorldLocation, const struct FVector_NetQuantizeNormal& WorldRotationCompressed);
	void ServerHandleVehicleCollision(struct FVehicleCollisionInfo& InVehicleCollisionInfo);
	void ServerDrawActorLocationAndRotationOnClient(struct FVector& InLocation, struct FRotator& InRotator);
	void ServerApplyVehicleSkin(int32 InSkinID);
	void ServerApplyDamageToVehilceAndPassenger(class ASolarVehiclePawn* OtherVehicle, float DamageToSelf, float DamageToOther, struct FVector_NetQuantize& HitLocation);
	void ServerApplyAbilityDamageToTargets(TArray<class APawn*>& Targets, const struct FGameplayAbilitySpecHandle& AbilityHandle);
	void RemoveSeatSlot(uint8 SeatIndex);
	void ReleaseDamagedStatusVFX(enum class EVehicleDamageStatus InDamagedStatus);
	void PlayVehicleEjectSound(class ASolarCharacter* EjectedCharacter);
	void PlaySpeedboardSound();
	void PlayDamagedStatusVFX(enum class EVehicleDamageStatus InDamagedStatus);
	void OverlapWater();
	void OnVehicleHit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, struct FHitResult& Hit);
	void OnStencilLoaded();
	void OnSkinDataAssetLoadedNext(const struct FSoftClassPath& SkinVehiclePath);
	void OnRep_WeakPointHealthOrStateChanged(const TArray<struct FVehicleWeakPointSpec>& OldVehicleWeakPointDatas);
	void OnRep_VehicleBurning();
	void OnRep_SkinId();
	void OnRep_ReplicatedPlayerInputMask(uint8 OldReplicatedPlayerInputMask);
	void OnRep_RemoveStencil();
	void OnRep_CachedActorHandle();
	bool IsVehicleFullHealth();
	bool IsVehicleDangerous();
	bool IsVehicleBroken();
	bool IsTeammateWith(class APawn* Pawn);
	bool IsManuallyCancelAbilityActive(uint8 SeatIndex);
	bool IsExistEnemy(class ASolarCharacter* Character);
	bool IsAbilityActive(uint8 SeatIndex, uint8 AbilityIndex);
	bool InSameTeam();
	TArray<struct FVehicleWeakPointSpec> GetVehicleWeakPoints();
	int32 GetVehicleTypeID();
	uint8 GetVehicleTeamId();
	class UPhysicalMaterial* GetVehicleRootPhysMaterial();
	int32 GetVehicleGroupID();
	float GetSpeedInKmh();
	float GetSpeed();
	struct FVector GetSpawnOffset();
	struct FVector2D GetPlayerInputVector();
	int32 GetPassengerCount();
	int32 GetNextVacantSeat(int32 InCurrentSeatIndex);
	float GetMaxHealth();
	int32 GetManuallyCancelAbilityIndex(uint8 SeatIndex);
	int32 GetHealthPercentInt();
	class ASolarCharacter* GetDriverCharacter();
	float GetDangerHealthPrecent();
	float GetCurrentHealth();
	bool DoesAbilityRequiredTagMissing(int32 CurSeatIndex, uint8 AbilityIndex);
	bool DoesAbilityActivationTagBlocked(int32 CurSeatIndex, uint8 AbilityIndex);
	void DeleteStencilMesh();
	void ClientVehicleExplosion();
	void ClientVehicleBroken();
	void ClientSendsTransformToServerWithMovementBaseAfterCorrection(float DriverLocalTime, float ServerTimeStamp, TArray<uint8>& Value, class ASolarVehiclePawn* InMovementBase);
	void ClientSendsTransformToServerWithMovementBase(float DriverLocalTime, TArray<uint8>& Value, class ASolarVehiclePawn* InMovementBase);
	void ClientSendsTransformToServerAfterCorrection(float DriverLocalTime, float ServerTimeStamp, TArray<uint8>& Value);
	void ClientSendsTransformToServer(float DriverLocalTime, TArray<uint8>& Value);
	bool CheckUpdateVisual();
	bool CheckOpenParticleOptimization(int32 Bias);
	bool CanActivateAbility(uint8 SeatIndex, uint8 AbilityIndex);
	void ApplySkinFromCDO(class ASolarVehiclePawn* SkinVehiclePawnCDO);
	uint8 AddSeatSlot(struct FVehicleSeatSlot& SeatSlot);
};

// 0x38 (0x13B8 - 0x1380)
// Class Solarland.SolarHoverVehicle
class ASolarHoverVehicle : public ASolarVehiclePawn
{
public:
	class USolarHoverVehicleMovement*            VehicleMovement;                                   // 0x1380(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVehicleBasedMovementInfo             ReplicatedBasedMovement;                           // 0x1388(0x20)(Net, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_25AE[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASolarHoverVehicle* GetDefaultObj();

	void OnVehicleRootHitForAttachPlatform(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, struct FHitResult& Hit);
	void OnRep_ReplicatedBasedMovement(const struct FVehicleBasedMovementInfo& PreviousBasedMovement);
	void OnPlatformActorEndplay(class AActor* Actor, enum class EEndPlayReason EndPlayReason);
};

// 0x58 (0x1410 - 0x13B8)
// Class Solarland.SolarAirPlaneVehicle
class ASolarAirPlaneVehicle : public ASolarHoverVehicle
{
public:
	float                                        CruisingGravityScale;                              // 0x13B8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_25B0[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UGameplayEffect>           CruisingEffect;                                    // 0x13C0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UVehicleCameraDataAsset*               RollBackCamera;                                    // 0x13C8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EAirPlaneAnimState                ReplicatedAnimState;                               // 0x13D0(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_25B1[0x3F];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASolarAirPlaneVehicle* GetDefaultObj();

	void ServerSetReplicatedAnimState(enum class EAirPlaneAnimState InState, const struct FPredictionKey& InPredictionKey);
	void OnRep_ReplicatedAnimState();
	void NetMulticastPlayRollRightAnim();
	void NetMulticastPlayRollLeftAnim();
};

// 0xC0 (0x328 - 0x268)
// Class Solarland.SolarVehicleAnimInstance
class USolarVehicleAnimInstance : public UAnimInstance
{
public:
	uint8                                        Pad_25B3[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRotator                              VehicleRudderRotator;                              // 0x270(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                        VehicleRotationValue;                              // 0x27C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehicleRotationPercent;                            // 0x280(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehicleCameraYaw;                                  // 0x284(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehicleCameraPitch;                                // 0x288(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bWithDriver;                                       // 0x28C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAbilityActivated;                                 // 0x28D(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25B4[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Speed;                                             // 0x290(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VelocityDegree;                                    // 0x294(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             PlayerInputVector;                                 // 0x298(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bVehicleInAir;                                     // 0x2A0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEquipWeapon;                                      // 0x2A1(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25B5[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAnimMontage*                          VehicleWeaponFireMontage;                          // 0x2A8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                          VehicleWeaponRechamberMontage;                     // 0x2B0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRotator                              VehicleWeaponPitchRot;                             // 0x2B8(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FRotator                              VehicleWeaponYawRot;                               // 0x2C4(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FVector                               LeftBoneIKOffset;                                  // 0x2D0(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               RightBoneIKOffset;                                 // 0x2DC(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bUpdateVisual;                                     // 0x2E8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_25B6[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               ExternalForceScale;                                // 0x2EC(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MinAddForceDistance;                               // 0x2F8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  MoveReferenceBone;                                 // 0x2FC(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               AnimExternalForce;                                 // 0x304(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_25B7[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarVehicleAnimInstance* GetDefaultObj();

	void OnFireMontageStart(float InMontageLength);
	void OnFireMontageEnd(class UAnimMontage* InMontage, bool bInterrupted);
	class ASolarVehiclePawn* GetVehiclePawnOwner();
	float GetPlayTimeAgainstFootLocationCurve(class UAnimSequence* InAnimSequence, class FName& InCurveName, float InFootLocationValue);
};

// 0x38 (0x360 - 0x328)
// Class Solarland.SolarHoverVehicleAnimInstance
class USolarHoverVehicleAnimInstance : public USolarVehicleAnimInstance
{
public:
	float                                        VehicleLeftOrRightPercent;                         // 0x328(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehicleSpoilerRotateFactor;                        // 0x32C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               FLThrusterBoneScale;                               // 0x330(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               FRThrusterBoneScale;                               // 0x33C(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               BLThrusterBoneScale;                               // 0x348(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               BRThrusterBoneScale;                               // 0x354(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class USolarHoverVehicleAnimInstance* GetDefaultObj();

};

// 0x490 (0x7F0 - 0x360)
// Class Solarland.SolarAirPlanVehicleAnimInstance
class USolarAirPlanVehicleAnimInstance : public USolarHoverVehicleAnimInstance
{
public:
	class UAnimSequence*                         RollBackAnim;                                      // 0x360(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RollBackDuration;                                  // 0x368(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_25B8[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAnimMontage*                          RollLeftAnim;                                      // 0x370(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                          RollRightAnim;                                     // 0x378(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EAirPlaneAnimState                AnimState;                                         // 0x380(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_25B9[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FFloatCurve                           RootLocationXCurve;                                // 0x388(0x98)(Protected, NativeAccessSpecifierProtected)
	struct FFloatCurve                           RootLocationYCurve;                                // 0x420(0x98)(Protected, NativeAccessSpecifierProtected)
	struct FFloatCurve                           RootLocationZCurve;                                // 0x4B8(0x98)(Protected, NativeAccessSpecifierProtected)
	struct FFloatCurve                           RootRotationXCurve;                                // 0x550(0x98)(Protected, NativeAccessSpecifierProtected)
	struct FFloatCurve                           RootRotationYCurve;                                // 0x5E8(0x98)(Protected, NativeAccessSpecifierProtected)
	struct FFloatCurve                           RootRotationZCurve;                                // 0x680(0x98)(Protected, NativeAccessSpecifierProtected)
	struct FFloatCurve                           RootRotationWCurve;                                // 0x718(0x98)(Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_25BA[0x40];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarAirPlanVehicleAnimInstance* GetDefaultObj();

};

// 0x308 (0x530 - 0x228)
// Class Solarland.SolarAirship
class ASolarAirship : public AActor
{
public:
	bool                                         bShowDebug;                                        // 0x228(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_25BB[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAkComponent*                          AkAudioComponent;                                  // 0x230(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkeletalMeshComponentBudgeted*        SKMesh;                                            // 0x238(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FAirdropParas                         AirdropParas;                                      // 0x240(0x20)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                        SpawnAirdropDelay;                                 // 0x260(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DestroyDelay;                                      // 0x264(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        AppearNoticeID;                                    // 0x268(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_25BC[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UCurveFloat*                           AppearMatCurve;                                    // 0x270(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveFloat*                           DisappearMatCurve;                                 // 0x278(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                       FlyEffect;                                         // 0x280(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_25BD[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            FlyEffectTransform;                                // 0x290(0x30)(Edit, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	class UParticleSystem*                       AirScreenEffectBeforeAirdrop;                      // 0x2C0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                       AirScreenEffectAfterAirdrop;                       // 0x2C8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTransform                            AirScreenEffectTransform_1;                        // 0x2D0(0x30)(Edit, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FTransform                            AirScreenEffectTransform_2;                        // 0x300(0x30)(Edit, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FPlaygroundEffect>             PlaygroundEffects;                                 // 0x330(0x10)(Edit, ZeroConstructor, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  FogComponentTag;                                   // 0x340(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  FogDensityParam;                                   // 0x348(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                AppearVoice;                                       // 0x350(0x10)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                FlyLPSoundStartBeforeAirdrop;                      // 0x360(0x10)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                FlyLPSoundStopBeforeAirdrop;                       // 0x370(0x10)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                FlyLPSoundStartAfterAirdrop;                       // 0x380(0x10)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                FlyLPSoundStopAfterAirdrop;                        // 0x390(0x10)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        VoicePlayInterval;                                 // 0x3A0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_25BE[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FString>                        VoiceListBeforeAirdrop;                            // 0x3A8(0x10)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class FString>                        VoiceListAfterAirdrop;                             // 0x3B8(0x10)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                HatchOpenSound;                                    // 0x3C8(0x10)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAirdropDelivered;                                 // 0x3D8(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bDisappear;                                        // 0x3D9(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_25BF[0x16];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UParticleSystemComponent*              FlyEffectHandle;                                   // 0x3F0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystemComponent*              AirScreenEffectBeforeAirdropHandle_1;              // 0x3F8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystemComponent*              AirScreenEffectBeforeAirdropHandle_2;              // 0x400(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystemComponent*              AirScreenEffectAfterAirdropHandle_1;               // 0x408(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystemComponent*              AirScreenEffectAfterAirdropHandle_2;               // 0x410(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_25C0[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class USceneComponent*                       FogComponent;                                      // 0x428(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<int32, struct FAirshipConfig>           AirshipConfigMap;                                  // 0x430(0x50)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FRotator                              RotationOffset;                                    // 0x480(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                        HatchOffset;                                       // 0x48C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AirdropStartZOffset;                               // 0x490(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PointInSegmentTolerance;                           // 0x494(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                          HatchOpenAnim;                                     // 0x498(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_25C1[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRouteInfo                            RouteInfo;                                         // 0x4A8(0x34)(Net, RepNotify, NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_25C2[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FMiniMapAirlineData                   AirlineData;                                       // 0x4E8(0x30)(NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_25C3[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASolarAirship* GetDefaultObj();

	void OnRep_RouteInfo();
	void OnRep_Disappear();
	void OnRep_AirdropDelivered();
	struct FMiniMapAirlineData K2_GetAirlineData();
	void DestroySelf();
};

// 0x10 (0x90 - 0x80)
// Class Solarland.SolarAISense_QueryTeammate
class USolarAISense_QueryTeammate : public UAISense
{
public:
	TArray<struct FAIQueryTeammateEvent>         RegisteredEvents;                                  // 0x80(0x10)(ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class USolarAISense_QueryTeammate* GetDefaultObj();

};

// 0x8 (0x50 - 0x48)
// Class Solarland.SolarAISenseConfig_QueryTeammate
class USolarAISenseConfig_QueryTeammate : public UAISenseConfig
{
public:
	TSubclassOf<class USolarAISense_QueryTeammate> Implementation;                                    // 0x48(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, NoClear, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class USolarAISenseConfig_QueryTeammate* GetDefaultObj();

};

// 0x58 (0xD8 - 0x80)
// Class Solarland.SolarAISense_Radar
class USolarAISense_Radar : public UAISense
{
public:
	uint8                                        Pad_25C4[0x58];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarAISense_Radar* GetDefaultObj();

};

// 0x18 (0x60 - 0x48)
// Class Solarland.SolarAISenseConfig_Radar
class USolarAISenseConfig_Radar : public UAISenseConfig
{
public:
	TSubclassOf<class USolarAISense_Radar>       Implementation;                                    // 0x48(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, DisableEditOnInstance, NoClear, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FRadarDetectConfig>            RadarConfigs;                                      // 0x50(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class USolarAISenseConfig_Radar* GetDefaultObj();

};

// 0x30 (0xE0 - 0xB0)
// Class Solarland.SolarAITargetComponent
class USolarAITargetComponent : public UActorComponent
{
public:
	int32                                        AIActorCapacity;                                   // 0xB0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25C5[0x2C];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarAITargetComponent* GetDefaultObj();

};

// 0xA0 (0xD8 - 0x38)
// Class Solarland.SolarAkAudioSettings
class USolarAkAudioSettings : public UDeveloperSettings
{
public:
	bool                                         EnableBankLoadStrategy;                            // 0x38(0x1)(Edit, ZeroConstructor, Transient, Config, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         EnableDebugMode;                                   // 0x39(0x1)(Edit, ZeroConstructor, Transient, Config, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25C6[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DelayReleaseBankTime;                              // 0x3C(0x4)(Edit, ZeroConstructor, Transient, Config, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UDataTable>             SoundBankEventTable;                               // 0x40(0x28)(Edit, Transient, Config, DuplicateTransient, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                          InGameSceneName;                                   // 0x68(0x10)(Edit, ZeroConstructor, Transient, Config, DuplicateTransient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                          InLobbySceneName;                                  // 0x78(0x10)(Edit, ZeroConstructor, Transient, Config, DuplicateTransient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                          TutorialSceneName;                                 // 0x88(0x10)(Edit, ZeroConstructor, Transient, Config, DuplicateTransient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                          HomeSceneName;                                     // 0x98(0x10)(Edit, ZeroConstructor, Transient, Config, DuplicateTransient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                          WaitingLandSceneName;                              // 0xA8(0x10)(Edit, ZeroConstructor, Transient, Config, DuplicateTransient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FSolarAudioDetail>             BankDetailsArray;                                  // 0xB8(0x10)(Edit, ZeroConstructor, Transient, Config, DuplicateTransient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25C7[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarAkAudioSettings* GetDefaultObj();

};

// 0xA8 (0xD0 - 0x28)
// Class Solarland.SolarAkGameObject
class USolarAkGameObject : public UObject
{
public:
	uint8                                        Pad_25D3[0xA0];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bEnableTick;                                       // 0xC8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_25D4[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarAkGameObject* GetDefaultObj();

	void Wakeup();
	void UnloadBank(const class FString& InBankName);
	void UnLoadAllBanks();
	void Suspend(bool In_bRenderAnyway);
	int32 StopSoundByEvent(const class FString& In_EventName);
	int32 StaticStopSoundByEvent(const class FString& In_EventName);
	void StaticSetRTPCValue(const class FString& RTPC, float Value, int32 InterpolationTimeMs);
	int32 StaticPostAkEventByNameAndWaitForEnd(class UObject* WorldContextObject, const class FString& In_EventName, const struct FLatentActionInfo& LatentInfo);
	int32 StaticPostAkEventByName(const class FString& In_EventName);
	int32 StaticPlaySoundByEvent(const class FString& In_EventName);
	int32 StaticPlaySoundAtLocationByName(const class FString& AkName, const struct FVector& Location, const struct FRotator& Orientation, class UObject* WorldContextObject);
	int32 StaticPlaySoundAtLocation(class UAkAudioEvent* AkEvent, const struct FVector& Location, const struct FRotator& Orientation, class UObject* WorldContextObject);
	int32 StaticComponentPostAkEventByName(class UAkComponent* AkComponent, const class FString& In_EventName);
	void SolarLoadAllBanks();
	void SetSwitch(const class FString& SwitchGroup, const class FString& SwitchState);
	void SetRTPCValue(const class FString& RTPC, float Value, int32 InterpolationTimeMs);
	void SetMasterRTPCValue(float Value, int32 InterpolationTimeMs);
	void SetMasterRTPCMute(bool Mute);
	void SetGlobalRTPCValue(const class FString& RTPC, float Value, int32 InterpolationTimeMs);
	void ReceiveTick(float DeltaTime);
	void ReceiveEndPlay(enum class EEndPlayReason EndPlayReason);
	void ReceiveBeginPlay();
	int32 PostAkEventByNameAndWaitForEnd(const class FString& In_EventName, const struct FLatentActionInfo& LatentInfo);
	int32 PostAkEventByName(const class FString& InEventName1, const class FString& InEventName2);
	int32 PlaySoundByEvent(const class FString& In_EventName);
	void LoadBank(const class FString& InBankName);
	void LoadAllBanks();
};

// 0x270 (0x2A0 - 0x30)
// Class Solarland.SolarAkSoundManager
class USolarAkSoundManager : public USolarGameManager
{
public:
	uint8                                        Pad_25D8[0x270];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarAkSoundManager* GetDefaultObj();

	void UnloadBankIgnoreStrategy(class FName& BankName);
	void SetVoiceLanguage();
	void ReloadVoiceBanks();
	void OnBankLoadedForEventAtLocationCallbackFunc(enum class EAkResult In_loadResult, uint32 In_bankID);
	void OnAkBankUnloadedCallbackFunc(enum class EAkResult In_loadResult, uint32 In_bankID);
	void OnAkBankLoadedCallbackFunc(enum class EAkResult In_loadResult, uint32 In_bankID);
	void LoadBankIgnoreStrategy(class FName& BankName);
};

// 0x230 (0x368 - 0x138)
// Class Solarland.SolarAngleViewWidget
class USolarAngleViewWidget : public UWidget
{
public:
	struct FSlateBrush                           JoyStickThumb;                                     // 0x138(0x98)(Edit, NativeAccessSpecifierPrivate)
	struct FSlateBrush                           JoyStickThumbPress;                                // 0x1D0(0x98)(Edit, NativeAccessSpecifierPrivate)
	struct FSlateBrush                           JoyStickBG;                                        // 0x268(0x98)(Edit, NativeAccessSpecifierPrivate)
	struct FVector2D                             VisualSize;                                        // 0x300(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector2D                             ThumbSize;                                         // 0x308(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector2D                             InputScale;                                        // 0x310(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        ActiveOpacity;                                     // 0x318(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        InactiveOpacity;                                   // 0x31C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        TimeUntilDeactive;                                 // 0x320(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bPreventReCenter;                                  // 0x324(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_25D9[0x13];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnJoystickPressed;                                 // 0x338(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnJoystickRelease;                                 // 0x348(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnInputYawAndPitch;                                // 0x358(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class USolarAngleViewWidget* GetDefaultObj();

};

// 0x558 (0x7C0 - 0x268)
// Class Solarland.SolarAnimInstance
class USolarAnimInstance : public UAnimInstance
{
public:
	class ASolarCharacter*                       SolarCharacterOwner;                               // 0x268(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ENetRole                          OwnerRole;                                         // 0x270(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25DB[0xB];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  LeftHandIKSocketName;                              // 0x27C(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  RightHandWeaponSocketName;                         // 0x284(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25DC[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            LeftHandIKSocket2BoneTrans;                        // 0x290(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                               LeftHandEffectorLocation;                          // 0x2C0(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              LeftHandEffectorRotation;                          // 0x2CC(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_25DD[0x24];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               CurrentLeftHandJointLocation;                      // 0x2FC(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               RightHandEffectorLocation;                         // 0x308(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               RightHandJointLocation;                            // 0x314(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LeftIKHandWeight;                                  // 0x320(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CurrentReloadTimeRate;                             // 0x324(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CurrentSwitchWeaponTimeRate;                       // 0x328(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CurrentBoltTimeRate;                               // 0x32C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsJog;                                             // 0x330(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bInWater;                                          // 0x331(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25DE[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ViewPitch;                                         // 0x334(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ViewYaw;                                           // 0x338(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SimulatedProxyViewSmoothSpeed;                     // 0x33C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25DF[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UBlendSpace*                           FireTPPBlendSpace;                                 // 0x348(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FireTPPBlendSpaceX;                                // 0x350(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FIreTPPBlendSpaceY;                                // 0x354(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinSwimSpeed;                                      // 0x358(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Direction;                                         // 0x35C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Speed;                                             // 0x360(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        InputDirection;                                    // 0x364(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EIdleTurnType                     IdleTurnType;                                      // 0x368(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25E0[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TurnExplicitTime;                                  // 0x36C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DamageDirection;                                   // 0x370(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DamageReactionAlpha;                               // 0x374(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DamageNomalizeTime;                                // 0x378(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25E1[0x108];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	struct FLeftHandGripConfig                   CurrentGripData;                                   // 0x484(0x84)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_25E2[0x84];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Fire2PlayRateStand;                                // 0x58C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Fire2PlayRateCrouch;                               // 0x590(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHoldingShield;                                    // 0x594(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         ShieldRechargeIK;                                  // 0x595(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25E3[0x4E];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        FallingInputScale;                                 // 0x5E4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               IKOffsetLeftFootVector;                            // 0x5E8(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               IKOffsetRightFootVector;                           // 0x5F4(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               JointTargetLeftFootVector;                         // 0x600(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               JointTargetRightFootVector;                        // 0x60C(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              LeftFootRotation;                                  // 0x618(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                              RightFootRotation;                                 // 0x624(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                               HipOffsetVector;                                   // 0x630(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FootIKTraceDistanceRate;                           // 0x63C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CrouchFootIKTraceDistanceRate;                     // 0x640(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FootIKInterpSpeed;                                 // 0x644(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  LeftFootSocket;                                    // 0x648(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  RightFootSocket;                                   // 0x650(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         AnimParam_LeftOrRight;                             // 0x658(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25E4[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        LandingBlendWeight;                                // 0x65C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DefaultLeftHandWeaponAttachingBlendTime;           // 0x660(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DefaultLeftHandWeaponDetachingBlendTime;           // 0x664(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CurrentLeftHandWeaponAttachingBlendTime;           // 0x668(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CurrentLeftHandWeaponDetachingBlendTime;           // 0x66C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25E5[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        FootIKEnableDelayTime;                             // 0x698(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bActiveFootIK;                                     // 0x69C(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_25E6[0x33];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        FlailRate;                                         // 0x6D0(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ConfigPitchToZeroTime;                             // 0x6D4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FJetPackPoseSpeedRange                JetPack2PoseSpeedRangeX;                           // 0x6D8(0x8)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FJetPackPoseSpeedRange                JetPack2PoseSpeedRangeY;                           // 0x6E0(0x8)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FJetPackPoseSpeedRange                JetPack2PoseSpeedRangeZ;                           // 0x6E8(0x8)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	float                                        JetPack2PoseRestoreSmoothSpeed;                    // 0x6F0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FJetPackPoseSpeedRange                JetPack2UnderWaterPoseSpeedRangeX;                 // 0x6F4(0x8)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FJetPackPoseSpeedRange                JetPack2UnderWaterPoseSpeedRangeY;                 // 0x6FC(0x8)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_25E7[0xE];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bNewJet;                                           // 0x712(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bIsJetFlying;                                      // 0x713(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        bEnableDamageReact : 1;                            // Mask: 0x1, PropSize: 0x10x714(0x1)(BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bEnableWeaponAdditiveA : 1;                        // Mask: 0x2, PropSize: 0x10x714(0x1)(BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bEnableHandIK : 1;                                 // Mask: 0x4, PropSize: 0x10x714(0x1)(BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bEnableFootIK : 1;                                 // Mask: 0x8, PropSize: 0x10x714(0x1)(BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bEnableWeaponAdditiveB : 1;                        // Mask: 0x10, PropSize: 0x10x714(0x1)(BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bEnableWeaponJitter : 1;                           // Mask: 0x20, PropSize: 0x10x714(0x1)(BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        BitPad_1E3 : 2;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        MaxLODDamageReact;                                 // 0x715(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        MaxLODWeaponAdditiveA;                             // 0x716(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        MaxLODHandIK;                                      // 0x717(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        MaxLODFootIK;                                      // 0x718(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        MaxLODWeaponAdditiveB;                             // 0x719(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        MaxLODWeaponJitter;                                // 0x71A(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bIsDead : 1;                                       // Mask: 0x1, PropSize: 0x10x71B(0x1)(BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        BitPad_1E4 : 7;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	float                                        DeathAnimStartPosition;                            // 0x71C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<enum class ESpecAnimInstType, TSubclassOf<class UAnimInstance>> SpecAnimBPs;                                       // 0x720(0x50)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	uint8                                        bIsWalking : 1;                                    // Mask: 0x1, PropSize: 0x10x770(0x1)(BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bIsCrouching : 1;                                  // Mask: 0x2, PropSize: 0x10x770(0x1)(BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bIsFalling : 1;                                    // Mask: 0x4, PropSize: 0x10x770(0x1)(BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bIsFlying : 1;                                     // Mask: 0x8, PropSize: 0x10x770(0x1)(BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bIsSwimming : 1;                                   // Mask: 0x10, PropSize: 0x10x770(0x1)(BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bIsSprinting : 1;                                  // Mask: 0x20, PropSize: 0x10x770(0x1)(BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bIsInhibitSprinting : 1;                           // Mask: 0x40, PropSize: 0x10x770(0x1)(BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bIsSixDirRunForward : 1;                           // Mask: 0x80, PropSize: 0x10x770(0x1)(BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bIsVaulting : 1;                                   // Mask: 0x1, PropSize: 0x10x771(0x1)(BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        BitPad_1E5 : 7;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_25E8[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EWalkMode                         CurrentWalkMode;                                   // 0x774(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EWalkMode                         LastWalkMode;                                      // 0x775(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EAirMoveMode                      CurrentAirMoveMode;                                // 0x776(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EAirMoveMode                      LastAirMoveMode;                                   // 0x777(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ECruiseAnimState                  CurrentCruiseState;                                // 0x778(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_25E9[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAnimSequence*                         CruiseStartSequence;                               // 0x780(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimSequence*                         CruiseLoopSequence;                                // 0x788(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimSequence*                         CruiseEndSequence;                                 // 0x790(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MinSpeedForSkydiveFlyingInputBonus;                // 0x798(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxSpeedForSkydiveFlyingInputBonus;                // 0x79C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        InputYThresholdToCalcInputYByCamera;               // 0x7A0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MinDeltaYawFromCameraToGetMaxInputY;               // 0x7A4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ESkydiveStage                     CurrentSkydiveStage;                               // 0x7A8(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_25EA[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MinWallRunSurfaceAngle;                            // 0x7AC(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxWallRunSurfaceAngle;                            // 0x7B0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25EB[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EWeaponStatus                     WeaponStatus;                                      // 0x7B8(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bIsBolting : 1;                                    // Mask: 0x1, PropSize: 0x10x7B9(0x1)(BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bIsReloading : 1;                                  // Mask: 0x2, PropSize: 0x10x7B9(0x1)(BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bIsLeftHandDetaching : 1;                          // Mask: 0x4, PropSize: 0x10x7B9(0x1)(BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        BitPad_1E6 : 1;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        bIsInVehicle : 1;                                  // Mask: 0x10, PropSize: 0x10x7B9(0x1)(BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_1E7 : 3;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	enum class ESkillAnimType                    CurrentSkillAnimType;                              // 0x7BA(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_25EC[0x5];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarAnimInstance* GetDefaultObj();

	void OnMontagePlayEnded(class UAnimMontage* Montage, bool bInterrupted);
	bool NeedResolveWeaponJitter();
	bool JetPack2IsDashingCompletelyOver();
	bool IsHoldingWeapon();
	bool IsAiming();
	float GetWallRunSurfaceAngle();
	enum class EWallRunState GetWallRunState();
	struct FVector2D GetSkydiveFlyingInput();
	int32 GetOwnerGroupID();
	struct FVector GetJetPackDashAnimationBlend();
	struct FVector GetInputVector();
	struct FVector GetFallingInputVector();
	float GenJumpDirection(float InInputDirection);
	float GenBackwardDirection(float InInputDirection);
	bool CheckNewJetAndReset();
};

// 0x0 (0x38 - 0x38)
// Class Solarland.SolarAnimNotify_Damage
class USolarAnimNotify_Damage : public UAnimNotify
{
public:

	static class UClass* StaticClass();
	static class USolarAnimNotify_Damage* GetDefaultObj();

};

// 0x10 (0x38 - 0x28)
// Class Solarland.SolarAnoHelper
class USolarAnoHelper : public UObject
{
public:
	uint8                                        Pad_25F0[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bOpenAnoSDK;                                       // 0x30(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_25F1[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarAnoHelper* GetDefaultObj();

	void SendAntiDataToSsmOnDs(const class FString& AntiDataLog, class ASolarPlayerController* PC);
	void SendAntiDataToSsmOnClientNative(const class FString& ExtraParam, enum class EAnoAntiDataType AntiType);
	void SendAntiDataToSsmOnClient(const class FString& Param, enum class EAnoAntiDataType AntiType);
	void InitializeBind();
	class FString GetAntiLogOnClient(enum class EAnoAntiDataType Type);
	void AnoUnRegisterCallBack();
	void AnoSentDataToSvr(const struct FAnoSDKAntiData& Data);
	void AnoSentCoreTimeData(const struct FAnoSDKAntiData& AntiData);
	void AnoSDKSendData(const struct FAnoSDKAntiData& AntiData);
	void AnoSDKResume();
	void AnoSDKPause();
	void AnoChangeAntiDataFlow(const struct FAnoSDKAntiData& Data);
};

// 0x30 (0x60 - 0x30)
// Class Solarland.SolarApplicationLifetimeManager
class USolarApplicationLifetimeManager : public USolarGameManager
{
public:
	uint8                                        Pad_25F2[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int64                                        AppWillDeactivateTimestamp;                        // 0x38(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int64                                        AppHasReactivatedTimestamp;                        // 0x40(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_25F3[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarApplicationLifetimeManager* GetDefaultObj();

	void ReceiveOnWindowMinimized(bool bIsMinimized);
	void ReceiveOnAppWillDeactivate(int64 InTimestamp);
	void ReceiveOnAppHasReactivated(int64 InTimestamp);
};

// 0x140 (0x578 - 0x438)
// Class Solarland.SolarAssetManager
class USolarAssetManager : public UAssetManager
{
public:
	uint8                                        Pad_25F4[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnAssetManagerPreloadCompleted;                    // 0x450(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class USolarChunkAssignData*                 ChunkAssignDataCache;                              // 0x460(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class FString, class UObject*>          CachedObjMap;                                      // 0x468(0x50)(Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_25F5[0xC0];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarAssetManager* GetDefaultObj();

	void UnLoadPrimaryAssetByLabelPathForLua(const class FString& PrimaryAssetPath);
	void PreloadGameNormalAssets(class USolarGameInstanceBase* GameInstancePtr);
	void OnBindingActorDestory(class AActor* Actor);
	float GetPreloadAssetsProgress();
};

// 0x228 (0x260 - 0x38)
// Class Solarland.SolarAssetManagerSettings
class USolarAssetManagerSettings : public UDeveloperSettings
{
public:
	TArray<struct FPrimaryAssetTypeInfo>         PrimaryAssetTypesToScan;                           // 0x38(0x10)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FDirectoryPath>                DirectoriesToExclude;                              // 0x48(0x10)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FPrimaryAssetRulesOverride>    PrimaryAssetRules;                                 // 0x58(0x10)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FPrimaryAssetRulesCustomOverride> CustomPrimaryAssetRules;                           // 0x68(0x10)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<TSoftObjectPtr<class UWorld>, enum class ESolarPlayStage> WorldPlayStageConfig;                              // 0x78(0x50)(Edit, Config, NativeAccessSpecifierPublic)
	TMap<class FString, enum class ESolarPlayStage> FolderDefaultPlayStageConfig;                      // 0xC8(0x50)(Edit, Config, NativeAccessSpecifierPublic)
	bool                                         bOnlyCookProductionAssets;                         // 0x118(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShouldManagerDetermineTypeAndName;                // 0x119(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShouldGuessTypeAndNameInEditor;                   // 0x11A(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShouldAcquireMissingChunksOnLoad;                 // 0x11B(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25F6[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FAssetManagerRedirect>         PrimaryAssetIdRedirects;                           // 0x120(0x10)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FAssetManagerRedirect>         PrimaryAssetTypeRedirects;                         // 0x130(0x10)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FAssetManagerRedirect>         AssetPathRedirects;                                // 0x140(0x10)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSet<class FName>                            MetaDataTagsForAssetRegistry;                      // 0x150(0x50)(Edit, Config, AdvancedDisplay, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                       ChunkAssignConfigPath;                             // 0x1A0(0x18)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FPreloadBundle>                PreloadBundles;                                    // 0x1B8(0x10)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FSoftObjectPath>               PreloadAssets;                                     // 0x1C8(0x10)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FSoftClassPath>                PreloadClassAssets;                                // 0x1D8(0x10)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                       ItemActorDataTable;                                // 0x1E8(0x18)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                       BackpackTrailAssemblingDataTable;                  // 0x200(0x18)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                       ItemResourceDataTable;                             // 0x218(0x18)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                       BuffEffectDataTable;                               // 0x230(0x18)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                       ScreenEffectDataTable;                             // 0x248(0x18)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class USolarAssetManagerSettings* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Solarland.SolarAssistAimInterface
class ISolarAssistAimInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class ISolarAssistAimInterface* GetDefaultObj();

};

// 0x70 (0x2A8 - 0x238)
// Class Solarland.SolarAssistAimSimpleActor
class ASolarAssistAimSimpleActor : public AStaticMeshActor
{
public:
	uint8                                        Pad_25F7[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bSupportAssistAim;                                 // 0x240(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_25F8[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               CenterOffset;                                      // 0x244(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FWeaponAssistAimTargetConfig          AssistAimTargetConfig;                             // 0x250(0x48)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_25F9[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASolarAssistAimSimpleActor* GetDefaultObj();

	void SetCurrentVelocity(const struct FVector& Velocity);
	struct FVector GetCenterLocation();
};

// 0xB8 (0x168 - 0xB0)
// Class Solarland.SolarAttributeSubComponent
class USolarAttributeSubComponent : public UActorComponent
{
public:
	TMap<int32, class USolarAttributeSubData*>   AttributeSubs;                                     // 0xB0(0x50)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	TArray<struct FSolarAttributeSubReplicateData> AttributeSubRepData;                               // 0x100(0x10)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<int32, float>                           ClientAttributeSubValues;                          // 0x110(0x50)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	uint8                                        Pad_25FB[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarAttributeSubComponent* GetDefaultObj();

	void RemoveModifier(int32 AttributeSubID, class FName& Name);
	void OnRep_AttributeSubRepDatas();
	void OnAttributeSubChanged();
	float GetValue(int32 AttributeSubID);
	class USolarAttributeSubSystem* GetAttributeSubSystem();
	class USolarAttributeSubComponent* GetAttributeSubComponentFromActor(class AActor* InActor);
	int32 AddModifier(int32 AttributeSubID, enum class EGameplayModOp InOpType, float Magnitude, class FName& Name);
};

// 0x40 (0x68 - 0x28)
// Class Solarland.SolarAttributeSubData
class USolarAttributeSubData : public UObject
{
public:
	class USolarAttributeSubModifierGroup*       LocalModifier;                                     // 0x28(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarAttributeSubModifierGroup*       GlobalModifier;                                    // 0x30(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_25FC[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        AttributeID;                                       // 0x50(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CurrentValue;                                      // 0x54(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxValue;                                          // 0x58(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MinValue;                                          // 0x5C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        BaseValue;                                         // 0x60(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_25FD[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarAttributeSubData* GetDefaultObj();

	void OnModifierChanged();
};

// 0x30 (0x58 - 0x28)
// Class Solarland.SolarAttributeSubModifierGroup
class USolarAttributeSubModifierGroup : public UObject
{
public:
	uint8                                        Pad_25FE[0x30];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarAttributeSubModifierGroup* GetDefaultObj();

};

// 0xA8 (0xD8 - 0x30)
// Class Solarland.SolarAttributeSubSystem
class USolarAttributeSubSystem : public USolarGameManager
{
public:
	uint8                                        Pad_25FF[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<int32, struct FSolarAttributeConfig>    AttributeDefaultData;                              // 0x38(0x50)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPrivate)
	TMap<int32, class USolarAttributeSubModifierGroup*> GlobalModifiers;                                   // 0x88(0x50)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class USolarAttributeSubSystem* GetDefaultObj();

	float CharacterTakeDamage(class USolarAttributeSubComponent* AttributeSubComp, float Damage);
	float CalcWeaponFireDamage(class USolarAttributeSubComponent* AttributeSet, int32& ModeIdx);
};

// 0x0 (0x28 - 0x28)
// Class Solarland.SolarAutoFireInterface
class ISolarAutoFireInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class ISolarAutoFireInterface* GetDefaultObj();

	bool CanTriggerWeaponAutoFire(class ASolarCharacter* InSourceCharacter, struct FVector& InStartLocation, struct FHitResult& InAutoFireHitResult);
};

// 0x40 (0x2A0 - 0x260)
// Class Solarland.SolarAutoNavLinkVolume
class ASolarAutoNavLinkVolume : public AVolume
{
public:
	bool                                         bOverrideGlobalSetting;                            // 0x260(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2601[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FAutoNavLinkSetting                   AutoNavLinkSetting;                                // 0x264(0x3C)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class ASolarAutoNavLinkVolume* GetDefaultObj();

};

// 0x0 (0xC8 - 0xC8)
// Class Solarland.SolarAutoSaveDataTable
class USolarAutoSaveDataTable : public UDataTable
{
public:

	static class UClass* StaticClass();
	static class USolarAutoSaveDataTable* GetDefaultObj();

};

// 0xE8 (0x310 - 0x228)
// Class Solarland.SolarBackpackActor
class ASolarBackpackActor : public AActor
{
public:
	class USceneComponent*                       BackpackRoot;                                      // 0x228(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBackpackVertAnimMeshComponent*        BackpackMesh;                                      // 0x230(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ASolarCharacter*                       BackPackActorOwner;                                // 0x238(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class ASolarBackpackSFX*>             BackpackSFX;                                       // 0x240(0x10)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ASolarBackpackSFX*                     BackpackOffgasSFX;                                 // 0x250(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2603[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        OriginScale;                                       // 0x264(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2604[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bEnableMeshEffect;                                 // 0x26B(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2605[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class ASolarBackpackSFX>         TrailClass;                                        // 0x270(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class ASolarBackpackSFX>         OffgasClass;                                       // 0x278(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSet<class UParticleSystemComponent*>        ListenSet;                                         // 0x280(0x50)(ExportObject, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_2606[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                AssemblingId;                                      // 0x2D8(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  KnapsackFlySoundName;                              // 0x2E8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  StartKnapsackLandingSoundName;                     // 0x2F0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  StopKnapsackLandingSoundName;                      // 0x2F8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  StartWallRunSoundName;                             // 0x300(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  StopWallRunSoundName;                              // 0x308(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class ASolarBackpackActor* GetDefaultObj();

	void SetBackpackVisibilityByFlag(bool bNewVisibility, int32 Flag);
	void RefreshActorEffect();
	void OnMeshEffectFactorChange();
	void OnChildPSCompPreActive(class UParticleSystemComponent* PSComponent);
	void OnChildPSCompFinish(class UParticleSystemComponent* PSComponent);
	bool IsFly();
	bool IsCharging();
	bool HasEnergy();
	float GetBackpackOrginScale();
};

// 0x8 (0x270 - 0x268)
// Class Solarland.SolarBackpackAnimInstance
class USolarBackpackAnimInstance : public UAnimInstance
{
public:
	uint8                                        bIsInRoom : 1;                                     // Mask: 0x1, PropSize: 0x10x268(0x1)(BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bIsFlying : 1;                                     // Mask: 0x2, PropSize: 0x10x268(0x1)(BlueprintVisible, BlueprintReadOnly, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2607[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarBackpackAnimInstance* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Solarland.SolarBackpackCompInterface
class ISolarBackpackCompInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class ISolarBackpackCompInterface* GetDefaultObj();

	class USolarBackpackComponent* GetSolarBackpackComponent();
};

// 0x348 (0x3F8 - 0xB0)
// Class Solarland.SolarBackpackComponent
class USolarBackpackComponent : public UActorComponent
{
public:
	uint8                                        Pad_2650[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DeathBoxEnergyRate;                                // 0xB8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RebirthEnergyRate;                                 // 0xBC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2651[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnWeaponCreateCompleteDelegate;                    // 0xC8(0x10)(ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	uint8                                        Pad_2652[0x78];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        InitialSolarCharge;                                // 0x150(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SolarChargeInterval;                               // 0x154(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        InitialEnergyLimit;                                // 0x158(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        InitialExtraEnergyLimit;                           // 0x15C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        InitialExtraEnergyCharge;                          // 0x160(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        InitialChargeCD;                                   // 0x164(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2653[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        RechargeFrequencyFromSky;                          // 0x178(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RechargeFrequencyFromDeathBox;                     // 0x17C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RechargeFrequencyFromPile;                         // 0x180(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RechargeQuantityFromSky;                           // 0x184(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RechargeQuantityFromDeathBox;                      // 0x188(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RechargeQuantityFromPile;                          // 0x18C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2654[0x90];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        JetPackVerticalDashSpeedScale;                     // 0x220(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        JetPackHorizontalDashSpeedScale;                   // 0x224(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<int32, TSubclassOf<class UGameplayAbility>> ItemAbilities;                                     // 0x228(0x50)(Edit, BlueprintVisible, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TMap<int32, struct FGameplayAbilitySpecHandle> GivenAbilityHandles;                               // 0x278(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_2655[0x54];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bWeaponPartPickable;                               // 0x31C(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2656[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<int32, int32>                           DefaultDeathBoxEnergyConfig;                       // 0x320(0x50)(NativeAccessSpecifierPublic)
	TMap<int32, struct FDateTime>                DroppedItemIDMap;                                  // 0x370(0x50)(Protected, NativeAccessSpecifierProtected)
	float                                        DiscardItemDelayNoticeTime;                        // 0x3C0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2657[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<float>                                GradeRankProportion;                               // 0x3C8(0x10)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<int32>                                InitialGridNum;                                    // 0x3D8(0x10)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<int32>                                CustomMode_Hunt_InitialGridNum;                    // 0x3E8(0x10)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class USolarBackpackComponent* GetDefaultObj();

	void WeaponCreateCompleteDelegate__DelegateSignature(enum class EWeaponSlotType SlotType, class ASolarPlayerWeapon* WeaponPtr, class USolarBackpackComponent* SolarBackpackComponent);
	void UpdateCurrentExtraEnergy(float UpdateValue, enum class EEnergyUsage Usage);
	void UpdateCurrentEnergy(float UpdateValue, enum class EEnergyUsage Usage);
	void UpdateConsumeSlotUI();
	bool TryTriggerAbility(int32 InItemID);
	void TrySendDropItemTips(int32 InDroppedItemID);
	float TakeDeathBoxEnergy();
	void SmoothEnergy(float Amount);
	void SetMaxPileMap(int32 ItemID, int32 MaxNum);
	void SetBoxCharging(bool bSet);
	void SetBackPackGM(enum class EGmType Gmtypy, int32 ID, int32 Num, int32 Slot);
	bool ServerUseItem(int32 ItemID, int32 Num);
	void ServerSetJetPackModule(int32 NewJetPackModuleID, bool bForVertical);
	void ServerSetEnergyState(enum class EEnergyState State);
	void ServerRPCUpgradeWeapon(class ASolarElectricShop* InTargetShop, class ASolarPlayerWeapon* InTargetWeapon);
	void ServerRPCUpgradeShield();
	void ServerRPCTakeWeaponPartToBag(int32 Slot, int32 WeaponPartType);
	void ServerRPCTakeBagPartToWeapon(int32 Slot, int32 WeaponPartType);
	void ServerRPCSwitchWeaponPart(int32 Slot, int32 WeaponPartType);
	void ServerRPCPurchaseEShopItems(int32 InProductID, bool bIsRecommend, class ASolarElectricShop* InTargetShop);
	void ServerRPCDisCardWeaponUICall(int32 Slot);
	void ServerRPCDiscardWeaponPart(int32 Slot, int32 WeaponPartType);
	void ServerRPCDiscardWeapon(int32 InSlot);
	void ServerRPCDisCardItemUICall(int32 ID, int32 Num);
	void ServerRPCDiscardItem(int32 InItemID, int32 InItemNum);
	bool ServerDiscardWeapon(int32 Slot, int32 InTriggerType);
	bool ServerDiscardFromBackpackByType(enum class EItemType ItemType, bool InDropItem, int32 InTriggerType);
	bool ServerDiscardFromBackpack(int32 ItemID, int32 Num, bool InDropItem, int32 InTriggerType);
	void ServerConsumeExtraEnergy(float Amount, enum class EEnergyUsage Usage);
	void ServerConsumeEnergy(float Amount, enum class EEnergyUsage Usage);
	void ServerClearJetModule();
	void ServerClearEnergyState(enum class EEnergyState State);
	void ServerClearAllItems();
	void ServerBackpackGM(enum class EGmType InGmType, int32 InItemID, int32 InItemNum, int32 InSlot);
	bool ServerAddWeaponToWeaponSysByDataCache(enum class EWeaponSlotType SlotType, struct FSolarItemData& WeaponData, bool bDestroyPrev, bool IsAutoPickup, int32 InTriggerType, class ASolarPlayerWeapon* WeaponActorExists);
	int32 ServerAddToItemMapByIdAndNumForced(int32 ItemID, int32 Num);
	int32 ServerAddToItemMap(const struct FSolarItemData& ItemData);
	void ServerAddToEquipMap(struct FSolarItemData& ItemData, bool Bydefault, bool InDropItem);
	int32 ServerAddToBackpackByIdAndNum(int32 ItemID, int32 Num, bool Bydefault, float CurValue, bool NeedReset, int32 UserId, int32 TriggerType, int32 SourceType);
	int32 ServerAddToBackpack(struct FSolarItemData& ItemData, bool Bydefault, int32 TriggerType);
	void ReqUseEnergy(float Amount, enum class EEnergyUsage Usage);
	void RequestUpgradeWeapon(class ASolarElectricShop* InTargetShop, class ASolarPlayerWeapon* InTargetWeapon);
	void RequestUpgradeShield();
	void ReqesutPurchaseEShopItems(int32 InProductID, bool bIsRecommend, class ASolarElectricShop* InTargetShop);
	void RefreshWeaponPartsInBackPackUI();
	void RefreshWeaponInBackPackUIInternal();
	void RefreshWeaponInBackPackUI();
	void RefreshItemInBackPackUI();
	void RefreshEquipInBackPackUI();
	void RefreshBackPackUIState();
	void PurchaseEShopItemsResponse_Implementation(int32 InProductID, bool bSuccess, class ASolarElectricShop* InTargetShop);
	int32 PredictEnergy(float Amount);
	void OnReceiveItemAbilityCoolDown(struct FGameplayTag& Tags, bool bAdd);
	bool NetUseEnergy(float InCostEnergy, enum class EEnergyUsage Usage);
	void NetTakeWeaponPartToBagLuaCall(int32 Slot, int32 WeaponPartType);
	void NetTakeBagPartToWeaponLuaCall(int32 Slot, int32 WeaponPartType);
	void NetSwitchWeaponPartLuaCall(int32 Slot, int32 WeaponPartType);
	void NetDiscardWeaponPartLuaCall(int32 Slot, int32 WeaponPartType);
	bool ModuleOverflow2(int32 ModuleMax);
	bool ModuleOverflow(int32 ModuleMax);
	void LogBackPackItem();
	bool IsReviveItemRecommend();
	bool IsReviveItemPickable();
	bool IsReviveItem(int32 InItemID);
	bool IsExtraEnergyID(int32 ID);
	bool IsEquippedWeapon(int32 InThisID);
	bool IsEquippedOrHasBetterPart(int32 PartType, int32 Level);
	bool IsEnergyID(int32 ID);
	int32 IsBetterWeaponThanEquiped(struct FSolarItemData& InItemData, int32 InWeaponLevel, int32 InWeaponExp);
	bool IsBetterWeaponForBag(struct FSolarItemData& InItemData, int32 InWeaponLevel, int32 InWeaponExp);
	bool IsBetterScopeForBag(int32 PartType, int32 Level);
	bool IsBetterPartForBag(int32 PartType, int32 Level);
	void InitDefaultItem(int32 ItemID, int32 Num);
	void InitDeathBoxEnergyRate();
	bool HasEmptyWeaponSlot();
	bool GetWeaponSlotEmpty(int32 Slot);
	bool GetWeaponPartInBagClient(int32 TargetPartType, int32* OutPartLevel, int32* OutItemID);
	struct FSolarItemData GetWeaponItemDataBySlot(int32 Slot);
	bool GetWeaponDataBySolt(int32 Slot, struct FSolarItemData* ItemData);
	float GetTotalEnergy();
	float GetQuantityFrom(enum class EEnergyUsage Usage);
	struct FSolarItemData GetNewItemData(int32 ItemID, int32 Num);
	float GetMaxExtraEnergy();
	float GetMaxEnergy();
	float GetMaxDeathBoxEnergyFromConfig();
	int32 GetItemNumById(int32 ItemID);
	int32 GetItemMaxPile(int32 ItemID);
	bool GetItemDataByType(enum class EItemType ItemType, struct FSolarItemData* ItemData);
	bool GetItemDataById(int32 ItemID, struct FSolarItemData* ItemData);
	float GetFrequencyFrom(enum class EEnergyUsage Usage);
	struct FSolarItemData GetEquipItemDataByType(enum class EItemType ItemType);
	int32 GetEquipIdByType(enum class EItemType ItemType);
	float GetCurrExtraEnergy();
	struct FSolarItemData GetCurrentWeaponItemData();
	bool GetCurrentWeaponIsOverloading();
	void GetCurrentEquipItems(TArray<int32>* OutArray);
	float GetCurrEnergy();
	class ASolarCharacter* GetCharacterOwner();
	enum class EWeaponSlotType GetBestSuitSlotForCandidateWeapon(struct FSolarItemData& WeaponData, bool IsAutoPickup);
	bool GetAnyScopeInBagClient(int32* OutPartType, int32* OutPartLevel, int32* OutItemID);
	float GetAbilityRemainingCD(int32 InItemID);
	float GetAbilityDuration(int32 InItemID);
	void GameStatistics_ItemUseCount(struct FSolarItemData& InItemData);
	void ExecuteGM(const class FString& InStrGM);
	void EquipModuleByID(int32 ModuleID);
	int32 EquipModule(int32 ID, float ModuleMax);
	void EquipBatteryByID(int32 BatteryID);
	int32 EquipBattery(int32 ID, float BatteryMax, float Charge, float CD);
	void DiscardItemAndResetCharacterData(struct FSolarItemData& DiscardItem, bool DiscardDataOnly);
	void DiscardItem(const struct FSolarItemData& DiscardItem);
	void DelayCheckClearAbility(int32 InItemID);
	void CommitEnergy(int32 ID);
	bool ClearBackpackItemByID(int32 InItemID);
	void CheckToGiveAbility(int32 InItemID);
	void CheckToClearAbility(int32 InItemID);
	bool CheckIsRecWeaponParts(int32 ItemID);
	bool CheckIsEquippedDifferentScope(int32 PartID);
	bool CheckCanAutoPickupWeaponPart(int32 ItemID);
	float ChargeMain(float Amount, enum class EEnergyUsage Usage);
	float ChargeExtra(float Amount, enum class EEnergyUsage Usage);
	void CancelEnergy(int32 ID);
	bool BatteryOverflow(int32 BatteryMax);
	enum class EItemModifyResult AddBackpackItemByID(int32 InItemID, int32 InItemNum, bool InDropItem);
};

// 0x0 (0x28 - 0x28)
// Class Solarland.BackpackTrailAssemblingInterface
class IBackpackTrailAssemblingInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IBackpackTrailAssemblingInterface* GetDefaultObj();

	void OnBackpackTrailAssembling(struct FBackpackTrailAssemblingParams& Params, enum class EBackpackPropellingMode PropellingMode);
};

// 0x48 (0x13C8 - 0x1380)
// Class Solarland.SolarLeggedVehicle
class ASolarLeggedVehicle : public ASolarVehiclePawn
{
public:
	class USolarLeggedVehicleMovement*           LeggedVehicleMovement;                             // 0x1380(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCapsuleComponent*                     VehicleCapsule;                                    // 0x1388(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPrimitiveComponent*                   BlockForVehicleComp;                               // 0x1390(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        BlockForVehicleCollisionDelay;                     // 0x1398(0x4)(Edit, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2659[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EVehicleAnimationState            ReplicatedAnimState;                               // 0x13A8(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_265A[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FVector_NetQuantize>           InitialFootIkLocations;                            // 0x13B0(0x10)(Net, ZeroConstructor, RepNotify, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        StandOnVehicleRadiusMultiplier;                    // 0x13C0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_265B[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASolarLeggedVehicle* GetDefaultObj();

	void OnStandOnVehicle(bool bOnVehicle);
	void OnRep_ReplicatedAnimState(enum class EVehicleAnimationState PreviousState);
	void OnRep_InitialFootIkLocations();
};

// 0x58 (0x1420 - 0x13C8)
// Class Solarland.SolarBackpackerVehicle
class ASolarBackpackerVehicle : public ASolarLeggedVehicle
{
public:
	class UStaticMeshComponent*                  VehicleHitBox;                                     // 0x13C8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UStaticMesh>            BackpackMesh;                                      // 0x13D0(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStaticMesh*                           OriginalBackpackMesh;                              // 0x13F8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        BackpackerItemID;                                  // 0x1400(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_265C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UGameplayEffect>           SheildRecoverEffect;                               // 0x1408(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ASolarCharacter*                       AttachedPlayer;                                    // 0x1410(0x8)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bShieldOpened;                                     // 0x1418(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bVehicleDroped;                                    // 0x1419(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_265D[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASolarBackpackerVehicle* GetDefaultObj();

	void OnRep_VehicleDropped();
	void OnRep_ShieldChanged();
	void OnRep_AttachedToPlayer();
};

// 0x58 (0x280 - 0x228)
// Class Solarland.SolarBackpackSFX
class ASolarBackpackSFX : public AActor
{
public:
	uint8                                        Pad_265F[0x58];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASolarBackpackSFX* GetDefaultObj();

	void OnPropellingModeChanged(enum class EBackpackPropellingMode PropellingMode);
	class UParticleSystemComponent* GetTrailEffectComponent();
	void BackpackSFXLaunch(bool GroundDetected, struct FVector& GroundLocation, struct FVector& GroundNormal);
	void BackpackSFXEnd();
	void BackpackSFXBegin(enum class EFXJetType InJetType, bool GroundDetected);
};

// 0x8 (0x30 - 0x28)
// Class Solarland.SolarBattleModel
class USolarBattleModel : public USolarAbstractModel
{
public:
	uint8                                        Pad_2660[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarBattleModel* GetDefaultObj();

};

// 0x58 (0x80 - 0x28)
// Class Solarland.BattleSpectatorItemData
class UBattleSpectatorItemData : public UObject
{
public:
	class USolarBattleSpectatorWidget*           SpectatorWidget;                                   // 0x28(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2661[0x50];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UBattleSpectatorItemData* GetDefaultObj();

	void Init(TMap<class FString, class FString> BattleData);
	void GetBattleData(const class FString& InDataName, class FText* OutText);
};

// 0x0 (0x348 - 0x348)
// Class Solarland.SolarBattleSpectatorWidget
class USolarBattleSpectatorWidget : public USolarUserWidget
{
public:

	static class UClass* StaticClass();
	static class USolarBattleSpectatorWidget* GetDefaultObj();

	void UpdatePageInfo(int32& CurrentPage, int32& TotalPage);
	void SetPageSize(int32 PageSize);
	void SetBattleDatas(TArray<class UBattleSpectatorItemData*>& BattleDatas);
	void RequestStartPlayReplay(const class FString& BattleID);
	void RequestBattleData(int32 PageIndex);
	void RefreshBattleList();
	void OnStartPlayReplayFailed(const class FString& BattleID);
	void AddBattleDatas(TArray<class UBattleSpectatorItemData*>& BattleDatas);
};

// 0x0 (0x28 - 0x28)
// Class Solarland.SolarBlueprintFunctionLibrary
class USolarBlueprintFunctionLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class USolarBlueprintFunctionLibrary* GetDefaultObj();

	bool WorldPosToWidgetPosForWorldMark(class APlayerController* Controller, struct FVector& Pos, struct FVector2D* ScreenPos, float* AngleForArrow);
	bool WorldPosToWidgetPosForEmoji(class APlayerController* Controller, struct FVector& Pos, struct FVector2D* ScreenPos);
	bool WorldPosToWidgetPos(class APlayerController* Controller, struct FVector& Pos, struct FVector2D* ScreenPos);
	void UnlockCursor(class APlayerController* PlayerController);
	void TryGetLocalText(int32 LocalTextId, bool* bSuccess, class FString* LocalText);
	void TryGetHUDColorForPlayerLevel(class UObject* WorldContext, int32 PlayerLevel, bool* bFoundConfig, struct FLinearColor* BaseColor, struct FLinearColor* DecorateColor);
	void Test_SolarBlueprintFunctionLibrary();
	void SortObjectArrayByName(TArray<class UObject*>& InArray);
	class AActor* SolarSpawnActor(class UObject* WorldContextObject, TSoftClassPtr<class AActor> SoftClass, struct FTransform& SpawnTransform, class AActor* Owner, class APawn* Instigator, enum class ESpawnActorCollisionHandlingMethod CollisionHandlingOverride);
	void SetUserFocus(class APlayerController* PlayerController, class UWidget* TargetWidget);
	void ReleaseFocus(class APlayerController* PlayerController);
	void RebuildCursorWidgets(class APlayerController* PlayerController);
	void LockCursor(class APlayerController* PlayerController, class UWidget* TargetWidget);
	class UPassiveSkillDataAsset* LoadPassiveSkillDataAssetForCharacter(class UObject* WorldContext, int32 CharacterId);
	float K2_GetAsyncLoadPercentage(class FName& PackageName);
	bool IsUsedSteamSDKLogin();
	bool IsRenderingMobilePlatform();
	bool IsPlatformSupportLimChat();
	bool IsPlatformSteam();
	bool IsPlatformOffcialWin();
	bool IsPlatformEpic();
	bool IsPlatformDesktop();
	bool IsMobilePlatform();
	bool IsLowMemoryDeivce();
	bool IsLowLevelGraphicsQuality(class UObject* InObject);
	bool IsLowLevelDevice(class UObject* InObject);
	bool IsLowerLevelDevice(class UObject* InObject, enum class ESolarGraphicsQualityLevel InLowerThanThis);
	bool HasPassiveSkillDataAssetConfig(class UObject* WorldContext, int32 CharacterId);
	float GetViewportScale();
	void GetTipsPosition(class UObject* WorldContextObject, class UWidget* FocusWidget, float Offset, struct FVector2D* FixedPos, int32* Dimsion);
	class ASolarGameState* GetSolarGameState(class UObject* WorldContextObject);
	class ASolarGameMode* GetSolarGameMode(class UObject* WorldContextObject);
	struct FVector2D GetScreenSize();
	struct FVector2D GetScreenResolution();
	enum class ESolarDeviceLevel GetDeviceLevel(class UObject* InObject);
	enum class ESolarGraphicsQualityLevel GetCurQualityLevel(class UObject* InObject);
	TArray<class FString> GetAssetDependencies(class FName& Path);
	void GetActorsWithTagInSubLevelByName(class UObject* WorldContextObject, class FName& LevelName, class FName& Tag, TArray<class AActor*>* OutActors);
	void ExitGame(bool bForce);
	class FString EnumToString(const class FString& Enum, int32 EnumValue);
	void EnableInputAndHideCursor(class ASolarPlayerController* Controller);
	void EnableAnalogCursor(class APlayerController* PlayerController);
	void DisableInputAndShowCursor(class ASolarPlayerController* Controller);
	void DisableAnalogCursor(class APlayerController* PlayerController);
	void ChangeSessionMode(bool& IfChangeToPCSession);
	void AbsoluteToViewport(class UObject* WorldContextObject, struct FVector2D& AbsolutePosition, struct FVector2D* ViewPortPos);
};

// 0x58 (0x280 - 0x228)
// Class Solarland.SolarBombActor
class ASolarBombActor : public AActor
{
public:
	bool                                         bFireWater;                                        // 0x228(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2671[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FBombingZoneBomb                      BombConfig;                                        // 0x22C(0x1C)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                         bAutoDestroyAfterFire;                             // 0x248(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2672[0xB];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TargetLandingTime;                                 // 0x254(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                       WaterBombEffect;                                   // 0x258(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                       BombEffect;                                        // 0x260(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstanceDynamic*              GuideLine;                                         // 0x268(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAkComponent*                          AkAudioComponent;                                  // 0x270(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarAkGameObject*                    SolarAkGameObject;                                 // 0x278(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class ASolarBombActor* GetDefaultObj();

	void InitSolarAkGameObject(class UActorComponent* Component, bool bReset);
};

// 0x38 (0x260 - 0x228)
// Class Solarland.SolarBombingZoneManager
class ASolarBombingZoneManager : public AActor
{
public:
	TSubclassOf<class ASolarBombActor>           BPClass;                                           // 0x228(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FBombingZone>                  ZoneArray;                                         // 0x230(0x10)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2676[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        WeightInCar;                                       // 0x244(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        WeightInPoision;                                   // 0x248(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        WeightInRoom;                                      // 0x24C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                             LocationLimit;                                     // 0x250(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        NotifyTime;                                        // 0x258(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2677[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASolarBombingZoneManager* GetDefaultObj();

	void OnCreateBombingZone(int32 ID, bool bSpecificLocation, const struct FVector& TargetLocation);
	struct FBombingZoneBomb GetBombData(int32 ZoneId);
	bool CreateBombingZone(struct FBombingZone* Zone, bool bSpecificLocation, const struct FVector& TargetLocation);
};

// 0x48 (0x78 - 0x30)
// Class Solarland.SolarBotAIConfig
class USolarBotAIConfig : public UDataAsset
{
public:
	struct FGameplayTagContainer                 IdentifierTags;                                    // 0x30(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class USolarBotConfigSection_Battle*         BattleSection;                                     // 0x50(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarBotConfigSection_Loot*           LootSection;                                       // 0x58(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarBotConfigSection_Perception*     PerceptionSection;                                 // 0x60(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class USolarBotConfigSection*>        CustomSections;                                    // 0x68(0x10)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class USolarBotAIConfig* GetDefaultObj();

};

// 0x480 (0x7F0 - 0x370)
// Class Solarland.SolarBotAIController
class ASolarBotAIController : public ASolarAIControllerBase
{
public:
	uint8                                        Pad_2680[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class USolarBotLootComponent*                BotLootComponent;                                  // 0x380(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarPerceptionComponent*             BotPerceptionComponent;                            // 0x388(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarBotAIConfig*                     BotConfigPreset;                                   // 0x390(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FSolarBotBattleConfig                 DefaultBattleConfig;                               // 0x398(0x158)(Edit, BlueprintVisible, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FNavAgentProperties                   VehicleAgentProperties;                            // 0x4F0(0x30)(Edit, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        UniqueSpawnerID;                                   // 0x520(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          BattleSubTreeTag;                                  // 0x524(0x8)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        DefaultDifficultyLevel;                            // 0x52C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CurrentDifficultyLevel;                            // 0x530(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CharacterLookAtInterpSpeed;                        // 0x534(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinSpecVehicleDeltaPitch;                          // 0x538(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bInitDefaultWeapon;                                // 0x53C(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2681[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        BotDefaultWeaponId;                                // 0x540(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAimBoneWhenFire;                                  // 0x544(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2682[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  FireTargetBoneName;                                // 0x548(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSpawnDeathBox;                                    // 0x550(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2683[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FBotBonusDropConfig                   BonusDropConfig;                                   // 0x554(0x18)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	float                                        MinimumDistanceForRepeatedBoarding;                // 0x56C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EBotAIType                        BotAIType;                                         // 0x570(0x1)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2684[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        BotFeature;                                        // 0x574(0x4)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             MovementVector;                                    // 0x578(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UNavigationQueryFilter>    BPDefaultNavigationFilterClass;                    // 0x580(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2685[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<struct FGameplayTag, class UBehaviorTree*> SubTreeMap;                                        // 0x5B8(0x50)(Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_2686[0x38];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TWeakObjectPtr<class AActor>                 AITarget;                                          // 0x640(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarBotShootSimulater*               ShootSimulater;                                    // 0x648(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2687[0x68];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnBotAIDeath;                                      // 0x6B8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_2688[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TWeakObjectPtr<class ASolarCharacter>        PossessedCharacer;                                 // 0x6D4(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2689[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USolarFollowingComponent*              PathFollowingComp;                                 // 0x6E0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_268A[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UNgaiAIControllerComponent*            NgaiComponent;                                     // 0x6F0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_268B[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ValidEmojiUseDistance;                             // 0x708(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_268C[0xCC];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        WorldMarkMessageDelayTime;                         // 0x7D8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_268D[0x14];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASolarBotAIController* GetDefaultObj();

	void UpdateDynamicSubtree();
	void UpdateCharacterRotate(float DeltaTime);
	void StopBehaviorTree();
	void SetViewTargetWithBlend(class AActor* NewViewTarget, float BlendTime, enum class EViewTargetBlendFunction BlendFunc, float BlendExp, bool bLockOutgoing);
	bool SetupBotAITargetSelectConfig();
	bool SetupBotAIDifficulty(int32 DifficultyLevel, bool bAsDefault);
	bool SetupBotAICanUseCharacterData(int32 CharacterId, int32 SkinId);
	void SetDynamicSubtree(const struct FGameplayTag& InjectTag, class UBehaviorTree* BehaviorAsset);
	bool SetBotConfigPresetByID(int32 BotConfigPresetID);
	void SetBotConfigPreset(class USolarBotAIConfig* InConfig);
	void OnReset();
	void OnPlayerGetOffVehicle(int32 GetOffSeatIndex, class ASolarCharacter* GetOffPlayer);
	void OnEnterLanding();
	bool IsTeamLeader();
	bool IsInPlayerTeam();
	bool IsIndependent();
	bool IsAccompanyingPlayer();
	class ASolarCharacter* GetSolarCharacter();
	TArray<enum class ESolarTablesEnum_CharacterType> GetPreferPickHeroTypes();
	uint8 GetMyTeamID();
	bool CanActivateVehicleAbility(int32 SeatIndex, int32 AbilityIndex);
	float CalculateScoreForAITarget(class AActor* AITargetActor);
};

// 0x20 (0x810 - 0x7F0)
// Class Solarland.SolarBotAIControllerInGuide
class ASolarBotAIControllerInGuide : public ASolarBotAIController
{
public:
	TArray<struct FDeathBoxItemData>             DeathBoxItems;                                     // 0x7F0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_268E[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASolarBotAIControllerInGuide* GetDefaultObj();

};

// 0x40 (0x830 - 0x7F0)
// Class Solarland.SolarBotAIControllerOnVehicle
class ASolarBotAIControllerOnVehicle : public ASolarBotAIController
{
public:
	uint8                                        Pad_2690[0x40];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASolarBotAIControllerOnVehicle* GetDefaultObj();

	void SetMoveStop(bool NeedStop);
	void SetFireStop(bool NeedStop);
	void OnVehicleDriverGetOff(int32 GetOffSeatIndex, class ASolarCharacter* GetOffPlayer);
};

// 0x220 (0x248 - 0x28)
// Class Solarland.SolarBotAITeamManager
class USolarBotAITeamManager : public UObject
{
public:
	float                                        UpdateInterval;                                    // 0x28(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DefaultSeparateDistance;                           // 0x2C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DefaultReturnDistance;                             // 0x30(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_26AC[0x5C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class ASolarBotTeamVisualizer>   DebugVisualizerClass;                              // 0x90(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ASolarBotTeamVisualizer*               DebugVisualizer;                                   // 0x98(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDataTable*                            GlobalGameTeamConfigs;                             // 0xA0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class ASolarCharacter*, class ASolarBotAIController*> AllocatedCharacters;                               // 0xA8(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
	TArray<class ASolarCharacter*>               AbandonedCharacters;                               // 0xF8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<enum class EBotInteractCondition, struct FBotEmojiSetting> EmojiTaskSettings;                                 // 0x108(0x50)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TMap<int32, enum class EBotInteractCondition> ResponseToVoiceType;                               // 0x158(0x50)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TMap<enum class EWorldMarkType, enum class EBotInteractCondition> ResponseToMarkType;                                // 0x1A8(0x50)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TMap<enum class EBotInteractCondition, struct FBotResponseSetting> ResponseTaskSettings;                              // 0x1F8(0x50)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class USolarBotAITeamManager* GetDefaultObj();

	void UpdateAllocatedList(class ASolarBotAIController* InController, TArray<class ASolarCharacter*>& AliveCharacterArray);
	bool TryCancelCurrentRescueTarget(class ASolarBotAIController* InController, class ASolarCharacter* CancelledCharacter);
	bool ShouldTeamActivate(struct FSolarBotTeamInfo& BotInfo);
	void SetTeamBlackboardValueAsVector(int32 TeamID, class FName& KeyName, const struct FVector& VectorValue, enum class ESolarBotMemberState InBotState, bool bSkipIndependent);
	void SetTeamBlackboardValueAsString(int32 TeamID, class FName& KeyName, const class FString& StringValue, enum class ESolarBotMemberState InBotState, bool bSkipIndependent);
	void SetTeamBlackboardValueAsRotator(int32 TeamID, class FName& KeyName, const struct FRotator& VectorValue, enum class ESolarBotMemberState InBotState, bool bSkipIndependent);
	void SetTeamBlackboardValueAsObject(int32 TeamID, class FName& KeyName, class UObject* ObjectValue, enum class ESolarBotMemberState InBotState, bool bSkipIndependent);
	void SetTeamBlackboardValueAsName(int32 TeamID, class FName& KeyName, class FName NameValue, enum class ESolarBotMemberState InBotState, bool bSkipIndependent);
	void SetTeamBlackboardValueAsInt(int32 TeamID, class FName& KeyName, int32 IntValue, enum class ESolarBotMemberState InBotState, bool bSkipIndependent);
	void SetTeamBlackboardValueAsFloat(int32 TeamID, class FName& KeyName, float FloatValue, enum class ESolarBotMemberState InBotState, bool bSkipIndependent);
	void SetTeamBlackboardValueAsEnum(int32 TeamID, class FName& KeyName, uint8 EnumValue, enum class ESolarBotMemberState InBotState, bool bSkipIndependent);
	void SetTeamBlackboardValueAsClass(int32 TeamID, class FName& KeyName, class UClass* ClassValue, enum class ESolarBotMemberState InBotState, bool bSkipIndependent);
	void SetTeamBlackboardValueAsBool(int32 TeamID, class FName& KeyName, bool BoolValue, enum class ESolarBotMemberState InBotState, bool bSkipIndependent);
	void SetBotDropOut(class ASolarBotAIController* InController, bool bDropOut);
	void OnTeamDeactive(struct FSolarBotTeamInfo& TeamInfo);
	void OnTeamActivate(struct FSolarBotTeamInfo& TeamInfo);
	void OnBotUnRegister(struct FSolarBotMemberInfo& BotInfo);
	void OnBotStateChanged(struct FSolarBotMemberInfo& BotInfo, enum class ESolarBotMemberState OldState);
	void OnBotRegister(struct FSolarBotMemberInfo& BotInfo);
	bool IsValidTeamID(int32 InTeamId);
	bool IsTeamLeader(class ASolarBotAIController* InController);
	bool IsIndependent(class ASolarBotAIController* InController);
	bool GetTeamPlayerInfo(class ASolarBotAIController* InController, TArray<class ASolarCharacter*>* PlayerArray);
	bool GetRescueInfo(class ASolarBotAIController* InController, TArray<class ASolarCharacter*>* DyingPlayerArray, TArray<class ASolarCharacter*>* DeadPlayerArray, TArray<class ASolarCharacter*>* DyingBotArray, TArray<class ASolarCharacter*>* DeadBotArray);
	bool GetBotTeamInfo(class ASolarBotAIController* InController, struct FSolarBotTeamInfo* OutTeamInfo);
	bool GetBotMemberInfo(class ASolarBotAIController* InController, struct FSolarBotMemberInfo* OutMemberInfo);
	class USolarBotAITeamManager* Get(class UObject* Context);
	bool CheckBotTeamState(class ASolarBotAIController* InController, enum class ESolarBotMemberState MemberState);
	struct FVector CalculateTeamPosition(struct FSolarBotTeamInfo& TeamInfo);
	bool AllocatedRescueTarget(class ASolarBotAIController* InController, class ASolarCharacter* RescuedCharacter);
	void AbandonedCurrentRescueTarget(class ASolarBotAIController* InController, class ASolarCharacter* AbandonedCharacter);
};

// 0x138 (0x160 - 0x28)
// Class Solarland.SolarBotAIWarmServiceSystem
class USolarBotAIWarmServiceSystem : public UObject
{
public:
	TMap<class ASolarPlayerState*, struct FWarmTargetState> WarmTargets;                                       // 0x28(0x50)(BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	TArray<struct FTimeItemsSetting>             ItemsByTime;                                       // 0x78(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_26B8[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TriggerWarmServiceValue;                           // 0x8C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxGroupDistance;                                  // 0x90(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        MaxServiceBot;                                     // 0x94(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_26B9[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        TraceRecordLength;                                 // 0x98(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_26BA[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TraceRecordInterval;                               // 0xA8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_26BB[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        UpdateInterval;                                    // 0xB8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_26BC[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UEnvQuery*                             TeleportLocEQS;                                    // 0xC0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EEnvQueryRunMode                  TeleportLocEQSRunMode;                             // 0xC8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_26BD[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        PopAllTriggerPlayerNum;                            // 0xCC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        PopAllTriggerTime;                                 // 0xD0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_26BE[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UEnvQuery*                             PopAllBotEQS;                                      // 0xD8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EEnvQueryRunMode                  PopAllBotEQSRunMode;                               // 0xE0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_26BF[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        RewardScore;                                       // 0xE4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        MaxNumFishingBot;                                  // 0xE8(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        NumPlayerKillThreshold;                            // 0xE9(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        NumRealPlayerKillThreshold;                        // 0xEA(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_26C0[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UEnvQuery*                             FishingTeleportEQS;                                // 0xF0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EEnvQueryRunMode                  FishingTeleportEQSRunMode;                         // 0xF8(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_26C1[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UGameplayEffect>           FishingInvisibleEffectClass;                       // 0x100(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        FishingBotCharacterID;                             // 0x108(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        FishingBotSkinID;                                  // 0x10C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<int32>                                FilterDamageWeaponIDs;                             // 0x110(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<int32>                                FilterDamageVehicleIDs;                            // 0x120(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCheckAccidentHit;                                 // 0x130(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_26C2[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        LimitAccidentAngle;                                // 0x134(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        ExReportMinAimbotThreshold;                        // 0x138(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        ExReportMinBiteThreshold;                          // 0x139(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_26C3[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class ASolarPlayerState*>             SuspiciousPlayers;                                 // 0x140(0x10)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class ASolarPlayerState*>             FishingBots;                                       // 0x150(0x10)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class USolarBotAIWarmServiceSystem* GetDefaultObj();

	void UpdateWarmTargetStateByEvent(class ASolarPlayerState* InPS, enum class EUpdateWarmServiceEventType InEventType);
	void StartPlayerWarmService(class ASolarPlayerState* InPS);
	void RecordWarmTargetKDAState(class ASolarPlayerState* InPS, class ASolarPlayerState* KilledPC);
	void OnRequestWarmServiceSuccess(TArray<class ASolarPlayerState*>& PlayerArray);
	void OnRequestWarmServiceFail(TArray<class ASolarPlayerState*>& PlayerArray);
	void OnPopBotForFishing(class USolarPreservedBotPopTask* InTask, class ASolarPlayerState* BotPS, struct FVector& TeleportLoc);
	float GetWarmScoreByEvent(class ASolarPlayerState* InPS, enum class EUpdateWarmServiceEventType InEventType);
	float GetTimeOutBattle(class ASolarPlayerState* InPS);
	float GetTimeBeforeOutPoisonCirecle(class ASolarPlayerState* InPS);
	float GetTargetTickValue(class ASolarPlayerState* InPS, struct FWarmTargetState& InState);
	float GetLastBattleMVPScore(class ASolarPlayerState* InPS);
	uint8 GetKilledPlayerNum(class ASolarPlayerState* InPS);
	uint8 GetKilledBotNum(class ASolarPlayerState* InPS);
	float GetFrustrationValue(class ASolarPlayerState* InPS);
	uint8 GetEnemyNumInRange(class ASolarPlayerState* InPS, float RangeRadius);
	int32 GetActivePlayerNumBP(int32 PlayerNum, int32 PlayerTeamNum);
	class USolarBotAIWarmServiceSystem* Get(class UObject* Context);
};

// 0x8 (0x30 - 0x28)
// Class Solarland.SolarBotConfigSection
class USolarBotConfigSection : public UObject
{
public:
	struct FGameplayTag                          SectionTag;                                        // 0x28(0x8)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class USolarBotConfigSection* GetDefaultObj();

};

// 0x190 (0x1C0 - 0x30)
// Class Solarland.SolarBotConfigSection_Battle
class USolarBotConfigSection_Battle : public USolarBotConfigSection
{
public:
	struct FSolarBotBattleConfig                 BattleConfig;                                      // 0x30(0x158)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FSolarBotUseSniperPosConfig           SniperPosConfig;                                   // 0x188(0x1C)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_26C4[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<enum class ESolarTablesEnum_CharacterType> PreferPickHeroTypes;                               // 0x1A8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBehaviorTree*                         BattleSubTree;                                     // 0x1B8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class USolarBotConfigSection_Battle* GetDefaultObj();

};

// 0xB0 (0xE0 - 0x30)
// Class Solarland.SolarBotConfigSection_Loot
class USolarBotConfigSection_Loot : public USolarBotConfigSection
{
public:
	struct FSolarBotLootValuationConfig          ValuationConfig;                                   // 0x30(0x44)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FSolarBotLootSearchConfig             SearchConfig;                                      // 0x74(0x44)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	struct FSolarBotLootWeaponFeedConfig         WeaponFeedConfig;                                  // 0xB8(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UBehaviorTree*                         LootSubTree;                                       // 0xD8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class USolarBotConfigSection_Loot* GetDefaultObj();

};

// 0xC0 (0xF0 - 0x30)
// Class Solarland.SolarBotConfigSection_Perception
class USolarBotConfigSection_Perception : public USolarBotConfigSection
{
public:
	struct FSolarBotThreatConfig                 ThreatConfig;                                      // 0x30(0x6C)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_26C5[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<enum class EWeaponType, struct FSolarBotThreatConfig> WPSpecificThreatConfig;                            // 0xA0(0x50)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class USolarBotConfigSection_Perception* GetDefaultObj();

};

// 0x8 (0x38 - 0x30)
// Class Solarland.SolarBotConfigSection_SafeArea
class USolarBotConfigSection_SafeArea : public USolarBotConfigSection
{
public:
	struct FSolarBotSafeAreaConfig               SafeAreaConfig;                                    // 0x30(0x8)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class USolarBotConfigSection_SafeArea* GetDefaultObj();

};

// 0x38 (0x68 - 0x30)
// Class Solarland.SolarBotConfigSection_SkyDiving
class USolarBotConfigSection_SkyDiving : public USolarBotConfigSection
{
public:
	struct FSolarBotSkyDivingConfig              SkyDivingConfig;                                   // 0x30(0x24)(Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_26C6[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FName>                          PreferLootZoneTags;                                // 0x58(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class USolarBotConfigSection_SkyDiving* GetDefaultObj();

};

// 0xB8 (0x168 - 0xB0)
// Class Solarland.SolarBotLootComponent
class USolarBotLootComponent : public UActorComponent
{
public:
	struct FGameplayTag                          LootSubTreeTag;                                    // 0xB0(0x8)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSolarBotLootValuationConfig          DefaultValuationConfig;                            // 0xB8(0x44)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_26C7[0x6C];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarBotLootComponent* GetDefaultObj();

};

// 0x30 (0x260 - 0x230)
// Class Solarland.SolarBotOnVehicleActionTrigger
class ASolarBotOnVehicleActionTrigger : public ATriggerBox
{
public:
	int32                                        VehicleStopAreaId;                                 // 0x230(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EBotOnVehicleStopType             StopType;                                          // 0x234(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26CA[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MoveStopDelayTime;                                 // 0x238(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EBotOnVehicleFireType             FireType;                                          // 0x23C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26CB[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        FireOffDelayTime;                                  // 0x240(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ActivateVehicleAbilitySeatIndex;                   // 0x244(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26CC[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASolarBotOnVehicleActionTrigger* GetDefaultObj();

	void OnUpdatedComponentOverlapEnd(class UPrimitiveComponent* OverlappedComp, class AActor* Other, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void OnUpdatedComponentOverlapBegin(class UPrimitiveComponent* OverlappedComp, class AActor* Other, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
};

// 0x0 (0x830 - 0x830)
// Class Solarland.SolarBotOnVehicleOnLineCtrl
class ASolarBotOnVehicleOnLineCtrl : public ASolarBotAIControllerOnVehicle
{
public:

	static class UClass* StaticClass();
	static class ASolarBotOnVehicleOnLineCtrl* GetDefaultObj();

};

// 0x80 (0xA8 - 0x28)
// Class Solarland.SolarBotShootSimulater
class USolarBotShootSimulater : public UObject
{
public:
	class ASolarBotAIController*                 OwnerController;                                   // 0x28(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AActor*                                LockedTargetActor;                                 // 0x30(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_26CD[0x70];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarBotShootSimulater* GetDefaultObj();

};

// 0x20 (0x248 - 0x228)
// Class Solarland.SolarBotSniperPosition
class ASolarBotSniperPosition : public AActor
{
public:
	float                                        ReachRadius;                                       // 0x228(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ReachOffsetZ;                                      // 0x22C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AbandonRadius;                                     // 0x230(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        UsingCoolDown;                                     // 0x234(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26CE[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASolarBotSniperPosition* GetDefaultObj();

};

// 0x58 (0x88 - 0x30)
// Class Solarland.SolarBotTeamConfig
class USolarBotTeamConfig : public UDataAsset
{
public:
	bool                                         bUseSpecificMemberPreset;                          // 0x30(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26CF[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class USolarBotAIConfig*>             SpecificMemberPresets;                             // 0x38(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FSolarBotTeamBuildRule>        BuildRules;                                        // 0x48(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 ForbiddenTags;                                     // 0x58(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FSolarBotTeamHeroPickFormation> HeroPickFormations;                                // 0x78(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class USolarBotTeamConfig* GetDefaultObj();

};

// 0x28 (0x250 - 0x228)
// Class Solarland.SolarBotTeamVisualizer
class ASolarBotTeamVisualizer : public AInfo
{
public:
	TArray<struct FColor>                        DrawDebugColors;                                   // 0x228(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFont*                                 TextFont;                                          // 0x238(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FBotTeamDebugInfo>             BotTeamDebugInfos;                                 // 0x240(0x10)(Net, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class ASolarBotTeamVisualizer* GetDefaultObj();

};

// 0x158 (0x180 - 0x28)
// Class Solarland.SolarBotTimelineSystem
class USolarBotTimelineSystem : public UObject
{
public:
	class UDataTable*                            GlobalTimelineSettings;                            // 0x28(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        UpdateInterval;                                    // 0x30(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bUsePlayerLandTime;                                // 0x34(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bEnableFinalDownsize;                              // 0x35(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_26D0[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        FinalDownsizeDuration;                             // 0x38(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_26D1[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UDataTable*                            CurrentActionTimelineTable;                        // 0x40(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDataTable*                            CurrentUpdateItemTimelineTable;                    // 0x48(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDataTable*                            CurrentDownsizeTimelineTable;                      // 0x50(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_26D2[0x110];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class ASolarPlayerState*>             DirtyBots;                                         // 0x168(0x10)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_26D3[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarBotTimelineSystem* GetDefaultObj();

	void InitTimeline();
	class USolarBotTimelineSystem* Get(class UObject* Context);
};

// 0x0 (0x90 - 0x90)
// Class Solarland.SolarBT_RandomSelecter
class USolarBT_RandomSelecter : public UBTCompositeNode
{
public:

	static class UClass* StaticClass();
	static class USolarBT_RandomSelecter* GetDefaultObj();

};

// 0x8 (0x98 - 0x90)
// Class Solarland.SolarBTD_CheckSelectKeyType
class USolarBTD_CheckSelectKeyType : public UBTDecorator_BlackboardBase
{
public:
	enum class ESolarCharacterType               CheckType;                                         // 0x90(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26D4[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarBTD_CheckSelectKeyType* GetDefaultObj();

};

// 0x8 (0xA0 - 0x98)
// Class Solarland.SolarBTS_BotActionState
class USolarBTS_BotActionState : public UBTService_BlackboardBase
{
public:
	enum class EBotActionState                   ActionState;                                       // 0x98(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26D5[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarBTS_BotActionState* GetDefaultObj();

};

// 0x8 (0xA0 - 0x98)
// Class Solarland.SolarBTS_BotChangeQueryFilter
class USolarBTS_BotChangeQueryFilter : public UBTService_BlackboardBase
{
public:
	TSubclassOf<class UNavigationQueryFilter>    TargetFilter;                                      // 0x98(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class USolarBTS_BotChangeQueryFilter* GetDefaultObj();

};

// 0x30 (0xC8 - 0x98)
// Class Solarland.SolarBTS_BotFocusTo
class USolarBTS_BotFocusTo : public UBTService_BlackboardBase
{
public:
	float                                        LookAtSpeed;                                       // 0x98(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bUseFocusDirection;                                // 0x9C(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bLocalDirection;                                   // 0x9D(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_26D6[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               FocusDirection;                                    // 0xA0(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRotator                              DeltaRotation;                                     // 0xAC(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                         bRandomFocusDirection;                             // 0xB8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_26D7[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        RandomPitchDeviation;                              // 0xBC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RandomYawDeviation;                                // 0xC0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bRestorePreviousFocusOnCeaseRelevant;              // 0xC4(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_26D8[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarBTS_BotFocusTo* GetDefaultObj();

};

// 0x40 (0xB0 - 0x70)
// Class Solarland.SolarBTS_TagStateUpdate
class USolarBTS_TagStateUpdate : public UBTService
{
public:
	struct FBlackboardKeySelector                StateTagNameKey;                                   // 0x70(0x28)(Edit, Protected, NativeAccessSpecifierProtected)
	TArray<struct FSolarAITagStateTransition>    Transitions;                                       // 0x98(0x10)(Edit, ZeroConstructor, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          EnterStateTag;                                     // 0xA8(0x8)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class USolarBTS_TagStateUpdate* GetDefaultObj();

};

// 0xC8 (0x178 - 0xB0)
// Class Solarland.SolarBTS_BotInBattle
class USolarBTS_BotInBattle : public USolarBTS_TagStateUpdate
{
public:
	struct FBlackboardKeySelector                EnemyActorKey;                                     // 0xB0(0x28)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FBlackboardKeySelector                CanSeeEnemyKey;                                    // 0xD8(0x28)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FBlackboardKeySelector                TacticalLocation;                                  // 0x100(0x28)(Edit, Protected, NativeAccessSpecifierProtected)
	TMap<enum class EWeaponType, struct FVector2D> WeaponSuitableRangeConfig;                         // 0x128(0x50)(Edit, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class USolarBTS_BotInBattle* GetDefaultObj();

};

// 0x10 (0x80 - 0x70)
// Class Solarland.SolarBTS_BotInputMove
class USolarBTS_BotInputMove : public UBTService
{
public:
	struct FVector2D                             InputDir;                                          // 0x70(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DeviationAngle;                                    // 0x78(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bRandomInput;                                      // 0x7C(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_26D9[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarBTS_BotInputMove* GetDefaultObj();

};

// 0x68 (0xD8 - 0x70)
// Class Solarland.SolarBTS_BotInteractionTrigger
class USolarBTS_BotInteractionTrigger : public UBTService
{
public:
	enum class EBotInteractCondition             ConditionToTrigger;                                // 0x70(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bLoop;                                             // 0x71(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_26DA[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        LoopInterval;                                      // 0x74(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LoopRandomDeviation;                               // 0x78(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_26DB[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSet<enum class EBotInteractCondition>       AllowedConditions;                                 // 0x88(0x50)(Edit, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class USolarBTS_BotInteractionTrigger* GetDefaultObj();

};

// 0x8 (0x78 - 0x70)
// Class Solarland.SolarBTS_BotPrepareMode
class USolarBTS_BotPrepareMode : public UBTService
{
public:
	float                                        RatioWantWeapon;                                   // 0x70(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RatioWantInteract;                                 // 0x74(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class USolarBTS_BotPrepareMode* GetDefaultObj();

};

// 0x78 (0xE8 - 0x70)
// Class Solarland.SolarBTS_BotSearchSupplies
class USolarBTS_BotSearchSupplies : public UBTService
{
public:
	bool                                         bOverrideBotConfig;                                // 0x70(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_26DC[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSolarBotLootSearchConfig             OverrideSearchConfig;                              // 0x74(0x44)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                         bOverrideWeaponFeedConfig;                         // 0xB8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_26DD[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSolarBotLootWeaponFeedConfig         OverrideWeaponFeedConfig;                          // 0xC0(0x20)(Edit, Protected, NativeAccessSpecifierProtected)
	float                                        MaxDistanceToShieldUpgradeItemShop;                // 0xE0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_26DE[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarBTS_BotSearchSupplies* GetDefaultObj();

};

// 0x40 (0xB0 - 0x70)
// Class Solarland.SolarBTS_BotUpdateBunker
class USolarBTS_BotUpdateBunker : public UBTService
{
public:
	struct FBlackboardKeySelector                BlackboardKeyEnemy;                                // 0x70(0x28)(Edit, Protected, NativeAccessSpecifierProtected)
	float                                        FullBunkerHeight;                                  // 0x98(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        HalfBunkerHeight;                                  // 0x9C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxDistanceToBunker;                               // 0xA0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxDistanceToTarget;                               // 0xA4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MinDistanceToTarget;                               // 0xA8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_26DF[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarBTS_BotUpdateBunker* GetDefaultObj();

};

// 0x10 (0xA8 - 0x98)
// Class Solarland.SolarBTS_BotUpdateOnVehicle
class USolarBTS_BotUpdateOnVehicle : public UBTService_BlackboardBase
{
public:
	bool                                         bUsePathfindingDistance;                           // 0x98(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_26E0[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MinDistanceTakePassenger;                          // 0x9C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxWaitTimeSeconds;                                // 0xA0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_26E1[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarBTS_BotUpdateOnVehicle* GetDefaultObj();

};

// 0x38 (0xA8 - 0x70)
// Class Solarland.SolarBTS_BotUpdateSafeArea
class USolarBTS_BotUpdateSafeArea : public UBTService
{
public:
	bool                                         bOverrideBotConfig;                                // 0x70(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_26E2[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSolarBotSafeAreaConfig               DefaultConfig;                                     // 0x74(0x8)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FVector                               SafeAreaSnapExtent;                                // 0x7C(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAllowUseSpaceDistance;                            // 0x88(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_26E3[0x1F];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarBTS_BotUpdateSafeArea* GetDefaultObj();

};

// 0x20 (0x90 - 0x70)
// Class Solarland.SolarBTS_BotUseSniperPos
class USolarBTS_BotUseSniperPos : public UBTService
{
public:
	bool                                         bOverrideBotConfig;                                // 0x70(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_26E4[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSolarBotUseSniperPosConfig           DefaultConfig;                                     // 0x74(0x1C)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class USolarBTS_BotUseSniperPos* GetDefaultObj();

};

// 0x50 (0xE8 - 0x98)
// Class Solarland.SolarBTS_CheckCanAttack
class USolarBTS_CheckCanAttack : public UBTService_BlackboardBase
{
public:
	struct FBlackboardKeySelector                BlackboardKeyInLineSight;                          // 0x98(0x28)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FBlackboardKeySelector                BlackboardKeyInLineSightEx;                        // 0xC0(0x28)(Edit, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class USolarBTS_CheckCanAttack* GetDefaultObj();

};

// 0x60 (0xF8 - 0x98)
// Class Solarland.SolarBTS_CheckNeedFindVehicle
class USolarBTS_CheckNeedFindVehicle : public UBTService_BlackboardBase
{
public:
	bool                                         bMarkOccupiedAfterVehicleSelected;                 // 0x98(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCleanTargetOnCeaseRelevant;                       // 0x99(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26E5[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<TSubclassOf<class ASolarVehiclePawn>> SolarWheeledVehicleClass;                          // 0xA0(0x10)(Edit, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIgnoreVehicleInPoision;                           // 0xB0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIgnoreVehicleOffNavmesh;                          // 0xB1(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26E6[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               CheckOnNavmeshExtent;                              // 0xB4(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UNavigationQueryFilter>    FilterClass;                                       // 0xC0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<int32>                                ExceptVehicleId;                                   // 0xC8(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AcceptableRadius;                                  // 0xD8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MoveToDistanceFindVehicle;                         // 0xDC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RangeFindVehicle;                                  // 0xE0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HealthTakingVehicle;                               // 0xE4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxDistanceFindTeamVehicle;                        // 0xE8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCheckSameTarget;                                  // 0xEC(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26E7[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        SameTargetDistThreshold;                           // 0xF0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26E8[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarBTS_CheckNeedFindVehicle* GetDefaultObj();

};

// 0x0 (0x98 - 0x98)
// Class Solarland.SolarBTS_CheckNeedRunEQS
class USolarBTS_CheckNeedRunEQS : public UBTService_BlackboardBase
{
public:

	static class UClass* StaticClass();
	static class USolarBTS_CheckNeedRunEQS* GetDefaultObj();

};

// 0x8 (0x78 - 0x70)
// Class Solarland.SolarBTS_NgaiNearbySupplies
class USolarBTS_NgaiNearbySupplies : public UBTService
{
public:
	uint8                                        Pad_26E9[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarBTS_NgaiNearbySupplies* GetDefaultObj();

};

// 0xD0 (0x168 - 0x98)
// Class Solarland.SolarBTS_TeamTaskAllocation
class USolarBTS_TeamTaskAllocation : public UBTService_BlueprintBase
{
public:
	float                                        RescueAllocateThresholdScore;                      // 0x98(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RescueAbandonThresholdScore;                       // 0x9C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RescuePunishScore;                                 // 0xA0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RescueRewardScore;                                 // 0xA4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bNeedToRebornBotInBotTeam;                         // 0xA8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bNeedToRebornBotInPlayerTeam;                      // 0xA9(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDebugTaskScore;                                   // 0xAA(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDebugEachTaskScore;                               // 0xAB(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               PoisonSnapExtent;                                  // 0xAC(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSolarTaskScoringItem                 CustomTaskScoringItemList;                         // 0xB8(0x50)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	uint8                                        Pad_26F3[0x50];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class ASolarBotAIController*                 SelfController;                                    // 0x158(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ASolarCharacter*                       SelfCharacter;                                     // 0x160(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class USolarBTS_TeamTaskAllocation* GetDefaultObj();

	void PostGetCurrentTaskScore(struct FSolarScoringItemStruct* InScoringItemStruct);
	float MoveToSafeAreaCostSec(class ASolarBotAIController* InController);
	float MoveToRescueTargetCostSec(class ASolarBotAIController* InController, class AActor* TeammateInDanger);
	float MoveToPointCostSec(class ASolarBotAIController* InController, struct FVector& CenterPoint, float InRadius);
	void DebugEachTaskScoreItem(struct FSolarScoringItemStruct& TaskScore, enum class ESolarTaskScoringItemType& ItemType, float Score, float Value);
	void DebugAllTaskScore(TArray<struct FSolarScoringItemStruct>& TaskScoresList);
	bool CheckIfCharacterInSafeArea(class AActor* InActor);
	bool CheckIfCharacterInPoisonCircle(class AActor* InActor);
	bool CheakIsLeader(class ASolarBotAIController* InController);
	bool CanRescueCurrentTarget(class ASolarCharacter* RescueTarget);
	bool CanAllocateCurrentTarget(class ASolarBotAIController* InController);
};

// 0x0 (0x98 - 0x98)
// Class Solarland.SolarBTT_BotCharging
class USolarBTT_BotCharging : public UBTTask_BlackboardBase
{
public:

	static class UClass* StaticClass();
	static class USolarBTT_BotCharging* GetDefaultObj();

};

// 0x70 (0x108 - 0x98)
// Class Solarland.SolarBTT_BotFire
class USolarBTT_BotFire : public UBTTask_BlackboardBase
{
public:
	bool                                         bEnableOffset;                                     // 0x98(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_26F4[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        OffsetRadiusMax;                                   // 0x9C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        OffsetRadiusMin;                                   // 0xA0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxFireDuration;                                   // 0xA4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bEnableShootSimulator;                             // 0xA8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bForceReset;                                       // 0xA9(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bOverrideDefaultShootConfig;                       // 0xAA(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_26F5[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSolarBotShootConfig                  ShootConfig;                                       // 0xAC(0x58)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_26F6[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarBTT_BotFire* GetDefaultObj();

};

// 0x8 (0x110 - 0x108)
// Class Solarland.SolarBTT_BotContinueFire
class USolarBTT_BotContinueFire : public USolarBTT_BotFire
{
public:
	float                                        FireDurationTime;                                  // 0x108(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_26F7[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarBTT_BotContinueFire* GetDefaultObj();

};

// 0x8 (0x78 - 0x70)
// Class Solarland.SolarBTT_BotCruise
class USolarBTT_BotCruise : public UBTTaskNode
{
public:
	float                                        SecDelayFollowJump;                                // 0x70(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SecDelayRandomDeviation;                           // 0x74(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class USolarBTT_BotCruise* GetDefaultObj();

};

// 0x30 (0xA0 - 0x70)
// Class Solarland.SolarBTT_BotCruiseBehindTarget
class USolarBTT_BotCruiseBehindTarget : public UBTTaskNode
{
public:
	struct FBlackboardKeySelector                TargetToFollow;                                    // 0x70(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	float                                        SecDelayFollowJump;                                // 0x98(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_26F8[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarBTT_BotCruiseBehindTarget* GetDefaultObj();

};

// 0x30 (0xA0 - 0x70)
// Class Solarland.SolarBTT_BotCruiseWhenNearest
class USolarBTT_BotCruiseWhenNearest : public UBTTaskNode
{
public:
	struct FBlackboardKeySelector                TargetToCheck;                                     // 0x70(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	float                                        SecDelayRandomDeviation;                           // 0x98(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_26F9[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarBTT_BotCruiseWhenNearest* GetDefaultObj();

};

// 0x10 (0x80 - 0x70)
// Class Solarland.SolarBTT_BotInputMove
class USolarBTT_BotInputMove : public UBTTaskNode
{
public:
	struct FVector2D                             InputDir;                                          // 0x70(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DeviationAngle;                                    // 0x78(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bRandomInput;                                      // 0x7C(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_26FA[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarBTT_BotInputMove* GetDefaultObj();

};

// 0x0 (0x98 - 0x98)
// Class Solarland.SolarBTT_BotInteractWithShieldUpgradeItemShop
class USolarBTT_BotInteractWithShieldUpgradeItemShop : public UBTTask_BlackboardBase
{
public:

	static class UClass* StaticClass();
	static class USolarBTT_BotInteractWithShieldUpgradeItemShop* GetDefaultObj();

};

// 0x20 (0xB8 - 0x98)
// Class Solarland.SolarBTT_BotJet
class USolarBTT_BotJet : public UBTTask_BlackboardBase
{
public:
	enum class EJetPackMode                      JetPackMode;                                       // 0x98(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EJetTaskFinishMode                FinishMode;                                        // 0x99(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bTestBlock;                                        // 0x9A(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_26FB[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DisplacementExpected;                              // 0x9C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MinDisplacementExpected;                           // 0xA0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bUseLocalInput;                                    // 0xA4(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_26FC[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector2D                             LocalInput;                                        // 0xA8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bSelectorAsTarget;                                 // 0xB0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_26FD[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarBTT_BotJet* GetDefaultObj();

};

// 0x8 (0x78 - 0x70)
// Class Solarland.SolarBTT_BotJump
class USolarBTT_BotJump : public UBTTaskNode
{
public:
	enum class EJumpTaskFinishMode               FinishMode;                                        // 0x70(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_26FE[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarBTT_BotJump* GetDefaultObj();

};

// 0x20 (0xB8 - 0x98)
// Class Solarland.SolarBTT_BotLookAt
class USolarBTT_BotLookAt : public UBTTask_BlackboardBase
{
public:
	struct FRotator                              DeltaRotator;                                      // 0x98(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                         bRandomRot;                                        // 0xA4(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_26FF[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        LookAtSpeed;                                       // 0xA8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bFinishTaskAfterReachTarget;                       // 0xAC(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2700[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ReachAngleTolerance;                               // 0xB0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ReachTimeOut;                                      // 0xB4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class USolarBTT_BotLookAt* GetDefaultObj();

};

// 0x18 (0x88 - 0x70)
// Class Solarland.SolarBTT_BotModifyShootParam
class USolarBTT_BotModifyShootParam : public UBTTaskNode
{
public:
	enum class EBotShootTargetType               ShootTargetType;                                   // 0x70(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2701[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ShootDisperse;                                     // 0x74(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        HitRate;                                           // 0x78(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DamageRate;                                        // 0x7C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DamageFactor;                                      // 0x80(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bModifyShootDisperse;                              // 0x84(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bModifyHitRate;                                    // 0x85(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bModifyDamageRate;                                 // 0x86(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bModifyDamageFactor;                               // 0x87(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class USolarBTT_BotModifyShootParam* GetDefaultObj();

};

// 0x30 (0xE0 - 0xB0)
// Class Solarland.SolarBTT_BotMoveTo
class USolarBTT_BotMoveTo : public UBTTask_MoveTo
{
public:
	struct FBlackboardKeySelector                BBK_AcceptanceRadius;                              // 0xB0(0x28)(Edit, Protected, NativeAccessSpecifierProtected)
	bool                                         bMoveToGoalOnLastSegment;                          // 0xD8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2702[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarBTT_BotMoveTo* GetDefaultObj();

};

// 0x8 (0x110 - 0x108)
// Class Solarland.SolarBTT_BotOnceFire
class USolarBTT_BotOnceFire : public USolarBTT_BotFire
{
public:
	int32                                        OnceFireTimes;                                     // 0x108(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OnceFireIntervalTime;                              // 0x10C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class USolarBTT_BotOnceFire* GetDefaultObj();

};

// 0x8 (0xA0 - 0x98)
// Class Solarland.SolarBTT_BotPickupItem
class USolarBTT_BotPickupItem : public UBTTask_BlackboardBase
{
public:
	float                                        MaxPickUpDistSq;                                   // 0x98(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2703[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarBTT_BotPickupItem* GetDefaultObj();

};

// 0x0 (0x98 - 0x98)
// Class Solarland.SolarBTT_BotRechargeShield
class USolarBTT_BotRechargeShield : public UBTTask_BlackboardBase
{
public:

	static class UClass* StaticClass();
	static class USolarBTT_BotRechargeShield* GetDefaultObj();

};

// 0x50 (0xC0 - 0x70)
// Class Solarland.SolarBTT_BotRescueTeammate
class USolarBTT_BotRescueTeammate : public UBTTaskNode
{
public:
	struct FBlackboardKeySelector                CharacterToRescue;                                 // 0x70(0x28)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FBlackboardKeySelector                TargetBox;                                         // 0x98(0x28)(Edit, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class USolarBTT_BotRescueTeammate* GetDefaultObj();

};

// 0xA8 (0x140 - 0x98)
// Class Solarland.SolarBTT_BotRoleSkill
class USolarBTT_BotRoleSkill : public UBTTask_BlackboardBase
{
public:
	struct FGameplayTag                          RoleAbilityTag;                                    // 0x98(0x8)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FBlackboardKeySelector                LocationExpected;                                  // 0xA0(0x28)(Edit, Protected, NativeAccessSpecifierProtected)
	float                                        TimeOutSec;                                        // 0xC8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        HoldSec;                                           // 0xCC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ProjectileAngleAllowableError;                     // 0xD0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2704[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FBlackboardKeySelector                SummonItemLocation;                                // 0xD8(0x28)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FBlackboardKeySelector                SummonItemRadius;                                  // 0x100(0x28)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FVector                               OffsetVec;                                         // 0x128(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SummonTestRadius;                                  // 0x134(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2705[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarBTT_BotRoleSkill* GetDefaultObj();

};

// 0x58 (0xC8 - 0x70)
// Class Solarland.SolarBTT_BotSkyDiving
class USolarBTT_BotSkyDiving : public UBTTaskNode
{
public:
	struct FBlackboardKeySelector                ActorFocused;                                      // 0x70(0x28)(Edit, Protected, NativeAccessSpecifierProtected)
	bool                                         bOverrideBotConfig;                                // 0x98(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2706[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSolarBotSkyDivingConfig              DefaultConfig;                                     // 0x9C(0x24)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                        DelaySecPreserved;                                 // 0xC0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2707[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarBTT_BotSkyDiving* GetDefaultObj();

};

// 0x8 (0x78 - 0x70)
// Class Solarland.SolarBTT_BotSprint
class USolarBTT_BotSprint : public UBTTaskNode
{
public:
	bool                                         bEnterSprint;                                      // 0x70(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2708[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarBTT_BotSprint* GetDefaultObj();

};

// 0x8 (0x78 - 0x70)
// Class Solarland.SolarBTT_BotSwitchWeapon
class USolarBTT_BotSwitchWeapon : public UBTTaskNode
{
public:
	enum class EWeaponType                       WeaponType;                                        // 0x70(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2709[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarBTT_BotSwitchWeapon* GetDefaultObj();

};

// 0x8 (0xA0 - 0x98)
// Class Solarland.SolarBTT_BotTeleport
class USolarBTT_BotTeleport : public UBTTask_BlackboardBase
{
public:
	bool                                         bNoCheck;                                          // 0x98(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bTeleportVehicle;                                  // 0x99(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_270A[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarBTT_BotTeleport* GetDefaultObj();

};

// 0x0 (0x98 - 0x98)
// Class Solarland.SolarBTT_BotTreatment
class USolarBTT_BotTreatment : public UBTTask_BlackboardBase
{
public:

	static class UClass* StaticClass();
	static class USolarBTT_BotTreatment* GetDefaultObj();

};

// 0x8 (0xA0 - 0x98)
// Class Solarland.SolarBTT_BotUpgradeShield
class USolarBTT_BotUpgradeShield : public UBTTask_BlackboardBase
{
public:
	struct FGameplayTag                          ShieldUpdateAbilityTag;                            // 0x98(0x8)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class USolarBTT_BotUpgradeShield* GetDefaultObj();

};

// 0x10 (0x118 - 0x108)
// Class Solarland.SolarBTT_BotVehicleFire
class USolarBTT_BotVehicleFire : public USolarBTT_BotFire
{
public:
	float                                        DurationTime;                                      // 0x108(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ChargePercentMin;                                  // 0x10C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ChargePercentMax;                                  // 0x110(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SecFireAfterAimLocked;                             // 0x114(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class USolarBTT_BotVehicleFire* GetDefaultObj();

};

// 0x10 (0xA8 - 0x98)
// Class Solarland.SolarBTT_BotVehicleSkill
class USolarBTT_BotVehicleSkill : public UBTTask_BlackboardBase
{
public:
	int32                                        SeatIndex;                                         // 0x98(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        AbilityIndex;                                      // 0x9C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCancel;                                           // 0xA0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_270B[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarBTT_BotVehicleSkill* GetDefaultObj();

};

// 0x0 (0x70 - 0x70)
// Class Solarland.SolarBTT_BotWaitCruiseEnd
class USolarBTT_BotWaitCruiseEnd : public UBTTaskNode
{
public:

	static class UClass* StaticClass();
	static class USolarBTT_BotWaitCruiseEnd* GetDefaultObj();

};

// 0x60 (0xF8 - 0x98)
// Class Solarland.SolarBTT_BotWeaponFire
class USolarBTT_BotWeaponFire : public UBTTask_BlackboardBase
{
public:
	float                                        MaxFireDuration;                                   // 0x98(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bOverrideDefaultShootConfig;                       // 0x9C(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bForceReset;                                       // 0x9D(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_270C[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSolarBotShootConfig                  ShootConfig;                                       // 0xA0(0x58)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class USolarBTT_BotWeaponFire* GetDefaultObj();

};

// 0x30 (0xC8 - 0x98)
// Class Solarland.SolarBTT_FindRandomLocation
class USolarBTT_FindRandomLocation : public UBTTask_BlackboardBase
{
public:
	struct FBlackboardKeySelector                CenterBlackboardSelector;                          // 0x98(0x28)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	float                                        SearchRadius;                                      // 0xC0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_270D[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarBTT_FindRandomLocation* GetDefaultObj();

};

// 0x8 (0xA0 - 0x98)
// Class Solarland.SolarBTT_GetOnOrOffVehicle
class USolarBTT_GetOnOrOffVehicle : public UBTTask_BlackboardBase
{
public:
	bool                                         bGetOnVehicle;                                     // 0x98(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bMarkBlockAfterOffVehicle;                         // 0x99(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bProhibitionOfGettingOnOtherCar;                   // 0x9A(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_270E[0x5];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarBTT_GetOnOrOffVehicle* GetDefaultObj();

};

// 0x0 (0x88 - 0x88)
// Class Solarland.SolarBTT_RunBehaviorDynamic
class USolarBTT_RunBehaviorDynamic : public UBTTask_RunBehaviorDynamic
{
public:

	static class UClass* StaticClass();
	static class USolarBTT_RunBehaviorDynamic* GetDefaultObj();

};

// 0x0 (0x98 - 0x98)
// Class Solarland.SolarBTT_SetBotAIEnemyTarget
class USolarBTT_SetBotAIEnemyTarget : public UBTTask_BlackboardBase
{
public:

	static class UClass* StaticClass();
	static class USolarBTT_SetBotAIEnemyTarget* GetDefaultObj();

};

// 0x70 (0x108 - 0x98)
// Class Solarland.SolarBTT_SpawnVehicle
class USolarBTT_SpawnVehicle : public UBTTask_BlackboardBase
{
public:
	TArray<int32>                                SpawnIds;                                          // 0x98(0x10)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bUsingSelectedSpawnId;                             // 0xA8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_270F[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FBlackboardKeySelector                SelectedSpawnId;                                   // 0xB0(0x28)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FBlackboardKeySelector                SpawnedVehicle;                                    // 0xD8(0x28)(Edit, Protected, NativeAccessSpecifierProtected)
	float                                        SpawnHeightOffset;                                 // 0x100(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SpawnFailedSec;                                    // 0x104(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class USolarBTT_SpawnVehicle* GetDefaultObj();

};

// 0x150 (0x378 - 0x228)
// Class Solarland.SolarBullet
class ASolarBullet : public AActor
{
public:
	float                                        TotalEffectTime;                                   // 0x228(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAttached;                                         // 0x22C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowHitCharacter;                                 // 0x22D(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowHitToTeammate;                                // 0x22E(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowHitWater;                                     // 0x22F(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       BulletEffect;                                      // 0x230(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       TrajectoryEffect;                                  // 0x238(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       TrajectoryEffectOther;                             // 0x240(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                       SimpleCanisterShotEffectPath;                      // 0x248(0x18)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       TrajectoryBeamEffect;                              // 0x260(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       TrajectoryBeamEffectOther;                         // 0x268(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       HitEffect;                                         // 0x270(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       MuzzleEffect;                                      // 0x278(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bKeepOneActivate;                                  // 0x280(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2711[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UParticleSystem*                       MuzzleEffectScope;                                 // 0x288(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       MuzzleEffectOther;                                 // 0x290(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       FlameArresterMuzzleEffect;                         // 0x298(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       FlameArresterMuzzleEffectScope;                    // 0x2A0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       FlameArresterMuzzleEffectOther;                    // 0x2A8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       SpecialEffect;                                     // 0x2B0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       DecalEffect;                                       // 0x2B8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       DecalEffect2;                                      // 0x2C0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                       ShieldEffect;                                      // 0x2C8(0x18)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<enum class EPhysicalSurface, struct FSoftObjectPath> PhysicsHitEffects;                                 // 0x2E0(0x50)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	float                                        DecalLifeSpan;                                     // 0x330(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2712[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UParticleSystem*                       ShellCaseEffect;                                   // 0x338(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       ShellCaseEffectOnScope;                            // 0x340(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         CanExplodeWhenOutRange;                            // 0x348(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2713[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                HoldingPreViewSound_1P;                            // 0x350(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                HoldingPreViewSound_3P;                            // 0x360(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BulletCollisionType;                               // 0x370(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2714[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASolarBullet* GetDefaultObj();

	void OnPlayImpactEffect(class UParticleSystemComponent* PSC);
	struct FSoftObjectPath GetHitPhysicEffectPath(enum class EPhysicalSurface& HitSurface);
};

// 0x10 (0x238 - 0x228)
// Class Solarland.SolarBulletDecal
class ASolarBulletDecal : public AActor
{
public:
	class UParticleSystemComponent*              DecalParticle;                                     // 0x228(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2715[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASolarBulletDecal* GetDefaultObj();

};

// 0x100 (0x4E0 - 0x3E0)
// Class Solarland.SolarBurstItemActor
class ASolarBurstItemActor : public ASolarItemActor
{
public:
	struct FVector_NetQuantize                   StartLoc;                                          // 0x3E0(0xC)(Net, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector_NetQuantize                   MediumLoc;                                         // 0x3EC(0xC)(Net, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector_NetQuantize                   EndLoc;                                            // 0x3F8(0xC)(Net, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bLandedOnServer;                                   // 0x404(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2716[0x2B];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class ASolarTreasureBoxActor*                OwnerBox;                                          // 0x430(0x8)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2717[0x48];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        BurstLocalHeight;                                  // 0x480(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BurstTimeTotal;                                    // 0x484(0x4)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2718[0x58];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASolarBurstItemActor* GetDefaultObj();

	void OnRep_StartLoc();
	void OnRep_OwnerBox();
	void OnRep_MediumLoc();
	void OnRep_EndLoc();
	void OnRep_BurstLocalHeight();
};

// 0x160 (0x388 - 0x228)
// Class Solarland.SolarBurstRocketBullet
class ASolarBurstRocketBullet : public AActor
{
public:
	int32                                        BurstSum;                                          // 0x228(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BurstInterval;                                     // 0x22C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DamageRadius;                                      // 0x230(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DamagePerBullet;                                   // 0x234(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<enum class EObjectTypeQuery>          CanDamageObjectTypes;                              // 0x238(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpawnerAnimTime;                                   // 0x248(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  SpawnerMeshMaterialParamName;                      // 0x24C(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_271E[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAmmoConfig*                           Ammo;                                              // 0x258(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               RocketSpawnerMeshOffset;                           // 0x260(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_271F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FName>                          MuzzleSocketNames;                                 // 0x270(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpawnerMoveInterpSpeed;                            // 0x280(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpawnerMoveInterpMinSpeed;                         // 0x284(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMesh*                         SpawnerTemplateMesh;                               // 0x288(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseForwardAxisY;                                  // 0x290(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2720[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USkeletalMeshComponent*                SpawnerMesh;                                       // 0x298(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimationAsset*                       SpawnerIdleAnim;                                   // 0x2A0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimationAsset*                       SpawnerFireAnim;                                   // 0x2A8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                SpawnerStartSoundName1P;                           // 0x2B0(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                SpawnerStartSoundName3P;                           // 0x2C0(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                SpawnerEndSoundName1P;                             // 0x2D0(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                SpawnerEndSoundName3P;                             // 0x2E0(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                FireSoundName1P;                                   // 0x2F0(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                FireSoundName3P;                                   // 0x300(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                FireImpactSoundName;                               // 0x310(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bTeammateDamage;                                   // 0x320(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDrawDebugAimLine;                                 // 0x321(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDrawDebugExplodeSphere;                           // 0x322(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDrawDebugHitActor;                                // 0x323(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2721[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ASolarCharacter*                       OwnerCharacter;                                    // 0x328(0x8)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarWeaponGA_Rocket*                 OwnerRocketGA;                                     // 0x330(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAkComponent*                          HitAkObj;                                          // 0x338(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRotator                              PlayerRotation;                                    // 0x340(0xC)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_2722[0x14];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class ASolarProjBullet*>              FiredBullets;                                      // 0x360(0x10)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2723[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class USplineComponent*>              RocketPathArray;                                   // 0x378(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class ASolarBurstRocketBullet* GetDefaultObj();

	void ServerUpdateCharacterRotation(struct FRotator& InRotation);
	void OnSingleRocketFire(class ASolarCharacter* InOwnerCharacter, bool bIsLocalPlayer);
	void OnServerSpawnFireRocket(struct FSpawnProjParam& InParam);
	void OnRocketStop(struct FHitResult& InHitResult);
	void OnBurstRocketDeactive(class ASolarCharacter* InOwnerCharacter, bool bIsLocalPlayer);
	void OnBurstRocketActive(class ASolarCharacter* InOwnerCharacter, bool bIsLocalPlayer);
	void OnBulletStopMove(struct FHitResult& HitResult, bool bBlocking);
	class USplineComponent* GetRocketPath(int32 InIndex);
	void ExplodeAndDamageDirectly(struct FHitResult& HitResult);
};

// 0x0 (0x228 - 0x228)
// Class Solarland.SolarBusinessCardCharacter
class ASolarBusinessCardCharacter : public AActor
{
public:

	static class UClass* StaticClass();
	static class ASolarBusinessCardCharacter* GetDefaultObj();

	void SetSkin(class USkeletalMesh* LoadedSkinRes, class UMaterialInterface* LoadedCharaSkinRes);
};

// 0x388 (0x4D8 - 0x150)
// Class Solarland.SolarButton
class USolarButton : public UContentWidget
{
public:
	class USlateWidgetStyleAsset*                Style;                                             // 0x150(0x8)(ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FButtonStyle                          WidgetStyle;                                       // 0x158(0x2B8)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	enum class ESolarImageFillType               ImageFillType;                                     // 0x410(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2724[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ImageFillRatioHorizontal;                          // 0x414(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ImageFillRatioVertical;                            // 0x418(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ImageFillPixelLeft;                                // 0x41C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ImageFillPixelTop;                                 // 0x420(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ImageFillPixelRight;                               // 0x424(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ImageFillPixelBottom;                              // 0x428(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          ColorAndOpacity;                                   // 0x42C(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          BackgroundColor;                                   // 0x43C(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bReleaseUnfocus;                                   // 0x44C(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableClickSound;                                 // 0x44D(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2725[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                ClickSoundEventName;                               // 0x450(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EButtonClickMethod                ClickMethod;                                       // 0x460(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EButtonTouchMethod                TouchMethod;                                       // 0x461(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EButtonPressMethod                PressMethod;                                       // 0x462(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsFocusable;                                       // 0x463(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2726[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnClicked;                                         // 0x468(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnPressed;                                         // 0x478(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnReleased;                                        // 0x488(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnHovered;                                         // 0x498(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnUnhovered;                                       // 0x4A8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnFocusLosted;                                     // 0x4B8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_2727[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarButton* GetDefaultObj();

	void SetTouchMethod(enum class EButtonTouchMethod InTouchMethod);
	void SetStyle(struct FButtonStyle& InStyle);
	void SetPressMethod(enum class EButtonPressMethod InPressMethod);
	void SetImageFillType(enum class ESolarImageFillType InImageFillType);
	void SetColorAndOpacity(const struct FLinearColor& InColorAndOpacity);
	void SetClickMethod(enum class EButtonClickMethod InClickMethod);
	void SetBackgroundColor(const struct FLinearColor& InBackgroundColor);
	bool IsPressed();
};

// 0x28 (0x60 - 0x38)
// Class Solarland.SolarButtonSlot
class USolarButtonSlot : public UPanelSlot
{
public:
	struct FMargin                               Padding;                                           // 0x38(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	enum class EHorizontalAlignment              HorizontalAlignment;                               // 0x48(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EVerticalAlignment                VerticalAlignment;                                 // 0x49(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2728[0x16];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarButtonSlot* GetDefaultObj();

	void SetVerticalAlignment(enum class EVerticalAlignment InVerticalAlignment);
	void SetPadding(const struct FMargin& InPadding);
	void SetHorizontalAlignment(enum class EHorizontalAlignment InHorizontalAlignment);
};

// 0x58 (0x280 - 0x228)
// Class Solarland.SolarCameraActor
class ASolarCameraActor : public AActor
{
public:
	uint8                                        Pad_2729[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ASolarPlayerController*                MasterPlayerController;                            // 0x230(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_272A[0x48];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASolarCameraActor* GetDefaultObj();

	void SetViewTarget(class AActor* InTarget);
	class AActor* GetViewTarget();
	class USolarNoSpringCameraComponent* GetCameraComponent();
};

// 0x88 (0x9B8 - 0x930)
// Class Solarland.SolarCameraComponent
class USolarCameraComponent : public UCameraComponent
{
public:
	uint8                                        Pad_272B[0x50];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ConfigDistanceToTarget;                            // 0x980(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               ConfigCameraOffset;                                // 0x984(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               ConfigTargetOffset;                                // 0x990(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ConfigFOV;                                         // 0x99C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ViewPitchMax;                                      // 0x9A0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ViewPitchMin;                                      // 0x9A4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ViewYawMax;                                        // 0x9A8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ViewYawMin;                                        // 0x9AC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CameraOccupiedRoom;                                // 0x9B0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         EnableDistanceSmooth;                              // 0x9B4(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         EnableFOVSmooth;                                   // 0x9B5(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_272C[0x2];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarCameraComponent* GetDefaultObj();

	class USolarCameraComponent* GetCameraComponentFromActor(class AActor* InActor);
};

// 0x0 (0x28 - 0x28)
// Class Solarland.SolarCameraCompsInterface
class ISolarCameraCompsInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class ISolarCameraCompsInterface* GetDefaultObj();

	class USolarSpringArmComponent* GetSolarSpringArmComponent();
	class USolarCameraComponent* GetSolarCameraComponent();
};

// 0x128 (0x350 - 0x228)
// Class Solarland.SolarCapsuleActor
class ASolarCapsuleActor : public AActor
{
public:
	struct FSoftObjectPath                       StartCruisingPath;                                 // 0x228(0x18)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FSoftObjectPath                       StopCruisingPath;                                  // 0x240(0x18)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  CruiseCharacterBindingName;                        // 0x258(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  CruiseCapsuleBindingName;                          // 0x260(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  CruiseCameraBindingName;                           // 0x268(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SequenceCameraBlendDuration;                       // 0x270(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_272D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAnimationAsset*                       CapsuleCruisingLoopAnim;                           // 0x278(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimSequence*                         CharacterCruiseLoopAnim;                           // 0x280(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FSoftObjectPath                       CapsuleCruisingStopAnimPath;                       // 0x288(0x18)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimSequence*                         CharacterCruiseEndAnim;                            // 0x2A0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkeletalMeshComponent*                CapsuleSkeletalMesh;                               // 0x2A8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UStaticMeshComponent*>          AirflowMeshEffects;                                // 0x2B0(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UParticleSystemComponent*>      AirflowParticleEffects;                            // 0x2C0(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ALevelSequenceActor*                   SequenceActor;                                     // 0x2D0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ACineCameraActor*                      SequenceCamera;                                    // 0x2D8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ULevelSequence*                        StartCruisingSequence;                             // 0x2E0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ULevelSequence*                        StopCruisingSequence;                              // 0x2E8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimationAsset*                       CapsuleCruisingEndAnim;                            // 0x2F0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ASolarCharacter*                       BoardedCharacterPrivate;                           // 0x2F8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystemComponent*              CloudParticleComponent;                            // 0x300(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FSoftObjectPath                       CloudParticlePath;                                 // 0x308(0x18)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_272E[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UParticleSystem*                       CloudParticleAsset;                                // 0x340(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_272F[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASolarCapsuleActor* GetDefaultObj();

	void StopCruiseSequenceFinished();
	void StartCruiseSequenceFinished();
	void PlayStopCruiseSequence();
	void PlayStopCruiseAnimation();
	void PlayStartCruiseSequence();
	void PlayCruiseLoopAnimation();
	void HideCapsuleAirflowVFX();
	class ASolarCapsuleActor* CreateCapsuleActorForBoarder(class ASolarCharacter* InBoarder, TSubclassOf<class ASolarCapsuleActor> CapsuleActorClass);
};

// 0x1D8 (0x400 - 0x228)
// Class Solarland.SolarCapsuleRoot
class ASolarCapsuleRoot : public AActor
{
public:
	uint8                                        Pad_2731[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USceneComponent*                       RootComp;                                          // 0x230(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetComponent*                      LocationSign;                                      // 0x238(0x8)(Edit, ExportObject, ZeroConstructor, Transient, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2732[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        CatchupDuration;                                   // 0x250(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CatchupBaseLerp;                                   // 0x254(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2733[0x24];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FMiniMapAirlineData                   MiniMapData;                                       // 0x27C(0x30)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FUsingAirlineData                     CurrentAirline;                                    // 0x2AC(0x44)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                        CruiseStartTime;                                   // 0x2F0(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               CruiseStartLoc;                                    // 0x2F4(0xC)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRotator                              CruiseStartRot;                                    // 0x300(0xC)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	int32                                        ForceParachuteWarningTime;                         // 0x30C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxAllowedSmoothDistance;                          // 0x310(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ClientSpeedScale;                                  // 0x314(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ClientRotationSmoothSpeed;                         // 0x318(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2734[0x1C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UCapsuleFormationData*                 CapsuleFormationData;                              // 0x338(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<struct FVector, struct FTeamFormationUnit> CruiseFormation;                                   // 0x340(0x50)(BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	TArray<struct FBoarderInfo>                  BoardingPlayerList;                                // 0x390(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2735[0x60];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASolarCapsuleRoot* GetDefaultObj();

	void ServerUnBoardCharacter(class ASolarCharacter* Character);
	void OnRep_MiniMapAirline();
	void OnRep_CurrentAirline();
	struct FMiniMapAirlineData K2_GetAirlineData();
	class ASolarCapsuleRoot* GetSolarCapsuleRoot(class UObject* WorldContextObject);
	float GetCruiseProgress();
	int32 BoardingCharacter(struct FBoarderInfo& BoarderInfo);
};

// 0x10 (0x238 - 0x228)
// Class Solarland.SolarInteractableActor
class ASolarInteractableActor : public AActor
{
public:
	enum class EInteractableType                 InteractType;                                      // 0x228(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2736[0xB];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	uint8                                        bUseSceneActorOptimization;                        // 0x234(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2737[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASolarInteractableActor* GetDefaultObj();

	void SetUserActor(class AActor* InUser);
	void InteractWithActor(class AActor* InActor);
	class AActor* GetUserActor();
};

// 0x10 (0x248 - 0x238)
// Class Solarland.SolarCarPad
class ASolarCarPad : public ASolarInteractableActor
{
public:
	float                                        Duration;                                          // 0x238(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SpeedMultiplier;                                   // 0x23C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DistanceThresholdForValidation;                    // 0x240(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2738[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASolarCarPad* GetDefaultObj();

};

// 0x8 (0x378 - 0x370)
// Class Solarland.SolarCharacterAIController
class ASolarCharacterAIController : public ASolarAIControllerBase
{
public:
	uint8                                        Pad_2739[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASolarCharacterAIController* GetDefaultObj();

	class ASolarCharacter* GetSolarCharacter();
};

// 0x118 (0xAD0 - 0x9B8)
// Class Solarland.SolarCharacterCameraComponent
class USolarCharacterCameraComponent : public USolarCameraComponent
{
public:
	class ASolarCharacter*                       Character;                                         // 0x9B8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_273A[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USolarCharacterCameraDataAsset*        CharacterCameraConfig;                             // 0x9C8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_273B[0x100];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarCharacterCameraComponent* GetDefaultObj();

};

// 0x328 (0x358 - 0x30)
// Class Solarland.SolarCharacterCameraDataAsset
class USolarCharacterCameraDataAsset : public UDataAsset
{
public:
	float                                        ThirdPersonVerticalOffset;                         // 0x30(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ThirdPersonVerticalOffsetWhenCrouched;             // 0x34(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ThirdPersonVerticalOffsetWhenCrouchMoving;         // 0x38(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ThirdPersonHorizontalOffset;                       // 0x3C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                           FollowForwardOffsetCurve;                          // 0x40(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FollowForwardOffsetMultiplier;                     // 0x48(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CrouchCameraLagTime;                               // 0x4C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        UnCrouchCameraLagTime;                             // 0x50(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ShoulderShotVerticalOffset;                        // 0x54(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ShoulderShotVerticalOffsetWhenCrouched;            // 0x58(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ShoulderShotHorizontalOffset;                      // 0x5C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ShoulderShotDistanceToTarget;                      // 0x60(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_273C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UCurveFloat*                           ShoulderShotFollowDistanceCurve;                   // 0x68(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ShoulderShotCameraFOV;                             // 0x70(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ShoulderShotCameraZoomInOutTime;                   // 0x74(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ScopeShotVerticalOffsetWithStanding;               // 0x78(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ScopeShotVerticalOffsetWhenCrouch;                 // 0x7C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DistanceToScopePivot;                              // 0x80(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ArmDistanceToCamera;                               // 0x84(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ScopeHorizontalOffset;                             // 0x88(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SwimDistanceToTarget;                              // 0x8C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SwimDistSwitchSpeed;                               // 0x90(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TakeOffCamPitchMin;                                // 0x94(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TakeOffCamPitchMax;                                // 0x98(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LandingSpeedThreshold;                             // 0x9C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCamEffectSettings                    ParkourCamSettings;                                // 0xA0(0x38)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                               CruiseCameraOffset;                                // 0xD8(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               CruiseTargetOffset;                                // 0xE4(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CruiseDistanceToTarget;                            // 0xF0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               SkydiveCameraOffset;                               // 0xF4(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               SkydiveTargetOffset;                               // 0x100(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SkydiveDistanceToTarget;                           // 0x10C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SkydiveDistanceToTargetOnBoosting;                 // 0x110(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SkydiveViewPitchMax;                               // 0x114(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SkydiveViewPitchMin;                               // 0x118(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCameraSettings                       JetFlySettingsVertical;                            // 0x11C(0x20)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FCameraSettings                       JetFlySettingsFront;                               // 0x13C(0x20)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FCameraSettings                       JetFlySettingsBack;                                // 0x15C(0x20)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FCameraSettings                       JetFlySettingsLeft;                                // 0x17C(0x20)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FCameraSettings                       JetFlySettingsRight;                               // 0x19C(0x20)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_273D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRuntimeFloatCurve                    JetFlyFadeInCurve;                                 // 0x1C0(0x88)(Edit, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                    JetFlyFadeOutCurve;                                // 0x248(0x88)(Edit, NativeAccessSpecifierPublic)
	TSubclassOf<class UCameraShake>              CameraShakeSkydiveFlying;                          // 0x2D0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CameraShakeSkydiveFlyingSpeedMin;                  // 0x2D8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CameraShakeSkydiveFlyingSpeedMax;                  // 0x2DC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UCameraShake>              CameraShakeJetPackLaunch;                          // 0x2E0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UCameraShake>              CameraShakeLand;                                   // 0x2E8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UCameraShake>              CameraShakeVehicleEjectLaunch;                     // 0x2F0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CameraShakeLandDistanceMin;                        // 0x2F8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CameraShakeLandDistanceMax;                        // 0x2FC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<enum class ECamShakeType, TSubclassOf<class UCameraShake>> CamShakeConfig;                                    // 0x300(0x50)(Edit, UObjectWrapper, NativeAccessSpecifierPublic)
	float                                        TargetOffsetLerpSpeed;                             // 0x350(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_273E[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarCharacterCameraDataAsset* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Solarland.SolarCharacterController
class ISolarCharacterController : public IInterface
{
public:

	static class UClass* StaticClass();
	static class ISolarCharacterController* GetDefaultObj();

	void OnEnterLanding();
	class FString GetPlayerID();
};

// 0x0 (0x28 - 0x28)
// Class Solarland.SolarControllerCommon
class ISolarControllerCommon : public IInterface
{
public:

	static class UClass* StaticClass();
	static class ISolarControllerCommon* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Solarland.SolarDefaultCharacterController
class ISolarDefaultCharacterController : public ISolarCharacterController
{
public:

	static class UClass* StaticClass();
	static class ISolarDefaultCharacterController* GetDefaultObj();

};

// 0x0 (0x460 - 0x460)
// Class Solarland.SolarCharacterGameplayAbility_Blueprint
class USolarCharacterGameplayAbility_Blueprint : public USolarCharacterGameplayAbility
{
public:

	static class UClass* StaticClass();
	static class USolarCharacterGameplayAbility_Blueprint* GetDefaultObj();

	bool K2_OnActivateCharacterAbilityFromEvent(class ASolarCharacter* Character, struct FGameplayAbilityActorInfo& ActorInfo, struct FGameplayAbilityActivationInfo& ActivationInfo, struct FGameplayEventData& EventData);
	bool K2_OnActivateCharacterAbility(class ASolarCharacter* Character, struct FGameplayAbilityActorInfo& ActorInfo, struct FGameplayAbilityActivationInfo& ActivationInfo);
	bool K2_CanActivateCharacterAbility(class ASolarCharacter* Character, struct FGameplayAbilityActorInfo& ActorInfo, struct FGameplayTagContainer* RelevantTags);
};

// 0x68 (0x1458 - 0x13F0)
// Class Solarland.SolarCharacterGASComponent
class USolarCharacterGASComponent : public USolarAbilitySystemComponent
{
public:
	uint8                                        Pad_2743[0x68];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarCharacterGASComponent* GetDefaultObj();

	void NotifyTalentState(enum class EPlayerStateRepType InRepType, class APlayerState* InPlayerState);
	void GrantTalentWithPlayerState(class APlayerState* InPlayerState);
};

// 0x8 (0x30 - 0x28)
// Class Solarland.SingleCharacterModelBase
class USingleCharacterModelBase : public UObject
{
public:
	uint8                                        Pad_2744[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USingleCharacterModelBase* GetDefaultObj();

};

// 0x50 (0x78 - 0x28)
// Class Solarland.SolarCharactersModelBase
class USolarCharactersModelBase : public UObject
{
public:
	TMap<class FString, class USingleCharacterModelBase*> PlayersModel;                                      // 0x28(0x50)(Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class USolarCharactersModelBase* GetDefaultObj();

};

// 0x140 (0x178 - 0x38)
// Class Solarland.SolarCharacterSettings
class USolarCharacterSettings : public UDeveloperSettings
{
public:
	TSoftObjectPtr<class UCharacterGlobalConfig> CharacterGlobalConfig;                             // 0x38(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, Config, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UCharacterGameplayTagsConfig> CharacterGameplayTagsConfig;                       // 0x60(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, Config, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UMaterialChangePriorityTags> MaterialChangePriorityTags;                        // 0x88(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, Config, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UVisibilityFlagTags>    VisibilityFlagTags;                                // 0xB0(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, Config, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UCharacterMontageTags>  CharacterMontageTags;                              // 0xD8(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, Config, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UDataTable>             CharacterMontageMappingTable;                      // 0x100(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, Config, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UDataTable>             EmotionMontageMappingTable;                        // 0x128(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, Config, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UCharacterBodyScaleConfigDataAsset> CharacterBodyScaleConfig;                          // 0x150(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, Config, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class USolarCharacterSettings* GetDefaultObj();

};

// 0xE0 (0x110 - 0x30)
// Class Solarland.SolarCharacterSettingsRuntime
class USolarCharacterSettingsRuntime : public UWorldSubsystem
{
public:
	class UCharacterGlobalConfig*                CharacterGlobalConfigInstance;                     // 0x30(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCharacterGameplayTagsConfig*          CharacterGameplayTagsConfigInstance;               // 0x38(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMaterialChangePriorityTags*           MaterialChangePriorityTagsInstance;                // 0x40(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UVisibilityFlagTags*                   VisibilityFlagTagsInstance;                        // 0x48(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCharacterMontageTags*                 CharacterMontageTagsInstance;                      // 0x50(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDataTable*                            CharacterMontageMappingDataTable;                  // 0x58(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2745[0x50];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UDataTable*                            EmotionMontageMappingDataTable;                    // 0xB0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2746[0x50];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UCharacterBodyScaleConfigDataAsset*    CharacterBodyScaleConfigInstance;                  // 0x108(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class USolarCharacterSettingsRuntime* GetDefaultObj();

};

// 0x58 (0x3F8 - 0x3A0)
// Class Solarland.SolarSpringArmComponent
class USolarSpringArmComponent : public USpringArmComponent
{
public:
	uint8                                        Pad_2747[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        CameraLocationLagTime;                             // 0x3B0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         HandleTargetOffsetAsRelativeValue;                 // 0x3B4(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2748[0x43];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarSpringArmComponent* GetDefaultObj();

	class USolarSpringArmComponent* GetSpringArmComponentFromActor(class AActor* InActor);
};

// 0x28 (0x420 - 0x3F8)
// Class Solarland.SolarCharacterSpringArmComponent
class USolarCharacterSpringArmComponent : public USolarSpringArmComponent
{
public:
	class USolarCharacterCameraComponent*        Camera;                                            // 0x3F8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ASolarCharacter*                       OwnerCharacter;                                    // 0x400(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2749[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarCharacterSpringArmComponent* GetDefaultObj();

	void UnregisterOverlappingObstacle(class AActor* InObstacle);
	void RegisterOverlappingObstacle(class AActor* InObstacle);
};

// 0x20 (0xD0 - 0xB0)
// Class Solarland.SolarCharacterUpgradeComponent
class USolarCharacterUpgradeComponent : public UActorComponent
{
public:
	uint8                                        Pad_274A[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ASolarCharacter*                       Owner;                                             // 0xB8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Experience;                                        // 0xC0(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Level;                                             // 0xC4(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CharacterId;                                       // 0xC8(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_274B[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarCharacterUpgradeComponent* GetDefaultObj();

	void ServerExecuteGMLua(const class FString& GMType, const class FString& Param1, const class FString& Param2);
	void ServerExecuteGM(const class FString& GMType, const class FString& Param1, const class FString& Param2);
	void PrepareConfigData();
	void NotifyLevelUp(int32 OldLevel, int32 NewLevel);
	void ClientOnLevelUpRpc(int32 OldLevel, int32 NewLevel);
	void ClientOnLevelUpLua(int32 OldLevel, int32 NewLevel);
	void ClientOnAddNewExpLua(int32 BehaviorType, int32 AddExp);
	void ClientOnAddNewExp_LuaCall(int32 OldLevel, int32 NewLevel);
	void ClientOnAddNewExp(int32 BehaviorType, int32 AddExp);
	void CalculateCharacterExp(int32 EventType, float InValue);
};

// 0x2B0 (0x548 - 0x298)
// Class Solarland.SolarPile
class ASolarPile : public ASolarMapElementBase
{
public:
	uint8                                        Pad_2750[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UStaticMeshComponent*                  NormalMesh;                                        // 0x2B0(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USphereComponent*                      CollisionComp;                                     // 0x2B8(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UActorComponent*>               ExtraChargingVFXComps;                             // 0x2C0(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSpawnedActorHandle                   CachedActorHandle;                                 // 0x2D0(0x4)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2751[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EChargingChannel                  Channel;                                           // 0x2EC(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ESolarPileType                    PileType;                                          // 0x2ED(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2752[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        Zone;                                              // 0x2F0(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxEnergy;                                         // 0x2F4(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PowerRecoveryCD;                                   // 0x2F8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PowerRecoveryFrequency;                            // 0x2FC(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PowerRecoveryQuantity;                             // 0x300(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnable;                                           // 0x304(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bBroken;                                           // 0x305(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCanRecover;                                       // 0x306(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsActivated;                                      // 0x307(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Level;                                             // 0x308(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsLosingEnergy;                                   // 0x30C(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2753[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        OwnerTeam;                                         // 0x310(0x4)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class ASolarCharacter>        OwnerCharacter;                                    // 0x314(0x8)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2754[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FChargingInfo                         DefaultChargingInfo;                               // 0x320(0x30)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<struct FChargingInfo>                 ChargingInfoList;                                  // 0x350(0x10)(Net, ZeroConstructor, RepNotify, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CurrentEnergy;                                     // 0x360(0x4)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2755[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        SphereRadius;                                      // 0x368(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2756[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTimerHandle                          RecoveryHandle;                                    // 0x370(0x8)(BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2757[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTimerHandle                          ServerChargingTimerHandle;                         // 0x380(0x8)(BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTimerHandle                          ClientChargingTimerHandle;                         // 0x388(0x8)(BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UParticleSystemComponent*>      ChargeParticleEffects;                             // 0x390(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAkComponent*                          AkAudioComponent;                                  // 0x3A0(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarAkGameObject*                    SolarAkGameObject;                                 // 0x3A8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2758[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bEnableHealth;                                     // 0x3B2(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2759[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MaxHealth;                                         // 0x3B4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ReducedHealth;                                     // 0x3B8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CurrentHealth;                                     // 0x3BC(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TweenTimeSpeed;                                    // 0x3C0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RestTweenTime;                                     // 0x3C4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TargetOpacity;                                     // 0x3C8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CurrentOpacity;                                    // 0x3CC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OpacityTweenTime;                                  // 0x3D0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_275A[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UMaterialInstanceDynamic*              DynamicMatChargingCircle;                          // 0x3D8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FChargingPilePreset                   ChargingPilePreset;                                // 0x3E0(0x150)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                  RangeRingMeshComp;                                 // 0x530(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                  ChargeCircleMeshComp;                              // 0x538(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCharging;                                         // 0x540(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_275B[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASolarPile* GetDefaultObj();

	void ToggleExtraChargingVFX(bool Toggle);
	void SetIsActivated(bool bActivated);
	void RemoveChargeParticle(class ASolarCharacter* InCharacter);
	void RemoveAllEffects();
	void ReceivePileExpired();
	void ReceiveEnergyChanged();
	void ReceiveChargingPileInitialize();
	void ReceiveCharacterShowEffect(class AActor* Other);
	void ReceiveCharacterHideEffect(class AActor* Other);
	void PlaySkillStartSound();
	void PlaySkillEndSound();
	void PlayRecoveryAnim(bool bStart);
	void PlayChargingAnimation(bool Reverse);
	void OnUntrigger(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void OnTrigger(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	void OnRep_IsLosingEnergyChanged();
	void OnRep_Energy();
	void OnRep_Enable();
	void OnRep_CurrentHealth();
	void OnRep_ChargingInfoListChanged();
	void OnRep_CanRecover();
	void OnRep_Broken();
	void OnRefreshRangeRing();
	void OnRefreshChargeCircle(bool InCharging);
	void OnCharacterBatteryIdChanged(class ASolarCharacter* InCharacter, float Frequency, float Quantity);
	bool IsCharacterInRange(class ASolarCharacter* InCharacter);
	bool IsAnyCharacterInRange();
	struct FChargingInfo GetChargingInfoByCharacter(class ASolarCharacter* Character);
	void GameStatisticsChargingPile(struct FChargingInfo* ChargingInfo, int32 PileLevel, const struct FVector& Location, float EnergyUse);
	void CreateChargeParticle(class ASolarCharacter* InCharacter);
	void ChangeColor();
	bool CanWork();
};

// 0x8 (0x550 - 0x548)
// Class Solarland.SolarChargingPile
class ASolarChargingPile : public ASolarPile
{
public:
	uint8                                        Pad_275C[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASolarChargingPile* GetDefaultObj();

};

// 0x8 (0x230 - 0x228)
// Class Solarland.PSOGatherVolume
class APSOGatherVolume : public AActor
{
public:
	class UBoxComponent*                         BoxComponent;                                      // 0x228(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class APSOGatherVolume* GetDefaultObj();

};

// 0x428 (0x4A0 - 0x78)
// Class Solarland.SolarCheatManager
class USolarCheatManager : public UCheatManager
{
public:
	uint8                                        Pad_2761[0x360];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSoftObjectPath                       VehicleSpawnerMarkWidgetPath;                      // 0x3D8(0x18)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UMapMarkBase*>                  VehicleSpawnerMarks;                               // 0x3F0(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FSoftObjectPath                       PSOGatherCubeBPAssetPath;                          // 0x400(0x18)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        PSOGatherCubeDistanceToCamera;                     // 0x418(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2762[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                PSOGatherBPHuntAssetPath;                          // 0x420(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                PSOGatherBPTutorialAssetPath;                      // 0x430(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2763[0x48];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSoftObjectPath                       AirShipBPAssetPath;                                // 0x488(0x18)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class USolarCheatManager* GetDefaultObj();

	void StopEffectScreen(int32 InHandle);
	void StopEffectActor(int32 InHandle);
	void StartPSOGatheringiOSTutorial();
	void StartPSOGatheringiOSHunt();
	void StartPSOGathering();
	void StartEffectScreen(const class FString& RowName);
	void StartEffectActor(const class FString& RowName);
	void SpawnVehicleWithVehicleID(int32 VehicleID);
	void SpawnVehicle(int32 SpawnID);
	void SpawnTreasureBox(int32 TreasureBoxID);
	void SpawnSolarRadar(const class FString& BpPath);
	void SpawnPSOGatherCube();
	void SpawnOutcomeContent(int32 OutcomeID);
	void SpawnChargingPile(const class FString& BpPath);
	void SpawnAirdrop(int32 AirdropID);
	void SolarWeaponSpreadForWeapon(float MaxSpeed, float MinSpread, float HipFireBaseSpread, float ADSBaseSpread, float VhADSBaseSpread, float SpreadStatuSpeed);
	void SolarWeaponReload(int32 PrimaryAmmoCap, int32 SecondaryAmmoCap);
	void SolarWeaponOverload(bool CanOverload, float OverloadMaxValue, float NormalOverloadCoolingRate, float OverloadCoolingPeriod);
	void SolarWeaponFiringMode(bool bSingleFire, bool bBurst, bool bAuto, bool OneKeyFire, float HitHead);
	void SolarTestReportAbnormalPlayerWeapon(const class FString& InPlayerID, const class FString& InVariableName, const class FString& InVariableValue, const class FString& InAttackLocation, const class FString& InHitLocation, const class FString& InHitBoneScale, const class FString& InWeaponBlueprintName);
	void SolarTestReportAbnormalPlayerVehicle(const class FString& InPlayerID, const class FString& InVariableName, const class FString& InVariableValue, const class FString& InVehiclePreviousLocation, const class FString& InVehiclePresentLocation, const class FString& InVehicleBlueprintName);
	void SolarTestReportAbnormalPlayer(const class FString& InPlayerID, const class FString& InVariableName, const class FString& InVariableValue);
	void SolarTeleport(float DestLocationX, float DestLocationY, float DestLocationZ);
	void SolarServerCmd(const class FString& Cmd);
	void SolarGMSetPlayerValueInternal(const class FString& InType, const class FString& InValue);
	void SolarGM_WeaponShowCurrentInfo();
	void SolarGM_ValidateAirline(float InBufferX, float InBufferY, float InBufferZ);
	void SolarGM_UnforbidCharacterUniqueSkillCD();
	void SolarGM_TestEnsureMsgWithBP();
	void SolarGM_TestEnsureMsg();
	void SolarGM_TestCrashWithBP();
	void SolarGM_TestCrash();
	void SolarGM_TeleportToBotAI(uint32 CtrlIndex);
	void SolarGM_StopBotAIBehaviorTree(bool bStop);
	void SolarGM_SpawnBotAIAtCrosshairByNum(int32 Num);
	void SolarGM_ShowEmojiBubble(int32 EmojiID);
	void SolarGM_ShowAspectRatio(float InDuration);
	void SolarGM_SetWeaponAdditionalBaseDamage(float AdditionalBaseDamage, bool bSelfOnly);
	void SolarGM_SetPlayerValue(const class FString& InType, const class FString& InValue);
	void SolarGM_SetPlayerLevel(int32 InLv);
	void SolarGM_SetEMPForceFieldTestRange(float InRadius, float InHeight);
	void SolarGM_SetEMPForceFieldCoreSize(float InX, float InY, float InZ);
	void SolarGM_SetCharacterRoleAbilitySkillCDDuration(float InCD);
	void SolarGM_SetAssistAimTargetVelocityFollowMaxSpeed(float MaxHorizontalSpeed, float MaxVerticalSpeed);
	void SolarGM_SetAssistAimTargetConfig_TargetVelocityFollowTriggerExtent(const class FString& BodyType, const class FString& Status, float ExtentX, float ExtentY);
	void SolarGM_SetAssistAimTargetConfig_LockAimingExtent(const class FString& BodyType, const class FString& Status, float ExtentX, float ExtentY);
	void SolarGM_SetAssistAimTargetConfig_GlobalSensitivityScaleTriggerExtent(const class FString& BodyType, const class FString& Status, float ExtentX, float ExtentY);
	void SolarGM_SetAssistAimTargetConfig_BaseFollowTriggerExtent(const class FString& BodyType, const class FString& Status, const class FString& CharacterTagStr, float ExtentX, float ExtentY);
	void SolarGM_SetAssistAimTargetConfig_BaseFollowStopExtent(const class FString& BodyType, const class FString& Status, const class FString& CharacterTagStr, float ExtentX, float ExtentY);
	void SolarGM_SetAssistAimCurveScales(float TargetVelocityFollowHorizontalRatioCurveScale, float TargetVelocityFollowVerticalRatioCurveScale, float GlobalSensitivityScaleCurveScale);
	void SolarGM_SetAssistAimBaseFollowSpeed(const class FString& StatusTagStr, float HorizontalSpeed, float VerticalSpeed);
	void SolarGM_RestoreRecommend();
	void SolarGM_ResetCharacterUniqueSkillCD();
	void SolarGM_PlayerUpgrade(int32 InLv);
	void SolarGM_MarkVehicleSpawnLocationInMap(int32 Index);
	void SolarGM_KillAllAI(bool KillBot);
	void SolarGM_GainExperience(int32 InExp);
	void SolarGM_ClearCharacterUniqueSkillCD();
	void SolarGM_CleanUpShootingTarget();
	void SolarGM_CharacterUpgradeBattleUpgradeEffectLevel(int32 UpgradeTo);
	void SolarGM_CharacterSuicide();
	void SolarGM_CharacterSelectBattleUpgradeEffect(int32 Level, int32 SelectedIndex);
	void SolarGM_CharacterEnableDebugAutoMove(bool bEnabled, float SwitchInterval);
	void SolarGM_CharacterDamageSelf(int32 InDamage);
	void SolarGM_CharacterChangeTailFlameId(int32 InTailFlameId);
	void SolarGM_CharacterChangeBagId(int32 InBagId);
	void SolarGM_CallAirdropByAirShipHere();
	void SolarGM_CallAirdropByAirShip(float Loc_X, float Loc_Y);
	void SolarGM_ApplyVehicleSkin(int32 SkinId);
	void SolarAsyncLoad(const class FString& ResPath);
	void SolarAmmoSpreadPerBullet(int32 AmmoIndex, float ADSSpreadCOP, float VhADSSpreadCOP, float SpreadFirePreTime, float SpreadPostFireSpeed, float SpreadRestorePreTime, float SpreadRestoreSpeed);
	void SolarAmmoRangeSpeedDamage(int32 AmmoIndex, float MaxRange, float EffRange, float Radius, float InitSpeed, float FireStreakBreakTime, float DamageMaxRange, float DamageEffRange, float PostFireOverload);
	void SolarAmmoFiring(int32 AmmoIndex, int32 FireCostType, int32 FireCostPerAttack, int32 FireSpeedChangeTime, float FireSpeedChangeCOP, float FastestFireInterval, float BaseInterval, float SlowestFireInterval);
	void SolarAmmoBoltAndMag(int32 AmmoIndex, float BoltActionTime, float StartBoltDuration, bool UsePrimaryModeAmmoCap, bool UseBag);
	void SolarAmmoBasicMovement(int32 AmmoIndex, int32 TimedExplode, int32 BounceTimes, float LifeTime, float BaseReloadTime, int32 TrajectoryType, float CustomValue);
	void SetGameplayVibrateIntensity(const class FString& Category, const class FString& Intensity);
	void ExecuteGMCommandsInCustomMode(const class FString& CommandParameters, const class FString& ArgsStr);
	void BookmarkEnd(const class FString& Message);
	void BookmarkBegin(const class FString& Message);
};

// 0x28 (0x858 - 0x830)
// Class Solarland.SolarCheckBox
class USolarCheckBox : public UCheckBox
{
public:
	uint8                                        Pad_2764[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UWidget*                               OnGroup;                                           // 0x840(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                               OffGroup;                                          // 0x848(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ESlateVisibility                  CheckedGroupVisibility;                            // 0x850(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ESlateVisibility                  UncheckedGroupVisibility;                          // 0x851(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2765[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarCheckBox* GetDefaultObj();

	void OnStateChanged(bool bIsChecked);
	void ManualSetIsChecked(bool InIsChecked);
};

// 0x30 (0x4C8 - 0x498)
// Class Solarland.SolarCheckButton
class USolarCheckButton : public UButton
{
public:
	uint8                                        Pad_2766[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnClickedEvent;                                    // 0x4A0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_2767[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UWidget*                               OnGroup;                                           // 0x4B8(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidget*                               OffGroup;                                          // 0x4C0(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class USolarCheckButton* GetDefaultObj();

	void SetButtonIndex(int32 InButtonIndex);
	void OnStateChanged(bool bIsChecked);
	FMulticastInlineDelegateProperty_ GetOnClickedEvent();
	int32 GetButtonIndex();
};

// 0x30 (0x190 - 0x160)
// Class Solarland.SolarCheckButtonGroup
class USolarCheckButtonGroup : public UNamedSlot
{
public:
	FMulticastInlineDelegateProperty_            OnStateChangedEvent;                               // 0x160(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                         IsChildrenAutoSetState;                            // 0x170(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDelayStateChanged;                                // 0x171(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2768[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UPanelWidget*                          GroupRoot;                                         // 0x178(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2769[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarCheckButtonGroup* GetDefaultObj();

	void SetSelectIndex(int32 Index);
	void SetChildrenAutoSetState(bool InEnable);
	void RevertLastCheck();
	void OnStateChanged(int32 ButtonIndex);
	void OnCheckButtonGroupStateChangedEvent__DelegateSignature(int32 InLastButtonIndex);
};

// 0x0 (0x28 - 0x28)
// Class Solarland.SolarCheckButtonInterface
class ISolarCheckButtonInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class ISolarCheckButtonInterface* GetDefaultObj();

	void OnStateChange(int32 InIndex);
	void ManualChangeState(bool bIsChecked);
};

// 0x20 (0x368 - 0x348)
// Class Solarland.SolarCheckButtonWidget
class USolarCheckButtonWidget : public USolarUserWidget
{
public:
	uint8                                        Pad_276A[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnClickedEvent;                                    // 0x350(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_276B[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarCheckButtonWidget* GetDefaultObj();

	void SetButtonIndex(int32 InButtonIndex);
	void PostClickedEvent();
	void OnStateChanged(bool bIsChecked);
	void OnSelected(bool bSelected);
	FMulticastInlineDelegateProperty_ GetOnClickedEvent();
	int32 GetButtonIndex();
};

// 0x60 (0x90 - 0x30)
// Class Solarland.SolarChunkAssignData
class USolarChunkAssignData : public UDataAsset
{
public:
	TArray<struct FDirectoryPath>                DirectoriesToNeverClean;                           // 0x30(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class FString, struct FChunkAssignRule> Rules;                                             // 0x40(0x50)(Edit, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class USolarChunkAssignData* GetDefaultObj();

};

// 0x1E8 (0x468 - 0x280)
// Class Solarland.SolarSafeArea
class ASolarSafeArea : public ASCMMapElementBase
{
public:
	uint8                                        Pad_276F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        CurrentIndex;                                      // 0x284(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TargetTime;                                        // 0x288(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        BeginShrinkTime;                                   // 0x28C(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DamageValue;                                       // 0x290(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               BeginLocation;                                     // 0x294(0xC)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        BeginScale;                                        // 0x2A0(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ESafeAreaStatus                   AreaStatus;                                        // 0x2A4(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2770[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EActorInSafeAreaStatus            LocalPlayerCameraInSafeAreaState;                  // 0x2B5(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EActorInSafeAreaStatus            LocalViewFocusedCharacterInSafeAreaState;          // 0x2B6(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2771[0x51];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bCanCausingDamage;                                 // 0x308(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2772[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        FirstDamageDelay;                                  // 0x30C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DamageInterval;                                    // 0x310(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2773[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                LeaveSafeAreaSoundName;                            // 0x318(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                EnterSafeAreaSoundName;                            // 0x328(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                InPoisonPerSecSoundName;                           // 0x338(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        InPoisonSoundSecond;                               // 0x348(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        WarningNotificationIndex;                          // 0x34C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<int32, int32>                           NoticeDataMap;                                     // 0x350(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	TMap<int32, class FString>                   SoundEventNameDataMap;                             // 0x3A0(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	TMap<int32, int32>                           QuickVoiceDataMap;                                 // 0x3F0(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	int32                                        ShrinkEndNotificationIndex;                        // 0x440(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        ShrinkEndNoticeId;                                 // 0x444(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                ShrinkEndSoundEventName;                           // 0x448(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ASolarPlayerController*                LocalController;                                   // 0x458(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2774[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASolarSafeArea* GetDefaultObj();

	void StartShrink();
	void ShowPoisonPerSecond();
	void ShowPoisonEffect(bool bShow);
	void ShowEffectInside(bool bInside);
	void Resume();
	void ReceiveShrinkEnd();
	void ReceiveActorLeaveSafeAreaCircle(class AActor* Actor);
	void ReceiveActorLeavePoisonCircle(class AActor* Actor);
	void ReceiveActorEnterSafeAreaCircle(class AActor* Actor);
	void ReceiveActorEnterPoisonCircle(class AActor* Actor);
	void Pause();
	void OnRep_CurrentIndexChange();
	void LocalPlayerCameraLeavePoisonCircle();
	void LocalPlayerCameraEnterPoisonCircle();
	bool IsPause();
	bool IsLocationInSafeArea(struct FVector& Pos);
	bool IsLocationInPoisonCircle(struct FVector& InLocation);
	bool IsInSafeArea(class AActor* Actor);
	void GMStartShrinkArea();
	float GetShrinkTargetTime();
	enum class ESafeAreaStatus GetSafeAreaStatus();
	struct FVector GetNextAreaLocation();
	int32 GetCurrentIndex();
	float GetCurrentDamage();
	struct FVector GetCurrentAreaBeginLocation();
	float GetBeginShrinkTime();
};

// 0x60 (0x4C8 - 0x468)
// Class Solarland.SolarCircleSafeArea
class ASolarCircleSafeArea : public ASolarSafeArea
{
public:
	TMap<float, class UCurveFloat*>              MiniMapScaleMap;                                   // 0x468(0x50)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TArray<struct FCircleSafeAreaInfo>           SafeAreaConfigArr;                                 // 0x4B8(0x10)(Net, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class ASolarCircleSafeArea* GetDefaultObj();

	void SetNextSafeArea(struct FCircleSafeAreaInfo& AreaInfo);
	void Init(struct FVector& InSafeAreaCenterPos, float InPoisonCircleRadius);
	float GetNextSafeAreaRadius();
	class UCurveFloat* GetMiniMapFOVCurveByRadius(float InRadius);
	float GetCurrentSafeAreaRadius();
};

// 0xD8 (0x300 - 0x228)
// Class Solarland.SolarCityName
class ASolarCityName : public AActor
{
public:
	class USolarStrongholdNamesConfig*           NameConfigCN;                                      // 0x228(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarStrongholdNamesConfig*           NameConfigEN;                                      // 0x230(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTexture*                              NameTextureCN;                                     // 0x238(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTexture*                              NameTextureEN;                                     // 0x240(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                    NameMaterial;                                      // 0x248(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                PointName;                                         // 0x250(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                    TextMaterial;                                      // 0x260(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FSoftObjectPath                       FontPath;                                          // 0x268(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        BaseScale;                                         // 0x280(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        HightLimit;                                        // 0x284(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MinimumDistance;                                   // 0x288(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        LocTextID;                                         // 0x28C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCapitalsLock;                                     // 0x290(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2777[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        GradientFadeTime;                                  // 0x294(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ESolarSupportLanguages            PreviewLang;                                       // 0x298(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2778[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSoftObjectPath                       PreviewFontPath;                                   // 0x2A0(0x18)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2779[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UMaterialInstanceDynamic*              MaterialDynamic;                                   // 0x2C0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstanceDynamic*              TextMaterialDynamic;                               // 0x2C8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_277A[0x30];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASolarCityName* GetDefaultObj();

	void SetSolarCityNameTickAndShow(enum class EReplayCameraMode OldMode, enum class EReplayCameraMode CurMode);
	void SetSolarCityNameTick(bool bNeedTick);
	void OnCharacterOnRep();
	TArray<class FString> GetLocalizationCityNamesWithAllLanguages();
	class FString GetLocalizationCityName(bool bGetNameWithLang);
};

// 0x0 (0x28 - 0x28)
// Class Solarland.SolarCombatRegenerationInterface
class ISolarCombatRegenerationInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class ISolarCombatRegenerationInterface* GetDefaultObj();

};

// 0x48 (0x368 - 0x320)
// Class Solarland.SolarCommonTextBlock
class USolarCommonTextBlock : public UCommonTextBlock
{
public:
	bool                                         bEnableLocText;                                    // 0x320(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_277D[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        LocTextID;                                         // 0x324(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ESolarSupportLanguages            PreviewLang;                                       // 0x328(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_277E[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSlateFontSizeForLang                 SpecialLangFont;                                   // 0x330(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	uint8                                        Pad_277F[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarCommonTextBlock* GetDefaultObj();

	void SetLocTextID(int32 InLocTextID);
	void SetLocLangTextData(class FText InText, bool InEnableLocText, int32 InLocTextID, enum class ESolarSupportLanguages InPreviewLang, const struct FSlateFontSizeForLang& InSlateFontSizeForLang);
};

// 0x40 (0x2A0 - 0x260)
// Class Solarland.SolarComponentKeyWidget
class USolarComponentKeyWidget : public UUserWidget
{
public:
	class FString                                ActionName;                                        // 0x260(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                KeyBoardText;                                      // 0x270(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                        KeyBoardTextArray;                                 // 0x280(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            UpdateKeyboardMappingDelegate;                     // 0x290(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class USolarComponentKeyWidget* GetDefaultObj();

	void UpdateKeyboardMappingInternal(const class FString& ModifyActionName);
	void OnUpdateKeyboardMapping(TSet<class FString>& ActionNames);
};

// 0x0 (0x28 - 0x28)
// Class Solarland.ControllerRelevancyInterface
class IControllerRelevancyInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IControllerRelevancyInterface* GetDefaultObj();

};

// 0x160 (0x190 - 0x30)
// Class Solarland.SolarControllerRelevancySubsystem
class USolarControllerRelevancySubsystem : public UWorldSubsystem
{
public:
	uint8                                        Pad_2781[0x160];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarControllerRelevancySubsystem* GetDefaultObj();

	void OnActorEndPlay(class AActor* Actor, enum class EEndPlayReason EndPlayReason);
};

// 0xF8 (0x128 - 0x30)
// Class Solarland.SolarCrosshairSubsystem
class USolarCrosshairSubsystem : public UWorldSubsystem
{
public:
	uint8                                        Pad_2782[0x7C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TWeakObjectPtr<class ASolarPlayerWeapon>     ActivedPlayerWeapon;                               // 0xAC(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2783[0x34];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UVehicleWeaponScopeWidget*>     CachedVehicleWeaponScopes;                         // 0xE8(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2784[0x30];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarCrosshairSubsystem* GetDefaultObj();

	void VehicleWeaponForbid(bool InbEntry);
	void ClearVehicleScopeUI();
};

// 0x0 (0x28 - 0x28)
// Class Solarland.SolarCrosshairWidgetInterface
class ISolarCrosshairWidgetInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class ISolarCrosshairWidgetInterface* GetDefaultObj();

	void OnUpdateReload(float InReloadProgress, int32 InReloadAmmo, int32 InMaxAmmo);
	void OnUpdateOverload(float InOverloadProgress, float InOverloadWarningRate, bool InbOverloadState);
	void OnUpdateCoolDown(float InReloadProgress);
	void OnUpdateCharge(bool InbCharging, int32 InChargeMode, float InChargeProgress);
	void OnUpdateAmmo(int32 InReservedAmmo, int32 InMaxAmmo, float InAmmoProgress, bool InbFirst);
	void OnReloadFinish(bool InbReloadSuccess, int32 InReloadAmmo, int32 InReservedAmmo, int32 InMaxAmmo, float InAmmoProgress);
	void OnInsufficientAmmo();
	void OnChangeReloadState(bool InbQuitState, bool bReloadSpeedup);
	void OnChangeOverloadState(bool InbQuitState);
	void OnActiveCrosshair(class UUserWidget* InActiveCrosshair);
};

// 0x0 (0x468 - 0x468)
// Class Solarland.SolarCustomModeBoxSafeArea
class ASolarCustomModeBoxSafeArea : public ASolarSafeArea
{
public:

	static class UClass* StaticClass();
	static class ASolarCustomModeBoxSafeArea* GetDefaultObj();

	bool PointInBox(struct FVector& Pos, class UBoxComponent* Box);
};

// 0x0 (0x28 - 0x28)
// Class Solarland.SolarDamageTextInterface
class ISolarDamageTextInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class ISolarDamageTextInterface* GetDefaultObj();

	void RequestPlayDamageTextByDatas(TArray<struct FSolarDamageText>& InSolarDamageTextDatas);
	void RequestPlayDamageText(struct FSolarDamageText& InSolarDamageText);
};

// 0xD0 (0x418 - 0x348)
// Class Solarland.SolarDamageTextSlotWidget
class USolarDamageTextSlotWidget : public USolarUserWidget
{
public:
	uint8                                        Pad_278B[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<enum class ESolarDamageTextType, struct FSolarDamageTextData> TextDatas;                                         // 0x358(0x50)(BlueprintVisible, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TMap<enum class ESolarDamageTextType, struct FSolarDamageTextIconData> IconDatas;                                         // 0x3A8(0x50)(BlueprintVisible, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	class UImage*                                Img_Crit;                                          // 0x3F8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Crit_Anim;                                         // 0x400(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint32                                       UniqueId;                                          // 0x408(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        DamageForSpecialAnimation;                         // 0x40C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Text_Special_Anim;                                 // 0x410(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class USolarDamageTextSlotWidget* GetDefaultObj();

	void OnCharacterDeath(class ASolarCharacter* InCharacter);
};

// 0x2E0 (0x628 - 0x348)
// Class Solarland.SolarDamageTextWidget
class USolarDamageTextWidget : public USolarUserWidget
{
public:
	uint8                                        Pad_278E[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<enum class ESolarDamageTextType, struct FSolarDamageTextStyle> FloatDamageTextConfig;                             // 0x350(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	TMap<enum class ESolarDamageTextType, struct FSolarDamageTextStyle> StackDamageTextConfig;                             // 0x3A0(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FVector2D                             HitCharacterPositionOffset;                        // 0x3F0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                             CommonHitPositionOffset;                           // 0x3F8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                             FloatDamageTextOffset;                             // 0x400(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                             DamageTextDisplayAreaRatio;                        // 0x408(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        FloatDamageTextMaxinum;                            // 0x410(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FloatDamageTextScaleMaximum;                       // 0x414(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FloatDamageTextScaleMinimum;                       // 0x418(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        StackDamageTextScaleMaximum;                       // 0x41C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        StackDamageTextScaleMinimum;                       // 0x420(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        StackDamageTextHitScaleRatio;                      // 0x424(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        HeadShotDamageTextScaleRatio;                      // 0x428(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_278F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class USolarDamageTextSlotWidget*>    AllDamageTextSlotWidget;                           // 0x430(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UVerticalBox*>                  DamageTextGroups;                                  // 0x440(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<uint32, struct FSolarDamageTextGroupData> DamageTextGroupDatas;                              // 0x450(0x50)(ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TMap<uint32, struct FSolarDamageTextGroupData> PendingSlotWidgetDatas;                            // 0x4A0(0x50)(ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FRuntimeFloatCurve                    OBSlotScaleCurve;                                  // 0x4F0(0x88)(Edit, Protected, NativeAccessSpecifierProtected)
	TMap<enum class ESlateDetailMode, int32>     FloatDamageTextMaxinumBasedOnDetailMode;           // 0x578(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	TMap<enum class ESlateDetailMode, int32>     FloatDamageTextWidgetPoolBasedOnDetailMode;        // 0x5C8(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	TSubclassOf<class USolarDamageTextSlotWidget> FloatDamageTextWidget;                             // 0x618(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2790[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarDamageTextWidget* GetDefaultObj();

	void UpdatePendingSlotWidgetDatas(uint32 UniqueId);
	void RequestDisplayDamageText(struct FSolarDamageText& InDamageTextData);
};

// 0x70 (0x3B8 - 0x348)
// Class Solarland.SolarDeathViewSkillWidget
class USolarDeathViewSkillWidget : public USolarUserWidget
{
public:
	class UOverlay*                              WeaponSkill;                                       // 0x348(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Img_Bg;                                            // 0x350(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Img_Light;                                         // 0x358(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                ProgressCD;                                        // 0x360(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Icon_WeaponSkill;                                  // 0x368(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                          CurrentProgressState;                              // 0x370(0x10)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  ProgressParameterName;                             // 0x380(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                          OnCDColor;                                         // 0x388(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                          UnCDColor;                                         // 0x398(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class ASolarPlayerWeapon>     CurrentPlayerWeapon;                               // 0x3A8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCoolDown;                                         // 0x3B0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2791[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarDeathViewSkillWidget* GetDefaultObj();

	void UpdateSkillVisibility();
	void UpdateSkillIcon();
	void UpdateCurrentPlayerWeapon();
	void UpdateCDProgress(bool bForceUpdate);
	void SwitchSkillState(bool InbCD);
};

// 0x40 (0x388 - 0x348)
// Class Solarland.SolarDeathViewWeaponPanelWidget
class USolarDeathViewWeaponPanelWidget : public USolarUserWidget
{
public:
	class USolarDeathViewWeaponWidget*           Weapon_1;                                          // 0x348(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarDeathViewWeaponWidget*           Weapon_2;                                          // 0x350(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarDeathViewWeaponWidget*           Weapon_3;                                          // 0x358(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2794[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class USolarDeathViewWeaponWidget*>   WeaponWidgetArray;                                 // 0x378(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class USolarDeathViewWeaponPanelWidget* GetDefaultObj();

	void OnUpdateAmmo(int32 InWeaponSlotID);
	void OnEquipWeapon(int32 InWeaponSlotID, class ASolarPlayerWeapon* InPlayerWeapon);
	void OnActiveWeapon(int32 InWeaponSlotID, class AActor* InActivedWeapon);
};

// 0x98 (0x3E0 - 0x348)
// Class Solarland.SolarDeathViewWeaponWidget
class USolarDeathViewWeaponWidget : public USolarUserWidget
{
public:
	class UCanvasPanel*                          Panel_Empty;                                       // 0x348(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                          Panel_Weapon;                                      // 0x350(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                          Panel_Hold;                                        // 0x358(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Img_Mask;                                          // 0x360(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Img_Weapon;                                        // 0x368(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Img_WeaponBg_1;                                    // 0x370(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Img_WeaponBg;                                      // 0x378(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Img_WeaponBg_2;                                    // 0x380(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                            Txt_Bullets;                                       // 0x388(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                            Txt_Bullets_0;                                     // 0x390(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USizeBox*                              SizeBox_0;                                         // 0x398(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class ASolarPlayerWeapon>     OwnerPlayerWeapon;                                 // 0x3A0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FTimerHandle                          LoadWeaponDataTimerHandle;                         // 0x3A8(0x8)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2796[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FLinearColor                          ExtraAmmoColor;                                    // 0x3C0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                          AmmoDefaultColor;                                  // 0x3D0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class USolarDeathViewWeaponWidget* GetDefaultObj();

	void OnWeaponUpgrade(int32 InLevel, uint32 InWeaponUniqueID);
	void OnWeaponUpdateAmmoCount(int32 InFireModeType, class ASolarWeapon* InWeapon);
	void OnCharacterLevelChanged(int32 InNewLevel);
	void AsyncLoadWeaponData();
};

// 0x0 (0x28 - 0x28)
// Class Solarland.SolarDebugDrawer
class ISolarDebugDrawer : public IInterface
{
public:

	static class UClass* StaticClass();
	static class ISolarDebugDrawer* GetDefaultObj();

};

// 0x78 (0x2A0 - 0x228)
// Class Solarland.SolarDebugDrawerManager
class ASolarDebugDrawerManager : public AActor
{
public:
	uint8                                        Pad_2797[0x78];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASolarDebugDrawerManager* GetDefaultObj();

};

// 0x0 (0x228 - 0x228)
// Class Solarland.SolarDecorationActor
class ASolarDecorationActor : public AActor
{
public:

	static class UClass* StaticClass();
	static class ASolarDecorationActor* GetDefaultObj();

};

// 0x58 (0x370 - 0x318)
// Class Solarland.SolarDecorationComponent
class USolarDecorationComponent : public USceneComponent
{
public:
	struct FSoftObjectPath                       ChildActorPath;                                    // 0x318(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHideAllDecorationComponents;                      // 0x330(0x1)(Edit, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2798[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class AActor>                    ChildActorClass;                                   // 0x338(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UChildActorComponent*                  ChildActorComponent;                               // 0x340(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2799[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSoftClassPath                        ChildActorClassPath;                               // 0x350(0x18)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_279A[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarDecorationComponent* GetDefaultObj();

};

// 0x140 (0x1608 - 0x14C8)
// Class Solarland.SolarDemoNetDriver
class USolarDemoNetDriver : public UDemoNetDriver
{
public:
	TSet<class UClass*>                          AlwaysRecordClasses;                               // 0x14C8(0x50)(NativeAccessSpecifierPrivate)
	TSet<class AActor*>                          RelevantActors;                                    // 0x1518(0x50)(NativeAccessSpecifierPrivate)
	TSet<class AActor*>                          ReplicatedActors;                                  // 0x1568(0x50)(NativeAccessSpecifierPrivate)
	TMap<class UNetConnection*, class FString>   CacheConnectionToPlayerID;                         // 0x15B8(0x50)(NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class USolarDemoNetDriver* GetDefaultObj();

};

// 0x20 (0x258 - 0x238)
// Class Solarland.SolarDestructibleActor
class ASolarDestructibleActor : public AStaticMeshActor
{
public:
	TArray<enum class ECollisionChannel>         OnHitIgnoreChannels;                               // 0x238(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AddForceCoefficient;                               // 0x248(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        BrokenDestroyTime;                                 // 0x24C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bChildDetachOnBroken;                              // 0x250(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_279D[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASolarDestructibleActor* GetDefaultObj();

	void OnDestructibleActorHit(class AActor* SelfActor, class AActor* OtherActor, struct FHitResult& Hit, float SpeedDifference);
	void OnClientBrokenEffect();
	void OnBroken(class ASolarVehiclePawn* VehiclePawn, float SpeedDifference, const struct FVector& Impulse, const struct FVector& ImpactPoint);
};

// 0x130 (0x160 - 0x30)
// Class Solarland.SolarDownloadManager
class USolarDownloadManager : public UGameInstanceSubsystem
{
public:
	uint8                                        Pad_27A1[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnCDNURLSelectionChanged;                          // 0x38(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_27A2[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                CDNResBaseURL;                                     // 0x60(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<class FName, class USolarlandFileDownloader*> ActivedFileDownloaders;                            // 0x70(0x50)(Protected, NativeAccessSpecifierProtected)
	TMap<class FName, class USolarlandContentStringDownloader*> ActivedContentStringDownloaders;                   // 0xC0(0x50)(Protected, NativeAccessSpecifierProtected)
	TMap<class FName, class USolarlandPakMounter*> ActiveMounters;                                    // 0x110(0x50)(Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class USolarDownloadManager* GetDefaultObj();

	void SetNextCDNURL();
	void SetCurrentCDNURL(const class FString& CDNURL);
	void SetCDNURLList(TArray<class FString>& InCDNURLList);
	class USolarlandPakMounter* RequirePaksMount(TArray<struct FLocalFileInfo>& InPakInfos, class FName& InMountTag, int32 InMountOrder, bool bInIncreasedOrder);
	class USolarlandFileDownloader* RequireFilesDownload(TArray<struct FDownloadFileInfo>& InFileInfos, const class FString& InLocalDir, class FName& InDownloadTag, bool bInUseChunk, bool bInForceRedownload);
	class USolarlandContentStringDownloader* RequireContentStringDownload(const class FString& InUrl, class FName& InDownloadTag, bool bInUseChunk, bool bInForceRedownload);
	void OnCDNURLSelectionChanged__DelegateSignature(const class FString& CurrentCDNURL);
	bool IsLocalBuild();
	bool IsCurrentCDNURLAvailable();
	class USolarlandPakMounter* GetMounterByTag(class FName& InMountTag);
	class USolarlandFileDownloader* GetFileDownloaderByTag(class FName& InDownloadTag);
	class USolarDownloadManager* GetDownloadManager(class UObject* WorldContextObject);
	class FString GetCurrentCDNURL();
	class USolarlandContentStringDownloader* GetContentStringDownloaderByTag(class FName& InDownloadTag);
};

// 0x48 (0xD0 - 0x88)
// Class Solarland.SolarDragDropOperation
class USolarDragDropOperation : public UDragDropOperation
{
public:
	int32                                        DropId;                                            // 0x88(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        DropNum;                                           // 0x8C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        DropWeaponSlot;                                    // 0x90(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        DropItemType;                                      // 0x94(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                DropName;                                          // 0x98(0x10)(Edit, BlueprintVisible, ZeroConstructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        DropFromGridType;                                  // 0xA8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        DropFromIndex;                                     // 0xAC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                DropActor;                                         // 0xB0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        DropGrade;                                         // 0xB8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        DropFromPickupType;                                // 0xBC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        DropFromThisID;                                    // 0xC0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        DropWeaponPartType;                                // 0xC4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        DropLevel;                                         // 0xC8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_27A3[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarDragDropOperation* GetDefaultObj();

};

// 0x238 (0x580 - 0x348)
// Class Solarland.SolarDriveControlBase
class USolarDriveControlBase : public USolarUserWidget
{
public:
	class ASolarPlayerController*                SolarPC;                                           // 0x348(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ASolarVehiclePawn*                     VehiclePawn;                                       // 0x350(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_27A7[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FLinearColor                          TxtSpeedOriginColor;                               // 0x360(0x10)(Edit, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                          TxtSpeedFinalColor;                                // 0x370(0x10)(Edit, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UProgressBar*                          ProgressBar_Speed;                                 // 0x380(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                            Txt_Speed_0;                                       // 0x388(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                            Txt_Speed;                                         // 0x390(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarTextBlock*                       Txt_BrandName;                                     // 0x398(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCommonLazyImage*                      LazyImg_Brand;                                     // 0x3A0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                          Panel_Speed;                                       // 0x3A8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                          Panel_SwitchSeat;                                  // 0x3B0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCheckBoxGroup*                        SeatFlag;                                          // 0x3B8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_27A8[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class USolarVehicleHealthWidget*             UI_Vehicle_Health;                                 // 0x3D8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_27A9[0x40];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UCanvasPanel*                          Panel_Warning_Danger;                              // 0x420(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Img_Danger_Mask;                                   // 0x428(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UProgressBar*                          ProgressBar_Danger;                                // 0x430(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                          Panel_ProgressBar_Danger;                          // 0x438(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_27AA[0x48];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UCanvasPanel*                          Panel_ScopeUI;                                     // 0x488(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                          Panel_Prep;                                        // 0x490(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                          Panel_PrepEmpty;                                   // 0x498(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UProgressBar*                          ProgressBar_Prep;                                  // 0x4A0(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                            Txt_Bullet_0;                                      // 0x4A8(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                            Txt_Bullet;                                        // 0x4B0(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Anim_PrepEmpty;                                    // 0x4B8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                          EmptyBulletColor;                                  // 0x4C0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                          NomalBulletColor;                                  // 0x4D0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_27AB[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UCanvasPanel*                          Panel_DMG;                                         // 0x4F8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Img_DMG_BG_Light;                                  // 0x500(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Img_DMG_BG_Left;                                   // 0x508(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Img_DMG_BG;                                        // 0x510(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarTextBlock*                       Txt_DMG;                                           // 0x518(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        VehicleDamageTextLocalizationID;                   // 0x520(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_27AC[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<int32, struct FVehicleDamageLevelColor> VehicleDamageLevelColors;                          // 0x528(0x50)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_27AD[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarDriveControlBase* GetDefaultObj();

	void TriggerNoAmmoAlert();
	void ShowDriveControl(enum class EDriveState InDriveState, struct FVehicleControlUserSettings& InDriverSettings);
	void SetOnVehicleUI(enum class EDriveState InDriveState);
	void ScopeUIStateChanged(bool BOpened);
	void RefreshVehicleWeakPoints();
	void RefreshVehicleBrokenDangerUI(float DangerRate, float TweenSpeed, float InDeltaTime);
	void RefreshRequiredAbilityUI(int32 InAbilityIndex, bool bTagActive);
	void RefreshOccupiedSeats(bool bSwtichVehicleSeatPlayer);
	void RefreshHealthPercentUI();
	void RefreshBlockedAbilityUI();
	void RefreshAbilityActivation(bool bInActivated, bool bCanCancel, uint8 InAbilityIndex, float InDurationTime);
	void OnVehicleWeaponChanged();
	void OnVehicleTypeChange();
	void OnVehicleSkinUpdate(class ASolarVehiclePawn* VehicleComp);
	void OnSelfHealingChanged(bool bActived);
	void OnLocalWeaponSystemVehicleInitialized();
	void OnCharacterLevelUp(int32 InNewLevel, int32 InOldLevel);
	void HiddenDriveControl();
	void ClearVehicleHandle();
	void BP_ApplyVehicleUI(enum class EDriveState InDriveState);
	void ApplyVehicleUI(enum class EDriveState InDriveState);
	void AddScopeToPanel(class UUserWidget* InChildWidget, bool bInSpectate);
};

// 0x8 (0x588 - 0x580)
// Class Solarland.SolarDriveControlWidgetPC
class USolarDriveControlWidgetPC : public USolarDriveControlBase
{
public:
	class UWidgetSwitcher*                       WidgetSwitcher_GetOff;                             // 0x580(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class USolarDriveControlWidgetPC* GetDefaultObj();

};

// 0x1D0 (0x750 - 0x580)
// Class Solarland.SolarDriveControWidgetMobile
class USolarDriveControWidgetMobile : public USolarDriveControlBase
{
public:
	uint8                                        Pad_27B0[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UVehicleMoveWidget*                    Joy_Mode1_D;                                       // 0x5A0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UVehicleMoveWidget*                    Joy_Mode2_D;                                       // 0x5A8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                          Sprint;                                            // 0x5B0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_27B1[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UImage*                                Img_SprintActive;                                  // 0x5C0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarTextBlock*                       Txt_Sprint;                                        // 0x5C8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                          SprintActiveOncePanel;                             // 0x5D0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Img_SprintLock;                                    // 0x5D8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                FX_CircleLoop;                                     // 0x5E0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_27B2[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UCheckBoxGroup*                        SeatFlag_Expand;                                   // 0x5F0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                          BT_Switch_Normal;                                  // 0x5F8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                          BT_Switch_Expand;                                  // 0x600(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarButton*                          BT_ChangeSeat;                                     // 0x608(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UButton*                               Btn_SeatClose;                                     // 0x610(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_27B3[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UCanvasPanel*                          Panel_VehicleFire;                                 // 0x628(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                          Panel_Reload;                                      // 0x630(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                          Panel_Gunsight;                                    // 0x638(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarInputButton*                     BT_Drive_Shot;                                     // 0x640(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                          Panel_QuickADS;                                    // 0x648(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UProgressBar*                          QuickAds_Progress_CD;                              // 0x650(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarTextBlock*                       QuickAds_Txt_Progress;                             // 0x658(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarTextBlock*                       Txt_Fire;                                          // 0x660(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetSwitcher*                       WGS_Vehicle_PrimaryFire;                           // 0x668(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_27B4[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class USolarInputButton*                     BT_Weapon_Exit;                                    // 0x680(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UButton*                               BT_Drive_Out;                                      // 0x688(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UButton*                               BT_Jet_Out;                                        // 0x690(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Anim_Drive_Out_Enter;                              // 0x698(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                          Panel_Drive_Out;                                   // 0x6A0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Img_vx_Circle;                                     // 0x6A8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_27B5[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UCanvasPanel*                          Panel_DriveCarup;                                  // 0x6B8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_27B6[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UCanvasPanel*                          Panel_DriveCardown;                                // 0x6C8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_27B7[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UCanvasPanel*                          Container_Driver;                                  // 0x6D8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarInputButton*                     BT_Trumpet_Shot;                                   // 0x6E0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarInputButton*                     BT_Drive_Drift;                                    // 0x6E8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                          Car_Control_UI_Vehicle;                            // 0x6F0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                          Drive_Mode_1;                                      // 0x6F8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                          Drive_Mode_2;                                      // 0x700(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarInputButton*                     BT_Drive_R;                                        // 0x708(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarInputButton*                     BT_Drive_Return;                                   // 0x710(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWalkWidgetNew*                        SteeringJoyStick;                                  // 0x718(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Img_Steering;                                      // 0x720(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCheckBox*                             CheckBox_Steeting_Right;                           // 0x728(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCheckBox*                             CheckBox_Steeting_Left;                            // 0x730(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        EjectionBtnScaleMagnification;                     // 0x738(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                             EjectionBtnMaxScale;                               // 0x73C(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_27B8[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarDriveControWidgetMobile* GetDefaultObj();

	void StopAutoMove(bool bResetJoy);
	void SetVehicleWeaponAbilityActivated(bool bInActive);
	void ResetDriverControlInput(bool bIgnoreSprint);
	void OnSwitchRotateInAir(bool bOpen);
	void OnSteeringInput(float Offset);
	void OnSprintLockIconActiveFunc(struct FVector2D& SprintPosition);
	void OnSprintIconHideFunc();
	void OnSprintIconActiveFunc(struct FVector2D& SprintPosition);
	void OnJetEnterAnimFinished();
	void OnExpandSeatFlagChanged(TArray<class UCheckBox*>& ChildChangedArray, int32 CheckedChildIndex);
	void OnDriverVehicleHit(float SpeedDifferenceInKM);
	void OnDriverSettingSaved();
	void OnDriveDownPressed();
	void OnCloseExpandSwitchClicked();
	void OnChangeSeatReleased();
	void OnChangeSeatPressed();
	void OnChangeSeatHolding();
	void InputSprintLockStart();
	bool CanSwitchVehicleSeatByTags();
	void BeginAutoMove();
	void ApplyCustomizeLayoutEx(int32 LayoutType, enum class EVehicleControlUIType VehicleControlUIType);
};

// 0x18 (0xC8 - 0xB0)
// Class Solarland.SolarEasyAntiCheatComponent
class USolarEasyAntiCheatComponent : public UActorComponent
{
public:
	uint8                                        Pad_27BB[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USolarEasyAntiCheatManager*            AntiCheatManager;                                  // 0xB8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AActor*                                Owner;                                             // 0xC0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class USolarEasyAntiCheatComponent* GetDefaultObj();

	void ServerOnUnRegisterClient();
	void ServerOnRegisterClient(const class FString& ProductID);
	void ServerOnReceiveClientNotifyMessage(uint32 DataLenBytes, const class FString& Data);
	void ClientOnReceiveServerNotifyMessage(uint32 DataLenBytes, const class FString& Data);
	void ClientOnActionRequired(int32 ClientAction, int32 ActionReason, const class FString& Details);
};

// 0xB0 (0xD8 - 0x28)
// Class Solarland.SolarEasyAntiCheatManager
class USolarEasyAntiCheatManager : public UObject
{
public:
	uint8                                        Pad_27BD[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         EnableAntiCheat;                                   // 0x30(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableAntiCheatLauncherCheck;                     // 0x31(0x1)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_27BE[0xA6];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarEasyAntiCheatManager* GetDefaultObj();

	void TestSendDSAction(int32 ActionReason, const class FString& ActionDetials);
	void SwitchAntiCheatState();
	void SetEOSOpenIDToken(const class FString& OpenIDToken);
	void SendSteamAntiCheatRequest(int32 ErrorCode);
	void ReportAntiCheatBI(int32 ErrorCode);
	bool IsLaunchbyEOSBootstrapper();
	bool IsEOSSettingChanged();
	void EasyAntiCheatLogin(const class FString& AppToken);
	void AntiCheatLauncherCheck();
	bool AntiCheatEosSettingCheck();
};

// 0x28 (0x68 - 0x40)
// Class Solarland.SolarEffectExecution
class USolarEffectExecution : public UGameplayEffectExecutionCalculation
{
public:
	TSubclassOf<class USolarEffectExecutionProxy> CDOProxyClass;                                     // 0x40(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarEffectExecutionProxy*            CDOProxy;                                          // 0x48(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_27BF[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarEffectExecution* GetDefaultObj();

};

// 0x8 (0x30 - 0x28)
// Class Solarland.SolarEffectExecutionProxy
class USolarEffectExecutionProxy : public UObject
{
public:
	TWeakObjectPtr<class USolarEffectExecution>  CDOOwner;                                          // 0x28(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class USolarEffectExecutionProxy* GetDefaultObj();

	void Execute(struct FGameplayEffectCustomExecutionParameters& ExecutionParams, struct FGameplayEffectCustomExecutionOutput* OutExecutionOutput);
	class USolarEffectExecutionProxy* CreateProxy(class USolarEffectExecution* InCDOOwner, TSubclassOf<class USolarEffectExecutionProxy> ProxyClass);
};

// 0x0 (0x28 - 0x28)
// Class Solarland.SolarEffectInitiatorInterface
class ISolarEffectInitiatorInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class ISolarEffectInitiatorInterface* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Solarland.SolarEffectRecipientInterface
class ISolarEffectRecipientInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class ISolarEffectRecipientInterface* GetDefaultObj();

	void ResponseAbilityEffectHitResult(class AActor* InEffectInitiator, struct FHitResult& InHitResult, float InDamage);
};

// 0x218 (0x450 - 0x238)
// Class Solarland.SolarElectricShop
class ASolarElectricShop : public ASolarInteractableActor
{
public:
	int32                                        MaxWeaponLevel;                                    // 0x238(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MaxShieldLevel;                                    // 0x23C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<float>                                UpgradeEnergyCosts;                                // 0x240(0x10)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  ShopMesh;                                          // 0x250(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USphereComponent*                      CollisionComp;                                     // 0x258(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SpawnID;                                           // 0x260(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSpecificShopID;                                   // 0x264(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_27D2[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UDataTable>             ShopMeshPathTable;                                 // 0x268(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIfShowInMap;                                      // 0x290(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_27D3[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftClassPtr<class UMapMarkBase>            MapIcon;                                           // 0x298(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MapIconID;                                         // 0x2C0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxTirggerAngle;                                   // 0x2C4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ShopID;                                            // 0x2C8(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsBroken;                                         // 0x2CC(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_27D4[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TirggerDistance;                                   // 0x2D0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EShopModelAnimType                CurrentModeAnimType;                               // 0x2D4(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EShopModelAnimType                WantedModeAnimType;                                // 0x2D5(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_27D5[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<TWeakObjectPtr<class ASolarCharacter>> InstigateCharacters;                               // 0x2D8(0x10)(ZeroConstructor, Transient, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDataTable*                            ShopMeshDataTable;                                 // 0x2E8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FElectricShopSection>          ItemSections;                                      // 0x2F0(0x10)(Net, ZeroConstructor, RepNotify, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FElectricShopCDRecord>         ItemCDRecords;                                     // 0x300(0x10)(Net, ZeroConstructor, RepNotify, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<float>                                PoolRefreshTimeList;                               // 0x310(0x10)(Net, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FPoolRefreshInfo>              PoolRefreshInfoList;                               // 0x320(0x10)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        CurPoolGroupID;                                    // 0x330(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_27D6[0x14];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UMapMarkBase*>                  MapMarkArray;                                      // 0x348(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FTimerHandle>                  CachedHandles;                                     // 0x358(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        DemoRotationSpeed;                                 // 0x368(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DemoSwtichTime;                                    // 0x36C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DemoOffsetFromZ;                                   // 0x370(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_27D7[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UDataTable>             ItemDemoBPTable;                                   // 0x378(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDataTable*                            ItemDemoBPDataTable;                               // 0x3A0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<struct FSoftObjectPath, class AElectricShopItemDemo*> DemoActorMap;                                      // 0x3A8(0x50)(NativeAccessSpecifierPublic)
	class AElectricShopItemDemo*                 CurDemo;                                           // 0x3F8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTimerHandle                          DemoLoopPlaybackHandle;                            // 0x400(0x8)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AElectricShopItemDemo*>         SpawnedDemoActorList;                              // 0x408(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_27D8[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UObject*>                       CachedDemoItemsClass;                              // 0x440(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class ASolarElectricShop* GetDefaultObj();

	void UpgradeWeaponResponse(class ASolarPlayerWeapon* InWeapon, class ASolarCharacter* InCharacter);
	void UpgradeShieldResponse(class ASolarCharacter* InCharacter);
	bool ServerUpgradeWeapon(class ASolarPlayerWeapon* InWeapon, class ASolarCharacter* InCharacter);
	bool ServerUpgradeShield(class ASolarCharacter* InCharacter);
	void ServerStatisticElectricShop(class ASolarCharacter* ActivateCharacter, enum class EShopStatisticType StatisticType, int32& InValueA, int32& InValueB);
	bool ServerPurchaseEShopItems(int32 InProductID, bool bIsRecommend, class ASolarCharacter* InCharacter);
	bool RemoveInstigator(class ASolarCharacter* InCharacter);
	bool RefreshSellingItem(int32 InProductID);
	void RefreshItemCDRecords(struct FElectricShopItem& InItem, const class FString& InPlayerID);
	void PurchaseEShopItemsResponse(int32 InProductID, bool bSuccess, class ASolarCharacter* InCharacter);
	void OnShopIDReplicatedBP();
	void OnRep_ShopID();
	void OnRep_ItemSections();
	void OnRep_ItemCDRecords();
	void OnRep_CurPoolGroupID(int32 PrePoolGroupID);
	void OnPlayWeaponUpgradeAnim();
	void OnPlayPurchaseAnim();
	void OnPlayIdleAnim();
	void OnEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void OnCurrentAnimFinish();
	void OnBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	bool IsProductRecommendEquipType(enum class EItemType ProductType);
	bool IsInteractable(class ASolarCharacter* InCharacter);
	void InitWeaponUpgradeEnergyCost();
	void InitializeElectricShop();
	float GetServerWorldTime();
	float GetRemainingCD(int32 ProductID);
	float GetDiscountedPrice(class ASolarCharacter* BuyerCharacter, float Price);
	void GetDiscountedItem(class ASolarCharacter* BuyerCharacter, struct FElectricShopItem* OutItem);
	bool GetCurrentItem(int32 InProductID, struct FElectricShopItem* OutItem);
	class FString GetBuyerID(int32 ProductID);
	struct FElectricShopItem GenerateNewItem(int32 InProductID);
	void ClientUpgradeWeaponSuccess();
	void ClientUpgradeShieldSuccess();
	void ClientUpdateModelAnim();
	void ClientPurchaseSuccess();
	void ClientHUDUpgradeWeaponSuccess(class ASolarPlayerWeapon* InWeapon, class ASolarCharacter* InCharacter);
	void ClientHUDUpgradeShieldSuccess(class ASolarCharacter* InCharacter);
	void ClientHUDPurchaseSuccess(int32 InProductID, class ASolarCharacter* InCharacter);
	void ClientHUDPoolRefresh(class ASolarCharacter* InCharacter);
	void ClientHUDItemRefresh(class ASolarCharacter* InCharacter);
	void ClientHUDCDRefresh(class ASolarCharacter* InCharacter);
	void AddInstigator(class ASolarCharacter* InCharacter);
};

// 0x8 (0x230 - 0x228)
// Class Solarland.ElectricShopItemDemo
class AElectricShopItemDemo : public AActor
{
public:
	uint8                                        Pad_27D9[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AElectricShopItemDemo* GetDefaultObj();

};

// 0x2E0 (0x6C0 - 0x3E0)
// Class Solarland.SolarEnergyShield
class ASolarEnergyShield : public ASummonItemBase
{
public:
	uint8                                        Pad_27DA[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UParticleSystem*                       HitEffect;                                         // 0x3E8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       ExplodeEffect;                                     // 0x3F0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UParticleSystem>        VehicleWholeShieldBrokenEffect;                    // 0x3F8(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               HitEffectScale;                                    // 0x420(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        OwnerTeam;                                         // 0x42C(0x1)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, RepNotify, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_27DB[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<enum class ESolarSummonSoundType, class FString> StartSoundMap;                                     // 0x430(0x50)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TMap<enum class ESolarSummonSoundType, class FString> LoopSoundMap;                                      // 0x480(0x50)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TMap<enum class ESolarSummonSoundType, class FString> HitSoundMap;                                       // 0x4D0(0x50)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TMap<enum class ESolarSummonSoundType, class FString> EndSoundMap;                                       // 0x520(0x50)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TMap<enum class ESolarSummonSoundType, class FString> BrokenSoundMap;                                    // 0x570(0x50)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class FString                                CollisionMeshName;                                 // 0x5C0(0x10)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                ShieldMeshName;                                    // 0x5D0(0x10)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                DecalMeshName;                                     // 0x5E0(0x10)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FMatUpdateParams>              BeginMatUpdateParams;                              // 0x5F0(0x10)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FMatUpdateParams>              DeathMatUpdateParams;                              // 0x600(0x10)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FMatUpdateParams>              HealthMatUpdateParams;                             // 0x610(0x10)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UMaterialInterface*>            EnemyShieldMaterials;                              // 0x620(0x10)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UMaterialInterface*>            EnemyDecalMaterials;                               // 0x630(0x10)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                       EnemyHitEffect;                                    // 0x640(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                       EnemyExplodeEffect;                                // 0x648(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<TWeakObjectPtr<class AActor>, float>    OverlapActorsTimeMap;                              // 0x650(0x50)(NativeAccessSpecifierPrivate)
	float                                        OverlapActorIntervalTime;                          // 0x6A0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        BounceForceToUniqueSkill;                          // 0x6A4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  CollisionMesh;                                     // 0x6A8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  ShieldMesh;                                        // 0x6B0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  DecalMesh;                                         // 0x6B8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class ASolarEnergyShield* GetDefaultObj();

	void PlayHitEffectOnVehicleWholeShield(int32 IndexToPlayHitEffect, struct FVector& HitLocation);
	void PlayHitEffect(struct FHitResult& HitResult);
	void OnRep_OwnerTeam();
	void ChangeColor(bool IsChanged);
};

// 0xA0 (0x760 - 0x6C0)
// Class Solarland.SolarEnergyBubble
class ASolarEnergyBubble : public ASolarEnergyShield
{
public:
	class UStaticMeshComponent*                  HandMesh;                                          // 0x6C0(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                       HandMeshStartEffect;                               // 0x6C8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                       HandMeshStartEffectEnemy;                          // 0x6D0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        HandMeshStartEffectDelay;                          // 0x6D8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TraceUpOffset;                                     // 0x6DC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MeshHeight;                                        // 0x6E0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RotateSpeed;                                       // 0x6E4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UProjectileMovementComponent*          ProjectileMovementComponent;                       // 0x6E8(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  ReleaseEnergyBubbleNotify;                         // 0x6F0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  VFXTagName;                                        // 0x6F8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               InitVelocity;                                      // 0x700(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_27DC[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            HandMeshRelativeTransform;                         // 0x710(0x30)(Edit, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_27DD[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USceneComponent*                       VFXComponent;                                      // 0x748(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_27DE[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASolarEnergyBubble* GetDefaultObj();

	void PlayHandMeshStartEffect();
	void OnProjectileStop(struct FHitResult& InImpactResult);
	void OnProjectileBounce(struct FHitResult& InImpactResult, struct FVector& InImpactVelocity);
};

// 0x0 (0xE60 - 0xE60)
// Class Solarland.SolarEngine
class USolarEngine : public UGameEngine
{
public:

	static class UClass* StaticClass();
	static class USolarEngine* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Solarland.SolarEQC_GetAITarget
class USolarEQC_GetAITarget : public UEnvQueryContext
{
public:

	static class UClass* StaticClass();
	static class USolarEQC_GetAITarget* GetDefaultObj();

	void ProvideSingleActor(class UObject* QuerierObject, class AActor* QuerierActor, class AActor** ResultingActor);
};

// 0x0 (0x28 - 0x28)
// Class Solarland.SolarEQC_OwnerBackRotation
class USolarEQC_OwnerBackRotation : public UEnvQueryContext
{
public:

	static class UClass* StaticClass();
	static class USolarEQC_OwnerBackRotation* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Solarland.SolarEQC_WarmTarget
class USolarEQC_WarmTarget : public UEnvQueryContext
{
public:

	static class UClass* StaticClass();
	static class USolarEQC_WarmTarget* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Solarland.SolarEQC_WarmTargetTrailCenter
class USolarEQC_WarmTargetTrailCenter : public UEnvQueryContext
{
public:

	static class UClass* StaticClass();
	static class USolarEQC_WarmTargetTrailCenter* GetDefaultObj();

};

// 0x8 (0x30 - 0x28)
// Class Solarland.SolarEQC_WarmTargetNearbyPlayers
class USolarEQC_WarmTargetNearbyPlayers : public UEnvQueryContext
{
public:
	float                                        DistanceThreshold;                                 // 0x28(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_27DF[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarEQC_WarmTargetNearbyPlayers* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Solarland.SolarEQC_WarmPopLocation
class USolarEQC_WarmPopLocation : public UEnvQueryContext
{
public:

	static class UClass* StaticClass();
	static class USolarEQC_WarmPopLocation* GetDefaultObj();

};

// 0x8 (0x30 - 0x28)
// Class Solarland.SolarEQC_NearbyPOILocation
class USolarEQC_NearbyPOILocation : public UEnvQueryContext
{
public:
	float                                        MaxDetectRadius;                                   // 0x28(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MinDetectRadius;                                   // 0x2C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class USolarEQC_NearbyPOILocation* GetDefaultObj();

};

// 0x48 (0x2C8 - 0x280)
// Class Solarland.SolarEQT_AgentPathFinding
class USolarEQT_AgentPathFinding : public UEnvQueryTest_Pathfinding
{
public:
	bool                                         bOverrideOwnerAgentProperty;                       // 0x280(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_27E0[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FNavAgentProperties                   NavAgentProperties;                                // 0x288(0x30)(Edit, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseCustomRecastQueryExtent;                       // 0x2B8(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_27E1[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               CustomRecastQueryExtent;                           // 0x2BC(0xC)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class USolarEQT_AgentPathFinding* GetDefaultObj();

};

// 0x68 (0x260 - 0x1F8)
// Class Solarland.SolarEQT_CheckInEffectArea
class USolarEQT_CheckInEffectArea : public UEnvQueryTest
{
public:
	bool                                         bOverridePerceptionConfig;                         // 0x1F8(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_27E2[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FPerceivableEAInfluenceConfig         InfluenceConfig;                                   // 0x200(0x60)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class USolarEQT_CheckInEffectArea* GetDefaultObj();

};

// 0x0 (0x1F8 - 0x1F8)
// Class Solarland.SolarEQT_CheckInSafeArea
class USolarEQT_CheckInSafeArea : public UEnvQueryTest
{
public:

	static class UClass* StaticClass();
	static class USolarEQT_CheckInSafeArea* GetDefaultObj();

};

// 0x18 (0x210 - 0x1F8)
// Class Solarland.SolarEQT_MoveProbe
class USolarEQT_MoveProbe : public UEnvQueryTest
{
public:
	int32                                        NumDivideRound;                                    // 0x1F8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ReferTraceDist;                                    // 0x1FC(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MinDistAsNoObstacle;                               // 0x200(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MaxNumDirNoObstacle;                               // 0x204(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MinNumDirNoObstacle;                               // 0x208(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TraceOffsetZ;                                      // 0x20C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class USolarEQT_MoveProbe* GetDefaultObj();

};

// 0x40 (0x318 - 0x2D8)
// Class Solarland.SolarEQT_TraceLimit
class USolarEQT_TraceLimit : public UEnvQueryTest_Trace
{
public:
	bool                                         bWantsHit;                                         // 0x2D8(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_27E3[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FAIDataProviderBoolValue              StartPenetratingValid;                             // 0x2E0(0x38)(Edit, DisableEditOnInstance, ContainsInstancedReference, AdvancedDisplay, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class USolarEQT_TraceLimit* GetDefaultObj();

};

// 0x20 (0x218 - 0x1F8)
// Class Solarland.SolarEQTHavePlayerInRange
class USolarEQTHavePlayerInRange : public UEnvQueryTest
{
public:
	float                                        TraceRange;                                        // 0x1F8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIgnoreSpectatePlayer;                             // 0x1FC(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_27E4[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TraceStartOffsetZ;                                 // 0x200(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_27E5[0x14];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarEQTHavePlayerInRange* GetDefaultObj();

};

// 0x50 (0x80 - 0x30)
// Class Solarland.SolarEventSubsystem
class USolarEventSubsystem : public UGameInstanceSubsystem
{
public:
	uint8                                        Pad_27E6[0x50];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarEventSubsystem* GetDefaultObj();

};

// 0x0 (0x348 - 0x348)
// Class Solarland.SolarExternalToolsWidget
class USolarExternalToolsWidget : public USolarUserWidget
{
public:

	static class UClass* StaticClass();
	static class USolarExternalToolsWidget* GetDefaultObj();

	class UWidget* GetTopWidget(class UWidget* InWidget);
};

// 0x10 (0x248 - 0x238)
// Class Solarland.SolarFireCircle
class ASolarFireCircle : public ASolarInteractableActor
{
public:
	class USolarAkGameObject*                    SolarAkGameObject;                                 // 0x238(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkComponent*                          AkAudioComponent;                                  // 0x240(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class ASolarFireCircle* GetDefaultObj();

	void InitializeSolarAkGameObject(class UActorComponent* Component, bool bReset);
};

// 0x0 (0x228 - 0x228)
// Class Solarland.SolarTrailEffect
class ASolarTrailEffect : public AActor
{
public:

	static class UClass* StaticClass();
	static class ASolarTrailEffect* GetDefaultObj();

	void OnFinished();
	struct FTransform GetTrackingTransform(class ASolarCharacter* Character);
	void AttachToCharacter(class ASolarCharacter* Character);
};

// 0x28 (0x340 - 0x318)
// Class Solarland.SolarTrailProxyComponent
class USolarTrailProxyComponent : public USceneComponent
{
public:
	TWeakObjectPtr<class ASolarCharacter>        PlayerBeingTracked;                                // 0x318(0x8)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_27E9[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarTrailProxyComponent* GetDefaultObj();

};

// 0x8 (0x230 - 0x228)
// Class Solarland.SkydiveTrailEffect
class ASkydiveTrailEffect : public AActor
{
public:
	class ASolarFlyTrail*                        FlyTrailManager;                                   // 0x228(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class ASkydiveTrailEffect* GetDefaultObj();

	void UpdateTrailEffect(float CurrentTime);
	void OnTrailFinish();
	void InitEffectAppearance(bool IsDefender, bool IsSameTeamWithLocalPlayer);
	void InitAppearanceByPlayerState(class ASolarPlayerState* PlayerState);
	void AddTrailPoint(float Timestamp, struct FVector& Location, struct FRotator& Rotation, struct FVector& Velocity);
};

// 0x348 (0x570 - 0x228)
// Class Solarland.SolarFlyTrail
class ASolarFlyTrail : public AActor
{
public:
	TArray<class USolarTrailProxyComponent*>     CachedProxyComponents;                             // 0x228(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FSoftObjectPath                       TrailEffectClass;                                  // 0x238(0x18)(Net, ZeroConstructor, RepNotify, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class ASolarTrailEffect>       FallbackTrailEffectClass;                          // 0x250(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClass*                                CachedTrailEffectClass;                            // 0x278(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_27EA[0x50];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FCharacterSkydiveTrailStaticInfoContainer SkydiveTrailStaticInfo;                            // 0x2D0(0x120)(Net, Protected, NativeAccessSpecifierProtected)
	struct FPackedSkydiveTrailFrameInfoContainer SkydiveTrailFrameInfo;                             // 0x3F0(0x120)(Net, Protected, NativeAccessSpecifierProtected)
	TSubclassOf<class ASkydiveTrailEffect>       SkydiveTrailEffectClass;                           // 0x510(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<class ASolarPlayerState*, struct FCharacterSkydiveTrailData> SkydiveTrailData;                                  // 0x518(0x50)(Protected, NativeAccessSpecifierProtected)
	class ASolarPlayerState*                     LocalPlayerSkydiveTrailProxy;                      // 0x568(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class ASolarFlyTrail* GetDefaultObj();

	void OnRep_TrailEffectClass();
};

// 0x28 (0x60 - 0x38)
// Class Solarland.SolarFlyTrailSettings
class USolarFlyTrailSettings : public UDeveloperSettings
{
public:
	TSoftClassPtr<class ASolarFlyTrail>          DefaultFlyTrailClass;                              // 0x38(0x28)(Edit, Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class USolarFlyTrailSettings* GetDefaultObj();

};

// 0x120 (0x3C0 - 0x2A0)
// Class Solarland.SolarFollowingComponent
class USolarFollowingComponent : public UCrowdFollowingComponent
{
public:
	bool                                         bEnableOffmeshDetect;                              // 0x2A0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_27EC[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MinDetectInterval;                                 // 0x2A4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint32                                       MaxDetectIteration;                                // 0x2A8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               InitialOffmeshSolveExtent;                         // 0x2AC(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MinZDiffDetectUndergroud;                          // 0x2B8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AgentSwimingHalfHeightPct;                         // 0x2BC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AgentNormalHalfHeightPct;                          // 0x2C0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ReachTestCheckAngleWV;                             // 0x2C4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MinSpeedLastSegmentWV;                             // 0x2C8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TurningSpeedWV;                                    // 0x2CC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TurningSteeringThresholdWV;                        // 0x2D0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        BlockDetectionDistanceCharacter;                   // 0x2D4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        BlockDetectionDistanceVehicle;                     // 0x2D8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_27ED[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bEnableSolveBlock;                                 // 0x2EC(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_27EE[0x3B];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class ASolarVehiclePawn*                     VehicleActor;                                      // 0x328(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_27EF[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        SensorTraceDistance;                               // 0x33C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bEnableDebug;                                      // 0x340(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_27F0[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        RightSensorAlpha;                                  // 0x344(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CentralSensorAlpha;                                // 0x348(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LeftSensorAlpha;                                   // 0x34C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SteeringAngle;                                     // 0x350(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        VehicleSteeringSensitivity;                        // 0x354(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        BrakingForce;                                      // 0x358(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DecelerationDistance;                              // 0x35C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        VehicleDecelerationSpeed;                          // 0x360(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        VehicleTurningSpeed;                               // 0x364(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CheckReverseDistance;                              // 0x368(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        HoverCheckBlockSpeed;                              // 0x36C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        WheeledCheckBlockSpeed;                            // 0x370(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LeggedVehicleCheckBlockSpeed;                      // 0x374(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_27F1[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        CheckBlockTime;                                    // 0x37C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_27F2[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        TryReverseTimes;                                   // 0x388(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TryReverseDurationTime;                            // 0x38C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_27F3[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        SolveBlockGoFrontTime;                             // 0x398(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_27F4[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bPathFinish;                                       // 0x3A0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_27F5[0x1F];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarFollowingComponent* GetDefaultObj();

	void SetVehicle(class AActor* VehicleActorIn);
	void OnUpdatedCharacterMovementModeChanged(class ACharacter* Character, enum class EMovementMode PrevMovementMode, uint8 PreviousCustomMode);
	void OnUpdatedCharacterLanded(struct FHitResult& Hit);
};

// 0x10 (0x38 - 0x28)
// Class Solarland.SolarFontManager
class USolarFontManager : public UObject
{
public:
	uint8                                        Pad_27F7[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UFont*                                 ChineseFont;                                       // 0x30(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class USolarFontManager* GetDefaultObj();

	void SaveChineseFontSetting(bool bHasLoad);
	bool MergeCompositeFont(const class FString& NewFontAssetPath);
	class UFont* LoadNewFont(const class FString& NewFontAssetPath);
	bool IsNeedMergeChineseFont(bool bAutoLoad);
	void Init();
};

// 0xC0 (0xE8 - 0x28)
// Class Solarland.SolarGameConfigManager
class USolarGameConfigManager : public UObject
{
public:
	uint8                                        Pad_27F9[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UDataTable*                            WeaponDTInstance;                                  // 0x30(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDataTable*                            WeaponAppearanceDTInstance;                        // 0x38(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDataTable*                            ItemActorDTInstance;                               // 0x40(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDataTable*                            BackpackTrailAssembingDTInstance;                  // 0x48(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDataTable*                            CharacterDTInstance;                               // 0x50(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDataTable*                            ItemResourceDTInstance;                            // 0x58(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDataTable*                            BuffEffectDTInstance;                              // 0x60(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDataTable*                            ScreenEffectDTInstance;                            // 0x68(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGlobalWeaponConfig*                   WeaponsConfigAsset;                                // 0x70(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGlobalVehicleWeaponConfig*            GlobalVehicleWeaponConfigAsset;                    // 0x78(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USolarRoleSkillDataConfig*             RoleConfigAsset;                                   // 0x80(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        HeadHitValue;                                      // 0x88(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        ShieldReducePhy;                                   // 0x8C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        ShieldReduceEn;                                    // 0x90(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        ArmorReducePhy;                                    // 0x94(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        ArmorReduceEn;                                     // 0x98(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        BackpackEnergyID;                                  // 0x9C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        BackpackExtraEnergyID;                             // 0xA0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        MedicineItemId;                                    // 0xA4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        RadarItemId;                                       // 0xA8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        ShieldRechargerItemId;                             // 0xAC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        ShieldBigRechargerItemId;                          // 0xB0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        UnPickupItemTime;                                  // 0xB4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        UnAutoPickupItemTime;                              // 0xB8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        AutoPickupTime;                                    // 0xBC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        AutoMarkCDTime;                                    // 0xC0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_27FA[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<int32>                                AutoMarkItemTypeList;                              // 0xC8(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        AutoMarkTeammateDistance;                          // 0xD8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        PickupCapsuleRadius;                               // 0xDC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        PickupCapsuleHalfHeight;                           // 0xE0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_27FB[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarGameConfigManager* GetDefaultObj();

	void OnInitialized();
	class USolarRoleSkillDataConfig* GetSolarRoleSkillDataConfig();
	struct FLinearColor GetLowQualityColorByQuality(int32 Quality);
	struct FLinearColor GetHUDDecorateColorByQuality(int32 Quality);
	struct FLinearColor GetHUDColorByQuality(int32 Quality);
	struct FLinearColor GetHUDBGColorByQuality(int32 Quality);
	struct FLinearColor GetHighQualityColorByQuality(int32 Quality);
	class UGlobalWeaponConfig* GetGlobalWeaponConfig();
	class UGlobalVehicleWeaponConfig* GetGlobalVehicleWeaponConfig();
	class FString GetFGByQuality(int32 Quality);
	struct FLinearColor GetColorByQuality(int32 Quality);
};

// 0x670 (0x9B8 - 0x348)
// Class Solarland.SolarGameInstanceBase
class USolarGameInstanceBase : public USolarArchitecture
{
public:
	uint8                                        Pad_2809[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSoftObjectPath                       LoginMap;                                          // 0x350(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                       LobbyMap;                                          // 0x368(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                       EntryMap;                                          // 0x380(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                       GameMap;                                           // 0x398(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                       SettlementMap;                                     // 0x3B0(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                       ConfigServerMap;                                   // 0x3C8(0x18)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                ConfigBattleAddr;                                  // 0x3E0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ConfigBattlePort;                                  // 0x3F0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_280A[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                ConfigBackendAddr;                                 // 0x3F8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ConfigBackendPort;                                 // 0x408(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        BuildNumber;                                       // 0x40C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class USolarSaveGame>          SaveGameClass;                                     // 0x410(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftClassPath                        DefaultOperationLayout;                            // 0x438(0x18)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftClassPath                        DefaultLockSettings;                               // 0x450(0x18)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftClassPath                        ReplayManagerClass;                                // 0x468(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftClassPath                        DefaultGameModeLockSettings;                       // 0x480(0x18)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bNeedRebootButNot;                                 // 0x498(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_280B[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        LastChoosedVoiceLangID;                            // 0x49C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                CachedNetworkErrorString;                          // 0x4A0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarOperationUIElement*              CachedDefaultOperationLayout;                      // 0x4B0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bBaseManagersInit;                                 // 0x4B8(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bGameManagersInit;                                 // 0x4B9(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bLuaManagersInit;                                  // 0x4BA(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_280C[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnBaseManagersInit;                                // 0x4C0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnGameManagersInit;                                // 0x4D0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnLuaManagersInit;                                 // 0x4E0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_280D[0x178];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	class UGameArgs*                             GameArgsManager;                                   // 0x668(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUIManager*                            UIManager;                                         // 0x670(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUINavigationManager*                  UINavigationManager;                               // 0x678(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarInputMappingManager*             SolarInputMappingManager;                          // 0x680(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarTimerManager*                    SolarTimerManager;                                 // 0x688(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarMainPlayerModel*                 MainPlayerModel;                                   // 0x690(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarGameConfigManager*               GameConfigManager;                                 // 0x698(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBattlePassConfigInfo*                 BattlePassConfigInfo;                              // 0x6A0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarLuaHelper*                       SolarLuaHelper;                                    // 0x6A8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarAnoHelper*                       SolarAnoHelper;                                    // 0x6B0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarTableManager*                    SolarTableManager;                                 // 0x6B8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarTcpNetworkManager*               SolarTcpNetworkManager;                            // 0x6C0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarUDPManager*                      SolarUDPManager;                                   // 0x6C8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarAssetManager*                    SolarAssetManager;                                 // 0x6D0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarItemManager*                     SolarItemManager;                                  // 0x6D8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarInteractableManager*             SolarInteractableManager;                          // 0x6E0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarPlatformHelper*                  SolarPlatformHelper;                               // 0x6E8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarMapManager*                      SolarMapManager;                                   // 0x6F0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWeaponGrowthManager*                  WeaponGrowthManager;                               // 0x6F8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarAkGameObject*                    SolarAkGameObject;                                 // 0x700(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UIMChatObject*                         SolarIMChatObject;                                 // 0x708(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarLuaManager*                      SolarLuaManager;                                   // 0x710(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarGameStatistics*                  SolarGameStatistics;                               // 0x718(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarWeaponMergeMeshManager*          WeaponMergeMeshManager;                            // 0x720(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCrashReportManager*                   CrashReportManager;                                // 0x728(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarPopPanelManager*                 SolarPopPanelManager;                              // 0x730(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarApplicationLifetimeManager*      SolarApplicationLifetimeManager;                   // 0x738(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarHomeActorManager*                SolarHomeActorManager;                             // 0x740(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarGameplayLogger*                  SolarGameplayLoggger;                              // 0x748(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarAttributeSubSystem*              SolarAttributeSubSystem;                           // 0x750(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USCustomizedGameModeManager*           CustomizedGameManager;                             // 0x758(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarRedHintManager*                  SolarRedHintMgr;                                   // 0x760(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarGameModeSelectionManager*        SolarGameModeSelectionMgr;                         // 0x768(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarPingFpsManager*                  SolarPingFpsMgr;                                   // 0x770(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarGameUserSettingsMgr*             SolarGameUserSettingsMgr;                          // 0x778(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarLoginManager*                    SolarLoginManager;                                 // 0x780(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarLockSettingsMgr*                 SolarLockSettingsMgr;                              // 0x788(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarGameProgressManager*             SolarGameProgressMgr;                              // 0x790(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarABTestManager*                   SolarABTestManager;                                // 0x798(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarHttpManager*                     SolarHttpManager;                                  // 0x7A0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarActivityManager*                 SolarActivityManager;                              // 0x7A8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarTutorialManager*                 SolarTutorialManager;                              // 0x7B0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarReplayManager*                   SolarReplayManager;                                // 0x7B8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarSaveGame*                        SolarSaveGame;                                     // 0x7C0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class USettlementStageManager> SettlementManagerClass;                            // 0x7C8(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USettlementStageManager*               SettlementManager;                                 // 0x7F0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCGMCrossLevelDataMgr*                 CrossLevelDataMgr;                                 // 0x7F8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_280E[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftClassPtr<class USolarGraphicSettings>   SolarGraphicSettingsClass;                         // 0x818(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarAccessLuaDataUtils*              LuaDataAccessUtils;                                // 0x840(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarAkSoundManager*                  SolarAkSoundManager;                               // 0x848(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsDedicatedServerStressTest;                      // 0x850(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_280F[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UKeyMappingManager*                    KeyMappingManager;                                 // 0x858(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarEasyAntiCheatManager*            SolarEasyAntiCheatManager;                         // 0x860(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarSpecialEffectsMgr*               SolarSpecialEffectsManager;                        // 0x868(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPakHashManager*                       SolarPakHashManager;                               // 0x870(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarFontManager*                     SolarFontManager;                                  // 0x878(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarGraphicSettings*                 SolarGraphicSettings;                              // 0x880(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAndroidInputManager*                  AndroidInputManager;                               // 0x888(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2810[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnPatchComplete;                                   // 0x8A0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnTouchInputDelegate;                              // 0x8B0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FRegistedActorContainer               CachedRegistedActors;                              // 0x8C0(0x50)(NativeAccessSpecifierPublic)
	uint8                                        Pad_2811[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         IsHotPatched;                                      // 0x928(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2812[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bCheatedInGame;                                    // 0x92C(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2813[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  KickOutReason;                                     // 0x930(0x18)(Protected, NativeAccessSpecifierProtected)
	FMulticastInlineDelegateProperty_            OnSsmDSGetConfigSuccess;                           // 0x948(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<struct FAntiCheatSetting>             AntiCheatSettings;                                 // 0x958(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScreenshotConfig                     ScreenshotConfig;                                  // 0x968(0x50)(NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class USolarGameInstanceBase* GetDefaultObj();

	void UpdateScreenshotSetting();
	void UpdateAntiCheatSetting();
	void TestEnsureMsgInternal();
	void TestCrashInternal();
	void SolarGm_UploadLogFile();
	void SolarGM_Tut(const class FString& Cmd, TArray<class FString>& Args);
	void SolarGM_TriggerSteamAntiCheat(int32 ActionReason, const class FString& ActionDetials);
	void SolarGM_TransmitGMLua(const class FString& PlayerName, TArray<class FString>& GmArray);
	void SolarGM_TransmitGM(const class FString& PlayerName, TArray<class FString>& TransmitGm);
	void SolarGM_TestEnsureMsgWithBP();
	void SolarGM_TestEnsureMsg();
	void SolarGM_TestCrashWithBP();
	void SolarGM_TestCrash();
	void SolarGm_SwitchFastFont(bool bIsEnable);
	void SolarGM_StopRecordingReplay();
	void SolarGM_StopPlayingReplay();
	void SolarGM_StartRecordingLocalReplay(const class FString& Filename);
	void SolarGM_StartRecordHighlight(const class FString& SessionNameOverride);
	void SolarGM_SetQuality(int32 InQuality);
	void SolarGM_RequestWatchingLiveOfPlayer(const class FString& PlayerId);
	void SolarGM_RequestReplayList(int32 PageIndex, int32 PageSize);
	void SolarGM_RequestPlayReplayByIdx(uint32 Index);
	void SolarGM_RequestPlayReplayByBattleID(const class FString& BattleID, bool IsLive);
	void SolarGM_RequestPlayReplay(const class FString& BattleID, const class FString& DownloadUrl);
	void SolarGM_PlayLocalReplay(const class FString& Filename);
	void SolarGM_PlayHighlight(const class FString& Filename);
	void SolarGM_LobbyLua(const class FString& CmdName, TArray<class FString>& Params);
	void SolarGM_Lobby(const class FString& CmdName, TArray<class FString>& Params);
	void SolarGM_KickMeOut();
	void SolarGM_GoHome();
	void SolarGm_EnableLuaCallStackProfile(bool bIsEnable);
	void SolarGM_AddWeaponExpLua(int32 Weaponid, int32 Count);
	void SolarGM_AddWeaponExp(int32 Weaponid, int32 Count);
	void SolarGM_AddItemLua(int32 ItemID, int32 Count);
	void SolarGM_AddItem(int32 ItemID, int32 Count);
	void ShutDownPCSDK();
	void ShutDownLimSdk();
	void ShutdownAnoSDK();
	void SetIsFirstLaunch(bool bIsFirst);
	void SetCleanUpfile(bool bCleanCache);
	bool ServerTravel(const class FString& Map, int32 ListenPort, bool bSpectator, bool bSkipGameNotify, const class FString& Options);
	void SaveGame();
	void RequestShutDown(const class FString& Reason);
	void ReportLoadingInfoToBI(TArray<class FString>* LoadingInfo, float LoadingTime, bool bIsFinished);
	void RegisterNetworkManager();
	void OnStartBattle(const class FString& BattleID);
	void OnSsmDSGetConfigSuccess__DelegateSignature();
	void OnManagersInitialized__DelegateSignature();
	void OnHotPatchComplete();
	void OnDisconnect();
	void LuaStartGameFrameWork();
	void LuaInitGameFrameWork();
	bool IsStandalone();
	bool IsSolarServer(class UObject* WorldContextObject);
	bool IsSkipLogin();
	bool IsServerOrStandalone();
	bool IsListenServer();
	bool IsGIsEditor();
	bool IsFirstLaunchAfterVersionUpdate();
	bool IsEditor();
	bool IsDedicatedServerStressTest();
	bool IsDedicatedServer();
	bool IsClientOrStandalone();
	bool IsClient();
	void InitLuaClasses();
	void InitGameManagers();
	bool HasCommandlineParam(const class FString& Param);
	void GoHomeLuaCall();
	class USolarWeaponMergeMeshManager* GetWeaponMergeMeshManager();
	class UWeaponGrowthManager* GetWeaponGrowthManager();
	class UUINavigationManager* GetUINavigationManager();
	class USolarVibrateManager* GetSolarVibrateManager();
	class USolarTutorialManager* GetSolarTutorialManager();
	class USolarTimerManager* GetSolarTimerManager();
	class USolarTcpNetworkManager* GetSolarTcpNetworkManager();
	class USolarTableManager* GetSolarTableManager();
	class USolarSaveGame* GetSolarSaveGame();
	class USolarReplayManager* GetSolarReplayManager();
	class USolarRedHintManager* GetSolarRedHintManager();
	class USolarPopPanelManager* GetSolarPopPanelManager();
	class USolarPlatformHelper* GetSolarPlatformHelper();
	class USolarPingFpsManager* GetSolarPingFpsManager();
	class USolarMapManager* GetSolarMapManager();
	class USolarMainPlayerModel* GetSolarMainPlayerModel();
	class USolarLuaManager* GetSolarLuaManager();
	class USolarLuaHelper* GetSolarLuaHelper();
	class USolarLoginManager* GetSolarLoginManager();
	class USolarLockSettingsMgr* GetSolarLockSettingsManager();
	class USolarItemManager* GetSolarItemManager();
	class USolarInteractableManager* GetSolarInteractableManager();
	class USolarInputMappingManager* GetSolarInputMappingManager();
	class UIMChatObject* GetSolarIMChatObject();
	class USolarHttpManager* GetSolarHttpManager();
	class USolarHomeActorManager* GetSolarHomeActorManager();
	class USolarGameUserSettingsMgr* GetSolarGameUserSettingsManager();
	class USolarGameplayLogger* GetSolarGameplayLogger();
	class USolarGameModeSelectionManager* GetSolarGameModeSelectionManager();
	class USolarGameInstanceBase* GetSolarGameInstanceBase(class UObject* WorldContextObject);
	class USolarEasyAntiCheatManager* GetSolarEasyAntiCheatManager();
	class USolarAnoHelper* GetSolarAnoHelperStatic(class UObject* WorldContextObject);
	class USolarAnoHelper* GetSolarAnoHelper();
	class USolarAkSoundManager* GetSolarAkSoundManager();
	class USolarAkGameObject* GetSolarAkGameObject();
	class USolarActivityManager* GetSolarActivityManager();
	class USolarABTestManager* GetSolarABTestManager();
	class USettlementStageManager* GetSettlementStageManager();
	enum class ESolarPlayStage GetPlayStage();
	class ASolarCharacter* GetPlayerCharacter();
	class FString GetPIEServerURL();
	int32 GetPIEInstance();
	class FString GetNetModeString();
	enum class ESolarNetMode GetNetMode();
	class UKeyMappingManager* GetKeyMappingManager();
	bool GetIsMutiPlayer();
	class USolarGameStatistics* GetGameStatistics();
	class USolarGameConfigManager* GetGameConfigManager();
	class USolarOperationUIElement* GetDefaultOperationLayout();
	class USCustomizedGameModeManager* GetCustomizedGameManager();
	class UCGMCrossLevelDataMgr* GetCrossLevelDataMgr();
	class UCrashReportManager* GetCrashReportManager();
	class FString GetCommandlineParam(const class FString& Param);
	int32 GetClientNumber();
	void GetCategorizedActorsOfType(class UObject* WorldContextObject, enum class EActorRegisterType InActorType, TArray<class AActor*>* OutActors);
	void GetCategorizedActorsByBits(class UObject* WorldContextObject, uint8 InActorBit, TArray<class AActor*>* OutActors);
	class UBattlePassConfigInfo* GetBattlePassConfigInfo();
	class USolarAssetManager* GetAssetManager();
	int64 GetAppActiveTimestampInterval();
	void ExecuteCommandArray(TArray<class FString>& CmdArray);
	void ExecuteCommand(const class FString& Cmd);
	void ExecuteChangeAudioModeLuaCall(bool bTurnOn);
	void ExecuteBackKeyLuaCall();
	void ExecGameArgs(const class FString& Args, class FString* FailReason, enum class EBoolean* Branches);
	void ClientTravel(const class FString& URL, enum class ETravelType TravelType, bool bSeamless, int32 FGuid_A, int32 FGuid_B, int32 FGuid_C, int32 FGuid_D);
	void ClearGameManagers();
	void CheckSavedDirFiles(TArray<class FString>* Files);
	void Browse(const class FString& URL, enum class ETravelType TravelType);
};

// 0x8 (0xB8 - 0xB0)
// Class Solarland.SolarGameMode_HandleElementRPC
class USolarGameMode_HandleElementRPC : public UActorComponent
{
public:
	class FName                                  ComponentTagName;                                  // 0xB0(0x8)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class USolarGameMode_HandleElementRPC* GetDefaultObj();

	void OnRep_ComponentName();
};

// 0x1A8 (0x1D8 - 0x30)
// Class Solarland.SGameMode_ModeConfig
class USGameMode_ModeConfig : public UDataAsset
{
public:
	struct FSoftObjectPath                       BP_Mode;                                           // 0x30(0x18)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                       BP_Reward;                                         // 0x48(0x18)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                       RewardMap;                                         // 0x60(0x18)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                       JobStructure;                                      // 0x78(0x18)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                       DataStructure;                                     // 0x90(0x18)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                       AttributeModifier;                                 // 0xA8(0x18)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                       WellEffectJobRelationTable;                        // 0xC0(0x18)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                       BadEffectJobRelationTable;                         // 0xD8(0x18)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                UIConfig;                                          // 0xF0(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSCustomMode_GameModeSetting          GameModeSetting;                                   // 0x100(0x68)(Edit, NativeAccessSpecifierPublic)
	TArray<struct FSGameMode_LevelConfig>        Levels;                                            // 0x168(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class FString, class FString>           Arguments;                                         // 0x178(0x50)(Edit, NativeAccessSpecifierPublic)
	bool                                         bDestroyItemOnDiscard;                             // 0x1C8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDestroyWeaponOnDiscard;                           // 0x1C9(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2814[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        AllowJoinBattleLifeTime;                           // 0x1CC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAllowJoinAITeammate;                              // 0x1D0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bConsiderPotentialPlayerWhenSpawnAI;               // 0x1D1(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2815[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USGameMode_ModeConfig* GetDefaultObj();

};

// 0x10 (0x38 - 0x28)
// Class Solarland.SGameMode_EditorSaveData
class USGameMode_EditorSaveData : public USaveGame
{
public:
	class FString                                ConfigPath;                                        // 0x28(0x10)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class USGameMode_EditorSaveData* GetDefaultObj();

};

// 0xD0 (0xF8 - 0x28)
// Class Solarland.SolarGameModeData
class USolarGameModeData : public UObject
{
public:
	uint8                                        Pad_2816[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        GameModeId;                                        // 0x30(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2817[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USGameMode_ModeConfig*                 CurrentModeData;                                   // 0x38(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                ModeConfigPath;                                    // 0x40(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                ModeParamsStr;                                     // 0x50(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDataTable*                            JobDataTable;                                      // 0x60(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDataTable*                            BoardDataTable;                                    // 0x68(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDataTable*                            AttributeDataTable;                                // 0x70(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2818[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<class FString, class FString>           ModeParams;                                        // 0xA8(0x50)(NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class USolarGameModeData* GetDefaultObj();

	void ReadConfigData();
	void InitModeParams(const class FString& ParamStr);
};

// 0x50 (0x80 - 0x30)
// Class Solarland.SidesOperationAuthorityConfig
class USidesOperationAuthorityConfig : public UDataAsset
{
public:
	TMap<class FString, bool>                    OperationAuthority;                                // 0x30(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class USidesOperationAuthorityConfig* GetDefaultObj();

	bool GetOperationAuthority(const class FString& SelfSide, const class FString& OtherSide);
};

// 0xE0 (0x108 - 0x28)
// Class Solarland.SolarGameMode_ElementManager
class USolarGameMode_ElementManager : public UObject
{
public:
	uint8                                        Pad_281A[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class ASolarMapElementBase*>          ElementsList;                                      // 0x30(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class ASolarPlayerStart*>             PlayerStartList;                                   // 0x40(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class FName, TSubclassOf<class USolarGameMode_HandleElementRPC>> HandleActorRPCBPs;                                 // 0x50(0x50)(UObjectWrapper, NativeAccessSpecifierPublic)
	TMap<class FString, class ASolarMapElementBase*> ElementMap;                                        // 0xA0(0x50)(NativeAccessSpecifierPublic)
	uint8                                        Pad_281B[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarGameMode_ElementManager* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Solarland.SolarGameModeLibrary
class USolarGameModeLibrary : public UObject
{
public:

	static class UClass* StaticClass();
	static class USolarGameModeLibrary* GetDefaultObj();

	void UnBindEventOnItemUsed(class UObject* WorldContextObject, FDelegateProperty_& Deletage);
	void SwitchWeapon(class ASolarCharacter* TargetPlayer, enum class EWeaponSlotType InWeaponSlot);
	void StopLoadingScreen(class UObject* WorldContextObject);
	void StaticCastAbility(class AActor* SourceActor, class ASolarCharacter* TargetActor, TSubclassOf<class ASolarAbility> Ability, bool ValidSourceLocation, struct FVector& SourceLocation, struct FVector& HitLocation, class FName& HitBoneName, float Scale, const class FString& InExtraInfo);
	class ULoadingWidgetBase* StartLoadingScreen(class UObject* WorldContextObject, TSubclassOf<class ULoadingWidgetBase> LoadingScreenClass);
	void SpawnItemAtTransform(class UObject* WorldContextObject, int32 ItemID, int32 ItemNum, struct FTransform& Trans);
	void SolarButtonCallReleased(class USolarButton* Button);
	void SolarButtonCallPressed(class USolarButton* Button);
	void SolarButtonCallClick(class USolarButton* Button);
	void ShowWidget(class UObject* WorldContextObject, TSubclassOf<class USolarUserWidget> WidgetClass, class USolarUserWidget** OutWidget, enum class EUIRoot UILayer);
	void ShowWeapon(class ASolarCharacter* TargetPlayer);
	void ShowNoticeOnLocalWithoutLocalization(class UObject* WorldContextObject, TSubclassOf<class UUINoticeBase> InNoticeClass, float InTime, const class FString& InText, class UObject* InIcon, int32 InNoticeColor);
	void ShowNoticeOnLocalWithLocalization(class UObject* WorldContextObject, int32 NoticeId);
	void SetMiniMapFOV(class UObject* WorldContextObject, float TargetFOV, float PlayTime, bool WithIconScale);
	void SetCharacterMeleeAttackState(class UObject* WorldContextObject, class ASolarCharacter* TargetCharacter, bool CanAttack);
	void SetActorOwnerToLocalController(class UObject* TargetObject);
	void RemoveMarkFromRotationBar(class UObject* WorldContextObject, class URotationBarMarkWidget* InRotationMark);
	void RemoveMarkFromMap(class UObject* WorldContextObject, class UMapMarkBase* InMapMark);
	bool RemoveMapElement(class UObject* WorldContextObject, class ASolarMapElementBase* Target);
	void RemoveDotLineToMapFrame(class UObject* WorldContextObject, int32 DotLineID);
	void RemoveActorWorldMark(class UObject* WorldContextObject, class UActorMarkBase* InActorMark);
	class URotationBarMarkWidget* RegisterMarkToRotationBar(class UObject* WorldContextObject, TSubclassOf<class URotationBarMarkWidget> InRotationBarMarkClass, struct FVector& InMarkPos, int32 InZOrder);
	class UMapMarkBase* RegisterMarkToMapFrame(class UObject* WorldContextObject, TSubclassOf<class UMapMarkBase> InMapMarkClass, struct FVector2D& Pivot, int32 ZOrder);
	TArray<class UMapMarkBase*> RegisterMarkToMap(class UObject* WorldContextObject, TSubclassOf<class UMapMarkBase> InMapMarkClass, struct FVector& InMarkPos, bool EdgeSupport, bool EdgeSupportWithBigMap, int32 ZOrder);
	int32 RegisterDotLineToMapFrame(class UObject* WorldContextObject, class AActor* StartPointActor, class AActor* EndPointActor, struct FLinearColor& DotLineColor);
	class UActorMarkBase* RegisterActorMarkOnActor(class UObject* WorldContextObject, TSubclassOf<class UActorMarkBase> InActorMarkClass, class AActor* FollowActor);
	void PlayerOutBySelf(class UObject* WorldContextObject);
	void PlayAudioInGame(const class FString& InAudioName);
	void MarkVictory(class ASolarPlayerState* InPlayerState, int32 Result);
	void KillCharacter(class UObject* Killer, class ASolarCharacter* TargetCharacter, TSubclassOf<class ASolarAbility> AbilityClass);
	bool IsSecondCustomGameMode(class UObject* WorldContextObject);
	void HideRotationBar(class UObject* WorldContextObject);
	void HidePowerBar(class UObject* WorldContextObject);
	void HideBattle(class UObject* WorldContextObject);
	void HideAllPlayerNav(class UObject* WorldContextObject);
	void HiddenWeapon(class ASolarCharacter* TargetPlayer);
	void GotoLobby(class UObject* WorldContextObject);
	void GlobalLogGameStateStatistics(class UObject* WorldContextObject, const class FString& InLogName, TMap<class FString, class FString>& LogValues);
	int32 GetWramGameType(class UObject* WorldContextObject);
	class USkeletalMesh* GetWeaponMesh(class UObject* WorldContextObject, int32 WeaponItemID, float* SpawnOffset);
	class FString GetNoticeFormatText(class UObject* WorldContextObject, int32 InLocalizationID, TMap<class FString, class FString>& FormatContext);
	class APawn* GetLocalCharacter(class UObject* WorldContextObject);
	class USolarItemManager* GetItemManager(class UObject* WorldContextObject);
	class USolarGameMode_ElementManager* GetElementManager(class UObject* WorldContextObject);
	class USolarGameMode_HandleElementRPC* GetElementHandleRPCComponent(class UObject* WorldContextObject);
	bool GetElementByID(class UObject* WorldContextObject, const class FString& ElementID, class ASolarMapElementBase** TargetElement);
	void GetDropItemDataByOutComeData(class UObject* WorldContextObject, TArray<struct FSolarGameMode_DropItemData>& OutcomeData, TArray<struct FSolarGameMode_DropItemData>* TargetData);
	void GetCharacterID(class ASolarCharacter* Character, int32* CharacterId, int32* SkinId, int32* ColorID);
	class UUserWidget* GetBattleControlWidget(class UObject* WorldContextObject);
	class UUserWidget* GetBattleBackpackWidget(class UObject* WorldContextObject);
	bool GetBackpackWeaponBySlot(class ASolarCharacter* Character, int32 Slot, struct FSolarItemData* ItemData);
	bool GetBackpackItemDataByType(class ASolarCharacter* Character, int32 ItemType, struct FSolarItemData* ItemData);
	bool GetBackpackItemDataByID(class ASolarCharacter* Character, int32 ItemID, struct FSolarItemData* ItemData);
	int32 GetAILevelCurrentMatch(class UObject* WorldContextObject);
	class ASolarMapElementBase* GenerateMapElement(class UObject* WorldContextObject, TSubclassOf<class ASolarMapElementBase> ActorClass, struct FTransform& SpawnTransform, enum class ESpawnActorCollisionHandlingMethod CollisionHandlingOverride, class AActor* Owner, class APawn* Instigator, const class FString& ElementID, const class FString& Side, const class FString& Job, TArray<class FName>& Tags, enum class ESGameMode_ElementType ElementType, enum class EElementStateType State, enum class EElementVisibilityType Visibility, bool IsPersistent);
	TArray<class ASolarPlayerStart*> FindPlayerStart(class UObject* WorldContextObject, TArray<class FString>& Sides, TArray<class FString>& Jobs, TArray<class FString>& Tags);
	TArray<class ASolarMapElementBase*> FindElementsByClass(class UObject* WorldContextObject, TArray<class UClass*>& ElementClasses, TArray<class FString>& Sides, TArray<class FString>& Jobs, TArray<class FString>& Tags);
	TArray<class ASolarMapElementBase*> FindElements(class UObject* WorldContextObject, TArray<class FString>& ElementTypes, TArray<class FString>& Sides, TArray<class FString>& Jobs, TArray<class FString>& Tags);
	class ASolarMapElementBase* FindElementByID(class UObject* WorldContextObject, const class FString& InElementID);
	bool DestoryDeadCharacter(class ASolarCharacter* TargetCharacter);
	void CharacterEnterDeath(class ASolarCharacter* TargetCharacter, struct FSolarPointDamageEvent& DamageEvent, bool bEnterDying, bool bSpawnDeathBox, enum class EHealthChangeType ChangeType, class AController* EventInstigator, float DamageValue);
	void ChangeMiniMapToTargetID(class UObject* WorldContextObject, int32 InMapID);
	void ButtonCallReleased(class UButton* Button);
	void ButtonCallPressed(class UButton* Button);
	void ButtonCallClick(class UButton* Button);
	void BindWidgetVisibilityChanged(class UObject* WorldContextObject, FDelegateProperty_& Event);
	void BindEventOnItemUsed(class UObject* WorldContextObject, FDelegateProperty_& Deletage);
	void ApplyAbility(class UObject* SourceObject, TArray<class ASolarCharacter*>& TargetCharacters, TArray<TSubclassOf<class ASolarAbility>>& Abilities);
	void AddItem(class ASolarCharacter* SolarCharacter, int32 ItemID, int32 ItemNum);
};

// 0x70 (0x98 - 0x28)
// Class Solarland.SolarGameModeLockSettings
class USolarGameModeLockSettings : public USaveGame
{
public:
	TMap<int32, bool>                            GameModeLockStatus;                                // 0x28(0x50)(Edit, NativeAccessSpecifierPublic)
	TArray<int32>                                LobbyGameModeRecIDs;                               // 0x78(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<int32>                                GameModeGuideIDs;                                  // 0x88(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class USolarGameModeLockSettings* GetDefaultObj();

	void CopyFrom(class USolarGameModeLockSettings* InLockSettings);
};

// 0x30 (0x60 - 0x30)
// Class Solarland.SolarGameModeSelectionManager
class USolarGameModeSelectionManager : public USolarGameManager
{
public:
	uint8                                        Pad_283E[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USolarGameModeLockSettings*            CurGameModeLockSettings;                           // 0x38(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_283F[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class USolarGameModeLockSettings*            DefaultGameModeLockSettings;                       // 0x58(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class USolarGameModeSelectionManager* GetDefaultObj();

	void SaveGameModeLockSettings();
	void LoadGameModeLockSettings();
};

// 0x90 (0xB8 - 0x28)
// Class Solarland.PlayerStatisticsData
class UPlayerStatisticsData : public UObject
{
public:
	FMulticastInlineDelegateProperty_            OnPlayerStatDataUpdate;                            // 0x28(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnIncreaseWeaponKillNum;                           // 0x38(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_284A[0x70];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UPlayerStatisticsData* GetDefaultObj();

	struct FVector GetValue_Vector(enum class EStatisticsType InType);
	void GetValue_MapKeyWithValueInt(enum class EStatisticsType InType, TArray<int32>* OutValue);
	void GetValue_MapKeyWithValueFloat(enum class EStatisticsType InType, TArray<int32>* OutValue);
	int32 GetValue_IntFromMap(enum class EStatisticsType InType, int32 IntKey);
	void GetValue_IntArray(enum class EStatisticsType InType, TArray<int32>* OutResult);
	int32 GetValue_Int(enum class EStatisticsType InType);
	float GetValue_FloatFromMap(enum class EStatisticsType InType, int32 IntKey, bool Floor);
	void GetValue_FloatArray(enum class EStatisticsType InType, TArray<float>* OutResult);
	float GetValue_Float(enum class EStatisticsType InType, bool Floor);
};

// 0x50 (0x78 - 0x28)
// Class Solarland.SideStatisticsData
class USideStatisticsData : public UObject
{
public:
	uint8                                        Pad_284B[0x50];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USideStatisticsData* GetDefaultObj();

};

// 0x80 (0x150 - 0xD0)
// Class Solarland.SolarGameModeStatisticsComponent
class USolarGameModeStatisticsComponent : public UGameModeCompBase
{
public:
	uint8                                        Pad_284E[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<class FString, class UPlayerStatisticsData*> AllPlayerStatData;                                 // 0xE0(0x50)(NativeAccessSpecifierPrivate)
	TArray<enum class EStatisticsType>           SpecialFuncTag;                                    // 0x130(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_284F[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarGameModeStatisticsComponent* GetDefaultObj();

	TArray<int32> GetValue_IntArray(const class FString& InPlayerID, enum class EStatisticsType InType);
	int32 GetValue_Int(const class FString& InPlayerID, enum class EStatisticsType InType);
	class UPlayerStatisticsData* GetPlayerStatData(const class FString& InPlayerID);
};

// 0x10 (0x40 - 0x30)
// Class Solarland.SolarGameplayAbilitySet
class USolarGameplayAbilitySet : public UDataAsset
{
public:
	TArray<TSubclassOf<class UGameplayAbility>>  Abilities;                                         // 0x30(0x10)(Edit, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class USolarGameplayAbilitySet* GetDefaultObj();

};

// 0x0 (0x310 - 0x310)
// Class Solarland.SolarGameplayCueManager
class USolarGameplayCueManager : public UGameplayCueManager
{
public:

	static class UClass* StaticClass();
	static class USolarGameplayCueManager* GetDefaultObj();

};

// 0x10 (0x38 - 0x28)
// Class Solarland.SolarGameplayLogger
class USolarGameplayLogger : public UObject
{
public:
	TArray<enum class ELogChannel>               DefaultChannels;                                   // 0x28(0x10)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class USolarGameplayLogger* GetDefaultObj();

	void SolarDebugLog(enum class ELogChannel Channel, const class FString& Message);
	void EnableDebugLogChannel(enum class ELogChannel Channel);
	void DisableDebugLogChannel(enum class ELogChannel Channel);
};

// 0x50 (0x100 - 0xB0)
// Class Solarland.SolarGameplaySmokeComponent
class USolarGameplaySmokeComponent : public UActorComponent
{
public:
	float                                        SmokeRadius;                                       // 0xB0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LocalPlayerCheckRadiusWithCamera;                  // 0xB4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DetectDistance;                                    // 0xB8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        DetectTargetFlag;                                  // 0xBC(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2851[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayCueTag                       TeamPerspectiveCueTag;                             // 0xC0(0x8)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FGameplayCueTag                       HawkeyePerspectiveCueTag;                          // 0xC8(0x8)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                         bEnableSmokeDamage;                                // 0xD0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2852[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DamageDistance;                                    // 0xD4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DamagePerTime;                                     // 0xD8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DamageFreq;                                        // 0xDC(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2853[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarGameplaySmokeComponent* GetDefaultObj();

	void SetIsValid(bool bInIsValid);
};

// 0x0 (0x28 - 0x28)
// Class Solarland.SolarGameplayTagLibrary
class USolarGameplayTagLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class USolarGameplayTagLibrary* GetDefaultObj();

	bool K2_RequestGameplayTag(class FName TagName, struct FGameplayTag* OutTagFound);
	struct FGameplayTagContainer DiffTags(const struct FGameplayTagContainer& TagsA, struct FGameplayTagContainer& TagsB);
};

// 0x50 (0x80 - 0x30)
// Class Solarland.SolarGameplayTagSystem
class USolarGameplayTagSystem : public UEngineSubsystem
{
public:
	TMap<class FName, class UDataAsset*>         LoadedTagReflectors;                               // 0x30(0x50)(NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class USolarGameplayTagSystem* GetDefaultObj();

};

// 0xF8 (0x128 - 0x30)
// Class Solarland.SolarGameProgressManager
class USolarGameProgressManager : public USolarGameManager
{
public:
	uint8                                        Pad_285A[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnGameStart;                                       // 0x38(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_285B[0xE0];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarGameProgressManager* GetDefaultObj();

	void OnWorldConditionsCompleted();
	void OnStreamingLevelComplete();
	void OnShadersCompileComplete();
	void OnGameStart__DelegateSignature();
	void K2_ReceiveGlobalConditionCompleted(class UObject* WorldContextObject, const struct FGameplayTag& CompletedCondition);
	void K2_ReceiveConditionCompleted(class UObject* WorldContextObject, const struct FGameplayTag& CompletedCondition);
	void K2_OnGlobalConditionCompleted(const struct FGameplayTag& CompletedCondition);
	void K2_OnConditionCompleted(class UWorld* CurrentWorld, const struct FGameplayTag& CompletedCondition);
	bool IsGameStartNeedCondition(class UObject* WorldContextObject, struct FGameplayTag& InCondition);
	bool IsConditionInList(struct FGameplayTag& InCondition, class UWorld* WorldCheck);
	bool IsAllStartGameConditionCompleted(class UWorld* WorldCheck);
	bool InitGameStartCondition(class UWorld* CurrentWorld, const struct FGameplayTagContainer& ConditionList);
	bool HasGameStarted(class UObject* WorldContextObject);
	class USolarGameProgressManager* Get(class UObject* WorldContextObject);
};

// 0x0 (0x240 - 0x240)
// Class Solarland.SolarGameSession
class ASolarGameSession : public AGameSession
{
public:

	static class UClass* StaticClass();
	static class ASolarGameSession* GetDefaultObj();

};

// 0x148 (0x170 - 0x28)
// Class Solarland.SolarGameSettingsRange
class USolarGameSettingsRange : public UObject
{
public:
	struct FSoundSettingsRange                   SoundSettings;                                     // 0x28(0x20)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FSensitivitySettingsRange             SensitivitySettings;                               // 0x48(0x120)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FGraphicsSettingsRange                GraphicsSettings;                                  // 0x168(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class USolarGameSettingsRange* GetDefaultObj();

};

// 0x18 (0x188 - 0x170)
// Class Solarland.SolarGameSettingsRangePC
class USolarGameSettingsRangePC : public USolarGameSettingsRange
{
public:
	struct FMouseAndKeyboardSettingsRange        KeyboardControlSettings;                           // 0x170(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	struct FGamepadSettingsRange                 GamepadSettings;                                   // 0x178(0x10)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class USolarGameSettingsRangePC* GetDefaultObj();

};

// 0x68 (0x2E0 - 0x278)
// Class Solarland.SolarGameStateBase
class ASolarGameStateBase : public AGameStateBase
{
public:
	uint8                                        Pad_285C[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameStartConditionList               GameStartConditions;                               // 0x280(0x58)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class USolarGameplayConfigComponent*         GameplayConfigComponent;                           // 0x2D8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class ASolarGameStateBase* GetDefaultObj();

};

// 0x70 (0x98 - 0x28)
// Class Solarland.SolarGameStatistics
class USolarGameStatistics : public UObject
{
public:
	uint8                                        Pad_2861[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                PlayerIdName;                                      // 0x30(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                LogTypeName;                                       // 0x40(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2862[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USolarGameInstanceBase*                Owner;                                             // 0x58(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FSolarGameStatisticsLogHeadInfo       LogHeadInfo;                                       // 0x60(0x28)(NativeAccessSpecifierPrivate)
	uint8                                        Pad_2863[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarGameStatistics* GetDefaultObj();

	struct FSolarGameStatisticsLogHeadInfo StaticGetLogHeadInfo();
	void SetSwapLogFileSize(int32 InSize);
	void SetSwapLogFileInterval(int32 InInterval);
	void SetLogValueSeparater(const class FString& InValueSeparater);
	void SetLogTerminator(const class FString& InTerminator);
	void SetLogFileNameSuffix(const class FString& InLogFileNameSuffix);
	void SetLogFileNamePrefix(const class FString& InLogFileNamePrefix);
	void SetLogFileExtension(const class FString& InLogFileExtension);
	void SetLogFileDir(const class FString& InLogFileDir);
	void SetLogElementSeparater(const class FString& InElementSeparater);
	void SetLogCheckIntervalMS(int32 InLogCheckIntervalMS);
	void ReceiveShutdown();
	void ReceiveInit();
	void NotifyBattleStart(const class FString& InBattleID);
	void NotifyBattleEnd();
	void LogInternal(const class FString& InLog);
	void LogGameStats_KeyValues(const class FString& InKey, TArray<class FString>& InValues);
	void LogGameStats_KeyValue(const class FString& InKey, const class FString& InValue);
	void LogGameStats_Key(const class FString& InKey);
	bool IsUseEmptyHeadData(const class FString& InPlayerID);
	int32 GetSwapLogFileSize();
	int32 GetSwapLogFileInterval();
	class FString GetSCMLogDataString(bool bIncludeStatistics, class ASolarPlayerState* InPS);
	class FString GetProperLogElement(const class FString& InElement);
	class FString GetLogValueSeparater();
	class FString GetLogTerminator();
	struct FSolarGameStatisticsLogHeadInfo GetLogHeadInfo();
	class FString GetLogFileNameSuffix();
	class FString GetLogFileNamePrefix();
	class FString GetLogFileExtension();
	class FString GetLogFileDir();
	class FString GetLogElementSeparater();
	class FString GetLogDataString(bool bIncludeStatistics, const class FString& InPlayerID);
	int32 GetLogCheckIntervalMS();
	class FString GetHeadDataString(const class FString& InPlayerID);
	class FString GetEmptyHeadDataString();
	bool CanReportBIWrapper(const class FString& InLogType);
};

// 0x1A8 (0x1E0 - 0x38)
// Class Solarland.SolarGameUserSettings
class USolarGameUserSettings : public UDeveloperSettings
{
public:
	struct FPickupUserSettings                   PickupSettings;                                    // 0x38(0x18)(Edit, Config, NativeAccessSpecifierPublic)
	struct FGraphicsUserSettings                 GraphicsSettings;                                  // 0x50(0x40)(Edit, Config, NativeAccessSpecifierPublic)
	struct FWeaponUserSettings                   WeaponSettings;                                    // 0x90(0x20)(Edit, Config, NoDestructor, NativeAccessSpecifierPublic)
	struct FLanguageUserSettings                 LanguageSettings;                                  // 0xB0(0x3)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FCharacterVoiceUserSettings           CharacterVoiceSettings;                            // 0xB3(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_2865[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSoundUserSettings                    SoundSettings;                                     // 0xB8(0x60)(Edit, Config, NativeAccessSpecifierPublic)
	struct FBasicUserSettings                    BasicSettings;                                     // 0x118(0xB)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_2866[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSensitivityUserSettings              SensitivitySettings;                               // 0x124(0x94)(Edit, Config, NoDestructor, NativeAccessSpecifierPublic)
	struct FShakeUserSettings                    ShakeSettings;                                     // 0x1B8(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVehicleControlUserSettings           DriverSettings;                                    // 0x1B9(0x5)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FChatOperatorUserSettings             ChatOperatorSettings;                              // 0x1BE(0x2)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FSoftClassPath                        DefaultSettingsRangePath;                          // 0x1C0(0x18)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsSynchronized;                                   // 0x1D8(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EConfigVersion                    ConfigVersion;                                     // 0x1D9(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bFirstTimeLanunchGame;                             // 0x1DA(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2867[0x5];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarGameUserSettings* GetDefaultObj();

	class FString ToJsonObjectString();
	struct FWeaponUserSettings GetWeaponSettings();
	struct FSoundUserSettings GetSoundSettings();
	struct FShakeUserSettings GetShakeSettings();
	struct FSensitivityUserSettings GetSensitivitySettings();
	struct FPickupUserSettings GetPickupSettings();
	struct FLanguageUserSettings GetLanguageSettings();
	struct FGraphicsUserSettings GetGraphicsSettings();
	bool GetEnableOpponentPerspectiveByDefault();
	struct FVehicleControlUserSettings GetDriverSettings();
	struct FChatOperatorUserSettings GetChatOperatorSettings();
	struct FCharacterVoiceUserSettings GetCharacterVoiceSettings();
	struct FBasicUserSettings GetBasicSettings();
	void FromJsonObjectString(const class FString& JsonStr);
	bool CheckJsonObjectString(const class FString& JsonStr);
};

// 0x40 (0x68 - 0x28)
// Class Solarland.SolarGameUserSettingsMgr
class USolarGameUserSettingsMgr : public UObject
{
public:
	class USolarGameUserSettings*                CurGameUserSettings;                               // 0x28(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarGameSettingsRange*               DefaultGameSettingsRange;                          // 0x30(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsDefalutSettings;                                // 0x38(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2869[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USolarGameInstanceBase*                SolarGameInstance;                                 // 0x40(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_286A[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarGameUserSettingsMgr* GetDefaultObj();

	void SynchronizeInputSettings();
	void SaveGameSettings();
	void ResetToDefault(enum class ESolarGameUserSettingPart SettingPart);
	void RefreshValid(class USolarGameInstanceBase* GameInstance, bool SaveIfDirty);
	void RefreshDynamicShadow();
	void RefreshAnalogCursorSpeed();
	void OnSettingConfigSaved();
	void OnPickupSettingChanged();
	bool IsLowLevelDevice();
	bool IsHighlightMomentOpen();
	bool IsDefaultEnableDynamicShadow();
	void InitializeSettings(class USolarGameInstanceBase* GameInstance);
	void Init(class USolarGameInstanceBase* GameInstance);
	int32 GetCurNativeRefreshRate();
	bool FixConfigVersion();
};

// 0x238 (0x418 - 0x1E0)
// Class Solarland.SolarGameUserSettingsPC
class USolarGameUserSettingsPC : public USolarGameUserSettings
{
public:
	struct FSensitivityUserSettings              SensitivitySettingsKeyboard;                       // 0x1E0(0x94)(Edit, Config, NoDestructor, NativeAccessSpecifierPublic)
	struct FSensitivityUserSettings              SensitivitySettingsGamepad;                        // 0x274(0x94)(Edit, Config, NoDestructor, NativeAccessSpecifierPublic)
	struct FMouseAndKeyboardSettings             KeyboardControlSettings;                           // 0x308(0x8)(Edit, Config, NoDestructor, NativeAccessSpecifierPublic)
	struct FGamepadSettings                      GamepadSettings;                                   // 0x310(0xC8)(Edit, Config, NativeAccessSpecifierPublic)
	struct FGamepadAdvancedSettings              GamepadAdvancedSettings;                           // 0x3D8(0x3C)(Edit, Config, NoDestructor, NativeAccessSpecifierPublic)
	bool                                         bEnableCursorNoticePanel;                          // 0x414(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_286B[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarGameUserSettingsPC* GetDefaultObj();

};

// 0xC0 (0x3E8 - 0x328)
// Class Solarland.SolarLeggedVehicleAnimInstance
class USolarLeggedVehicleAnimInstance : public USolarVehicleAnimInstance
{
public:
	uint8                                        Pad_286C[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EVehicleAnimationState            VehicleAnimState;                                  // 0x330(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_286D[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        YawDifference;                                     // 0x334(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EVehicleRotateAnimationType       VehicleRotateType;                                 // 0x338(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_286E[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               RotationBlend;                                     // 0x33C(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ProceduralWalkingAlpha;                            // 0x348(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               BodyRelativeLocation;                              // 0x34C(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              BodyRelativeRotator;                               // 0x358(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                               FLFootIKEffectorLocation;                          // 0x364(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               FRFootIKEffectorLocation;                          // 0x370(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               MLFootIKEffectorLocation;                          // 0x37C(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               MRFootIKEffectorLocation;                          // 0x388(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               BLFootIKEffectorLocation;                          // 0x394(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               BRFootIKEffectorLocation;                          // 0x3A0(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FLFootIKAlpha;                                     // 0x3AC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FRFootIKAlpha;                                     // 0x3B0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MLFootIKAlpha;                                     // 0x3B4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MRFootIKAlpha;                                     // 0x3B8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BLFootIKAlpha;                                     // 0x3BC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BRFootIKAlpha;                                     // 0x3C0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_286F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<float>                                FootRotatorOffsets;                                // 0x3C8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LeftFootLocationX;                                 // 0x3D8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RightFootLocationX;                                // 0x3DC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LeaningDegree;                                     // 0x3E0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2870[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarLeggedVehicleAnimInstance* GetDefaultObj();

	void AnimNotify_EnableInput();
	void AnimNotify_EnableIK();
	void AnimNotify_DisableInput();
	void AnimNotify_DisableIK();
};

// 0x28 (0x410 - 0x3E8)
// Class Solarland.SolarGatlingVehicleAnimInstance
class USolarGatlingVehicleAnimInstance : public USolarLeggedVehicleAnimInstance
{
public:
	float                                        GatlingRollSpeed;                                  // 0x3E8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              DashingWeaponYawRot;                               // 0x3EC(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                              DashingWeaponPicthRot;                             // 0x3F8(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	class FName                                  PitchRotParentBone;                                // 0x404(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DashingWeaponRotAlpha;                             // 0x40C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class USolarGatlingVehicleAnimInstance* GetDefaultObj();

};

// 0x8 (0x38 - 0x30)
// Class Solarland.SolarGauntletController
class USolarGauntletController : public UGauntletTestController
{
public:
	uint8                                        Pad_2871[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarGauntletController* GetDefaultObj();

};

// 0x0 (0x38 - 0x38)
// Class Solarland.SolarGauntletBPAutoTestController
class USolarGauntletBPAutoTestController : public USolarGauntletController
{
public:

	static class UClass* StaticClass();
	static class USolarGauntletBPAutoTestController* GetDefaultObj();

};

// 0x10 (0x238 - 0x228)
// Class Solarland.SolarGauntletBPBase
class ASolarGauntletBPBase : public AActor
{
public:
	uint8                                        Pad_2872[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASolarGauntletBPBase* GetDefaultObj();

	void StopTesting(float Delay);
	void SendLocalCharactorMoveTo(const struct FVector& Vector);
};

// 0x0 (0x38 - 0x38)
// Class Solarland.SolarGauntletClientController
class USolarGauntletClientController : public USolarGauntletController
{
public:

	static class UClass* StaticClass();
	static class USolarGauntletClientController* GetDefaultObj();

};

// 0x18 (0x50 - 0x38)
// Class Solarland.SolarGauntletClientSmokeController
class USolarGauntletClientSmokeController : public USolarGauntletController
{
public:
	uint8                                        Pad_2873[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarGauntletClientSmokeController* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Solarland.SolarGauntletBlueprintLibrary
class USolarGauntletBlueprintLibrary : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class USolarGauntletBlueprintLibrary* GetDefaultObj();

	void EndTest(int32 ExitCode);
	void BookmarkEnd(const class FString& Message);
	void BookmarkBegin(const class FString& Message);
};

// 0x0 (0x238 - 0x238)
// Class Solarland.SolarGauntletPSOGatherBP
class ASolarGauntletPSOGatherBP : public ASolarGauntletBPBase
{
public:

	static class UClass* StaticClass();
	static class ASolarGauntletPSOGatherBP* GetDefaultObj();

	void StartPSOGathering();
	void SendTravelToNextLevel(float InFirstDelay);
	void SendStartLevelScriptEvent(const class FString& FunctionName);
};

// 0x60 (0x98 - 0x38)
// Class Solarland.SolarGauntletPSOGatherController
class USolarGauntletPSOGatherController : public USolarGauntletController
{
public:
	uint8                                        Pad_2874[0x60];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarGauntletPSOGatherController* GetDefaultObj();

};

// 0x10 (0x48 - 0x38)
// Class Solarland.SolarGauntletPureAIDSReportController
class USolarGauntletPureAIDSReportController : public USolarGauntletController
{
public:
	uint8                                        Pad_2875[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarGauntletPureAIDSReportController* GetDefaultObj();

};

// 0x8 (0x40 - 0x38)
// Class Solarland.SolarGauntletReplayController
class USolarGauntletReplayController : public USolarGauntletController
{
public:
	uint8                                        Pad_2876[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarGauntletReplayController* GetDefaultObj();

	void OnPostEndPlay();
};

// 0x18 (0x50 - 0x38)
// Class Solarland.SolarGauntletServerController
class USolarGauntletServerController : public USolarGauntletController
{
public:
	uint8                                        Pad_2877[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarGauntletServerController* GetDefaultObj();

};

// 0x0 (0x38 - 0x38)
// Class Solarland.SolarGauntletServerSmokeController
class USolarGauntletServerSmokeController : public USolarGauntletController
{
public:

	static class UClass* StaticClass();
	static class USolarGauntletServerSmokeController* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Solarland.SolarGlobalEventBase
class USolarGlobalEventBase : public UObject
{
public:

	static class UClass* StaticClass();
	static class USolarGlobalEventBase* GetDefaultObj();

};

// 0xF0 (0x120 - 0x30)
// Class Solarland.SolarGlobalEventSystem
class USolarGlobalEventSystem : public UGameInstanceSubsystem
{
public:
	TMap<TSubclassOf<class USolarGlobalEventBase>, FMulticastInlineDelegateProperty_> ListenerEventsByClass;                             // 0x30(0x50)(ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TMap<class FName, FMulticastInlineDelegateProperty_> ListenerEventsByName;                              // 0x80(0x50)(ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TMap<struct FGameplayTag, FMulticastInlineDelegateProperty_> ListenerEventsByGameplayTag;                       // 0xD0(0x50)(ContainsInstancedReference, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class USolarGlobalEventSystem* GetDefaultObj();

	void UnbindGlobalEventByName(class FName EventName, FDelegateProperty_& Event);
	void UnbindGlobalEventByGameplayTag(const struct FGameplayTag& EventGameplayTag, FDelegateProperty_& Event);
	void UnbindGlobalEventByClass(TSubclassOf<class USolarGlobalEventBase> EventClass, FDelegateProperty_& Event);
	void UnbindAllGlobalEventsByName(class UObject* Unsubscriber, class FName EventName);
	void UnbindAllGlobalEventsByGameplayTag(class UObject* Unsubscriber, const struct FGameplayTag& EventGameplayTag);
	void UnbindAllGlobalEventsByClass(class UObject* Unsubscriber, TSubclassOf<class USolarGlobalEventBase> EventClass);
	void GetAllBoundObjectsToEventByName(class FName EventName, TArray<class UObject*>* Objects);
	void GetAllBoundObjectsToEventByGameplayTag(const struct FGameplayTag& EventGameplayTag, TArray<class UObject*>* Objects);
	void GetAllBoundObjectsToEventByClass(TSubclassOf<class USolarGlobalEventBase> EventClass, TArray<class UObject*>* Objects);
	void GetAllActiveGlobalEventsClass(TArray<TSubclassOf<class USolarGlobalEventBase>>* Events);
	void GetAllActiveGlobalEventNames(TArray<class FName>* Events);
	void GetAllActiveGlobalEventGameplayTag(TArray<struct FGameplayTag>* Events);
	void ClearGlobalEventByName(class FName EventName, bool bForceClear);
	void ClearGlobalEventByGameplayTag(const struct FGameplayTag& EventGameplayTag, bool bForceClear);
	void ClearGlobalEventByClass(TSubclassOf<class USolarGlobalEventBase> EventClass, bool bForceClear);
	void ClearAllGlobalEventsClass(bool bForceClear);
	void ClearAllGlobalEventNames(bool bForceClear);
	void ClearAllGlobalEventGameplayTags(bool bForceClear);
	void CallGlobalEventByName(class UObject* Publisher, class FName EventName, class UObject* Payload, TArray<class FString>& MetaData);
	void CallGlobalEventByGameplayTag(class UObject* Publisher, const struct FGameplayTag& EventGameplayTag, class UObject* Payload, TArray<class FString>& MetaData);
	void CallGlobalEventByClass(class UObject* Publisher, TSubclassOf<class USolarGlobalEventBase> EventClass, class UObject* Payload, TArray<class FString>& MetaData);
	void BindGlobalEventByName(class FName EventName, FDelegateProperty_& Event);
	void BindGlobalEventByGameplayTag(const struct FGameplayTag& EventGameplayTag, FDelegateProperty_& Event);
	void BindGlobalEventByClass(TSubclassOf<class USolarGlobalEventBase> EventClass, FDelegateProperty_& Event);
};

// 0x138 (0x360 - 0x228)
// Class Solarland.SolarGlobalRepInfo
class ASolarGlobalRepInfo : public AInfo
{
public:
	struct FSolarShieldItemShopDataArray         ShieldItemShopInteractInfo;                        // 0x228(0x130)(Net, Transient, RepNotify, NativeAccessSpecifierPublic)
	int32                                        ShieldUpgradeItemShopGroupID;                      // 0x358(0x4)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_287B[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASolarGlobalRepInfo* GetDefaultObj();

	void OnRep_ShieldUpgradeItemShopGroupID();
	void OnRep_ShieldItemShopInteractInfo();
};

// 0x16C8 (0x16F0 - 0x28)
// Class Solarland.SolarPostProcessSettingItem
class USolarPostProcessSettingItem : public UObject
{
public:
	uint8                                        Pad_287C[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FColorGradingItem                     ColorGradingItem[0x4];                             // 0x30(0x16C0)(Edit, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class USolarPostProcessSettingItem* GetDefaultObj();

};

// 0x2C0 (0x2E8 - 0x28)
// Class Solarland.SolarGraphicSettings
class USolarGraphicSettings : public UObject
{
public:
	uint32                                       CurrentActiveColorThemeIndex;                      // 0x28(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFrameRateLevelItem                   FrameRateLevelItem[0x5];                           // 0x2C(0x50)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_287D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<enum class ESolarGraphicsQualityLevel, enum class ESolarFrameRateLevel> DefaultQualityToDefaultFrameRateLevel;             // 0x80(0x50)(Edit, NativeAccessSpecifierPublic)
	TMap<enum class ESolarGraphicsQualityLevel, struct FMaxQualityConfig> DefaultAndCurQualityToMaxFrameRateLevel;           // 0xD0(0x50)(Edit, NativeAccessSpecifierPublic)
	int32                                        MobileMaxFrameRate;                                // 0x120(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        HighRefreshRateThreshold;                          // 0x124(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        DefaultMSAALevel;                                  // 0x128(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_287E[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FContentScaleFactorLevelItem          ContentScaleFactorLevelItems[0x4];                 // 0x130(0x160)(Edit, NativeAccessSpecifierPublic)
	TMap<enum class ESolarDeviceLevel, enum class ESolarContentScaleFactorLevel> DefaultContentScaleFactorLevel;                    // 0x290(0x50)(Edit, NativeAccessSpecifierPublic)
	uint8                                        Pad_287F[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarGraphicSettings* GetDefaultObj();

};

// 0x208 (0x430 - 0x228)
// Class Solarland.SolarGroundPreviewActor
class ASolarGroundPreviewActor : public ASolarDormantActor
{
public:
	uint8                                        Pad_2880[0x40];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSolarItemData                        ItemData;                                          // 0x268(0xB8)(Net, RepNotify, NativeAccessSpecifierPublic)
	float                                        SpawnOffset;                                       // 0x320(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2881[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USphereComponent*                      SphereComponent;                                   // 0x328(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FSoftObjectPath>               DiscardMatPath;                                    // 0x330(0x10)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FSoftObjectPath                       OutlineMatPath;                                    // 0x340(0x18)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2882[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<uint8>                                MarkedTeamIdList;                                  // 0x360(0x10)(Net, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        WeaponLevel;                                       // 0x370(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EWeaponType                       WeaponType;                                        // 0x374(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2883[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        FireModeNameLocalizationID;                        // 0x378(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2884[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSlateBrush                           TriggerIcon;                                       // 0x380(0x98)(BlueprintVisible, BlueprintReadOnly, Transient, Protected, NativeAccessSpecifierProtected)
	int32                                        Weaponid;                                          // 0x418(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsItemWeapon;                                     // 0x41C(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsSummonVehicleWeapon;                            // 0x41D(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsAntiVehicleWeapon;                              // 0x41E(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2885[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USkeletalMeshComponent*                SkeletalMeshComp;                                  // 0x420(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2886[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASolarGroundPreviewActor* GetDefaultObj();

	void UnMarkThisItem(uint8 TeamID);
	void SetItemData(struct FSolarItemData& _ItemData);
	void OnServerPawned();
	void OnRep_ItemDataChange();
	void NotifyThisItemWasPickedUp();
	void MarkThisItem(uint8 TeamID);
	int32 GetQuality();
};

// 0x128 (0x670 - 0x548)
// Class Solarland.SolarHealAndArmorPile
class ASolarHealAndArmorPile : public ASolarPile
{
public:
	float                                        HealQuantity;                                      // 0x548(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HealFrequency;                                     // 0x54C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstanceDynamic*              DynamicMatHealPile;                                // 0x550(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaterialDynamicOffSetYBegin;                       // 0x558(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaterialDynamicOffSetYEnd;                         // 0x55C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaterialDynamicOffSetYCur;                         // 0x560(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2888[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UUserWidget>               FullEffectWidgetClass;                             // 0x568(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UParticleSystem>        RangeParticleStartPath;                            // 0x570(0x28)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UParticleSystem>        RangeParticleLoopPath;                             // 0x598(0x28)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UParticleSystem>        RangeParticleEndPath;                              // 0x5C0(0x28)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UParticleSystem>        EnemyRangeParticleStartPath;                       // 0x5E8(0x28)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UParticleSystem>        EnemyRangeParticleLoopPath;                        // 0x610(0x28)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UParticleSystem>        EnemyRangeParticleEndPath;                         // 0x638(0x28)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystemComponent*              RangeLoopEffect;                                   // 0x660(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2889[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASolarHealAndArmorPile* GetDefaultObj();

	void ClientHealPileSound(class ASolarCharacter* ChargingCharacter, enum class EPileHealingType HealingType);
};

// 0x0 (0x28 - 0x28)
// Class Solarland.SolarHealthPointModule
class USolarHealthPointModule : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class USolarHealthPointModule* GetDefaultObj();

	void InflictDamageWithHitResult(class UObject* WorldContextObject, struct FSolarDamageInfo& DamageInfo, struct FHitResult& HitResult);
	void InflictDamageWithDamageEvent(class AActor* TargetActor, float DamageTaken, struct FSolarPointDamageEvent& DamageEvent, class AController* InstigatorController);
};

// 0xA8 (0xD0 - 0x28)
// Class Solarland.SolarHomeConnectedGraph
class USolarHomeConnectedGraph : public UObject
{
public:
	TSet<class ASolarHomeActor*>                 ConnectedFloors;                                   // 0x28(0x50)(Transient, Protected, NativeAccessSpecifierProtected)
	TSet<class ASolarHomeActor*>                 BaseWalls;                                         // 0x78(0x50)(Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_288B[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarHomeConnectedGraph* GetDefaultObj();

};

// 0x198 (0x3C0 - 0x228)
// Class Solarland.SolarHomeActor
class ASolarHomeActor : public AActor
{
public:
	class UStaticMeshComponent*                  StaticMeshComp;                                    // 0x228(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FHomeActorStaticData                  HomeActorStaticData;                               // 0x230(0x38)(Protected, NativeAccessSpecifierProtected)
	struct FHomeActorServerData                  HomeActorServerData;                               // 0x268(0x68)(Protected, NativeAccessSpecifierProtected)
	TMap<class FName, struct FHomeOriginalShader> OriginalShaders;                                   // 0x2D0(0x50)(Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_2892[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class USolarHomeActorManager*                HomeActorMgr;                                      // 0x330(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UBoxComponent*>                 BoxComps;                                          // 0x338(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<class ASolarHomeActor*, int32>          HitHomeActors;                                     // 0x348(0x50)(NativeAccessSpecifierPrivate)
	class USolarHomeConnectedGraph*              CurrentConnectedGraph;                             // 0x398(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class ASolarHomeActor*>               NeighborFloors;                                    // 0x3A0(0x10)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class ASolarHomeActor*>               NeighborWalls;                                     // 0x3B0(0x10)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class ASolarHomeActor* GetDefaultObj();

	void UpdateHomeActor(struct FHomeActorServerData& NewServerData);
	void UpdateHitHomeActors(class ASolarHomeActor* NewActor, bool IsAdd);
	void SetStaticData(struct FHomeActorStaticData& NewData);
	void SetServerData(struct FHomeActorServerData& NewData);
	void SetMaterial(struct FHomeActorServerData& InServerData, bool bPlaceable);
	void OnOverlayEnd(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void OnOverlayBegin(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	void OnOverLap(class AActor* OtherActor, bool IsHitBegin);
	void OnCreatedByServer(struct FHomeActorStaticData& NewStaticData, struct FHomeActorServerData& NewServerData);
	void OnCanSaveChanged(bool bNewCanSave);
	class UDataTable* GetTextureDataTable();
	class UStaticMeshComponent* GetStaticMeshComp();
	struct FHomeActorStaticData GetStaticData();
	class USolarHomeShaderConfig* GetShaderConfig();
	struct FHomeActorServerData GetServerData();
	bool GetNextLegalRotator(float RotAngle, struct FRotator* OutNextRot);
	enum class EHomeActorSurfaceDir GetHitSurface(struct FVector& HitNormal);
	bool GetCanSave();
	bool CanSelected();
	bool CanRemove();
};

// 0x628 (0x650 - 0x28)
// Class Solarland.SolarHomeActorManager
class USolarHomeActorManager : public UObject
{
public:
	uint8                                        Pad_28A7[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<class FString, class ASolarHomeActor*>  SpawnedHomeActors;                                 // 0x40(0x50)(NativeAccessSpecifierPrivate)
	TMap<struct FIntVector, class ASolarHomeActor*> SpawnedConstructsLocKey;                           // 0x90(0x50)(NativeAccessSpecifierPrivate)
	TMap<struct FIntVector, class ASolarHomeActor*> PreviewConstructsLocKey;                           // 0xE0(0x50)(NativeAccessSpecifierPrivate)
	TSet<class USolarHomeConnectedGraph*>        ConnectedGraphSet;                                 // 0x130(0x50)(NativeAccessSpecifierPrivate)
	TMap<class FString, class ASolarHomeActor*>  ClippingHomeActors;                                // 0x180(0x50)(NativeAccessSpecifierPrivate)
	TMap<class FString, class ASolarHomeActor*>  InValidHomeActors;                                 // 0x1D0(0x50)(NativeAccessSpecifierPrivate)
	TMap<class FString, class USubPoolOfHomeActor*> HomeActorPools;                                    // 0x220(0x50)(NativeAccessSpecifierPrivate)
	TMap<int32, struct FHomeActorStaticData>     StaticDataMap;                                     // 0x270(0x50)(NativeAccessSpecifierPrivate)
	TMap<class FString, class UClass*>           HomeActorClassPool;                                // 0x2C0(0x50)(NativeAccessSpecifierPrivate)
	uint8                                        Pad_28A8[0x68];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<struct FIntVector, class ASolarHomeBaseSpace*> SpawnedSpacesLocKey;                               // 0x378(0x50)(NativeAccessSpecifierPrivate)
	TMap<struct FIntVector, class ASolarHomeBaseSpace*> ShowsSpacesLocKey;                                 // 0x3C8(0x50)(NativeAccessSpecifierPrivate)
	uint8                                        Pad_28A9[0x58];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UDataTable*                            HomeObjectTable;                                   // 0x470(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USolarHomeShaderConfig*                ShaderConfig;                                      // 0x478(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDataTable*                            TextureDataTable;                                  // 0x480(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDataTable*                            IconDataTable;                                     // 0x488(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDataTable*                            PicDataTable;                                      // 0x490(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        BuildCountPerFrame;                                // 0x498(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_28AA[0x14];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class ASolarHomeSpaceSpawner*                HomeSpaceSpawner;                                  // 0x4B0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ASolarHomePlayerController*            HomePlayerCtrl;                                    // 0x4B8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_28AB[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class ASolarWaterActorNew*                   WaterActor;                                        // 0x4E0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<struct FHomeShaderData, class UMaterialInstanceDynamic*> HomeObjShadersPool;                                // 0x4E8(0x50)(NativeAccessSpecifierPrivate)
	uint8                                        Pad_28AC[0x41];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bIsConstruct;                                      // 0x579(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         IsLoadingOpen;                                     // 0x57A(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_28AD[0x2D];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TSet<class ASolarHomeDragUI*>                CacheDragUIs;                                      // 0x5A8(0x50)(NativeAccessSpecifierPrivate)
	TSet<class ASolarHomeDragUI*>                UsedDragUIs;                                       // 0x5F8(0x50)(NativeAccessSpecifierPrivate)
	uint8                                        Pad_28AE[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarHomeActorManager* GetDefaultObj();

	void UpdateCanSendSaveMsg();
	void UpdateCameraLayer(int32 NewLayer);
	bool TrySelectHomeActor(class FString& SelectedThisID, bool bSelect);
	bool TrySaveAllHomeActors();
	void TryResetAllHomeActors();
	void TryRemoveHomeActors(TArray<class FString>& RemoveThisID);
	void TryRemoveHomeActor(class FString& RemoveThisID);
	void TryRemoveAllInvalidHomeActors();
	void TryRemoveAllHomeActors();
	void TryDyeHomeActor(class FString& DyeThisID, class FString& SlotName, class FString& TexturesID);
	void TryCreateHomeActorsNoLimit(TArray<struct FHomeBuildReqData>& ReqDataArr);
	void TryCreateHomeActors(TArray<struct FHomeBuildReqData>& ReqData);
	void TryCreateHomeActor(struct FHomeBuildReqData& ReqData);
	void TryConfirmHomeActor(class FString& SelectedThisID, bool bCancel);
	void TryCancelHomeActor(class FString& SelectedThisID);
	void SetLastSelectingThisID(class FString& InThisID);
	void SetLastCreateThisID(class FString& InThisID);
	void SetIsConstruct(bool bNewConstruct);
	void SetHomeActorValid(class ASolarHomeActor* TargetActor, bool bNewValid);
	void SetHoldingType(enum class EHomeActor_SecondType NewType);
	void SetDragUILoc(class ASolarHomeDragUI* TargetUI, struct FVector& NewLoc);
	void SetCurSelectingThisID(class FString& InThisID, bool bSelected);
	void SetCurBuildingID(int32 NewItemID);
	void SelectHomeActor_Request(class FString& SelectedThisID, bool bSelect);
	void SelectHomeActor_Other(const class FString& ThisID);
	void SaveBuilding_Request(bool bSave);
	void RotateHomeActor(class ASolarHomeActor* TargetHomeActor, int32 DeltaAngle);
	void RemoveHomeActors_Request(TArray<class FString>& WillRemoveThisIDs);
	void RemoveHomeActor_Request(class FString& WillRemoveThisID);
	void RemoveAllHomeActors_Request();
	void OnSelectingThisIDChanged(bool bSelect, class FString& NewThisID);
	void OnSelectingActorCanSaveChanged(bool bNewCanSave);
	bool OnIsDragChanged(bool bIsDrag);
	void OnInvalidActorsCountChanged(int32 NewCount);
	void OnHoldingTypeChanged(enum class EHomeActor_SecondType OldType, enum class EHomeActor_SecondType NewType);
	void NotifyWhenWallDevicePutOnOtherPlace();
	void NotifyWhenFloorDevicePutOnOtherPlace();
	void NotifyWhenClickActorOnOtherFloor();
	void NotifyWhenCeilingDevicePutOnOtherPlace();
	void NotifyLoadingUIChanged(bool bShow);
	void MoveDevice(class ASolarHomeActor* TargetHomeActor, class ASolarHomeActor* ParHomeActor, enum class EHomeActorSurfaceDir HitDir, struct FVector& NewLoc);
	void MoveConstruct(class ASolarHomeActor* TargetHomeActor, class ASolarHomeBaseSpace* NewSpace);
	bool HasFoundation();
	class UDataTable* GetTextureDataTable();
	struct FHomeActorStaticData GetStaticDataByItemID(int32 ItemID);
	class USolarHomeShaderConfig* GetShaderConfig();
	void GetMeshDefaultMat(int64 InItemID, TArray<struct FBuildMeshSlotData>* OutData);
	class FString GetLastCreateThisID();
	int32 GetInvalidActorsCount();
	class ASolarHomeSpaceSpawner* GetHomeSpaceSpawner();
	class ASolarHomePlayerController* GetHomePlayerCtrl();
	bool GetHomePicConfig(const class FString& Name, struct FHomePic* OutConfig);
	bool GetHomeObjectConfig(int32 InItemID, struct FHomeObject* OutConfig);
	bool GetHomeIconConfig(const class FString& Name, struct FHomeIcon* OutConfig);
	enum class EHomeActor_SecondType GetHomeActorSecondType(int32 ItemID);
	enum class EHomeActor_FirstType GetHomeActorFirstType(int32 ItemID);
	class ASolarHomeActor* GetHomeActorByThisID(class FString& InThisID);
	class ASolarHomeActor* GetHomeActorByLoc(struct FVector& InLoc);
	class FString GetCurSelectingThisID();
	enum class EHomeActor_SecondType GetCurHoldingItemType();
	int32 GetCurBuildingID();
	bool GetActorCanSave(class ASolarHomeActor* InActor);
	void ExportHomeActorDataToPath(const class FString& FilePath);
	void DyeingHomeActor_Request(class FString& WillDyeingThisID, class FString& SlotName, class FString& TexturesID);
	void DeSelectAllHomeActors_Request();
	void CreateHomeActors_Request(TArray<struct FHomeBuildReqData>& WillCreateDatas);
	void CreateHomeActor_Request(struct FHomeBuildReqData& WillCreateData);
	void ClientUpdateHomeActor_UseQueue(struct FHomeActorServerData& UpdateData);
	void ClientUpdateHomeActor(struct FHomeActorServerData& UpdateData);
	void ClientRemoveHomeActor_UseQueue(struct FHomeActorServerData& RemoveData);
	void ClientRemoveHomeActor(struct FHomeActorServerData& RemoveData);
	void ClientCreateHomeActor_UseQueue(struct FHomeActorServerData& WillCreateData, enum class EHomeLoadingChangeType InLoadingType);
	bool ClientCreateHomeActor(struct FHomeActorServerData& WillCreateData, bool InIsConstruct);
	void Clear();
	void ChangeCameraLayer(int32 DeltaLayer);
	bool CanPreviewWithBuilding(int32 TypeID);
	bool CanDevicePlace(enum class EHomeActor_SecondType DeviceType, class ASolarHomeActor*& HitConstruct, enum class EHomeActorSurfaceDir& HitDir);
};

// 0x28 (0x250 - 0x228)
// Class Solarland.SolarHomeBaseSpace
class ASolarHomeBaseSpace : public AActor
{
public:
	class USolarHomeActorManager*                HomeActorMgr;                                      // 0x228(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UBoxComponent*>                 BoxComps;                                          // 0x230(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FBaseSpaceData                        BaseSpaceData;                                     // 0x240(0xC)(NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_28AF[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASolarHomeBaseSpace* GetDefaultObj();

	void UpdateHomeSpaceByData(struct FBaseSpaceData& NewData);
	void ShowBaseSpace();
	void OnBaseSpaceUnOccupied();
	void OnBaseSpaceOccupied();
	void OnBaseSpaceCreated(int32 Layer, enum class EHomeActor_SecondType BaseSpaceType);
	void HideBaseSpace();
	struct FBaseSpaceData GetData();
};

// 0x30 (0xE0 - 0xB0)
// Class Solarland.SolarHomeBuildComponent
class USolarHomeBuildComponent : public UActorComponent
{
public:
	uint8                                        Pad_28B2[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class USolarHomeActorManager*                HomeActorMgr;                                      // 0xC0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MinCheckDistance;                                  // 0xC8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxCheckDistance;                                  // 0xCC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         IsBuilding;                                        // 0xD0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_28B3[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        HoldingItemID;                                     // 0xD4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ASolarHomeBaseSpace*                   HittingActor;                                      // 0xD8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class USolarHomeBuildComponent* GetDefaultObj();

	void StopBuild();
	void StartBuild();
	void SetBuildingId(int32 NewItemID);
	void SelecteHomeActor(class ASolarHomeActor* WillSelectedActor);
	void InitHomeBuildComponent();
	class ASolarCharacter* GetSolarOwner();
	void GetHitResult(class ASolarHomeActor** HitHomeActor, class ASolarHomeBaseSpace** HitBaseSapce, struct FVector* OutHitNormal, struct FVector* OutHitLocation);
	void EndBuild();
	void EmitBuilding();
	void CreateHomeActor(struct FHomeBuildReqData& ReqData);
	bool CanAttachSpace(int32 ActorId, class ASolarHomeBaseSpace* WillAttachHomeSpace);
	void BeginBuild();
};

// 0x1A0 (0x250 - 0xB0)
// Class Solarland.SolarHomeCameraManager
class USolarHomeCameraManager : public UActorComponent
{
public:
	uint8                                        Pad_28B6[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FCameraMovementParameters             CameraMovementSetting;                             // 0xB8(0x68)(Edit, BlueprintVisible, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_28B7[0x14];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               LookAtLocation;                                    // 0x134(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USolarHomeActorManager*                HomeActorMgr;                                      // 0x140(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_28B8[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ASolarHomeSpaceSpawner*                CacheHomeSpaceSpawner;                             // 0x150(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ACameraActor*                          BuildCamera;                                       // 0x158(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AActor*                                BattleCamera;                                      // 0x160(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCameraComponent*                      BuildCameraComp;                                   // 0x168(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_28B9[0xE0];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarHomeCameraManager* GetDefaultObj();

	void UpdateSliderScaleUI(float InScale);
	void UpdateCameraDistanceUI(float InPercent, float InScale);
	void SetNormalCameraTarget();
	void SetConstructionCameraTarget();
	void RotateCameraSpin(float Value);
	void RotateCameraPitch(float Value);
	void MoveCameraRight(float Value);
	void MoveCameraForward(float Value);
	void MoveCamera(int32 Index, struct FVector& Location, TMap<int32, struct FVector> FingerLocations);
	bool ChangeCameraMode(enum class EHomeCameraMode InMode);
	void ChangeCameraDistancePercent(bool IsDoubleFinger, float InPercent);
	void ChangeCameraDistanceDiff(bool IsDoubleFinger, float InValue);
};

// 0x10 (0x20A0 - 0x2090)
// Class Solarland.SolarHomeCharacter
class ASolarHomeCharacter : public ASolarCharacter
{
public:
	class USolarHomeBuildComponent*              SolarHomeBuildComponent;                           // 0x2090(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_28BA[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASolarHomeCharacter* GetDefaultObj();

	void MoveToBuildWait(struct FVector& WaitLoc);
	void CharacterResetOfflinePos(struct FVector& Loc, uint32 Roll, uint32 YawPitch);
	void Building();
};

// 0x18 (0x240 - 0x228)
// Class Solarland.SolarHomeDragUI
class ASolarHomeDragUI : public AActor
{
public:
	uint8                                        Pad_28BB[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASolarHomeDragUI* GetDefaultObj();

};

// 0x0 (0x3C0 - 0x3C0)
// Class Solarland.SolarHomeFloorActor
class ASolarHomeFloorActor : public ASolarHomeActor
{
public:

	static class UClass* StaticClass();
	static class ASolarHomeFloorActor* GetDefaultObj();

};

// 0x50 (0x80 - 0x30)
// Class Solarland.SolarHomeMeshConfig
class USolarHomeMeshConfig : public UDataAsset
{
public:
	TMap<int64, struct FBuildMeshData>           MeshData;                                          // 0x30(0x50)(Edit, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class USolarHomeMeshConfig* GetDefaultObj();

};

// 0x290 (0x1130 - 0xEA0)
// Class Solarland.SolarHomePlayerController
class ASolarHomePlayerController : public ASolarPlayerController
{
public:
	class UInputComponent*                       ConstructionInputComponent;                        // 0xEA0(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarHomeActorManager*                HomeActorMgr;                                      // 0xEA8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ASolarHomeActor*                       DragActor;                                         // 0xEB0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        MinCheckDistance;                                  // 0xEB8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        MaxCheckDistance;                                  // 0xEBC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ASolarHomeSpaceSpawner*                CacheHomeSpaceSpawner;                             // 0xEC0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bIsViewMode;                                       // 0xEC8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bIsConstruction;                                   // 0xEC9(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_28BC[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAkComponent*                          AkAudioComponent;                                  // 0xED0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        MoveCheckDis;                                      // 0xED8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_28BD[0x194];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        CheckDis;                                          // 0x1070(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_28BE[0x8C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class USolarHomeCameraManager*               CameraManager;                                     // 0x1100(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               LookAtLocation;                                    // 0x1108(0xC)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               OriginalLookAtLocation;                            // 0x1114(0xC)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                CurrentViewTarget;                                 // 0x1120(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                OriginalViewTarget;                                // 0x1128(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class ASolarHomePlayerController* GetDefaultObj();

	void StopBuilding();
	void StartFadeOutEffect();
	void StartBuilding();
	void SolarGM_Home_ResetLayer(int32 InLayer);
	void SolarGM_FillUpHome();
	void SolarGM_ExportHomeActorToPath(const class FString& FilePath);
	void ShowBuildMainUI(bool bShow);
	void SetNormalCameraTarget();
	void SetConstructionCameraTarget();
	void SendMoveToBackend(struct FServerMoveData& MoveData);
	void ResetConstructionCamera();
	void ResetCameraRotation();
	void OnTouchMove(int32 Index, struct FVector& Location);
	void OnTouchEnd(int32 Index, struct FVector& Location);
	void OnTouchBegin(int32 Index, struct FVector& Location);
	void OnDragBegin(struct FVector& Location);
	void OnCameraRight(float Value);
	void OnCameraForward(float Value);
	bool GetIsConstruction();
	int32 GetCameraCurrentLayer();
	void BindConstructionInput();
	void BindBattleInput();
};

// 0x8 (0x2A0 - 0x298)
// Class Solarland.SolarHomePlayerWait
class ASolarHomePlayerWait : public ASolarMapElementBase
{
public:
	int32                                        TeamIndex;                                         // 0x298(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_28BF[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASolarHomePlayerWait* GetDefaultObj();

};

// 0xE0 (0x110 - 0x30)
// Class Solarland.SolarHomeShaderConfig
class USolarHomeShaderConfig : public UDataAsset
{
public:
	struct FSoftObjectPath                       EmissiveMatPath;                                   // 0x30(0x18)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                       MaskedMatPath;                                     // 0x48(0x18)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                       TranslucentMatPath;                                // 0x60(0x18)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                       DeleteEmissiveMatPath;                             // 0x78(0x18)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                       DeleteMaskedMatPath;                               // 0x90(0x18)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                       DeleteTranslucentMatPath;                          // 0xA8(0x18)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          PrdinaryColor;                                     // 0xC0(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          PlaceableColor;                                    // 0xD0(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          UnPlaceableColor;                                  // 0xE0(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          PlaceableColorOther;                               // 0xF0(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BreathLightTimeScale;                              // 0x100(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PlaceableEmissveA;                                 // 0x104(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        UnPlaceableEmissveA;                               // 0x108(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_28C0[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarHomeShaderConfig* GetDefaultObj();

};

// 0x128 (0x3C0 - 0x298)
// Class Solarland.SolarHomeSpaceSpawner
class ASolarHomeSpaceSpawner : public ASolarMapElementBase
{
public:
	class USolarHomeActorManager*                HomeActorMgr;                                      // 0x298(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<enum class EHomeActor_SecondType, class UClass*> TypeClassMap;                                      // 0x2A0(0x50)(Transient, NativeAccessSpecifierPrivate)
	TMap<float, int32>                           LayerMap;                                          // 0x2F0(0x50)(Transient, NativeAccessSpecifierPrivate)
	uint8                                        Pad_28C1[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        FloorUnit;                                         // 0x360(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        WallUnit;                                          // 0x364(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        BaseUnit;                                          // 0x368(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        RoundOnBase;                                       // 0x36C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        RoundOnFloor;                                      // 0x370(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        ArrowOnBase;                                       // 0x374(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        ArrowOnFloor;                                      // 0x378(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        ArrowToWall;                                       // 0x37C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_28C2[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FTransform>                    BasisFloorsTransArr;                               // 0x388(0x10)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_28C3[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         IsAirWallOpen;                                     // 0x3B8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_28C4[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASolarHomeSpaceSpawner* GetDefaultObj();

	void OpenAirWall();
	void Init(int32 InBuildWidth, int32 InBuildHeight);
	bool GetIsAirWallOpen();
	void CloseAirWall();
};

// 0x10 (0x238 - 0x228)
// Class Solarland.SolarHomeSummonWallActor
class ASolarHomeSummonWallActor : public AActor
{
public:
	float                                        UsingEffectSecondTime;                             // 0x228(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_28C5[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UStaticMeshComponent*                  SummonStaticMeshComp;                              // 0x230(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class ASolarHomeSummonWallActor* GetDefaultObj();

	void SetEffectPlayAllTime(float SecondTime);
};

// 0x0 (0x228 - 0x228)
// Class Solarland.SolarHomeTrigger
class ASolarHomeTrigger : public AActor
{
public:

	static class UClass* StaticClass();
	static class ASolarHomeTrigger* GetDefaultObj();

	void OnActorExitLua(int32 ID);
	void OnActorExit(int32 ID);
	void OnActorEnterLua(int32 ID);
	void OnActorEnter(int32 ID);
};

// 0x98 (0x1450 - 0x13B8)
// Class Solarland.SolarHoverCraftVehicle
class ASolarHoverCraftVehicle : public ASolarHoverVehicle
{
public:
	float                                        MeshOffsetWithoutDriver;                           // 0x13B8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        MeshOffsetLerpSpeed;                               // 0x13BC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<enum class EHoverCraftHitType, float>   HoverCraftHitImpulseMul;                           // 0x13C0(0x50)(Edit, Transient, NativeAccessSpecifierPrivate)
	float                                        HoverCraftHitImpulseLimit;                         // 0x1410(0x4)(Edit, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_28C7[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UBoxComponent*                         BodyBoxComp;                                       // 0x1418(0x8)(Edit, ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<int32>                                BodyTraceExceptVehicleTypeIDs;                     // 0x1420(0x10)(Edit, ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_28C8[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASolarHoverCraftVehicle* GetDefaultObj();

	void OnHoverCraftVehicleHit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, struct FHitResult& Hit);
	void CheckBody();
};

// 0x50 (0x3B0 - 0x360)
// Class Solarland.SolarHoverCraftVehicleAnimInstance
class USolarHoverCraftVehicleAnimInstance : public USolarHoverVehicleAnimInstance
{
public:
	class ASolarHoverVehicle*                    MyHoverCraftVehicle;                               // 0x360(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarHoverVehicleMovement*            MyHoverCraftVehicleMoveComp;                       // 0x368(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bStartUp;                                          // 0x370(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_28C9[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MaxStartUpSpeed;                                   // 0x378(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDrop;                                             // 0x37C(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bInAir;                                            // 0x37D(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_28CA[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        CompressMinValue[0x4];                             // 0x380(0x10)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CompressFullRateValue[0x4];                        // 0x390(0x10)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CompressXValue;                                    // 0x3A0(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CompressYValue;                                    // 0x3A4(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCompress;                                         // 0x3A8(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_28CB[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarHoverCraftVehicleAnimInstance* GetDefaultObj();

	void AnimNotify_StartUpLeft();
	void AnimNotify_IdleEnter();
	void AnimNotify_DropLeft();
	void AnimNotify_CompressLeft();
};

// 0x20 (0x380 - 0x360)
// Class Solarland.SolarHoverMotorAnimInstance
class USolarHoverMotorAnimInstance : public USolarHoverVehicleAnimInstance
{
public:
	struct FVector                               VehicleWeaponLeftOffset;                           // 0x360(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               VehicleWeaponRightOffset;                          // 0x36C(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_28CC[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarHoverMotorAnimInstance* GetDefaultObj();

};

// 0x808 (0x940 - 0x138)
// Class Solarland.SolarHoverVehicleMovement
class USolarHoverVehicleMovement : public UPawnMovementComponent
{
public:
	uint8                                        Pad_28D0[0xF8];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class USkeletalMeshComponent*                VehicleMesh;                                       // 0x230(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MinLocationDiffForThrusterTrace;                   // 0x238(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MinRotationDiffForThrusterTrace;                   // 0x23C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DriverJustOnTimer;                                 // 0x240(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               MassOffset;                                        // 0x244(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        HoverForce;                                        // 0x250(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        HoverSpringCoefficient;                            // 0x254(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        HoverDampingCoefficient;                           // 0x258(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        HoverHeight;                                       // 0x25C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MinHoverHeight;                                    // 0x260(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        BouncinessForMinHoverHeight;                       // 0x264(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FThrusterData>                 ThrusterDataArray;                                 // 0x268(0x10)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveFloat*                           DustEffectScaleCurve;                              // 0x278(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ThrusterTargetAnimationBlendSpeed;                 // 0x280(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        YawDegreeDifference;                               // 0x284(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SpoilerRotateSpeed;                                // 0x288(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxRudderRoll;                                     // 0x28C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MinRudderRoll;                                     // 0x290(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxRudderYaw;                                      // 0x294(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MinRudderYaw;                                      // 0x298(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_28D1[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRuntimeFloatCurve                    AccelerationCurve;                                 // 0x2A0(0x88)(Edit, Protected, NativeAccessSpecifierProtected)
	float                                        MaxSideMovingSpeed;                                // 0x328(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxBackwardMovingSpeed;                            // 0x32C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DecelerationDegree;                                // 0x330(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DecelerationOnInput;                               // 0x334(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DecelerationOnMovingDirection;                     // 0x338(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MinDecelerationOnMovingDirection;                  // 0x33C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                 IgnoreDecelerationOnMovingDirectionTags;           // 0x340(0x20)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FRuntimeFloatCurve                    DecelerationOnSide;                                // 0x360(0x88)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FRuntimeFloatCurve                    AccelerationMultiplierForSideVelocity;             // 0x3E8(0x88)(Edit, Protected, NativeAccessSpecifierProtected)
	float                                        MaxControllableDegree;                             // 0x470(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_28D2[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTagContainer                 InAirControllableTags;                             // 0x478(0x20)(Edit, Protected, NativeAccessSpecifierProtected)
	float                                        AdditionalDegreeForStabilize;                      // 0x498(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_28D3[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRuntimeFloatCurve                    StabilizeDampingCurve;                             // 0x4A0(0x88)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FRuntimeFloatCurve                    StabilizeSpeedCurve;                               // 0x528(0x88)(Edit, Protected, NativeAccessSpecifierProtected)
	float                                        TimerForAntiStuck;                                 // 0x5B0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        StuckAcceleration;                                 // 0x5B4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        StuckAccelerationLerpSpeed;                        // 0x5B8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        GravityAcceleration;                               // 0x5BC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        GravityWithoutDriver;                              // 0x5C0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LandingDuration;                                   // 0x5C4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaximumVelocityOnZWithoutDriver;                   // 0x5C8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DecelerationRateWithoutDriver;                     // 0x5CC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AngularDampingWithoutDriver;                       // 0x5D0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        WaterLineForFloatingForce;                         // 0x5D4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        UpwardAccelerationFloatingOnWater;                 // 0x5D8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        WaterAlignSpeed;                                   // 0x5DC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        WaterHeightWithoutDriver;                          // 0x5E0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FPIDController                        UpwardForcePIDController;                          // 0x5E4(0x1C)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                        RotateAccelaration;                                // 0x600(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RotateDecelaration;                                // 0x604(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxAngularSpeed;                                   // 0x608(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        HoverHeightMultiplierAfterBroken;                  // 0x60C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ParticleMultiplierAfterBroken;                     // 0x610(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_28D4[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FVehicleVFX>                   ThrusterParticles;                                 // 0x618(0x10)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_28D5[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVehicleVFX                           MovementParticles[0x4];                            // 0x630(0x240)(Edit, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_28D6[0x78];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FThrusterState>                ThrusterStateArray;                                // 0x8E8(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ASolarVehiclePawn*                     VehiclePawn;                                       // 0x8F8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarNetMovementComponent*            VehicleNetMovement;                                // 0x900(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAkComponent*                          AkComponent;                                       // 0x908(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_28D7[0x30];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarHoverVehicleMovement* GetDefaultObj();

	void OnVehicleHit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, struct FHitResult& Hit);
	void OnDriverGetOnVehicle(int32 GetOnSeatIndex, class ASolarCharacter* GetOnPlayer);
	void OnDriverGetOffVehicle(int32 GetOffSeatIndex, class ASolarCharacter* GetOffPlayer);
};

// 0x38 (0x2A0 - 0x268)
// Class Solarland.SolarHoverVehicleStencilAnimInstance
class USolarHoverVehicleStencilAnimInstance : public UAnimInstance
{
public:
	struct FVector                               FLThrusterBoneScale;                               // 0x268(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               FRThrusterBoneScale;                               // 0x274(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               BLThrusterBoneScale;                               // 0x280(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               BRThrusterBoneScale;                               // 0x28C(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class USolarHoverVehicleAnimInstance> VehicleAnim;                                       // 0x298(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class USolarHoverVehicleStencilAnimInstance* GetDefaultObj();

};

// 0xA0 (0x300 - 0x260)
// Class Solarland.SolarHPProgressBoard
class USolarHPProgressBoard : public UUserWidget
{
public:
	class UImage*                                ProgressBoard;                                     // 0x260(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstance*                     ProgressShader;                                    // 0x268(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Speed;                                             // 0x270(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RechargeSpeed;                                     // 0x274(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RechargeTime;                                      // 0x278(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RechargeIndex;                                     // 0x27C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDebugMode;                                        // 0x280(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_28DB[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Percent1;                                          // 0x284(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Percent2;                                          // 0x288(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Percent3;                                          // 0x28C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Percent4;                                          // 0x290(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bNeedAlternateColor;                               // 0x294(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_28DC[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FLinearColor                          IncreaseColor;                                     // 0x298(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          DecreaseColor;                                     // 0x2A8(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_28DD[0x48];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarHPProgressBoard* GetDefaultObj();

	void UpdateMaxValue(float Max);
	void UpdateCurrentValue(float Current);
	void SetSpacing(float InValue);
	void SetProgressColorByID(struct FLinearColor& InColor, int32 InID);
	void SetPreAddColor();
	void SetPercentageByIndex(float Percent, int32 Index);
	void SetFragment(float Num);
	void SetCurrentValueInstantly(float Current);
	void SetAlternateColor(struct FLinearColor& InColor, bool IsChangeBoth, bool IsForIncrease);
	void PreAddValue(float InCurrentValue, float InChangeValue, enum class EShieldRechargeState RechargeState, bool bInFixPreAdd, bool bInAdaptiveRecharge);
	void InitProgressBoard(float Current, float Max, float Fragment);
	void InitProgress();
	struct FLinearColor GetAlternateColor(bool bIncrease);
	void DoMinusValue(float InCurrentValue, float InChangeValue);
	void DoAddValue(float InCurrentValue, float InChangeValue);
	void CancelAddValue(float InCurrentValue, float InChangeValue);
};

// 0x118 (0x148 - 0x30)
// Class Solarland.SolarHttpManager
class USolarHttpManager : public USolarGameManager
{
public:
	uint8                                        Pad_28E0[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<class FString, int32>                   ReportStr2ReprotTimes;                             // 0x48(0x50)(NativeAccessSpecifierPublic)
	int32                                        ReportRetryTimes;                                  // 0x98(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_28E1[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnImgUploaded;                                     // 0xA0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_28E2[0x1C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        Jank;                                              // 0xCC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        BigJank;                                           // 0xD0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        FPS25;                                             // 0xD4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_28E3[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        PeakPlayerNum;                                     // 0x100(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        PeakAINum;                                         // 0x104(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        PeakVehicleNum;                                    // 0x108(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_28E4[0x3C];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarHttpManager* GetDefaultObj();

	void UploadToHTTP(const class FString& URL, const class FString& Str);
	void UploadImg(int32& AppId, int32& AppUid, const class FString& AppToken, int32& GameID, int32& Uid, const class FString& SourceImgPath);
	class FString StringToBase64(const class FString& Str);
	void StopRecordJank();
	void StartRecordJank();
	void ResetPerfData(bool bKeepCurrentData);
	void ReportAbnormalPlayerWeaponToBackend(const class FString& InPlayerID, const class FString& InVariableName, const class FString& InVariableValue, const class FString& InAttackLocation, const class FString& InHitLocation, const class FString& InHitBoneScale, const class FString& InWeaponBlueprintName);
	void ReportAbnormalPlayerVehicleToBackend(const class FString& InPlayerID, const class FString& InVariableName, const class FString& InVariableValue, const class FString& InVehiclePreviousLocation, const class FString& InVehiclePresentLocation, const class FString& InVehicleBlueprintName);
	void ReportAbnormalPlayerToBackend(const class FString& InPlayerID, const class FString& InVariableName, const class FString& InVariableValue);
	void ReportAbnormalPlayerBaittingToBackend(const class FString& InPlayerID, const class FString& InVariableName, const class FString& InVariableValue, const class FString& InDamageType, const class FString& InBotLocation, const class FString& InPlayerLocation);
	void ReCordOnlineError(const class FString& InStr);
	void OnImgUploaded__DelegateSignature(int32 RespCode, const class FString& RespMsg, const class FString& ImgUrl);
	bool IsFileSizeExceedLimit(const class FString& SourceImgPath, int64& SizeLimit);
	void InitializeDelegates();
	class FString GetHttpReportUrl();
	float GetAvgNum(int32 PerfType);
	void ClearDelegates();
	void CleanPerfDirtyData();
	class FString Base64ToMD5(const class FString& Str);
};

// 0x20 (0x50 - 0x30)
// Class Solarland.SolarHUDEventSubsystem
class USolarHUDEventSubsystem : public UWorldSubsystem
{
public:
	FMulticastInlineDelegateProperty_            OnSettingConfigSaved;                              // 0x30(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnPickupSettingChanged;                            // 0x40(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class USolarHUDEventSubsystem* GetDefaultObj();

	void SimpleTriggerDelegate__DelegateSignature();
	void ClearDelegates();
	void BroadcastOnSettingConfigSaved();
	void BroadcastOnPickupSettingChanged();
};

// 0x1C0 (0x4D8 - 0x318)
// Class Solarland.SolarHUDInGame
class ASolarHUDInGame : public ASolarHUD
{
public:
	FMulticastInlineDelegateProperty_            OnVJetForbiddenChanged;                            // 0x318(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnHJetForbiddenChanged;                            // 0x328(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnVJetTotalTimesSet;                               // 0x338(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnHJetTotalTimesSet;                               // 0x348(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnVJetRestTimesSet;                                // 0x358(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnHJetRestTimesSet;                                // 0x368(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnVJetChargeStateChanged;                          // 0x378(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnVJetCDStateChanged;                              // 0x388(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnHJetChargeStateChanged;                          // 0x398(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnHJetCDStateChanged;                              // 0x3A8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnVJetTimesCharging;                               // 0x3B8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnHJetTimesCharging;                               // 0x3C8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnVJetCoolingDown;                                 // 0x3D8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnHJetCoolingDown;                                 // 0x3E8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnVJetModuleLevelChanged;                          // 0x3F8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnHJetModuleLevelChanged;                          // 0x408(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_28E7[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnSkydiveFlyStateChanged;                          // 0x428(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnSkydiveAltitudeUpdate;                           // 0x438(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnSkydiveSpeedUpdate;                              // 0x448(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_28E8[0x40];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnTeammateStateChanged;                            // 0x498(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnCharacterRescueStateChanged;                     // 0x4A8(0x10)(ZeroConstructor, InstancedReference, BlueprintCallable, NativeAccessSpecifierPublic)
	uint8                                        Pad_28E9[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASolarHUDInGame* GetDefaultObj();

	void ShowDiePage();
	void OpenSetting();
	void OpenMap();
	void OnTimeToEndMessage(int32 TimeToEnd);
	void OnTeammateStateChanged__DelegateSignature(bool NeedRefresh);
	void OnSpectateTargetChanged(class ASolarPlayerState* OldTarget, class ASolarSpectateInfo* SpectateInfo);
	void OnSkydiveSpeedUpdate__DelegateSignature(float NewSpeed);
	void OnSkydiveFlyStateChanged__DelegateSignature(bool bInFly);
	void OnSkydiveDataUpdate__DelegateSignature(float NewData);
	void OnSkydiveAltitudeUpdate__DelegateSignature(float NewHeight, float NewZValue);
	void OnReceiveBeginPlay();
	void OnPlayerNumberChange();
	void OnMarkButtonTouchMoved__DelegateSignature(float DegreeToCenter);
	void OnMarkButtonHoverChanged__DelegateSignature(bool bIsHovered);
	void OnMarkButtonDragSelectEnded__DelegateSignature();
	void OnMarkButtonBeenLoopPressed__DelegateSignature();
	void OnJetTimesChanged__DelegateSignature(int32 NewTimes);
	void OnJetModuleLevelChanged__DelegateSignature(int32 NewLevel);
	void OnJetFlyStateChanged__DelegateSignature(bool bStart);
	void OnJetFlyForbiddenChanged__DelegateSignature(bool bForbidden);
	void OnJetFlyDataUpdated__DelegateSignature(float Value, float Percent);
	void OnCharacterRescueStateChanged__DelegateSignature(enum class ERescueState NewRescueState);
	void OnCharacterEnterWater__DelegateSignature();
	void OnCharacterDead__DelegateSignature();
	void OnCapsulePlayerNumChange(int32 CurrentNum, int32 Total);
	void NotifyBombingEnd(int32 BombId);
	void NotifyBombingBegin(int32 BombId, const struct FVector& Location, float Radius);
	void MarkWarningOnWorld();
	void MarkPointOnWorld();
	bool HasBegunPlay();
	void HandleSendQuickMessage(const class FString& NickName, const class FString& Message, bool IsLocalPlayer, bool bSound);
	void CloseSetting();
	void CloseMap();
	void BroadcastSkydiveSpeed_Internal();
	void BroadcastSkydiveSpeed();
	void BroadcastOnVJetTotalTimesSetDelegate();
	void BroadcastOnVJetTotalTimesSet_Internal();
	void BroadcastOnVJetTimesChargingDelegate();
	void BroadcastOnVJetTimesCharging_Internal();
	void BroadcastOnVJetRestTimesSetDelegate();
	void BroadcastOnVJetRestTimesSet_Internal();
	void BroadcastOnVJetModuleLevelChangedDelegate();
	void BroadcastOnVJetModuleLevelChanged_Internal();
	void BroadcastOnVJetForbiddenChangedDelegate();
	void BroadcastOnVJetForbiddenChanged_Internal();
	void BroadcastOnVJetCoolingDownDelegate();
	void BroadcastOnVJetCoolingDown_Internal();
	void BroadcastOnVJetChargeStateChangedDelegate();
	void BroadcastOnVJetChargeStateChanged_Internal();
	void BroadcastOnVJetCDStateChangedDelegate();
	void BroadcastOnVJetCDStateChanged_Internal();
	void BroadcastOnTeammateStateChangedDelegate();
	void BroadcastOnTeammateStateChanged_Internal();
	void BroadcastOnSkydiveFlyStateChanged_Internal();
	void BroadcastOnSkydiveFlyStateChanged();
	void BroadcastOnShowGameNoticeDelegateDeprecated(int32 InNoticeID, TMap<class FString, class FString>& InNoticeParams);
	void BroadcastOnRefreshBackpackWeaponPartDelegate();
	void BroadcastOnRefreshBackpackWeaponDelegate();
	void BroadcastOnRefreshBackpackItemDelegate();
	void BroadcastOnRefreshBackpackEquipDelegate();
	void BroadcastOnHJetTotalTimesSetDelegate();
	void BroadcastOnHJetTotalTimesSet_Internal();
	void BroadcastOnHJetTimesChargingDelegate();
	void BroadcastOnHJetTimesCharging_Internal();
	void BroadcastOnHJetRestTimesSetDelegate();
	void BroadcastOnHJetRestTimesSet_Internal();
	void BroadcastOnHJetModuleLevelChangedDelegate();
	void BroadcastOnHJetModuleLevelChanged_Internal();
	void BroadcastOnHJetForbiddenChangedDelegate();
	void BroadcastOnHJetForbiddenChanged_Internal();
	void BroadcastOnHJetCoolingDownDelegate();
	void BroadcastOnHJetCoolingDown_Internal();
	void BroadcastOnHJetChargeStateChangedDelegate();
	void BroadcastOnHJetChargeStateChanged_Internal();
	void BroadcastOnHJetCDStateChangedDelegate();
	void BroadcastOnHJetCDStateChanged_Internal();
	void BroadcastOnBindPickupDelegates();
	void BroadcastOnBindItemPanelDelegates();
	void BroadcastOnBindHPPanelDelegates();
	void BindLocalPlayerSpectateDelegates(class ASolarSpectateInfo* LocalSpecInfo);
};

// 0x10 (0x730 - 0x720)
// Class Solarland.SolarHyperLinkRichText
class USolarHyperLinkRichText : public URichTextBlock
{
public:
	FMulticastInlineDelegateProperty_            OnHyperLinkClicked;                                // 0x720(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class USolarHyperLinkRichText* GetDefaultObj();

};

// 0x1A8 (0x2E0 - 0x138)
// Class Solarland.SolarImage
class USolarImage : public UWidget
{
public:
	struct FSlateBrush                           Brush;                                             // 0x138(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	enum class ESolarImageFillType               FillType;                                          // 0x1D0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_28EF[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSolarImageProgressInfo               ImageProgressInfo;                                 // 0x1D8(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, AdvancedDisplay, NativeAccessSpecifierPublic)
	FDelegateProperty_                           BrushDelegate;                                     // 0x1F8(0x10)(ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)
	struct FLinearColor                          ColorAndOpacity;                                   // 0x208(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FDelegateProperty_                           ColorAndOpacityDelegate;                           // 0x218(0x10)(ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)
	bool                                         bEnableLocImage;                                   // 0x228(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_28F0[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  ImagePath;                                         // 0x230(0x18)(Edit, NativeAccessSpecifierPublic)
	int32                                        LocTextID;                                         // 0x248(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ESolarSupportLanguages            PreviewLang;                                       // 0x24C(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_28F1[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FDelegateProperty_                           OnMouseButtonDownEvent;                            // 0x250(0x10)(Edit, ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)
	FDelegateProperty_                           OnMouseButtonUpEvent;                              // 0x260(0x10)(Edit, ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)
	FDelegateProperty_                           OnMouseMoveEvent;                                  // 0x270(0x10)(Edit, ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_28F2[0x60];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarImage* GetDefaultObj();

	void UpdateImageAsync(int32 NewLocTextID);
	void UpdateImage(int32 NewLocTextID);
	void SetOpacity(float InOpacity);
	void SetImageProgressInfo(struct FSolarImageProgressInfo& InSolarImageProgressInfo);
	void SetImageProgressByInfo(struct FSolarImageProgressInfo& InSolarImageProgressInfo);
	void SetImageProgress(float InProgress);
	void SetImageFillType(enum class ESolarImageFillType InImageFillType);
	void SetColorAndOpacity(const struct FLinearColor& InColorAndOpacity);
	void SetBrushTintColor(const struct FSlateColor& TintColor);
	void SetBrushSize(const struct FVector2D& DesiredSize);
	void SetBrushResourceObject(class UObject* ResourceObject);
	void SetBrushFromTextureDynamic(class UTexture2DDynamic* Texture, bool bMatchSize);
	void SetBrushFromTexture(class UTexture2D* Texture, bool bMatchSize);
	void SetBrushFromSoftTexture(TSoftObjectPtr<class UTexture2D> SoftTexture, bool bMatchSize);
	void SetBrushFromSoftMaterial(TSoftObjectPtr<class UMaterialInterface> SoftMaterial);
	void SetBrushFromMaterial(class UMaterialInterface* Material);
	void SetBrushFromAtlasInterface(TScriptInterface<class ISlateTextureAtlasInterface> AtlasRegion, bool bMatchSize);
	void SetBrushFromAsset(class USlateBrushAsset* Asset);
	void SetBrush(struct FSlateBrush& InBrush);
	float GetImageProgressByInfo(struct FSolarImageProgressInfo& InSolarImageProgressInfo);
	class UMaterialInstanceDynamic* GetDynamicMaterial();
};

// 0x1F8 (0x330 - 0x138)
// Class Solarland.SolarImageURL
class USolarImageURL : public UWidget
{
public:
	class FString                                URL;                                               // 0x138(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDownloadFailedResetToPlaceholder;                 // 0x148(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDownloadFailedAutoRetry;                          // 0x149(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_28F7[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        AutoRetryDelayTime;                                // 0x14C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        AutoRetryTimes;                                    // 0x150(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_28F8[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSlateBrush                           Brush;                                             // 0x158(0x98)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FSlateBrush                           PlaceholderBrush;                                  // 0x1F0(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	FDelegateProperty_                           BrushDelegate;                                     // 0x288(0x10)(ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)
	struct FLinearColor                          ColorAndOpacity;                                   // 0x298(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FDelegateProperty_                           ColorAndOpacityDelegate;                           // 0x2A8(0x10)(ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)
	bool                                         bFlipForRightToLeftFlowDirection;                  // 0x2B8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_28F9[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FDelegateProperty_                           OnMouseButtonDownEvent;                            // 0x2BC(0x10)(Edit, ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_28FA[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnURLDownloadFinish;                               // 0x2D0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_28FB[0x50];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarImageURL* GetDefaultObj();

	void URLDownloadFinish__DelegateSignature(bool bSuccess);
	void UpdateURLImage();
	void SetURLForNextTick(const class FString& URLForNextTick);
	void SetOpacity(float InOpacity);
	void SetColorAndOpacity(const struct FLinearColor& InColorAndOpacity);
	void SetBrushTintColor(const struct FSlateColor& TintColor);
	void SetBrushSize(const struct FVector2D& DesiredSize);
	void SetBrushResourceObject(class UObject* ResourceObject);
	void SetBrushFromTextureDynamic(class UTexture2DDynamic* Texture, bool bMatchSize);
	void SetBrushFromTexture(class UTexture2D* Texture, bool bMatchSize);
	void SetBrushFromSoftTexture(TSoftObjectPtr<class UTexture2D> SoftTexture, bool bMatchSize);
	void SetBrushFromSoftMaterial(TSoftObjectPtr<class UMaterialInterface> SoftMaterial);
	void SetBrushFromMaterial(class UMaterialInterface* Material);
	void SetBrushFromAtlasInterface(TScriptInterface<class ISlateTextureAtlasInterface> AtlasRegion, bool bMatchSize);
	void SetBrushFromAsset(class USlateBrushAsset* Asset);
	void SetBrush(struct FSlateBrush& InBrush);
	void ResetToPlaceholder();
	void LoadURLImage(class UTexture2DDynamic* Texture);
	class FString GetUrl();
	class UMaterialInstanceDynamic* GetDynamicMaterial();
	enum class EImageURLDownloadState GetDownloadState();
	void CancelDownload();
};

// 0x1F0 (0x218 - 0x28)
// Class Solarland.SolarInputActionContext
class USolarInputActionContext : public UObject
{
public:
	uint8                                        Pad_28FC[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UInputMappingContext*                  InputMappingContext;                               // 0x48(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<struct FKey, class UInputAction*>       KeyChordInputActionDict;                           // 0x50(0x50)(NativeAccessSpecifierPrivate)
	TMap<class FName, struct FSolarInputActionEntry> ActionInputActionDict;                             // 0xA0(0x50)(NativeAccessSpecifierPrivate)
	TMap<class FName, struct FSolarInputActionEntry> ChordActionInputActionDict;                        // 0xF0(0x50)(NativeAccessSpecifierPrivate)
	class UInputAction*                          NullInputAction;                                   // 0x140(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_28FD[0xD0];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarInputActionContext* GetDefaultObj();

};

// 0x20 (0x4B8 - 0x498)
// Class Solarland.SolarInputButton
class USolarInputButton : public UButton
{
public:
	struct FSolarVirtualInput                    VirtualActionInput;                                // 0x498(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class USolarInputButton* GetDefaultObj();

};

// 0x10 (0x178 - 0x168)
// Class Solarland.SolarInputComponent
class USolarInputComponent : public UEnhancedInputComponent
{
public:
	uint8                                        Pad_28FE[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarInputComponent* GetDefaultObj();

};

// 0x8 (0x48 - 0x40)
// Class Solarland.InputTriggerDownOne
class UInputTriggerDownOne : public UInputTrigger
{
public:
	uint8                                        Pad_28FF[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bIsOneShot;                                        // 0x41(0x1)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2900[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UInputTriggerDownOne* GetDefaultObj();

};

// 0x0 (0x40 - 0x40)
// Class Solarland.InputTriggerPressedOld
class UInputTriggerPressedOld : public UInputTrigger
{
public:

	static class UClass* StaticClass();
	static class UInputTriggerPressedOld* GetDefaultObj();

};

// 0x0 (0x40 - 0x40)
// Class Solarland.InputTriggerReleasedOld
class UInputTriggerReleasedOld : public UInputTrigger
{
public:

	static class UClass* StaticClass();
	static class UInputTriggerReleasedOld* GetDefaultObj();

};

// 0x0 (0x40 - 0x40)
// Class Solarland.InputTriggerPressedAndReleased
class UInputTriggerPressedAndReleased : public UInputTrigger
{
public:

	static class UClass* StaticClass();
	static class UInputTriggerPressedAndReleased* GetDefaultObj();

};

// 0x0 (0x40 - 0x40)
// Class Solarland.InputTriggerTriggered
class UInputTriggerTriggered : public UInputTrigger
{
public:

	static class UClass* StaticClass();
	static class UInputTriggerTriggered* GetDefaultObj();

};

// 0x8 (0x48 - 0x40)
// Class Solarland.InputTriggerDoubleTap
class UInputTriggerDoubleTap : public UInputTrigger
{
public:
	float                                        Delay;                                             // 0x40(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2901[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UInputTriggerDoubleTap* GetDefaultObj();

};

// 0x8 (0x30 - 0x28)
// Class Solarland.InputModifierConstBool
class UInputModifierConstBool : public UInputModifier
{
public:
	float                                        ConstValue;                                        // 0x28(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2902[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UInputModifierConstBool* GetDefaultObj();

};

// 0x8 (0x38 - 0x30)
// Class Solarland.SolarInputKeyMapSubsystem
class USolarInputKeyMapSubsystem : public UEngineSubsystem
{
public:
	uint8                                        Pad_2903[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarInputKeyMapSubsystem* GetDefaultObj();

};

// 0x248 (0x2F8 - 0xB0)
// Class Solarland.SolarInputManager
class USolarInputManager : public UActorComponent
{
public:
	uint8                                        Pad_2904[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class USolarPlayerSensitivitys*              SenSetting;                                        // 0xC8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2905[0x38];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTouchHandler                         TouchHandler;                                      // 0x108(0x178)(NativeAccessSpecifierPrivate)
	uint8                                        Pad_2906[0x78];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarInputManager* GetDefaultObj();

	void SetTouchScaler(float InVal);
	void SetNoiseThresholdFactor(float InVal);
	void SetMouseScaler(const struct FVector2D& InVal);
	void SetMinNoiseMultiplier(float InVal);
	void SetCurveVerticalFix(const struct FVector2D& InVec);
	void SetCurveVerticalFactor(const struct FVector2D& InVec);
	void SetCurveHorizonFix(const struct FVector2D& InVec);
	void SetCurveHorizonFactor(const struct FVector2D& InVec);
	void OnCacheNeedUpdate();
	float GetTouchScaler();
	struct FVector2D GetTouchOutputScale();
	float GetNoiseThresholdFactor();
	struct FVector2D GetMouseScaler();
	float GetMinNoiseMultiplier();
	struct FVector2D GetFixedOutput();
	struct FVector2D GetDeltaMove();
	struct FVector2D GetCurveVerticalFix();
	struct FVector2D GetCurveVerticalFactor();
	struct FVector2D GetCurveHorizonFix();
	struct FVector2D GetCurveHorizonFactor();
	struct FVector2D GetAverageDeltaMove();
};

// 0x78 (0xA8 - 0x30)
// Class Solarland.SolarInputMappingManager
class USolarInputMappingManager : public USolarGameManager
{
public:
	uint8                                        Pad_290A[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnInputMappingUpdate;                              // 0x38(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMap<class FString, struct FInputKeyMappingEntry> KeyMappingEntryDict;                               // 0x48(0x50)(NativeAccessSpecifierPrivate)
	TArray<struct FInputKeyMappingEntry>         CacheKeyMappingEntries;                            // 0x98(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class USolarInputMappingManager* GetDefaultObj();

	void SplitInputChord(struct FInputChord& InInputChord, class FString* KeyStr1, class FString* KeyStr2);
	TArray<struct FInputKeyMappingEntry> GetKeyMappingEntries();
	struct FInputKeyMappingEntry FindKeyMappingEntry(const class FString& ActionID);
	struct FInputKeyMappingEntry CreateKeyMappingEntry(const class FString& InActionID, const class FString& InActionName, enum class ESolarTablesEnum_InputActionType InActionType, float InScale, const class FString& InKeyStr1, const class FString& InKeyStr2, const class FString& InKeyStr3, enum class ESolarTablesEnum_InputTriggerType InInputTriggerType1, enum class ESolarTablesEnum_InputTriggerType InInputTriggerType2, enum class ESolarTablesEnum_InputTriggerType InInputTriggerType3);
	bool CreateInputChord(const class FString& KeyStr1, const class FString& KeyStr2, struct FInputChord* OutInputChord);
	void ApplyKeyMappings();
};

// 0xD0 (0x180 - 0xB0)
// Class Solarland.SolarInputModePolicyComponent
class USolarInputModePolicyComponent : public UActorComponent
{
public:
	uint8                                        Pad_290B[0xD0];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarInputModePolicyComponent* GetDefaultObj();

};

// 0x1F8 (0x230 - 0x38)
// Class Solarland.SolarInputSetting
class USolarInputSetting : public UDeveloperSettings
{
public:
	struct FVector2D                             TouchScaler;                                       // 0x38(0x8)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        NoiseThresholdFactor;                              // 0x40(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinNoiseMultiplier;                                // 0x44(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableAccMode;                                    // 0x48(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_290C[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        AccConfigThreshold;                                // 0x4C(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ConstantThreshold;                                 // 0x50(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_290D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSoftObjectPath                       TouchDistHorizCurve;                               // 0x58(0x18)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                       TouchDistVertCurve;                                // 0x70(0x18)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             TouchDistHorizCurveScale;                          // 0x88(0x8)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             TouchDistVertCurveScale;                           // 0x90(0x8)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             TouchDistHorizCurveOffset;                         // 0x98(0x8)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             TouchDistVertCurveOffset;                          // 0xA0(0x8)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                       TouchHorizCurve;                                   // 0xA8(0x18)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                       TouchVertCurve;                                    // 0xC0(0x18)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             TouchHorizCurveScale;                              // 0xD8(0x8)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             TouchVertCurveScale;                               // 0xE0(0x8)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             TouchHorizCurveOffset;                             // 0xE8(0x8)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             TouchVertCurveOffset;                              // 0xF0(0x8)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxMagnitudeThreshold;                             // 0xF8(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_290E[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<class FName, struct FSoftObjectPath>    InputActionPaths;                                  // 0x100(0x50)(Edit, Config, NativeAccessSpecifierPrivate)
	TSet<class FName>                            InputActionOneShotBlackList;                       // 0x150(0x50)(Edit, Config, NativeAccessSpecifierPrivate)
	struct FSoftObjectPath                       DefaultInputActionPath;                            // 0x1A0(0x18)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FSoftObjectPath                       DefaultInputActionChordPath;                       // 0x1B8(0x18)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FSoftObjectPath                       DefaultInputActionModifyKeyPath;                   // 0x1D0(0x18)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FSoftObjectPath                       DefaultInputActionTapPath;                         // 0x1E8(0x18)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FSoftObjectPath                       DefaultInputActionDoubleTapPath;                   // 0x200(0x18)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FSoftObjectPath                       DefaultInputActionHoldPath;                        // 0x218(0x18)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class USolarInputSetting* GetDefaultObj();

	class USolarInputSetting* GetInputSettings();
};

// 0x48 (0x78 - 0x30)
// Class Solarland.SolarInputSubsystem
class USolarInputSubsystem : public UWorldSubsystem
{
public:
	uint8                                        Pad_2910[0x48];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarInputSubsystem* GetDefaultObj();

	bool TestInputActionFlag(enum class EInputActionFlags InFlagBit);
	void RemoveInputActionFlag(enum class EInputActionFlags InFlagBit);
	void OnInputMethodChanged(enum class ECommonInputType InInputType);
	void OnControllerConnectionChange(bool bIsConnected, int32 UserId, int32 ControllerId);
	void AddInputActionFlag(enum class EInputActionFlags InFlagBit);
};

// 0x68 (0x98 - 0x30)
// Class Solarland.SolarInteractableManager
class USolarInteractableManager : public USolarGameManager
{
public:
	uint8                                        Pad_2911[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        ZoneNum;                                           // 0x40(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        TotalNum;                                          // 0x44(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FRadarStationCollection>       CurrRadarStations;                                 // 0x48(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class ASolarElectricShop*>            CurrElectricShops;                                 // 0x58(0x10)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<TWeakObjectPtr<class ASolarShieldUpgradeItemShop>> ActiveShieldUpgradeItemShopList;                   // 0x68(0x10)(ZeroConstructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                SceneObjectLevelName;                              // 0x78(0x10)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class ASolarGlobalRepInfo>    GlobalMapRepInfo;                                  // 0x88(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2912[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarInteractableManager* GetDefaultObj();

	void OnSceneObjectsLoadComplete(const class FString& LevelName);
	void OnClientShowShieldUpgradeItemShops();
	int32 GetShieldUpgradeItemShopGroupID();
};

// 0x18 (0x360 - 0x348)
// Class Solarland.SolarInteractionItemWidget
class USolarInteractionItemWidget : public USolarUserWidget
{
public:
	uint8                                        Pad_2913[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USolarInteractionListWidget*           InteractionList;                                   // 0x350(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          InteractionType;                                   // 0x358(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class USolarInteractionItemWidget* GetDefaultObj();

	void FadeOut();
	void FadeIn();
};

// 0x40 (0x388 - 0x348)
// Class Solarland.SolarInteractionListWidget
class USolarInteractionListWidget : public USolarUserWidget
{
public:
	TArray<class USolarInteractionItemWidget*>   ItemWidgets;                                       // 0x348(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class USolarInteractionTriggerWidget*> TriggerWidgets;                                    // 0x358(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2914[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USolarInteractionItemWidget*           FocusedActiveItem;                                 // 0x370(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2915[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        RefreshActiveWidgetInterval;                       // 0x37C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2916[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarInteractionListWidget* GetDefaultObj();

	void OnTryCancelInteraction();
	void OnStopInteractionCountDown(struct FCountDownInfo& InCountInfo);
	void OnStartInteractionCountDown(struct FCountDownInfo& InCountInfo);
	bool OnInteractionTriggered();
	void OnInteractionTriggerDisappear(struct FInteractionTriggerInfo& TriggerInfo);
	void OnInteractionTriggerAppear(struct FInteractionTriggerInfo& TriggerInfo);
	void OnHideInteractionListRequested();
	void OnCancelHideInteractionListRequested();
};

// 0x18 (0x378 - 0x360)
// Class Solarland.SolarInteractionOpenAirdropWidget
class USolarInteractionOpenAirdropWidget : public USolarInteractionItemWidget
{
public:
	uint8                                        Pad_2919[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USolarBattleModel*                     BattleViewModel;                                   // 0x368(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_291A[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarInteractionOpenAirdropWidget* GetDefaultObj();

	void UpdateProgress(class ASolarTreasureBoxActor* InBoxActor, float InProgress);
	void UnBindDelegates();
	bool TryOpenAirdropBox();
	void SetTBoxActor(class ASolarTreasureBoxActor* InBoxActor);
	void SetSelfVisibility(bool InShow);
	void SetAirdropBoxActor(class AActor* InBoxActor);
	void RefreshToSelfOpening();
	void RefreshToOtherOpening();
	void RefreshToCanOpen();
	void RefreshProgressDisplay(float Progress, float InMaxOpenTime);
	void OnPressCancelButtonPC();
	bool OnPressButtonPC();
	void OnPressButtonOpen();
	void OnPressButtonCancel();
	void OnOpenCharacterChanged(class AAirDropTreasureBox* InBoxActor);
	void OnDrivingStateChanged(enum class EDriveState InDriveState);
	void OnBtnActiveChanged(bool Inactive);
	void OnAirdropProgressChanged(class AAirDropTreasureBox* InBoxActor);
	void HideSelfByThisID(int64 InThisID);
	void ForceCancel();
	bool BSameThisID(int64 InThisID);
	void BindDelegates();
};

// 0x58 (0x3B8 - 0x360)
// Class Solarland.SolarInteractionRescueTeammateWidget
class USolarInteractionRescueTeammateWidget : public USolarInteractionItemWidget
{
public:
	int32                                        FastReliefSkillCharacterID;                        // 0x360(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_291B[0x54];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarInteractionRescueTeammateWidget* GetDefaultObj();

	void WrappedStopCountDownProgress(int32 InActionID);
	void WrappedStartCountDownProgress(struct FCountDownInfo& InCountInfo);
	void StopCountDownProgress(int32 InActionID);
	void StartCountDownProgress(struct FCountDownInfo& InCountInfo);
	void RefreshToPreInteracting();
	void RefreshToNonCancellableInteracting();
	void RefreshToCancellableInteracting();
	void OnRescueButtonVisibilitySet(bool bShow);
	void OnRescueButtonClicked();
	void OnProgressiveInteractCompleted();
	void OnProgressiveInteractCanceled();
	void OnCharacterIDSet(int32 InCharacterId);
	void EnablePassiveBuffDisplay(int32 CharacterId, int32 LocalTextId);
	void DisablePassiveBuffDisplay();
};

// 0x88 (0x3E8 - 0x360)
// Class Solarland.SolarInteractionTriggerWidget
class USolarInteractionTriggerWidget : public USolarInteractionItemWidget
{
public:
	uint8                                        Pad_291C[0x88];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarInteractionTriggerWidget* GetDefaultObj();

	void WrappedStopCountDownProgress(int32 InActionID);
	void WrappedStartCountDownProgress(struct FCountDownInfo& InCountInfo);
	void StopCountDownProgress(int32 InActionID);
	void StartCountDownProgress(struct FCountDownInfo& InCountInfo);
	void RefreshToPreInteracting();
	void RefreshToNonCancellableInteracting();
	void RefreshToCancellableInteracting();
	void OnProgressiveInteractCompleted();
	void OnProgressiveInteractCanceled();
	void OnInteractButtonTriggered();
	void InitByTriggerInfo(struct FInteractionTriggerInfo& TriggerInfo);
	void EnablePassiveBuffDisplay(int32 CharacterId, int32 LocalTextId);
	void DisablePassiveBuffDisplay();
};

// 0x20 (0x250 - 0x230)
// Class Solarland.SolarInteractionVolume
class ASolarInteractionVolume : public ATriggerBox
{
public:
	uint8                                        Pad_291D[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         DisableInteractionVolume;                          // 0x248(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         DebugDrawVolume;                                   // 0x249(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_291E[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASolarInteractionVolume* GetDefaultObj();

	void OnEndOverlap(class AActor* ThisActor, class AActor* OtherActor);
	void OnBeginOverlap(class AActor* ThisActor, class AActor* OtherActor);
};

// 0x40 (0x78 - 0x38)
// Class Solarland.SolarIrisSettings
class USolarIrisSettings : public UDeveloperSettings
{
public:
	class FString                                BaseURL;                                           // 0x38(0x10)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                GameID;                                            // 0x48(0x10)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                RegionID;                                          // 0x58(0x10)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                KeyStr;                                            // 0x68(0x10)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class USolarIrisSettings* GetDefaultObj();

};

// 0x538 (0x18F0 - 0x13B8)
// Class Solarland.SolarIronManVehicle
class ASolarIronManVehicle : public ASolarHoverVehicle
{
public:
	class FName                                  LeftHandSocket;                                    // 0x13B8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  RightHandSocket;                                   // 0x13C0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  LeftFootSocket;                                    // 0x13C8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  RightFootSocket;                                   // 0x13D0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  BackPackSocket;                                    // 0x13D8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UAnimMontage>           RotationLaserMontage;                              // 0x13E0(0x28)(Edit, Transient, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               BoxHalfSize;                                       // 0x1408(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        QuerySameActorMaxNum;                              // 0x1414(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehicleSpeedThresholdFromStandToLie;               // 0x1418(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2920[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVehicleVFX                           LeftHandBulletEffect;                              // 0x1420(0x90)(Edit, NativeAccessSpecifierPublic)
	struct FVehicleVFX                           LeftHandMuzzleEffect;                              // 0x14B0(0x90)(Edit, NativeAccessSpecifierPublic)
	struct FVehicleVFX                           RightHandBulletEffect;                             // 0x1540(0x90)(Edit, NativeAccessSpecifierPublic)
	struct FVehicleVFX                           RightHandMuzzleEffect;                             // 0x15D0(0x90)(Edit, NativeAccessSpecifierPublic)
	struct FVehicleVFX                           HitEffect;                                         // 0x1660(0x90)(Edit, NativeAccessSpecifierPublic)
	TArray<struct FVehicleVFX>                   IronManJetEffectInfo;                              // 0x16F0(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<enum class ECollisionChannel>         HitDecalExceptObjTypes;                            // 0x1700(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UParticleSystem>        HitDecalParticle;                                  // 0x1710(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               HitDecalScale;                                     // 0x1738(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HitDecalInterval;                                  // 0x1744(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HitDecalBeginTime;                                 // 0x1748(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HitDecalEndTime;                                   // 0x174C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HitDecalLength;                                    // 0x1750(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2921[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        SmoothRotationSpeed;                               // 0x1758(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        MaxJetEffectFXkgValue;                             // 0x175C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  JetEffectFXkgName;                                 // 0x1760(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UGameplayEffect>           CanNotSwitchSeat;                                  // 0x1768(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2922[0x50];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UStaticMesh>            IronManStaticMeshWithDriver;                       // 0x17C0(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UStaticMesh>            IronManStaticMeshWithNoDriver;                     // 0x17E8(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bAddRiderSeat;                                     // 0x1810(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2923[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVehicleSeatSlot                      RiderSeatSlot;                                     // 0x1818(0xD8)(Edit, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class ASolarIronManVehicle* GetDefaultObj();

	void OnIronManRootHit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, struct FHitResult& Hit);
};

// 0x150 (0x4B0 - 0x360)
// Class Solarland.SolarIronManVehicleAnimInstance
class USolarIronManVehicleAnimInstance : public USolarHoverVehicleAnimInstance
{
public:
	uint8                                        Pad_2924[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<class FName, struct FTransform>         SocketToTransform;                                 // 0x368(0x50)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2925[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            LeftHandTransform;                                 // 0x3C0(0x30)(BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FTransform                            RightHandTransform;                                // 0x3F0(0x30)(BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FTransform                            LeftFootTransform;                                 // 0x420(0x30)(BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	struct FTransform                            RightFootTransform;                                // 0x450(0x30)(BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	struct FTransform                            BackPackTransform;                                 // 0x480(0x30)(BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class USolarIronManVehicleAnimInstance* GetDefaultObj();

};

// 0x10 (0x358 - 0x348)
// Class Solarland.SolarItemCardViewWidget
class USolarItemCardViewWidget : public USolarUserWidget
{
public:
	enum class ESolarItemQualityType             QualityType;                                       // 0x348(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ESolarItemSelectType              SelectType;                                        // 0x349(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ESolarItemLockType                LockType;                                          // 0x34A(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ESolarItemDownloadType            DownloadType;                                      // 0x34B(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ESolarItemMarkType                MarkType;                                          // 0x34C(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ESolarItemLimitType               LimitType;                                         // 0x34D(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ESolarItemUseType                 UseType;                                           // 0x34E(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ESolarItemBuyType                 BuyType;                                           // 0x34F(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ESolarItemOwnType                 OwnType;                                           // 0x350(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ESolarRedHintType                 RedHintType;                                       // 0x351(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ESolarItemShowType                ShowType;                                          // 0x352(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EClassType                        CharacterBuildType;                                // 0x353(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2926[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarItemCardViewWidget* GetDefaultObj();

	void ReflashItemView();
	void OnUseChanged(enum class ESolarItemUseType InType);
	void OnShowTypeChanged(enum class ESolarItemShowType InType);
	void OnSelectedChanged(enum class ESolarItemSelectType InType);
	void OnrRedHintChanged(enum class ESolarRedHintType InType);
	void OnQualityChanged(enum class ESolarItemQualityType InType);
	void OnOwnChanged(enum class ESolarItemOwnType InType);
	void OnMarkedChanged(enum class ESolarItemMarkType InType);
	void OnLockedChanged(enum class ESolarItemLockType InType);
	void OnLimitChanged(enum class ESolarItemLimitType InType);
	void OnDownloadedChanged(enum class ESolarItemDownloadType InType);
	void OnBuyChanged(enum class ESolarItemBuyType InType);
	void OnBuildTypeChanged(enum class EClassType InType);
};

// 0x10 (0xC0 - 0xB0)
// Class Solarland.SolarItemComponent
class USolarItemComponent : public UActorComponent
{
public:
	class ASolarCharacter*                       OwnerChara;                                        // 0xB0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2927[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarItemComponent* GetDefaultObj();

	void UseItemRequestLuaCall(int32 ItemID, int32 Num);
	void OnPlayerBackpackItemUpdate();
	bool CanUseMedicine();
};

// 0x18 (0x240 - 0x228)
// Class Solarland.SolarItemCountActor
class ASolarItemCountActor : public AActor
{
public:
	class UTextRenderComponent*                  TextPtr;                                           // 0x228(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                TextPrefix;                                        // 0x230(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class ASolarItemCountActor* GetDefaultObj();

	void SetItemCount(int32 Count);
};

// 0x0 (0x28 - 0x28)
// Class Solarland.SolarItemInterface
class ISolarItemInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class ISolarItemInterface* GetDefaultObj();

};

// 0x788 (0x7B0 - 0x28)
// Class Solarland.SolarItemManager
class USolarItemManager : public UObject
{
public:
	uint8                                        Pad_2953[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ASolarItemRootActor*                   RootActor;                                         // 0x30(0x8)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<int32, TWeakObjectPtr<class AActor>>    SpawnedActors;                                     // 0x38(0x50)(UObjectWrapper, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2954[0x50];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class ASolarItemSpawner*>             ItemSpawners;                                      // 0xD8(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class ASolarItemSpawner*>             NSItemSpanwers;                                    // 0xE8(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class ASolarVehicleSpawner*>          VehicleSpawners;                                   // 0xF8(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2955[0x50];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<int32, class ASolarItemSpawner*>        ItemSpawnersMap;                                   // 0x158(0x50)(NativeAccessSpecifierPrivate)
	TMap<int32, class ASolarAirDropSpawner*>     AirDropSpawnersMap;                                // 0x1A8(0x50)(NativeAccessSpecifierPrivate)
	TMap<int32, struct FSolarItemSpawnerArray>   NSItemSpawnerMap;                                  // 0x1F8(0x50)(NativeAccessSpecifierPrivate)
	TMap<int32, struct FOutcomeData>             ItemOutcomeDatas;                                  // 0x248(0x50)(NativeAccessSpecifierPrivate)
	TMap<int32, struct FOutcomeDataCollection>   OutcomeCollection;                                 // 0x298(0x50)(NativeAccessSpecifierPrivate)
	TMap<int32, struct FSimpleDropItemDataCollection> OriginDropItemDatas;                               // 0x2E8(0x50)(NativeAccessSpecifierPrivate)
	TMap<int32, struct FFinalDropDataCollection> AirDropItemDatas;                                  // 0x338(0x50)(NativeAccessSpecifierPrivate)
	TMap<int32, int32>                           AirDropChestIndexMap;                              // 0x388(0x50)(NativeAccessSpecifierPrivate)
	TMap<int32, int32>                           UsedAirDropChestIndexMap;                          // 0x3D8(0x50)(NativeAccessSpecifierPrivate)
	TMap<int32, int32>                           MaxPileMap;                                        // 0x428(0x50)(NativeAccessSpecifierPrivate)
	struct FRandomStream                         ItemStream;                                        // 0x478(0x8)(ZeroConstructor, NoDestructor, NativeAccessSpecifierPrivate)
	float                                        DelaySpawnTime;                                    // 0x480(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2956[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FString>                        SubLevelNames;                                     // 0x488(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         BInitSpawner;                                      // 0x498(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         BSpawnerDestoryed;                                 // 0x499(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2957[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTimerHandle                          ItemInitSpawnerHandle;                             // 0x4A0(0x8)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        DelayInitSpawnerTime;                              // 0x4A8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2958[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTimerHandle                          ItemLoopSpawnHandle;                               // 0x4B0(0x8)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        SpawnLoopInterval;                                 // 0x4B8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        SpawnMinDisSquared;                                // 0x4BC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        SpawnMaxHeightOffset;                              // 0x4C0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        ChestSpawnMinDisSquared;                           // 0x4C4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        VehicleSpawnMinDisSquared;                         // 0x4C8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2959[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UDataTable*                            ItemResReferenceTable;                             // 0x4D0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                ItemResReferenceTablePath;                         // 0x4D8(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_295A[0x38];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         BOpenLog;                                          // 0x520(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_295B[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        FirstSpawnerIndex;                                 // 0x524(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        FirstTBoxIndex;                                    // 0x528(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        FirstAirDropIndex;                                 // 0x52C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        FirstVehicleIndex;                                 // 0x530(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ChestKeyCode;                                      // 0x534(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Level1OutcomeID;                                   // 0x538(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Level2OutcomeID;                                   // 0x53C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        Level3OutcomeID;                                   // 0x540(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_295C[0xF4];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<int32, enum class EItemType>            ItemID2Types;                                      // 0x638(0x50)(NativeAccessSpecifierPublic)
	int64                                        ThisIdRefCount;                                    // 0x688(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int64                                        ServerNowSeconds;                                  // 0x690(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                RootActorBpPath;                                   // 0x698(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        CheckDropRadius;                                   // 0x6A8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        CheckDropHeight;                                   // 0x6AC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        DropLineTraceLength;                               // 0x6B0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        DropUnitOffset;                                    // 0x6B4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USolarMapManager*                      MapManager;                                        // 0x6B8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class ASolarAirDropSpawner*>          ActiveAirDropBox;                                  // 0x6C0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_295D[0xB0];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<TWeakObjectPtr<class AAirDropTreasureBox>> AirDropsList;                                      // 0x780(0x10)(ZeroConstructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<TWeakObjectPtr<class ADeathTreasureBox>> DeathTreasureBoxList;                              // 0x790(0x10)(ZeroConstructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_295E[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarItemManager* GetDefaultObj();

	void UpdateItemParams();
	bool TryDropAtLocation(class ASolarCharacterBase* Owner, struct FVector* CheckPos);
	void SplitBurstItems(const struct FSolarItemData& Source, TArray<struct FSolarItemData>* SplitedPile);
	void SpawnTreasureBoxByID(int32 TreasureId, const struct FTransform& Trans, const TArray<struct FSolarItemData>& ItemsToSpawn, class ASolarCharacter* SummonCharacter, float InSpawnDelay, float InStartHeight);
	void SpawnMutipleItems(class ASolarCharacter* InCharacter, int32 InItemID, int32 InPerCount, int32 InTotalCount);
	void SpawnItemsByOutcomeID(int32 OutcomeID, struct FTransform* Trans);
	void SpawnItems(int32 ItemID, int32 ItemNum, const struct FTransform& Trans);
	struct FSolarItemData SpawnItemData(int32 ItemID);
	void SpawnDeathBox(class ASolarCharacterBase* Owner, struct FRotator& Rotator, TArray<struct FSolarItemData>* DataTarray, int32& DeathBoxId, TArray<class ASolarPlayerWeapon*>& DeathBoxWeaponArray, float& CurrEnergyValue, float& CurrExtraEnergyValue, int32& MonsterID);
	void SpawnAirDropByID(int32 ChestID, const struct FVector& Location, const TArray<struct FSolarItemData>& ItemsToSpawn);
	void ResetThisID();
	bool RefreshOutcomePoolContent(struct FOutcomeData* InOutcomeData);
	void OnUpdateServerNowSeconds(int32 InNowSeconds);
	void OnCustomGameStateChanged(enum class ESCMInGameState InNewState);
	void OnAsyncLoadTreasureBoxComplete(const struct FSoftClassPath& SClassPath, const struct FSolarItemData& BoxItemData, const TArray<struct FSolarItemData>& ItemDataList, const struct FTransform& Trans, class ASolarCharacter* InCharacter, float InSpawnDelay, float InStartHeight);
	void OnAsyncLoadItemComplete(const struct FSoftClassPath& SClassPath, const struct FSolarItemData& ItemData, const struct FTransform& Trans);
	void OnAsyncLoadDiscardItemComplete(const struct FSoftClassPath& SClassPath, class ASolarCharacter* Owner, const struct FSolarItemData& ItemData);
	void OnAsyncLoadDeathBoxComplete(class UClass* DeathBoxClass, class ASolarCharacterBase* Owner, const struct FRotator& Rotator, const TArray<struct FSolarItemData>& DataTarray, const struct FSolarItemData& DeathBoxData, const TArray<class ASolarPlayerWeapon*>& DeathBoxWeaponArray, float CurrEnergyValue, float CurrExtraEnergyValue, int32 MonsterID);
	void OnAsyncLoadAirdropComplete(const struct FSoftClassPath& SClassPath, const struct FSolarItemData& BoxItemData, const TArray<struct FSolarItemData>& ItemDataList, const struct FVector& Location);
	void NotifySpawnerDestroy();
	void NotifyAvailableAirDropsNumChanged();
	void NotifyAirDropOpened();
	void NetStartAirDrops(int32 SpawnerID, int32 ChestID);
	void NetRunVehicleSpawn(enum class ESpawnStage InSpawnStage);
	bool NetRunSpecOutcome(int32 InData, TArray<struct FSolarItemData>* OutItemArray);
	void NetRunGlobalDrop();
	void NetRunDrop(enum class ESpawnStage InSpecifiedStage);
	bool NetDropOutcomeContent(int32 TargetContentID, struct FOutcomeData* OutcomeData, TMap<int32, struct FSimpleDropItemDataCollection>* InDropItemDatas, bool FromSpawner, struct FTransform& Trans);
	bool NetDropOutcome(struct FOutcomeData* OutcomeData, int32* OutTargetContentID);
	void NetDropGlobalOutcome(struct FGlobalOutcomeData* GlobalOutcomeData);
	void LoadSpawnerLevelComplete();
	void LoadItemSpawnerLevels();
	bool IsPosBlocked(struct FVector& CheckPos);
	bool IsInSafeArea(struct FVector& Location);
	void InitWeaponPartLevel(struct FSolarItemData* InItemData);
	void InitWeaponLevel(struct FSolarItemData* InItemData);
	void InitVehicleSpawnGroupData(TMap<int32, int32>* VehicleGroupIdToNum);
	void InitItemDataShieldValue(struct FSolarItemData* InItemData);
	int64 IncreaseThisID();
	int32 GetVehicleIDBySingleSpawnId(int32 SpawnID);
	int32 GetVehicleIDByGroupIDAndIndex(int32 Groupid, int32 GroupIndex);
	int32 GetVehicleIDByCustomRandomData();
	int32 GetVehicleGroupIDByVehicleID(int32 InVehicleID);
	struct FSolarVehicleData GetVehicleConfigData(int32 InVehicleID);
	int32 GetServerNowSeconds();
	int32 GetRankSeasonID();
	int32 GetRandomIDInMap(int32 TotalWeight, TMap<int32, int32>* WeightIDMap);
	int32 GetRandomAirDropIDInMap();
	int32 GetOutcomeIdByTreasureBoxId(int32 TreasureBoxID);
	struct FOutcomeData GetOutcomeDataByID(int32 OutcomeID);
	struct FOutcomeContentData GetOutcomeContentDataByID(int32 ContentID);
	bool GetItemResReference(int32 InItemID, struct FItemResReference* OutData);
	int32 GetItemPrize(int32 InItemID);
	int32 GetItemMaxPileByID(int32 InItemID);
	bool GetGlobalOutcomeData(int32 GamePlayMode, TArray<struct FGlobalOutcomeData>* GlobalOutcomeDatas);
	int32 GetEntryID();
	bool GetCurrItemSubLevels(const class FString& InMapName, TArray<class FString>* OutSubLevelNames);
	struct FOutcomeData GetCookedOutcomeDataByID(int32 OutcomeID);
	bool GetChestsFromChestSpawn(int32 ChestSpawnID, TArray<int32>* ChestIDs);
	int32 GetAvailableAirDropsNum();
	bool GetAirDropChestIDsByGamePlayMode(int32 GamePlayMode, TArray<int32>* ChestIDs);
	TArray<class ASolarAirDropSpawner*> GetActiveAirDropBox();
	void FindTransformForBoxItem(class AActor* TargetActor, struct FTransform* InTrans, bool bUseNewLocation);
	struct FRotator FindRotationForDropItem(class AActor* TargetActor, struct FVector* FindTargetPos);
	bool FindPosForDropItem(class ASolarCharacterBase* Owner, struct FVector* FindTargetPos, bool bPreferCenter);
	struct FSolarItemData CreateItemDataByKey(int32 InItemID);
	void ConvertToItemdataAndSetToSpawners();
	void ClearSpawnLoopTimer();
	void CheckSpawnItemByDis();
	bool CheckPointInCircle(const struct FVector2D& Center, float Radius, const struct FVector2D& PlayerPoint);
	void AddVehicleGroupDataSingle(int32 Groupid, TMap<int32, int32>* SingleData);
	void AddOneDropDataToTempDatas(int32 SpawnerID, int32 InItemID, int32 InItemNum, TMap<int32, struct FSimpleDropItemDataCollection>* InDropItemDatas);
	void AddAirDropToList(class AAirDropTreasureBox* AirDrop);
};

// 0x0 (0xC8 - 0xC8)
// Class Solarland.SolarItemResourceDataTable
class USolarItemResourceDataTable : public UDataTable
{
public:

	static class UClass* StaticClass();
	static class USolarItemResourceDataTable* GetDefaultObj();

};

// 0x18 (0x240 - 0x228)
// Class Solarland.SolarItemRootActor
class ASolarItemRootActor : public AActor
{
public:
	int32                                        MAX_LOAD_NUM;                                      // 0x228(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MAX_SPAWN_NUM;                                     // 0x22C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CurrLoadNum;                                       // 0x230(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CurrSpawnNum;                                      // 0x234(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        TempFrame;                                         // 0x238(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        FrameInterval;                                     // 0x23C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class ASolarItemRootActor* GetDefaultObj();

};

// 0xA8 (0x1E0 - 0x138)
// Class Solarland.SolarJoyStick
class USolarJoyStick : public UWidget
{
public:
	struct FSolarVirtualInput                    VirtualActionInput;                                // 0x138(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FSolarVirtualInput                    VirtualAxisXInput;                                 // 0x158(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FSolarVirtualInput                    VirtualAxisYInput;                                 // 0x178(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnTouchPressed;                                    // 0x198(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnTouchReleased;                                   // 0x1A8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnTouchMoveX;                                      // 0x1B8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnTouchMoveY;                                      // 0x1C8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_295F[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarJoyStick* GetDefaultObj();

	void ResetControlInput();
};

// 0x28 (0x500 - 0x4D8)
// Class Solarland.SolarKeyMapButton
class USolarKeyMapButton : public USolarButton
{
public:
	struct FSolarVirtualInput                    VirtualActionInput;                                // 0x4D8(0x20)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	bool                                         IsFocus;                                           // 0x4F8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2960[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarKeyMapButton* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Solarland.SolarLocalMessage
class USolarLocalMessage : public ULocalMessage
{
public:

	static class UClass* StaticClass();
	static class USolarLocalMessage* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Solarland.SolarKillEffectMessage
class USolarKillEffectMessage : public USolarLocalMessage
{
public:

	static class UClass* StaticClass();
	static class USolarKillEffectMessage* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Solarland.SolarKillNotifyMessage
class USolarKillNotifyMessage : public USolarLocalMessage
{
public:

	static class UClass* StaticClass();
	static class USolarKillNotifyMessage* GetDefaultObj();

};

// 0x80 (0xA8 - 0x28)
// Class Solarland.SolarlandContentStringDownloader
class USolarlandContentStringDownloader : public UObject
{
public:
	FMulticastInlineDelegateProperty_            OnContentStringDownloaded;                         // 0x28(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnContentStringDownloading;                        // 0x38(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnContentStringFailed;                             // 0x48(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_2961[0x21];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bForceRedownload;                                  // 0x79(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2962[0xA];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        ChunkSize;                                         // 0x84(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2963[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarlandContentStringDownloader* GetDefaultObj();

	void StartDownload();
	bool IsCurrentDownloading();
};

// 0x0 (0x30 - 0x30)
// Class Solarland.SolarlandDownloadModule
class USolarlandDownloadModule : public UEngineSubsystem
{
public:

	static class UClass* StaticClass();
	static class USolarlandDownloadModule* GetDefaultObj();

};

// 0x48 (0x70 - 0x28)
// Class Solarland.SolarlandDownloadSetting
class USolarlandDownloadSetting : public UObject
{
public:
	bool                                         bPrepareDownloadWithApplocationStart;              // 0x28(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2964[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                CDNURLPrefix;                                      // 0x30(0x10)(Edit, ZeroConstructor, Config, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                ExtraCDNURLPrefix;                                 // 0x40(0x10)(Edit, ZeroConstructor, Config, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                ServerListFileName;                                // 0x50(0x10)(Edit, ZeroConstructor, Config, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                FileVersion;                                       // 0x60(0x10)(Edit, ZeroConstructor, Config, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class USolarlandDownloadSetting* GetDefaultObj();

};

// 0xE8 (0x110 - 0x28)
// Class Solarland.SolarlandFileDownloader
class USolarlandFileDownloader : public UObject
{
public:
	FMulticastInlineDelegateProperty_            OnEachFileDownloaded;                              // 0x28(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnDownloadCompleted;                               // 0x38(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnEachFileDownloading;                             // 0x48(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnFileDownloadFailed;                              // 0x58(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnHashCheckFailedFileDownloader;                   // 0x68(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_2965[0x31];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bForceRedownload;                                  // 0xA9(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2966[0x2A];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        ChunkSize;                                         // 0xD4(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2967[0x38];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarlandFileDownloader* GetDefaultObj();

	void StartDownload();
	bool IsCurrentDownloading();
};

// 0x60 (0x88 - 0x28)
// Class Solarland.SolarlandPakMounter
class USolarlandPakMounter : public UObject
{
public:
	FMulticastInlineDelegateProperty_            OnMountCompleted;                                  // 0x28(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnMountFailed;                                     // 0x38(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_2968[0x39];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bMounting;                                         // 0x81(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2969[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarlandPakMounter* GetDefaultObj();

};

// 0x758 (0x890 - 0x138)
// Class Solarland.SolarLeggedVehicleMovement
class USolarLeggedVehicleMovement : public UPawnMovementComponent
{
public:
	float                                        LandingSweepTraceDistance;                         // 0x138(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LandedVFXHeightThreshold;                          // 0x13C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<enum class EPhysicalSurface, struct FVehicleVFX> JumpLandedVFXs;                                    // 0x140(0x50)(Edit, NativeAccessSpecifierPublic)
	struct FVehicleLocomotionData                LocomotionDatas[0x3];                              // 0x190(0x54)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	float                                        MaxControllableDegreeOffset;                       // 0x1E4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WalkableFloorAngle;                                // 0x1E8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GravityZ;                                          // 0x1EC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bDelayInputForOneFrame;                            // 0x1F0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableProceduralAnimation;                        // 0x1F1(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAdvancedProceduralAnimation;                      // 0x1F2(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_296C[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        StepHeight;                                        // 0x1F4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StepDistanceForward;                               // 0x1F8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StepDistanceRight;                                 // 0x1FC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StepSequencePercent;                               // 0x200(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinStepDuration;                                   // 0x204(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinDistanceToUnplant;                              // 0x208(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FixFeetTargetsAfterPercent;                        // 0x20C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FeetTipBonesRotationInterpSpeed;                   // 0x210(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_296D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRuntimeFloatCurve                    SpeedCurve;                                        // 0x218(0x88)(Edit, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                    HeightCurve;                                       // 0x2A0(0x88)(Edit, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                    BodyRelativeZCurve;                                // 0x328(0x88)(Edit, NativeAccessSpecifierPublic)
	float                                        AdditionalBodyRelativeZ;                           // 0x3B0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_296E[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UCurveVector*                          BodyRelativeRotatorCurve;                          // 0x3B8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BodyTransformLerpSpeedWithoutDriver;               // 0x3C0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TraceLength;                                       // 0x3C4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DistanceCheckMultiplier;                           // 0x3C8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RadiusCheckMultiplier;                             // 0x3CC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BodyAlignTerrainBlendSpeed;                        // 0x3D0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BodyZOffsetMultiplier;                             // 0x3D4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxBodyZOffset;                                    // 0x3D8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinBodyZOffset;                                    // 0x3DC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinBodyAlignPitchDegree;                           // 0x3E0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxBodyAlignPitchDegree;                           // 0x3E4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinBodyAlignRollDegree;                            // 0x3E8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxBodyAlignRollDegree;                            // 0x3EC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SkipIkTraceDurationWhenReceiveUpdateFromServer;    // 0x3F0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bRotateOnInput;                                    // 0x3F4(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_296F[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MinRotateDegree;                                   // 0x3F8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LerpSpeedWithinMinRotateDegree;                    // 0x3FC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DegreeForRotatePiAnimation;                        // 0x400(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DegreeForRotateHalfPiAnimation;                    // 0x404(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FFindFloorResult                      CurrentFloor;                                      // 0x408(0x94)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                        Pad_2970[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FLeggedVehiclePostPhysicsTickFunction PostPhysicsTickFunction;                           // 0x4A0(0x30)(NativeAccessSpecifierPublic)
	uint8                                        Pad_2971[0xD0];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bAlwaysCheckFloor;                                 // 0x5A0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2972[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MaxStepHeight;                                     // 0x5A4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PerchRadiusThreshold;                              // 0x5A8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PerchAdditionalHeight;                             // 0x5AC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCanWalkOffLedges;                                 // 0x5B0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIgnoreBaseRotation;                               // 0x5B1(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2973[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        LedgeCheckThreshold;                               // 0x5B4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bJumpIgnoreInput;                                  // 0x5B8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2974[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        JumpZVelocity;                                     // 0x5BC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        JumpXYVelocityOnInput;                             // 0x5C0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          JumpFailedTagForNotice;                            // 0x5C4(0x8)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        JumpFailedNoticeID;                                // 0x5CC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AirControl;                                        // 0x5D0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AirControlBoostMultiplier;                         // 0x5D4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AirControlBoostVelocityThreshold;                  // 0x5D8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FallingLateralFriction;                            // 0x5DC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MaxJumpApexAttemptsPerSimulation;                  // 0x5E0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bNotifyApex;                                       // 0x5E4(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2975[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        JumpOffJumpZFactor;                                // 0x5E8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MoveSpeedFactorForPiRotation;                      // 0x5EC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MoveSpeedFactorForHalfPiRotation;                  // 0x5F0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MinFootIKEffectorZ;                                // 0x5F4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxFootIKEffectorZ;                                // 0x5F8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2976[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FVehicleFootIKData>            FootIKDataArray;                                   // 0x600(0x10)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        IKSweepTraceRadius;                                // 0x610(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        IKEffectorBlendSpeed;                              // 0x614(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FloorAndMeshAngleForDoubleSweep;                   // 0x618(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MaxBrokenWeakPointForLocomotion;                   // 0x61C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RefreshBoneTransformTimerForDedicatedServer;       // 0x620(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2977[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FVehicleVFX>                   WeakPointParticles;                                // 0x628(0x10)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxJoyStickYaw;                                    // 0x638(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MinJoyStickYaw;                                    // 0x63C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxJoyStickPitch;                                  // 0x640(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MinJoyStickPitch;                                  // 0x644(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RotationBlendSpeed;                                // 0x648(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxFootZValueForAlignGround;                       // 0x64C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  LeaningBone;                                       // 0x650(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EAxis                             LeaningBoneForwardAxis;                            // 0x658(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2978[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        SpeedThresholdForLeaning;                          // 0x65C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LeaningAnimationBlendSpeed;                        // 0x660(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LeaningDegree;                                     // 0x664(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        BaseDegreeForLeaningDegree;                        // 0x668(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MaxSimulationIterations;                           // 0x66C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxSimulationTimeStep;                             // 0x670(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LandingTimerForAnitCheating;                       // 0x674(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        EnablePhysicsCollisionTimer;                       // 0x678(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2979[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USkeletalMeshComponent*                VehicleMesh;                                       // 0x680(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCapsuleComponent*                     UpdatedCapsule;                                    // 0x688(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ASolarVehiclePawn*                     VehiclePawn;                                       // 0x690(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USceneComponent*                       DeferredUpdatedMoveComponent;                      // 0x698(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarVehicleStateMachine*             VehicleStateMachine;                               // 0x6A0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_297A[0x1E8];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarLeggedVehicleMovement* GetDefaultObj();

	void OnPlayerGetOnVehicle(int32 GetOnSeatIndex, class ASolarCharacter* GetOnPlayer);
	void OnCapsuleComponentHit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, struct FHitResult& Hit);
	void EnableFootIK(bool bEnable, bool bResetAlpha, bool bResetStandOnStatic);
};

// 0x48 (0x2B0 - 0x268)
// Class Solarland.SolarLeggedVehicleStencilAnimInstance
class USolarLeggedVehicleStencilAnimInstance : public UAnimInstance
{
public:
	struct FVector                               FLFootIKEffectorLocation;                          // 0x268(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               FRFootIKEffectorLocation;                          // 0x274(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               BLFootIKEffectorLocation;                          // 0x280(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               BRFootIKEffectorLocation;                          // 0x28C(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FLFootIKAlpha;                                     // 0x298(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FRFootIKAlpha;                                     // 0x29C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        BLFootIKAlpha;                                     // 0x2A0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        BRFootIKAlpha;                                     // 0x2A4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class USolarLeggedVehicleAnimInstance> VehicleAnim;                                       // 0x2A8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class USolarLeggedVehicleStencilAnimInstance* GetDefaultObj();

};

// 0x20 (0x970 - 0x950)
// Class Solarland.SolarListView
class USolarListView : public UListView
{
public:
	FMulticastInlineDelegateProperty_            OnFocusLosted;                                     // 0x950(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnListViewScrolled;                                // 0x960(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class USolarListView* GetDefaultObj();

	void SetClampScoll(bool InValue);
};

// 0x8 (0x30 - 0x28)
// Class Solarland.SolarListViewItem
class USolarListViewItem : public UObject
{
public:
	uint8                                        Pad_297B[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarListViewItem* GetDefaultObj();

};

// 0x8 (0x270 - 0x268)
// Class Solarland.SolarLobbyAnimInstance
class USolarLobbyAnimInstance : public UAnimInstance
{
public:
	bool                                         bPlayIdleShow;                                     // 0x268(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bInIdleShow;                                       // 0x269(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bResetToIdle;                                      // 0x26A(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         EnableAnimSound;                                   // 0x26B(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_297C[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarLobbyAnimInstance* GetDefaultObj();

	void ShowRecommendUI(bool bVisible);
	void SetEnableAnimSound(bool InEnableAnimSound);
	void SetCharacterInIdleShow(bool IsPlayingIdleShow);
	void SetCharacterCanBeLooked(bool IsVisible);
	void ResetToIdle();
	void RefreshTick();
	void RandIdleShow();
	void LookAtFunctionSwitcher(bool bOpen);
	void KawaiiPhysicsSwitcher(bool bOpen);
	void GetCameraLocation(const class FString& ModuleCameraName);
	void ExitAnimFinish();
	void AnimPlayIdleShow(bool Enable);
};

// 0x268 (0x298 - 0x30)
// Class Solarland.SolarLobbyCharacterData
class USolarLobbyCharacterData : public UDataAsset
{
public:
	struct FSoftObjectPath                       SkinShareImage;                                    // 0x30(0x18)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                       SkinBackgroundShare;                               // 0x48(0x18)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                       Mesh;                                              // 0x60(0x18)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                       Material;                                          // 0x78(0x18)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<uint16, struct FCharacterTransformData> CharacterTransformData;                            // 0x90(0x50)(Edit, NativeAccessSpecifierPublic)
	TArray<struct FSoftObjectPath>               MaterialArray;                                     // 0xE0(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class FString, TSoftObjectPtr<class UMaterialInterface>> CharacterChangeMat;                                // 0xF0(0x50)(Edit, BlueprintVisible, UObjectWrapper, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                       AnimBlueprint;                                     // 0x140(0x18)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                       WinAnimation;                                      // 0x158(0x18)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FSoftObjectPath>               IdleShowList;                                      // 0x170(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                       LobbyIdleAnimation;                                // 0x180(0x18)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                       AccessoryBlueprint;                                // 0x198(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                       EnterAnim;                                         // 0x1B0(0x18)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                       ExitAnim;                                          // 0x1C8(0x18)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                       RefuseAnim;                                        // 0x1E0(0x18)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                       EncounterIdleAnim;                                 // 0x1F8(0x18)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FSoftObjectPath>               EncounterIdleShowList;                             // 0x210(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                       RecommendAnimBlueprint;                            // 0x220(0x18)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bParameterChanged;                                 // 0x238(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_297D[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FPSAttachElem>                 PSAttachArray;                                     // 0x240(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                       IdleShowSequence;                                  // 0x250(0x18)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                       LeftHandProp;                                      // 0x268(0x18)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                       RightHandProp;                                     // 0x280(0x18)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class USolarLobbyCharacterData* GetDefaultObj();

};

// 0x1B0 (0x438 - 0x288)
// Class Solarland.SolarLobbyCharacter
class ASolarLobbyCharacter : public APawn
{
public:
	uint8                                        Pad_2982[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UCurveVector>           DissolveCurvePath;                                 // 0x290(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UMaterialInterface>     DissolveMatPath;                                   // 0x2B8(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UCurveVector>           FresnelCurvePath;                                  // 0x2E0(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UMaterialInterface>     FresnelMatPath;                                    // 0x308(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UParticleSystem>        SwitchParticleEffectPath;                          // 0x330(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2983[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        SwitchEffectInterval;                              // 0x360(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SelfDelayShowSeconds;                              // 0x364(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2984[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAkComponent*                          AkAudioComponent;                                  // 0x370(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarAkGameObject*                    SolarAkGameObject;                                 // 0x378(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkeletalMeshComponent*                SkeletalMesh;                                      // 0x380(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkeletalMeshComponent*                MirrorSkeletalMesh;                                // 0x388(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AActor*                                LobbyAccessory;                                    // 0x390(0x8)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AActor*                                MirrorLobbyAccessory;                              // 0x398(0x8)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkeletalMeshComponent*                DissovleSkeletalMesh;                              // 0x3A0(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkeletalMeshComponent*                FresnelSkeletalMesh;                               // 0x3A8(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkeletalMeshComponent*                MirrorDissovleSkeletalMesh;                        // 0x3B0(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkeletalMeshComponent*                MirrorFresnelSkeletalMesh;                         // 0x3B8(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                    DissovleMat;                                       // 0x3C0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                    FresnelMat;                                        // 0x3C8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveVector*                          DissovleCurve;                                     // 0x3D0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveVector*                          FresnelCurve;                                      // 0x3D8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2985[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UMaterialInstanceDynamic*>      DynamicDissovleMats;                               // 0x3E8(0x10)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UMaterialInstanceDynamic*>      DynamicFresnelMats;                                // 0x3F8(0x10)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2986[0x14];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bCanPlayVoiceInIdleShow;                           // 0x41C(0x1)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bOpenMirror;                                       // 0x41D(0x1)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         CharacterIsVisiblity;                              // 0x41E(0x1)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2987[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        CurSkinId;                                         // 0x420(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        CurChunkId;                                        // 0x424(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsPlayIdleShow;                                   // 0x428(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2988[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UClass*                                AnimBPClass;                                       // 0x430(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class ASolarLobbyCharacter* GetDefaultObj();

	void UpdateLobbyAccessory(const class FString& InAccessoryPath);
	void StopPlayIdleShow();
	void StartPlaySwitchEffect();
	void StartPlayFresnelSwitchEffect();
	void StartPlayDissovleSwitchEffect();
	void SetSwitchEffetComp(class USkeletalMeshComponent* EffectComp, class USkeletalMeshComponent* DefaultComp, class UMaterialInterface* EffectMat, TArray<class UMaterialInstanceDynamic*>* DyniamEffectMats);
	void SetPropVisiable(bool IsVisiable);
	void SetMeshVisibility(bool IsVisible);
	void SetIsPlayIdleShow(bool InIsPlayIdleShow);
	void SetCharacterRotationByDelta(float InDeltaYaw);
	void SetCharacterMeshAndMat(int32 InSkinID, bool IsForce);
	void SetCharacterByLoadedData(class USolarLobbyCharacterData* InData);
	void PlayIdleShow();
	void OpenLookAtAndSetPostProcessABPCameraLocation(bool bOpen, const class FString& ModuleCameraName);
	bool IsCanOpenMirror();
	bool IsCanOpenChangeAnim();
	void InitSolarAkGameObject(class UActorComponent* Component, bool bReset);
	void InitCharacterByLua();
	class USolarAkGameObject* GetSolarAkGameObject();
	class USolarLobbyCharacterData* GetLobbySkinResourceBySkinId(int32 InSkinID, bool IsLowRes);
	bool GetIsPlayIdleShow();
	class USolarLobbyAnimInstance* GetCharAnimInstance();
	void DetachCharacterSocketPS();
	void DelayShowSelf(class USolarLobbyCharacterData* InData);
	void ClearSwitchEffect();
	void ClearCharacterByLua();
	void AttachCharacterSocketPS(TArray<struct FPSAttachElem>* PSAttachArray);
};

// 0x10 (0x5B8 - 0x5A8)
// Class Solarland.SolarLobbyPlayerController
class ASolarLobbyPlayerController : public APlayerController
{
public:
	uint8                                        Pad_2989[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASolarLobbyPlayerController* GetDefaultObj();

	void SolarGM_StartWarmup();
	int32 GetTotalFrameCount();
};

// 0x0 (0x348 - 0x348)
// Class Solarland.SolarLocalizationToolsWidget
class USolarLocalizationToolsWidget : public USolarExternalToolsWidget
{
public:

	static class UClass* StaticClass();
	static class USolarLocalizationToolsWidget* GetDefaultObj();

};

// 0x50 (0x78 - 0x28)
// Class Solarland.SolarLockSettings
class USolarLockSettings : public USaveGame
{
public:
	TMap<int32, bool>                            FeaturesLockStatus;                                // 0x28(0x50)(Edit, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class USolarLockSettings* GetDefaultObj();

	void CopyFrom(class USolarLockSettings* InLockSettings);
};

// 0x28 (0x50 - 0x28)
// Class Solarland.SolarLockSettingsMgr
class USolarLockSettingsMgr : public UObject
{
public:
	class USolarLockSettings*                    CurLockSettings;                                   // 0x28(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarGameInstanceBase*                SolarGameInstance;                                 // 0x30(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_298A[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class USolarLockSettings*                    DefaultLockSettings;                               // 0x48(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class USolarLockSettingsMgr* GetDefaultObj();

	void SaveLockSettings();
	void LoadLockSettings();
	void Init(class USolarGameInstanceBase* GameInstance);
};

// 0x8 (0x38 - 0x30)
// Class Solarland.SolarLoginManager
class USolarLoginManager : public USolarGameManager
{
public:
	uint8                                        Pad_298B[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarLoginManager* GetDefaultObj();

	void InitFromLogin();
	void Init(class USolarGameInstanceBase* GameInstance);
};

// 0x18 (0x50 - 0x38)
// Class Solarland.SolarUploaderSetting
class USolarUploaderSetting : public UDeveloperSettings
{
public:
	class FString                                SolarLogServerUrl;                                 // 0x38(0x10)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableAutoUpload;                                 // 0x48(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_298C[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarUploaderSetting* GetDefaultObj();

};

// 0xB0 (0x2D8 - 0x228)
// Class Solarland.SolarLootZone
class ASolarLootZone : public AActor
{
public:
	uint8                                        Pad_298D[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class ASolarItemSpawner*>             OwnningItemSpawners;                               // 0x230(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class ASolarItemSpawner*, struct FItemSpawnerGraphNode> SpawnerPathGraph;                                  // 0x240(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
	TArray<struct FLootZonePath>                 LootZonePathGraph;                                 // 0x290(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxRadius;                                         // 0x2A0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_298E[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<TSoftObjectPtr<class ASolarChargingPile>> OwnningChargingPiles;                              // 0x2A8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class ASolarBotSniperPosition>> OwnningSniperPosition;                             // 0x2B8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FVector>                       OwnningPOIs;                                       // 0x2C8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class ASolarLootZone* GetDefaultObj();

};

// 0x18 (0x50 - 0x38)
// Class Solarland.SolarLowMemoryDeviceSettings
class USolarLowMemoryDeviceSettings : public UDeveloperSettings
{
public:
	bool                                         EnableLowMemDevice;                                // 0x38(0x1)(Edit, ZeroConstructor, Transient, Config, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         EnableLowMemDeviceDebugMode;                       // 0x39(0x1)(Edit, ZeroConstructor, Transient, Config, DuplicateTransient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_298F[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FString>                        AdditionalCommand;                                 // 0x40(0x10)(Edit, ZeroConstructor, Transient, Config, DuplicateTransient, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class USolarLowMemoryDeviceSettings* GetDefaultObj();

};

// 0x28 (0x50 - 0x28)
// Class Solarland.SolarLuaHelper
class USolarLuaHelper : public UObject
{
public:
	uint8                                        Pad_29B0[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UDataTable*                            KeyMappingInfoDataTable;                           // 0x30(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDataTable*                            KeyMappingDisplayInfoDataTable;                    // 0x38(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FSolarPlayerReport>            SettleTeamReports;                                 // 0x40(0x10)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class USolarLuaHelper* GetDefaultObj();

	bool WriteFile(const class FString& FilePath, const class FString& Content);
	void UELogWarning(const class FString& Str);
	void UELogNetwork(const class FString& Str);
	void UELogError(const class FString& Str);
	void UELog(const class FString& Str);
	class UObject* TryLoadBySoftObjectPath(struct FSoftObjectPath& ObjectPath);
	bool TryConvertFilenameToLongPackageName(const class FString& InFilename, class FString* OutPackageName);
	void StaticSetGlobalRTPCValue(const class FString& RTPC, float Value, int32 InterpolationTimeMs);
	void StaticSetAkState(class FName StateGroup, class FName State);
	void StaticSetAkBusConfig(const class FString& BusName, enum class EAkChannelConfiguration ChannelConfiguration);
	void StaticPostAkEventByNameGlobal(const class FString& InEventName);
	int32 StaticPostAkEventByNameAndWaitForEnd(class UObject* WorldContextObject, const class FString& InEventName, const struct FLatentActionInfo& LatentInfo);
	int32 StaticPostAkEventByName(const class FString& InEventName);
	void SolarSetVSyncEnabled(bool bEnable);
	void SolarSetShadowQuality(int32 InQuality);
	void SolarSetMSAAEnabled(bool bEnable);
	void SolarSetGraphicsQuality(enum class ESolarGraphicsQualityLevel InLevel);
	void SolarSetFrameRate(enum class ESolarFrameRateLevel FrameRateLevel);
	void SolarSetColorGrading(enum class ESolarColorTheme InTheme);
	void SolarRefreshContentScaleFactorLevel();
	bool SolarGetTextureStreamingEnable();
	void SolarEnableTextureStreaming(bool bEnable);
	void SolarEnableDynamicShadow(bool bEnable);
	int32 ShouldEnterLobby();
	void SetSwitch(class USolarAkGameObject* SolarAkGameObject, const class FString& SwitchGroup, const class FString& SwitchState);
	void SetSkeletalMeshMatFromConfig(class USkeletalMeshComponent* SkeletalMeshComponent, struct FSoftObjectPath& NewMatResPath, int32 ElementIndex);
	void SetSkeletalMeshMat(class USkeletalMeshComponent* SkeletalMeshComponent, const class FString& NewMatResPath, int32 ElementIndex);
	void SetSkeletalMeshFromConfig(class USkeletalMeshComponent* SkeletalMeshComponent, struct FSoftObjectPath& NewMeshResPath);
	void SetSkeletalMesh(class USkeletalMeshComponent* SkeletalMeshComponent, const class FString& NewMeshResPath);
	void SetSkeletalAnimBPFromConfig(class USkeletalMeshComponent* SkeletalMeshComponent, struct FSoftObjectPath& NewAnimBPResPath);
	void SetSkeletalAnimBP(class USkeletalMeshComponent* SkeletalMeshComponent, const class FString& NewAnimBPResPath);
	void SetRenderBatch(int32 Mode);
	void SetPlayerSettlementReport(struct FSolarGameModeInfo& GameInfo);
	void SetPlayerNameColorByVIPState(class UTextBlock* TextWidget, uint8 VipType);
	void SetPatchBuildVersion(const class FString& Version);
	void SetEnableSoftwareCursorWidgets(bool bIsEnabled);
	void SetCurThirdPartyInfo(const class FString& InCurThirdPartyInfo);
	void SetChangeListNumber(const class FString& ChangeListNum);
	void SetActorYawByDeltaRotatedImpl(class AActor* InActor, float InDeltaYaw, bool bCheckCharaCanBeRotated);
	void SetActorYawByDelta(class AActor* InActor, float InDeltaYaw);
	void ResumeBatching();
	class UObject* ResolveSoftObjectPath(struct FSoftObjectPath& ObjectPath);
	void ResetIOSgestureRecognizers();
	void ReloadVoiceBanks();
	class FString ReadFileContent(const class FString& FilePath);
	int32 PostAkEventByName(class USolarAkGameObject* SolarAkGameObject, const class FString& InEventName);
	void PlayVoiceLocaly(int32 CharacterId, int32 SkinId, enum class EPassiveTriggeredVoice Type);
	void OnBroadcastModeChanged(bool bOpen);
	bool MoveFile(const class FString& DestFilePath, const class FString& SrcFilePath);
	class UObject* LoadObject_WithOuter(class UObject* Outer, const class FString& ObjectName);
	TArray<uint8> LoadFileToArray(const class FString& FilePath);
	bool IsWorldTearingDown();
	bool IsLocalBuild();
	bool IsInputTypeGamepad(class APlayerController* InPlayerController);
	bool IsBattlePassInfoUpdated(class ASolarPlayerState* InPlayerState);
	bool HasReviveItemManager(class UObject* InWorldContext);
	class FString HashMd5(const class FString& InputText);
	int64 GetUtcNowTimestamp();
	class FString GetTaskDesc(int32 TaskID);
	class FString GetSourceCommitHash();
	class FString GetSourceBuildVersion();
	class ASolarGameState* GetSolarGameState();
	class FString GetShortName(const class FString& LongName);
	TArray<class FString> GetServersUrlList();
	class FString GetServerEnvTag();
	struct FVector2D GetScreenSizeXY();
	class FString GetPatchBuildVersion();
	int32 GetMonsterDropItemOutcomeID(int32 MonsterAICharID, int32 StrengthGrade);
	int32 GetMonsterDeathBoxID(int32 MonsterAICharID);
	class FString GetMainBuildVersion();
	class ASolarReplayPlayerController* GetLocalSolarReplayPlayerController();
	class ASolarPlayerState* GetLocalSolarPlayerState();
	class ASolarPlayerController* GetLocalSolarPlayerController();
	class APlayerController* GetLocalPlayerController();
	struct FKey GetLeftMouseKeyDown();
	void GetKeyMappingInfoByRowName(const class FString& RowName, struct FKeyMappingRowInfo* OutClassInfo);
	class FString GetHostByDomainName(const class FString& DomainName, bool bAppendPort);
	class FString GetGameModeParam(int32 GameModeId, const class FString& Key);
	class FString GetExtBackdoorUrl();
	class UEmojiBubbleSubsystem* GetEmojiBubbleSubsystem(class USolarGameInstanceBase* GI);
	bool GetCurrentInputType(class APlayerController* InPlayerController, enum class ECommonInputType* OutInputType);
	class UCommonInputSubsystem* GetCommonInputSubsystem(class APlayerController* PlayerController);
	class FString GetClipboardPasteText();
	class FString GetChangeListNumber();
	class FString GetBuildVariation();
	class FString GetBuildMode();
	class FString GetBroadcastPlayerName(const class FString& SolarPlayerID);
	int32 GetBroadcastPlayerId(int32 PlayerId);
	class FString GetBroadcastHeroName(const class FString& SolarPlayerID);
	struct FVector GetBoneLocationByName(class USkeletalMeshComponent* SkeletalMeshComponent, class FName BoneName, enum class EBoneSpaces Space);
	class FString GetBackdoorUrl();
	class FString GetAndroidPkgName();
	TArray<class FString> GetAllLoadedPackagesPath();
	void GetAllKeyMappingInfoFromTable(TArray<struct FKeyMappingRowInfo>* OutKeyMappingInfo);
	class FString GetActualBuildVersion();
	class FString GetAbsolutePathForWrite(const class FString& FilePath);
	class FString GetAbsolutePathForRead(const class FString& FilePath);
	struct FColor FromHex(const class FString& HexString);
	TArray<class FString> FindFiles(const class FString& Directory, const class FString& FileExtension);
	void EndOfPlayInEditor(class UObject* InWorldContext, const class FString& EndReason, bool bPopMsgBox);
	void DoLuaDebug(TArray<class FString>& CmdArray);
	bool DirectoryExist(const class FString& TargetDirectory);
	bool DeleteFile(const class FString& FilePath);
	bool DeleteDirectoryRecursively(const class FString& Path);
	bool DeleteDirectory(const class FString& Path);
	class FString DecodeFile(const class FString& InFilePath);
	class ULevelStreamingDynamic* CreateStreamInstance(class UWorld* World, const class FString& PackageName);
	class AActor* CreateEmptySkeletalMeshActor();
	class UMaterialInstanceDynamic* CreateDynamicMaterial(class ACameraActor* CameraActor, const class FString& TemplateMatResPath, int32 RTSizeX, int32 RTSizeY, enum class ETextureRenderTargetFormat RenderTargetFormat);
	bool CreateDirectoryTree(const class FString& Path);
	bool CreateDirectory(const class FString& Path);
	bool CopyFile(const class FString& DestFilePath, const class FString& SrcFilePath);
	void ConvertKeyMappingName(struct FKey& Key, class FString* OutDisplayName);
	void CloseVirtualKeyboard();
	void ClipboardCopyText(const class FString& Content);
	void ClearSkeletalMeshMat(class USkeletalMeshComponent* SkeletalMeshComponent);
	bool CheckIsNeedDownLoad(int32 ChunkID);
	void ApplyVehicleSkinPreview(class UObject* PreviewVehicleObj, int32 SkinId, int32 PageType, const struct FVector& DefaultLoc);
};

// 0x0 (0x260 - 0x260)
// Class Solarland.LuaErrorWidgetBase
class ULuaErrorWidgetBase : public UUserWidget
{
public:

	static class UClass* StaticClass();
	static class ULuaErrorWidgetBase* GetDefaultObj();

	void ShowLuaError(TArray<class FString>& LuaErrorMsgs);
};

// 0xB0 (0xD8 - 0x28)
// Class Solarland.SolarLuaManager
class USolarLuaManager : public UObject
{
public:
	uint8                                        Pad_29B1[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnHandleLuaException;                              // 0x30(0x10)(BlueprintVisible, ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	uint8                                        Pad_29B2[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSoftObjectPath                       LuaErrorWidgetPath;                                // 0x50(0x18)(ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_29B3[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ULuaErrorWidgetBase*                   LuaErrorWidget;                                    // 0x70(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_29B4[0x60];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarLuaManager* GetDefaultObj();

	void SetLuaErrorPopWidget(class ULuaErrorWidgetBase* Widget);
	void OnLuaContextCleanup(bool bFullCleanup);
	enum class ESolarBuildConfiguration GetBuildConfiguration();
	void AddToDoNotShowAgainList(const class FString& Msg);
};

// 0x8 (0x30 - 0x28)
// Class Solarland.SolarMainPlayerModel
class USolarMainPlayerModel : public UObject
{
public:
	uint8                                        Pad_29B5[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarMainPlayerModel* GetDefaultObj();

	void SyncFromPlayerData(int32 InAccountFlag);
	bool IsAccountFlagOn();
};

// 0x190 (0x1C0 - 0x30)
// Class Solarland.SolarMapManager
class USolarMapManager : public USolarGameManager
{
public:
	uint8                                        Pad_29BE[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FMapData                              MapData;                                           // 0x38(0x3C)(BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FVehicleData                          VehicleData;                                       // 0x74(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FMiniMapAirlineData                   CurAirlineData;                                    // 0x84(0x30)(BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector                               AirlineActorLoc;                                   // 0xB4(0xC)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CurrentMapID;                                      // 0xC0(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_29BF[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                CurrentMapName;                                    // 0xC8(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_29C0[0x70];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UVisualSoundConfig*                    BattlePromptConfig;                                // 0x148(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGameModeGlobalSetting*                GameModeGlobalSetting;                             // 0x150(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_29C1[0x50];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FBattlePromptData                     BattlePromptData;                                  // 0x1A8(0x18)(Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class USolarMapManager* GetDefaultObj();

	struct FVector2D WorldLocationToMiniMap(const struct FVector& WorldLocation);
	float WorldLengthToMiniMap(float WorldLength);
	void UnInitMapData();
	void ReceiveInitMapData(int32 MapID);
	struct FVector2D Normal2D(const struct FVector2D& VectorToTransForm);
	struct FVector MiniMapToWorldLocation(const struct FVector2D& PositionXY, float Z);
	bool IsOutOfBound(const struct FVector2D& PlayerNavPos);
	bool IsMiniMapAirlineDataValid(struct FMiniMapAirlineData& InData);
	void InitMapData(int32 MapID);
	class ASolarCharacter* GetViewportFocusedCharacter();
	bool GetSafeAreaInfo(struct FSafeAreaMapInfo* OutAreaInfo);
	struct FVector GetRandomVectorFromMapDarkData(class UObject* WorldContextObject, enum class EMapDarkDataType InType, bool GetWhiteArea);
	class UCurveFloat* GetMiniMapFOVCurve(float InRadius);
	int32 GetLenegthFromPlayerToMarkPoint(const struct FVector& MarkPosRealWorld, const struct FVector& CurrentPlayerLocation);
	bool GetIntersectionOnMapFrame(const struct FVector2D& TeamMatePos, const struct FVector2D& MapAPos, float MapFrameHeight, float MapFrameWidth, struct FVector2D* InterSecionList, enum class EDirection* CrossDirection);
	float GetDistanceToSafeArea(struct FSafeAreaMapInfo& AreaInfo, struct FVector& FromLocation);
	int32 GetCurrentMapID();
	struct FMiniMapAirlineData GetCurAirlineData();
	class UVisualSoundConfig* GetBattlePromptConfig();
	struct FVector2D FixNavPos(const struct FVector2D& PlayerNavPos);
	bool CheckMapDarkDataWithVector(const struct FVector& InVector, enum class EMapDarkDataType InType, bool GetWhiteArea);
	bool CheckIfMarkedPointValid(struct FVector2D& InMarkedPoint);
	float CalculatePoisonDistance(struct FSafeAreaMapInfo& AreaInfo, struct FVector& FromLocation);
};

// 0x138 (0x3D0 - 0x298)
// Class Solarland.SolarMapSelectPoint
class ASolarMapSelectPoint : public ASolarMapElementBase
{
public:
	int32                                        MapID;                                             // 0x298(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMapSelectPointCellConfig             MapCellConfig;                                     // 0x29C(0x14)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	TSubclassOf<class UMapSelectPointNoticeMap>  SelectPointNoticeMapWidgetClass;                   // 0x2B0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UMapSelectPointCellWidget> CellWidgetClass;                                   // 0x2B8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarMapManager*                      MapManager;                                        // 0x2C0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USolarGameMode_ElementManager*         ElementManager;                                    // 0x2C8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMapSelectPointNoticeMap*              SelectPointNoticeMap;                              // 0x2D0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<class FString, class UMapSelectPointCellWidget*> WidgetInCells;                                     // 0x2D8(0x50)(ExportObject, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                        Pad_29C7[0x50];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<class FString, struct FMapSelectPointCellData> AllCellsData;                                      // 0x378(0x50)(NativeAccessSpecifierPrivate)
	uint8                                        Pad_29C8[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASolarMapSelectPoint* GetDefaultObj();

	void SetCellSelectionAccess(struct FMapSelectPointCellAddress& InCellAdr, enum class EMapCellSelectionAccess InNewState);
	void ServerSetCellSelectionAccess(const class FString& InAddress, enum class EMapCellSelectionAccess InNewState);
	void OnNoticeMapInitialized();
	void OnInitSelectPoint(int32 InMapID);
	void OnCellBeSelected(struct FMapSelectPointCellAddress& CellAddress, bool IsSelected);
	void InitSelectPointData();
	class UUserWidget* GetWidgetInCell(struct FMapSelectPointCellAddress& InCellAdr);
	class UUserWidget* GetSelectPointNoticeMapWidget();
	TArray<class ASolarPlayerStart*> GetPlayerStartsInCell(struct FMapSelectPointCellAddress& InCellAdr, TArray<class FString>& InTags);
	enum class EMapCellSelectionAccess GetCellSelectState(struct FMapSelectPointCellAddress& InCellAdr);
	bool GetCellPositionOnBigMap(struct FMapSelectPointCellAddress& InCellAdr, struct FVector2D* LU_Pos, struct FVector2D* RD_Pos);
};

// 0x28 (0x50 - 0x28)
// Class Solarland.SolarMapVehicleObject
class USolarMapVehicleObject : public UObject
{
public:
	TSoftObjectPtr<class UTexture2D>             SoftVehicleIcon;                                   // 0x28(0x28)(UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class USolarMapVehicleObject* GetDefaultObj();

};

// 0x10 (0x358 - 0x348)
// Class Solarland.SolarMapVehicleTabSlot
class USolarMapVehicleTabSlot : public USolarUserWidget
{
public:
	uint8                                        Pad_29C9[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UImage*                                Img_Car;                                           // 0x350(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class USolarMapVehicleTabSlot* GetDefaultObj();

	void SetEmpty(bool bEmpty);
};

// 0x78 (0x3C0 - 0x348)
// Class Solarland.SolarMapVehicleWidget
class USolarMapVehicleWidget : public USolarUserWidget
{
public:
	class UButton*                               Btn_EnableTaskPanel;                               // 0x348(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTileView*                             VehicleList;                                       // 0x350(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bExpand;                                           // 0x358(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_29CA[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<int32, TSoftObjectPtr<class UTexture2D>> VehicleSpawnerTypeIcons;                           // 0x360(0x50)(Edit, Transient, UObjectWrapper, NativeAccessSpecifierPublic)
	TArray<class UObject*>                       MapVehicleObjects;                                 // 0x3B0(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class USolarMapVehicleWidget* GetDefaultObj();

	void SetExpand(bool bInExpand);
	void OnBtnEnableTaskPanelClicked();
	void InitVehicleList();
};

// 0x0 (0x28 - 0x28)
// Class Solarland.SolarMath
class USolarMath : public UObject
{
public:

	static class UClass* StaticClass();
	static class USolarMath* GetDefaultObj();

	float Clamp01(float Value);
};

// 0x20 (0x50 - 0x30)
// Class Solarland.SolarMetaAttributeSet
class USolarMetaAttributeSet : public USolarAttributeSet
{
public:
	struct FGameplayAttributeData                Damage;                                            // 0x30(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                ShieldDamage;                                      // 0x40(0x10)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class USolarMetaAttributeSet* GetDefaultObj();

};

// 0x68 (0x290 - 0x228)
// Class Solarland.MobilePlatform
class AMobilePlatform : public AActor
{
public:
	class USplineComponent*                      SplineComponent;                                   // 0x228(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  MeshComponent;                                     // 0x230(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FMobilePlatformSplinePoint>    PointInfos;                                        // 0x238(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ConfigDefaultSpeed;                                // 0x248(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ConfigDefaultDelayTime;                            // 0x24C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CurrentSpeed;                                      // 0x250(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CurrentDistance;                                   // 0x254(0x4)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TotalDistance;                                     // 0x258(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DelayTime;                                         // 0x25C(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        PointNum;                                          // 0x260(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        PointIndex;                                        // 0x264(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               MoveVecter;                                        // 0x268(0xC)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               MeshExtend;                                        // 0x274(0xC)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_29CE[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AMobilePlatform* GetDefaultObj();

	void UpdateRotation(float DeltaSeconds);
	void UpdateOverlapActor(float DeltaSeconds, class AActor* InActor);
	void UpdateLocation(float DeltaSeconds);
	void UpdateCurrentDistance(float DeltSeconds);
	void OnEnterPoint();
	void OnEndOverlap(class AActor* ThisActor, class AActor* OtherActor);
	void OnBeginOverlap(class AActor* ThisActor, class AActor* OtherActor);
	void Init();
	class UShapeComponent* GetCollisionComponent();
	bool CheckNeedOverlap(float DeltaSeconds, class AActor* InActor);
};

// 0x28 (0x68 - 0x40)
// Class Solarland.SolarModMagnitudeCalc
class USolarModMagnitudeCalc : public UGameplayModMagnitudeCalculation
{
public:
	TSubclassOf<class UModMagnitudeCalcProxy>    CDOProxyClass;                                     // 0x40(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UModMagnitudeCalcProxy*                CDOProxy;                                          // 0x48(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_29CF[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarModMagnitudeCalc* GetDefaultObj();

};

// 0x68 (0x98 - 0x30)
// Class Solarland.SolarMoveToCostSecAction
class USolarMoveToCostSecAction : public UBlueprintAsyncActionBase
{
public:
	uint8                                        Pad_29D2[0x48];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnCalcMoveToCostSuc;                               // 0x78(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnCalcMoveToCostFailed;                            // 0x88(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class USolarMoveToCostSecAction* GetDefaultObj();

	class USolarMoveToCostSecAction* CalcMoveToCostSec(class UObject* WorldContextObject, class ASolarBotAIController* BotController, const struct FVector& MoveToLocation, class AActor* MoveToActor, float AcceptRadius, bool bAllowPartialPath, bool bProjectGoalLocation);
};

// 0x0 (0x48 - 0x48)
// Class Solarland.SolarNavArea_Jet
class USolarNavArea_Jet : public UNavArea
{
public:

	static class UClass* StaticClass();
	static class USolarNavArea_Jet* GetDefaultObj();

};

// 0x0 (0x48 - 0x48)
// Class Solarland.SolarNavArea_Vault
class USolarNavArea_Vault : public UNavArea
{
public:

	static class UClass* StaticClass();
	static class USolarNavArea_Vault* GetDefaultObj();

};

// 0x0 (0x48 - 0x48)
// Class Solarland.SolarNavArea_Water
class USolarNavArea_Water : public UNavArea
{
public:

	static class UClass* StaticClass();
	static class USolarNavArea_Water* GetDefaultObj();

};

// 0x18 (0x290 - 0x278)
// Class Solarland.SolarNavLink_Jet
class ASolarNavLink_Jet : public ANavLinkProxy
{
public:
	float                                        JetTimeout;                                        // 0x278(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bNoFail;                                           // 0x27C(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bMarkInValidAfterFailedUse;                        // 0x27D(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_29D3[0x12];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASolarNavLink_Jet* GetDefaultObj();

};

// 0x28 (0x2A0 - 0x278)
// Class Solarland.SolarNavLink_Vault
class ASolarNavLink_Vault : public ANavLinkProxy
{
public:
	float                                        VaultTimeOut;                                      // 0x278(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bNoFail;                                           // 0x27C(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bMarkInValidAfterFailedUse;                        // 0x27D(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_29D4[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MaxDistancePrecision;                              // 0x280(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_29D5[0x1C];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASolarNavLink_Vault* GetDefaultObj();

};

// 0x10 (0x1A0 - 0x190)
// Class Solarland.SolarNavLinkCustomComponent
class USolarNavLinkCustomComponent : public UNavLinkCustomComponent
{
public:
	uint8                                        Pad_29D6[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarNavLinkCustomComponent* GetDefaultObj();

};

// 0x18 (0x290 - 0x278)
// Class Solarland.SolarNavLinkManager
class ASolarNavLinkManager : public ANavLinkProxy
{
public:
	class USolarNavLinkRegisterComponent*        SolarSmartLinkComp;                                // 0x278(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_29D7[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASolarNavLinkManager* GetDefaultObj();

};

// 0xD0 (0x260 - 0x190)
// Class Solarland.SolarNavLinkRegisterComponent
class USolarNavLinkRegisterComponent : public UNavLinkCustomComponent
{
public:
	TMap<uint32, struct FSmartLinkInstance>      SmartLinkMap;                                      // 0x190(0x50)(Edit, EditConst, NativeAccessSpecifierPublic)
	uint8                                        Pad_29D8[0x50];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	enum class ENavLinkType                      LinkType;                                          // 0x230(0x1)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_29D9[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               VaultPoint;                                        // 0x234(0xC)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               VaultDirect;                                       // 0x240(0xC)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EVaultType                        VaultAnimate;                                      // 0x24C(0x1)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_29DA[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               VaultLandPoint;                                    // 0x250(0xC)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_29DB[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarNavLinkRegisterComponent* GetDefaultObj();

};

// 0x10 (0x150 - 0x140)
// Class Solarland.SolarNavModifierComponent
class USolarNavModifierComponent : public UNavModifierComponent
{
public:
	uint8                                        Pad_29DF[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarNavModifierComponent* GetDefaultObj();

	void OnVehicleRootHit(class UPrimitiveComponent* HitComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, struct FHitResult& Hit);
	void OnDriverGetOnVehicle(int32 GetOnSeatIndex, class ASolarCharacter* GetOnPlayer);
	void OnDriverGetOffVehicle(int32 GetOffSeatIndex, class ASolarCharacter* GetOffPlayer);
};

// 0x8 (0x50 - 0x48)
// Class Solarland.SolarNavQueryFilter
class USolarNavQueryFilter : public UNavigationQueryFilter
{
public:
	uint32                                       MaxSearchNode;                                     // 0x48(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_29E0[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarNavQueryFilter* GetDefaultObj();

};

// 0x0 (0x50 - 0x50)
// Class Solarland.SolarNavQueryFilter_ExcludeJet
class USolarNavQueryFilter_ExcludeJet : public USolarNavQueryFilter
{
public:

	static class UClass* StaticClass();
	static class USolarNavQueryFilter_ExcludeJet* GetDefaultObj();

};

// 0x0 (0x50 - 0x50)
// Class Solarland.SolarNavQueryFilter_JetInvalid
class USolarNavQueryFilter_JetInvalid : public USolarNavQueryFilter
{
public:

	static class UClass* StaticClass();
	static class USolarNavQueryFilter_JetInvalid* GetDefaultObj();

};

// 0x20 (0x248 - 0x228)
// Class Solarland.SolarNavWeedActor
class ASolarNavWeedActor : public ATargetPoint
{
public:
	uint8                                        Pad_29E1[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASolarNavWeedActor* GetDefaultObj();

};

// 0x5F0 (0x6A0 - 0xB0)
// Class Solarland.SolarNetMovementComponent
class USolarNetMovementComponent : public UActorComponent
{
public:
	uint8                                        Pad_29E2[0x34];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        InterpolatedBackTime;                              // 0xE4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        ServerBufferCheckMinSpeed;                         // 0xE8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        ServerBufferIgnoreCheckTimer;                      // 0xEC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        AtRestThresholdCount;                              // 0xF0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EExtrapolationMode                ExtrapolationMode;                                 // 0xF4(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bUseExtrapolationTimeLimit;                        // 0xF5(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_29E3[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ExtrapolationTimeLimit;                            // 0xF8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bUseExtrapolationDistanceLimit;                    // 0xFC(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_29E4[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ExtrapolationDistanceLimit;                        // 0x100(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        SendPositionThreshold;                             // 0x104(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        SendRotationThreshold;                             // 0x108(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        SendVelocityThreshold;                             // 0x10C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        SendAngularVelocityThreshold;                      // 0x110(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        ResetTimeOffsetsThreshold;                         // 0x114(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        UsingRepLocationThreshold;                         // 0x118(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        LinearVelcolityForPositionThreshold;               // 0x11C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        ReceivedPositionThreshold;                         // 0x120(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        AngularVelocityForRotationThreshold;               // 0x124(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        ReceivedRotationThreshold;                         // 0x128(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        PositionSnapThreshold;                             // 0x12C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        RotationSnapThreshold;                             // 0x130(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        PositionLerpSpeed;                                 // 0x134(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        RotationLerpSpeed;                                 // 0x138(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        SpeedOfLerp;                                       // 0x13C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class ESyncMode                         SyncPosition;                                      // 0x140(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class ESyncMode                         SyncRotation;                                      // 0x141(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class ESyncMode                         SyncVelocity;                                      // 0x142(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class ESyncMode                         SyncAngularVelocity;                               // 0x143(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bSyncDesiredYaw;                                   // 0x144(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         IsPositionCompressed;                              // 0x145(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         IsRotationCompressed;                              // 0x146(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         IsVelocityCompressed;                              // 0x147(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         IsAngularVelocityCompressed;                       // 0x148(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_29E5[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        SendRate;                                          // 0x14C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        TimeSmoothing;                                     // 0x150(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bUsingOriginRebasing;                              // 0x154(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bAlwaysSendOrigin;                                 // 0x155(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_29E6[0x3A];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UPrimitiveComponent*                   PrimitiveComponent;                                // 0x190(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USceneComponent*                       RelativeComponent;                                 // 0x198(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ASolarVehiclePawn*                     PreviousBaseVehicleActor;                          // 0x1A0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_29E7[0x368];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        AtRestPositionThreshold;                           // 0x510(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        AtRestRotationThreshold;                           // 0x514(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_29E8[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class ASolarVehiclePawn*                     VehiclePawn;                                       // 0x528(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_29E9[0x170];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarNetMovementComponent* GetDefaultObj();

};

// 0x198 (0x578 - 0x3E0)
// Class Solarland.SolarNightComesActor
class ASolarNightComesActor : public ASummonItemBase
{
public:
	float                                        BeginEffectDuration;                               // 0x3E0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        OngoingEffectDuration;                             // 0x3E4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        OngoingEffectClearDelay;                           // 0x3E8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        EndEffectDuration;                                 // 0x3EC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        VisualEffectBeginDelay_AfterBeginEffect;           // 0x3F0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        VisualEffectEndDelay_AfterEndEffect;               // 0x3F4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                       BeginEffect;                                       // 0x3F8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                       OngoingEffect;                                     // 0x400(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                       EndEffect;                                         // 0x408(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                       ItemEffect;                                        // 0x410(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                       ItemExplodeEffect;                                 // 0x418(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                       ItemDisappearEffect;                               // 0x420(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        EffectRadius;                                      // 0x428(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        NightfellRadius;                                   // 0x42C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        NightFellRadius_WithBuff;                          // 0x430(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        NightFellCapacity;                                 // 0x434(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        NightfellFadeness;                                 // 0x438(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_29EC[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UCurveFloat*                           ItemFellRadiusCurve;                               // 0x440(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bShowDebug;                                        // 0x448(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bOpenVisualFell;                                   // 0x449(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_29ED[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        UpdateEffectingCharacterInterval;                  // 0x44C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  StaticMeshCollision;                               // 0x450(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkeletalMeshComponent*                ItemSkeletalMesh;                                  // 0x458(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               EffectScale;                                       // 0x460(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_29EE[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAnimationAsset*                       StartAnim;                                         // 0x470(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                StartLoopSound;                                    // 0x478(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                EndLoopSound;                                      // 0x488(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                EnterSound;                                        // 0x498(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                ExitSound;                                         // 0x4A8(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                ExplodeSound;                                      // 0x4B8(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                HitBy1pSound;                                      // 0x4C8(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MeshVisibleDelay;                                  // 0x4D8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        PerspectiveMeshSortPriority;                       // 0x4DC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                    StencilMaterial;                                   // 0x4E0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UGameplayEffect>           NightComesContinousEffect;                         // 0x4E8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ENightComesState                  CurrentState;                                      // 0x4F0(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_29EF[0x37];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UParticleSystemComponent*              BeginEffectHandle;                                 // 0x528(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystemComponent*              OngingEffectHandle;                                // 0x530(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystemComponent*              EndEffectHandle;                                   // 0x538(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystemComponent*              ItemEffectHandle;                                  // 0x540(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ASolarCharacter*                       InstigatorCharacter;                               // 0x548(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_29F0[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AActor*>                        EffectingActors;                                   // 0x560(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_29F1[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASolarNightComesActor* GetDefaultObj();

	void OnRep_NightComesState();
	void OnMeshVisible();
	void OnGoingPhase();
	void OnEndPhase();
	void OnComponentEndOverlap(class UPrimitiveComponent* OverlappedComp, class AActor* Other, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void OnComponentBeginOverlap(class UPrimitiveComponent* OverlappedComp, class AActor* Other, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	void OnBeginPhase();
	void LocalRemoveSelf();
	void EndVisualEffect();
	void BeginVisualEffect();
};

// 0x28 (0x9E0 - 0x9B8)
// Class Solarland.SolarNoSpringCameraComponent
class USolarNoSpringCameraComponent : public USolarCameraComponent
{
public:
	uint8                                        Pad_29F2[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarNoSpringCameraComponent* GetDefaultObj();

};

// 0x18 (0x4E0 - 0x4C8)
// Class Solarland.SolarNPC
class ASolarNPC : public ACharacter
{
public:
	class USphereComponent*                      InteractionCollision;                              // 0x4C8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ASolarCharacter*                       LookAtPlayer;                                      // 0x4D0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LookYaw;                                           // 0x4D8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_29F3[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASolarNPC* GetDefaultObj();

};

// 0x18 (0x418 - 0x400)
// Class Solarland.SolarObjGameplayAbility
class USolarObjGameplayAbility : public UGameplayAbility
{
public:
	TSubclassOf<class UGameplayEffect>           ActivateEffect;                                    // 0x400(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CostEnergy;                                        // 0x408(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_29F4[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarObjGameplayAbility* GetDefaultObj();

	class ASolarInteractableActor* GetAbilityInstigator();
	class AActor* GetAbilityEffectUser();
};

// 0x10 (0x428 - 0x418)
// Class Solarland.SolarObjAbilityRadar
class USolarObjAbilityRadar : public USolarObjGameplayAbility
{
public:
	TSubclassOf<class ASolarRadarBase>           RadarClass;                                        // 0x418(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LifeTime;                                          // 0x420(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_29F5[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarObjAbilityRadar* GetDefaultObj();

	void K2_ApplyRadarAbility(class ASolarRadarBase* SpawnedRadar);
};

// 0x50 (0x1348 - 0x12F8)
// Class Solarland.SolarObjAbilitySystemComponent
class USolarObjAbilitySystemComponent : public UAbilitySystemComponent
{
public:
	uint8                                        Pad_29F6[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTagContainer                 NotifyTags;                                        // 0x1308(0x20)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                 RepNotifiedTags;                                   // 0x1328(0x20)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class USolarObjAbilitySystemComponent* GetDefaultObj();

	void OnRep_RepNotifiedTags(struct FGameplayTagContainer& Previous);
};

// 0xA0 (0xD0 - 0x30)
// Class Solarland.SolarObjectPoolManager
class USolarObjectPoolManager : public UGameInstanceSubsystem
{
public:
	TMap<class FName, struct FObjectArray>       CachedMap;                                         // 0x30(0x50)(Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_29F8[0x50];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarObjectPoolManager* GetDefaultObj();

	TArray<class UObject*> PushObjectArray(const TArray<class UObject*>& ObjectArray, class FName Tag);
	bool PushObject(class UObject* Object, class FName Tag);
	class UObject* PopObjectByTag(class FName Tag);
	class USolarObjectPoolManager* Get(class UObject* WorldContextObject);
	void CleanUp();
};

// 0xC0 (0xE8 - 0x28)
// Class Solarland.SolarOBUIModel
class USolarOBUIModel : public UObject
{
public:
	uint8                                        Pad_29F9[0x60];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnAnyTeamKillCountChanged;                         // 0x88(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_29FA[0x50];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarOBUIModel* GetDefaultObj();

	void SimpleDynamicMulticastDelegate__DelegateSignature();
	void RegisterEvents();
	void OnTeamSettled(class ASolarTeamInfo* Team);
	void OnTeamKillCountChanged(class ASolarTeamInfo* TeamInfo);
	void OnSpectateTargetChanged(class ASolarPlayerState* OldTarget, class ASolarPlayerState* NewTarget);
	void OnRemainTeamsCountChanged(uint8 TeamsCount);
	void OnRemainPlayersCountChanged(uint8 PlayersCount);
	void OnPlayingScrubCharactersCreated();
	void OnPlayerLeaveTeam(class ASolarTeamInfo* TeamInfo, class ASolarPlayerState* PlayerState);
	void OnPlayerKillCountChanged(class ASolarPlayerState* InPlayerState);
	void OnPlayerJoinTeam(class ASolarTeamInfo* TeamInfo, class ASolarPlayerState* PlayerState);
	void OnCheatersPlayerIDChanged();
	void Init();
};

// 0x40 (0x68 - 0x28)
// Class Solarland.SolarOperationUIElement
class USolarOperationUIElement : public UObject
{
public:
	TArray<struct FOperationUIElement>           CharacterOperationUI;                              // 0x28(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FOperationUIElement>           DirectionOperationUI;                              // 0x38(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FOperationUIElement>           SteeringOperationUI;                               // 0x48(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FOperationUIElement>           JoyStickOperationUI;                               // 0x58(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class USolarOperationUIElement* GetDefaultObj();

};

// 0x0 (0x228 - 0x228)
// Class Solarland.SolarOrnamentChildActor
class ASolarOrnamentChildActor : public AActor
{
public:

	static class UClass* StaticClass();
	static class ASolarOrnamentChildActor* GetDefaultObj();

};

// 0x58 (0x280 - 0x228)
// Class Solarland.SolarOrnamentHackerBall
class ASolarOrnamentHackerBall : public ASolarOrnamentChildActor
{
public:
	class ASolarCharacter*                       OwnerCharacter;                                    // 0x228(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkeletalMeshComponent*                OwnerMeshComp;                                     // 0x230(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  SoftAttachBoneName;                                // 0x238(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  SoftAttachSecondBoneName;                          // 0x240(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_29FB[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            AttachRelativeTransform;                           // 0x250(0x30)(Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class ASolarOrnamentHackerBall* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Solarland.SolarPawn
class ISolarPawn : public IInterface
{
public:

	static class UClass* StaticClass();
	static class ISolarPawn* GetDefaultObj();

};

// 0x1B0 (0x330 - 0x180)
// Class Solarland.SolarPerceptionComponent
class USolarPerceptionComponent : public UAIPerceptionComponent
{
public:
	struct FSolarBotThreatConfig                 DefaultThreatConfig;                               // 0x180(0x6C)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_2A02[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<enum class EPerceivableEffectAreaType, TSubclassOf<class AActor>> ConfigAreaTypeIdentifyMap;                         // 0x1F0(0x50)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	struct FPerceivableEAInfluenceConfig         EffectAreasInfluenceConfig;                        // 0x240(0x60)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	float                                        MaxInfluenceRadius;                                // 0x2A0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SmokeGrenadeAffectRadius;                          // 0x2A4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        EnergyBubbleAffectRadius;                          // 0x2A8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SummonWallAffectRadius;                            // 0x2AC(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        UAVShieldAffectRadius;                             // 0x2B0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        UAVRescueAffectRadius;                             // 0x2B4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bTargetSelectEnabled;                              // 0x2B8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2A03[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FName>                          ForbiddenTags;                                     // 0x2C0(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2A04[0x38];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        MaxNumCachedDamage;                                // 0x308(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2A05[0x24];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarPerceptionComponent* GetDefaultObj();

	void UpdateSenseConfig(float NewSightRadius);
	void SetTargetSelectEnabled(bool bInEnable);
	void SetForbiddenTags(TArray<class FName>& Tags, bool bCleanExists);
	void OnBotPerceptionUpdated(class AActor* Actor, const struct FAIStimulus& Stimulus);
	bool IsInEffectAreaOfType(enum class EPerceivableEffectAreaType Type, class AActor* InTestActor);
	bool IsInAnyEffectArea(TArray<struct FPerceivableEffectArea>* ActiveEffectAreas, class AActor* InTestActor);
	float GetTargetCurrentThreatValue(class ASolarCharacter* ThreatTarget);
	void ClearCurrentThreat(bool bCleanBestTarget);
};

// 0x4F0 (0xA50 - 0x560)
// Class Solarland.SolarPickupComponent
class USolarPickupComponent : public UCapsuleComponent
{
public:
	class ASolarCharacter*                       OwnerChar;                                         // 0x560(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A1A[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        PickUpHighlyThresholdFactor;                       // 0x570(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A1B[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bWantedClearItemData;                              // 0x575(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2A1C[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<enum class EPickupItemType, class USolarPickupHandlerBase*> PickupHandlerMap;                                  // 0x578(0x50)(Transient, NativeAccessSpecifierPublic)
	class USolarPickupHandlerBase*               NormalPickupHandler;                               // 0x5C8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         GlobalPickup;                                      // 0x5D0(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A1D[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TWeakObjectPtr<class AAirDropTreasureBox>    TagetAirDropBox;                                   // 0x5D4(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2A1E[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FActorArrayMap                        NormalPickupItems;                                 // 0x5E8(0x50)(Protected, NativeAccessSpecifierProtected)
	TArray<class AActor*>                        ProccessedList;                                    // 0x638(0x10)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class AActor*>                        SortedPickupActors;                                // 0x648(0x10)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bPickupListVisible;                                // 0x658(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bPickupListCollapsed;                              // 0x659(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2A1F[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UUIManager*                            UIManager;                                         // 0x660(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarItemManager*                     ItemManager;                                       // 0x668(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2A20[0x52];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         GlobalAutoPickup;                                  // 0x6C2(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2A21[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        UnAutoPickupItemTime;                              // 0x6C4(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AutoPickupTime;                                    // 0x6C8(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2A22[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         StopAutoPickupWhenClose;                           // 0x6D0(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bReqPickItem;                                      // 0x6D1(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2A23[0x1A];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bPickupCheckBoxOpen;                               // 0x6EC(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2A24[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTimerHandle                          AutoPickupTimer;                                   // 0x6F0(0x8)(NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2A25[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnItemDataSet;                                     // 0x728(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            UpdateCheckBoxesVisibility;                        // 0x738(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnUpdateCheckBoxesHighLight;                       // 0x748(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnUpdateCheckBoxesStates;                          // 0x758(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnPickupListClear;                                 // 0x768(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnTogglePickupList;                                // 0x778(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                         ListenFireReslutFlag;                              // 0x788(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A26[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DelayedDisplayTime;                                // 0x78C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTimerHandle                          AutoShowPickupListHandle;                          // 0x790(0x8)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTimerHandle                          DelayProcessFireResultHandle;                      // 0x798(0x8)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTimerHandle                          EnsuredAutoShowHandle;                             // 0x7A0(0x8)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                        FireResultMsgs;                                    // 0x7A8(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A27[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<TWeakObjectPtr<class ADeathTreasureBox>> NearByDeathboxes;                                  // 0x7C8(0x10)(ZeroConstructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class ADeathTreasureBox>      NearestResurrectBox;                               // 0x7D8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         LastResurrecteBtnVisbile;                          // 0x7E0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2A28[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        CheckResurrectInterval;                            // 0x7E4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TempResurrectInterval;                             // 0x7E8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CheckStopResurrectInterval;                        // 0x7EC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TempStopResurrectInterval;                         // 0x7F0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2A29[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        PickupRecommendPriority;                           // 0x7F8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2A2A[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<enum class EItemType, int32>            ItemPriorityMap;                                   // 0x800(0x50)(Protected, NativeAccessSpecifierProtected)
	TMap<enum class EItemType, int32>            ItemMutiPickupMap;                                 // 0x850(0x50)(Protected, NativeAccessSpecifierProtected)
	TMap<enum class EWeaponPartType, int32>      WeaponPartPriorityMap;                             // 0x8A0(0x50)(Protected, NativeAccessSpecifierProtected)
	TMap<int32, int32>                           WeaponPartIDPriorityMap;                           // 0x8F0(0x50)(Protected, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class AActor>                 PendingFirstItemActor;                             // 0x940(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2A2B[0x108];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarPickupComponent* GetDefaultObj();

	void UpdateResurrection(float InDeltaTime);
	void UpdateItemUI(bool bForce);
	void UpdateCheckboxSwitches(bool InPickupOpen);
	void TryReqPickupItem(class ASolarItemActor* ItemActor, bool IsAutoPickup, int32 TargetIndex);
	void TryPickupTreasureItem(class ASolarTreasureBoxActor* PickActor, struct FSolarItemData& ItemData);
	void TryPickupItem(class AActor* PickActor);
	bool TryOpenAirDropTreasureBox(class AAirDropTreasureBox* AirDropTreasureBox);
	void TryClearDirtyData(bool bForce);
	bool TryCancelOpenAirDropTreasureBox(class AAirDropTreasureBox* AirDropTreasureBox);
	void TogglePickupList(bool InVisibility);
	void StopListenFireInput(bool bIsInstantlyStop);
	void StopAutoPickupTimer();
	void StartListenFireInput();
	void StartAutoPickupTimer();
	bool ShouldPickupTreasureBoxItem(class ASolarTreasureBoxActor* InTreasureBox);
	void SetStopAutoPickupWhenClose(bool InStopAutoPickupWhenClose);
	void SetPickupSwitchInLua(bool IsOpen);
	void SetPickupSwitch(bool IsOpen);
	void SetPickupListVisibility(bool InVisibility);
	void SetPickupCapsuleSize(struct FVector& Size);
	void SetAutoPickupSwitch(bool InCanAutoPickup);
	void RestartPickupTimer();
	void ReqPickupWeapon(class AActor* WeaponData, bool IsAutoPickup);
	void ReqPickupTreasureItem(class ASolarTreasureBoxActor* TreasureBox, int64 ItemThisID, bool IsAutoPickup, int32 TargetIndex, enum class EItemType InItemType, bool bSorted);
	void ReqPickupItem(class ASolarItemActor* ItemActor, bool IsAutoPickup, int32 TargetIndex);
	void ReqOpenTreasureBox(class ASolarTreasureBoxActor* TreasureBox);
	void RemoveNearbyDeathbox(class ADeathTreasureBox* InDeathBox);
	void RefreshResurrectBtn();
	void RefreshPickupTimer();
	void RefreshItemUI();
	void RecheckPendingActors();
	void ReceiveFireResult(const class FString& InFireResultMsg);
	void ProcessFireResultMsgs();
	void OnWeaponUpgrade(class ASolarPlayerWeapon* InWeapon);
	void OnWeaponSlotEquip(int32 InWeaponSlotID, class ASolarPlayerWeapon* InWeapon);
	void OnUsingSkillStatusChanged();
	void OnUpdateItemUIDataChanged(class UObject* Object, int32 OldItemID, int32 NewItemID);
	void OnTreasureBoxStateChange(int64 ThisID, enum class ETreasureBoxState State);
	void OnPickupSettingChanged();
	void OnPickupConfirmHandle();
	void OnPickupActorEnd(class AActor* ItemActor);
	void OnPickupActorBegin(class AActor* ItemActor);
	void OnEquipChanged();
	void OnCharacterDeathBegin();
	void OnActorDestroyed(class AActor* Actor);
	void MarkDirtyForTick();
	bool IsValidItemActor(class AActor* ItemActor);
	bool IsNeedReplace(enum class EItemType InType, struct FSolarItemData& InItemData);
	bool IsEquipItem(enum class EItemType InType);
	bool IsCharacterInAir();
	void InitPickupPriorityMaps();
	struct FSolarItemData GetTreasureItemDataByThisID(class ASolarTreasureBoxActor* TreasureBox, int64 ItemThisID);
	int32 GetPickupWeaponPartTypePriority(struct FSolarItemData& InItemData);
	int32 GetPickupTypePriority(enum class EItemType InItemType);
	class AActor* GetPickupTreasureBoxActor();
	int32 GetPickupPriority(struct FSolarItemData& InItemType);
	class ADeathTreasureBox* GetNearestResurrectBox();
	TMap<int32, struct FActorArray> GetItemDataMap();
	int32 GetItemDataCount(enum class EPickupItemType PickupItemType);
	bool GetIsGlobalPickup();
	bool GetIsAutoPickupHomeItems();
	void DoStopOpeningAirDropBox();
	void DoOpenAirDropBox();
	void DetectNearestResurrectTarget();
	void CloseItemUI();
	void ClearAutoShowPickupListHandle();
	void ClearAllTimer();
	void CheckToShowConfirm(struct FSolarItemData& ItemData);
	bool CheckIsItemMaximizing(int32 ItemID);
	bool CanResurrectOwner(class ADeathTreasureBox* InDeathBox, float* OutDistance);
	bool CanMutiAutoPickup(enum class EItemType InItemType);
	void CallHUDSetTreasureBoxActor(class AActor* InActor);
	void CallHUDSetAirdropBoxActor(class AActor* InActor);
	void CallHUDSetActiveResurrectBtn(bool Inactive);
	void CallHUDSetActiveOpenBoxProgress(bool Inactive);
	void CallHUDSetActiveOpenBoxBtn(bool Inactive);
	void CallHUDHideOpenBoxUIByThisID(int64 InThisID);
	void CallHUDHideAirdropBoxUIByThisID(int64 InThisID);
	void AddNearbyDeathbox(class ADeathTreasureBox* InDeathBox);
};

// 0x20 (0x48 - 0x28)
// Class Solarland.SolarPickupHandlerBase
class USolarPickupHandlerBase : public UObject
{
public:
	enum class EPickupItemType                   Type;                                              // 0x28(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A2C[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USolarPickupComponent*                 OwnerComponent;                                    // 0x30(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarItemManager*                     ItemManager;                                       // 0x38(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A2D[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarPickupHandlerBase* GetDefaultObj();

};

// 0x10 (0x58 - 0x48)
// Class Solarland.SolarPickupHandlerNormal
class USolarPickupHandlerNormal : public USolarPickupHandlerBase
{
public:
	uint8                                        Pad_2A2E[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarPickupHandlerNormal* GetDefaultObj();

};

// 0x18 (0x40 - 0x28)
// Class Solarland.SolarPingFpsManager
class USolarPingFpsManager : public UObject
{
public:
	uint8                                        Pad_2A2F[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	uint8                                        GetPingDS;                                         // 0x30(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2A30[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        GetPingBackend;                                    // 0x34(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FPS;                                               // 0x38(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2A31[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarPingFpsManager* GetDefaultObj();

	uint8 GetPingBattleServer();
	float GetPacketsLossRate();
	float GetAverageFPS();
};

// 0xE0 (0x428 - 0x348)
// Class Solarland.SolarPingFpsWidget
class USolarPingFpsWidget : public USolarUserWidget
{
public:
	class UImage*                                Img_Ping;                                          // 0x348(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarTextBlock*                       Txt_Ping;                                          // 0x350(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarTextBlock*                       Txt_ms;                                            // 0x358(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarTextBlock*                       Txt_fps_1;                                         // 0x360(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2A32[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FLinearColor                          ImgLowDelayColor;                                  // 0x378(0x10)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          ImgMediumDelayColor;                               // 0x388(0x10)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          ImgHighDelayColor;                                 // 0x398(0x10)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSlateColor                           TxtLowDelayColor;                                  // 0x3A8(0x28)(BlueprintVisible, Transient, NativeAccessSpecifierPublic)
	struct FSlateColor                           TxtMediumDelayColor;                               // 0x3D0(0x28)(BlueprintVisible, Transient, NativeAccessSpecifierPublic)
	struct FSlateColor                           TxtHighDelayColor;                                 // 0x3F8(0x28)(BlueprintVisible, Transient, NativeAccessSpecifierPublic)
	float                                        RefreshFpsInterval;                                // 0x420(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A33[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarPingFpsWidget* GetDefaultObj();

	void UpdatePing(float InPing);
	void CreateUpdateUIFpsTimer();
	void ClearUpdateUIFpsTimer();
};

// 0xC8 (0xF0 - 0x28)
// Class Solarland.SolarPlatformHelper
class USolarPlatformHelper : public UObject
{
public:
	uint8                                        Pad_2A35[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USolarPlatformStats*                   SolarPlatformStats;                                // 0x30(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarGameInstanceBase*                SolarGameInstanceBase;                             // 0x38(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2A36[0xB0];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarPlatformHelper* GetDefaultObj();

	bool UseRenderThread();
	bool SupportsMultithreading();
	double Seconds();
	void ReceiveShutdown();
	void ReceiveInit();
	bool IsThisApplicationForeground();
	bool IsRunningOnBattery();
	bool Is64bitOperatingSystem();
	int64 GetVideoMemory();
	class FString GetUniqueDeviceId();
	class FString GetTimeZoneId();
	class FString GetSuitableStringWithUnitOfBytes(uint64 NumberOfBytes, const class FString& ExtraUnit);
	class USolarPlatformStats* GetSolarPlatformStats();
	int32 GetSimultaneousInstanceId();
	class FString GetPrimaryGPUBrand();
	class FString GetPathVarDelimiter();
	void GetOSVersions(class FString* Out_OSVersionLabel, class FString* Out_OSSubVersionLabel);
	class FString GetOSVersion();
	uint32 GetMoniterWidth();
	int32 GetMoniterRefreshRate();
	uint32 GetMoniterHeight();
	int32 GetMaxPathLength();
	class UGameUserSettings* GetGameUserSettings();
	class FString GetEnvironmentVariable(const class FString& VariableName);
	class UEngine* GetEngine();
	bool GetDiskTotalAndFreeSpace(const class FString& InPath, uint64* TotalNumberOfBytes, uint64* NumberOfFreeBytes);
	float GetDeviceTemperatureLevel();
	class FString GetDeviceMakeAndModel();
	class FString GetDefaultDeviceProfileName();
	class FString GetCPUVendor();
	uint32 GetCPUInfo();
	class FString GetCPUChipset();
	class FString GetCPUBrand();
	int32 GetBatteryLevel();
	class FString ClipboardPaste();
	void ClipboardCopy(const class FString& Str);
};

// 0x38 (0x60 - 0x28)
// Class Solarland.SolarPlatformStats
class USolarPlatformStats : public UObject
{
public:
	uint8                                        Pad_2A38[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	uint64                                       MaxUsedPhysical;                                   // 0x30(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2A39[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarPlatformStats* GetDefaultObj();

	void ReceiveWorldCleanup(class UWorld* World, bool bSessionEnded, bool bCleanupResources);
	void ReceiveShutdown();
	void ReceivePostWorldInitialization(class UWorld* World);
	void ReceiveInit();
	uint64 GetRHIUsedMemory();
	float GetRenderThreadTime();
	int32 GetNumDrawCalls();
	int32 GetMinFPS();
	float GetGameThreadTime();
	int32 GetAverageFPS();
};

// 0xE0 (0x190 - 0xB0)
// Class Solarland.SolarPlayerActivityHeatComponent
class USolarPlayerActivityHeatComponent : public UActorComponent
{
public:
	uint8                                        Pad_2A3B[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        WeaponScore;                                       // 0xC0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        VehicleScore;                                      // 0xC4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        AbilityScore;                                      // 0xC8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2A3C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UCurveFloat*                           DistScoreCurve;                                    // 0xD0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        DefenderOrReaperScore;                             // 0xD8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        FirstKillTimeBefore;                               // 0xDC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        LastKillTimeLater;                                 // 0xE0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2A3D[0xAC];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarPlayerActivityHeatComponent* GetDefaultObj();

	void ReceiveKillInfoNotify(class ASolarPlayerState* InKiller, class ASolarPlayerState* InVictim, struct FSolarPointDamageEvent& DamageEvent);
	void ReceiveActivityHeatFragmentsFromReplay(const class FString& PlayerId, struct FReplayActivityHeatFragment& NewFragment);
	void OnPlayerWin(const class FString& SolarPlayerID);
	void OnPlayerResurrectionParachute(const class FString& SolarPlayerID);
	void OnPlayerDeath(const class FString& SolarPlayerID);
	void OnPlayerCruiseEnded(const class FString& SolarPlayerID);
	TArray<struct FReplayActivityHeatFragment> GetPlayerActivityHeatFragmentsById(const class FString& SolarPlayerID);
	void FillInPlayerActivityHeatKillDetail(class ASolarPlayerState* InKiller, class ASolarPlayerState* InVictim, struct FSolarPointDamageEvent& DamageEvent, struct FPlayerActivityHeatKillDetail* OutKillDetail);
	int32 AddPlayerActivityHeatRawData(const class FString& SolarPlayerID, enum class EPlayerActivityHeatType ActivityHeatType);
};

// 0x30 (0x2FF0 - 0x2FC0)
// Class Solarland.SolarPlayerCameraManager
class ASolarPlayerCameraManager : public APlayerCameraManager
{
public:
	TWeakObjectPtr<class AActor>                 OldViewTarget;                                     // 0x2FC0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCameraModifier_CameraShakeWithCurve*  CachedCameraShakeModWithCurve;                     // 0x2FC8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2A3F[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASolarPlayerCameraManager* GetDefaultObj();

	void OnPlayerGetOnViewTargetVehicle(int32 GetOnSeatIndex, class ASolarCharacter* GetOnPlayer);
	struct FMinimalViewInfo GetDebugPOV();
};

// 0x28 (0x58 - 0x30)
// Class Solarland.SinglePlayerHPModel
class USinglePlayerHPModel : public USingleCharacterModelBase
{
public:
	uint8                                        Pad_2A40[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USinglePlayerHPModel* GetDefaultObj();

	void OnRescueStateChanged(enum class ERescueState InRescueState);
	void OnHPValueChanged(class ASolarCharacter* Character);
};

// 0x0 (0x78 - 0x78)
// Class Solarland.SolarPlayersHPModel
class USolarPlayersHPModel : public USolarCharactersModelBase
{
public:

	static class UClass* StaticClass();
	static class USolarPlayersHPModel* GetDefaultObj();

};

// 0x60 (0x660 - 0x600)
// Class Solarland.SolarPlayerInput
class USolarPlayerInput : public UEnhancedPlayerInput
{
public:
	uint8                                        Pad_2A41[0x60];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarPlayerInput* GetDefaultObj();

};

// 0x868 (0xA90 - 0x228)
// Class Solarland.SolarWeapon
class ASolarWeapon : public AActor
{
public:
	uint8                                        Pad_2A7E[0x150];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnWeaponUnhold;                                    // 0x378(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FWeaponMechanicalState                WeaponState;                                       // 0x388(0x50)(Edit, BlueprintVisible, Net, EditConst, RepNotify, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A7F[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EShootingOpt                      PrimaryShootingOption;                             // 0x3D9(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2A80[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FImpactDisplayInfo                    ImpactInfo;                                        // 0x3DC(0x10)(Net, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_2A81[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class ESCMDamageType                    DefaultDamageType;                                 // 0x3F8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2A82[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USolarVirtualBulletCollector*          VirtualBulletCollector;                            // 0x400(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWeaponFireLaserCollector*             LaserCollector;                                    // 0x408(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A83[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        ExtraPoints;                                       // 0x414(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ExtraPointsForInit;                                // 0x418(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseSkillStateMachine;                             // 0x41C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A84[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        ExtraPointsLimit;                                  // 0x420(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        SecModeLimitTypeID;                                // 0x424(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RestoreProgressPerSec;                             // 0x428(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2A85[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        RestoreProgressPerKill;                            // 0x438(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RestoreProgressPerDmg;                             // 0x43C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RestoreProgressAccumulation;                       // 0x440(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RestoreProgressAccumulationForInit;                // 0x444(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2A86[0x9];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	uint8                                        FireModeIndex;                                     // 0x451(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A87[0x12];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EWeaponOverloadState              OverloadState;                                     // 0x464(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A88[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        OverloadAccum;                                     // 0x468(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A89[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UCurveFloat*                           OverloadCurve;                                     // 0x478(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A8A[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        GatlingRollSpeed;                                  // 0x484(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GatlingHoldTime;                                   // 0x488(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GatlingRollSpeedInterp;                            // 0x48C(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        GatlingRepState;                                   // 0x490(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A8B[0x24];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        FireChargingTime;                                  // 0x4B8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        FireChargingPhase;                                 // 0x4BC(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FireChargingSumTime;                               // 0x4C0(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A8C[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ChargeAnimationRate;                               // 0x4CC(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UGameplayEffect>           ChargingEffect;                                    // 0x4D0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A8D[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TWeakObjectPtr<class UAbilitySystemComponent> OwnerGAS;                                          // 0x4E0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2A8E[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UCurveFloat*                           NormalOverloadCoolingCurve;                        // 0x4F0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CurrentMode;                                       // 0x4F8(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A8F[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FFireMode>                     FireModes;                                         // 0x508(0x10)(Net, ZeroConstructor, RepNotify, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                WeaponHolder;                                      // 0x518(0x8)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ASolarCharacterBase*                   ControlWeaponCharacter;                            // 0x520(0x8)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FGameplayAbilitySpecHandle>    EquippedAbilityHandles;                            // 0x528(0x10)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bControlWeaponCharacterChanged;                    // 0x538(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2A90[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                AimTarget;                                         // 0x540(0x8)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class ASolarWeaponProjectileSpline> ProjSplineClass;                                   // 0x548(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ASolarWeaponProjectileSpline*          ProjSpline;                                        // 0x550(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<enum class EShootingOpt>              ShootingOptArray;                                  // 0x558(0x10)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bShowSpecialEffect;                                // 0x568(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2A91[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USingleWeaponConfig*                   Config;                                            // 0x570(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTexture2D*                            WeaponIcon;                                        // 0x578(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USlateWidgetStyleAsset*                PrimaryFireBtnStyle;                               // 0x580(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USlateWidgetStyleAsset*                SecondaryFireBtnStyle;                             // 0x588(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGlobalWeaponConfig*                   WeaponsConfig;                                     // 0x590(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWeaponRecoilComponent*                RecoilComponent;                                   // 0x598(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        Weaponid;                                          // 0x5A0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2A92[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UWeaponSpreadAndRecoil*                SpreadAndRecoil;                                   // 0x5A8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2A93[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bTeamDamageEnable;                                 // 0x5BC(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bInfiniteAmmo;                                     // 0x5BD(0x1)(Edit, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bInfinitePackageAmmo;                              // 0x5BE(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A94[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        ExtraAmmo;                                         // 0x5C0(0x4)(Edit, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A95[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<TWeakObjectPtr<class UParticleSystem>, class UParticleLoopListener*> LoopParticlesMap;                                  // 0x5C8(0x50)(Protected, NativeAccessSpecifierProtected)
	int32                                        CurrentClipAmmo;                                   // 0x618(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2A96[0x10C];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<enum class ECharacterMontage, struct FWeaponAnimationInfo> WeaponAnimationMap;                                // 0x728(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	bool                                         bResetMuzzleIndexWhenStopFire;                     // 0x778(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A97[0xF];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FCameraShakeData>              WeaponFireCameraShakes;                            // 0x788(0x10)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FCameraShakeData>              WeaponScopeFireCameraShakes;                       // 0x798(0x10)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FCameraShakeData>              UsingSkillCameraShakes;                            // 0x7A8(0x10)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FCameraShakeData>              WeaponChargingCameraShakes;                        // 0x7B8(0x10)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bUseEmptyActor;                                    // 0x7C8(0x1)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A98[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSoftObjectPath                       FightMeshPath;                                     // 0x7D0(0x18)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMeshComponent*                Mesh;                                              // 0x7E8(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkeletalMesh*                         OriginalMesh;                                      // 0x7F0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UWeaponAnimInstance>       OriginalAnimBP;                                    // 0x7F8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAkComponent*                          AkAudioComponent;                                  // 0x800(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarAkGameObject*                    SolarAkGameObject;                                 // 0x808(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SoundFireAutoCount;                                // 0x810(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bTriggerSoundFireAuto;                             // 0x814(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A99[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        OldSoundFireAutoCount;                             // 0x818(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bTriggerSoundB9A04Skill;                           // 0x81C(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bTriggerSoundFireBurst;                            // 0x81D(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A9A[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        SkillFireCount;                                    // 0x820(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SingleFireCount;                                   // 0x824(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        FireOverloadCount;                                 // 0x828(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        FireLastCount;                                     // 0x82C(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A9B[0x60];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FOverrideBulletStruct                 OverrideBullet;                                    // 0x890(0x18)(Net, NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                         bLoadInitAssets;                                   // 0x8A8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bLoadAllCfgAssets;                                 // 0x8A9(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2A9C[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<struct FFireUniqueID, float>            FireHitVerifyMap;                                  // 0x8B0(0x50)(Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_2A9D[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bDetectedEnemy;                                    // 0x908(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2A9E[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UParticleSystemComponent*>      GatlingOverHeatPSCs;                               // 0x910(0x10)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bTracingAimTarget;                                 // 0x920(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2A9F[0xF];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UMaterialInterface*                    SpecialFireChargeMaterial;                         // 0x930(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<int32, struct FColor>                   SpecialFireChargeColorMap;                         // 0x938(0x50)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	bool                                         bPerspectiveForReplay;                             // 0x988(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2AA0[0x27];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	enum class ESolarWeaponSpreadState           CurrentSpreadState;                                // 0x9B0(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2AA1[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        ContinuousAddSpreadByFireCount;                    // 0x9B4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bLastAddSpreadByFireIsHipFire;                     // 0x9B8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int8                                         LastAddSpreadByFireFireMode;                       // 0x9B9(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2AA2[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        LastAddSpreadByFireTime;                           // 0x9BC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SpreadPrepareTimer;                                // 0x9C0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PendingBaseSpread;                                 // 0x9C4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TargetBaseSpread;                                  // 0x9C8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PendingAddSpread;                                  // 0x9CC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TargetAddSpread;                                   // 0x9D0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2AA3[0x2C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FHitResult                            AimHitResult;                                      // 0xA00(0x88)(IsPlainOldData, NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_2AA4[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASolarWeapon* GetDefaultObj();

	void WeaponStateOnRepReload();
	bool VerifyLastClipAmmo(int32 InFireModeType, int32 InLastClipAmmo);
	bool UseEnergy(int32 Mode);
	bool TryHitOperation(struct FFireUniqueID& FireUniqueID, int32 FireMode, struct FVector& StartLocation, struct FVector& WeaponLocation, float ServerTime, float DamageScale, struct FBulletHitDetailData& HitDetailData, bool IsNotDelay);
	void StopSoundDelay(float DelayTime);
	void StopSound(enum class EShootingSoundOpt Opt, int32 Idx);
	void StopLastValidFire();
	void StopGatlingSound();
	void StartSound(enum class EShootingSoundOpt Opt, int32 Idx);
	void StartAsyncLoading();
	class ASolarProjBullet* SpawnProjWithFireID(struct FSpawnBulletParam& Param, struct FFireUniqueID& FireID, bool Local);
	void ShowSpecialEffect(bool bShow);
	void SetWeaponAnimState(enum class EWeaponAnimState InWeaponAnimState);
	void SetReservedAmmoForce(int32 InFireModeType, int32 InAmount);
	void SetPrimaryShootingOption(enum class EShootingOpt Opt);
	void SetLastFireTime(int32 InFireModeType, float InFireTime);
	void SetHolder(class AActor* InHolder);
	void ServerWeaponSound(enum class EShootingSoundOpt Opt, bool TriggerSound);
	void ServerVirtualBulletShotHit(TArray<struct FSolarVirtualBulletHitParameter>& AllHitParams, class APawn* SourcePawn);
	void ServerVirtualBulletShot(struct FSolarVirtualBulletSpawnParameter& InParameter, float InTimestamp);
	void ServerUpdateMechanicalState(enum class EWeaponMechanicalUniqueState NewMechanicalState, enum class EWeaponMechanicalSideFlag NewSubFlags);
	void ServerUpdateLaserInfo(struct FVector& InTarget, class AActor* InTargetActor);
	void ServerUpdateGatlingRepState(int32 InState);
	void ServerSpawnProjWithVelocity(struct FSpawnProjParam& Param);
	void ServerSpawnProjWithFireID(struct FSpawnBulletParam& Param, struct FFireUniqueID& FireID);
	void ServerSetTracingAimTarget(bool InbTracingAimTarget);
	void ServerSetPrimaryOption(enum class EShootingOpt& Opt);
	void ServerSetHipFire(bool InbHipFire);
	void ServerResetFireCount();
	void ServerRequestDropWeapon();
	void ServerPlayAnimWithNetMulticast(enum class ECharacterMontage InMontageType, float ExpectAnimLength);
	void ServerModeState(uint8 ModeIndex);
	void ServerLaserHit(TArray<struct FHitResult>& Hits, float InActivateTime);
	void ServerInterruptLaser();
	void ServerInstantLineShot(uint8 ModeIndex, struct FVector_NetQuantize& Start, struct FVector_NetQuantize& End, float DamageScale, struct FMutiBulletHitData& HitData);
	void ServerFireChargeShoot(class UAmmoConfig* InAmmo, int8 InFireChargingPhase, int32 InFireChargingTime);
	void ServerFireChargePhaseChange(int8 InFireChargingPhase);
	void ServerFire_JustAbilitiesAmmo(uint8 ModeIndex);
	void ServerChangeOverloadState(enum class EWeaponOverloadState InState);
	void ServerCanisterShot(struct FVector_NetQuantize& Start, struct FVector_NetQuantize& End, float RandomA, float RandomB, struct FMutiBulletHitData& HitData);
	void ServerAddExpWithReason(int32 InExp, int32 InReasonID);
	void ServerActivateLaserShot(struct FVector& InTarget, class AActor* InTargetActor);
	void RuntimeUpdateData(int32 Cmd, const class FString& Params);
	void ResetRecoilComponent();
	void ReceivePlayImpactPositionEffect(class UParticleSystemComponent* PSC, struct FVector& Position, float Scale);
	void ReceiveChargingState(int32 Index, enum class EWeaponSkillChargedState State);
	void PrimaryCost();
	void PlayVibrate(enum class EWeaponVibrateType InType);
	void PlayReloadRestoreVibrate();
	void PlayReloadGetOldVibrate();
	void PlayFireVibrate();
	void PlayChargeVibrate();
	void PlayBulletHitEffect(struct FHitResult& HitResult, class ASolarBullet* Bullet, bool bForce, class APawn* HitCauser, float HitEffectScale);
	void PlayBoltVibrate();
	void PlayAutoSingleSound();
	void PlayAnimWithNetMulticast(enum class ECharacterMontage InMontageType, float ExpectAnimLength, bool bNeedNetMulticast, int32 AnimCount);
	void OverrideFireMode(int32 InFireModeType, class UAmmoConfig* InNewAmmoConfig);
	void OnRep_WeaponState();
	void OnRep_TracingAimTarget();
	void OnRep_SoundFireSkillCast();
	void OnRep_SoundFireSingle();
	void OnRep_SoundFireOverload();
	void OnRep_SoundFireLast();
	void OnRep_SoundFireBurst();
	void OnRep_SoundFireAutoCount();
	void OnRep_SoundB9A04Skill();
	void OnRep_OverloadStateChange(enum class EWeaponOverloadState PreviousState);
	void OnRep_ImpactPosition();
	void OnRep_FireModes();
	void OnRep_FireChargingPhase(int32 InOldFireChargingPhase);
	void OnRep_ExtraAmmo();
	void OnRep_CurrentMode();
	void OnRep_ControlWeaponCharacterChanged();
	void OnPlayMuzzleEffect();
	void OnLoadInitAssetComplete();
	void OnLoadCfgAssetsComplete();
	void OnInternalUnControlled();
	void OnInternalControlled(class ASolarCharacterBase* OwnerChar);
	void OnInstantLineShotHit(struct FHitResult& InHit, float DamageScale);
	void OnInitFlowComplete();
	void OnGatlingRollChange(bool bIncrease);
	void OnFireChargeBurstCountChange(int32 BurstSum);
	enum class EShootingOpt NextShootingPrimaryOption();
	void LuaStopSoundWithParameters(enum class EShootingSoundOpt Opt, int32 Idx, struct FPlaySoundParams& Params);
	void LuaStartSoundWithParameters(enum class EShootingSoundOpt Opt, int32 Idx, struct FPlaySoundParams& Params);
	void LoadInitAsset();
	void LoadAllCfgAssets();
	class UAmmoConfig* K2_GetOverrideAmmoConfigBase(int32 ModeIndex);
	class USingleWeaponConfig* K2_GetCurrentConfig();
	bool IsVisible();
	bool IsShowCoolDownWidget();
	bool IsShotAimEnemy();
	bool IsScopeOpen();
	bool IsOpenedScope();
	bool IsHipFire();
	bool IsEnergyID(int32 BulletItemID);
	bool IsControlled();
	bool IsCanFire();
	class UParticleSystemComponent* InternalPlayEffectAttached(class UParticleSystem* PS, class USceneComponent* AttachToComponent, class FName AttachPointName, const struct FAttachedEffectParam& Param);
	class UParticleSystemComponent* InternalPlayEffectAtLocation(class UObject* WorldContext, class UParticleSystem* PS, struct FVector& Location, const struct FLocationEffectParam& Param, bool bUseDistScale);
	void InternalClientPlayFiringEffects();
	bool InSameTeam();
	void InitConfigs();
	bool ImmediatelyFire(int32 Idx, bool bEnable);
	bool HasLoadInitAsset();
	bool HasLoadAllCfgAssets();
	bool HasInitFinish();
	bool HasInitConfigs();
	void HandFireModeInput(enum class EWeaponFireModeType WeaponFireModeType, bool Press);
	enum class EWeaponType GetWeaponType();
	class FString GetWeaponTextType();
	uint32 GetWeaponNoticeID(class FName& InNoticeType);
	int32 GetWeaponLevel();
	int32 GetWeaponID();
	class UTexture2D* GetWeaponIcon();
	enum class ESolarWeaponBrand GetWeaponBrand();
	class UAnimMontage* GetWeaponAnimSequence(enum class ECharacterMontage InMontageType);
	struct FWeaponAnimationInfo GetWeaponAnimationInfo(enum class ECharacterMontage InMontageType);
	struct FSlateBrush GetTriggerIcon(int32 InFireModeType);
	int32 GetSpareAmmo(int32 InFireModeType);
	float GetSoundRTPCValue();
	int32 GetSkinID();
	float GetShotGunSpreadSeed();
	struct FVector GetShotDir(bool NeedSpread);
	struct FVector GetShootingTraceStartLocation();
	class FString GetShootingPrimaryShootingOptionName(enum class EShootingOpt Opt);
	float GetSecondModeValue();
	int32 GetReservedAmmo(int32 Idx);
	float GetReloadProgress();
	class UWeaponRecoilComponent* GetRecoilComponent();
	int32 GetPrimaryShootingOptionIndex();
	float GetPostFireDuration(int32 Idx);
	class UWeaponPartsComponent* GetPartsComponent();
	float GetOverloadPercent();
	float GetOverloadMaxValue();
	class ASolarWeaponProjectileSpline* GetOrCreateWeaponProjectileSpline();
	int32 GetMaxAmmo(int32 Idx, bool bWithExtraAmmoByChaAbility);
	float GetLastFireTime(int32 InFireModeType);
	bool GetIsVehicleMounted();
	bool GetIsSupportSecondaryFire();
	bool GetIsSupportAutoFire();
	bool GetIsSupportAssistAim();
	bool GetIsQuickScope();
	bool GetIsCoolDown(int32 Mode);
	class UGlobalWeaponConfig* GetGlobalWeaponConfig();
	int32 GetFireModeNameLocalizationID(int32 InFireModeType);
	float GetFireIntervalProgress(int32 Idx);
	float GetFireInterval(int32 Idx);
	void GetFireChargeInfo(int32* OutChargingPhase, float* OutChargingTime, float* OutRate, struct FFireChargeData* OutChargeData);
	float GetFireCD(int32 Idx);
	float GetExtraPointsPercent();
	int32 GetExtraPoints();
	class UParticleSystem* GetDedicatedKillEffect();
	struct FSoftObjectPath GetDedicatedDissolvedDeathFXPath();
	TSubclassOf<class UActorEffect> GetDedicatedDissolvedDeathActorEffectClass();
	struct FWeaponDebugFlag GetDebugFlag();
	int32 GetCurScopeType();
	enum class EShootingOpt GetCurrentShootingPrimaryOption();
	enum class EWeaponScopeType GetCurrentScopeType();
	struct FFireChargeData GetCurrentFireChargeData(class UAmmoConfig* InAmmo);
	class UAmmoConfig* GetCurrentFireChargeAmmoData(class UAmmoConfig* InAmmo);
	int32 GetCurrentClipAmmo(int32 InFireModeType);
	bool GetCurrentChargeModePercent(int32 InFireModeType, int32* OutChargeMode, float* OutChargePercent);
	int32 GetCostPreAttack(int32 Idx);
	class ASolarCharacterBase* GetControlWeaponCharacter();
	float GetChargingPercent(int32 Idx);
	float GetBurstInterval(int32 Idx);
	float GetBurstInternalInterval(int32 Idx);
	void GetBulletHitEffectRot(struct FHitResult& HitResult, class ASolarBullet* Bullet, struct FRotator* TargetPos, bool bIsHittedShield);
	void GetBulletHitEffectPos(struct FHitResult& HitResult, struct FVector* TargetRot, float Offset);
	class ASolarBullet* GetBulletDefaultObject(int32 Idx, class UAmmoConfig* AmmoCfg);
	TSubclassOf<class ASolarBullet> GetBulletClass(int32 Idx, class UAmmoConfig* AmmoCfg);
	float GetBotAIDamageFactor();
	enum class ETriggerType GetAmmoTriggerType(int32 FireModeType);
	int32 GetAmmoItemID(int32 Idx);
	bool GetAllInitAssetPath(TArray<struct FSoftObjectPath>* PathArray);
	bool GetAllCfgAssetsPath(TArray<struct FSoftObjectPath>* PathArray);
	void GetAimStartEnd(class UAmmoConfig* InAmmo, struct FVector* OutStart, struct FVector* OutEnd, class AActor** OutTargetActor, bool NeedSpread);
	bool FireVerify_Location(int32 FireMode, struct FVector& StartLocation, struct FVector& WeaponLocation, float ServerTime, struct FBulletHitDetailData& HitDetailData);
	bool FireVerify_EffectRange(int32 FireMode, struct FVector& StartLocation, struct FVector& WeaponLocation, float ServerTime, struct FBulletHitDetailData& HitDetailData);
	bool FireVerify_Block(int32 FireMode, struct FVector& StartLocation, struct FVector& WeaponLocation, float ServerTime, struct FBulletHitDetailData& HitDetailData);
	bool FireValidate(int32 Idx, float InLastShootTime);
	enum class ECharacterMontage FindMontageKeyFromWeaponAnim(class UAnimMontage* InAnimation);
	void EnterOverloadState();
	void DestroyWeaponProjectileSpline();
	void ClientVirtualBulletShot(struct FSolarVirtualBulletSpawnParameter& InParameter);
	void ClientUpdateLaserInfo(struct FVector& InTarget, class AActor* InTargetActor);
	void ClientPlayHitEffect(struct FMultiHitResult& InMultiHitResult);
	void ClientPlayFiringEffects();
	void ClientPlayAnimWithNetMulticast(enum class ECharacterMontage InMontageType, float ExpectAnimLength);
	void ClientNotifyUpdateReservedAmmoForce(int32 InFireModeType, int32 InAmount);
	void ClientLaserHit(TArray<struct FHitResult>& Hits, float InActivateTime);
	void ClientInterruptLaser();
	void ClientInstantLineShot(uint8 ModeIndex, TArray<struct FHitResult>& HitResults, struct FVector_NetQuantize& End, float DamageScale);
	void ClientFireChargeShoot(class UAmmoConfig* InAmmo, int8 InFireChargingPhase, int32 InFireChargingTime);
	void ClientCanisterShot(struct FVector_NetQuantize& Start, TArray<struct FWeaponShotHitResult>& ValidHits, struct FVector_NetQuantize& Target);
	void ClientActivateLaserShot(struct FVector& InTarget, class AActor* InTargetActor);
	void ClearFireHitVerify();
	bool CheckOpenParticleOptimization(int32 Bias);
	bool CanOverload();
	bool CanCauseTeamDamage();
	float CalcScale(struct FFireMode& Mode);
	int32 CalcCost(struct FFireMode& Mode);
	void AddExtraPoints(enum class ESolarHitType InHitType, int32 InDamage);
};

// 0x318 (0xDA8 - 0xA90)
// Class Solarland.SolarPlayerWeapon
class ASolarPlayerWeapon : public ASolarWeapon
{
public:
	uint8                                        Pad_2AA5[0xC0];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        SpawnOffset;                                       // 0xB50(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2AA6[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSolarItemData                        ItemData;                                          // 0xB58(0xB8)(Net, NativeAccessSpecifierPublic)
	TArray<uint8>                                MarkedTeamIdList;                                  // 0xC10(0x10)(Net, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bUseSceneActorOptimization;                        // 0xC20(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2AA7[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USphereComponent*                      SphereComponent;                                   // 0xC28(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               DroppedLocation;                                   // 0xC30(0xC)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2AA8[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ASolarCharacterBase*                   WeaponOwner;                                       // 0xC40(0x8)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWeaponAnimationComponent*             WeaponAnimationComponent;                          // 0xC48(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EItemDiscardState                 WeaponCurrentDiscardState;                         // 0xC50(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EItemState                        WeaponCurrentState;                                // 0xC51(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2AA9[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FSoftObjectPath>               DiscardMatPath;                                    // 0xC58(0x10)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FSoftObjectPath                       HoldMeshMaterialPath;                              // 0xC68(0x18)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                    OutlineBaseMat;                                    // 0xC80(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2AAA[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UParticleSystemComponent*>      SkinExtraPSCArray;                                 // 0xC90(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystemComponent*              SkinSpecialEffect;                                 // 0xCA0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2AAB[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UMaterialInstanceDynamic*              MeshSubpassMaterial;                               // 0xCB8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UMaterialInstanceDynamic*>      MeshDiscardMaterialArray;                          // 0xCC0(0x10)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWeaponSkinData*                       WeaponSkinData;                                    // 0xCD0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        WeaponSkinID;                                      // 0xCD8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        ScopePartID;                                       // 0xCDC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        GripPartID;                                        // 0xCE0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        StockPartID;                                       // 0xCE4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MuzzlePartID;                                      // 0xCE8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        ClipPartID;                                        // 0xCEC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        DefaultSkinID;                                     // 0xCF0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2AAC[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bIsAutoDrop;                                       // 0xCF9(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2AAD[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        LifespanAfterAutoDrop;                             // 0xCFC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bUsed;                                             // 0xD00(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2AAE[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UParticleSystem*                       SkinDedicatedKillEffect;                           // 0xD08(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                       SkinDedicatedSpecialEffect;                        // 0xD10(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2AAF[0x90];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASolarPlayerWeapon* GetDefaultObj();

	void UpdateCharacterState(enum class ECharacterStateForWeapon CharacterState, bool bIsOnGround, bool bResetState);
	void UpdateCharacterPosture(bool IsCrouch);
	void SetOpenScopeOnVehicle(bool InbOpenScope);
	void SetDedicatedSkinEffect(class UWeaponSkinData* InSkinData);
	void RequestUnlimitedAmmo(bool InEnable);
	void PostUpdateAppearance();
	void OnSetWeaponSkinMesh(class USkeletalMesh* InMesh, class UClass* InAnimClass);
	void OnRep_WeaponCurrentStateChanged();
	void OnRep_WeaponCurrentDiscardStateChanged();
	void OnClientMeshLodChanged(int32 LOD);
	void NotifyThisItemWasPickedUp();
	void K2_SwitchDrawDistance(bool Hold);
	void K2_OnHold(bool bLocal);
	void K2_OnDrop();
	bool IsOpenedScopeOnVehicle();
	bool IsItemWeapon();
	bool IsExistPart(enum class EWeaponPartType& PartType);
	void Hold(bool bInHold);
	bool HasScope();
	float GetWeaponSilencerMagnitude();
	class UPlayerWeaponRecoilComponent* GetRecoilComp();
	int32 GetQualityByLevel(int32 Level);
	int32 GetQuality();
	enum class EItemState GetItemCurrentState();
	bool GetIsHolded();
	struct FVector GetFPPLocation();
	float GetFire2AnimPlayRate();
	float GetDistanceToEyeWhenScope();
	struct FVector GetCurrentScopeAimCenterPoint();
	class UWeaponPartClipComp* GetCurrentClip();
	void ClearSkinExtraPSC();
	void ClearDedicatedSkinEffect();
};

// 0x0 (0xDA8 - 0xDA8)
// Class Solarland.SolarPlayerItemWeapon
class ASolarPlayerItemWeapon : public ASolarPlayerWeapon
{
public:

	static class UClass* StaticClass();
	static class ASolarPlayerItemWeapon* GetDefaultObj();

};

// 0x8 (0xDB0 - 0xDA8)
// Class Solarland.SolarPlayerNormalWeapon
class ASolarPlayerNormalWeapon : public ASolarPlayerWeapon
{
public:
	class UWeaponPartsComponent*                 WeaponPartsComponent;                              // 0xDA8(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class ASolarPlayerNormalWeapon* GetDefaultObj();

	bool QueryCanEquipPart(enum class EWeaponPartType Type, int32 InWeaponID);
	bool GetEquippedScopeTypeAndLevel(enum class EWeaponPartType* Type, int32* Level);
	int32 GetEquippedPartLevel(enum class EWeaponPartType Type);
	void GameStatisticsWeaponAddExp(float NewExp, float AddExp, int32 OldLevel, int32 NewLevel, int32 Reason);
	bool CanEquipPart(enum class EWeaponPartType Type);
};

// 0x48 (0x70 - 0x28)
// Class Solarland.SolarPlayerSensitivitys
class USolarPlayerSensitivitys : public UObject
{
public:
	uint8                                        Pad_2AB5[0x48];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarPlayerSensitivitys* GetDefaultObj();

	void InitPlayerSensitivity();
};

// 0x70 (0xA0 - 0x30)
// Class Solarland.SinglePlayerShieldModel
class USinglePlayerShieldModel : public USingleCharacterModelBase
{
public:
	uint8                                        Pad_2ABA[0x70];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USinglePlayerShieldModel* GetDefaultObj();

	void ShieldValueChanged(enum class EShieldWidgetState InWidgetState, float InCurValue, float InChangeValue, enum class EShieldRechargeState InRechargeState, bool bInFixPreAdd);
	void ShieldChanged(bool bInAvailable, float InCurValue, float InMaxValue, int32 InQualityColor, bool bInIsAdvancedShield);
};

// 0x0 (0x78 - 0x78)
// Class Solarland.SolarPlayersShieldModel
class USolarPlayersShieldModel : public USolarCharactersModelBase
{
public:

	static class UClass* StaticClass();
	static class USolarPlayersShieldModel* GetDefaultObj();

};

// 0x78 (0x2D0 - 0x258)
// Class Solarland.SolarPlayerStart
class ASolarPlayerStart : public APlayerStart
{
public:
	uint8                                        Pad_2ABB[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Distance;                                          // 0x260(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2ABC[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                Side;                                              // 0x268(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Job;                                               // 0x278(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                ElementID;                                         // 0x288(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ESGameMode_ElementType            Type;                                              // 0x298(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EElementStateType                 State;                                             // 0x299(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EElementVisibilityType            Visibility;                                        // 0x29A(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2ABD[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  ElementTypeName;                                   // 0x29C(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2ABE[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                GroupKey;                                          // 0x2A8(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FVector>                       PlayerLocations;                                   // 0x2B8(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2ABF[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASolarPlayerStart* GetDefaultObj();

	void SetElementVisibility(enum class EElementVisibilityType NewType);
	enum class EElementStateType SetElementState(enum class EElementStateType NewState);
	void OnElementVisibilityChanged(enum class EElementVisibilityType CurrentVisibility);
	void OnElementStateChanged(enum class EElementStateType CurrentState);
};

// 0x0 (0x28 - 0x28)
// Class Solarland.SolarPoolActorInterface
class ISolarPoolActorInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class ISolarPoolActorInterface* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Solarland.SolarPoolObjectInterface
class ISolarPoolObjectInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class ISolarPoolObjectInterface* GetDefaultObj();

	void OnPreDestroy();
	void OnDeactivated();
	void OnActivated();
	int32 GetDefaultPoolLimit(class FName Tag);
};

// 0x8 (0x38 - 0x30)
// Class Solarland.SolarPopPanelManager
class USolarPopPanelManager : public USolarGameManager
{
public:
	uint8                                        Pad_2AC0[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarPopPanelManager* GetDefaultObj();

};

// 0x20 (0x50 - 0x30)
// Class Solarland.SolarPreloadAssetCollection
class USolarPreloadAssetCollection : public UPrimaryDataAsset
{
public:
	TArray<class UObject*>                       PreloadRes;                                        // 0x30(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TSubclassOf<class UObject>>           PreloadClass;                                      // 0x40(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class USolarPreloadAssetCollection* GetDefaultObj();

};

// 0x2B0 (0x2D8 - 0x28)
// Class Solarland.SolarPreservedBotManager
class USolarPreservedBotManager : public UObject
{
public:
	uint8                                        Pad_2AC7[0x60];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<int32, struct FVector>                  SilenceLocationInDiffMap;                          // 0x88(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_2AC8[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MinDetectDistance;                                 // 0xDC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2AC9[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class USolarPreservedBotPopTask*>     PopTasks;                                          // 0x100(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FEQSParametrizedQueryExecutionRequest DefaultPopQuery;                                   // 0x110(0x48)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	TMap<enum class EPopLocationType, struct FEQSParametrizedQueryExecutionRequest> PopQueryMap;                                       // 0x158(0x50)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	class UEnvQuery*                             SeparateQuery;                                     // 0x1A8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EEnvQueryRunMode                  SeparateEQSRunMode;                                // 0x1B0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2ACA[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSolarBotTimelineAIItemSetting        DefaultItemTemplate;                               // 0x1B8(0xF0)(Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	float                                        TimeBetweenDyingAndDead;                           // 0x2A8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2ACB[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnSendBotsSuccess;                                 // 0x2B8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnSendBotsFail;                                    // 0x2C8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class USolarPreservedBotManager* GetDefaultObj();

	void TryUpdateEquipment(class UObject* Context, struct FSolarBotTimelineAIItemSetting& ItemSetting);
	bool TryPopBotByNum(class UObject* Context, int32 PopNum, struct FPopParameter& InPopParam);
	void TryPopAllBotByGuarantee(class UObject* Context, struct FVector& PopLocation);
	void TryPopAllBot(class UObject* Context, struct FPopParameter& InPopParam);
	void TryKillOneBot();
	void TryAddPreservedBot(class ASolarPlayerState* InBot, float DelayTime);
	void OnPopSingleBotSuccess(class USolarPreservedBotPopTask* InTask);
	void OnPopBotsFinished(class USolarPreservedBotPopTask* InTask);
	void OnGetFinalTeleportLocSuccess(class USolarPreservedBotPopTask* InTask, class ASolarPlayerState* BotPS, struct FVector& TeleportLoc);
	void OnGetFinalTeleportLocFail(class USolarPreservedBotPopTask* InTask, class ASolarPlayerState* BotPS);
	void OnCharacterDeath(class ASolarPlayerController* InPlayer);
	void InitBotPreservedManager(uint8 InActivePlayerNum, int32 GameModeId);
	class USolarPreservedBotManager* Get(class UObject* Context);
};

// 0x88 (0xB0 - 0x28)
// Class Solarland.SolarPreservedBotPopTask
class USolarPreservedBotPopTask : public UObject
{
public:
	int32                                        CurrentTaskID;                                     // 0x28(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2ACC[0x14];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FVector>                       PickedTeleportCenters;                             // 0x40(0x10)(BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class ASolarPlayerState*>             FailedBots;                                        // 0x50(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class ASolarBotAIController*>         PendingSeparateBots;                               // 0x60(0x10)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	FMulticastInlineDelegateProperty_            OnGetTeleportLocationSuccess;                      // 0x70(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnPopBotsFinished;                                 // 0x80(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnGetFinalTeleportLocSuccess;                      // 0x90(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnGetFinalTeleportLocFail;                         // 0xA0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class USolarPreservedBotPopTask* GetDefaultObj();

	struct FVector GetWarmTargetLocation();
};

// 0x30 (0x60 - 0x30)
// Class Solarland.SolarPrimaryAssetDirectoryLabel
class USolarPrimaryAssetDirectoryLabel : public UPrimaryDataAsset
{
public:
	struct FPrimaryAssetRules                    Rules;                                             // 0x30(0xC)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        bIsRuntimeLabel : 1;                               // Mask: 0x1, PropSize: 0x10x3C(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_1E8 : 7;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_2ACD[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FDirectoryPath>                ExplicitDirectories;                               // 0x40(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TSoftObjectPtr<class UObject>>        ExplicitAssets;                                    // 0x50(0x10)(Edit, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class USolarPrimaryAssetDirectoryLabel* GetDefaultObj();

};

// 0xA0 (0x3E8 - 0x348)
// Class Solarland.SolarProgressiveInteractButton
class USolarProgressiveInteractButton : public USolarUserWidget
{
public:
	FMulticastInlineDelegateProperty_            OnCompleteDelegate;                                // 0x348(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnCancelDelegate;                                  // 0x358(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnStartInteract;                                   // 0x368(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, BlueprintCallable, NativeAccessSpecifierPublic)
	uint8                                        Pad_2ACE[0x1C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	uint8                                        bIsInCD : 1;                                       // Mask: 0x1, PropSize: 0x10x394(0x1)(BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        BitPad_1E9 : 7;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_2ACF[0xB];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGaugeImage*                           Image_GameProgressBar;                             // 0x3A0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarTextBlock*                       Text_GameProgressTime;                             // 0x3A8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UButton*                               BTN_GameProgressCancel;                            // 0x3B0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                            Text_GameProgressTips;                             // 0x3B8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHorizontalBox*                        HorizontalBox_Cancel;                              // 0x3C0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHUDPassiveHeadWidget*                 Panel_PassiveBuff;                                 // 0x3C8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOverlay*                              Overlay_CD;                                        // 0x3D0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGaugeImage*                           Image_CD;                                          // 0x3D8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarTextBlock*                       Txt_CDTime;                                        // 0x3E0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class USolarProgressiveInteractButton* GetDefaultObj();

	void UpdateGameProgressTipsText(int32 InTextId);
	void UpdateGameProgressText();
	void UpdateGameProgressBarPercent(float InPercent);
	void UpdateGameProgress(float InAddition);
	void TryCancelInteraction();
	void StopGameProgress(int32 InActionID);
	void StopCountDownProgress(int32 InActionID);
	void StartCountDownProgress(struct FCountDownInfo& InCountInfo);
	void SimpleDynamicMulticastDelegate__DelegateSignature();
	void ShowPassiveBuff(int32 CharacterId, int32 LocalTextId);
	void RefreshToPreInteract();
	void RefreshToNonCancellableInteracting();
	void RefreshToCancellableInteracting();
	void OnSteamCancelCountDown();
	void OnParentVisibilityChanged(bool bVisible);
	void OnCompleteInternal();
	void OnCancelButtonClicked();
	void HidePassiveBuff();
	void EnterCD(float TotalTime, float StartTime);
	void BP_UpdateStateView(enum class ECountDownState InState);
};

// 0x190 (0x508 - 0x378)
// Class Solarland.SolarProjBullet
class ASolarProjBullet : public ASolarBullet
{
public:
	uint8                                        Pad_2AD2[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UShapeComponent*                       CollisionComp;                                     // 0x390(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UProjectileMovementComponent*          MovementComp;                                      // 0x398(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2AD3[0xA0];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               SpawnedLocation;                                   // 0x440(0xC)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2AD4[0x5C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UAkComponent*                          AkAudioComponent;                                  // 0x4A8(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystemComponent*              CurrentTrajectoryParticle;                         // 0x4B0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAttachToActorOnStop;                              // 0x4B8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2AD5[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DeferExplodeTime;                                  // 0x4BC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FlySoundPlayDistance;                              // 0x4C0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bForceExplodeOnLifeSpanExpired;                    // 0x4C4(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2AD6[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<TSubclassOf<class AActor>>            HitActorImmediateExplodeArray;                     // 0x4C8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                       ExplosionParticle;                                 // 0x4D8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                ExplosionSoundName;                                // 0x4E0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ServerWaitClientTime;                              // 0x4F0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2AD7[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UGameplayAbility>          BulletGameplayAbilityClass;                        // 0x4F8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2AD8[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASolarProjBullet* GetDefaultObj();

	void StopSound(enum class EShootingSoundOpt Opt);
	void StartSound(enum class EShootingSoundOpt Opt);
	void OnTeamIgnoreCollisionActorChange(bool bAdd, class AActor* InActor, uint8 TeamID);
	void OnStop(struct FHitResult& HitResult);
	void OnAttachedActorDestroyed(class AActor* Other);
	void K2_OnExplode();
};

// 0x8 (0x510 - 0x508)
// Class Solarland.SolarProjBoxBullet
class ASolarProjBoxBullet : public ASolarProjBullet
{
public:
	int32                                        BoxBulletIndex;                                    // 0x508(0x4)(BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2AD9[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASolarProjBoxBullet* GetDefaultObj();

};

// 0x0 (0x1D0 - 0x1D0)
// Class Solarland.SolarProjectileMovementComponent
class USolarProjectileMovementComponent : public UProjectileMovementComponent
{
public:

	static class UClass* StaticClass();
	static class USolarProjectileMovementComponent* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Solarland.SolarQuickSummonProxy
class USolarQuickSummonProxy : public UObject
{
public:

	static class UClass* StaticClass();
	static class USolarQuickSummonProxy* GetDefaultObj();

	bool TryGetSummonHitResult(struct FHitResult* OutHitResult, class AActor* InSummoner, class USolarSummonDetectionConfig* InSummonConfig);
	bool CanSummonForward(struct FHitResult* OutHitResult, class AActor* InSummoner, class USolarSummonDetectionConfig* InSummonConfig, const TArray<float>& InDistanceArray, float InUpHeight, float InDownHeight);
	bool CanSummonFootDown(struct FHitResult* OutHitResult, class AActor* InSummoner, class USolarSummonDetectionConfig* InSummonConfig, float InUpHeight, float InDownHeight);
	bool CanSummonAround(struct FHitResult* OutHitResult, class AActor* InSummoner, class USolarSummonDetectionConfig* InSummonConfig, int32 InCheckNum, float InRadius, float InUpHeight, float InDownHeight);
};

// 0x178 (0x3A0 - 0x228)
// Class Solarland.SolarRadarBase
class ASolarRadarBase : public AActor
{
public:
	enum class ERadarType                        RadarType;                                         // 0x228(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bSuperRadar;                                       // 0x229(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        SuperRadarMaxCount;                                // 0x22A(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2AE1[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        EffectRadius;                                      // 0x22C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                             EffectSize;                                        // 0x230(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bTeamShare;                                        // 0x238(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bNotifyEnemy;                                      // 0x239(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2AE2[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTag                          RadarImmunityTag;                                  // 0x23C(0x8)(Edit, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bUniqueExist;                                      // 0x244(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bDisplayOnMap;                                     // 0x245(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2AE3[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<enum class EActorRegisterType>        ScanTargetTypes;                                   // 0x248(0x10)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bShowTowards;                                      // 0x258(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bMarkPlayer;                                       // 0x259(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2AE4[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DisplayTime;                                       // 0x25C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ScanFrequency;                                     // 0x260(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2AE5[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<class AActor*, struct FRadarDelegateHandle> ProcessingActorsImmunityTagsHandleMap;             // 0x268(0x50)(Transient, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2AE6[0x48];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayAbilitySpecHandle            RadarHandle;                                       // 0x300(0x4)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2AE7[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bPerspectiveInScene;                               // 0x308(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAddWorldMark;                                     // 0x309(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2AE8[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayCueTag                       CharacterPerspectiveCueTag;                        // 0x30C(0x8)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FGameplayCueTag                       CharacterPerspectiveInSmokeCueTag;                 // 0x314(0x8)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_2AE9[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AActor*>                        PerspectiveedActors;                               // 0x320(0x10)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<class AActor*, struct FPerspectiveActorInfo> ProcessingActors;                                  // 0x330(0x50)(Transient, NativeAccessSpecifierPrivate)
	TArray<class FString>                        OneTimeScannedPlayerIDs;                           // 0x380(0x10)(Net, ZeroConstructor, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class ASolarCharacter*>               ScanNotifiedPlayers;                               // 0x390(0x10)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class ASolarRadarBase* GetDefaultObj();

	void UpdatePerspectiveActor();
	void ToggleWorldMarkByActor(class AActor* InTargetActor, bool bInAdd);
	struct FTransform ServerSpawningRadar(class APawn* RadarOwner, class ASolarCharacter* RadarInstigator, struct FGameplayAbilitySpecHandle& InRadarHandle, float InLifeTime);
	void ServerOneTimeScanStart();
	void RemovePerspectivedCharacter(class ASolarCharacter* InTargetCharacter);
	void PerspectOneTimeScannedActor(class AActor* InActor);
	void PerspectiveTargetCharacter(class ASolarCharacter* InTargetCharacter);
	void OnRep_OneTimeScannedPlayerIDs();
	void AddPerspectiveDatas(class AActor* InActor, class UMeshComponent* InMesh);
};

// 0xF0 (0x1A0 - 0xB0)
// Class Solarland.SolarRadarComponent
class USolarRadarComponent : public UActorComponent
{
public:
	uint8                                        Pad_2AED[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class URadarScanSoundDataAsset*              RadarScanSoundDataAsset;                           // 0xB8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UUserWidget>               ScannedScreenUIClass;                              // 0xC0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ScannedEffectID;                                   // 0xC8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2AEE[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UUserWidget*                           CreatedScreenUI;                                   // 0xE8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTimerHandle                          DetectedTimerHandle;                               // 0xF0(0x8)(NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        TimerHandleCounter;                                // 0xF8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2AEF[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<int32, struct FTimerHandle>             DetectedTimerHandles;                              // 0x100(0x50)(Protected, NativeAccessSpecifierProtected)
	class ASolarCharacter*                       CharacterOwner;                                    // 0x150(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FScannedInfo>                  CurrentScanResults;                                // 0x158(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CurrentSpanTimer;                                  // 0x168(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2AF0[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FName>                          ActivedRadarTags;                                  // 0x170(0x10)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FMaterialChangeHandle                 DetectedMaterialHandle;                            // 0x180(0x8)(NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2AF1[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarRadarComponent* GetDefaultObj();

	void WarningByRadarNotifation(float InRemainingTime);
	void OnRecivedScanResults();
	void OnRecieveOnceScanStart(int32 ScanedNum, bool bSuperRader);
	void OnRadarScanStart(struct FRadarDataSpec* RadarDataSpec);
	void OnRadarScanEnd(struct FRadarDataSpec* RadarDataSpec);
	void OnRadarImmunityTagChanged(const struct FGameplayTag& Tag, int32 NewCount);
	void OnDetectedByRadar(bool bOnceScan, float InDetectedTime, struct FGameplayTag& InRadarImmunityTag, bool bSuperRader);
	void OnceScanSuccessNotifation(int32 ScanedNum);
	void OnceScanFailedNotifation();
	void MarkedByOnceScanNotifation();
	class FString GetModuleName_Implementation();
	void ExposedByRadarNotifation();
	void ChangeDetectedMaterial(bool bInDetected);
};

// 0x60 (0x90 - 0x30)
// Class Solarland.RadarScanSoundDataAsset
class URadarScanSoundDataAsset : public UDataAsset
{
public:
	class FString                                RadarScan_Loop_Start;                              // 0x30(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                RadarScan_Loop_End;                                // 0x40(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                RadarScan_Once_Success;                            // 0x50(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                RadarScan_Once_Failed;                             // 0x60(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                SuperRadarScan_FoundEnemy;                         // 0x70(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                SuperRadarScan_FoundByEnemy;                       // 0x80(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class URadarScanSoundDataAsset* GetDefaultObj();

};

// 0x58 (0x290 - 0x238)
// Class Solarland.SolarRadarStation
class ASolarRadarStation : public ASolarInteractableActor
{
public:
	bool                                         bEnable;                                           // 0x238(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2AF4[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        Zone;                                              // 0x23C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxTirggerDistance;                                // 0x240(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxTirggerAngle;                                   // 0x244(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                          CDTag;                                             // 0x248(0x8)(Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bBroken;                                           // 0x250(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bInCD;                                             // 0x251(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2AF5[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        CoolDownTime;                                      // 0x254(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CostEnergy;                                        // 0x258(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RemainCDTime;                                      // 0x25C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USphereComponent*                      CollisionComp;                                     // 0x260(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  NormalMesh;                                        // 0x268(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarObjAbilitySystemComponent*       ObjAbilitySystemComp;                              // 0x270(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class USolarObjGameplayAbility>  ObjAbilityClass;                                   // 0x278(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayAbilitySpecHandle            ObjAbilityHandle;                                  // 0x280(0x4)(NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2AF6[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASolarRadarStation* GetDefaultObj();

	bool TryTriggerRadarStation(class ASolarCharacter* InUser);
	void ServerInitailizeAbility();
	void OnResetCD();
	void OnRep_Broken();
	void OnRep_BInCD();
	void OnRadarStationCDChanged();
	void OnPlayStartScanEffect();
	void OnGameplayTagChanged(const struct FGameplayTag& Tag, bool bAdd);
	void OnClientStartScan();
	void OnBrokenChanged(bool InBroken);
	void InitailizeAbilityParams();
	float GetAbilityReaminingCD();
	float GetAbilityCostEnergy();
	float GetAbilityCooldown();
	bool CanActivateNow();
};

// 0x8 (0x38 - 0x30)
// Class Solarland.SolarRedHintManager
class USolarRedHintManager : public USolarGameManager
{
public:
	uint8                                        Pad_2AF7[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarRedHintManager* GetDefaultObj();

};

// 0x8 (0x230 - 0x228)
// Class Solarland.SolarRenderParametersBasedOnDifferentStates
class ASolarRenderParametersBasedOnDifferentStates : public AActor
{
public:
	class UDataTable*                            StreamingDistanceDataTable;                        // 0x228(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class ASolarRenderParametersBasedOnDifferentStates* GetDefaultObj();

	void SetRelativeStreamingDistanceScale(enum class ECharacterSkydivingState InCharacterSkydivingState);
};

// 0x3C0 (0x470 - 0xB0)
// Class Solarland.SolarReplayAutoDirectorComponent
class USolarReplayAutoDirectorComponent : public UActorComponent
{
public:
	uint8                                        Pad_2AFA[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        CollectTimeWindow;                                 // 0xD8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2AFB[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<enum class EAutoDirectorActivityType, float> AutoDirectorActivityEventScoreSetting;             // 0xE0(0x50)(Edit, NativeAccessSpecifierPublic)
	uint8                                        Pad_2AFC[0xF8];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TSet<class ASolarPlayerState*>               CurrentAllPlayerInAreaRadius;                      // 0x228(0x50)(Transient, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2AFD[0x1F8];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarReplayAutoDirectorComponent* GetDefaultObj();

	void UpdatePlayingNarrateActivityEvent();
	void TryResetFreeCamera();
	void TryPlayNextNode();
	void OnScrubFinished();
	void OnScoutPlayerWorkComplete();
	void OnReplayCameraBlocked();
	void OnPreFreeCameraFinished();
	void OnPlayerTakeDamage(class ASolarPlayerState* SourcePlayerState, class ASolarPlayerState* TargetPlayerState, struct FSolarPointDamageEvent& DamageEvent);
	void OnPlayerResurrectTeammate(class ASolarCharacter* ImplementResurrectionCharacter);
	void OnPlayerRescueTeammate(class ASolarCharacter* ImplementRescueCharacter, class ASolarCharacter* BeingRescuedCharacter);
	void OnPlayerPickupItem(class ASolarCharacter* Character, class AActor* PickupItem);
	void OnPlayerActiveRoleAbility(class ASolarCharacter* Character, uint8 AbilityIndex);
	void OnCustomGameStateChanged(enum class ESCMInGameState NewGameState);
	void OnCheckPlayerOut(class ASCMPlayerState* PlayerState, enum class ESCMPlayerOutType OutType);
	void OnCharacterGetOnVehicle(class ASolarCharacter* Character, class APawn* Vehicle);
	void EnumerateAutoDirectorNodeInfo();
};

// 0x28 (0x50 - 0x28)
// Class Solarland.SolarReplayCameraMovementFree
class USolarReplayCameraMovementFree : public UObject
{
public:
	uint8                                        Pad_2AFE[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ASolarSpectatorPawn*                   SpectatorPawn;                                     // 0x30(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2AFF[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarReplayCameraMovementFree* GetDefaultObj();

};

// 0x20 (0x48 - 0x28)
// Class Solarland.SolarReplayCameraMovementLock
class USolarReplayCameraMovementLock : public UObject
{
public:
	uint8                                        Pad_2B00[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarReplayCameraMovementLock* GetDefaultObj();

};

// 0x8 (0x30 - 0x28)
// Class Solarland.SolarReplayCameraBase
class USolarReplayCameraBase : public UObject
{
public:
	uint8                                        Pad_2B01[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarReplayCameraBase* GetDefaultObj();

};

// 0x20 (0x50 - 0x30)
// Class Solarland.SolarReplayCameraFocusSinglePlayer
class USolarReplayCameraFocusSinglePlayer : public USolarReplayCameraBase
{
public:
	struct FReplayFindSpectateTargetParams       FindSpectateTargetParams;                          // 0x30(0x18)(Protected, NativeAccessSpecifierProtected)
	class ASolarPlayerState*                     Target;                                            // 0x48(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class USolarReplayCameraFocusSinglePlayer* GetDefaultObj();

};

// 0x0 (0x50 - 0x50)
// Class Solarland.SolarReplayCameraThirdPerson
class USolarReplayCameraThirdPerson : public USolarReplayCameraFocusSinglePlayer
{
public:

	static class UClass* StaticClass();
	static class USolarReplayCameraThirdPerson* GetDefaultObj();

};

// 0x8 (0x58 - 0x50)
// Class Solarland.SolarReplayCameraLock
class USolarReplayCameraLock : public USolarReplayCameraFocusSinglePlayer
{
public:
	class USolarReplayCameraMovementLock*        Movement;                                          // 0x50(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class USolarReplayCameraLock* GetDefaultObj();

};

// 0x0 (0x50 - 0x50)
// Class Solarland.SolarReplayCameraFreeLookAt
class USolarReplayCameraFreeLookAt : public USolarReplayCameraFocusSinglePlayer
{
public:

	static class UClass* StaticClass();
	static class USolarReplayCameraFreeLookAt* GetDefaultObj();

};

// 0x8 (0x38 - 0x30)
// Class Solarland.SolarReplayCameraFree
class USolarReplayCameraFree : public USolarReplayCameraBase
{
public:
	class USolarReplayCameraMovementFree*        Movement;                                          // 0x30(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class USolarReplayCameraFree* GetDefaultObj();

};

// 0x60 (0x90 - 0x30)
// Class Solarland.SolarReplayCameraLookAtMovablePoint
class USolarReplayCameraLookAtMovablePoint : public USolarReplayCameraBase
{
public:
	uint8                                        Pad_2B02[0x40];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FSolarActorGroupOfReplayCamera> ActorGroups;                                       // 0x70(0x10)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2B03[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarReplayCameraLookAtMovablePoint* GetDefaultObj();

};

// 0x10 (0xA0 - 0x90)
// Class Solarland.SolarReplayCameraLookAt
class USolarReplayCameraLookAt : public USolarReplayCameraLookAtMovablePoint
{
public:
	uint8                                        Pad_2B04[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarReplayCameraLookAt* GetDefaultObj();

};

// 0x8 (0x98 - 0x90)
// Class Solarland.SolarReplayCameraCircular
class USolarReplayCameraCircular : public USolarReplayCameraLookAtMovablePoint
{
public:
	uint8                                        Pad_2B05[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarReplayCameraCircular* GetDefaultObj();

};

// 0xD8 (0x188 - 0xB0)
// Class Solarland.SolarReplayCameraControlComp
class USolarReplayCameraControlComp : public UActorComponent
{
public:
	FMulticastInlineDelegateProperty_            OnReplayCameraModeChanged;                         // 0xB0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B06[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class ASolarSpectateInfo*                    ReplayPCSpectateInfo;                              // 0xD8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DefaultSpeed;                                      // 0xE0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MoveSpeedChangeStep;                               // 0xE4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MoveSpeedMin;                                      // 0xE8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MoveSpeedMax;                                      // 0xEC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpeedUpScale;                                      // 0xF0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DefaultTurnRate;                                   // 0xF4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TurnRateChangeStep;                                // 0xF8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TurnSpeedMin;                                      // 0xFC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TurnSpeedMax;                                      // 0x100(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DistanceChangeStep;                                // 0x104(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarReplayCameraBase*                ReplayCamera;                                      // 0x108(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2B07[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ASolarPlayerState*                     LastTarget;                                        // 0x118(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2B08[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<enum class EReplayCameraMode, class USolarReplayCameraBase*> CacheCameras;                                      // 0x130(0x50)(NativeAccessSpecifierPrivate)
	uint8                                        Pad_2B09[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarReplayCameraControlComp* GetDefaultObj();

	void OnStreamingReadied();
	void OnSpectateInfoRep(class ASolarSpectateInfo* InSpecInfo);
	void OnReplayCameraModeChanged__DelegateSignature(enum class EReplayCameraMode OldMode, enum class EReplayCameraMode CurMode);
	void OnPlayingScrubStart();
	void OnPlayingScrubCharactersCreated();
	void OnPlayingFirstScrubFinished();
	enum class EReplayCameraMode GetReplayCameraMode();
	void ChangeLockSpectatorModeDistance(float Val);
};

// 0x78 (0x128 - 0xB0)
// Class Solarland.SolarReplayHighlightComponent
class USolarReplayHighlightComponent : public UActorComponent
{
public:
	uint8                                        Pad_2B0A[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        RecordAfterSettled;                                // 0xE0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SlowMoStartTime;                                   // 0xE4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        SlowMoEndTime;                                     // 0xE8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        SlowMoMultiplier;                                  // 0xEC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        KillEffectTime;                                    // 0xF0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2B0B[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UOBHighlightOverviewWidget*            HighlightOverviewWidget;                           // 0xF8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2B0C[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarReplayHighlightComponent* GetDefaultObj();

	void ReceiveHighlightOverviewData(struct FPlayerHighlightOverview& OverviewData);
	void ReceiveHighlightData(const class FString& PlayerId, struct FReplayActivityHeatFragment& NewFragment);
	void OnReplayWidgetTranslatePlayEndOver();
	void OnReplayWidgetTranslatePlayBeginOver();
	void OnReplayWidgetOverviewPlayEnd();
	void OnReplayWidgetHighlightPlayEnd();
	void OnReplayScrubStarted();
	void OnReplayPaused();
	void OnReplayContinued();
	class UUISubsystem* GetUISubSystem();
	class USolarReplayManager* GetReplayManager();
};

// 0x510 (0x538 - 0x28)
// Class Solarland.SolarReplayManager
class USolarReplayManager : public UObject
{
public:
	uint8                                        Pad_2B16[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSoftObjectPath                       WaitingOBMap;                                      // 0x40(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftClassPath                        WaitingReplayStartUIClass;                         // 0x58(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftClassPath                        OBModeSpectatorPawnClass;                          // 0x70(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftClassPath                        OBModeHUDClass;                                    // 0x88(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftClassPath                        OBHeadInfoWidgetClass;                             // 0xA0(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayCueTag                       PerspectiveCueTag;                                 // 0xB8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FGameplayCueTag                       PerspectiveInSmokeCueTag;                          // 0xC0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                       PerspectiveMaterial;                               // 0xC8(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAddMultiplePassMaterialChangeParams  PerspectiveMaterialParams;                         // 0xE0(0x40)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FSoftClassPath                        DirectorModeSpectatorPawnClass;                    // 0x120(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  DirectorModeInputModeName;                         // 0x138(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        UpdateDistanceInterval;                            // 0x140(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OBTeamListNearbyDistance;                          // 0x144(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OBHeadInfoNearDistance;                            // 0x148(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OBHeadInfoFarDistance;                             // 0x14C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OBDamageTextHideDistance;                          // 0x150(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OBDelayTimeForTournament;                          // 0x154(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OBLivePreDownloadTime;                             // 0x158(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OBSkipBeginningTime;                               // 0x15C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<float>                                OBPlaybackSpeedList;                               // 0x160(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        OBPlaybackSpeedDefaultIndex;                       // 0x170(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        OBLiveDelayChunkCount;                             // 0x171(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B17[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  OBLockCameraBindBoneName;                          // 0x174(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               OBLockCameraBindBoneOffset;                        // 0x17C(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OBInitLockDistance;                                // 0x188(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OBMinLockDistance;                                 // 0x18C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OBMaxLockDistance;                                 // 0x190(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OBMinLockPitch;                                    // 0x194(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OBMaxLockPitch;                                    // 0x198(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OBPitchAdjustTriggerFloor;                         // 0x19C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        OBPitchAdjustValue;                                // 0x1A0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ReplayCacheFileRetentionTimeInSeconds;             // 0x1A4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        HighlightFileRetentionTimeInSeconds;               // 0x1A8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        HighlightFileMaxCount;                             // 0x1AC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        HighlightMinimalDiskSpaceInMB;                     // 0x1B0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B18[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<int32>                                EnableHighlightModeGroups;                         // 0x1B8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftClassPath                        AutoDirectorComponentClass;                        // 0x1C8(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B19[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnPlayingStartedDelegate;                          // 0x1E8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnPlayingLoadLevelsStartedDelegate;                // 0x1F8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnPlayingLevelLoadedDelegate;                      // 0x208(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnPlayingStreamReadiedDelegate;                    // 0x218(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnPlayingAtEndDelegate;                            // 0x228(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnPlayingFinishedDelegate;                         // 0x238(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnRecordingStartedDelegate;                        // 0x248(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnRecordingStartFailedDelegate;                    // 0x258(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnRecordingFinishedDelegate;                       // 0x268(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnPlayingScrubStartDelegate;                       // 0x278(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnPlayingPreScrubDelegate;                         // 0x288(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnPlayingFirstScrubFinishedDelegate;               // 0x298(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnPlayingScrubFailedDelegate;                      // 0x2A8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnPlayingScrubCharactersCreatedDelegate;           // 0x2B8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnPlayingPauseDelegate;                            // 0x2C8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnPlayingContinueDelegate;                         // 0x2D8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnPlaybackSpeedChangedDelegate;                    // 0x2E8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnCheatersPlayerIDChanged;                         // 0x2F8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnAutoPlaybackSpeedUpStart;                        // 0x308(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnAutoPlaybackSpeedUpStop;                         // 0x318(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B1A[0x40];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnHighlightListChanged;                            // 0x368(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B1B[0x78];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UUserWidget*                           WaitingReplayStartUI;                              // 0x3F0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2B1C[0x140];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarReplayManager* GetDefaultObj();

	void WriteHeaderData(TArray<class FString>* OutHeaderData);
	void StopRecording();
	void StopPlayReplay();
	void StartRecording(const class FString& SessionName, const class FString& UploadUrl, enum class ERecordingType ForceRecordingType);
	void StartRecordHighlightOfCurrentBattle(const class FString& SessionNameOverride);
	void SpeedUpTimeDilation();
	void SlowDownTimeDilation();
	bool ShouldShowProgressBar();
	void SetTimeDilation(float Dilation);
	void SetStartSpectateTournamentTime();
	void SetRequestTryStrategy(float Interval, int32 Times);
	void SetRecordingType(enum class ERecordingType InRecordingType);
	void SetReadyToRecord(bool bIsReady, TArray<class FString>& OBPlayerIDs);
	void SetLiveWatchingPlayerForPlaying(const class FString& BeWatchingPlayerID);
	void SetEnableCompressForHttpReplay(bool bEnable);
	void RetryPlayReplayFromServer();
	void RequestWatchingLiveOfPlayer(const class FString& SolarPlayerID);
	void RequestPlayReplayOfCurrentBattle();
	void RequestPlayReplay(const class FString& InBattleID, bool IsLive);
	void RequestBattleList(int32 PageIndex, int32 PageSize);
	void ReplayManagerNoParamDelegate__DelegateSignature();
	void RecordReplayInfosOnRecordingStarted();
	void ReceivePlayingStartFailed();
	bool ReceivePlayingFinished(enum class EReplayPlayingFinishReason Reason, uint8 StreamerErrorCode, const class FString& StreamerErrorMsg);
	void ProcessHeaderData(TArray<class FString>& HeaderData, class FString* Error);
	void PlayReplayFromServer(const class FString& SessionName, const class FString& DownloadUrl);
	void PlayReplayFromLocal(const class FString& ReplayFileName);
	void PlayingFinishedInternal();
	void PlayHighlight(const class FString& InBattleID);
	void PausePlayReplay();
	void OnPlayingFinished(class UWorld* World);
	void OnPlayingAtEnd(class UWorld* World);
	void OnPlayerStopWatchingLive(const class FString& StopWatchingPlayerID);
	void OnPlayerStartWatchingLive(const class FString& RequestWatchingPlayerID, const class FString& BeWatchingPlayerID);
	void OnLiveWatchTargetLost();
	void NotifyTournamentSpectate(bool bIsInLiveReplay);
	bool NotifyBackendPlayReplayFinished();
	void LuaOnPostLoadMapWithWorld(const class FString& LevelName);
	void LuaBindDelegates();
	bool IsTournament();
	bool IsScrubing();
	bool IsReplayLive();
	bool IsRecordingHighlight();
	bool IsRecording();
	bool IsReady();
	bool IsPlayingHighlight();
	bool IsPlaying();
	bool IsPlayerBeWatching(const class FString& SolarPlayerID);
	bool IsPausing();
	bool IsLocal();
	bool IsLiveWatchOnly();
	bool IsInState(enum class EReplayManagerState CheckState);
	bool IsACheater(const class FString& PlayerId);
	void IgnoreTournamentDelayTimeForNextPlay();
	bool HasHighlight(const class FString& InBattleID);
	void GotoTimeInSecond(float Second);
	float GetTotalSessionTimeInSecond();
	float GetTimeDilation();
	void GetStartRecordingParams(struct FStartRecordingParams* OutParams);
	enum class ERecordingType GetRecordingType();
	float GetCurrentSessionTimeInSecond();
	class FString GetCurrentSessionName();
	class FString GetBeWatchingPlayerID();
	class FString GetBattleIDByIndex(int32 Index);
	void EnterSettlementStage();
	void DestroyWaitingOBStartUI();
	void DebugAllPlayerIsBeWatching(bool bAllPlayerIsBeWatching);
	void CreateWaitingOBStartUI();
	void ContinuePlayReplay();
	void AppendCheatersPlayerID(TArray<class FString>& InCheatersPlayerID);
};

// 0x48 (0x1A8 - 0x160)
// Class Solarland.SolarReplayPerspectiveEffect
class USolarReplayPerspectiveEffect : public UMaterialEffectBase
{
public:
	uint8                                        Pad_2B1D[0x48];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarReplayPerspectiveEffect* GetDefaultObj();

};

// 0x0 (0x1A8 - 0x1A8)
// Class Solarland.SolarReplayPerspectiveInSmokeEffect
class USolarReplayPerspectiveInSmokeEffect : public USolarReplayPerspectiveEffect
{
public:

	static class UClass* StaticClass();
	static class USolarReplayPerspectiveInSmokeEffect* GetDefaultObj();

};

// 0x100 (0xFA0 - 0xEA0)
// Class Solarland.SolarReplayPlayerController
class ASolarReplayPlayerController : public ASolarPlayerController
{
public:
	float                                        WaitFirstTeamNumberInputTime;                      // 0xEA0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WaitTeamNumberInputTime;                           // 0xEA4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarReplayCameraControlComp*         SolarReplayCameraControlComp;                      // 0xEA8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarReplayHighlightComponent*        SolarReplayHighlightComponent;                     // 0xEB0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarReplayAutoDirectorComponent*     SolarReplayAutoDirectorComponent;                  // 0xEB8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnEmitBulletDelegate;                              // 0xEC0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TMap<class FString, float>                   HorizontalDistanceBetweenPlayerAndOBCamera;        // 0xED0(0x50)(Transient, NativeAccessSpecifierPrivate)
	class USolarReplayManager*                   ReplayManager;                                     // 0xF20(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDemoNetDriver*                        DemoNetDriver;                                     // 0xF28(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2B1F[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<uint8, class UMaterialInstanceDynamic*> TeamNumToPerspectiveMaterialMap;                   // 0xF50(0x50)(NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class ASolarReplayPlayerController* GetDefaultObj();

	void UpdateDistanceBetweenOBCamAndPlayer();
	void StopSpectatePlayer();
	void StopPlayReplay();
	void SpectateVictim();
	void SpectatePlayerByPlayerID(const class FString& SolarPlayerID);
	void SpectateAttacker();
	void SolarGM_ToggleProgressControlButton();
	void SolarGM_SetWatchingLiveTarget(const class FString& InPlayerID);
	void SolarGM_ReplayDebugLog(bool bOpenDebugLog);
	bool ShowDamageText(struct FSolarDamageText* InDamageText);
	void SetUISettingHeadInfoStyle(enum class EOBPlayerHeadInfoWidgetStyle& InType);
	void SetDamageTextVisible(bool bIsVisible);
	void SetBattleOBHUDType(enum class EBattleOBHUDType& Type);
	void PauseReplay();
	void OnReplayPlayingLevelLoaded();
	void OnReplayPlayingFirstScrubFinished();
	void OnPlayingFinished();
	void OnEmitBulletDelegate__DelegateSignature(const struct FVector& StartLoc, const struct FVector& AimLoc, const class FString& SolarPlayerID);
	void OnBattleOBHUDTypeChanged(enum class EBattleOBHUDType& CurrentType);
	bool IsSpectatingPlayer();
	class ASolarPlayerState* GetWatchingLiveTarget();
	TMap<class FString, float> GetHorizontalDistanceBetweenPlayerAndOBCamera();
	class FString GetCurrentSpectatePlayerID();
	enum class EBattleOBHUDType GetBattleOBHUDType();
	void ExitDirectorMode();
	void EnterDirectorMode();
	void ContinueReplay();
};

// 0x1D8 (0x6D0 - 0x4F8)
// Class Solarland.SolarReplicationGraph
class USolarReplicationGraph : public UReplicationGraph
{
public:
	TArray<class UClass*>                        SpatializedClasses;                                // 0x4F8(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UClass*>                        NonSpatializedChildClasses;                        // 0x508(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UClass*>                        AlwaysRelevantClasses;                             // 0x518(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarReplicationGraphNode_ForceNetUpdate_ForRejoinConnection* RejoinNode;                                        // 0x528(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarReplicationGraphNode_GridSpatialization2D* GridNode;                                          // 0x530(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UReplicationGraphNode_ActorList*       AlwaysRelevantNode;                                // 0x538(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarReplicationGraphNode_CustomRelevancy* CustomRelevancyNode;                               // 0x540(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B20[0x50];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<uint8, class USolarReplicationGraphNode_AlwaysRelevant_ForTeam*> AlwaysRelevantForTeamNodes;                        // 0x598(0x50)(NativeAccessSpecifierPublic)
	uint8                                        Pad_2B21[0xE8];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarReplicationGraph* GetDefaultObj();

	void UnbindActorToCharacterTeam(class ASolarCharacter* Character, class AActor* Actor);
	void BindActorToCharacterTeam(class ASolarCharacter* Character, class AActor* Actor);
};

// 0xA8 (0x178 - 0xD0)
// Class Solarland.SolarReplicationGraphNode_ForceNetUpdate_ForRejoinConnection
class USolarReplicationGraphNode_ForceNetUpdate_ForRejoinConnection : public UReplicationGraphNode_ActorList
{
public:
	TSet<class UNetConnection*>                  PendingForceNetUpdateConnections;                  // 0xD0(0x50)(NativeAccessSpecifierPublic)
	TSet<class AActor*>                          PendingForceNetUpdateActors;                       // 0x120(0x50)(NativeAccessSpecifierPublic)
	uint8                                        Pad_2B22[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarReplicationGraphNode_ForceNetUpdate_ForRejoinConnection* GetDefaultObj();

};

// 0x10 (0xE0 - 0xD0)
// Class Solarland.SolarReplicationGraphNode_CustomRelevancy
class USolarReplicationGraphNode_CustomRelevancy : public UReplicationGraphNode_ActorList
{
public:
	uint8                                        Pad_2B23[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarReplicationGraphNode_CustomRelevancy* GetDefaultObj();

};

// 0x248 (0x298 - 0x50)
// Class Solarland.SolarReplicationGraphNode_AlwaysRelevant_ForConnection
class USolarReplicationGraphNode_AlwaysRelevant_ForConnection : public UReplicationGraphNode
{
public:
	uint8                                        Pad_2B24[0x228];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                LastPawn;                                          // 0x278(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FAlwaysRelevantActorInfo>      PastRelevantActors;                                // 0x280(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2B25[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarReplicationGraphNode_AlwaysRelevant_ForConnection* GetDefaultObj();

};

// 0x78 (0xC8 - 0x50)
// Class Solarland.SolarReplicationGraphNode_AlwaysRelevant_ForTeam
class USolarReplicationGraphNode_AlwaysRelevant_ForTeam : public UReplicationGraphNode
{
public:
	TArray<class AActor*>                        TeamActors;                                        // 0x50(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B26[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TSet<class ASolarCharacter*>                 LastReplicationActors;                             // 0x70(0x50)(NativeAccessSpecifierPrivate)
	class AActor*                                LastPawn;                                          // 0xC0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class USolarReplicationGraphNode_AlwaysRelevant_ForTeam* GetDefaultObj();

};

// 0x28 (0x78 - 0x50)
// Class Solarland.SolarReplicationGraphNode_PlayerStateFrequencyLimiter
class USolarReplicationGraphNode_PlayerStateFrequencyLimiter : public UReplicationGraphNode
{
public:
	uint8                                        Pad_2B27[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarReplicationGraphNode_PlayerStateFrequencyLimiter* GetDefaultObj();

};

// 0xA8 (0x2D0 - 0x228)
// Class Solarland.SolarReplicationGraphNode_GridSpatialization2D
class USolarReplicationGraphNode_GridSpatialization2D : public UReplicationGraphNode_GridSpatialization2D
{
public:
	TSet<class AActor*>                          PendingForceNetUpdateActors;                       // 0x228(0x50)(NativeAccessSpecifierPublic)
	uint8                                        Pad_2B28[0x58];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarReplicationGraphNode_GridSpatialization2D* GetDefaultObj();

};

// 0x10 (0x130 - 0x120)
// Class Solarland.SolarReplicationGraphNode_GridCell
class USolarReplicationGraphNode_GridCell : public UReplicationGraphNode_GridCell
{
public:
	class UReplicationGraphNode_ActorList*       ForceNetUpdateNode;                                // 0x120(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2B29[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarReplicationGraphNode_GridCell* GetDefaultObj();

};

// 0x0 (0x238 - 0x238)
// Class Solarland.SolarReplicationGraphDebugActor
class ASolarReplicationGraphDebugActor : public AReplicationGraphDebugActor
{
public:

	static class UClass* StaticClass();
	static class ASolarReplicationGraphDebugActor* GetDefaultObj();

	void ServerSetClassNetCullDistance(class UClass* Class, float CullDistance);
};

// 0x0 (0x28 - 0x28)
// Class Solarland.SolarResolutionSettings
class USolarResolutionSettings : public UObject
{
public:

	static class UClass* StaticClass();
	static class USolarResolutionSettings* GetDefaultObj();

	void SetScreenModeByNum(int32 InScreenMode);
	void SetScreenMode(enum class EWindowMode InScreenMode);
	enum class EWindowMode GetScreenMode();
	bool CanViewportSetWindowedMode();
};

// 0x88 (0x138 - 0xB0)
// Class Solarland.SolarResurrectionComponent
class USolarResurrectionComponent : public UActorComponent
{
public:
	uint8                                        bEnableResurrection;                               // 0xB0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2B2B[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ADeathTreasureBox*                     DeathBox;                                          // 0xB8(0x8)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               DeathBoxLoc;                                       // 0xC0(0xC)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EResurrectionState                ResurrectionState;                                 // 0xCC(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2B2C[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnResurrectionStateChanged;                        // 0xD0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	float                                        CurrentCountDownStartTime;                         // 0xE0(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CountDownAccTime;                                  // 0xE4(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2B2D[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ConfigCountDownTime;                               // 0xF0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ResurrectionClutchTime;                            // 0xF4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2B2E[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	uint8                                        bIsTimeoutCountDownPaused : 1;                     // Mask: 0x1, PropSize: 0x10x100(0x1)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        BitPad_1EA : 7;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_2B2F[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnTimeoutCountDownStateChanged;                    // 0x108(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class UWorldMark_ReviveTeammates> DeathBoxMark;                                      // 0x118(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UWorldMark_ReviveTeammates> DeathBoxMarkClass;                                 // 0x120(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class AActor>                 RebornLine;                                        // 0x128(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class AActor>                    RebornLineClass;                                   // 0x130(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class USolarResurrectionComponent* GetDefaultObj();

	void TryContinueTimeoutCountDown();
	void SetResurrectionState(enum class EResurrectionState NewState, bool bShouldNotifyOnServer);
	void SetDeathBox(class ADeathTreasureBox* InDeathBox);
	void ServerNotifyTeammatesHelp();
	void OnTimeoutCountDownStateChanged__DelegateSignature(bool bPaused);
	void OnResurrectionStateChanged__DelegateSignature(enum class EResurrectionState NewState);
	void OnRep_ResurrectionState(enum class EResurrectionState LastState);
	void OnRep_bIsTimeoutCountDownPaused();
	void MulticastPlayMarkNotify();
	void LazyPauseTimeoutCountDownByClutchTime();
	float GetWaitTimeRemaining();
	struct FVector GetDeathBoxLoc();
	void Event_OnRevivingComplete(const class FString& PlayerId);
	void Event_OnRevivedComplete();
	void Event_OnResurrectionStateChanged(enum class EResurrectionState LastState);
	void EnterBuyResurrectionProcess();
};

// 0x5F0 (0x750 - 0x160)
// Class Solarland.SolarRichTextBlock
class USolarRichTextBlock : public UTextLayoutWidget
{
public:
	bool                                         bEnableLocText;                                    // 0x160(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2B30[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  Text;                                              // 0x168(0x18)(Edit, Protected, NativeAccessSpecifierProtected)
	int32                                        LocTextID;                                         // 0x180(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ESolarSupportLanguages            PreviewLang;                                       // 0x184(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2B31[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UDataTable*                            TextStyleSet;                                      // 0x188(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<TSubclassOf<class URichTextBlockDecorator>> DecoratorClasses;                                  // 0x190(0x10)(Edit, ZeroConstructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bOverrideDefaultStyle;                             // 0x1A0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2B32[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTextBlockStyle                       DefaultTextStyleOverride;                          // 0x1A8(0x2A8)(Edit, Protected, NativeAccessSpecifierProtected)
	float                                        MinDesiredWidth;                                   // 0x450(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bUsingAccurateScale;                               // 0x454(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2B33[0x2AB];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class URichTextBlockDecorator*>       InstanceDecorators;                                // 0x700(0x10)(ZeroConstructor, Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2B34[0x40];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarRichTextBlock* GetDefaultObj();

	void SetWrapTextAt(float InWrapTextAt);
	void SetWrappingPolicy(enum class ETextWrappingPolicy InWrappingPolicy);
	void SetTextStyleSet(class UDataTable* NewTextStyleSet);
	void SetText(class FText& InText);
	void SetMinDesiredWidth(float InMinDesiredWidth);
	void SetDefaultTextStyle(struct FTextBlockStyle& InDefaultTextStyle);
	void SetDefaultStrikeBrush(struct FSlateBrush* InStrikeBrush);
	void SetDefaultShadowOffset(const struct FVector2D& InShadowOffset);
	void SetDefaultShadowColorAndOpacity(const struct FLinearColor& InShadowColorAndOpacity);
	void SetDefaultFont(const struct FSlateFontInfo& InFontInfo);
	void SetDefaultColorAndOpacity(const struct FSlateColor& InColorAndOpacity);
	void SetAutoWrapText(bool InAutoTextWrap);
	enum class ETextWrappingPolicy GetWrappingPolicy();
	class UDataTable* GetTextStyleSet();
	class FText GetText();
	class URichTextBlockDecorator* GetDecoratorByClass(TSubclassOf<class URichTextBlockDecorator> DecoratorClass);
	void ClearAllDefaultStyleOverrides();
};

// 0x0 (0x28 - 0x28)
// Class Solarland.SolarRichTextBlockDecorator
class USolarRichTextBlockDecorator : public UObject
{
public:

	static class UClass* StaticClass();
	static class USolarRichTextBlockDecorator* GetDefaultObj();

};

// 0x8 (0x30 - 0x28)
// Class Solarland.SolarRichTextBlockImageDecorator
class USolarRichTextBlockImageDecorator : public USolarRichTextBlockDecorator
{
public:
	class UDataTable*                            ImageSet;                                          // 0x28(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class USolarRichTextBlockImageDecorator* GetDefaultObj();

};

// 0x98 (0x480 - 0x3E8)
// Class Solarland.SolarRocketVehicleAnimInstance
class USolarRocketVehicleAnimInstance : public USolarLeggedVehicleAnimInstance
{
public:
	bool                                         bInEquipState;                                     // 0x3E8(0x1)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2B35[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        FootTargetTraceLength;                             // 0x3EC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FVector>                       FootTargetTraceStartLocations;                     // 0x3F0(0x10)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FootTraceRadius;                                   // 0x400(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FootTargetBlendSpeed;                              // 0x404(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<float>                                FootTargetOffsets;                                 // 0x408(0x10)(Edit, ZeroConstructor, EditConst, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                          VehicleWeapoReloadMontage;                         // 0x418(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bWeaponFiring;                                     // 0x420(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bInPrecisionShoot;                                 // 0x421(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2B36[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        RocketBoneAlpha;                                   // 0x424(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<class FName, struct FVector>            RocketBoneScales;                                  // 0x428(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_2B37[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarRocketVehicleAnimInstance* GetDefaultObj();

	void AnimNotify_EnterOpen();
};

// 0x1C0 (0x1F0 - 0x30)
// Class Solarland.SolarRoleSkillDataConfig
class USolarRoleSkillDataConfig : public UDataAsset
{
public:
	TSoftObjectPtr<class UPassiveSkillDataAsset> ClassCommonPassiveSkill;                           // 0x30(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<enum class EClassType, struct FHeroClassConfig> HeroClassConfigs;                                  // 0x58(0x50)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class UDataTable*                            RoleSkillDataTable;                                // 0xA8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDataTable*                            BattleUpgradeEffectTypeDataTable;                  // 0xB0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RoleSkillCannotActiveNoticeID;                     // 0xB8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B3B[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSoftClassPath                        UniqueSkillForbiddenGameplayEffect;                // 0xC0(0x18)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftClassPath                        TacticalSkillForbiddenGameplayEffect;              // 0xD8(0x18)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftClassPath                        InitCDValueGameplayEffect;                         // 0xF0(0x18)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftClassPath                        SuperSkillBlockGameplayEffect;                     // 0x108(0x18)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftClassPath                        TacticalSkillBlockGameplayEffect;                  // 0x120(0x18)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UGameplayEffect>           UsingContinuousSkillStatusEffect;                  // 0x138(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UGameplayEffect>           HoldingSkillStatusEffect;                          // 0x140(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDataTable*                            WeaponUIStyleDataTable;                            // 0x148(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<int32, class FString>                   CharacterUpgradeEffects;                           // 0x150(0x50)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B3C[0x50];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarRoleSkillDataConfig* GetDefaultObj();

	enum class EClassLevelUpRewardType GetLevelUpRewardType(int32 CharacterId, int32 TargetLevel);
	struct FSoftObjectPath GetLevelUpInnerIconPath(int32 CharacterId, int32 TargetLevel);
	class FString GetLevelUpInnerDescription(int32 CharacterId, int32 TargetLevel);
	TArray<struct FSoftObjectPath> GetLevelUpAllInnerIconPath(int32 CharacterId, int32 TargetLevel);
	TArray<class FString> GetLevelUpAllInnerDescription(int32 CharacterId, int32 TargetLevel);
	class FString GetEffectIdForCharacterUpgrade(int32 TargetLevel);
	enum class EClassType GetClassTypeForCharacter(int32 CharacterId);
};

// 0x10 (0x38 - 0x28)
// Class Solarland.SolarRuntimeAssetsCollection
class USolarRuntimeAssetsCollection : public URuntimeAssetsCollectionBase
{
public:
	TArray<struct FFilteredData>                 AssetFilters;                                      // 0x28(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class USolarRuntimeAssetsCollection* GetDefaultObj();

};

// 0x8 (0x30 - 0x28)
// Class Solarland.SolarPattern
class USolarPattern : public UObject
{
public:
	bool                                         bEnabled;                                          // 0x28(0x1)(Edit, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2B3D[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarPattern* GetDefaultObj();

};

// 0x8 (0x30 - 0x28)
// Class Solarland.SolarPatternRuntime
class USolarPatternRuntime : public UObject
{
public:
	class USolarPattern*                         PattenData;                                        // 0x28(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class USolarPatternRuntime* GetDefaultObj();

};

// 0x8 (0x38 - 0x30)
// Class Solarland.SolarIncreaseAndDecreasePattern
class USolarIncreaseAndDecreasePattern : public USolarPattern
{
public:
	enum class EIncreaseAndDecreaseTransitionMode TransitionMode;                                    // 0x30(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B3E[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarIncreaseAndDecreasePattern* GetDefaultObj();

};

// 0x20 (0x50 - 0x30)
// Class Solarland.SolarIncreaseAndDecreasePatternRuntime
class USolarIncreaseAndDecreasePatternRuntime : public USolarPatternRuntime
{
public:
	uint8                                        Pad_2B3F[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarIncreaseAndDecreasePatternRuntime* GetDefaultObj();

};

// 0x88 (0xB0 - 0x28)
// Class Solarland.SolarSaveGame
class USolarSaveGame : public USaveGame
{
public:
	bool                                         HasShowNewPlayerGuide;                             // 0x28(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B45[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        EditorGameModeId;                                  // 0x2C(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FNeverShowCheckWindow>         NeverShowCheckWindowList;                          // 0x30(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         HasReadSurvey;                                     // 0x40(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         HasReadSurvey2;                                    // 0x41(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         HasPlayedHuntMode;                                 // 0x42(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        MatchTimes;                                        // 0x43(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         HasCompleteTeamUp;                                 // 0x44(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsMorrowPlayer;                                    // 0x45(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bClickSocialEntranceBtnDiscord;                    // 0x46(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bClickSocialEntranceBtnFacebook;                   // 0x47(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bClickSocialEntranceBtnYouTube;                    // 0x48(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bClickSocialEntranceBtnTikTok;                     // 0x49(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bClickSocialEntranceBtnInstagram;                  // 0x4A(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bClickSocialTip;                                   // 0x4B(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bClickLiveBroadcast;                               // 0x4C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B46[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int64                                        SocialLinkLastClickTime;                           // 0x50(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHasReportedOnline15min;                           // 0x58(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHasReportedOnline30min;                           // 0x59(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHasPlayedPackEnterAnimation;                      // 0x5A(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHasClickClanPermission;                           // 0x5B(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHasClickVipCard;                                  // 0x5C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B47[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        BattlePassID;                                      // 0x60(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2B48[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<int32>                                MarkingPassTaskID;                                 // 0x68(0x10)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<int32>                                DisplayedProductIDs;                               // 0x78(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<int32>                                ClickedPosterRecIDs;                               // 0x88(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2B49[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<uint32>                               ReadMailIds;                                       // 0xA0(0x10)(Edit, ZeroConstructor, EditConst, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class USolarSaveGame* GetDefaultObj();

	bool ValidateNeverShowCheckWindow(int32 TargetConfirmID);
	void UpdateNeverShowCheckWindow(int32 TargetConfirmID, enum class ENeverShowDuration NewDuration);
	void UpdateMarkTask(int32 InBattlePassID, int32 TaskID, bool Add);
	void UpdateDisplayedIDs(TArray<int32>& InIDs);
	void UpdateClickedPosterRecIDs(int32 InID);
	void SetMarkingTask(int32 InBattlePassID, TArray<int32>* InTaskID);
	void PrintTwiceConfirmCheckWindowList();
	void GetMarkingTask(int32 InBattlePassID, TArray<int32>* OutTaskID);
	bool DeleteNeverShowCheckWindow(int32 TargetConfirmID);
	void ClearDisplayIDs();
};

// 0x30 (0x60 - 0x30)
// Class Solarland.SolarSceneConfig
class USolarSceneConfig : public UDataAsset
{
public:
	struct FSoftObjectPath                       MeshMapPath;                                       // 0x30(0x18)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                       LightmapPath;                                      // 0x48(0x18)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class USolarSceneConfig* GetDefaultObj();

};

// 0x8 (0x350 - 0x348)
// Class Solarland.SolarScreenEffectWidget
class USolarScreenEffectWidget : public USolarUserWidget
{
public:
	uint8                                        Pad_2B4A[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bCanBeReused;                                      // 0x34C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2B4B[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarScreenEffectWidget* GetDefaultObj();

	void StopPlayScreenEffect();
	void StartPlayScreenEffect();
	bool ShouldEnablePoisonEffect();
	void PreAddToReuseCache();
	void PostRemoveFromReuseCache();
	void NotifyScreenEffectComplete();
	bool IsInstantEffectComplete();
	bool IsFadeOutFinished();
	void FadeOutScreenEffect();
};

// 0x8 (0x1A0 - 0x198)
// Class Solarland.SolarShieldDamageEffect
class USolarShieldDamageEffect : public USolarAbilityEffect
{
public:
	float                                        ShieldDamage;                                      // 0x198(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2B4C[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarShieldDamageEffect* GetDefaultObj();

	float GetShieldDamage();
};

// 0x38 (0x2F0 - 0x2B8)
// Class Solarland.SolarShieldProgressBoard
class USolarShieldProgressBoard : public USolarAdvProgressBoard
{
public:
	float                                        AutoRechargeSpeed;                                 // 0x2B8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RechargeTime;                                      // 0x2BC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PreChangeSpeed;                                    // 0x2C0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B4E[0x2C];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarShieldProgressBoard* GetDefaultObj();

	void UpdateCurrentValue(float Current);
	void SetSpeed(float NewSpeed);
	void SetProgressColorByID(struct FLinearColor& InColor, int32 InID);
	void SetPreAddColor();
	void PreAddValue(float InCurrentValue, float InChangeValue, enum class EShieldRechargeState RechargeState, bool bInFixPreAdd);
	void InitProgressBoard(float Current, float Max, int32 Fragment);
	void InitProgress();
	float GetSpeed();
	void DoMinusValue(float InCurrentValue, float InChangeValue);
	void DoAddValue(float InCurrentValue);
	void CancelAddValue(float InCurrentValue, float InChangeValue);
};

// 0x200 (0x438 - 0x238)
// Class Solarland.SolarShieldUpgradeItemShop
class ASolarShieldUpgradeItemShop : public ASolarInteractableActor
{
public:
	int32                                        Groupid;                                           // 0x238(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ServerActiveGroupID;                               // 0x23C(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMeshComponent*                BodyMesh;                                          // 0x240(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USphereComponent*                      CollisionComp;                                     // 0x248(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  HeadUpIconMesh;                                    // 0x250(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  BodyScreenMesh;                                    // 0x258(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2B54[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        UpgradeItemNum;                                    // 0x278(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2B55[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UParticleSystem>        InteractionTriggeredEffect;                        // 0x280(0x28)(Edit, BlueprintVisible, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FSolarIntArray                        InteractedPlayerIDList;                            // 0x2A8(0x130)(Net, Transient, RepNotify, Protected, NativeAccessSpecifierProtected)
	int32                                        Uid;                                               // 0x3D8(0x4)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2B56[0x1C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class USphereComponent*                      AudioTriggerComp;                                  // 0x3F8(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAkComponent*                          AkAudioComponent;                                  // 0x400(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarAkGameObject*                    SolarAkGameObject;                                 // 0x408(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                SNameHint;                                         // 0x410(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                SNameStopHint;                                     // 0x420(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2B57[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASolarShieldUpgradeItemShop* GetDefaultObj();

	void OnRep_UID();
	void OnRep_InteractedPlayerIDList();
	void OnRep_ActiveGroupID();
	void OnOtherPlayerInteracted();
	void OnLocalPlayerSpectateTargetChanged(class ASolarPlayerState* OldTarget, class ASolarSpectateInfo* InSpectateInfo);
	void OnBindLocalPlayerSpectateTargetChanged(class ASolarSpectateInfo* SpecInfo);
	void OnActorEndOverlapAudioSphere(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void OnActorEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void OnActorBeginOverlapAudioSphere(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	void OnActorBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	void InitSolarAkGameObject(class UActorComponent* Component, bool bReset);
};

// 0x28 (0x13A8 - 0x1380)
// Class Solarland.SolarWheeledVehicle
class ASolarWheeledVehicle : public ASolarVehiclePawn
{
public:
	uint8                                        Pad_2B58[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USolarWheeledVehicleMovement*          VehicleMovement;                                   // 0x1388(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bReplicatedDrift;                                  // 0x1390(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bReplicatedIsBurnout;                              // 0x1391(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2B59[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        PlatformDetachImpulse;                             // 0x1394(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2B5A[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASolarWheeledVehicle* GetDefaultObj();

	void StatVehicleAutoSteering(bool bInSameDirection);
	void ServerSetIsDrift(bool bInDrift, uint8 InDriveType);
	void ServerSetIsBurnout(bool bInBurnout);
	void OnRep_IsBurnout();
	void OnRep_Drift();
};

// 0x68 (0x1410 - 0x13A8)
// Class Solarland.SolarSiegeVehicle
class ASolarSiegeVehicle : public ASolarWheeledVehicle
{
public:
	TArray<struct FSiegeVehicleOpenTraceData>    CheckOpenTraceBox;                                 // 0x13A8(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FSiegeVehicleOpenCapsuleData>  CheckOpenTraceCap;                                 // 0x13B8(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CheckOffsetZ;                                      // 0x13C8(0x4)(Edit, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B5B[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USolarSiegeVehicleAnimInstance*        SolarVehicleAnimInstance;                          // 0x13D0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class FName>                          HolerBoneNames;                                    // 0x13D8(0x10)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                       SiegeWeaponFire;                                   // 0x13E8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2B5C[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UCameraShake>              OpenCameraShake;                                   // 0x13F8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        OpenCameraShakeSpeed;                              // 0x1400(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2B5D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UParticleSystemComponent*              MuzzlePSC;                                         // 0x1408(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class ASolarSiegeVehicle* GetDefaultObj();

	bool IsSiegeWeaponOpened();
	uint8 GetCurrentVehicleAnimation();
};

// 0xE8 (0x410 - 0x328)
// Class Solarland.SolarWheeledVehicleAnimInstance
class USolarWheeledVehicleAnimInstance : public USolarVehicleAnimInstance
{
public:
	uint8                                        Pad_2B5E[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               FLWheelBoneScale;                                  // 0x330(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               FRWheelBoneScale;                                  // 0x33C(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               MLWheelBoneScale;                                  // 0x348(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               MRWheelBoneScale;                                  // 0x354(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               BLWheelBoneScale;                                  // 0x360(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               BRWheelBoneScale;                                  // 0x36C(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               FLWheelBoneLocation;                               // 0x378(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               FRWheelBoneLocation;                               // 0x384(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               MLWheelBoneLocation;                               // 0x390(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               MRWheelBoneLocation;                               // 0x39C(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               BLWheelBoneLocation;                               // 0x3A8(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               BRWheelBoneLocation;                               // 0x3B4(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              FLWheelBoneRotation;                               // 0x3C0(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                              FRWheelBoneRotation;                               // 0x3CC(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                              MLWheelBoneRotation;                               // 0x3D8(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                              MRWheelBoneRotation;                               // 0x3E4(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                              BLWheelBoneRotation;                               // 0x3F0(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                              BRWheelBoneRotation;                               // 0x3FC(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B5F[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarWheeledVehicleAnimInstance* GetDefaultObj();

	void AnimNotify_EnablePlatform();
	void AnimNotify_DisablePlatform();
	void AnimNotify_ClosePlatform();
};

// 0x30 (0x440 - 0x410)
// Class Solarland.SolarSiegeVehicleAnimInstance
class USolarSiegeVehicleAnimInstance : public USolarWheeledVehicleAnimInstance
{
public:
	TArray<struct FVector>                       SiegeHolderLocations;                              // 0x410(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B60[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        PreStopSpeed;                                      // 0x424(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WeaponFireAlphaF;                                  // 0x428(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WeaponFireAlphaB;                                  // 0x42C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WeaponFireAlphaR;                                  // 0x430(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WeaponFireAlphaL;                                  // 0x434(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StopSoundMinSpeed;                                 // 0x438(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B61[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarSiegeVehicleAnimInstance* GetDefaultObj();

	void AnimNotify_StopLeft();
	void AnimNotify_CloseIdleLeft();
	void AnimNotify_CloseIdleEnter();
};

// 0x0 (0x28 - 0x28)
// Class Solarland.SolarSignificanceInterface
class ISolarSignificanceInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class ISolarSignificanceInterface* GetDefaultObj();

	void PostGroupIDChangedFunction(int32 OldGroup, int32 NewGroup);
};

// 0x88 (0x1C0 - 0x138)
// Class Solarland.SolarSignificanceManager
class USolarSignificanceManager : public USignificanceManager
{
public:
	float                                        CalculateSceneActorTickInterval;                   // 0x138(0x4)(ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B62[0x1C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AActor*>                        ManagedSceneActors;                                // 0x158(0x10)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSet<class AActor*>                          ManagedSceneActorSet;                              // 0x168(0x50)(Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_2B63[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarSignificanceManager* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Solarland.SolarSkeletalMeshMergeUtil
class USolarSkeletalMeshMergeUtil : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class USolarSkeletalMeshMergeUtil* GetDefaultObj();

	class USkeletalMesh* MergeMeshes(struct FSkeletalMeshMergeParams& Params);
};

// 0xB8 (0x498 - 0x3E0)
// Class Solarland.SummonItemTurret
class ASummonItemTurret : public ASummonItemBase
{
public:
	float                                        DetectableRadius;                                  // 0x3E0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B65[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<enum class EObjectTypeQuery>          DetectableCollisionTypes;                          // 0x3E8(0x10)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TurretYawRotateSpeed;                              // 0x3F8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2B66[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class ASolarSummonWeapon>        TurretWeaponBP;                                    // 0x400(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                       BoomEffect;                                        // 0x408(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AimMaxAngle;                                       // 0x410(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2B67[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<enum class EObjectTypeQuery>          BlockShotObjectTypes;                              // 0x418(0x10)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        BlockShotCheckRadius;                              // 0x428(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TestEnemyHeight;                                   // 0x42C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class FName>                          PrioritizeTargetingBoneNames;                      // 0x430(0x10)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TurretTransformTime;                               // 0x440(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ForceResearchTargetTime;                           // 0x444(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ASolarSummonWeapon*                    CurrentWeapon;                                     // 0x448(0x8)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRotator                              LookAtTargetRotator;                               // 0x450(0xC)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        AnimationIndex;                                    // 0x45C(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2B68[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USkeletalMeshComponentBudgeted*        TurretMesh;                                        // 0x460(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2B69[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSpawnedActorHandle                   CachedTurretHandle;                                // 0x46C(0x4)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2B6A[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASummonItemTurret* GetDefaultObj();

	void OnTurretStandby();
	void OnTurretLocked();
	void OnTurretFire();
	void OnTurretDead();
	void OnTurretAppear();
	void OnRep_LookAtTargetRotator();
	void OnRep_AnimationIndex();
	void NetMulticastDrawAimLine(struct FVector& InStartLocation, TArray<struct FVector4>& InEndLocationArray);
};

// 0x18 (0x4B0 - 0x498)
// Class Solarland.SolarSkill_AutomaticTurret
class ASolarSkill_AutomaticTurret : public ASummonItemTurret
{
public:
	int32                                        TestOverlapDestroyInterval;                        // 0x498(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               TestOverlapDestroyBoxExtent;                       // 0x49C(0xC)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        TestOverlapDestroyTimer;                           // 0x4A8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2B6B[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASolarSkill_AutomaticTurret* GetDefaultObj();

};

// 0x330 (0x558 - 0x228)
// Class Solarland.SolarSkill_Projectile
class ASolarSkill_Projectile : public AActor
{
public:
	uint8                                        Pad_2B6E[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UProjectileMovementComponent*          ProjectileMovementComponent;                       // 0x230(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPrimitiveComponent*                   DefaultUpdateComponent;                            // 0x238(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               ProjectileVelocity;                                // 0x240(0xC)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2B6F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayEffectSpecHandle             ToSelfGameplayEffectHandle;                        // 0x250(0x10)(BlueprintVisible, BlueprintReadOnly, Protected, ExposeOnSpawn, NativeAccessSpecifierProtected)
	struct FGameplayEffectSpecHandle             ToTargetGameplayEffectHandle;                      // 0x260(0x10)(BlueprintVisible, BlueprintReadOnly, Protected, ExposeOnSpawn, NativeAccessSpecifierProtected)
	struct FHitResult                            ProjectileStopResult;                              // 0x270(0x88)(Net, IsPlainOldData, RepNotify, NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	bool                                         bDebug;                                            // 0x2F8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bInstantStop;                                      // 0x2F9(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2B70[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ForceStopTime;                                     // 0x2FC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DeferExplodeTime;                                  // 0x300(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2B71[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSoftObjectPath                       ProjectileStopEffectPath;                          // 0x308(0x18)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTransform                            ProjectileStopEffectTransform;                     // 0x320(0x30)(Edit, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FSoftObjectPath                       ProjectileExplosionEffectPath;                     // 0x350(0x18)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2B72[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            ProjectileExplosionEffectTransform;                // 0x370(0x30)(Edit, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FSoftObjectPath                       ProjectileTrajectoryEffectPath;                    // 0x3A0(0x18)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAttachToHitActorOnStop;                           // 0x3B8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bDestroyOnExplode;                                 // 0x3B9(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2B73[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DeferDestroyTime;                                  // 0x3BC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bHiddenOnStop;                                     // 0x3C0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bHiddenOnExplode;                                  // 0x3C1(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2B74[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class AActor>                    SpawnActorClassOnStop;                             // 0x3C8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class AActor>                    SpawnActorClassOnExplode;                          // 0x3D0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bForbidSpawnActorOnHitSomeActor;                   // 0x3D8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2B75[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<TSubclassOf<class AActor>>            ForbidSpawnActorArray;                             // 0x3E0(0x10)(Edit, ZeroConstructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2B76[0xA0];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UAkComponent*                          AkAudioComponent;                                  // 0x490(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                SetProjectileVelocitySoundEvent1P;                 // 0x498(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                SetProjectileVelocitySoundEvent3P;                 // 0x4A8(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                SetProjectileVelocitySoundEvent3PEnemy;            // 0x4B8(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                OnProjectileMovementStopSoundEvent1P;              // 0x4C8(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                OnProjectileMovementStopSoundEvent3P;              // 0x4D8(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                OnProjectileMovementStopSoundEvent3PEnemy;         // 0x4E8(0x10)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                CommonHitSound1P;                                  // 0x4F8(0x10)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                CommonHitSound3P;                                  // 0x508(0x10)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                CommonHitSound3PEnemy;                             // 0x518(0x10)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                ExplosionSound1P;                                  // 0x528(0x10)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                ExplosionSound3P;                                  // 0x538(0x10)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                ExplosionSound3PEnemy;                             // 0x548(0x10)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class ASolarSkill_Projectile* GetDefaultObj();

	void ReceiveSetProjectileMovement();
	void ReceiveProjectileMovementStop(struct FHitResult& InImpactResult);
	void ReceiveExplosion(struct FHitResult& InImpactResult);
	void OnTeamIgnoreCollisionActorChange(bool bAdd, class AActor* InActor, uint8 TeamID);
	void OnRep_ProjectileVelocity();
	void OnRep_ProjectileStopResult();
	void OnProjectileMovementStopInternal(struct FHitResult& InImpactResult);
	void OnProjectileMovementStop(struct FHitResult& InImpactResult);
	void OnProjectileBounce(struct FHitResult& InImpactResult, struct FVector& InImpactVelocity);
	void OnChangeOwnerCharacterInternal();
	void OnChangeOwnerCharacter();
	void K2_PlaySound(const class FString& InControlledOrSpectatedSoundName, const class FString& InTeammateSoundName, const class FString& InEnemySoundName);
	class ASolarCharacter* GetOwnerCharacter();
	void ExplodeInternal(struct FHitResult& InImpactResult);
};

// 0xE8 (0x640 - 0x558)
// Class Solarland.SolarSkill_ClusterGrenade
class ASolarSkill_ClusterGrenade : public ASolarSkill_Projectile
{
public:
	float                                        Speed;                                             // 0x558(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ThrowAngleOffset;                                  // 0x55C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ExplosionRadius;                                   // 0x560(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B77[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UStaticMeshComponent*                  ClusterGrenadeMesh;                                // 0x568(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsLeader;                                         // 0x570(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2B78[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Damage;                                            // 0x574(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRuntimeFloatCurve                    DamageScaleByDistanceCurve;                        // 0x578(0x88)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	TArray<enum class EObjectTypeQuery>          CanDamageObjectTypes;                              // 0x600(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DelayDestroyTime;                                  // 0x610(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2B79[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FSolarSubClusterGrenadeData>   SubClusterGrenades;                                // 0x618(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bTeammateDamage;                                   // 0x628(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2B7A[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<TWeakObjectPtr<class ASolarSkill_ClusterGrenade>> ClusterGrenadeIgnoreArray;                         // 0x630(0x10)(ZeroConstructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class ASolarSkill_ClusterGrenade* GetDefaultObj();

};

// 0x48 (0x5A0 - 0x558)
// Class Solarland.SolarSkill_EMP
class ASolarSkill_EMP : public ASolarSkill_Projectile
{
public:
	float                                        TestRadius;                                        // 0x558(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DamageToShield;                                    // 0x55C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DamageToSummon;                                    // 0x560(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2B7B[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<enum class EObjectTypeQuery>          TestObjectTypes;                                   // 0x568(0x10)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DelayDestroyTime;                                  // 0x578(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2B7C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class AActor>                    PerformActorClass;                                 // 0x580(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class AActor>                    EnemyPerformActorClass;                            // 0x588(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PerformActorLifeTime;                              // 0x590(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bSpawndPerformActor;                               // 0x594(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2B7D[0xB];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASolarSkill_EMP* GetDefaultObj();

};

// 0x180 (0x560 - 0x3E0)
// Class Solarland.SolarSkill_EMPForceField
class ASolarSkill_EMPForceField : public ASummonItemBase
{
public:
	TArray<enum class EActorRegisterType>        TestTypes;                                         // 0x3E0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                             TestRange;                                         // 0x3F0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  CoreName;                                          // 0x3F8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<enum class ESolarEMPParticleType, struct FSolarEMPParticleInfo> EMPParticleTable;                                  // 0x400(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	float                                        ForceFieldReadyTime;                               // 0x450(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ForceFieldActiveTime;                              // 0x454(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ForceFieldEndTime;                                 // 0x458(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2B7F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                EMPStartSoundName;                                 // 0x460(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                EMPEndSoundName;                                   // 0x470(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                DamageShiledSoundName;                             // 0x480(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FSoftClassPath                        EffectActorClassPathForTeammate;                   // 0x490(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FSoftClassPath                        EffectActorClassPathForEnemy;                      // 0x4A8(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DamageValueToCharacterShield;                      // 0x4C0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DamageCharacterShieldInterval;                     // 0x4C4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FixedDamageValueToCharacterShield;                 // 0x4C8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2B80[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<TWeakObjectPtr<class AActor>, struct FActiveGameplayEffectHandle> TestActorMap;                                      // 0x4D0(0x50)(Transient, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class UShapeComponent>        CoreComponent;                                     // 0x520(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UParticleSystemComponent*>      ManualReleaseEmitterArray;                         // 0x528(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2B81[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class ESolarEMPForceFieldState          CurrentEMPState;                                   // 0x539(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2B82[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ASolarSkill_ForceFieldEffect*          EffectActor;                                       // 0x540(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2B83[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASolarSkill_EMPForceField* GetDefaultObj();

	void OnTestActorEndPlay(class AActor* InActor, enum class EEndPlayReason InEndPlayReason);
	void OnRep_CurrentState();
	void MulticastOnDamagedCharacterShield(class ASolarCharacter* InCharacter);
	void K2_OnDamagedCharacterShield(class ASolarCharacter* InCharacter);
};

// 0x0 (0x228 - 0x228)
// Class Solarland.SolarSkill_ForceFieldEffect
class ASolarSkill_ForceFieldEffect : public AActor
{
public:

	static class UClass* StaticClass();
	static class ASolarSkill_ForceFieldEffect* GetDefaultObj();

	void PlayLoopAnimation();
	void PlayFadeOutAnimation();
	void PlayFadeInAnimation();
};

// 0x98 (0x5F0 - 0x558)
// Class Solarland.SolarSkill_Grenade
class ASolarSkill_Grenade : public ASolarSkill_Projectile
{
public:
	struct FRuntimeFloatCurve                    DamageCurve;                                       // 0x558(0x88)(Edit, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_2B84[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASolarSkill_Grenade* GetDefaultObj();

};

// 0x188 (0x6E0 - 0x558)
// Class Solarland.SolarSkill_Incendiary
class ASolarSkill_Incendiary : public ASolarSkill_Projectile
{
public:
	struct FVector                               FireDecalSize;                                     // 0x558(0xC)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2B86[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UParticleSystem>        FireParticle;                                      // 0x568(0x28)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UMaterialInterface>     FireDecalMaterial;                                 // 0x590(0x28)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UParticleSystem>        BuffParticle;                                      // 0x5B8(0x28)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  BuffAttachPointName;                               // 0x5E0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DelayDestroyTime;                                  // 0x5E8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        FireEffectCountMax;                                // 0x5EC(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        BurnRamainTime;                                    // 0x5F0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2B87[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<enum class EObjectTypeQuery>          DetectableObjectTypes;                             // 0x5F8(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  FireDecalFadeOutName;                              // 0x608(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bTeammateDamage;                                   // 0x610(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bOnlyOne;                                          // 0x611(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2B88[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UParticleSystemComponent*>      FireParticleSystemComponents;                      // 0x618(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDecalComponent*                       FireDecalComponent;                                // 0x628(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  IncendiaryMesh;                                    // 0x630(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAkComponent*                          AkComponent;                                       // 0x638(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bInBuring;                                         // 0x640(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2B89[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        CurrentFireEffectCount;                            // 0x644(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2B8A[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UMaterialInstanceDynamic*              FireDecalDynamicMaterial;                          // 0x650(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FireDecalFadeOutTimer;                             // 0x658(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        BurnRadius;                                        // 0x65C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        BurnHeight;                                        // 0x660(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2B8B[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<enum class EObjectTypeQuery>          QueryObjectTypeArray;                              // 0x668(0x10)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<TSubclassOf<class AActor>, float>       ClassTypeDamageValueMap;                           // 0x678(0x50)(Edit, Protected, NativeAccessSpecifierProtected)
	float                                        DamageTimeInternal;                                // 0x6C8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2B8C[0x14];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASolarSkill_Incendiary* GetDefaultObj();

	void ReceviceExplodeEvent();
	void ReceviceDestroyEvent();
	void ReceviceDamageActorEvent(class AActor* InActor);
	void PostSoundEvent(const class FString& InSoundEvent, bool InbHasCamp, class AActor* InTarget);
	void MulticastOnDamagedActor(class AActor* InActor);
	class UClass* GetClassType();
};

// 0x0 (0x558 - 0x558)
// Class Solarland.SolarSkill_SkeletealMeshProjectile
class ASolarSkill_SkeletealMeshProjectile : public ASolarSkill_Projectile
{
public:

	static class UClass* StaticClass();
	static class ASolarSkill_SkeletealMeshProjectile* GetDefaultObj();

};

// 0xB8 (0x610 - 0x558)
// Class Solarland.SolarSkill_PenetrateGrenade
class ASolarSkill_PenetrateGrenade : public ASolarSkill_SkeletealMeshProjectile
{
public:
	float                                        DamageInterval;                                    // 0x558(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DefaultDamage;                                     // 0x55C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<TSubclassOf<class AActor>, float>       ClassTypeDamageMap;                                // 0x560(0x50)(Edit, Protected, NativeAccessSpecifierProtected)
	bool                                         bCanDamageTeamate;                                 // 0x5B0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2B8D[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        OnStopDestroyTime;                                 // 0x5B4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TraceTestDistance;                                 // 0x5B8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DamageSphereRadius;                                // 0x5BC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               DamageBoxExtent;                                   // 0x5C0(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2B8E[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<enum class EObjectTypeQuery>          DamageObjectTypeArray;                             // 0x5D0(0x10)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2B8F[0x30];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASolarSkill_PenetrateGrenade* GetDefaultObj();

	void OnPenetrateGrenadeReady(float InDeltaDistance);
};

// 0x8 (0x560 - 0x558)
// Class Solarland.SolarSkill_CapsuleProjectile
class ASolarSkill_CapsuleProjectile : public ASolarSkill_Projectile
{
public:
	uint8                                        Pad_2B90[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASolarSkill_CapsuleProjectile* GetDefaultObj();

};

// 0x8 (0x560 - 0x558)
// Class Solarland.SolarSkill_SphereProjectile
class ASolarSkill_SphereProjectile : public ASolarSkill_Projectile
{
public:
	uint8                                        Pad_2B91[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASolarSkill_SphereProjectile* GetDefaultObj();

};

// 0x8 (0x560 - 0x558)
// Class Solarland.SolarSkill_BoxProjectile
class ASolarSkill_BoxProjectile : public ASolarSkill_Projectile
{
public:
	uint8                                        Pad_2B92[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASolarSkill_BoxProjectile* GetDefaultObj();

};

// 0x8 (0x560 - 0x558)
// Class Solarland.SolarSkill_StaticMeshProjectile
class ASolarSkill_StaticMeshProjectile : public ASolarSkill_Projectile
{
public:
	uint8                                        Pad_2B93[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASolarSkill_StaticMeshProjectile* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Solarland.SolarSkill_ProjectileInterface
class ISolarSkill_ProjectileInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class ISolarSkill_ProjectileInterface* GetDefaultObj();

	void SetStartAndTargetTransform(struct FTransform& InStartTransform, struct FTransform& InTargetTransform);
	void SetProjectileVelocity(class UProjectileMovementComponent* InProjectileMovementComponent, struct FVector& InVelocity, bool bCalculateVelocity, float InSpeed, float InVelocityPitchOffset);
	void SetGameplayEffectHandle(const struct FGameplayEffectSpecHandle& InGameplayEffectHandleToSelf, const struct FGameplayEffectSpecHandle& InGameplayEffectHandleToTarget);
	class UProjectileMovementComponent* GetProjectileMovementComponent();
};

// 0x90 (0x3D8 - 0x348)
// Class Solarland.SolarSkillAndBuffDurationWidget
class USolarSkillAndBuffDurationWidget : public USolarUserWidget
{
public:
	class USolarSkillSubDurationWidget*          UI_Skill_Duration_Super;                           // 0x348(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarSkillSubDurationWidget*          UI_Skill_Duration_Tactical;                        // 0x350(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarSkillSubDurationWidget*          UI_Skill_Duration_Tactical_1;                      // 0x358(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarSkillSubDurationWidget*          UI_Skill_Duration_Tactical_2;                      // 0x360(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FBuffDurationInfo                     MainBuffInfo;                                      // 0x368(0x60)(Protected, NativeAccessSpecifierProtected)
	TArray<struct FBuffDurationInfo>             SubBuffInfo;                                       // 0x3C8(0x10)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class USolarSkillAndBuffDurationWidget* GetDefaultObj();

	void UpdateSubWidget();
	void OnRoleAbilityBuffUpdate(struct FActiveGameplayEffectHandle& ActiveEffectHandle, float Duration, float RemainTime, bool bInPrePhase, float PreDuration, float PreRemainTime);
	void OnRoleAbilityBuffResume(bool bIsMainDuration, class ASolarCharacter* SourceCharacter, uint8 AbilityIndex);
	void OnRoleAbilityBuffRemoved(bool bIsMainDuration, struct FActiveGameplayEffectHandle& ActiveEffectHandle);
	void OnRoleAbilityBuffPause(bool bIsMainDuration, class ASolarCharacter* SourceCharacter, uint8 AbilityIndex);
	void OnRoleAbilityBuffApplied(bool bIsMainDuration, class ASolarCharacter* SourceCharacter, uint8 AbilityIndex, float Duration, float PreDuration, struct FActiveGameplayEffectHandle& ActiveEffectHandle);
	void OnCharacterChange(int32 InCharacterId);
};

// 0x18 (0x630 - 0x618)
// Class Solarland.SolarSkillGA_SuperEMP
class USolarSkillGA_SuperEMP : public USolarSkillGA_Summon
{
public:
	class FString                                LocalActiveAbilityAudioName;                       // 0x618(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        EMPLevel;                                          // 0x628(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2B9E[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarSkillGA_SuperEMP* GetDefaultObj();

};

// 0x8 (0x340 - 0x338)
// Class Solarland.SolarSkillGATA_ChaSocketLoc
class ASolarSkillGATA_ChaSocketLoc : public AGameplayAbilityTargetActor
{
public:
	class FName                                  SocketName;                                        // 0x338(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class ASolarSkillGATA_ChaSocketLoc* GetDefaultObj();

};

// 0x228 (0x560 - 0x338)
// Class Solarland.SolarSkillGATA_MissileSwarm
class ASolarSkillGATA_MissileSwarm : public AGameplayAbilityTargetActor
{
public:
	class ASolarCharacter*                       SourceCharacter;                                   // 0x338(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UStaticMeshComponent*>          PreviewMeshes;                                     // 0x340(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMesh*                           PreviewMeshTemplate;                               // 0x350(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                    PreviewMaterial;                                   // 0x358(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2B9F[0x200];                                   // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASolarSkillGATA_MissileSwarm* GetDefaultObj();

};

// 0xF8 (0x430 - 0x338)
// Class Solarland.SolarSkillGATA_Projectile
class ASolarSkillGATA_Projectile : public AGameplayAbilityTargetActor
{
public:
	uint8                                        Pad_2BA0[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSolarSkillProjectileData             PredictData;                                       // 0x340(0xD0)(Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_2BA1[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASolarSkillGATA_Projectile* GetDefaultObj();

};

// 0x30 (0x460 - 0x430)
// Class Solarland.SolarSkillGATA_Spline
class ASolarSkillGATA_Spline : public ASolarSkillGATA_Projectile
{
public:
	class USceneComponent*                       SplineRoot;                                        // 0x430(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UStaticMeshComponent*>          HitPointMeshes;                                    // 0x438(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class USplineMeshComponent*>          SplineMeshComponents;                              // 0x448(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bVisibilityPropagateToChildren;                    // 0x458(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2BA2[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASolarSkillGATA_Spline* GetDefaultObj();

};

// 0xE0 (0x510 - 0x430)
// Class Solarland.SolarSkillGATA_Summon
class ASolarSkillGATA_Summon : public ASolarSkillGATA_Projectile
{
public:
	class USceneComponent*                       PreviewRoot;                                       // 0x430(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkeletalMeshComponent*                PreviewSkeletalMeshComponent;                      // 0x438(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  PreviewStaticMeshComponent;                        // 0x440(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  PreviewCheckMeshComponent;                         // 0x448(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FSoftObjectPath                       SummonConfigPath;                                  // 0x450(0x18)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarSummonDetectionConfig*           SummonConfig;                                      // 0x468(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class AActor>                    SummonActorClass;                                  // 0x470(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        KeyDownTime;                                       // 0x478(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bStopUpdatePreview;                                // 0x47C(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2BA5[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FHitResult                            StopPreviewHitResult;                              // 0x480(0x88)(IsPlainOldData, NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	class USplineMeshComponent*                  SplineComponent;                                   // 0x508(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class ASolarSkillGATA_Summon* GetDefaultObj();

	void K2_UpdatePreview(bool bInCanPlace, struct FPredictProjectilePathResult& InPredictPathResult, int32 InIndex);
};

// 0x18 (0x2B0 - 0x298)
// Class Solarland.SolarSkillGC_Burning
class ASolarSkillGC_Burning : public AGameplayCueNotify_Actor
{
public:
	class FName                                  BurningActorEffectID;                              // 0x298(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  BurningScreenEffectID;                             // 0x2A0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2BA6[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASolarSkillGC_Burning* GetDefaultObj();

};

// 0xC8 (0x360 - 0x298)
// Class Solarland.SolarSkillGC_Freeze
class ASolarSkillGC_Freeze : public AGameplayCueNotify_Actor
{
public:
	class UParticleSystem*                       IceSmokeParticle;                                  // 0x298(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  IceSmokeAttachPointName;                           // 0x2A0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2BA7[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            IceSmokeTransform;                                 // 0x2B0(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	class UParticleSystemComponent*              IceSmokeParticleHandle;                            // 0x2E0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                FreezeStartSoundName1P;                            // 0x2E8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                FreezeStartSoundName3P;                            // 0x2F8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                FreezeStartSoundName3PEnemy;                       // 0x308(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                FreezeEndSoundName1P;                              // 0x318(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                FreezeEndSoundName3P;                              // 0x328(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                FreezeEndSoundName3PEnemy;                         // 0x338(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UMaterialSimpleEffect>     FreezeMatEffectClass;                              // 0x348(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2BA8[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASolarSkillGC_Freeze* GetDefaultObj();

};

// 0x20 (0x2B8 - 0x298)
// Class Solarland.SolarSkillGC_RapidBoost
class ASolarSkillGC_RapidBoost : public AGameplayCueNotify_Actor
{
public:
	class USolarAbilitySystemComponent*          CachedAbilitySystemComponent;                      // 0x298(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        InBackpackFXHandle;                                // 0x2A0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          EffectTag;                                         // 0x2A4(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  EffectName;                                        // 0x2AC(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2BA9[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASolarSkillGC_RapidBoost* GetDefaultObj();

};

// 0x60 (0x2F8 - 0x298)
// Class Solarland.SolarSkillGC_SurroundLightning
class ASolarSkillGC_SurroundLightning : public AGameplayCueNotify_Actor
{
public:
	TMap<enum class ESolarSurroundLightningApplyType, struct FSolarSurroundLightningConfig> SurroundLightningApplyTypeConfigs;                 // 0x298(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	class FName                                  EMPEffectID;                                       // 0x2E8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        CharacterEffectHandle;                             // 0x2F0(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2BAA[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASolarSkillGC_SurroundLightning* GetDefaultObj();

};

// 0xD0 (0x418 - 0x348)
// Class Solarland.SolarSkillSubDurationWidget
class USolarSkillSubDurationWidget : public USolarUserWidget
{
public:
	class USolarImage*                           Img_Skill;                                         // 0x348(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UProgressBar*                          Progress_Duration_L;                               // 0x350(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UProgressBar*                          Progress_Duration_R;                               // 0x358(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UProgressBar*                          Progress_Recharge;                                 // 0x360(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarInputButton*                     Btn_Cancel;                                        // 0x368(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                               Panel_CancelAbility_KeyMapping;                    // 0x370(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Enter_Anim;                                        // 0x378(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Exit_Anim;                                         // 0x380(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Prompt_Anim;                                       // 0x388(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Anim_Skill_Start;                                  // 0x390(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ProgressUpdateInterval;                            // 0x398(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MainProgressDisableOpacity;                        // 0x39C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2BAB[0x78];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarSkillSubDurationWidget* GetDefaultObj();

	void UpdateWidget();
	void OnRoleAbilityBuffEnd();
	void OnRoleAbilityBuffContinous(struct FBuffDurationInfo& Info);
};

// 0x90 (0xC0 - 0x30)
// Class Solarland.SolarSkillSubsystem
class USolarSkillSubsystem : public UWorldSubsystem
{
public:
	uint8                                        Pad_2BB1[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<TWeakObjectPtr<class UUserWidget>>    FullScreenWidgetArray;                             // 0x50(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2BB2[0x60];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarSkillSubsystem* GetDefaultObj();

	bool TryGetGeneralSummonHitResult(struct FHitResult* OutHitResult, class AActor* InSummoner, class USolarSummonDetectionConfig* InSummonConfig);
	bool IsWithinQuickSummonTime(class USolarSummonDetectionConfig* InSummonConfig, float InStartTime);
	void HideSkillFullScreenWidget(class UClass* InWidgetClass, enum class ESlateVisibility InSlateVisibility);
	struct FRotator GetSummonPlaceOrientation(struct FVector& InPlaceLocation, struct FVector& InPlaceNormal);
	class UUserWidget* GetSkillFullScreenWidget(class UClass* InWidgetClass);
	bool CanSummonPlaceSpace(struct FSolarSummonCondition& InCondition, struct FVector& InPlaceLocation, struct FVector& InPlaceNormal, struct FRotator& InPlaceOrientation);
	bool CanSummonPlaceAngle(struct FSolarSummonCondition& InCondition, struct FVector& InPlaceNormal);
	class UUserWidget* AddSkillFullScreenWidgetToBattlePanel(class UClass* InWidgetClass);
};

// 0x18 (0x240 - 0x228)
// Class Solarland.SolarSoundPlayer
class ASolarSoundPlayer : public AActor
{
public:
	uint8                                        Pad_2BB5[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAkComponent*                          AkAudioComponent;                                  // 0x230(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarAkGameObject*                    SolarAkGameObject;                                 // 0x238(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class ASolarSoundPlayer* GetDefaultObj();

	class ASolarSoundPlayer* PostSoundEventAtLocation(class UObject* WorldContextObject, const class FString& EventName, struct FVector& Location, bool bAutoDestroy);
	void PostSoundEvent(const class FString& EventName);
	void InitSolarAkGameObject(class UActorComponent* Component, bool bReset);
};

// 0x60 (0x90 - 0x30)
// Class Solarland.SolarSpawnAdjustConfig
class USolarSpawnAdjustConfig : public UDataAsset
{
public:
	bool                                         bDrawDebug;                                        // 0x30(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2BB6[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<enum class EObjectTypeQuery>          AdjustBlockTypes;                                  // 0x38(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               AdjustDetectBoxExtent;                             // 0x48(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               AdjustDetectBoxOffset;                             // 0x54(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseActorRotation;                                 // 0x60(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2BB7[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        AdjustVerticalDist;                                // 0x64(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AdjustHorizonDist;                                 // 0x68(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AdjustFindStep;                                    // 0x6C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TraceUpLength;                                     // 0x70(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TraceDownLength;                                   // 0x74(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TraceZOffset;                                      // 0x78(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2BB8[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<enum class EObjectTypeQuery>          AdjustPlaceTypes;                                  // 0x80(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class USolarSpawnAdjustConfig* GetDefaultObj();

};

// 0x58 (0x2C0 - 0x268)
// Class Solarland.SolarSpecABP_Skill
class USolarSpecABP_Skill : public UAnimInstance
{
public:
	class ASolarCharacter*                       SolarCharacterOwner;                               // 0x268(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ViewPitch;                                         // 0x270(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ViewYaw;                                           // 0x274(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2BB9[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        InputDirection;                                    // 0x284(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        Speed;                                             // 0x288(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bIsWalking : 1;                                    // Mask: 0x1, PropSize: 0x10x28C(0x1)(BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bIsCrouching : 1;                                  // Mask: 0x2, PropSize: 0x10x28C(0x1)(BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        bIsSixDirRunForward : 1;                           // Mask: 0x4, PropSize: 0x10x28C(0x1)(BlueprintVisible, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        BitPad_1EB : 5;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	enum class EWalkMode                         CurrentWalkMode;                                   // 0x28D(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EIdleTurnType                     IdleTurnType;                                      // 0x28E(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2BBA[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TurnExplicitTime;                                  // 0x290(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DamageDirection;                                   // 0x294(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DamageReactionAlpha;                               // 0x298(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DamageNormalizedTime;                              // 0x29C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EAirMoveMode                      CurrentAirMoveMode;                                // 0x2A0(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EAirMoveMode                      LastAirMoveMode;                                   // 0x2A1(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2BBB[0xF];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bNewJet;                                           // 0x2B1(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class ESkillAnimType                    CurrentSkillAnimType;                              // 0x2B2(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ESkillAnimRightHandType           CurrentSkillAnimRightHandType;                     // 0x2B3(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2BBC[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarSpecABP_Skill* GetDefaultObj();

	void SetLeftHandIKTransform(struct FTransform& RelativeTrans);
	struct FVector GetJetPackDashAnimationBlend();
	struct FVector GetInputVector();
	float GenJumpDirection(float InInputDirection);
	bool CheckNewJetAndReset();
};

// 0x88 (0x2F0 - 0x268)
// Class Solarland.SolarSpecABP_Vehicle
class USolarSpecABP_Vehicle : public UAnimInstance
{
public:
	class ASolarCharacter*                       SolarCharacterOwner;                               // 0x268(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ViewPitch;                                         // 0x270(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ViewYaw;                                           // 0x274(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EInVehicleState                   InVehicleState;                                    // 0x278(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EVehicleAnimationType             CurrentVehicleAnimationType;                       // 0x279(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2BBD[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        CurrentVehicleRotationValue;                       // 0x27C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                             CurrentInputOnVehicle;                             // 0x280(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LeanTowardRightValue;                              // 0x288(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bVehicleInAir;                                     // 0x28C(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2BBE[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        AngleBetweenViewAndVehicle;                        // 0x290(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RotateThreshold;                                   // 0x294(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RotateSpeed;                                       // 0x298(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RotateSpeedForAiming;                              // 0x29C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRotator                              CurrentRotateOffset;                               // 0x2A0(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_2BBF[0x9];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bIronManCanFlyFlight;                              // 0x2B5(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIronManForceOutInVehicleState;                    // 0x2B6(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHasPassenger;                                     // 0x2B7(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehicleSpeed;                                      // 0x2B8(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIronManUseIK;                                     // 0x2BC(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EDriveTurnType                    DriveIdleTurnType;                                 // 0x2BD(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2BC0[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        SteeringRoatingratio;                              // 0x2C0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               LeftHandOnRudderLocation;                          // 0x2C4(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               RightHandOnRudderLocation;                         // 0x2D0(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               IronManHandRIKLocation;                            // 0x2DC(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EWeaponStatus                     WeaponStatus;                                      // 0x2E8(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2BC2[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarSpecABP_Vehicle* GetDefaultObj();

};

// 0x8 (0x30 - 0x28)
// Class Solarland.SolarSpecialEffectsMgr
class USolarSpecialEffectsMgr : public UObject
{
public:
	uint8                                        Pad_2BC3[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarSpecialEffectsMgr* GetDefaultObj();

};

// 0x350 (0x578 - 0x228)
// Class Solarland.SolarSpectateInfo
class ASolarSpectateInfo : public AActor
{
public:
	FMulticastInlineDelegateProperty_            OnBeginUpdateSpectateInfo;                         // 0x228(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnStopUpdateSpectateInfo;                          // 0x238(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnOtherPlayerBeginSpectateMe;                      // 0x248(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnOtherPlayerStopSpectateMe;                       // 0x258(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnBeforeSpectateTargetChange;                      // 0x268(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnSpectateTargetChanged;                           // 0x278(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnSpectatePhaseChanged;                            // 0x288(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnSwitchSpectateTargetFailed;                      // 0x298(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnSpectatorOfMyTargetChanged;                      // 0x2A8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnSpectateCharacterOfMyTargetReadied;              // 0x2B8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	enum class ESpectatePhase                    SpectatePhase;                                     // 0x2C8(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2BE1[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ASolarPlayerState*                     SpectateTargetPlayerState;                         // 0x2D0(0x8)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2BE2[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class ASolarPlayerState*>             PlayersSpectatingMyTarget;                         // 0x2E8(0x10)(Net, ZeroConstructor, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class ASolarPlayerState*>             PlayersSpectatingMe;                               // 0x2F8(0x10)(Net, ZeroConstructor, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2BE3[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bIsServerRecording;                                // 0x318(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2BE4[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USolarReplayManager*                   ReplayManager;                                     // 0x320(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FSpectateConditions                   SpectateConditions;                                // 0x328(0x20)(Net, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2BE5[0x80];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FGiftSenderInfo>               SendGiftPlayerInfo;                                // 0x3C8(0x10)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FInteractiveTaskStatus                TaskStatus;                                        // 0x3D8(0x78)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	class UDataTable*                            InteractiveTaskTable;                              // 0x450(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                TaskTablePath;                                     // 0x458(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ASolarPlayerState*                     LatestAttacker;                                    // 0x468(0x8)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ASolarPlayerState*                     LatestVictim;                                      // 0x470(0x8)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2BE6[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TotalCausedDamage;                                 // 0x488(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              PlayerCameraRotation;                              // 0x48C(0xC)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	TArray<struct FReplicateItemData>            CharacterBackpackItems;                            // 0x498(0x10)(Net, ZeroConstructor, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FReplicateMaxPileData>         CharacterBackpackItemMaxPiles;                     // 0x4A8(0x10)(Net, ZeroConstructor, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        CharacterVJetChargeTime;                           // 0x4B8(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        CharacterVJetTotalTimes;                           // 0x4BC(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        CharacterVJetRestTimes;                            // 0x4C0(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        CharacterVJetModuleLevel;                          // 0x4C4(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CharacterVJetStartChargeTime;                      // 0x4C8(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CharacterHJetChargeTime;                           // 0x4CC(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        CharacterHJetTotalTimes;                           // 0x4D0(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        CharacterHJetRestTimes;                            // 0x4D4(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        CharacterHJetModuleLevel;                          // 0x4D8(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CharacterHJetStartChargeTime;                      // 0x4DC(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FCharacterRoleAbilityInfo>     CharacterRoleAbilitiesInfo;                        // 0x4E0(0x10)(Net, ZeroConstructor, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FRepCountdownData                     SpectateCountdownData;                             // 0x4F0(0x2C)(Net, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_2BE7[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FBattleUpgradeEffectParamData> BattleUpgradeEffectData;                           // 0x520(0x10)(Net, ZeroConstructor, RepNotify, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        ExtraARMag;                                        // 0x530(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        ExtraSGMag;                                        // 0x534(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bExposedByRadar;                                   // 0x538(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2BE8[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVehicleSpectateInfo                  VehicleSpectateInfo;                               // 0x540(0x30)(Net, RepNotify, Protected, NativeAccessSpecifierProtected)
	uint8                                        bShowBattlePrompt : 1;                             // Mask: 0x1, PropSize: 0x10x570(0x1)(Net, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2BE9[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASolarSpectateInfo* GetDefaultObj();

	void SetSpectateTargetForPlayingReplay(class ASolarPlayerState* TargetPlayerState);
	void ServerStopSpectateOtherPlayer_Internal();
	void ServerStopSpectateOtherPlayer();
	void ServerSpectatePreviousPlayer();
	void ServerSpectateNextPlayer();
	void ServerSetSpectateConditions_Internal(struct FSpectateConditions& InSpectateConditions);
	void ServerSetSpectateConditions(struct FSpectateConditions& InSpectateConditions);
	void ServerSendGiftAction(int32 GiftID, int32 Num);
	void ServerRequestSendTask(int32 InTaskID);
	void ServerRequestIncreaseTargetTaskLevel();
	void ServerRequestAvailableTask();
	void ServerChangeLikeValue(int32 Value, int32 AddInteractValue, enum class ESocialActionType ActionType);
	void ServerBeginSpectateOtherPlayer_Internal();
	void ServerBeginSpectateOtherPlayer();
	bool SendTask(int32 InTaskID);
	void SendGift(int32 GiftID, int32 Num);
	void RequestSendTask(int32 InTaskID);
	void RequestIncreaseTargetTaskLevel();
	void RequestAvailableTask();
	void OnTargetSpecInfoSetToItsPlayerState(class ASolarSpectateInfo* TargetSpecInfo);
	void OnSwitchSpectateTargetFailed__DelegateSignature(class ASolarSpectateInfo* SpectateInfo);
	void OnStopUpdateSpectateInfo__DelegateSignature(class ASolarSpectateInfo* SpectateInfo);
	void OnStopRecordingReplay();
	void OnStartRecordingReplay();
	void OnSpectatorOfMyTargetChanged__DelegateSignature(class ASolarSpectateInfo* SpectateInfo);
	void OnSpectateTargetChanged__DelegateSignature(class ASolarPlayerState* OldTarget, class ASolarSpectateInfo* SpectateInfo);
	void OnSpectatePhaseChanged__DelegateSignature(enum class ESpectatePhase CurrentPhase);
	void OnSpectateCharacterOfMyTargetReadied__DelegateSignature(class ASolarSpectateInfo* SpectateInfo);
	void OnRep_VehicleSpectateInfo(struct FVehicleSpectateInfo& PreviousVehicleSpectateInfo);
	void OnRep_TotalCausedDamage();
	void OnRep_TaskStatus();
	void OnRep_SpectateTargetPlayerState(class ASolarPlayerState* LastTarget);
	void OnRep_SpectatePhase();
	void OnRep_SpectateCountdownData();
	void OnRep_PlayersSpectatingMyTarget();
	void OnRep_PlayersSpectatingMe();
	void OnRep_ExposedByRadar();
	void OnRep_CharacterVJetTotalTimes();
	void OnRep_CharacterVJetRestTimes();
	void OnRep_CharacterVJetModuleLevel();
	void OnRep_CharacterRoleAbilitiesInfo();
	void OnRep_CharacterHJetTotalTimes();
	void OnRep_CharacterHJetRestTimes();
	void OnRep_CharacterHJetModuleLevel();
	void OnRep_CharacterBackpackItems();
	void OnRep_bIsServerRecording();
	void OnRep_BattleUpgradeEffectData();
	void OnOtherPlayerStopSpectateMe__DelegateSignature(class ASolarPlayerState* SpectatorPlayerState, class ASolarSpectateInfo* SpectateInfo);
	void OnOtherPlayerBeginSpectateMe__DelegateSignature(class ASolarPlayerState* SpectatorPlayerState, class ASolarSpectateInfo* SpectateInfo);
	void OnOpenAirBoxNum(enum class EStatisticsType InStatType);
	void OnLikeActionCalled(int32 Value, int32 AddInteractValue, enum class ESocialActionType ActionType);
	void OnIncreaseKillNumWithWeaponType(enum class EStatisticsType InStatType, int32 InWeaponID);
	void OnIncreaseKillNumWithPunch(enum class EStatisticsType InStatType);
	void OnIncreaseKillNumWithAnyVehicle(enum class EStatisticsType InStatType);
	void OnGiftActionCalled(int32 GiftID, int32 Num);
	void OnDamageChanged__DelegateSignature(float Damage);
	void OnCurrentPlayerCountChanged();
	void OnBeginUpdateSpectateInfo__DelegateSignature(class ASolarSpectateInfo* SpectateInfo);
	void OnBeforeSpectateTargetChange__DelegateSignature(class ASolarPlayerState* NewTarget, class ASolarSpectateInfo* SpectateInfo);
	void OnAvailableAirDropsNumChanged();
	bool NeedUpdateSpectateInfo();
	bool IsSpectatingOtherPlayer();
	bool IsRecordingReplay();
	bool IsClientRecording();
	bool IncreaseTaskLevel(class ASolarPlayerState* SendPlayer);
	TArray<class ASolarPlayerState*> GetSpectatorsOfMyTarget();
	TArray<class ASolarPlayerState*> GetSpectatingMePlayerStates();
	class ASolarPlayerState* GetSpectateTargetPlayerState();
	class ASolarCharacter* GetSpectateTargetCharacter();
	void GetSpectateReportInfo(struct FSpectateReportInfo* SpectateReportInfo, bool HasNextTarget);
	class ASolarSpectateInfo* GetSpectateInfoOfMyTarget();
	struct FSpectateConditions GetSpectateConditions();
	class ASolarPlayerState* GetSolarPlayerState();
	bool GetInteractiveTaskConfigByID(int32 InTaskID, struct FInteractiveTaskConfig* OutConfig);
	TArray<int32> GetAvailableTaskByRandom();
	void GetAllInteractiveTaskConfigFromTable(TArray<struct FInteractiveTaskConfig>* OutAllConfig);
	TArray<class ASolarPlayerState*> GetAllAlivePlayers();
	bool CostCurrencyByTaskAction(int32 InTaskID, int32 CurTasklevel);
	void ClientNotifyTaskActionResult(enum class ESocialActionType ActionType, int32 InTaskID, int32 CurTasklevel, class ASolarPlayerState* SendPlayer, class ASolarPlayerState* ReceivePlayer, int32 NowLikeValue);
	void ClientNotifySelfTaskActionResult(enum class ESocialActionType ActionType, int32 InTaskID, int32 CurTasklevel, class ASolarPlayerState* SendPlayer, class ASolarPlayerState* ReceivePlayer, int32 NowLikeValue);
	void ClientNotifySelfLikeValueChanged(enum class ESocialActionType ActionType, int32 DeltaValue, int32 NowValue, class ASolarPlayerState* SendPlayer, class ASolarPlayerState* ReceivePlayer, int32 GiftID);
	void ClientNotifyLikeValueChanged(enum class ESocialActionType ActionType, int32 DeltaValue, int32 NowValue, class ASolarPlayerState* SendPlayer, class ASolarPlayerState* ReceivePlayer, int32 GiftID);
	void ClientNotifyAvailableTaskResult(TArray<int32>& AvailableTask);
	bool CheckIsCanSpectateOthers();
	bool CanISpectate(class ASolarPlayerState* Target);
};

// 0x0 (0x860 - 0x860)
// Class Solarland.TickWhenPauseCineCameraActor
class ATickWhenPauseCineCameraActor : public ACineCameraActor
{
public:

	static class UClass* StaticClass();
	static class ATickWhenPauseCineCameraActor* GetDefaultObj();

};

// 0x98 (0x350 - 0x2B8)
// Class Solarland.SolarSpectateLevelSequenceActor
class ASolarSpectateLevelSequenceActor : public ALevelSequenceActor
{
public:
	struct FSoftObjectPath                       SwitchTargetSequencePath;                          // 0x2B8(0x18)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                AtLeastPlayToMark;                                 // 0x2D0(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2BEA[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class ULevelSequence*                        SwitchTargetSequence;                              // 0x2F8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ACineCameraActor*                      SequenceCamera;                                    // 0x300(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ACameraRig_Crane*                      SequenceCameraRigCrane;                            // 0x308(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2BEB[0x40];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASolarSpectateLevelSequenceActor* GetDefaultObj();

	void OnSequenceStoped();
	void OnSequenceFinished();
};

// 0x18 (0x2C8 - 0x2B0)
// Class Solarland.SolarSpectatorPawn
class ASolarSpectatorPawn : public ASpectatorPawn
{
public:
	class USpringArmComponent*                   SpringArmComponent;                                // 0x2B0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCameraComponent*                      CameraComponent;                                   // 0x2B8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarInputActionContext*              InputActionContext;                                // 0x2C0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class ASolarSpectatorPawn* GetDefaultObj();

};

// 0x38 (0x128 - 0xF0)
// Class Solarland.SolarSplineMovementComponent
class USolarSplineMovementComponent : public UMovementComponent
{
public:
	class USplineComponent*                      SplineComponent;                                   // 0xF0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnSolarSplineMovementComponentStop;                // 0xF8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	float                                        SplineLengthRatio;                                 // 0x108(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              SplineRotation;                                    // 0x10C(0xC)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_2BEC[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarSplineMovementComponent* GetDefaultObj();

};

// 0x18 (0x40 - 0x28)
// Class Solarland.SolarState
class USolarState : public UObject
{
public:
	class UObject*                               StateMachineOwner;                                 // 0x28(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarStateMachine*                    OwnerStateMachine;                                 // 0x30(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2BED[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarState* GetDefaultObj();

	void ReceiveUpdateState(float DeltaTime);
	void ReceiveInitializeState();
	void ReceiveEndState(class USolarState* NextState);
	void ReceiveBeginState();
	class USolarState* K2_CreateSolarState(class USolarStateMachine* StateMachine, TSubclassOf<class USolarState> StateClass, class FName Name);
	void GotoState();
	class USolarState* GetState(class FName& StateClassName);
};

// 0x70 (0x98 - 0x28)
// Class Solarland.SolarStateMachine
class USolarStateMachine : public UObject
{
public:
	TMap<class FName, class USolarState*>        StateMap;                                          // 0x28(0x50)(NativeAccessSpecifierPublic)
	class USolarState*                           CurrentState;                                      // 0x78(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarState*                           PreviousState;                                     // 0x80(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2BEF[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarStateMachine* GetDefaultObj();

	bool IsInState(class FName& StateName);
	void AddState(class USolarState* NewState, class FName& StateName);
};

// 0x80 (0xB0 - 0x30)
// Class Solarland.SolarSummonDetectionConfig
class USolarSummonDetectionConfig : public UDataAsset
{
public:
	struct FSolarSummonPreview                   SummonPreview;                                     // 0x30(0x18)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                         bEnableQuickSummon;                                // 0x48(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableQuickSummonInAir;                           // 0x49(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2BF0[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class USolarQuickSummonProxy>    QuickSummonClass;                                  // 0x50(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        QuickSummonTime;                                   // 0x58(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableCheckCondition;                             // 0x5C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2BF1[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSolarSummonCondition                 SummonCondition;                                   // 0x60(0x50)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class USolarSummonDetectionConfig* GetDefaultObj();

};

// 0x60 (0x440 - 0x3E0)
// Class Solarland.SolarSummonEnergyWall
class ASolarSummonEnergyWall : public ASummonItemBase
{
public:
	uint8                                        Pad_2BF3[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        HitLocationLifeTime;                               // 0x3E8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2BF4[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<class FName, struct FSolarSummonTimer>  HitLocations;                                      // 0x3F0(0x50)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class ASolarSummonEnergyWall* GetDefaultObj();

	void OnReceiveHitResult(bool InbVisible, class FName InHitLocationName, struct FHitResult& InHitResult);
	void HandleHitResult(struct FHitResult& InHitResult);
};

// 0xD8 (0x4B8 - 0x3E0)
// Class Solarland.SolarSummonJumpPad
class ASolarSummonJumpPad : public ASummonItemBase
{
public:
	uint8                                        Pad_2BF5[0x58];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class USkeletalMeshComponent*                Mesh;                                              // 0x438(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimSequence*                         SpawnAnim;                                         // 0x440(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimSequence*                         LaunchAnim;                                        // 0x448(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        HorizantalSpeedMultipleFac;                        // 0x450(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxHorizantalSpeed;                                // 0x454(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        VerticalSpeed;                                     // 0x458(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2BF6[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UGameplayEffect>           LaunchCDEffect;                                    // 0x460(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  SpawnSound;                                        // 0x468(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  DestroySound;                                      // 0x470(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  HitSoundAttacker2D;                                // 0x478(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  HitSound;                                          // 0x480(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  LaunchSound;                                       // 0x488(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                       SmokeFX;                                           // 0x490(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                       DestroyFX;                                         // 0x498(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        LaunchCount;                                       // 0x4A0(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        HitCount;                                          // 0x4A4(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        VehicleHitCheckInterval;                           // 0x4A8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2BF7[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TWeakObjectPtr<class UShapeComponent>        VehicleCheckShape;                                 // 0x4B0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class ASolarSummonJumpPad* GetDefaultObj();

	void OnRep_LaunchCount();
	void OnRep_HitCount();
	void OnCharacterEndOverlap(class ASolarCharacter* OtherCharacter);
	void OnCharacterBeginOverlap(class ASolarCharacter* OtherCharacter);
};

// 0x18 (0xC8 - 0xB0)
// Class Solarland.SolarSummonLifeCycleComponent
class USolarSummonLifeCycleComponent : public UActorComponent
{
public:
	FMulticastSparseDelegateProperty_            OnLifeCycleEnd;                                    // 0xB0(0x1)(InstancedReference, BlueprintAssignable, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_2BF8[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        AliveTimeMax;                                      // 0xB4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AliveTimer;                                        // 0xB8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        HealthPointsMax;                                   // 0xBC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        HealthPoints;                                      // 0xC0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        HealthPointsDwindle;                               // 0xC4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class USolarSummonLifeCycleComponent* GetDefaultObj();

	void UpdateDwindleHealthPoints(float InDeltaTime);
	void UpdateAliveTime(float InDeltaTime);
	void SetHealthPointsMax(float InMaxHealthPoints);
	void SetHealthPointsDwindle(float InDwindleHealthPoints);
	void SetHealthPoints(float InHealthPoints);
	void SetAliveTimeMax(float InMaxAliveTime);
	void SetAliveTime(float InAliveTime);
	void LifeCycleEnd();
	float GetHealthPointsMax();
	float GetHealthPointsDwindle();
	float GetHealthPoints();
	float GetAliveTimeMax();
	float GetAliveTime();
	void DestroyOwner();
	void AddHealthPoints(float InExtraHealthPoints);
	void AddAliveTime(float InExtraAliveTime);
};

// 0x90 (0x2B8 - 0x228)
// Class Solarland.SolarSummonVehicleSpawner
class ASolarSummonVehicleSpawner : public AActor
{
public:
	int32                                        VehicleID;                                         // 0x228(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  EffectMeshTagName;                                 // 0x22C(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  EffectMaterialParameterName;                       // 0x234(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        EffectDuration;                                    // 0x23C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                SpawnSoundName1P;                                  // 0x240(0x10)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                SpawnSoundName3P;                                  // 0x250(0x10)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                SpawnSoundName3PEnemy;                             // 0x260(0x10)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAkComponent*                          AkComponent;                                       // 0x270(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UStaticMeshComponent*>          EffectMeshComponentArray;                          // 0x278(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2BFA[0x30];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASolarSummonVehicleSpawner* GetDefaultObj();

};

// 0x30 (0x410 - 0x3E0)
// Class Solarland.SolarSummonWall
class ASolarSummonWall : public ASummonItemBase
{
public:
	struct FSoftClassPath                        EnergyBarrierClassPath;                            // 0x3E0(0x18)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               EnergyBarrierLocationOffset;                       // 0x3F8(0xC)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2BFB[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ASummonItemBase*                       EnergyBarrier;                                     // 0x408(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class ASolarSummonWall* GetDefaultObj();

	void SpawnEnergyBarrier();
};

// 0x40 (0xAD0 - 0xA90)
// Class Solarland.SolarSummonWeapon
class ASolarSummonWeapon : public ASolarWeapon
{
public:
	uint8                                        Pad_2BFC[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TWeakObjectPtr<class ASolarCharacter>        SummonWeaponHolder;                                // 0xAA0(0x8)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class ASummonItemTurret>      SummonWeaponOwner;                                 // 0xAA8(0x8)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               ShotDirection;                                     // 0xAB0(0xC)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2BFD[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UGameplayEffect>           WeaponCanUseEffect;                                // 0xAC0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2BFE[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASolarSummonWeapon* GetDefaultObj();

};

// 0x88 (0xE30 - 0xDA8)
// Class Solarland.SolarSummonWeapon_Vehicle
class ASolarSummonWeapon_Vehicle : public ASolarPlayerItemWeapon
{
public:
	struct FSoftObjectPath                       SummonConfigPath;                                  // 0xDA8(0x18)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class ASolarSummonVehicleSpawner> SummonVehicleSpawnerClass;                         // 0xDC0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               VehicleSpawnOffset;                                // 0xDC8(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2BFF[0x5C];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASolarSummonWeapon_Vehicle* GetDefaultObj();

	void ServerRequestSummon(struct FVector& InLocation, struct FVector& InNormal, struct FRotator& InOrientation);
	void ClientResponseSummonResult(bool bInSuccess);
};

// 0x90 (0x140 - 0xB0)
// Class Solarland.SolarSwitchTargetCameraControlComp
class USolarSwitchTargetCameraControlComp : public UActorComponent
{
public:
	TSubclassOf<class ASolarSpectateLevelSequenceActor> SpectateLevelSequenceActorClass;                   // 0xB0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CameraBlendCurveHeightScale;                       // 0xB8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CameraBlendSpeed;                                  // 0xBC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinCameraBlendDistanceBetweenTargets;              // 0xC0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C00[0x3C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class ASolarSpectateLevelSequenceActor*      SpectateLevelSequenceActor;                        // 0x100(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2C01[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class ACameraActor*                          IntermediatePointCameraActor;                      // 0x118(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2C02[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TWeakObjectPtr<class AActor>                 IntermediateEndTarget;                             // 0x130(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class UCameraComponent>       EndTargetCameraCache;                              // 0x138(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class USolarSwitchTargetCameraControlComp* GetDefaultObj();

	void OnViewTargetBlendComplete();
	void OnScoutPlayerWorkComplete();
};

// 0x8 (0xB8 - 0xB0)
// Class Solarland.SolarSyncComponent
class USolarSyncComponent : public UActorComponent
{
public:
	uint8                                        Pad_2C05[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarSyncComponent* GetDefaultObj();

	void SendSyncAxisRotMessage(const class FString& Type, struct FRotator& Value);
	void SendSyncAxisMoveMessage(const class FString& Type, float Value, struct FVector& Location);
	void SendSyncAxisMessage(const class FString& Type, float Value);
	void SendPlayerMoveMessage(struct FServerMoveData& MoveData);
	void SendActionMessage(const class FString& Type, const class FString& Value);
	void RegisterActor(class AActor* AC);
};

// 0x50 (0x108 - 0xB8)
// Class Solarland.SolarSyncPlayerControllerComponent
class USolarSyncPlayerControllerComponent : public USolarSyncComponent
{
public:
	uint8                                        Pad_2C06[0x50];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarSyncPlayerControllerComponent* GetDefaultObj();

	void InputTurnRate(float Value);
	void InputTurn(float Value);
	void InputSecondWeaponReleased();
	void InputSecondWeaponPressed();
	void InputReloadReleased();
	void InputReloadPressed();
	void InputPrimaryWeaponReleased();
	void InputPrimaryWeaponPressed();
	void InputOutVehicleReleased();
	void InputOutVehiclePressed();
	void InputMoveRight(float Value);
	void InputMoveForward(float Value);
	void InputMapReleased();
	void InputMapPressed();
	void InputLookUpRate(float Value);
	void InputLookUp(float Value);
	void InputJumpReleased();
	void InputJumpPressed();
	void InputJetVerticalReleased();
	void InputJetVerticalPressed();
	void InputJetHorizontalReleased();
	void InputJetHorizontalPressed();
	void InputInteractReleased();
	void InputInteractPressed();
	void InputInteractAlternativeReleased();
	void InputInteractAlternativePressed();
	void InputGunsightReleased();
	void InputGunsightPressed();
	void InputFreeLookReleased();
	void InputFreeLookPressed();
	void InputFireReleased();
	void InputFirePressed();
	void InputEquip2Released();
	void InputEquip2Pressed();
	void InputEquip1Released();
	void InputEquip1Pressed();
	void InputEjectReleased();
	void InputEjectPressed();
	void InputCrouchReleased();
	void InputCrouchPressed();
	void InputAltFireReleased();
	void InputAltFirePressed();
};

// 0x38 (0x380 - 0x348)
// Class Solarland.SolarSyncRemoteController
class ASolarSyncRemoteController : public AAIController
{
public:
	uint8                                        Pad_2C07[0x38];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASolarSyncRemoteController* GetDefaultObj();

	void TakeWeapon(const class FString& Cmd);
	void OnReceivedServerMoveData(struct FServerMoveData& MoveData);
	void InputTurnRate(struct FRotator& Rot);
	void InputTurn(struct FRotator& Rot);
	void InputSecondWeaponReleased();
	void InputSecondWeaponPressed();
	void InputReloadReleased();
	void InputReloadPressed();
	void InputPrimaryWeaponReleased();
	void InputPrimaryWeaponPressed();
	void InputOutVehicleReleased();
	void InputOutVehiclePressed();
	void InputMoveRight(struct FSolarSyncMoveMessageParams& Params);
	void InputMoveForward(struct FSolarSyncMoveMessageParams& Params);
	void InputMapReleased();
	void InputMapPressed();
	void InputLookUpRate(struct FRotator& Rot);
	void InputLookUp(struct FRotator& Rot);
	void InputJumpReleased();
	void InputJumpPressed();
	void InputJetVerticalReleased();
	void InputJetVerticalPressed();
	void InputJetHorizontalReleased();
	void InputJetHorizontalPressed();
	void InputInteractReleased();
	void InputInteractPressed();
	void InputInteractAlternativeReleased();
	void InputInteractAlternativePressed();
	void InputGunsightReleased();
	void InputGunsightPressed();
	void InputFreeLookReleased();
	void InputFreeLookPressed();
	void InputFireReleased();
	void InputFirePressed();
	void InputEquip2Released();
	void InputEquip2Pressed();
	void InputEquip1Released();
	void InputEquip1Pressed();
	void InputEjectReleased();
	void InputEjectPressed();
	void InputCrouchReleased();
	void InputCrouchPressed();
	void InputAltFireReleased();
	void InputAltFirePressed();
	void Fire(bool Activate);
};

// 0x10 (0x358 - 0x348)
// Class Solarland.SolarTabControlList
class USolarTabControlList : public USolarUserWidget
{
public:
	class USolarTreeView*                        TabList;                                           // 0x348(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        CompoundStyleFlags;                                // 0x350(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        LeafStyleFlags;                                    // 0x354(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class USolarTabControlList* GetDefaultObj();

	bool IsMatchStyle(int32 InStyleFlags, int32 BitMask);
};

// 0x8 (0x350 - 0x348)
// Class Solarland.SolarTabControlListSlot
class USolarTabControlListSlot : public USolarUserWidget
{
public:
	uint8                                        Pad_2C09[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarTabControlListSlot* GetDefaultObj();

	bool BP_IsItemSelectableChanged();
};

// 0x18 (0x40 - 0x28)
// Class Solarland.SolarTableManager
class USolarTableManager : public UObject
{
public:
	uint8                                        Pad_2C10[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class ESolarSupportLanguages            SystemLang;                                        // 0x30(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C11[0xF];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarTableManager* GetDefaultObj();

	void SetIMInitFlag(bool Flag);
	void SetCurrentLangEnum(enum class ESolarSupportLanguages InLang);
	void SetCurrentLang(const class FString& InLang);
	void ReceiveInit();
	void OnSetCurrentLang(const class FString& InLang);
	void MakeUpperLocalTextWithLang(class FString& OutLocalText, enum class ESolarSupportLanguages InLang);
	void MakeUpperLocalText(class FString& OutLocalText);
	void MakeLowerLocalTextWithLang(class FString& OutLocalText, enum class ESolarSupportLanguages InLang);
	void MakeLowerLocalText(class FString& OutLocalText);
	bool IsLocalTextIDValid(int32 ID);
	class FString GetLocalTextWithLang(int32 ID, enum class ESolarSupportLanguages InLang, bool bMakeUpperText);
	class FString GetLocalText(int32 ID, bool bMakeUpperText);
	bool GetIMInitFlag();
	enum class ESolarSupportLanguages GetCurrentLangEnum();
	class FString GetCurrentLang();
	enum class ESolarSupportLanguages ConvertLangNameToEnum(const class FString& LangName);
};

// 0x2CD8 (0x2D00 - 0x28)
// Class Solarland.SolarTables
class USolarTables : public UObject
{
public:
	struct FSolarTables_Tables                   Tables;                                            // 0x28(0x2CA8)(Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic)
	class USolarTables_TablesReader*             TablesReader;                                      // 0x2CD0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnJsonTableReloadComplete;                         // 0x2CD8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_2C15[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarTables* GetDefaultObj();

	void UnloadTables();
	void UnitTest();
	void ReloadTablesAsync_Internal();
	void ReloadTablesAsync();
	void ReloadTables();
	void LoadTables();
	bool IsReloadTablesComplete();
	bool IsInstanceValid();
	bool Hotfix_FixValue(const class FString& TableName, const class FString& RowKey, const class FString& ColKey, const class FString& NewValue, class FString* ErrorMsg);
	bool Hotfix_FixRow(const class FString& TableName, const class FString& RowKey, const class FString& NewRowValue, class FString* ErrorMsg);
	bool HasTableName(const class FString& TableName);
	class USolarTables* GetInstance();
	void DestroyInstance();
};

// 0x8 (0x30 - 0x28)
// Class Solarland.SolarTableReaderBase
class USolarTableReaderBase : public UObject
{
public:
	uint8                                        Pad_2C19[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarTableReaderBase* GetDefaultObj();

	int32 RandomRangeInt(struct FSolarTablesRangeInt& InData);
	float RandomRangeFloat(struct FSolarTablesRangeFloat& InData);
	bool IsReaderValid();
	class FString GetLocText(struct FSolarTablesLocalText& InData);
	class FString GetDeviceRes(struct FSolarTablesDeviceRes& InData);
	bool ContainsRangeInt(struct FSolarTablesRangeInt& InData, int32 In, bool bEqualMin, bool bEqualMax);
	bool ContainsRangeFloat(struct FSolarTablesRangeFloat& InData, float In, bool bEqualMin, bool bEqualMax);
};

// 0x0 (0x30 - 0x30)
// Class Solarland.SolarTables_Reader_AccountFixedExp
class USolarTables_Reader_AccountFixedExp : public USolarTableReaderBase
{
public:

	static class UClass* StaticClass();
	static class USolarTables_Reader_AccountFixedExp* GetDefaultObj();

	struct FSolarTablesData_AccountFixedExp TryGetRowData(int32 Key, bool* HasKey);
	bool HasRowKey(int32 Key);
	bool HasColKey(const class FString& Key);
	class FString GetTableName();
	int32 GetRowKeys(TArray<int32>* OutKeys);
	struct FSolarTablesData_AccountFixedExp GetRowData(int32 Key);
	int32 GetRowCount();
	int32 GetDataNum();
	TArray<class FString> GetColKeys();
	int32 GetColCount();
};

// 0x0 (0x30 - 0x30)
// Class Solarland.SolarTables_Reader_AccountFlag
class USolarTables_Reader_AccountFlag : public USolarTableReaderBase
{
public:

	static class UClass* StaticClass();
	static class USolarTables_Reader_AccountFlag* GetDefaultObj();

	struct FSolarTablesData_AccountFlag TryGetRowData(int32 Key, bool* HasKey);
	bool HasRowKey(int32 Key);
	bool HasColKey(const class FString& Key);
	class FString GetTableName();
	int32 GetRowKeys(TArray<int32>* OutKeys);
	struct FSolarTablesData_AccountFlag GetRowData(int32 Key);
	int32 GetRowCount();
	int32 GetDataNum();
	TArray<class FString> GetColKeys();
	int32 GetColCount();
};

// 0x0 (0x30 - 0x30)
// Class Solarland.SolarTables_Reader_Achievement
class USolarTables_Reader_Achievement : public USolarTableReaderBase
{
public:

	static class UClass* StaticClass();
	static class USolarTables_Reader_Achievement* GetDefaultObj();

	struct FSolarTablesData_Achievement TryGetRowData(int32 Key, bool* HasKey);
	bool HasRowKey(int32 Key);
	bool HasColKey(const class FString& Key);
	class FString GetTableName();
	int32 GetRowKeys(TArray<int32>* OutKeys);
	struct FSolarTablesData_Achievement GetRowData(int32 Key);
	int32 GetRowCount();
	int32 GetDataNum();
	TArray<class FString> GetColKeys();
	int32 GetColCount();
};

// 0x0 (0x30 - 0x30)
// Class Solarland.SolarTables_Reader_Airline
class USolarTables_Reader_Airline : public USolarTableReaderBase
{
public:

	static class UClass* StaticClass();
	static class USolarTables_Reader_Airline* GetDefaultObj();

	struct FSolarTablesData_Airline TryGetRowData(int32 Key, bool* HasKey);
	bool HasRowKey(int32 Key);
	bool HasColKey(const class FString& Key);
	class FString GetTableName();
	int32 GetRowKeys(TArray<int32>* OutKeys);
	struct FSolarTablesData_Airline GetRowData(int32 Key);
	int32 GetRowCount();
	int32 GetDataNum();
	TArray<class FString> GetColKeys();
	int32 GetColCount();
};

// 0x0 (0x30 - 0x30)
// Class Solarland.SolarTables_Reader_ArmorProperty
class USolarTables_Reader_ArmorProperty : public USolarTableReaderBase
{
public:

	static class UClass* StaticClass();
	static class USolarTables_Reader_ArmorProperty* GetDefaultObj();

	struct FSolarTablesData_ArmorProperty TryGetRowData(int32 Key, bool* HasKey);
	bool HasRowKey(int32 Key);
	bool HasColKey(const class FString& Key);
	class FString GetTableName();
	int32 GetRowKeys(TArray<int32>* OutKeys);
	struct FSolarTablesData_ArmorProperty GetRowData(int32 Key);
	int32 GetRowCount();
	int32 GetDataNum();
	TArray<class FString> GetColKeys();
	int32 GetColCount();
};

// 0x0 (0x30 - 0x30)
// Class Solarland.SolarTables_Reader_Armory
class USolarTables_Reader_Armory : public USolarTableReaderBase
{
public:

	static class UClass* StaticClass();
	static class USolarTables_Reader_Armory* GetDefaultObj();

	struct FSolarTablesData_Armory TryGetRowData(int32 Key, bool* HasKey);
	bool HasRowKey(int32 Key);
	bool HasColKey(const class FString& Key);
	class FString GetTableName();
	int32 GetRowKeys(TArray<int32>* OutKeys);
	struct FSolarTablesData_Armory GetRowData(int32 Key);
	int32 GetRowCount();
	int32 GetDataNum();
	TArray<class FString> GetColKeys();
	int32 GetColCount();
};

// 0x0 (0x30 - 0x30)
// Class Solarland.SolarTables_Reader_AutoDirector
class USolarTables_Reader_AutoDirector : public USolarTableReaderBase
{
public:

	static class UClass* StaticClass();
	static class USolarTables_Reader_AutoDirector* GetDefaultObj();

	struct FSolarTablesData_AutoDirector TryGetRowData(int32 Key, bool* HasKey);
	bool HasRowKey(int32 Key);
	bool HasColKey(const class FString& Key);
	class FString GetTableName();
	int32 GetRowKeys(TArray<int32>* OutKeys);
	struct FSolarTablesData_AutoDirector GetRowData(int32 Key);
	int32 GetRowCount();
	int32 GetDataNum();
	TArray<class FString> GetColKeys();
	int32 GetColCount();
};

// 0x0 (0x30 - 0x30)
// Class Solarland.SolarTables_Reader_AutoDirectorActivityScore
class USolarTables_Reader_AutoDirectorActivityScore : public USolarTableReaderBase
{
public:

	static class UClass* StaticClass();
	static class USolarTables_Reader_AutoDirectorActivityScore* GetDefaultObj();

	struct FSolarTablesData_AutoDirectorActivityScore TryGetRowData(int32 Key, bool* HasKey);
	bool HasRowKey(int32 Key);
	bool HasColKey(const class FString& Key);
	class FString GetTableName();
	int32 GetRowKeys(TArray<int32>* OutKeys);
	struct FSolarTablesData_AutoDirectorActivityScore GetRowData(int32 Key);
	int32 GetRowCount();
	int32 GetDataNum();
	TArray<class FString> GetColKeys();
	int32 GetColCount();
};

// 0x0 (0x30 - 0x30)
// Class Solarland.SolarTables_Reader_BackpackProperty
class USolarTables_Reader_BackpackProperty : public USolarTableReaderBase
{
public:

	static class UClass* StaticClass();
	static class USolarTables_Reader_BackpackProperty* GetDefaultObj();

	struct FSolarTablesData_BackpackProperty TryGetRowData(int32 Key, bool* HasKey);
	bool HasRowKey(int32 Key);
	bool HasColKey(const class FString& Key);
	class FString GetTableName();
	int32 GetRowKeys(TArray<int32>* OutKeys);
	struct FSolarTablesData_BackpackProperty GetRowData(int32 Key);
	int32 GetRowCount();
	int32 GetDataNum();
	TArray<class FString> GetColKeys();
	int32 GetColCount();
};

// 0x0 (0x30 - 0x30)
// Class Solarland.SolarTables_Reader_BackpackTrailProperty
class USolarTables_Reader_BackpackTrailProperty : public USolarTableReaderBase
{
public:

	static class UClass* StaticClass();
	static class USolarTables_Reader_BackpackTrailProperty* GetDefaultObj();

	struct FSolarTablesData_BackpackTrailProperty TryGetRowData(int32 Key, bool* HasKey);
	bool HasRowKey(int32 Key);
	bool HasColKey(const class FString& Key);
	class FString GetTableName();
	int32 GetRowKeys(TArray<int32>* OutKeys);
	struct FSolarTablesData_BackpackTrailProperty GetRowData(int32 Key);
	int32 GetRowCount();
	int32 GetDataNum();
	TArray<class FString> GetColKeys();
	int32 GetColCount();
};

// 0x0 (0x30 - 0x30)
// Class Solarland.SolarTables_Reader_BattleEndRankSettlement
class USolarTables_Reader_BattleEndRankSettlement : public USolarTableReaderBase
{
public:

	static class UClass* StaticClass();
	static class USolarTables_Reader_BattleEndRankSettlement* GetDefaultObj();

	struct FSolarTablesData_BattleEndRankSettlement TryGetRowData(int32 Key, bool* HasKey);
	bool HasRowKey(int32 Key);
	bool HasColKey(const class FString& Key);
	class FString GetTableName();
	int32 GetRowKeys(TArray<int32>* OutKeys);
	struct FSolarTablesData_BattleEndRankSettlement GetRowData(int32 Key);
	int32 GetRowCount();
	int32 GetDataNum();
	TArray<class FString> GetColKeys();
	int32 GetColCount();
};

// 0x0 (0x30 - 0x30)
// Class Solarland.SolarTables_Reader_BattleRoyaleMode
class USolarTables_Reader_BattleRoyaleMode : public USolarTableReaderBase
{
public:

	static class UClass* StaticClass();
	static class USolarTables_Reader_BattleRoyaleMode* GetDefaultObj();

	struct FSolarTablesData_BattleRoyaleMode TryGetRowData(int32 Key, bool* HasKey);
	bool HasRowKey(int32 Key);
	bool HasColKey(const class FString& Key);
	class FString GetTableName();
	int32 GetRowKeys(TArray<int32>* OutKeys);
	struct FSolarTablesData_BattleRoyaleMode GetRowData(int32 Key);
	int32 GetRowCount();
	int32 GetDataNum();
	TArray<class FString> GetColKeys();
	int32 GetColCount();
};

// 0x0 (0x30 - 0x30)
// Class Solarland.SolarTables_Reader_BattleUpgradeContent
class USolarTables_Reader_BattleUpgradeContent : public USolarTableReaderBase
{
public:

	static class UClass* StaticClass();
	static class USolarTables_Reader_BattleUpgradeContent* GetDefaultObj();

	struct FSolarTablesData_BattleUpgradeContent TryGetRowData(int32 Key, bool* HasKey);
	bool HasRowKey(int32 Key);
	bool HasColKey(const class FString& Key);
	class FString GetTableName();
	int32 GetRowKeys(TArray<int32>* OutKeys);
	struct FSolarTablesData_BattleUpgradeContent GetRowData(int32 Key);
	int32 GetRowCount();
	int32 GetDataNum();
	TArray<class FString> GetColKeys();
	int32 GetColCount();
};

// 0x0 (0x30 - 0x30)
// Class Solarland.SolarTables_Reader_BattleUpgradeEffect
class USolarTables_Reader_BattleUpgradeEffect : public USolarTableReaderBase
{
public:

	static class UClass* StaticClass();
	static class USolarTables_Reader_BattleUpgradeEffect* GetDefaultObj();

	struct FSolarTablesData_BattleUpgradeEffect TryGetRowData(int32 Key, bool* HasKey);
	bool HasRowKey(int32 Key);
	bool HasColKey(const class FString& Key);
	class FString GetTableName();
	int32 GetRowKeys(TArray<int32>* OutKeys);
	struct FSolarTablesData_BattleUpgradeEffect GetRowData(int32 Key);
	int32 GetRowCount();
	int32 GetDataNum();
	TArray<class FString> GetColKeys();
	int32 GetColCount();
};

// 0x0 (0x30 - 0x30)
// Class Solarland.SolarTables_Reader_BattleUpgradeEffectPool
class USolarTables_Reader_BattleUpgradeEffectPool : public USolarTableReaderBase
{
public:

	static class UClass* StaticClass();
	static class USolarTables_Reader_BattleUpgradeEffectPool* GetDefaultObj();

	struct FSolarTablesData_BattleUpgradeEffectPool TryGetRowData(int32 Key, bool* HasKey);
	bool HasRowKey(int32 Key);
	bool HasColKey(const class FString& Key);
	class FString GetTableName();
	int32 GetRowKeys(TArray<int32>* OutKeys);
	struct FSolarTablesData_BattleUpgradeEffectPool GetRowData(int32 Key);
	int32 GetRowCount();
	int32 GetDataNum();
	TArray<class FString> GetColKeys();
	int32 GetColCount();
};

// 0x0 (0x30 - 0x30)
// Class Solarland.SolarTables_Reader_Behavior
class USolarTables_Reader_Behavior : public USolarTableReaderBase
{
public:

	static class UClass* StaticClass();
	static class USolarTables_Reader_Behavior* GetDefaultObj();

	struct FSolarTablesData_Behavior TryGetRowData(int32 Key, bool* HasKey);
	bool HasRowKey(int32 Key);
	bool HasColKey(const class FString& Key);
	class FString GetTableName();
	int32 GetRowKeys(TArray<int32>* OutKeys);
	struct FSolarTablesData_Behavior GetRowData(int32 Key);
	int32 GetRowCount();
	int32 GetDataNum();
	TArray<class FString> GetColKeys();
	int32 GetColCount();
};

// 0x0 (0x30 - 0x30)
// Class Solarland.SolarTables_Reader_BpAward
class USolarTables_Reader_BpAward : public USolarTableReaderBase
{
public:

	static class UClass* StaticClass();
	static class USolarTables_Reader_BpAward* GetDefaultObj();

	struct FSolarTablesData_BpAward TryGetRowData(int32 Key, bool* HasKey);
	bool HasRowKey(int32 Key);
	bool HasColKey(const class FString& Key);
	class FString GetTableName();
	int32 GetRowKeys(TArray<int32>* OutKeys);
	struct FSolarTablesData_BpAward GetRowData(int32 Key);
	int32 GetRowCount();
	int32 GetDataNum();
	TArray<class FString> GetColKeys();
	int32 GetColCount();
};

// 0x0 (0x30 - 0x30)
// Class Solarland.SolarTables_Reader_CapsuleProperty
class USolarTables_Reader_CapsuleProperty : public USolarTableReaderBase
{
public:

	static class UClass* StaticClass();
	static class USolarTables_Reader_CapsuleProperty* GetDefaultObj();

	struct FSolarTablesData_CapsuleProperty TryGetRowData(int32 Key, bool* HasKey);
	bool HasRowKey(int32 Key);
	bool HasColKey(const class FString& Key);
	class FString GetTableName();
	int32 GetRowKeys(TArray<int32>* OutKeys);
	struct FSolarTablesData_CapsuleProperty GetRowData(int32 Key);
	int32 GetRowCount();
	int32 GetDataNum();
	TArray<class FString> GetColKeys();
	int32 GetColCount();
};

// 0x0 (0x30 - 0x30)
// Class Solarland.SolarTables_Reader_CaseToggleAlphabet
class USolarTables_Reader_CaseToggleAlphabet : public USolarTableReaderBase
{
public:

	static class UClass* StaticClass();
	static class USolarTables_Reader_CaseToggleAlphabet* GetDefaultObj();

	struct FSolarTablesData_CaseToggleAlphabet TryGetRowData(int32 Key, bool* HasKey);
	bool HasRowKey(int32 Key);
	bool HasColKey(const class FString& Key);
	class FString GetTableName();
	int32 GetRowKeys(TArray<int32>* OutKeys);
	struct FSolarTablesData_CaseToggleAlphabet GetRowData(int32 Key);
	int32 GetRowCount();
	int32 GetDataNum();
	TArray<class FString> GetColKeys();
	int32 GetColCount();
};

// 0x0 (0x30 - 0x30)
// Class Solarland.SolarTables_Reader_CharacterAbility
class USolarTables_Reader_CharacterAbility : public USolarTableReaderBase
{
public:

	static class UClass* StaticClass();
	static class USolarTables_Reader_CharacterAbility* GetDefaultObj();

	struct FSolarTablesData_CharacterAbility TryGetRowData(int32 Key, bool* HasKey);
	bool HasRowKey(int32 Key);
	bool HasColKey(const class FString& Key);
	class FString GetTableName();
	int32 GetRowKeys(TArray<int32>* OutKeys);
	struct FSolarTablesData_CharacterAbility GetRowData(int32 Key);
	int32 GetRowCount();
	int32 GetDataNum();
	TArray<class FString> GetColKeys();
	int32 GetColCount();
};

// 0x0 (0x30 - 0x30)
// Class Solarland.SolarTables_Reader_CharacterPassiveAbility
class USolarTables_Reader_CharacterPassiveAbility : public USolarTableReaderBase
{
public:

	static class UClass* StaticClass();
	static class USolarTables_Reader_CharacterPassiveAbility* GetDefaultObj();

	struct FSolarTablesData_CharacterPassiveAbility TryGetRowData(int32 Key, bool* HasKey);
	bool HasRowKey(int32 Key);
	bool HasColKey(const class FString& Key);
	class FString GetTableName();
	int32 GetRowKeys(TArray<int32>* OutKeys);
	struct FSolarTablesData_CharacterPassiveAbility GetRowData(int32 Key);
	int32 GetRowCount();
	int32 GetDataNum();
	TArray<class FString> GetColKeys();
	int32 GetColCount();
};

// 0x0 (0x30 - 0x30)
// Class Solarland.SolarTables_Reader_CharacterVoiceover
class USolarTables_Reader_CharacterVoiceover : public USolarTableReaderBase
{
public:

	static class UClass* StaticClass();
	static class USolarTables_Reader_CharacterVoiceover* GetDefaultObj();

	struct FSolarTablesData_CharacterVoiceover TryGetRowData(int32 Key, bool* HasKey);
	bool HasRowKey(int32 Key);
	bool HasColKey(const class FString& Key);
	class FString GetTableName();
	int32 GetRowKeys(TArray<int32>* OutKeys);
	struct FSolarTablesData_CharacterVoiceover GetRowData(int32 Key);
	int32 GetRowCount();
	int32 GetDataNum();
	TArray<class FString> GetColKeys();
	int32 GetColCount();
};

// 0x0 (0x30 - 0x30)
// Class Solarland.SolarTables_Reader_Chest
class USolarTables_Reader_Chest : public USolarTableReaderBase
{
public:

	static class UClass* StaticClass();
	static class USolarTables_Reader_Chest* GetDefaultObj();

	struct FSolarTablesData_Chest TryGetRowData(int32 Key, bool* HasKey);
	bool HasRowKey(int32 Key);
	bool HasColKey(const class FString& Key);
	class FString GetTableName();
	int32 GetRowKeys(TArray<int32>* OutKeys);
	struct FSolarTablesData_Chest GetRowData(int32 Key);
	int32 GetRowCount();
	int32 GetDataNum();
	TArray<class FString> GetColKeys();
	int32 GetColCount();
};

// 0x0 (0x30 - 0x30)
// Class Solarland.SolarTables_Reader_ChestSpawn
class USolarTables_Reader_ChestSpawn : public USolarTableReaderBase
{
public:

	static class UClass* StaticClass();
	static class USolarTables_Reader_ChestSpawn* GetDefaultObj();

	struct FSolarTablesData_ChestSpawn TryGetRowData(int32 Key, bool* HasKey);
	bool HasRowKey(int32 Key);
	bool HasColKey(const class FString& Key);
	class FString GetTableName();
	int32 GetRowKeys(TArray<int32>* OutKeys);
	struct FSolarTablesData_ChestSpawn GetRowData(int32 Key);
	int32 GetRowCount();
	int32 GetDataNum();
	TArray<class FString> GetColKeys();
	int32 GetColCount();
};

// 0x0 (0x30 - 0x30)
// Class Solarland.SolarTables_Reader_ChestSpawnGroup
class USolarTables_Reader_ChestSpawnGroup : public USolarTableReaderBase
{
public:

	static class UClass* StaticClass();
	static class USolarTables_Reader_ChestSpawnGroup* GetDefaultObj();

	struct FSolarTablesData_ChestSpawnGroup TryGetRowData(int32 Key, bool* HasKey);
	bool HasRowKey(int32 Key);
	bool HasColKey(const class FString& Key);
	class FString GetTableName();
	int32 GetRowKeys(TArray<int32>* OutKeys);
	struct FSolarTablesData_ChestSpawnGroup GetRowData(int32 Key);
	int32 GetRowCount();
	int32 GetDataNum();
	TArray<class FString> GetColKeys();
	int32 GetColCount();
};

// 0x0 (0x30 - 0x30)
// Class Solarland.SolarTables_Reader_CircularCameras
class USolarTables_Reader_CircularCameras : public USolarTableReaderBase
{
public:

	static class UClass* StaticClass();
	static class USolarTables_Reader_CircularCameras* GetDefaultObj();

	struct FSolarTablesData_CircularCameras TryGetRowData(int32 Key, bool* HasKey);
	bool HasRowKey(int32 Key);
	bool HasColKey(const class FString& Key);
	class FString GetTableName();
	int32 GetRowKeys(TArray<int32>* OutKeys);
	struct FSolarTablesData_CircularCameras GetRowData(int32 Key);
	int32 GetRowCount();
	int32 GetDataNum();
	TArray<class FString> GetColKeys();
	int32 GetColCount();
};

// 0x0 (0x30 - 0x30)
// Class Solarland.SolarTables_Reader_ClanFlag
class USolarTables_Reader_ClanFlag : public USolarTableReaderBase
{
public:

	static class UClass* StaticClass();
	static class USolarTables_Reader_ClanFlag* GetDefaultObj();

	struct FSolarTablesData_ClanFlag TryGetRowData(int32 Key, bool* HasKey);
	bool HasRowKey(int32 Key);
	bool HasColKey(const class FString& Key);
	class FString GetTableName();
	int32 GetRowKeys(TArray<int32>* OutKeys);
	struct FSolarTablesData_ClanFlag GetRowData(int32 Key);
	int32 GetRowCount();
	int32 GetDataNum();
	TArray<class FString> GetColKeys();
	int32 GetColCount();
};

// 0x0 (0x30 - 0x30)
// Class Solarland.SolarTables_Reader_Dance
class USolarTables_Reader_Dance : public USolarTableReaderBase
{
public:

	static class UClass* StaticClass();
	static class USolarTables_Reader_Dance* GetDefaultObj();

	struct FSolarTablesData_Dance TryGetRowData(int32 Key, bool* HasKey);
	bool HasRowKey(int32 Key);
	bool HasColKey(const class FString& Key);
	class FString GetTableName();
	int32 GetRowKeys(TArray<int32>* OutKeys);
	struct FSolarTablesData_Dance GetRowData(int32 Key);
	int32 GetRowCount();
	int32 GetDataNum();
	TArray<class FString> GetColKeys();
	int32 GetColCount();
};

// 0x0 (0x30 - 0x30)
// Class Solarland.SolarTables_Reader_DayAndNight
class USolarTables_Reader_DayAndNight : public USolarTableReaderBase
{
public:

	static class UClass* StaticClass();
	static class USolarTables_Reader_DayAndNight* GetDefaultObj();

	struct FSolarTablesData_DayAndNight TryGetRowData(int32 Key, bool* HasKey);
	bool HasRowKey(int32 Key);
	bool HasColKey(const class FString& Key);
	class FString GetTableName();
	int32 GetRowKeys(TArray<int32>* OutKeys);
	struct FSolarTablesData_DayAndNight GetRowData(int32 Key);
	int32 GetRowCount();
	int32 GetDataNum();
	TArray<class FString> GetColKeys();
	int32 GetColCount();
};

// 0x0 (0x30 - 0x30)
// Class Solarland.SolarTables_Reader_DsVariableRange
class USolarTables_Reader_DsVariableRange : public USolarTableReaderBase
{
public:

	static class UClass* StaticClass();
	static class USolarTables_Reader_DsVariableRange* GetDefaultObj();

	struct FSolarTablesData_DsVariableRange TryGetRowData(int32 Key, bool* HasKey);
	bool HasRowKey(int32 Key);
	bool HasColKey(const class FString& Key);
	class FString GetTableName();
	int32 GetRowKeys(TArray<int32>* OutKeys);
	struct FSolarTablesData_DsVariableRange GetRowData(int32 Key);
	int32 GetRowCount();
	int32 GetDataNum();
	TArray<class FString> GetColKeys();
	int32 GetColCount();
};

// 0x0 (0x30 - 0x30)
// Class Solarland.SolarTables_Reader_Emote
class USolarTables_Reader_Emote : public USolarTableReaderBase
{
public:

	static class UClass* StaticClass();
	static class USolarTables_Reader_Emote* GetDefaultObj();

	struct FSolarTablesData_Emote TryGetRowData(int32 Key, bool* HasKey);
	bool HasRowKey(int32 Key);
	bool HasColKey(const class FString& Key);
	class FString GetTableName();
	int32 GetRowKeys(TArray<int32>* OutKeys);
	struct FSolarTablesData_Emote GetRowData(int32 Key);
	int32 GetRowCount();
	int32 GetDataNum();
	TArray<class FString> GetColKeys();
	int32 GetColCount();
};

// 0x0 (0x30 - 0x30)
// Class Solarland.SolarTables_Reader_EnergyProperty
class USolarTables_Reader_EnergyProperty : public USolarTableReaderBase
{
public:

	static class UClass* StaticClass();
	static class USolarTables_Reader_EnergyProperty* GetDefaultObj();

	struct FSolarTablesData_EnergyProperty TryGetRowData(int32 Key, bool* HasKey);
	bool HasRowKey(int32 Key);
	bool HasColKey(const class FString& Key);
	class FString GetTableName();
	int32 GetRowKeys(TArray<int32>* OutKeys);
	struct FSolarTablesData_EnergyProperty GetRowData(int32 Key);
	int32 GetRowCount();
	int32 GetDataNum();
	TArray<class FString> GetColKeys();
	int32 GetColCount();
};

// 0x0 (0x30 - 0x30)
// Class Solarland.SolarTables_Reader_EscapeExp
class USolarTables_Reader_EscapeExp : public USolarTableReaderBase
{
public:

	static class UClass* StaticClass();
	static class USolarTables_Reader_EscapeExp* GetDefaultObj();

	struct FSolarTablesData_EscapeExp TryGetRowData(int32 Key, bool* HasKey);
	bool HasRowKey(int32 Key);
	bool HasColKey(const class FString& Key);
	class FString GetTableName();
	int32 GetRowKeys(TArray<int32>* OutKeys);
	struct FSolarTablesData_EscapeExp GetRowData(int32 Key);
	int32 GetRowCount();
	int32 GetDataNum();
	TArray<class FString> GetColKeys();
	int32 GetColCount();
};

// 0x0 (0x30 - 0x30)
// Class Solarland.SolarTables_Reader_EShop
class USolarTables_Reader_EShop : public USolarTableReaderBase
{
public:

	static class UClass* StaticClass();
	static class USolarTables_Reader_EShop* GetDefaultObj();

	struct FSolarTablesData_EShop TryGetRowData(int32 Key, bool* HasKey);
	bool HasRowKey(int32 Key);
	bool HasColKey(const class FString& Key);
	class FString GetTableName();
	int32 GetRowKeys(TArray<int32>* OutKeys);
	struct FSolarTablesData_EShop GetRowData(int32 Key);
	int32 GetRowCount();
	int32 GetDataNum();
	TArray<class FString> GetColKeys();
	int32 GetColCount();
};

// 0x0 (0x30 - 0x30)
// Class Solarland.SolarTables_Reader_EShopDemoModel
class USolarTables_Reader_EShopDemoModel : public USolarTableReaderBase
{
public:

	static class UClass* StaticClass();
	static class USolarTables_Reader_EShopDemoModel* GetDefaultObj();

	struct FSolarTablesData_EShopDemoModel TryGetRowData(int32 Key, bool* HasKey);
	bool HasRowKey(int32 Key);
	bool HasColKey(const class FString& Key);
	class FString GetTableName();
	int32 GetRowKeys(TArray<int32>* OutKeys);
	struct FSolarTablesData_EShopDemoModel GetRowData(int32 Key);
	int32 GetRowCount();
	int32 GetDataNum();
	TArray<class FString> GetColKeys();
	int32 GetColCount();
};

// 0x0 (0x30 - 0x30)
// Class Solarland.SolarTables_Reader_EShopGoodsPool
class USolarTables_Reader_EShopGoodsPool : public USolarTableReaderBase
{
public:

	static class UClass* StaticClass();
	static class USolarTables_Reader_EShopGoodsPool* GetDefaultObj();

	struct FSolarTablesData_EShopGoodsPool TryGetRowData(int32 Key, bool* HasKey);
	bool HasRowKey(int32 Key);
	bool HasColKey(const class FString& Key);
	class FString GetTableName();
	int32 GetRowKeys(TArray<int32>* OutKeys);
	struct FSolarTablesData_EShopGoodsPool GetRowData(int32 Key);
	int32 GetRowCount();
	int32 GetDataNum();
	TArray<class FString> GetColKeys();
	int32 GetColCount();
};

// 0x0 (0x30 - 0x30)
// Class Solarland.SolarTables_Reader_EShopGoodsPoolGroup
class USolarTables_Reader_EShopGoodsPoolGroup : public USolarTableReaderBase
{
public:

	static class UClass* StaticClass();
	static class USolarTables_Reader_EShopGoodsPoolGroup* GetDefaultObj();

	struct FSolarTablesData_EShopGoodsPoolGroup TryGetRowData(int32 Key, bool* HasKey);
	bool HasRowKey(int32 Key);
	bool HasColKey(const class FString& Key);
	class FString GetTableName();
	int32 GetRowKeys(TArray<int32>* OutKeys);
	struct FSolarTablesData_EShopGoodsPoolGroup GetRowData(int32 Key);
	int32 GetRowCount();
	int32 GetDataNum();
	TArray<class FString> GetColKeys();
	int32 GetColCount();
};

// 0x0 (0x30 - 0x30)
// Class Solarland.SolarTables_Reader_EShopSpawn
class USolarTables_Reader_EShopSpawn : public USolarTableReaderBase
{
public:

	static class UClass* StaticClass();
	static class USolarTables_Reader_EShopSpawn* GetDefaultObj();

	struct FSolarTablesData_EShopSpawn TryGetRowData(int32 Key, bool* HasKey);
	bool HasRowKey(int32 Key);
	bool HasColKey(const class FString& Key);
	class FString GetTableName();
	int32 GetRowKeys(TArray<int32>* OutKeys);
	struct FSolarTablesData_EShopSpawn GetRowData(int32 Key);
	int32 GetRowCount();
	int32 GetDataNum();
	TArray<class FString> GetColKeys();
	int32 GetColCount();
};

// 0x0 (0x30 - 0x30)
// Class Solarland.SolarTables_Reader_ExtraEnergyProperty
class USolarTables_Reader_ExtraEnergyProperty : public USolarTableReaderBase
{
public:

	static class UClass* StaticClass();
	static class USolarTables_Reader_ExtraEnergyProperty* GetDefaultObj();

	struct FSolarTablesData_ExtraEnergyProperty TryGetRowData(int32 Key, bool* HasKey);
	bool HasRowKey(int32 Key);
	bool HasColKey(const class FString& Key);
	class FString GetTableName();
	int32 GetRowKeys(TArray<int32>* OutKeys);
	struct FSolarTablesData_ExtraEnergyProperty GetRowData(int32 Key);
	int32 GetRowCount();
	int32 GetDataNum();
	TArray<class FString> GetColKeys();
	int32 GetColCount();
};

// 0x0 (0x30 - 0x30)
// Class Solarland.SolarTables_Reader_GameMap
class USolarTables_Reader_GameMap : public USolarTableReaderBase
{
public:

	static class UClass* StaticClass();
	static class USolarTables_Reader_GameMap* GetDefaultObj();

	struct FSolarTablesData_GameMap TryGetRowData(int32 Key, bool* HasKey);
	bool HasRowKey(int32 Key);
	bool HasColKey(const class FString& Key);
	class FString GetTableName();
	int32 GetRowKeys(TArray<int32>* OutKeys);
	struct FSolarTablesData_GameMap GetRowData(int32 Key);
	int32 GetRowCount();
	int32 GetDataNum();
	TArray<class FString> GetColKeys();
	int32 GetColCount();
};

// 0x0 (0x30 - 0x30)
// Class Solarland.SolarTables_Reader_GameModeGroup
class USolarTables_Reader_GameModeGroup : public USolarTableReaderBase
{
public:

	static class UClass* StaticClass();
	static class USolarTables_Reader_GameModeGroup* GetDefaultObj();

	struct FSolarTablesData_GameModeGroup TryGetRowData(int32 Key, bool* HasKey);
	bool HasRowKey(int32 Key);
	bool HasColKey(const class FString& Key);
	class FString GetTableName();
	int32 GetRowKeys(TArray<int32>* OutKeys);
	struct FSolarTablesData_GameModeGroup GetRowData(int32 Key);
	int32 GetRowCount();
	int32 GetDataNum();
	TArray<class FString> GetColKeys();
	int32 GetColCount();
};

// 0x0 (0x30 - 0x30)
// Class Solarland.SolarTables_Reader_GameModeMain
class USolarTables_Reader_GameModeMain : public USolarTableReaderBase
{
public:

	static class UClass* StaticClass();
	static class USolarTables_Reader_GameModeMain* GetDefaultObj();

	struct FSolarTablesData_GameModeMain TryGetRowData(int32 Key, bool* HasKey);
	bool HasRowKey(int32 Key);
	bool HasColKey(const class FString& Key);
	class FString GetTableName();
	int32 GetRowKeys(TArray<int32>* OutKeys);
	struct FSolarTablesData_GameModeMain GetRowData(int32 Key);
	int32 GetRowCount();
	int32 GetDataNum();
	TArray<class FString> GetColKeys();
	int32 GetColCount();
};

// 0x0 (0x30 - 0x30)
// Class Solarland.SolarTables_Reader_GameTimeLine
class USolarTables_Reader_GameTimeLine : public USolarTableReaderBase
{
public:

	static class UClass* StaticClass();
	static class USolarTables_Reader_GameTimeLine* GetDefaultObj();

	struct FSolarTablesData_GameTimeLine TryGetRowData(int32 Key, bool* HasKey);
	bool HasRowKey(int32 Key);
	bool HasColKey(const class FString& Key);
	class FString GetTableName();
	int32 GetRowKeys(TArray<int32>* OutKeys);
	struct FSolarTablesData_GameTimeLine GetRowData(int32 Key);
	int32 GetRowCount();
	int32 GetDataNum();
	TArray<class FString> GetColKeys();
	int32 GetColCount();
};

// 0x0 (0x30 - 0x30)
// Class Solarland.SolarTables_Reader_GetPoint
class USolarTables_Reader_GetPoint : public USolarTableReaderBase
{
public:

	static class UClass* StaticClass();
	static class USolarTables_Reader_GetPoint* GetDefaultObj();

	struct FSolarTablesData_GetPoint TryGetRowData(int32 Key, bool* HasKey);
	bool HasRowKey(int32 Key);
	bool HasColKey(const class FString& Key);
	class FString GetTableName();
	int32 GetRowKeys(TArray<int32>* OutKeys);
	struct FSolarTablesData_GetPoint GetRowData(int32 Key);
	int32 GetRowCount();
	int32 GetDataNum();
	TArray<class FString> GetColKeys();
	int32 GetColCount();
};

// 0x0 (0x30 - 0x30)
// Class Solarland.SolarTables_Reader_GlobalOutcome
class USolarTables_Reader_GlobalOutcome : public USolarTableReaderBase
{
public:

	static class UClass* StaticClass();
	static class USolarTables_Reader_GlobalOutcome* GetDefaultObj();

	struct FSolarTablesData_GlobalOutcome TryGetRowData(int32 Key, bool* HasKey);
	bool HasRowKey(int32 Key);
	bool HasColKey(const class FString& Key);
	class FString GetTableName();
	int32 GetRowKeys(TArray<int32>* OutKeys);
	struct FSolarTablesData_GlobalOutcome GetRowData(int32 Key);
	int32 GetRowCount();
	int32 GetDataNum();
	TArray<class FString> GetColKeys();
	int32 GetColCount();
};

// 0x0 (0x30 - 0x30)
// Class Solarland.SolarTables_Reader_GlobalSensitivity
class USolarTables_Reader_GlobalSensitivity : public USolarTableReaderBase
{
public:

	static class UClass* StaticClass();
	static class USolarTables_Reader_GlobalSensitivity* GetDefaultObj();

	struct FSolarTablesData_GlobalSensitivity TryGetRowData(int32 Key, bool* HasKey);
	bool HasRowKey(int32 Key);
	bool HasColKey(const class FString& Key);
	class FString GetTableName();
	int32 GetRowKeys(TArray<int32>* OutKeys);
	struct FSolarTablesData_GlobalSensitivity GetRowData(int32 Key);
	int32 GetRowCount();
	int32 GetDataNum();
	TArray<class FString> GetColKeys();
	int32 GetColCount();
};

// 0x0 (0x30 - 0x30)
// Class Solarland.SolarTables_Reader_GunProperty
class USolarTables_Reader_GunProperty : public USolarTableReaderBase
{
public:

	static class UClass* StaticClass();
	static class USolarTables_Reader_GunProperty* GetDefaultObj();

	struct FSolarTablesData_GunProperty TryGetRowData(int32 Key, bool* HasKey);
	bool HasRowKey(int32 Key);
	bool HasColKey(const class FString& Key);
	class FString GetTableName();
	int32 GetRowKeys(TArray<int32>* OutKeys);
	struct FSolarTablesData_GunProperty GetRowData(int32 Key);
	int32 GetRowCount();
	int32 GetDataNum();
	TArray<class FString> GetColKeys();
	int32 GetColCount();
};

// 0x0 (0x30 - 0x30)
// Class Solarland.SolarTables_Reader_HeroPowerFormula
class USolarTables_Reader_HeroPowerFormula : public USolarTableReaderBase
{
public:

	static class UClass* StaticClass();
	static class USolarTables_Reader_HeroPowerFormula* GetDefaultObj();

	struct FSolarTablesData_HeroPowerFormula TryGetRowData(int32 Key, bool* HasKey);
	bool HasRowKey(int32 Key);
	bool HasColKey(const class FString& Key);
	class FString GetTableName();
	int32 GetRowKeys(TArray<int32>* OutKeys);
	struct FSolarTablesData_HeroPowerFormula GetRowData(int32 Key);
	int32 GetRowCount();
	int32 GetDataNum();
	TArray<class FString> GetColKeys();
	int32 GetColCount();
};

// 0x0 (0x30 - 0x30)
// Class Solarland.SolarTables_Reader_HotSpot
class USolarTables_Reader_HotSpot : public USolarTableReaderBase
{
public:

	static class UClass* StaticClass();
	static class USolarTables_Reader_HotSpot* GetDefaultObj();

	struct FSolarTablesData_HotSpot TryGetRowData(int32 Key, bool* HasKey);
	bool HasRowKey(int32 Key);
	bool HasColKey(const class FString& Key);
	class FString GetTableName();
	int32 GetRowKeys(TArray<int32>* OutKeys);
	struct FSolarTablesData_HotSpot GetRowData(int32 Key);
	int32 GetRowCount();
	int32 GetDataNum();
	TArray<class FString> GetColKeys();
	int32 GetColCount();
};

// 0x0 (0x30 - 0x30)
// Class Solarland.SolarTables_Reader_InputAction
class USolarTables_Reader_InputAction : public USolarTableReaderBase
{
public:

	static class UClass* StaticClass();
	static class USolarTables_Reader_InputAction* GetDefaultObj();

	struct FSolarTablesData_InputAction TryGetRowData(const class FString& Key, bool* HasKey);
	bool HasRowKey(const class FString& Key);
	bool HasColKey(const class FString& Key);
	class FString GetTableName();
	int32 GetRowKeys(TArray<class FString>* OutKeys);
	struct FSolarTablesData_InputAction GetRowData(const class FString& Key);
	int32 GetRowCount();
	int32 GetDataNum();
	TArray<class FString> GetColKeys();
	int32 GetColCount();
};

// 0x0 (0x30 - 0x30)
// Class Solarland.SolarTables_Reader_InputMapping
class USolarTables_Reader_InputMapping : public USolarTableReaderBase
{
public:

	static class UClass* StaticClass();
	static class USolarTables_Reader_InputMapping* GetDefaultObj();

	struct FSolarTablesData_InputMapping TryGetRowData(const class FString& Key, bool* HasKey);
	bool HasRowKey(const class FString& Key);
	bool HasColKey(const class FString& Key);
	class FString GetTableName();
	int32 GetRowKeys(TArray<class FString>* OutKeys);
	struct FSolarTablesData_InputMapping GetRowData(const class FString& Key);
	int32 GetRowCount();
	int32 GetDataNum();
	TArray<class FString> GetColKeys();
	int32 GetColCount();
};

// 0x0 (0x30 - 0x30)
// Class Solarland.SolarTables_Reader_Item
class USolarTables_Reader_Item : public USolarTableReaderBase
{
public:

	static class UClass* StaticClass();
	static class USolarTables_Reader_Item* GetDefaultObj();

	struct FSolarTablesData_Item TryGetRowData(int32 Key, bool* HasKey);
	bool HasRowKey(int32 Key);
	bool HasColKey(const class FString& Key);
	class FString GetTableName();
	int32 GetRowKeys(TArray<int32>* OutKeys);
	struct FSolarTablesData_Item GetRowData(int32 Key);
	int32 GetRowCount();
	int32 GetDataNum();
	TArray<class FString> GetColKeys();
	int32 GetColCount();
};

// 0x0 (0x30 - 0x30)
// Class Solarland.SolarTables_Reader_ItemBehavior
class USolarTables_Reader_ItemBehavior : public USolarTableReaderBase
{
public:

	static class UClass* StaticClass();
	static class USolarTables_Reader_ItemBehavior* GetDefaultObj();

	struct FSolarTablesData_ItemBehavior TryGetRowData(int32 Key, bool* HasKey);
	bool HasRowKey(int32 Key);
	bool HasColKey(const class FString& Key);
	class FString GetTableName();
	int32 GetRowKeys(TArray<int32>* OutKeys);
	struct FSolarTablesData_ItemBehavior GetRowData(int32 Key);
	int32 GetRowCount();
	int32 GetDataNum();
	TArray<class FString> GetColKeys();
	int32 GetColCount();
};

// 0x0 (0x30 - 0x30)
// Class Solarland.SolarTables_Reader_ItemCustomType
class USolarTables_Reader_ItemCustomType : public USolarTableReaderBase
{
public:

	static class UClass* StaticClass();
	static class USolarTables_Reader_ItemCustomType* GetDefaultObj();

	struct FSolarTablesData_ItemCustomType TryGetRowData(int32 Key, bool* HasKey);
	bool HasRowKey(int32 Key);
	bool HasColKey(const class FString& Key);
	class FString GetTableName();
	int32 GetRowKeys(TArray<int32>* OutKeys);
	struct FSolarTablesData_ItemCustomType GetRowData(int32 Key);
	int32 GetRowCount();
	int32 GetDataNum();
	TArray<class FString> GetColKeys();
	int32 GetColCount();
};

// 0x0 (0x30 - 0x30)
// Class Solarland.SolarTables_Reader_ItemInBattle
class USolarTables_Reader_ItemInBattle : public USolarTableReaderBase
{
public:

	static class UClass* StaticClass();
	static class USolarTables_Reader_ItemInBattle* GetDefaultObj();

	struct FSolarTablesData_ItemInBattle TryGetRowData(int32 Key, bool* HasKey);
	bool HasRowKey(int32 Key);
	bool HasColKey(const class FString& Key);
	class FString GetTableName();
	int32 GetRowKeys(TArray<int32>* OutKeys);
	struct FSolarTablesData_ItemInBattle GetRowData(int32 Key);
	int32 GetRowCount();
	int32 GetDataNum();
	TArray<class FString> GetColKeys();
	int32 GetColCount();
};

// 0x0 (0x30 - 0x30)
// Class Solarland.SolarTables_Reader_ItemQuality
class USolarTables_Reader_ItemQuality : public USolarTableReaderBase
{
public:

	static class UClass* StaticClass();
	static class USolarTables_Reader_ItemQuality* GetDefaultObj();

	struct FSolarTablesData_ItemQuality TryGetRowData(int32 Key, bool* HasKey);
	bool HasRowKey(int32 Key);
	bool HasColKey(const class FString& Key);
	class FString GetTableName();
	int32 GetRowKeys(TArray<int32>* OutKeys);
	struct FSolarTablesData_ItemQuality GetRowData(int32 Key);
	int32 GetRowCount();
	int32 GetDataNum();
	TArray<class FString> GetColKeys();
	int32 GetColCount();
};

// 0x0 (0x30 - 0x30)
// Class Solarland.SolarTables_Reader_ItemSound
class USolarTables_Reader_ItemSound : public USolarTableReaderBase
{
public:

	static class UClass* StaticClass();
	static class USolarTables_Reader_ItemSound* GetDefaultObj();

	struct FSolarTablesData_ItemSound TryGetRowData(int32 Key, bool* HasKey);
	bool HasRowKey(int32 Key);
	bool HasColKey(const class FString& Key);
	class FString GetTableName();
	int32 GetRowKeys(TArray<int32>* OutKeys);
	struct FSolarTablesData_ItemSound GetRowData(int32 Key);
	int32 GetRowCount();
	int32 GetDataNum();
	TArray<class FString> GetColKeys();
	int32 GetColCount();
};

// 0x0 (0x30 - 0x30)
// Class Solarland.SolarTables_Reader_ItemWeaponParts
class USolarTables_Reader_ItemWeaponParts : public USolarTableReaderBase
{
public:

	static class UClass* StaticClass();
	static class USolarTables_Reader_ItemWeaponParts* GetDefaultObj();

	struct FSolarTablesData_ItemWeaponParts TryGetRowData(int32 Key, bool* HasKey);
	bool HasRowKey(int32 Key);
	bool HasColKey(const class FString& Key);
	class FString GetTableName();
	int32 GetRowKeys(TArray<int32>* OutKeys);
	struct FSolarTablesData_ItemWeaponParts GetRowData(int32 Key);
	int32 GetRowCount();
	int32 GetDataNum();
	TArray<class FString> GetColKeys();
	int32 GetColCount();
};

// 0x0 (0x30 - 0x30)
// Class Solarland.SolarTables_Reader_JetPackModuleProperty
class USolarTables_Reader_JetPackModuleProperty : public USolarTableReaderBase
{
public:

	static class UClass* StaticClass();
	static class USolarTables_Reader_JetPackModuleProperty* GetDefaultObj();

	struct FSolarTablesData_JetPackModuleProperty TryGetRowData(int32 Key, bool* HasKey);
	bool HasRowKey(int32 Key);
	bool HasColKey(const class FString& Key);
	class FString GetTableName();
	int32 GetRowKeys(TArray<int32>* OutKeys);
	struct FSolarTablesData_JetPackModuleProperty GetRowData(int32 Key);
	int32 GetRowCount();
	int32 GetDataNum();
	TArray<class FString> GetColKeys();
	int32 GetColCount();
};

// 0x0 (0x30 - 0x30)
// Class Solarland.SolarTables_Reader_LanguageSwitcher
class USolarTables_Reader_LanguageSwitcher : public USolarTableReaderBase
{
public:

	static class UClass* StaticClass();
	static class USolarTables_Reader_LanguageSwitcher* GetDefaultObj();

	struct FSolarTablesData_LanguageSwitcher TryGetRowData(const class FString& Key, bool* HasKey);
	bool HasRowKey(const class FString& Key);
	bool HasColKey(const class FString& Key);
	class FString GetTableName();
	int32 GetRowKeys(TArray<class FString>* OutKeys);
	struct FSolarTablesData_LanguageSwitcher GetRowData(const class FString& Key);
	int32 GetRowCount();
	int32 GetDataNum();
	TArray<class FString> GetColKeys();
	int32 GetColCount();
};

// 0x0 (0x30 - 0x30)
// Class Solarland.SolarTables_Reader_LobbyAutoDownload
class USolarTables_Reader_LobbyAutoDownload : public USolarTableReaderBase
{
public:

	static class UClass* StaticClass();
	static class USolarTables_Reader_LobbyAutoDownload* GetDefaultObj();

	struct FSolarTablesData_LobbyAutoDownload TryGetRowData(int32 Key, bool* HasKey);
	bool HasRowKey(int32 Key);
	bool HasColKey(const class FString& Key);
	class FString GetTableName();
	int32 GetRowKeys(TArray<int32>* OutKeys);
	struct FSolarTablesData_LobbyAutoDownload GetRowData(int32 Key);
	int32 GetRowCount();
	int32 GetDataNum();
	TArray<class FString> GetColKeys();
	int32 GetColCount();
};

// 0x0 (0x30 - 0x30)
// Class Solarland.SolarTables_Reader_Localization
class USolarTables_Reader_Localization : public USolarTableReaderBase
{
public:

	static class UClass* StaticClass();
	static class USolarTables_Reader_Localization* GetDefaultObj();

	struct FSolarTablesData_Localization TryGetRowData(int32 Key, bool* HasKey);
	bool HasRowKey(int32 Key);
	bool HasColKey(const class FString& Key);
	class FString GetTableName();
	int32 GetRowKeys(TArray<int32>* OutKeys);
	struct FSolarTablesData_Localization GetRowData(int32 Key);
	int32 GetRowCount();
	int32 GetDataNum();
	TArray<class FString> GetColKeys();
	int32 GetColCount();
};

// 0x0 (0x30 - 0x30)
// Class Solarland.SolarTables_Reader_Localization_BattleUI
class USolarTables_Reader_Localization_BattleUI : public USolarTableReaderBase
{
public:

	static class UClass* StaticClass();
	static class USolarTables_Reader_Localization_BattleUI* GetDefaultObj();

	struct FSolarTablesData_Localization_BattleUI TryGetRowData(int32 Key, bool* HasKey);
	bool HasRowKey(int32 Key);
	bool HasColKey(const class FString& Key);
	class FString GetTableName();
	int32 GetRowKeys(TArray<int32>* OutKeys);
	struct FSolarTablesData_Localization_BattleUI GetRowData(int32 Key);
	int32 GetRowCount();
	int32 GetDataNum();
	TArray<class FString> GetColKeys();
	int32 GetColCount();
};

// 0x0 (0x30 - 0x30)
// Class Solarland.SolarTables_Reader_Localization_EventSystem
class USolarTables_Reader_Localization_EventSystem : public USolarTableReaderBase
{
public:

	static class UClass* StaticClass();
	static class USolarTables_Reader_Localization_EventSystem* GetDefaultObj();

	struct FSolarTablesData_Localization_EventSystem TryGetRowData(int32 Key, bool* HasKey);
	bool HasRowKey(int32 Key);
	bool HasColKey(const class FString& Key);
	class FString GetTableName();
	int32 GetRowKeys(TArray<int32>* OutKeys);
	struct FSolarTablesData_Localization_EventSystem GetRowData(int32 Key);
	int32 GetRowCount();
	int32 GetDataNum();
	TArray<class FString> GetColKeys();
	int32 GetColCount();
};

// 0x0 (0x30 - 0x30)
// Class Solarland.SolarTables_Reader_Localization_General
class USolarTables_Reader_Localization_General : public USolarTableReaderBase
{
public:

	static class UClass* StaticClass();
	static class USolarTables_Reader_Localization_General* GetDefaultObj();

	struct FSolarTablesData_Localization_General TryGetRowData(int32 Key, bool* HasKey);
	bool HasRowKey(int32 Key);
	bool HasColKey(const class FString& Key);
	class FString GetTableName();
	int32 GetRowKeys(TArray<int32>* OutKeys);
	struct FSolarTablesData_Localization_General GetRowData(int32 Key);
	int32 GetRowCount();
	int32 GetDataNum();
	TArray<class FString> GetColKeys();
	int32 GetColCount();
};

// 0x0 (0x30 - 0x30)
// Class Solarland.SolarTables_Reader_Localization_Heroes
class USolarTables_Reader_Localization_Heroes : public USolarTableReaderBase
{
public:

	static class UClass* StaticClass();
	static class USolarTables_Reader_Localization_Heroes* GetDefaultObj();

	struct FSolarTablesData_Localization_Heroes TryGetRowData(int32 Key, bool* HasKey);
	bool HasRowKey(int32 Key);
	bool HasColKey(const class FString& Key);
	class FString GetTableName();
	int32 GetRowKeys(TArray<int32>* OutKeys);
	struct FSolarTablesData_Localization_Heroes GetRowData(int32 Key);
	int32 GetRowCount();
	int32 GetDataNum();
	TArray<class FString> GetColKeys();
	int32 GetColCount();
};

// 0x0 (0x30 - 0x30)
// Class Solarland.SolarTables_Reader_Localization_Item
class USolarTables_Reader_Localization_Item : public USolarTableReaderBase
{
public:

	static class UClass* StaticClass();
	static class USolarTables_Reader_Localization_Item* GetDefaultObj();

	struct FSolarTablesData_Localization_Item TryGetRowData(int32 Key, bool* HasKey);
	bool HasRowKey(int32 Key);
	bool HasColKey(const class FString& Key);
	class FString GetTableName();
	int32 GetRowKeys(TArray<int32>* OutKeys);
	struct FSolarTablesData_Localization_Item GetRowData(int32 Key);
	int32 GetRowCount();
	int32 GetDataNum();
	TArray<class FString> GetColKeys();
	int32 GetColCount();
};

// 0x0 (0x30 - 0x30)
// Class Solarland.SolarTables_Reader_Localization_Tournament
class USolarTables_Reader_Localization_Tournament : public USolarTableReaderBase
{
public:

	static class UClass* StaticClass();
	static class USolarTables_Reader_Localization_Tournament* GetDefaultObj();

	struct FSolarTablesData_Localization_Tournament TryGetRowData(int32 Key, bool* HasKey);
	bool HasRowKey(int32 Key);
	bool HasColKey(const class FString& Key);
	class FString GetTableName();
	int32 GetRowKeys(TArray<int32>* OutKeys);
	struct FSolarTablesData_Localization_Tournament GetRowData(int32 Key);
	int32 GetRowCount();
	int32 GetDataNum();
	TArray<class FString> GetColKeys();
	int32 GetColCount();
};

// 0x0 (0x30 - 0x30)
// Class Solarland.SolarTables_Reader_Localization_Uncategorized
class USolarTables_Reader_Localization_Uncategorized : public USolarTableReaderBase
{
public:

	static class UClass* StaticClass();
	static class USolarTables_Reader_Localization_Uncategorized* GetDefaultObj();

	struct FSolarTablesData_Localization_Uncategorized TryGetRowData(int32 Key, bool* HasKey);
	bool HasRowKey(int32 Key);
	bool HasColKey(const class FString& Key);
	class FString GetTableName();
	int32 GetRowKeys(TArray<int32>* OutKeys);
	struct FSolarTablesData_Localization_Uncategorized GetRowData(int32 Key);
	int32 GetRowCount();
	int32 GetDataNum();
	TArray<class FString> GetColKeys();
	int32 GetColCount();
};

// 0x0 (0x30 - 0x30)
// Class Solarland.SolarTables_Reader_LookAtCameras
class USolarTables_Reader_LookAtCameras : public USolarTableReaderBase
{
public:

	static class UClass* StaticClass();
	static class USolarTables_Reader_LookAtCameras* GetDefaultObj();

	struct FSolarTablesData_LookAtCameras TryGetRowData(int32 Key, bool* HasKey);
	bool HasRowKey(int32 Key);
	bool HasColKey(const class FString& Key);
	class FString GetTableName();
	int32 GetRowKeys(TArray<int32>* OutKeys);
	struct FSolarTablesData_LookAtCameras GetRowData(int32 Key);
	int32 GetRowCount();
	int32 GetDataNum();
	TArray<class FString> GetColKeys();
	int32 GetColCount();
};

// 0x0 (0x30 - 0x30)
// Class Solarland.SolarTables_Reader_MapMarkIcon
class USolarTables_Reader_MapMarkIcon : public USolarTableReaderBase
{
public:

	static class UClass* StaticClass();
	static class USolarTables_Reader_MapMarkIcon* GetDefaultObj();

	struct FSolarTablesData_MapMarkIcon TryGetRowData(int32 Key, bool* HasKey);
	bool HasRowKey(int32 Key);
	bool HasColKey(const class FString& Key);
	class FString GetTableName();
	int32 GetRowKeys(TArray<int32>* OutKeys);
	struct FSolarTablesData_MapMarkIcon GetRowData(int32 Key);
	int32 GetRowCount();
	int32 GetDataNum();
	TArray<class FString> GetColKeys();
	int32 GetColCount();
};

// 0x0 (0x30 - 0x30)
// Class Solarland.SolarTables_Reader_MatchRule
class USolarTables_Reader_MatchRule : public USolarTableReaderBase
{
public:

	static class UClass* StaticClass();
	static class USolarTables_Reader_MatchRule* GetDefaultObj();

	struct FSolarTablesData_MatchRule TryGetRowData(int32 Key, bool* HasKey);
	bool HasRowKey(int32 Key);
	bool HasColKey(const class FString& Key);
	class FString GetTableName();
	int32 GetRowKeys(TArray<int32>* OutKeys);
	struct FSolarTablesData_MatchRule GetRowData(int32 Key);
	int32 GetRowCount();
	int32 GetDataNum();
	TArray<class FString> GetColKeys();
	int32 GetColCount();
};

// 0x0 (0x30 - 0x30)
// Class Solarland.SolarTables_Reader_MaterialProperty
class USolarTables_Reader_MaterialProperty : public USolarTableReaderBase
{
public:

	static class UClass* StaticClass();
	static class USolarTables_Reader_MaterialProperty* GetDefaultObj();

	struct FSolarTablesData_MaterialProperty TryGetRowData(int32 Key, bool* HasKey);
	bool HasRowKey(int32 Key);
	bool HasColKey(const class FString& Key);
	class FString GetTableName();
	int32 GetRowKeys(TArray<int32>* OutKeys);
	struct FSolarTablesData_MaterialProperty GetRowData(int32 Key);
	int32 GetRowCount();
	int32 GetDataNum();
	TArray<class FString> GetColKeys();
	int32 GetColCount();
};

// 0x0 (0x30 - 0x30)
// Class Solarland.SolarTables_Reader_NameCardBackground
class USolarTables_Reader_NameCardBackground : public USolarTableReaderBase
{
public:

	static class UClass* StaticClass();
	static class USolarTables_Reader_NameCardBackground* GetDefaultObj();

	struct FSolarTablesData_NameCardBackground TryGetRowData(int32 Key, bool* HasKey);
	bool HasRowKey(int32 Key);
	bool HasColKey(const class FString& Key);
	class FString GetTableName();
	int32 GetRowKeys(TArray<int32>* OutKeys);
	struct FSolarTablesData_NameCardBackground GetRowData(int32 Key);
	int32 GetRowCount();
	int32 GetDataNum();
	TArray<class FString> GetColKeys();
	int32 GetColCount();
};

// 0x0 (0x30 - 0x30)
// Class Solarland.SolarTables_Reader_NameCardPose
class USolarTables_Reader_NameCardPose : public USolarTableReaderBase
{
public:

	static class UClass* StaticClass();
	static class USolarTables_Reader_NameCardPose* GetDefaultObj();

	struct FSolarTablesData_NameCardPose TryGetRowData(int32 Key, bool* HasKey);
	bool HasRowKey(int32 Key);
	bool HasColKey(const class FString& Key);
	class FString GetTableName();
	int32 GetRowKeys(TArray<int32>* OutKeys);
	struct FSolarTablesData_NameCardPose GetRowData(int32 Key);
	int32 GetRowCount();
	int32 GetDataNum();
	TArray<class FString> GetColKeys();
	int32 GetColCount();
};

// 0x0 (0x30 - 0x30)
// Class Solarland.SolarTables_Reader_ObGift
class USolarTables_Reader_ObGift : public USolarTableReaderBase
{
public:

	static class UClass* StaticClass();
	static class USolarTables_Reader_ObGift* GetDefaultObj();

	struct FSolarTablesData_ObGift TryGetRowData(int32 Key, bool* HasKey);
	bool HasRowKey(int32 Key);
	bool HasColKey(const class FString& Key);
	class FString GetTableName();
	int32 GetRowKeys(TArray<int32>* OutKeys);
	struct FSolarTablesData_ObGift GetRowData(int32 Key);
	int32 GetRowCount();
	int32 GetDataNum();
	TArray<class FString> GetColKeys();
	int32 GetColCount();
};

// 0x0 (0x30 - 0x30)
// Class Solarland.SolarTables_Reader_OBSubtitle_Action2Feature
class USolarTables_Reader_OBSubtitle_Action2Feature : public USolarTableReaderBase
{
public:

	static class UClass* StaticClass();
	static class USolarTables_Reader_OBSubtitle_Action2Feature* GetDefaultObj();

	struct FSolarTablesData_OBSubtitle_Action2Feature TryGetRowData(int32 Key, bool* HasKey);
	bool HasRowKey(int32 Key);
	bool HasColKey(const class FString& Key);
	class FString GetTableName();
	int32 GetRowKeys(TArray<int32>* OutKeys);
	struct FSolarTablesData_OBSubtitle_Action2Feature GetRowData(int32 Key);
	int32 GetRowCount();
	int32 GetDataNum();
	TArray<class FString> GetColKeys();
	int32 GetColCount();
};

// 0x0 (0x30 - 0x30)
// Class Solarland.SolarTables_Reader_OBSubtitle_Emotion2Pattern
class USolarTables_Reader_OBSubtitle_Emotion2Pattern : public USolarTableReaderBase
{
public:

	static class UClass* StaticClass();
	static class USolarTables_Reader_OBSubtitle_Emotion2Pattern* GetDefaultObj();

	struct FSolarTablesData_OBSubtitle_Emotion2Pattern TryGetRowData(int32 Key, bool* HasKey);
	bool HasRowKey(int32 Key);
	bool HasColKey(const class FString& Key);
	class FString GetTableName();
	int32 GetRowKeys(TArray<int32>* OutKeys);
	struct FSolarTablesData_OBSubtitle_Emotion2Pattern GetRowData(int32 Key);
	int32 GetRowCount();
	int32 GetDataNum();
	TArray<class FString> GetColKeys();
	int32 GetColCount();
};

// 0x0 (0x30 - 0x30)
// Class Solarland.SolarTables_Reader_OBSubtitle_Feature2Emotion
class USolarTables_Reader_OBSubtitle_Feature2Emotion : public USolarTableReaderBase
{
public:

	static class UClass* StaticClass();
	static class USolarTables_Reader_OBSubtitle_Feature2Emotion* GetDefaultObj();

	struct FSolarTablesData_OBSubtitle_Feature2Emotion TryGetRowData(int32 Key, bool* HasKey);
	bool HasRowKey(int32 Key);
	bool HasColKey(const class FString& Key);
	class FString GetTableName();
	int32 GetRowKeys(TArray<int32>* OutKeys);
	struct FSolarTablesData_OBSubtitle_Feature2Emotion GetRowData(int32 Key);
	int32 GetRowCount();
	int32 GetDataNum();
	TArray<class FString> GetColKeys();
	int32 GetColCount();
};

// 0x0 (0x30 - 0x30)
// Class Solarland.SolarTables_Reader_Outcome
class USolarTables_Reader_Outcome : public USolarTableReaderBase
{
public:

	static class UClass* StaticClass();
	static class USolarTables_Reader_Outcome* GetDefaultObj();

	struct FSolarTablesData_Outcome TryGetRowData(int32 Key, bool* HasKey);
	bool HasRowKey(int32 Key);
	bool HasColKey(const class FString& Key);
	class FString GetTableName();
	int32 GetRowKeys(TArray<int32>* OutKeys);
	struct FSolarTablesData_Outcome GetRowData(int32 Key);
	int32 GetRowCount();
	int32 GetDataNum();
	TArray<class FString> GetColKeys();
	int32 GetColCount();
};

// 0x0 (0x30 - 0x30)
// Class Solarland.SolarTables_Reader_OutcomeContent
class USolarTables_Reader_OutcomeContent : public USolarTableReaderBase
{
public:

	static class UClass* StaticClass();
	static class USolarTables_Reader_OutcomeContent* GetDefaultObj();

	struct FSolarTablesData_OutcomeContent TryGetRowData(int32 Key, bool* HasKey);
	bool HasRowKey(int32 Key);
	bool HasColKey(const class FString& Key);
	class FString GetTableName();
	int32 GetRowKeys(TArray<int32>* OutKeys);
	struct FSolarTablesData_OutcomeContent GetRowData(int32 Key);
	int32 GetRowCount();
	int32 GetDataNum();
	TArray<class FString> GetColKeys();
	int32 GetColCount();
};

// 0x0 (0x30 - 0x30)
// Class Solarland.SolarTables_Reader_OutcomeSet
class USolarTables_Reader_OutcomeSet : public USolarTableReaderBase
{
public:

	static class UClass* StaticClass();
	static class USolarTables_Reader_OutcomeSet* GetDefaultObj();

	struct FSolarTablesData_OutcomeSet TryGetRowData(int32 Key, bool* HasKey);
	bool HasRowKey(int32 Key);
	bool HasColKey(const class FString& Key);
	class FString GetTableName();
	int32 GetRowKeys(TArray<int32>* OutKeys);
	struct FSolarTablesData_OutcomeSet GetRowData(int32 Key);
	int32 GetRowCount();
	int32 GetDataNum();
	TArray<class FString> GetColKeys();
	int32 GetColCount();
};

// 0x0 (0x30 - 0x30)
// Class Solarland.SolarTables_Reader_PickupPriorityItem
class USolarTables_Reader_PickupPriorityItem : public USolarTableReaderBase
{
public:

	static class UClass* StaticClass();
	static class USolarTables_Reader_PickupPriorityItem* GetDefaultObj();

	struct FSolarTablesData_PickupPriorityItem TryGetRowData(int32 Key, bool* HasKey);
	bool HasRowKey(int32 Key);
	bool HasColKey(const class FString& Key);
	class FString GetTableName();
	int32 GetRowKeys(TArray<int32>* OutKeys);
	struct FSolarTablesData_PickupPriorityItem GetRowData(int32 Key);
	int32 GetRowCount();
	int32 GetDataNum();
	TArray<class FString> GetColKeys();
	int32 GetColCount();
};

// 0x0 (0x30 - 0x30)
// Class Solarland.SolarTables_Reader_PickupPriorityWeaponPart
class USolarTables_Reader_PickupPriorityWeaponPart : public USolarTableReaderBase
{
public:

	static class UClass* StaticClass();
	static class USolarTables_Reader_PickupPriorityWeaponPart* GetDefaultObj();

	struct FSolarTablesData_PickupPriorityWeaponPart TryGetRowData(int32 Key, bool* HasKey);
	bool HasRowKey(int32 Key);
	bool HasColKey(const class FString& Key);
	class FString GetTableName();
	int32 GetRowKeys(TArray<int32>* OutKeys);
	struct FSolarTablesData_PickupPriorityWeaponPart GetRowData(int32 Key);
	int32 GetRowCount();
	int32 GetDataNum();
	TArray<class FString> GetColKeys();
	int32 GetColCount();
};

// 0x0 (0x30 - 0x30)
// Class Solarland.SolarTables_Reader_PlayerOperationListLayout
class USolarTables_Reader_PlayerOperationListLayout : public USolarTableReaderBase
{
public:

	static class UClass* StaticClass();
	static class USolarTables_Reader_PlayerOperationListLayout* GetDefaultObj();

	struct FSolarTablesData_PlayerOperationListLayout TryGetRowData(int32 Key, bool* HasKey);
	bool HasRowKey(int32 Key);
	bool HasColKey(const class FString& Key);
	class FString GetTableName();
	int32 GetRowKeys(TArray<int32>* OutKeys);
	struct FSolarTablesData_PlayerOperationListLayout GetRowData(int32 Key);
	int32 GetRowCount();
	int32 GetDataNum();
	TArray<class FString> GetColKeys();
	int32 GetColCount();
};

// 0x0 (0x30 - 0x30)
// Class Solarland.SolarTables_Reader_QuickChat
class USolarTables_Reader_QuickChat : public USolarTableReaderBase
{
public:

	static class UClass* StaticClass();
	static class USolarTables_Reader_QuickChat* GetDefaultObj();

	struct FSolarTablesData_QuickChat TryGetRowData(int32 Key, bool* HasKey);
	bool HasRowKey(int32 Key);
	bool HasColKey(const class FString& Key);
	class FString GetTableName();
	int32 GetRowKeys(TArray<int32>* OutKeys);
	struct FSolarTablesData_QuickChat GetRowData(int32 Key);
	int32 GetRowCount();
	int32 GetDataNum();
	TArray<class FString> GetColKeys();
	int32 GetColCount();
};

// 0x0 (0x30 - 0x30)
// Class Solarland.SolarTables_Reader_QuickVoice
class USolarTables_Reader_QuickVoice : public USolarTableReaderBase
{
public:

	static class UClass* StaticClass();
	static class USolarTables_Reader_QuickVoice* GetDefaultObj();

	struct FSolarTablesData_QuickVoice TryGetRowData(int32 Key, bool* HasKey);
	bool HasRowKey(int32 Key);
	bool HasColKey(const class FString& Key);
	class FString GetTableName();
	int32 GetRowKeys(TArray<int32>* OutKeys);
	struct FSolarTablesData_QuickVoice GetRowData(int32 Key);
	int32 GetRowCount();
	int32 GetDataNum();
	TArray<class FString> GetColKeys();
	int32 GetColCount();
};

// 0x0 (0x30 - 0x30)
// Class Solarland.SolarTables_Reader_RankLevel
class USolarTables_Reader_RankLevel : public USolarTableReaderBase
{
public:

	static class UClass* StaticClass();
	static class USolarTables_Reader_RankLevel* GetDefaultObj();

	struct FSolarTablesData_RankLevel TryGetRowData(int32 Key, bool* HasKey);
	bool HasRowKey(int32 Key);
	bool HasColKey(const class FString& Key);
	class FString GetTableName();
	int32 GetRowKeys(TArray<int32>* OutKeys);
	struct FSolarTablesData_RankLevel GetRowData(int32 Key);
	int32 GetRowCount();
	int32 GetDataNum();
	TArray<class FString> GetColKeys();
	int32 GetColCount();
};

// 0x0 (0x30 - 0x30)
// Class Solarland.SolarTables_Reader_RankMatch
class USolarTables_Reader_RankMatch : public USolarTableReaderBase
{
public:

	static class UClass* StaticClass();
	static class USolarTables_Reader_RankMatch* GetDefaultObj();

	struct FSolarTablesData_RankMatch TryGetRowData(int32 Key, bool* HasKey);
	bool HasRowKey(int32 Key);
	bool HasColKey(const class FString& Key);
	class FString GetTableName();
	int32 GetRowKeys(TArray<int32>* OutKeys);
	struct FSolarTablesData_RankMatch GetRowData(int32 Key);
	int32 GetRowCount();
	int32 GetDataNum();
	TArray<class FString> GetColKeys();
	int32 GetColCount();
};

// 0x0 (0x30 - 0x30)
// Class Solarland.SolarTables_Reader_Rescue
class USolarTables_Reader_Rescue : public USolarTableReaderBase
{
public:

	static class UClass* StaticClass();
	static class USolarTables_Reader_Rescue* GetDefaultObj();

	struct FSolarTablesData_Rescue TryGetRowData(int32 Key, bool* HasKey);
	bool HasRowKey(int32 Key);
	bool HasColKey(const class FString& Key);
	class FString GetTableName();
	int32 GetRowKeys(TArray<int32>* OutKeys);
	struct FSolarTablesData_Rescue GetRowData(int32 Key);
	int32 GetRowCount();
	int32 GetDataNum();
	TArray<class FString> GetColKeys();
	int32 GetColCount();
};

// 0x0 (0x30 - 0x30)
// Class Solarland.SolarTables_Reader_SecondMode
class USolarTables_Reader_SecondMode : public USolarTableReaderBase
{
public:

	static class UClass* StaticClass();
	static class USolarTables_Reader_SecondMode* GetDefaultObj();

	struct FSolarTablesData_SecondMode TryGetRowData(int32 Key, bool* HasKey);
	bool HasRowKey(int32 Key);
	bool HasColKey(const class FString& Key);
	class FString GetTableName();
	int32 GetRowKeys(TArray<int32>* OutKeys);
	struct FSolarTablesData_SecondMode GetRowData(int32 Key);
	int32 GetRowCount();
	int32 GetDataNum();
	TArray<class FString> GetColKeys();
	int32 GetColCount();
};

// 0x0 (0x30 - 0x30)
// Class Solarland.SolarTables_Reader_ShieldProperty
class USolarTables_Reader_ShieldProperty : public USolarTableReaderBase
{
public:

	static class UClass* StaticClass();
	static class USolarTables_Reader_ShieldProperty* GetDefaultObj();

	struct FSolarTablesData_ShieldProperty TryGetRowData(int32 Key, bool* HasKey);
	bool HasRowKey(int32 Key);
	bool HasColKey(const class FString& Key);
	class FString GetTableName();
	int32 GetRowKeys(TArray<int32>* OutKeys);
	struct FSolarTablesData_ShieldProperty GetRowData(int32 Key);
	int32 GetRowCount();
	int32 GetDataNum();
	TArray<class FString> GetColKeys();
	int32 GetColCount();
};

// 0x0 (0x30 - 0x30)
// Class Solarland.SolarTables_Reader_Skin
class USolarTables_Reader_Skin : public USolarTableReaderBase
{
public:

	static class UClass* StaticClass();
	static class USolarTables_Reader_Skin* GetDefaultObj();

	struct FSolarTablesData_Skin TryGetRowData(int32 Key, bool* HasKey);
	bool HasRowKey(int32 Key);
	bool HasColKey(const class FString& Key);
	class FString GetTableName();
	int32 GetRowKeys(TArray<int32>* OutKeys);
	struct FSolarTablesData_Skin GetRowData(int32 Key);
	int32 GetRowCount();
	int32 GetDataNum();
	TArray<class FString> GetColKeys();
	int32 GetColCount();
};

// 0x3B8 (0x3E0 - 0x28)
// Class Solarland.SolarTables_TablesReader
class USolarTables_TablesReader : public UObject
{
public:
	class USolarTables_Reader_AccountFixedExp*   AccountFixedExp;                                   // 0x28(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTables_Reader_AccountFlag*       AccountFlag;                                       // 0x30(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTables_Reader_Airline*           Airline;                                           // 0x38(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTables_Reader_Armory*            Armory;                                            // 0x40(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTables_Reader_BattleUpgradeContent* BattleUpgradeContent;                              // 0x48(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTables_Reader_BattleUpgradeEffect* BattleUpgradeEffect;                               // 0x50(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTables_Reader_BattleUpgradeEffectPool* BattleUpgradeEffectPool;                           // 0x58(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTables_Reader_BattleEndRankSettlement* BattleEndRankSettlement;                           // 0x60(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTables_Reader_BpAward*           BpAward;                                           // 0x68(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTables_Reader_Behavior*          Behavior;                                          // 0x70(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTables_Reader_EscapeExp*         EscapeExp;                                         // 0x78(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTables_Reader_CaseToggleAlphabet* CaseToggleAlphabet;                                // 0x80(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTables_Reader_UnitCharacter*     UnitCharacter;                                     // 0x88(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTables_Reader_CharacterAbility*  CharacterAbility;                                  // 0x90(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTables_Reader_CharacterPassiveAbility* CharacterPassiveAbility;                           // 0x98(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTables_Reader_GetPoint*          GetPoint;                                          // 0xA0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTables_Reader_ChestSpawn*        ChestSpawn;                                        // 0xA8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTables_Reader_ChestSpawnGroup*   ChestSpawnGroup;                                   // 0xB0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTables_Reader_ClanFlag*          ClanFlag;                                          // 0xB8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTables_Reader_DayAndNight*       DayAndNight;                                       // 0xC0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTables_Reader_DsVariableRange*   DsVariableRange;                                   // 0xC8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTables_Reader_EShop*             EShop;                                             // 0xD0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTables_Reader_EShopDemoModel*    EShopDemoModel;                                    // 0xD8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTables_Reader_EShopGoodsPool*    EShopGoodsPool;                                    // 0xE0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTables_Reader_EShopGoodsPoolGroup* EShopGoodsPoolGroup;                               // 0xE8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTables_Reader_EShopSpawn*        EShopSpawn;                                        // 0xF0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTables_Reader_BattleRoyaleMode*  BattleRoyaleMode;                                  // 0xF8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTables_Reader_GameModeGroup*     GameModeGroup;                                     // 0x100(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTables_Reader_GameModeMain*      GameModeMain;                                      // 0x108(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTables_Reader_OutcomeSet*        OutcomeSet;                                        // 0x110(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTables_Reader_GameTimeLine*      GameTimeLine;                                      // 0x118(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTables_Reader_GlobalOutcome*     GlobalOutcome;                                     // 0x120(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTables_Reader_GlobalSensitivity* GlobalSensitivity;                                 // 0x128(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTables_Reader_HeroPowerFormula*  HeroPowerFormula;                                  // 0x130(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTables_Reader_InputAction*       InputAction;                                       // 0x138(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTables_Reader_InputMapping*      InputMapping;                                      // 0x140(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTables_Reader_Item*              Item;                                              // 0x148(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTables_Reader_BackpackProperty*  BackpackProperty;                                  // 0x150(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTables_Reader_BackpackTrailProperty* BackpackTrailProperty;                             // 0x158(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTables_Reader_CapsuleProperty*   CapsuleProperty;                                   // 0x160(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTables_Reader_Dance*             Dance;                                             // 0x168(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTables_Reader_Emote*             Emote;                                             // 0x170(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTables_Reader_MaterialProperty*  MaterialProperty;                                  // 0x178(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTables_Reader_VehicleSkinProperty* VehicleSkinProperty;                               // 0x180(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTables_Reader_WeaponSkinProperty* WeaponSkinProperty;                                // 0x188(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTables_Reader_ItemCustomType*    ItemCustomType;                                    // 0x190(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTables_Reader_ItemInBattle*      ItemInBattle;                                      // 0x198(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTables_Reader_ArmorProperty*     ArmorProperty;                                     // 0x1A0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTables_Reader_Chest*             Chest;                                             // 0x1A8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTables_Reader_EnergyProperty*    EnergyProperty;                                    // 0x1B0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTables_Reader_ExtraEnergyProperty* ExtraEnergyProperty;                               // 0x1B8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTables_Reader_GunProperty*       GunProperty;                                       // 0x1C0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTables_Reader_ItemBehavior*      ItemBehavior;                                      // 0x1C8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTables_Reader_ItemWeaponParts*   ItemWeaponParts;                                   // 0x1D0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTables_Reader_JetPackModuleProperty* JetPackModuleProperty;                             // 0x1D8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTables_Reader_ShieldProperty*    ShieldProperty;                                    // 0x1E0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTables_Reader_ItemQuality*       ItemQuality;                                       // 0x1E8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTables_Reader_ItemSound*         ItemSound;                                         // 0x1F0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTables_Reader_LobbyAutoDownload* LobbyAutoDownload;                                 // 0x1F8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTables_Reader_LanguageSwitcher*  LanguageSwitcher;                                  // 0x200(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTables_Reader_Localization*      Localization;                                      // 0x208(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTables_Reader_Localization_BattleUI* Localization_BattleUI;                             // 0x210(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTables_Reader_Localization_EventSystem* Localization_EventSystem;                          // 0x218(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTables_Reader_Localization_General* Localization_General;                              // 0x220(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTables_Reader_Localization_Heroes* Localization_Heroes;                               // 0x228(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTables_Reader_Localization_Item* Localization_Item;                                 // 0x230(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTables_Reader_Localization_Tournament* Localization_Tournament;                           // 0x238(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTables_Reader_Localization_Uncategorized* Localization_Uncategorized;                        // 0x240(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTables_Reader_GameMap*           GameMap;                                           // 0x248(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTables_Reader_MapMarkIcon*       MapMarkIcon;                                       // 0x250(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTables_Reader_MatchRule*         MatchRule;                                         // 0x258(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTables_Reader_RankMatch*         RankMatch;                                         // 0x260(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTables_Reader_NameCardBackground* NameCardBackground;                                // 0x268(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTables_Reader_NameCardPose*      NameCardPose;                                      // 0x270(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTables_Reader_ObGift*            ObGift;                                            // 0x278(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTables_Reader_OBSubtitle_Action2Feature* OBSubtitle_Action2Feature;                         // 0x280(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTables_Reader_OBSubtitle_Feature2Emotion* OBSubtitle_Feature2Emotion;                        // 0x288(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTables_Reader_OBSubtitle_Emotion2Pattern* OBSubtitle_Emotion2Pattern;                        // 0x290(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTables_Reader_Outcome*           Outcome;                                           // 0x298(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTables_Reader_OutcomeContent*    OutcomeContent;                                    // 0x2A0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTables_Reader_PickupPriorityItem* PickupPriorityItem;                                // 0x2A8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTables_Reader_PickupPriorityWeaponPart* PickupPriorityWeaponPart;                          // 0x2B0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTables_Reader_CharacterVoiceover* CharacterVoiceover;                                // 0x2B8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTables_Reader_QuickChat*         QuickChat;                                         // 0x2C0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTables_Reader_QuickVoice*        QuickVoice;                                        // 0x2C8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTables_Reader_VODownload*        VODownload;                                        // 0x2D0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTables_Reader_RankLevel*         RankLevel;                                         // 0x2D8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTables_Reader_AutoDirector*      AutoDirector;                                      // 0x2E0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTables_Reader_AutoDirectorActivityScore* AutoDirectorActivityScore;                         // 0x2E8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTables_Reader_CircularCameras*   CircularCameras;                                   // 0x2F0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTables_Reader_HotSpot*           HotSpot;                                           // 0x2F8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTables_Reader_LookAtCameras*     LookAtCameras;                                     // 0x300(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTables_Reader_Rescue*            Rescue;                                            // 0x308(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTables_Reader_Skin*              Skin;                                              // 0x310(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTables_Reader_Achievement*       Achievement;                                       // 0x318(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTables_Reader_TaskProgress*      TaskProgress;                                      // 0x320(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTables_Reader_TaskSystem*        TaskSystem;                                        // 0x328(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTables_Reader_PlayerOperationListLayout* PlayerOperationListLayout;                         // 0x330(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTables_Reader_Variables*         Variables;                                         // 0x338(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTables_Reader_Vehicle*           Vehicle;                                           // 0x340(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTables_Reader_VehicleSkin*       VehicleSkin;                                       // 0x348(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTables_Reader_VehicleType*       VehicleType;                                       // 0x350(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTables_Reader_VehicleSpawn*      VehicleSpawn;                                      // 0x358(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTables_Reader_VehicleSpawnGroup* VehicleSpawnGroup;                                 // 0x360(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTables_Reader_WarmGame*          WarmGame;                                          // 0x368(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTables_Reader_WarmGameMode*      WarmGameMode;                                      // 0x370(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTables_Reader_WeaponDamage*      WeaponDamage;                                      // 0x378(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTables_Reader_Weapon*            Weapon;                                            // 0x380(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTables_Reader_WeaponAmmo*        WeaponAmmo;                                        // 0x388(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTables_Reader_WeaponBattleUpgrade* WeaponBattleUpgrade;                               // 0x390(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTables_Reader_WeaponDefault*     WeaponDefault;                                     // 0x398(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTables_Reader_WeaponKillTip*     WeaponKillTip;                                     // 0x3A0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTables_Reader_WeaponParts*       WeaponParts;                                       // 0x3A8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTables_Reader_WeaponPartsOp*     WeaponPartsOp;                                     // 0x3B0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTables_Reader_WeaponQuality*     WeaponQuality;                                     // 0x3B8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTables_Reader_SecondMode*        SecondMode;                                        // 0x3C0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTables_Reader_WeaponSkin*        WeaponSkin;                                        // 0x3C8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTables_Reader_WeaponSound*       WeaponSound;                                       // 0x3D0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTables_Reader_WeaponStatu*       WeaponStatu;                                       // 0x3D8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class USolarTables_TablesReader* GetDefaultObj();

};

// 0x0 (0x30 - 0x30)
// Class Solarland.SolarTables_Reader_TaskProgress
class USolarTables_Reader_TaskProgress : public USolarTableReaderBase
{
public:

	static class UClass* StaticClass();
	static class USolarTables_Reader_TaskProgress* GetDefaultObj();

	struct FSolarTablesData_TaskProgress TryGetRowData(int32 Key, bool* HasKey);
	bool HasRowKey(int32 Key);
	bool HasColKey(const class FString& Key);
	class FString GetTableName();
	int32 GetRowKeys(TArray<int32>* OutKeys);
	struct FSolarTablesData_TaskProgress GetRowData(int32 Key);
	int32 GetRowCount();
	int32 GetDataNum();
	TArray<class FString> GetColKeys();
	int32 GetColCount();
};

// 0x0 (0x30 - 0x30)
// Class Solarland.SolarTables_Reader_TaskSystem
class USolarTables_Reader_TaskSystem : public USolarTableReaderBase
{
public:

	static class UClass* StaticClass();
	static class USolarTables_Reader_TaskSystem* GetDefaultObj();

	struct FSolarTablesData_TaskSystem TryGetRowData(int32 Key, bool* HasKey);
	bool HasRowKey(int32 Key);
	bool HasColKey(const class FString& Key);
	class FString GetTableName();
	int32 GetRowKeys(TArray<int32>* OutKeys);
	struct FSolarTablesData_TaskSystem GetRowData(int32 Key);
	int32 GetRowCount();
	int32 GetDataNum();
	TArray<class FString> GetColKeys();
	int32 GetColCount();
};

// 0x0 (0x30 - 0x30)
// Class Solarland.SolarTables_Reader_UnitCharacter
class USolarTables_Reader_UnitCharacter : public USolarTableReaderBase
{
public:

	static class UClass* StaticClass();
	static class USolarTables_Reader_UnitCharacter* GetDefaultObj();

	struct FSolarTablesData_UnitCharacter TryGetRowData(int32 Key, bool* HasKey);
	bool HasRowKey(int32 Key);
	bool HasColKey(const class FString& Key);
	class FString GetTableName();
	int32 GetRowKeys(TArray<int32>* OutKeys);
	struct FSolarTablesData_UnitCharacter GetRowData(int32 Key);
	int32 GetRowCount();
	int32 GetDataNum();
	TArray<class FString> GetColKeys();
	int32 GetColCount();
};

// 0x0 (0x30 - 0x30)
// Class Solarland.SolarTables_Reader_Variables
class USolarTables_Reader_Variables : public USolarTableReaderBase
{
public:

	static class UClass* StaticClass();
	static class USolarTables_Reader_Variables* GetDefaultObj();

	struct FSolarTablesData_Variables TryGetRowData(const class FString& Key, bool* HasKey);
	bool HasRowKey(const class FString& Key);
	bool HasColKey(const class FString& Key);
	class FString GetTableName();
	int32 GetRowKeys(TArray<class FString>* OutKeys);
	struct FSolarTablesData_Variables GetRowData(const class FString& Key);
	int32 GetRowCount();
	int32 GetDataNum();
	TArray<class FString> GetColKeys();
	int32 GetColCount();
};

// 0x0 (0x30 - 0x30)
// Class Solarland.SolarTables_Reader_Vehicle
class USolarTables_Reader_Vehicle : public USolarTableReaderBase
{
public:

	static class UClass* StaticClass();
	static class USolarTables_Reader_Vehicle* GetDefaultObj();

	struct FSolarTablesData_Vehicle TryGetRowData(int32 Key, bool* HasKey);
	bool HasRowKey(int32 Key);
	bool HasColKey(const class FString& Key);
	class FString GetTableName();
	int32 GetRowKeys(TArray<int32>* OutKeys);
	struct FSolarTablesData_Vehicle GetRowData(int32 Key);
	int32 GetRowCount();
	int32 GetDataNum();
	TArray<class FString> GetColKeys();
	int32 GetColCount();
};

// 0x0 (0x30 - 0x30)
// Class Solarland.SolarTables_Reader_VehicleSkin
class USolarTables_Reader_VehicleSkin : public USolarTableReaderBase
{
public:

	static class UClass* StaticClass();
	static class USolarTables_Reader_VehicleSkin* GetDefaultObj();

	struct FSolarTablesData_VehicleSkin TryGetRowData(int32 Key, bool* HasKey);
	bool HasRowKey(int32 Key);
	bool HasColKey(const class FString& Key);
	class FString GetTableName();
	int32 GetRowKeys(TArray<int32>* OutKeys);
	struct FSolarTablesData_VehicleSkin GetRowData(int32 Key);
	int32 GetRowCount();
	int32 GetDataNum();
	TArray<class FString> GetColKeys();
	int32 GetColCount();
};

// 0x0 (0x30 - 0x30)
// Class Solarland.SolarTables_Reader_VehicleSkinProperty
class USolarTables_Reader_VehicleSkinProperty : public USolarTableReaderBase
{
public:

	static class UClass* StaticClass();
	static class USolarTables_Reader_VehicleSkinProperty* GetDefaultObj();

	struct FSolarTablesData_VehicleSkinProperty TryGetRowData(int32 Key, bool* HasKey);
	bool HasRowKey(int32 Key);
	bool HasColKey(const class FString& Key);
	class FString GetTableName();
	int32 GetRowKeys(TArray<int32>* OutKeys);
	struct FSolarTablesData_VehicleSkinProperty GetRowData(int32 Key);
	int32 GetRowCount();
	int32 GetDataNum();
	TArray<class FString> GetColKeys();
	int32 GetColCount();
};

// 0x0 (0x30 - 0x30)
// Class Solarland.SolarTables_Reader_VehicleSpawn
class USolarTables_Reader_VehicleSpawn : public USolarTableReaderBase
{
public:

	static class UClass* StaticClass();
	static class USolarTables_Reader_VehicleSpawn* GetDefaultObj();

	struct FSolarTablesData_VehicleSpawn TryGetRowData(int32 Key, bool* HasKey);
	bool HasRowKey(int32 Key);
	bool HasColKey(const class FString& Key);
	class FString GetTableName();
	int32 GetRowKeys(TArray<int32>* OutKeys);
	struct FSolarTablesData_VehicleSpawn GetRowData(int32 Key);
	int32 GetRowCount();
	int32 GetDataNum();
	TArray<class FString> GetColKeys();
	int32 GetColCount();
};

// 0x0 (0x30 - 0x30)
// Class Solarland.SolarTables_Reader_VehicleSpawnGroup
class USolarTables_Reader_VehicleSpawnGroup : public USolarTableReaderBase
{
public:

	static class UClass* StaticClass();
	static class USolarTables_Reader_VehicleSpawnGroup* GetDefaultObj();

	struct FSolarTablesData_VehicleSpawnGroup TryGetRowData(int32 Key, bool* HasKey);
	bool HasRowKey(int32 Key);
	bool HasColKey(const class FString& Key);
	class FString GetTableName();
	int32 GetRowKeys(TArray<int32>* OutKeys);
	struct FSolarTablesData_VehicleSpawnGroup GetRowData(int32 Key);
	int32 GetRowCount();
	int32 GetDataNum();
	TArray<class FString> GetColKeys();
	int32 GetColCount();
};

// 0x0 (0x30 - 0x30)
// Class Solarland.SolarTables_Reader_VehicleType
class USolarTables_Reader_VehicleType : public USolarTableReaderBase
{
public:

	static class UClass* StaticClass();
	static class USolarTables_Reader_VehicleType* GetDefaultObj();

	struct FSolarTablesData_VehicleType TryGetRowData(int32 Key, bool* HasKey);
	bool HasRowKey(int32 Key);
	bool HasColKey(const class FString& Key);
	class FString GetTableName();
	int32 GetRowKeys(TArray<int32>* OutKeys);
	struct FSolarTablesData_VehicleType GetRowData(int32 Key);
	int32 GetRowCount();
	int32 GetDataNum();
	TArray<class FString> GetColKeys();
	int32 GetColCount();
};

// 0x0 (0x30 - 0x30)
// Class Solarland.SolarTables_Reader_VODownload
class USolarTables_Reader_VODownload : public USolarTableReaderBase
{
public:

	static class UClass* StaticClass();
	static class USolarTables_Reader_VODownload* GetDefaultObj();

	struct FSolarTablesData_VODownload TryGetRowData(int32 Key, bool* HasKey);
	bool HasRowKey(int32 Key);
	bool HasColKey(const class FString& Key);
	class FString GetTableName();
	int32 GetRowKeys(TArray<int32>* OutKeys);
	struct FSolarTablesData_VODownload GetRowData(int32 Key);
	int32 GetRowCount();
	int32 GetDataNum();
	TArray<class FString> GetColKeys();
	int32 GetColCount();
};

// 0x0 (0x30 - 0x30)
// Class Solarland.SolarTables_Reader_WarmGame
class USolarTables_Reader_WarmGame : public USolarTableReaderBase
{
public:

	static class UClass* StaticClass();
	static class USolarTables_Reader_WarmGame* GetDefaultObj();

	struct FSolarTablesData_WarmGame TryGetRowData(int32 Key, bool* HasKey);
	bool HasRowKey(int32 Key);
	bool HasColKey(const class FString& Key);
	class FString GetTableName();
	int32 GetRowKeys(TArray<int32>* OutKeys);
	struct FSolarTablesData_WarmGame GetRowData(int32 Key);
	int32 GetRowCount();
	int32 GetDataNum();
	TArray<class FString> GetColKeys();
	int32 GetColCount();
};

// 0x0 (0x30 - 0x30)
// Class Solarland.SolarTables_Reader_WarmGameMode
class USolarTables_Reader_WarmGameMode : public USolarTableReaderBase
{
public:

	static class UClass* StaticClass();
	static class USolarTables_Reader_WarmGameMode* GetDefaultObj();

	struct FSolarTablesData_WarmGameMode TryGetRowData(int32 Key, bool* HasKey);
	bool HasRowKey(int32 Key);
	bool HasColKey(const class FString& Key);
	class FString GetTableName();
	int32 GetRowKeys(TArray<int32>* OutKeys);
	struct FSolarTablesData_WarmGameMode GetRowData(int32 Key);
	int32 GetRowCount();
	int32 GetDataNum();
	TArray<class FString> GetColKeys();
	int32 GetColCount();
};

// 0x0 (0x30 - 0x30)
// Class Solarland.SolarTables_Reader_Weapon
class USolarTables_Reader_Weapon : public USolarTableReaderBase
{
public:

	static class UClass* StaticClass();
	static class USolarTables_Reader_Weapon* GetDefaultObj();

	struct FSolarTablesData_Weapon TryGetRowData(int32 Key, bool* HasKey);
	bool HasRowKey(int32 Key);
	bool HasColKey(const class FString& Key);
	class FString GetTableName();
	int32 GetRowKeys(TArray<int32>* OutKeys);
	struct FSolarTablesData_Weapon GetRowData(int32 Key);
	int32 GetRowCount();
	int32 GetDataNum();
	TArray<class FString> GetColKeys();
	int32 GetColCount();
};

// 0x0 (0x30 - 0x30)
// Class Solarland.SolarTables_Reader_WeaponAmmo
class USolarTables_Reader_WeaponAmmo : public USolarTableReaderBase
{
public:

	static class UClass* StaticClass();
	static class USolarTables_Reader_WeaponAmmo* GetDefaultObj();

	struct FSolarTablesData_WeaponAmmo TryGetRowData(int32 Key, bool* HasKey);
	bool HasRowKey(int32 Key);
	bool HasColKey(const class FString& Key);
	class FString GetTableName();
	int32 GetRowKeys(TArray<int32>* OutKeys);
	struct FSolarTablesData_WeaponAmmo GetRowData(int32 Key);
	int32 GetRowCount();
	int32 GetDataNum();
	TArray<class FString> GetColKeys();
	int32 GetColCount();
};

// 0x0 (0x30 - 0x30)
// Class Solarland.SolarTables_Reader_WeaponBattleUpgrade
class USolarTables_Reader_WeaponBattleUpgrade : public USolarTableReaderBase
{
public:

	static class UClass* StaticClass();
	static class USolarTables_Reader_WeaponBattleUpgrade* GetDefaultObj();

	struct FSolarTablesData_WeaponBattleUpgrade TryGetRowData(int32 Key, bool* HasKey);
	bool HasRowKey(int32 Key);
	bool HasColKey(const class FString& Key);
	class FString GetTableName();
	int32 GetRowKeys(TArray<int32>* OutKeys);
	struct FSolarTablesData_WeaponBattleUpgrade GetRowData(int32 Key);
	int32 GetRowCount();
	int32 GetDataNum();
	TArray<class FString> GetColKeys();
	int32 GetColCount();
};

// 0x0 (0x30 - 0x30)
// Class Solarland.SolarTables_Reader_WeaponDamage
class USolarTables_Reader_WeaponDamage : public USolarTableReaderBase
{
public:

	static class UClass* StaticClass();
	static class USolarTables_Reader_WeaponDamage* GetDefaultObj();

	struct FSolarTablesData_WeaponDamage TryGetRowData(int32 Key, bool* HasKey);
	bool HasRowKey(int32 Key);
	bool HasColKey(const class FString& Key);
	class FString GetTableName();
	int32 GetRowKeys(TArray<int32>* OutKeys);
	struct FSolarTablesData_WeaponDamage GetRowData(int32 Key);
	int32 GetRowCount();
	int32 GetDataNum();
	TArray<class FString> GetColKeys();
	int32 GetColCount();
};

// 0x0 (0x30 - 0x30)
// Class Solarland.SolarTables_Reader_WeaponDefault
class USolarTables_Reader_WeaponDefault : public USolarTableReaderBase
{
public:

	static class UClass* StaticClass();
	static class USolarTables_Reader_WeaponDefault* GetDefaultObj();

	struct FSolarTablesData_WeaponDefault TryGetRowData(int32 Key, bool* HasKey);
	bool HasRowKey(int32 Key);
	bool HasColKey(const class FString& Key);
	class FString GetTableName();
	int32 GetRowKeys(TArray<int32>* OutKeys);
	struct FSolarTablesData_WeaponDefault GetRowData(int32 Key);
	int32 GetRowCount();
	int32 GetDataNum();
	TArray<class FString> GetColKeys();
	int32 GetColCount();
};

// 0x0 (0x30 - 0x30)
// Class Solarland.SolarTables_Reader_WeaponKillTip
class USolarTables_Reader_WeaponKillTip : public USolarTableReaderBase
{
public:

	static class UClass* StaticClass();
	static class USolarTables_Reader_WeaponKillTip* GetDefaultObj();

	struct FSolarTablesData_WeaponKillTip TryGetRowData(int32 Key, bool* HasKey);
	bool HasRowKey(int32 Key);
	bool HasColKey(const class FString& Key);
	class FString GetTableName();
	int32 GetRowKeys(TArray<int32>* OutKeys);
	struct FSolarTablesData_WeaponKillTip GetRowData(int32 Key);
	int32 GetRowCount();
	int32 GetDataNum();
	TArray<class FString> GetColKeys();
	int32 GetColCount();
};

// 0x0 (0x30 - 0x30)
// Class Solarland.SolarTables_Reader_WeaponParts
class USolarTables_Reader_WeaponParts : public USolarTableReaderBase
{
public:

	static class UClass* StaticClass();
	static class USolarTables_Reader_WeaponParts* GetDefaultObj();

	struct FSolarTablesData_WeaponParts TryGetRowData(int32 Key, bool* HasKey);
	bool HasRowKey(int32 Key);
	bool HasColKey(const class FString& Key);
	class FString GetTableName();
	int32 GetRowKeys(TArray<int32>* OutKeys);
	struct FSolarTablesData_WeaponParts GetRowData(int32 Key);
	int32 GetRowCount();
	int32 GetDataNum();
	TArray<class FString> GetColKeys();
	int32 GetColCount();
};

// 0x0 (0x30 - 0x30)
// Class Solarland.SolarTables_Reader_WeaponPartsOp
class USolarTables_Reader_WeaponPartsOp : public USolarTableReaderBase
{
public:

	static class UClass* StaticClass();
	static class USolarTables_Reader_WeaponPartsOp* GetDefaultObj();

	struct FSolarTablesData_WeaponPartsOp TryGetRowData(int32 Key, bool* HasKey);
	bool HasRowKey(int32 Key);
	bool HasColKey(const class FString& Key);
	class FString GetTableName();
	int32 GetRowKeys(TArray<int32>* OutKeys);
	struct FSolarTablesData_WeaponPartsOp GetRowData(int32 Key);
	int32 GetRowCount();
	int32 GetDataNum();
	TArray<class FString> GetColKeys();
	int32 GetColCount();
};

// 0x0 (0x30 - 0x30)
// Class Solarland.SolarTables_Reader_WeaponQuality
class USolarTables_Reader_WeaponQuality : public USolarTableReaderBase
{
public:

	static class UClass* StaticClass();
	static class USolarTables_Reader_WeaponQuality* GetDefaultObj();

	struct FSolarTablesData_WeaponQuality TryGetRowData(int32 Key, bool* HasKey);
	bool HasRowKey(int32 Key);
	bool HasColKey(const class FString& Key);
	class FString GetTableName();
	int32 GetRowKeys(TArray<int32>* OutKeys);
	struct FSolarTablesData_WeaponQuality GetRowData(int32 Key);
	int32 GetRowCount();
	int32 GetDataNum();
	TArray<class FString> GetColKeys();
	int32 GetColCount();
};

// 0x0 (0x30 - 0x30)
// Class Solarland.SolarTables_Reader_WeaponSkin
class USolarTables_Reader_WeaponSkin : public USolarTableReaderBase
{
public:

	static class UClass* StaticClass();
	static class USolarTables_Reader_WeaponSkin* GetDefaultObj();

	struct FSolarTablesData_WeaponSkin TryGetRowData(int32 Key, bool* HasKey);
	bool HasRowKey(int32 Key);
	bool HasColKey(const class FString& Key);
	class FString GetTableName();
	int32 GetRowKeys(TArray<int32>* OutKeys);
	struct FSolarTablesData_WeaponSkin GetRowData(int32 Key);
	int32 GetRowCount();
	int32 GetDataNum();
	TArray<class FString> GetColKeys();
	int32 GetColCount();
};

// 0x0 (0x30 - 0x30)
// Class Solarland.SolarTables_Reader_WeaponSkinProperty
class USolarTables_Reader_WeaponSkinProperty : public USolarTableReaderBase
{
public:

	static class UClass* StaticClass();
	static class USolarTables_Reader_WeaponSkinProperty* GetDefaultObj();

	struct FSolarTablesData_WeaponSkinProperty TryGetRowData(int32 Key, bool* HasKey);
	bool HasRowKey(int32 Key);
	bool HasColKey(const class FString& Key);
	class FString GetTableName();
	int32 GetRowKeys(TArray<int32>* OutKeys);
	struct FSolarTablesData_WeaponSkinProperty GetRowData(int32 Key);
	int32 GetRowCount();
	int32 GetDataNum();
	TArray<class FString> GetColKeys();
	int32 GetColCount();
};

// 0x0 (0x30 - 0x30)
// Class Solarland.SolarTables_Reader_WeaponSound
class USolarTables_Reader_WeaponSound : public USolarTableReaderBase
{
public:

	static class UClass* StaticClass();
	static class USolarTables_Reader_WeaponSound* GetDefaultObj();

	struct FSolarTablesData_WeaponSound TryGetRowData(int32 Key, bool* HasKey);
	bool HasRowKey(int32 Key);
	bool HasColKey(const class FString& Key);
	class FString GetTableName();
	int32 GetRowKeys(TArray<int32>* OutKeys);
	struct FSolarTablesData_WeaponSound GetRowData(int32 Key);
	int32 GetRowCount();
	int32 GetDataNum();
	TArray<class FString> GetColKeys();
	int32 GetColCount();
};

// 0x0 (0x30 - 0x30)
// Class Solarland.SolarTables_Reader_WeaponStatu
class USolarTables_Reader_WeaponStatu : public USolarTableReaderBase
{
public:

	static class UClass* StaticClass();
	static class USolarTables_Reader_WeaponStatu* GetDefaultObj();

	struct FSolarTablesData_WeaponStatu TryGetRowData(int32 Key, bool* HasKey);
	bool HasRowKey(int32 Key);
	bool HasColKey(const class FString& Key);
	class FString GetTableName();
	int32 GetRowKeys(TArray<int32>* OutKeys);
	struct FSolarTablesData_WeaponStatu GetRowData(int32 Key);
	int32 GetRowCount();
	int32 GetDataNum();
	TArray<class FString> GetColKeys();
	int32 GetColCount();
};

// 0x8 (0x230 - 0x228)
// Class Solarland.TaskFormula
class ATaskFormula : public AInfo
{
public:
	class USolarTaskComponent*                   TaskSystem;                                        // 0x228(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class ATaskFormula* GetDefaultObj();

	void SetTaskProgress(int64 InTaskID, int64 ProgressValue, bool bOverrideLastMatch);
	void IncreaseTaskProgress(int64 InTaskID, int64 ProgressValue);
	int32 GetTaskConditionValue(int64 InTaskID, int64 Index);
};

// 0xF8 (0x1A8 - 0xB0)
// Class Solarland.SolarTaskComponent
class USolarTaskComponent : public UActorComponent
{
public:
	uint8                                        Pad_2E6F[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            TaskUpdateDelegate;                                // 0xB8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            TaskCompoleteDelegate;                             // 0xC8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            MarkingTaskChangedDelegate;                        // 0xD8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            ClientTaskUpdatedDelegate;                         // 0xE8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            ClientBattlePassTimeInfoDelegate;                  // 0xF8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UDataTable*                            TaskTypeHandleConfig;                              // 0x108(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class ATaskFormula>              TaskFormula;                                       // 0x110(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ATaskFormula*                          FormulaInst;                                       // 0x118(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<int64>                                MarkingTask;                                       // 0x120(0x10)(Net, ZeroConstructor, RepNotify, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FBattlePassTimeInfo                   BattlePassTimeInfo;                                // 0x130(0x18)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FTaskBriefData>                Tasks;                                             // 0x148(0x10)(Net, ZeroConstructor, RepNotify, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2E70[0x50];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarTaskComponent* GetDefaultObj();

	void ServerEnableMarkTask(int64 InTaskID, bool bMarking);
	void OnRep_Tasks();
	void OnRep_MarkingTask();
	void OnRep_BattlePassTimeInfo();
	bool IsMaxLevel();
	bool IsEnable();
	struct FBattlePassTimeInfo GetBattlePassTimeInfo();
	TArray<struct FTaskBriefData> GetAllTaskBriefData();
	TArray<int64> GetAllMarkTask();
	void EnableMarkTask(int64 InTaskID, bool bMarking);
	void ClientNotifyTaskComplete(struct FTaskBriefData& InTaskInfo);
};

// 0x4E8 (0x510 - 0x28)
// Class Solarland.SolarTcpNetworkManager
class USolarTcpNetworkManager : public UObject
{
public:
	uint8                                        Pad_2E83[0x21];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bIsSsmMatchEnd;                                    // 0x49(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2E84[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ASolarTCPSocketClient*                 SocketClient;                                      // 0x50(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USCMMatchChannelAction*                MatchChannelAction;                                // 0x58(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsSsm;                                             // 0x60(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2E85[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                EncryptKeyClientTCPDynamic;                        // 0x68(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bEncrypt;                                          // 0x78(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bCompression;                                      // 0x79(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2E86[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FDelegateProperty_                           DisconnectedDelegate;                              // 0x7C(0x10)(ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPrivate)
	FDelegateProperty_                           ConnectedDelegate;                                 // 0x8C(0x10)(ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPrivate)
	FDelegateProperty_                           MessageReceivedDelegate;                           // 0x9C(0x10)(ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2E87[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSolarPlayerReport                    MyReport;                                          // 0xB0(0x428)(NativeAccessSpecifierPrivate)
	class ASolarPlayerState*                     MyPS;                                              // 0x4D8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2E88[0x30];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarTcpNetworkManager* GetDefaultObj();

	void UpdateTeamRank(uint8 TeamID, int32 Rank);
	void UpdateTeamMVPPlayer(uint8 TeamID, const class FString& InPlayerID);
	void UpdatePlayerData(const class FString& PlayerId, class ASolarPlayerState* PlayerState);
	void UpdatePlayerBattleInfo(class ASolarPlayerState* PS);
	bool UpdateBotAIData(int32 AIIndex, class ASolarPlayerState* PlayerState);
	void TryEndBattle();
	void SyncSsmDataToGameState();
	void SsmDSSendGiftRequest(int32 GiftID, int32 Num, const class FString& SendPlayerId, const class FString& RecivePlayerId, class ASolarPlayerState* SendPlayer);
	void SsmDSChangeRoleIDRequest(const class FString& InPlayerID, int32 InRoleID);
	void SetKnockoutPoints(const class FString& InClanId, int32 InKnockoutPoints);
	void SendSceenshot2Server(const class FString& UserId, const class FString& PlayerId, const class FString& BattleID, int64 ScreenshotTime, int32 ImageSize, int32 ImageWidth, int32 ImageHeight, const class FString& ImageType, const class FString& ImageBuffer);
	void SendInputDeviceChangedWrapper(enum class ECommonInputType NowInputType);
	void RequestOpenMatchChannel(int32 InMatchType, TArray<int32>& InPlayerStructure, int32 InMaxMatchTime);
	void ReportTournamentSpectate(TMap<class FString, class FString>* TournamentSpectateData);
	void ReportPlayerBattleInfo(class ASolarPlayerState* PS);
	void RecordLastUsedVehicle();
	void PlayerRequireToChangeGold(int32 InChangedGoldType, int32 InGoldNum, const class FString& InPlayerID, class ASolarPlayerState* InPlayer);
	void PlayerCancelJoinRequest(const class FString& PlayerId);
	void PlayerCancelJoin(const class FString& PlayerId);
	void OpenSupplement(int32 MaxSecond);
	void OnStartBattleResponse();
	void OnRecvData(TArray<uint8>& Data);
	void OnRecordBattleStartTime(float InStartTime);
	bool OnReceivedTeamPreJoinRequest(TArray<class FString>& PlayerIds, int32 TeamID);
	void OnReceivedPlayerJoinData(const class FString& PlayerId);
	void OnReceivedPlayerCancelJoin(const class FString& PlayerId);
	void OnPostLoadMapWithWorld(class UWorld* World);
	void OnPlayerLogin(const class FString& PlayerId);
	void OnMessageReceived(int32 ConnId, TArray<uint8>& Message);
	void OnDisconnected(int32 ConnId);
	void OnConnected(int32 ConnId);
	void NotifyTournamentSpectateState(bool bIsEnterReplay, class FString* BattleID);
	void NotifyRoomDataChanged(struct FCustomRoomData& CustomRoomData);
	void NotifyPlayerReward_CustomMode(struct FSCustomMode_PlayerReport& Report);
	void NotifyPlayerReward();
	void NotifyPlayerOffline(class ASolarPlayerController* PC);
	void NotifyPlayerEnterBattle(class ASolarPlayerController* PC);
	void NotifyOBPlayersChanged(TArray<class FString>* PlayerIds);
	void NotifyEquipCharacterSkinRequest(const class FString& PlayerId, int32 CharacterId, int32 SkinId);
	void NotifyClientBattleStateFish();
	void NotifyBattleGroupResultRequest(uint8 TeamID, int32 Rank);
	bool IsEnableAITeamManager();
	bool IsAllowReconnectGame();
	void HandlePlayerLogoutInPreparatoryPhase(class AController* PC);
	void HandlePlayerLogoutInBattlePhase(class AController* PC);
	void GetWeaponUpgradeSlotByWeaponID(TArray<struct FUpgradeSlotStruct>* OutData, const class FString& PlayerId, int32 Weaponid);
	int32 GetWeaponSkinIDByWeaponID(const class FString& PlayerId, int32 Weaponid);
	int32 GetWarmGameType();
	int32 GetTournamentID();
	void GetStartBattleRequestInfo(struct FStartBattleRequestInfo* OutResult);
	struct FSolarGameModeInfo GetSolarGameModeInfo();
	int32 GetRuleID();
	void GetReportWeaponExpIds(TArray<int32>* OutWeaponExpIds);
	int32 GetRankMatchID();
	TArray<int32> GetPlayerUsableTailFlameIds(const class FString& PlayerId);
	TArray<int32> GetPlayerUsableJetpackIds(const class FString& PlayerId);
	TArray<uint8> GetPlayerTeamIDs();
	TArray<class FString> GetPlayerRoleAndOpenIDs();
	int32 GetPlayerCount();
	class FString GetPlayerClanID(const class FString& PlayerId);
	void GetPlayerBattleRequestInfo(const class FString& InSolarPlayerID, struct FPlayerBattleRequestInfo* OutResult);
	int32 GetNumMode();
	TArray<int32> GetMLRelatedAIDataMLRatio();
	TArray<int32> GetMLRelatedAIDataMLFeature();
	bool GetMLRelatedAIDataMLClosed();
	int32 GetMaxPlayerNum();
	class FString GetLocalPlayerID();
	class FString GetLocalIPAddress();
	struct FKnockoutParams GetKnockoutPointParams();
	bool GetIsCloseMatch();
	bool GetHasMonster();
	bool GetHasMachineLearning();
	int32 GetGameModeGroupId();
	int32 GetEntryID();
	int32 GetCurrentMatchBotTeamPresetID();
	TArray<int32> GetClientMatchingMapIds();
	float GetBotShootSimulatorRatio();
	class FString GetBattleID();
	TMap<int32, int32> GetAILevelConfig();
	int32 GetAIAccompanyTimelineID();
	int32 GetAboutToEnterPlayerCount();
	void FakePlayerJoin(const class FString& PlayerId, int32 TeamID);
	void CloseSupplement();
	bool CheckPlayerLeave(const class FString& PlayerId);
	bool CheckJoinToken(const class FString& Token, const class FString& PlayerId);
	bool CheckIfPlayerHasJoined(const class FString& PlayerId);
	void CheckBattleOver();
};

// 0xD0 (0x2F8 - 0x228)
// Class Solarland.SolarTeamInfo
class ASolarTeamInfo : public AInfo
{
public:
	uint8                                        Pad_2E8B[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	uint8                                        TeamID;                                            // 0x240(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        TeamRank;                                          // 0x241(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        KillCount;                                         // 0x242(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        MemberLimit;                                       // 0x243(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2E8C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  TeamName;                                          // 0x248(0x18)(BlueprintVisible, BlueprintReadOnly, Net, NativeAccessSpecifierPublic)
	uint8                                        MatchCount;                                        // 0x260(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bHasSettled : 1;                                   // Mask: 0x1, PropSize: 0x10x261(0x1)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_1EC : 7;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	FMulticastSparseDelegateProperty_            OnJoinTeam;                                        // 0x262(0x1)(InstancedReference, BlueprintAssignable, NoDestructor, NativeAccessSpecifierPublic)
	FMulticastSparseDelegateProperty_            OnLeaveTeam;                                       // 0x263(0x1)(InstancedReference, BlueprintAssignable, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_2E8D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class ASolarPlayerState*>             BotMembers;                                        // 0x268(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class ASolarPlayerState*>             PlayerMembers;                                     // 0x278(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class ASolarPlayerState*>             TeamMembers;                                       // 0x288(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2E8E[0x50];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class USolarTeamInfoComponent*               TeamInfoDetails;                                   // 0x2E8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2E8F[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASolarTeamInfo* GetDefaultObj();

	void Settle(uint8 Rank);
	void RemoveFromTeam(class ASolarPlayerState* PS);
	void ReceivedTeamID();
	void ReceivedKillCount();
	void ReceivedHasSettled();
	void RearrangeMembersPos();
	void OnPlayerStateEndPlay(class AActor* Actor, enum class EEndPlayReason EndPlayReason);
	bool IsAPlayerTeam();
	bool IsAOnlyPlayerTeam();
	bool IsAOnlyBotTeam();
	bool IsA(enum class ETeamType TeamType);
	void InitFromGameModeConfig();
	bool HasBeenEliminated();
	class ASolarPlayerState* GetTeammatePlayerByPosInTeam(int32 InPosInTeam);
	int32 GetSize();
	void GetSCMPlayerStateTeamMembers(TArray<class ASCMPlayerState*>* OutTeamMembers);
	int32 GetAliveTeammateNum();
	void AddToTeam(class ASolarPlayerState* PS);
};

// 0x10 (0xC0 - 0xB0)
// Class Solarland.SolarTeamInfoComponent
class USolarTeamInfoComponent : public UActorComponent
{
public:
	int32                                        KillDownCount;                                     // 0xB0(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        AssistCount;                                       // 0xB4(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        DeathCount;                                        // 0xB8(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SaveCount;                                         // 0xBC(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class USolarTeamInfoComponent* GetDefaultObj();

};

// 0x28 (0x50 - 0x28)
// Class Solarland.SolarTeamInfoModel
class USolarTeamInfoModel : public UObject
{
public:
	uint8                                        Pad_2E90[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnTeamInfoReplicated;                              // 0x40(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class USolarTeamInfoModel* GetDefaultObj();

	void SimpleTeamInfoDelegate__DelegateSignature(class ASolarTeamInfo* PreTeamInfo, class ASolarTeamInfo* NowTeamInfo);
	void OnMyTeamInfoReplicated(class ASolarTeamInfo* InPreTeamInfo, class ASolarTeamInfo* InMyTeamInfo);
};

// 0x58 (0x6F0 - 0x698)
// Class Solarland.SolarTeammateHUDWidgetComponent
class USolarTeammateHUDWidgetComponent : public UWidgetComponent
{
public:
	float                                        CheckHUDDistanceToCenter;                          // 0x698(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        HUDTranslucentValue;                               // 0x69C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LocationUpdateTolerance;                           // 0x6A0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        InterpolationTimeRatio;                            // 0x6A4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        InterpolationSpeed;                                // 0x6A8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        InterpolationEaseInOutExp;                         // 0x6AC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveFloat*                           DistanceToScaleCurve;                              // 0x6B0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bUseDistanceToCharacterForScale;                   // 0x6B8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2E91[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               TargetWorldLocation;                               // 0x6C0(0xC)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2E92[0x24];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarTeammateHUDWidgetComponent* GetDefaultObj();

};

// 0x48 (0xF8 - 0xB0)
// Class Solarland.SolarTeamRescueComponent
class USolarTeamRescueComponent : public UActorComponent
{
public:
	uint8                                        Pad_2E94[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ASolarCharacter*                       OwnerChara;                                        // 0xB8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2E95[0x14];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TempReqTime;                                       // 0xD4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RequestTimeout;                                    // 0xD8(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bSendRequest;                                      // 0xDC(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bLastRescueBtnVisibility;                          // 0xDD(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2E96[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ASolarCharacter*                       ClosestTarget;                                     // 0xE0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<TWeakObjectPtr<class ASolarCharacter>> NearByDeathVergeTeamMates;                         // 0xE8(0x10)(ZeroConstructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class USolarTeamRescueComponent* GetDefaultObj();

	void TryRescueClosestTeammateLuaCall();
	void TryRescueClosestTeammate();
	void ShowTeamRescueToUI(bool IsShow);
	void SetRescueBtnVisibility(bool bIsVisible);
	void ReqStartTeamRescue(class ASolarCharacter* TargetCharacter);
	void ReqCancelTeamRescure();
	void OnRescueStateChangeInternal();
	void OnRescueStateChange();
	void DetectRescueTeammate(float DeltaTime);
	bool CanRescue(class ASolarCharacter* Player, bool bStart);
};

// 0x0 (0x228 - 0x228)
// Class Solarland.SolarTestActor
class ASolarTestActor : public AActor
{
public:

	static class UClass* StaticClass();
	static class ASolarTestActor* GetDefaultObj();

};

// 0x1F0 (0x350 - 0x160)
// Class Solarland.SolarTextBlock
class USolarTextBlock : public UTextLayoutWidget
{
public:
	bool                                         bEnableLocText;                                    // 0x160(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2E99[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  Text;                                              // 0x168(0x18)(Edit, NativeAccessSpecifierPublic)
	int32                                        LocTextID;                                         // 0x180(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ESolarSupportLanguages            PreviewLang;                                       // 0x184(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCapitalsLock;                                     // 0x185(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2E9A[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector2D                             CalcSize;                                          // 0x188(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FDelegateProperty_                           TextDelegate;                                      // 0x190(0x10)(ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)
	struct FSlateColor                           ColorAndOpacity;                                   // 0x1A0(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	FDelegateProperty_                           ColorAndOpacityDelegate;                           // 0x1C8(0x10)(ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)
	struct FSlateFontInfo                        Font;                                              // 0x1D8(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSlateFontSizeForLang                 SpecialLangFont;                                   // 0x238(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FSlateBrush                           StrikeBrush;                                       // 0x250(0x98)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FVector2D                             ShadowOffset;                                      // 0x2E8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          ShadowColorAndOpacity;                             // 0x2F0(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FDelegateProperty_                           ShadowColorAndOpacityDelegate;                     // 0x300(0x10)(ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)
	float                                        MinDesiredWidth;                                   // 0x310(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bWrapWithInvalidationPanel;                        // 0x314(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAutoWrapText;                                     // 0x315(0x1)(ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUsingAccurateScale;                               // 0x316(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bEnableCacheSize;                                  // 0x317(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bSimpleTextMode;                                   // 0x318(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bNeverResize;                                      // 0x319(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2E9B[0x36];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarTextBlock* GetDefaultObj();

	void SetWrapTextAt(float InWrapTextAt);
	void SetWrappingPolicy(enum class ETextWrappingPolicy InWrappingPolicy);
	void SetText(class FText InText);
	void SetStrikeBrush(const struct FSlateBrush& InStrikeBrush);
	void SetShadowOffset(const struct FVector2D& InShadowOffset);
	void SetShadowColorAndOpacity(const struct FLinearColor& InShadowColorAndOpacity);
	void SetOpacity(float InOpacity);
	void SetMinDesiredWidth(float InMinDesiredWidth);
	void SetMargin(const struct FMargin& InMargin);
	void SetLocTextID(int32 InLocTextID);
	void SetLocLangTextData(class FText InText, bool InEnableLocText, int32 InLocTextID, enum class ESolarSupportLanguages InPreviewLang, const struct FSlateFontSizeForLang& InSlateFontSizeForLang);
	void SetLineHeightPercentage(float InLineHeightPercentage);
	void SetFont(const struct FSlateFontInfo& InFontInfo);
	void SetColorAndOpacity(const struct FSlateColor& InColorAndOpacity);
	void SetAutoWrapText(bool InAutoTextWrap);
	struct FVector2D GetTextSize();
	class FText GetText();
	class UMaterialInstanceDynamic* GetDynamicOutlineMaterial();
	class UMaterialInstanceDynamic* GetDynamicFontMaterial();
};

// 0x60 (0x288 - 0x228)
// Class Solarland.SolarTimeLineManager
class ASolarTimeLineManager : public AActor
{
public:
	uint8                                        Pad_2E9C[0x60];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASolarTimeLineManager* GetDefaultObj();

	void NotifyWeatherCHange(int32 ID);
	void NotifyPoisonShrink(int32 ID);
	void NotifyBombing(const TArray<int32>& IDs);
	void NotifyAirDrops(int32 ChestSpawnID);
	void Exec_NotifyBombing(int32 ZoneId);
};

// 0x10 (0x38 - 0x28)
// Class Solarland.SolarTimerManager
class USolarTimerManager : public UObject
{
public:
	uint8                                        Pad_2EA1[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bFullCleanup;                                      // 0x30(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2EA2[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarTimerManager* GetDefaultObj();

	void UnPauseTimerInternal(const struct FTimerHandle& Handle);
	void TimerCallbackToLuaInternal(const class FString& CallbackKey);
	struct FTimerHandle SetTimerForNextTickInternal(const class FString& CallbackKey);
	void PauseTimerInternal(const struct FTimerHandle& Handle);
	void OnLuaContextCleanup(bool InBFullCleanup);
	bool IsValidTimerInternal(const struct FTimerHandle& Handle);
	bool IsTimerActiveInternal(const struct FTimerHandle& Handle);
	void ClearTimerInternal(const struct FTimerHandle& Handle);
	struct FTimerHandle AddTimerInternal(const class FString& CallbackKey, float Rate, bool IsLoop, float InitialStartDelay);
};

// 0x180 (0x1500 - 0x1380)
// Class Solarland.SolarTransformerVehicle
class ASolarTransformerVehicle : public ASolarVehiclePawn
{
public:
	uint8                                        Pad_2EA3[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USolarWheeledVehicleMovement*          WheeledMovement;                                   // 0x1388(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarLeggedVehicleMovement*           LeggedMovement;                                    // 0x1390(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AdditionalVelocityOnZToLeg;                        // 0x1398(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxVelocityOnXYToWheel;                            // 0x139C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTransformerSetting                   TransformerSettings[0x2];                          // 0x13A0(0x130)(Edit, Protected, NativeAccessSpecifierProtected)
	enum class ETransformerType                  CurrentTransformerType;                            // 0x14D0(0x1)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2EA4[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UCapsuleComponent*                     VehicleCapsule;                                    // 0x14D8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bReplicatedDrift;                                  // 0x14E0(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bReplicatedRequestJump;                            // 0x14E1(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2EA5[0x16];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        LeggedHealthUIID;                                  // 0x14F8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2EA6[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASolarTransformerVehicle* GetDefaultObj();

	void StatVehicleAutoSteering(bool bInSameDirection);
	void SetCurrentWeaponActive();
	void ServerSetIsDrift(bool bInDrift, uint8 InDriveType);
	void OnTransformingFinished();
	void OnRep_ReplicatedJumpRequest();
	void OnRep_Drift();
	void OnRep_CurrentTransformerType(enum class ETransformerType PreviousType);
};

// 0x148 (0x470 - 0x328)
// Class Solarland.SolarTransformerVehicleAnim
class USolarTransformerVehicleAnim : public USolarVehicleAnimInstance
{
public:
	uint8                                        Pad_2EA7[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	enum class ETransformerType                  TransformerType;                                   // 0x338(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2EA8[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        UpdateWeaponRotatorAlpha;                          // 0x33C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               FLWheelBoneScale;                                  // 0x340(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               FRWheelBoneScale;                                  // 0x34C(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               BLWheelBoneScale;                                  // 0x358(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               BRWheelBoneScale;                                  // 0x364(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               FLWheelBoneLocation;                               // 0x370(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               FRWheelBoneLocation;                               // 0x37C(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               BLWheelBoneLocation;                               // 0x388(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               BRWheelBoneLocation;                               // 0x394(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              FLWheelBoneRotation;                               // 0x3A0(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                              FRWheelBoneRotation;                               // 0x3AC(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                              BLWheelBoneRotation;                               // 0x3B8(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                              BRWheelBoneRotation;                               // 0x3C4(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                        LeaningDegree;                                     // 0x3D0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EVehicleAnimationState            VehicleAnimState;                                  // 0x3D4(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2EA9[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        YawDifference;                                     // 0x3D8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EVehicleRotateAnimationType       VehicleRotateType;                                 // 0x3DC(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2EAA[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               RotationBlend;                                     // 0x3E0(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               FLFootIKEffectorLocation;                          // 0x3EC(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               FRFootIKEffectorLocation;                          // 0x3F8(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               BLFootIKEffectorLocation;                          // 0x404(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               BRFootIKEffectorLocation;                          // 0x410(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FLFootIKAlpha;                                     // 0x41C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FRFootIKAlpha;                                     // 0x420(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BLFootIKAlpha;                                     // 0x424(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BRFootIKAlpha;                                     // 0x428(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2EAB[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<float>                                FootRotatorOffsets;                                // 0x430(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LeftFootLocationX;                                 // 0x440(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        RightFootLocationX;                                // 0x444(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               BodyRelativeLocation;                              // 0x448(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              BodyRelativeRotator;                               // 0x454(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                        ProceduralWalkingAlhpa;                            // 0x460(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2EAC[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarTransformerVehicleAnim* GetDefaultObj();

};

// 0xA0 (0x430 - 0x390)
// Class Solarland.SolarTreasureBoxSpawner
class ASolarTreasureBoxSpawner : public ASolarItemSpawner
{
public:
	int32                                        ChestSpawnID;                                      // 0x390(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ETreasureBoxSpawnType             TreasureBoxSpawnType;                              // 0x394(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2EAE[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FSpawonTreasureBoxIdAndWeight> SpawnTreasureBox;                                  // 0x398(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2EAF[0x1C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRandomStream                         ItemStream;                                        // 0x3C4(0x8)(ZeroConstructor, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_2EB0[0x58];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSpawnedActorHandle                   CachedActorHandle;                                 // 0x424(0x4)(NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2EB1[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASolarTreasureBoxSpawner* GetDefaultObj();

	int32 GetTargetTreasureBoxID();
	int32 GetOutcomeIdTreasureBoxId(int32 ItemID);
	struct FSolarItemData CreateItemDataByKey(int32 ItemID);
};

// 0x30 (0xE0 - 0xB0)
// Class Solarland.SolarTreatmentComponent
class USolarTreatmentComponent : public UActorComponent
{
public:
	FMulticastInlineDelegateProperty_            OnCharacterHealthLow;                              // 0xB0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_2EB2[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class ASolarCharacter*                       OwnerCharacter;                                    // 0xD0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2EB3[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarTreatmentComponent* GetDefaultObj();

	void TryStopTreatment();
	void TryStatisticsTreatedTimes();
	void TryStartTreatment();
	void StopProgress();
	void StartProgress();
	bool IsMedicineEnough();
	bool IsFullHealth();
	bool IsAbleToContinueTreatment();
	void IncreaseTreatedTimes();
	bool CanStartTreatment();
	bool CanBeTreated();
};

// 0x0 (0x9A8 - 0x9A8)
// Class Solarland.SolarTreeView
class USolarTreeView : public UTreeView
{
public:

	static class UClass* StaticClass();
	static class USolarTreeView* GetDefaultObj();

};

// 0xA0 (0xD0 - 0x30)
// Class Solarland.TutorialGlobalConfig
class UTutorialGlobalConfig : public UDataAsset
{
public:
	bool                                         bSwitch;                                           // 0x30(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2EB5[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<class FString, enum class ETutorialStage> MapName2TutorialStage;                             // 0x38(0x50)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	float                                        SubtitleDisappearTime;                             // 0x88(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AsyncLoadUIDelayTime;                              // 0x8C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SameConditionCheckInterval;                        // 0x90(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2EB6[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTutorialLevelConfig                  TutorialLevelConfig;                               // 0x98(0x38)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UTutorialGlobalConfig* GetDefaultObj();

	enum class ETutorialStage GetTutorialStageByLevelName(const class FString& LevelName);
	class FString GetTutorialLevelMainMapPath();
	class FString GetTutorialLevelMainMapName();
	struct FTutorialLevelConfigData GetTutorialLevelConfigDataByName(const class FString& LevelName);
};

// 0x468 (0x498 - 0x30)
// Class Solarland.SolarTutorialManager
class USolarTutorialManager : public USolarGameManager
{
public:
	uint8                                        Pad_2EE4[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	enum class ETutorialStage                    CurrentTutorialStage;                              // 0x50(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2EE5[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnRegisterEvent;                                   // 0x58(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnStepActionBegan;                                 // 0x68(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnStepActionEnded;                                 // 0x78(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnStepActionReset;                                 // 0x88(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnStepActionDisposed;                              // 0x98(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_2EE6[0x70];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UTutorialGlobalConfig*                 TutorialGlobalConfig;                              // 0x118(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<int32, struct FTutorialTableRow>        TutorialTableMapRows;                              // 0x120(0x50)(Transient, Protected, NativeAccessSpecifierProtected)
	TArray<struct FTutorialActionTableRow>       ActionTableRows;                                   // 0x170(0x10)(ZeroConstructor, Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<int32, struct FTutorialConditionTableRow> ConditionTableMapRows;                             // 0x180(0x50)(Transient, Protected, NativeAccessSpecifierProtected)
	TMap<int32, class UTutorial*>                Tutorials;                                         // 0x1D0(0x50)(Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_2EE7[0x110];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	uint8                                        bIsConditionCheckCodeParsed : 1;                   // Mask: 0x1, PropSize: 0x10x330(0x1)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        BitPad_1ED : 7;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_2EE8[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                TutorialDataTablePath;                             // 0x338(0x10)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                ActionDataTablePath;                               // 0x348(0x10)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                ConditionDataTablePath;                            // 0x358(0x10)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                TutorialGlobalConfigPath;                          // 0x368(0x10)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<uint16, class FName>                    OriginCheckFuncNames;                              // 0x378(0x50)(Transient, NativeAccessSpecifierPrivate)
	TMap<uint16, class UFunction*>               CheckFuncs;                                        // 0x3C8(0x50)(Transient, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2EE9[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<class FString, struct FCacheConditionInfo> CacheRanConditions;                                // 0x428(0x50)(Transient, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2EEA[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UTutorialLevelSaveGame*                CurrentTutorialLevelSaveGame;                      // 0x488(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2EEB[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarTutorialManager* GetDefaultObj();

	TArray<class FString> TriggerWidgetClicked(TArray<class FString>& Params);
	TArray<class FString> TriggerWeaponSlotHasSpecifiedItem(TArray<class FString>& Params);
	TArray<class FString> TriggerUseSpecifiedWeaponAbility(TArray<class FString>& Params);
	TArray<class FString> TriggerUseSpecifiedVehicleWeapon(TArray<class FString>& Params);
	TArray<class FString> TriggerUseSpecifiedVehicleAbility(TArray<class FString>& Params);
	TArray<class FString> TriggerTutorialLevelDone(TArray<class FString>& Params);
	void TriggerTutorialInternal(enum class ETutorialTriggerType TriggerID);
	void TriggerTutorialEvents(TArray<enum class ETutorialTriggerType>* TriggerTypeArrays, bool bPostTrigger);
	void TriggerTutorialEvent(enum class ETutorialTriggerType TriggerType, bool bPostTrigger);
	TArray<class FString> TriggerSprintingContinuously(TArray<class FString>& Params);
	TArray<class FString> TriggerSpecifiedPlayerProficiency(TArray<class FString>& Params);
	TArray<class FString> TriggerShieldNotFull(TArray<class FString>& Params);
	TArray<class FString> TriggerRunningStep(TArray<class FString>& Params);
	TArray<class FString> TriggerPlayerUpgradeBattleLevel(TArray<class FString>& Params);
	TArray<class FString> TriggerPlayerInTargetStage(TArray<class FString>& Params);
	TArray<class FString> TriggerPlayerAcountLevel(TArray<class FString>& Params);
	TArray<class FString> TriggerOpenTreasureBox(TArray<class FString>& Params);
	TArray<class FString> TriggerOpenBigMapUMG(TArray<class FString>& Params);
	TArray<class FString> TriggerNearAirDropBox(TArray<class FString>& Params);
	TArray<class FString> TriggerJumpBegin(TArray<class FString>& Params);
	TArray<class FString> TriggerHasUIPanelOpened(TArray<class FString>& Params);
	TArray<class FString> TriggerHasTakenDamage(TArray<class FString>& Params);
	TArray<class FString> TriggerHasSpecifiedItem(TArray<class FString>& Params);
	TArray<class FString> TriggerHasSpecifiedEquipmentByType(TArray<class FString>& Params);
	TArray<class FString> TriggerFeatureUnlock(TArray<class FString>& Params);
	TArray<class FString> TriggerEquipSpecifiedWeapon(TArray<class FString>& Params);
	TArray<class FString> TriggerBotAIDying(TArray<class FString>& Params);
	TArray<class FString> TriggerApproachTreasureBox(TArray<class FString>& Params);
	TArray<class FString> TriggerAlreadyTriggeredMaxCount(TArray<class FString>& Params);
	TArray<class FString> TriggerAirDropBoxLanded(TArray<class FString>& Params);
	void TickActivatedTutorials();
	void SetWidgetInteractionFlag(const class FString& InWidgetName, enum class EWidgetInteractionFlag InWidgetInteractionFlag);
	void SetTipsUIInteractionFlag(int32 TutorialID, bool boolChange);
	void SetSignNameBool(const class FString& SignName, bool InValue);
	void SetFlagNameCount(const class FString& FlagName, int32 Num);
	void SetAirDropBoxLandedAddOneNum(int32 Value);
	void SaveTutorialLevelSaveGame();
	void SaveLevelTutorialID(const class FString& InLevelName, int32 InTutorialID);
	void SaveLevelTutorialHasFinished(const class FString& InLevelName, bool InFinished);
	void SaveLevelPlayerStartTag(const class FString& InLevelName, const class FString& InPlayerStartTag);
	void RequestAddTutorialProgress(int32 TutorialID, int32 Progress);
	void ReceiveOnSingleTutorialStart(int32 TutorialID);
	void ReceiveOnSingleTutorialFinished(int32 TutorialID);
	void ReceiveLoadTutorialLevelData();
	void ReceiveLoadData();
	void ReceiveClearData();
	void OnPostLoadMap(const class FString& LevelName);
	bool IsInTutorialLevel();
	void InitGuideActorByActionID(const TArray<int32>& ActionIDs, class ATutorialLevelInteractableActor* TutorialGuideActor);
	bool HasAnyTutorialPlaying();
	bool HasAnyMandatoryTutorialPlaying();
	void GM_OpenUI(int32 ID);
	void GM_CloseUI(int32 ID);
	enum class EWidgetInteractionFlag GetWidgetInteractionFlag(const class FString& InWidgetName);
	int32 GetTutorialSingleRoundTriggerMax(int32 TutorialID);
	class UTutorialLevelSaveGame* GetTutorialLevelSaveGame();
	bool GetTipsUIInteractionFlag(int32 TutorialID);
	bool GetSignNameBool(const class FString& SignName);
	class UUserWidget* GetPanelUI(const class FString& PanelName);
	int32 GetLevelTutorialID(const class FString& InLevelName, int32 DefaultValue);
	bool GetLevelTutorialHasFinished(const class FString& InLevelName, bool DefaultValue);
	int32 GetFlagNameCount(const class FString& FlagName);
	uint8 GetCurrentPlayerLevel();
	struct FTutorialActionTableRow GetActionDataByID(int32 ActionDataID);
	class UWidget* FindWidget(TArray<class FName>& InWidgetLink);
	void EnterTutorialLevel(const class FString& LevelName, int32 Proficiency);
	bool CheckTutorialTipUIOnClick(TArray<class FString>& InParams);
	bool CheckIfWidgetReleased(TArray<class FString>& InParams);
	bool CheckIfWidgetPressed(TArray<class FString>& InParams);
	bool CheckIfWidgetPlayAnimationFinish(TArray<class FString>& InParams);
	bool CheckIfWidgetClicked(TArray<class FString>& InParams);
	bool CheckIfWeaponSlotHasSpecifiedItem(TArray<class FString>& InParams);
	bool CheckIfUIPanelOpened(TArray<class FString>& InParams);
	bool CheckIfTutorialLevelDone(TArray<class FString>& InParams);
	bool CheckIfTakeDamage(TArray<class FString>& InParams);
	bool CheckIfSprintingContinuously(TArray<class FString>& InParams);
	bool CheckIfSpecifiedPlayerProficiency(TArray<class FString>& InParams);
	bool CheckIfShieldNotFull();
	bool CheckIfRunningStep(TArray<class FString>& InParams);
	bool CheckIfReloading();
	bool CheckIfRechargingShield();
	bool CheckIfPlayerLevel(TArray<class FString>& InParams);
	bool CheckIfPlayerInTargetScene(TArray<class FString>& InParams);
	bool CheckIfPlayerInBattling();
	bool CheckIfPlayerBattleLevel(TArray<class FString>& InParams);
	bool CheckIfOpenBigMapUMG();
	bool CheckIfNearAirDropBox();
	bool CheckIfJumpBegin();
	bool CheckIfJetFlyingVertically();
	bool CheckIfJetFlyingHorizontally();
	bool CheckIfInWater();
	bool CheckIfInVehicle();
	bool CheckIfInAir();
	bool CheckIfHasSpecifiedItem(TArray<class FString>& InParams);
	bool CheckIfHasSpecifiedEquipmentByType(TArray<class FString>& InParams);
	bool CheckIfHasSpecifiedEquipmentById(TArray<class FString>& InParams);
	bool CheckIfHasShield();
	bool CheckIfHasMatched();
	bool CheckIfGrowTaskInLevelReceivedAnimationFinish(TArray<class FString>& InParams);
	bool CheckIfGrowLevelRewardIsInStatus(TArray<class FString>& InParams);
	bool CheckIfFeatureUnlock(TArray<class FString>& InParams);
	bool CheckIfFeatureOpen(TArray<class FString>& InParams);
	bool CheckIfEquipSpecifiedWeapon(TArray<class FString>& InParams);
	bool CheckIfDying();
	bool CheckIfDead();
	bool CheckIfCurrentWeaponAmmoFull();
	bool CheckIfConsumingMedicine();
	bool CheckIfClaimBattlePassLevelReward(TArray<class FString>& InParams);
	bool CheckIfCanUseSpecifiedWeaponAbility(TArray<class FString>& InParams);
	bool CheckIfCanUseSpecifiedVehicleWeapon(TArray<class FString>& InParams);
	bool CheckIfCanUseSpecifiedVehicleAbility(TArray<class FString>& InParams);
	bool CheckIfCanOpenTreasureBox();
	bool CheckIfCanJetFlyVertically();
	bool CheckIfCanJetFlyHorizontally();
	bool CheckIfBoughtBattlePass();
	bool CheckIfBotAIDying(TArray<class FString>& InParams);
	bool CheckIfBattlePassLevelGreaterThan(TArray<class FString>& InParams);
	bool CheckIfApproachElectronicTreasureBox();
	bool CheckIfAlreadyTriggeredMaxCount(TArray<class FString>& InParams);
	bool CheckIfAirDropBoxLanded();
	bool CheckConsumeItemButtonType(TArray<class FString>& InParams);
	void AddTutorialProgress(int32 TutorialID, int32 Progress);
};

// 0x78 (0x458 - 0x3E0)
// Class Solarland.SolarUAV
class ASolarUAV : public ASummonItemBase
{
public:
	bool                                         bShowDebug;                                        // 0x3E0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2EEC[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DebugLineThickness;                                // 0x3E4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkeletalMeshComponent*                Mesh;                                              // 0x3E8(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  AttachCharacterSocketName;                         // 0x3F0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimationAsset*                       AppearAnim;                                        // 0x3F8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AppearAnimLength;                                  // 0x400(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2EED[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAnimationAsset*                       DisappearAnim;                                     // 0x408(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DisppearAnimLength;                                // 0x410(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2EEE[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bProbeCollisionConfig;                             // 0x420(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2EEF[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ProbeCollisionInterval;                            // 0x424(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ProbeCollisionRadius;                              // 0x428(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AvoidCollisionMaxHeight;                           // 0x42C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AvoidCollisionOverTime;                            // 0x430(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AvoidCollisionCDTime;                              // 0x434(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2EF0[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASolarUAV* GetDefaultObj();

	void UAVDestroy();
	void OnCharacterInVehicleTag(const struct FGameplayTag& Tag, int32 NewCount);
	void Disappear();
};

// 0x488 (0x8E0 - 0x458)
// Class Solarland.SolarUAVRescue
class ASolarUAVRescue : public ASolarUAV
{
public:
	uint8                                        Pad_2EF2[0x21];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EUAVRescueState                   NewState;                                          // 0x479(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2EF3[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAnimationAsset*                       SuspendAnim_Active_NotWork;                        // 0x480(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimationAsset*                       SuspendAnim_Active_Work;                           // 0x488(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimationAsset*                       SuspendAnim_Deactive;                              // 0x490(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimationAsset*                       ActiveAnim;                                        // 0x498(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimationAsset*                       DeactiveAnim;                                      // 0x4A0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimationAsset*                       BeginWorkAnim;                                     // 0x4A8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimationAsset*                       EndWorkAnim;                                       // 0x4B0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimationAsset*                       ExplodeAnim;                                       // 0x4B8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                       ActiveEffect;                                      // 0x4C0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                       AppearBeginEffect;                                 // 0x4C8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  AppearBeginEffectSocket;                           // 0x4D0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                       JetEffect;                                         // 0x4D8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  JetEffectSocket;                                   // 0x4E0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2EF4[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            JetEffectTrans;                                    // 0x4F0(0x30)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	class UParticleSystem*                       ActiveLoopEffect;                                  // 0x520(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                       ChaActiveEffect;                                   // 0x528(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                       ExplodeEffect;                                     // 0x530(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                       DeathVergeEffect;                                  // 0x538(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  ChaActiveEffectSocket;                             // 0x540(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AppearEffectLength;                                // 0x548(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2EF5[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UMaterialInstance*                     MatAppearing;                                      // 0x550(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FMatAppearingData>             MatAppearingData;                                  // 0x558(0x10)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstance*                     MatAppearEndBody;                                  // 0x568(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstance*                     MatAppearEndEye;                                   // 0x570(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                BeginSound;                                        // 0x578(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                EndSound;                                          // 0x588(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                ActiveChaSound;                                    // 0x598(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                ActiveAnimSound;                                   // 0x5A8(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                BeginActiveLoopSound;                              // 0x5B8(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                EndActiveLoopSound;                                // 0x5C8(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                DeactiveAnimSound;                                 // 0x5D8(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                ExplodeSound;                                      // 0x5E8(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                BeginDeathVergeLoopSound;                          // 0x5F8(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                EndDeathVergeLoopSound;                            // 0x608(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ChaSpeedThreshold;                                 // 0x618(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RotateSpeed;                                       // 0x61C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        YawOffset;                                         // 0x620(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2EF6[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UCurveFloat*                           ActivatingScaleCurve;                              // 0x628(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveFloat*                           DeactivatingScaleCurve;                            // 0x630(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveFloat*                           TargetSpeedByDistance;                             // 0x638(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        Acceleration;                                      // 0x640(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxDistance;                                       // 0x644(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2EF7[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               DefaultLocationOffset;                             // 0x654(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TargetLocationOffsetSpeed;                         // 0x660(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2EF8[0x24];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ActiveDuration;                                    // 0x688(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ActiveEffectLength;                                // 0x68C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DeathVergeHealthThreshold;                         // 0x690(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2EFA[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSoftObjectPath                       UAVIcon;                                           // 0x698(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2EFB[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UParticleSystemComponent*              DeathVergeEffectHandle;                            // 0x6C0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystemComponent*              ActiveLoopEffectHandle;                            // 0x6C8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bFollowCharacter;                                  // 0x6D0(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2EFC[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bAppearEnd;                                        // 0x6D3(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2EFD[0x1C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bActive;                                           // 0x6F0(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bPermanent;                                        // 0x6F1(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bExplodeEffect;                                    // 0x6F2(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2EFE[0x25];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        HealTickInterval;                                  // 0x718(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        HealHealthAmount;                                  // 0x71C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        HealShieldAmount;                                  // 0x720(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2EFF[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UParticleSystem*                       HealLineEffect;                                    // 0x728(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  HealMeshSocket;                                    // 0x730(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                BeginHealSound;                                    // 0x738(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                BeginHealLoopSound;                                // 0x748(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                EndHealSound;                                      // 0x758(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                EndHealLoopSound;                                  // 0x768(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                BeginHealHPLoopSound;                              // 0x778(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                EndHealHPLoopSound;                                // 0x788(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                BeginHealShieldLoopSound;                          // 0x798(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                EndHealShieldLoopSound;                            // 0x7A8(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystemComponent*              HealLineEffectHandle;                              // 0x7B8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2F00[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UParticleSystem*                       RescueEffect;                                      // 0x7C8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                       RescueEffect_Enermy;                               // 0x7D0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2F01[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            RescueEffectTransform;                             // 0x7E0(0x30)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	class FName                                  RescueMeshSocket;                                  // 0x810(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RescueTime;                                        // 0x818(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCheckRescueBlock;                                 // 0x81C(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2F02[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        CheckRescueBlockInteval;                           // 0x820(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2F03[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                BeginRescueLoopSound;                              // 0x828(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                EndRescueLoopSound;                                // 0x838(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                CompleteRescueSound;                               // 0x848(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystemComponent*              RescueEffectHandle;                                // 0x858(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2F04[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UMaterialInstanceDynamic*              MatInstanceAppearingBody;                          // 0x870(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMaterialInstanceDynamic*              MatInstanceAppearingEye;                           // 0x878(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bNavigateToOwner;                                  // 0x880(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2F05[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        RecordInterval;                                    // 0x884(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        NavigateInterval;                                  // 0x888(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        BeginNavigateDistance;                             // 0x88C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        EndNavigateDistance;                               // 0x890(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2F06[0x2C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UGameplayEffect>           UAVHealBuffGameplayEffect;                         // 0x8C0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UGameplayEffect>           UAVRescueGameplayEffect;                           // 0x8C8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2F07[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASolarUAVRescue* GetDefaultObj();

	void TickRescue(float DeltaTime);
	void TickNavigate(float DeltaTime);
	void TickHeal(float DeltaTime);
	void ServerSetRescueBlocked(bool bBlocked);
	void OnRescueComplete();
	void OnRep_NewState();
	void OnRep_Active();
	void OnCheckUAVInvisible(const struct FGameplayTag& Tag, int32 NewCount);
	void OnCharacterEndPlay(class AActor* Actor, enum class EEndPlayReason EndPlayReason);
	void OnCharacterDeathVergeStatusTag(const struct FGameplayTag& Tag, int32 NewCount);
	void OnCharacterDeathStatusTag(const struct FGameplayTag& Tag, int32 NewCount);
	float GetRescueTime();
};

// 0x68 (0x4C0 - 0x458)
// Class Solarland.SolarUAVShield
class ASolarUAVShield : public ASolarUAV
{
public:
	TSubclassOf<class ASolarEnergyShield>        EnergyShieldClass;                                 // 0x458(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTransform                            EnergyShieldSpawnTransform;                        // 0x460(0x30)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	class FString                                StartSound;                                        // 0x490(0x10)(Edit, BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USpringArmComponent*                   SpringArm;                                         // 0x4A0(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2F08[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class ASolarEnergyShield*                    EnergyShield;                                      // 0x4B8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class ASolarUAVShield* GetDefaultObj();

	void OnCharacterDeathVergeStatusTag(const struct FGameplayTag& Tag, int32 NewCount);
};

// 0x28 (0x50 - 0x28)
// Class Solarland.SolarUDPManager
class USolarUDPManager : public UObject
{
public:
	uint8                                        Pad_2F09[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        SendBufferSize;                                    // 0x30(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ReceiveBufferSize;                                 // 0x34(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2F0A[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarUDPManager* GetDefaultObj();

	void OnMessageReceived(TArray<uint8>& Data);
};

// 0x0 (0x348 - 0x348)
// Class Solarland.SolarUIRoot
class USolarUIRoot : public USolarUserWidget
{
public:

	static class UClass* StaticClass();
	static class USolarUIRoot* GetDefaultObj();

};

// 0x1B8 (0x3E0 - 0x228)
// Class Solarland.SolarUnArmWeapon
class ASolarUnArmWeapon : public AActor
{
public:
	uint8                                        Pad_2F0D[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Angle;                                             // 0x230(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2F0E[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<enum class EObjectTypeQuery>          HitDetectableTypes;                                // 0x238(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        Interval;                                          // 0x248(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2F0F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UUserWidget>               Crosshair;                                         // 0x250(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                       FireIconPath;                                      // 0x258(0x18)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayCueTag                       HitCueTag;                                         // 0x270(0x8)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FSlateBrush                           FireBtnBrush;                                      // 0x278(0x98)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	class USolarAbilitySystemComponent*          AbilitySystemComponent;                            // 0x310(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2F10[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ASolarCharacterBase*                   AttackTargetCharacter;                             // 0x320(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2F11[0x50];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSolarDamageInfo                      DamageInfo;                                        // 0x378(0x40)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	TSubclassOf<class ASolarAbility>             MeleeAbilityClass;                                 // 0x3B8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2F12[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASolarUnArmWeapon* GetDefaultObj();

	void TryDealMeleeDamage(struct FVector& Location, float DetectSphereRadius);
	void ServerDealMeleeDamage(class ASolarCharacterBase* Target, const struct FVector& ClientHitLoc, bool bHeavyPunch);
	bool HitAnyCharacters(class ASolarCharacterBase** HitTarget, struct FVector& Location, float& DetectSphereRadius);
	struct FSlateBrush GetFireButtonBrush();
	class ASolarCharacterBase* GetAttackTargetCharacter();
};

// 0x0 (0x348 - 0x348)
// Class Solarland.SolarUserLuaWidget
class USolarUserLuaWidget : public USolarUserWidget
{
public:

	static class UClass* StaticClass();
	static class USolarUserLuaWidget* GetDefaultObj();

	void OnInitWidgetLuaLogic();
	void InitWidgetLuaLogic();
};

// 0xD8 (0x110 - 0x38)
// Class Solarland.SolarUserWidgetSettings
class USolarUserWidgetSettings : public UDeveloperSettings
{
public:
	struct FSoftObjectPath                       SolarImage_Mat_Normal_90;                          // 0x38(0x18)(Edit, ZeroConstructor, Transient, Config, EditConst, DuplicateTransient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                       SolarImage_Mat_Mirror_90;                          // 0x50(0x18)(Edit, ZeroConstructor, Transient, Config, EditConst, DuplicateTransient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                       SolarImage_Mat_Quarter_90;                         // 0x68(0x18)(Edit, ZeroConstructor, Transient, Config, EditConst, DuplicateTransient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                       SolarImage_Mat_Normal_180;                         // 0x80(0x18)(Edit, ZeroConstructor, Transient, Config, EditConst, DuplicateTransient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                       SolarImage_Mat_Mirror_180;                         // 0x98(0x18)(Edit, ZeroConstructor, Transient, Config, EditConst, DuplicateTransient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                       SolarImage_Mat_Quarter_180;                        // 0xB0(0x18)(Edit, ZeroConstructor, Transient, Config, EditConst, DuplicateTransient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                       SolarImage_Mat_Normal_360;                         // 0xC8(0x18)(Edit, ZeroConstructor, Transient, Config, EditConst, DuplicateTransient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                       SolarImage_Mat_Mirror_360;                         // 0xE0(0x18)(Edit, ZeroConstructor, Transient, Config, EditConst, DuplicateTransient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                       SolarImage_Mat_Quarter_360;                        // 0xF8(0x18)(Edit, ZeroConstructor, Transient, Config, EditConst, DuplicateTransient, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class USolarUserWidgetSettings* GetDefaultObj();

};

// 0x10 (0x38 - 0x28)
// Class Solarland.SolarAyncTask
class USolarAyncTask : public UObject
{
public:
	FMulticastInlineDelegateProperty_            OnAsyncTask;                                       // 0x28(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class USolarAyncTask* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Solarland.SolarHelper
class USolarHelper : public UObject
{
public:

	static class UClass* StaticClass();
	static class USolarHelper* GetDefaultObj();

	void OnAsyncTask__DelegateSignature();
	class FString GetUE4LogFilePath();
	class FString GetSavedPath();
	class FString GetProjectPath();
	class FString GetGamePersistentDownloadDir();
	class FString GetFileText(const class FString& Path);
	TArray<uint8> GetFileBinary(const class FString& Path);
	bool CleanAllCacheData();
};

// 0x0 (0x28 - 0x28)
// Class Solarland.SolarUtils
class USolarUtils : public UObject
{
public:

	static class UClass* StaticClass();
	static class USolarUtils* GetDefaultObj();

	class UTextureRenderTarget2D* WidgetToTexture(class UUserWidget* Widget, struct FVector2D& DrawSize);
	struct FVector2D TransformScreenPositionToLocal(class UObject* WorldContextObject, struct FVector2D& InScreenPositon, const struct FVector2D& AnchorsVector);
	void PostAkEvent(class UAkComponent* InAkComponent, class ASolarCharacter* InCharacter, const class FString& InControlledSoundName, const class FString& InTeammateSoundName, const class FString& InEnemySoundName);
	bool NeedOptimizeShow(class UObject* WorldContext, const struct FVector& Location, float Radius, float BackThreshold);
	class FString GetAndroidSavedPngPath();
	bool ExportRenderTarget2DAsPNG(class UTextureRenderTarget2D* TexRT, const class FString& TotalFileName);
	void ExportImageToSystemAlbum(const class FString& InFilePath);
};

// 0x10 (0x358 - 0x348)
// Class Solarland.SolarUWSettlementBase
class USolarUWSettlementBase : public USolarUserWidget
{
public:
	int32                                        MvpCharacterID;                                    // 0x348(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MvpSkinID;                                         // 0x34C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class USettlementStageManager> SettlementStageManager;                            // 0x350(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class USolarUWSettlementBase* GetDefaultObj();

	void SetStageManager(class USettlementStageManager* InStageManager);
	void PlayMvpCharacterVoice();
};

// 0x218 (0x250 - 0x38)
// Class Solarland.SolarVaultSystemSettings
class USolarVaultSystemSettings : public UDeveloperSettings
{
public:
	float                                        MaxFacingAngle2D;                                  // 0x38(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinFallingVeloZ;                                   // 0x3C(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxFallingVeloZ;                                   // 0x40(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VaultFallingVeloAngleTolerance;                    // 0x44(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableAutoVaultWhileFalling;                      // 0x48(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPreventAutoVaultToFalling;                        // 0x49(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2F15[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        AutoMaxFacingAngle2D;                              // 0x4C(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AutoVaultDistThreshold;                            // 0x50(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        JoystickForwardRange;                              // 0x54(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        JoystickBackwardRange;                             // 0x58(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableWallRun;                                    // 0x5C(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2F16[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               WallRunForce;                                      // 0x60(0xC)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WallRunDuration;                                   // 0x6C(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinWallRunTriggerHeight;                           // 0x70(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WallRunDistThreshold;                              // 0x74(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WallRunFallingVeloAngleTolerance;                  // 0x78(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableAutoWallRun;                                // 0x7C(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2F17[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        AutoWallRunDistThreshold;                          // 0x80(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2F18[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<enum class EObstacleDetectorType, struct FDetectorShapeParams> DetectorShapeParams;                               // 0x88(0x50)(Edit, Config, NativeAccessSpecifierPublic)
	float                                        PlatformNorAngleTolerance;                         // 0xD8(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VaultWallNorAngleTolerance;                        // 0xDC(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinPlatformWidth;                                  // 0xE0(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EdgeOffset;                                        // 0xE4(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TraceTolerance;                                    // 0xE8(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxIllegalCornerHeight;                            // 0xEC(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxIllegalCornerWidth;                             // 0xF0(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CancelDistFromWall;                                // 0xF4(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CapsuleHalfHeightScaler;                           // 0xF8(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WallRunWallNorAngleTolerance;                      // 0xFC(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WallRunWallNorNegAngleTolerance;                   // 0x100(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WallRunBumpMaxHeight;                              // 0x104(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WallRunBumpAngle2D;                                // 0x108(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VeloThreshold;                                     // 0x10C(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<enum class EVaultType, struct FVector>  WarpTargetOffsets;                                 // 0x110(0x50)(Edit, Config, NativeAccessSpecifierPublic)
	uint8                                        Pad_2F19[0x50];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  LandWarpTargetName;                                // 0x1B0(0x8)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  HandWarpTargetName;                                // 0x1B8(0x8)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  FootWarpTargetName;                                // 0x1C0(0x8)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ServerDistThreshold;                               // 0x1C8(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TargetSelectRange;                                 // 0x1CC(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TargetSelectAngle;                                 // 0x1D0(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ChaseLowerLimit;                                   // 0x1D4(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DistanceWeight;                                    // 0x1D8(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AngleWeight;                                       // 0x1DC(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  EnemyWarpTargetName;                               // 0x1E0(0x8)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftClassPtr<class AThreeDMeshWidgetTrack>  TrackWidgetClass;                                  // 0x1E8(0x28)(Edit, Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CapsuleShrinkScale;                                // 0x210(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAdjustMeshZForAdaptingCapsuleShrink;              // 0x214(0x1)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2F1A[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DurationToResetMeshZAdjustment;                    // 0x218(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FollowDanceRange;                                  // 0x21C(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FollowDanceCheckInterval;                          // 0x220(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2F1B[0x2C];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarVaultSystemSettings* GetDefaultObj();

	class USolarVaultSystemSettings* Get();
};

// 0x18 (0x1310 - 0x12F8)
// Class Solarland.SolarVehicleAbilitySystemComponent
class USolarVehicleAbilitySystemComponent : public UAbilitySystemComponent
{
public:
	uint8                                        Pad_2F1C[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarVehicleAbilitySystemComponent* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Solarland.WheeledVehicleAnim
class IWheeledVehicleAnim : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IWheeledVehicleAnim* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Solarland.LeggedVehicleAnim
class ILeggedVehicleAnim : public IInterface
{
public:

	static class UClass* StaticClass();
	static class ILeggedVehicleAnim* GetDefaultObj();

};

// 0x70 (0xA0 - 0x30)
// Class Solarland.SolarVehicleAttributeSet
class USolarVehicleAttributeSet : public USolarAttributeSet
{
public:
	struct FGameplayAttributeData                CurrentVehicleHealth;                              // 0x30(0x10)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                MaxVehicleHealth;                                  // 0x40(0x10)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                MaxBrokenHealth;                                   // 0x50(0x10)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                StealthMaterialPercent;                            // 0x60(0x10)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                SpeedMultiplier;                                   // 0x70(0x10)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                CurrentVehicleWholeShield;                         // 0x80(0x10)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)
	struct FGameplayAttributeData                MaxVehicleWholeShield;                             // 0x90(0x10)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class USolarVehicleAttributeSet* GetDefaultObj();

	void OnRep_StealthMaterialPercent(struct FGameplayAttributeData& OldStealthMaterialPercent);
	void OnRep_SpeedMultiplier(struct FGameplayAttributeData& OldSpeedMultiplier);
	void OnRep_MaxVehicleWholeShield(struct FGameplayAttributeData& OldMaxVehicleWholeShield);
	void OnRep_MaxVehicleHealth(struct FGameplayAttributeData& OldMaxVehicleHealth);
	void OnRep_MaxBrokenHealth(struct FGameplayAttributeData& OldMaxBrokenHealth);
	void OnRep_CurrentVehicleWholeShield(struct FGameplayAttributeData& OldVehicleWholeShield);
	void OnRep_CurrentVehicleHealth(struct FGameplayAttributeData& OldVehicleHealth);
};

// 0x38 (0x9F0 - 0x9B8)
// Class Solarland.SolarVehicleCameraComponent
class USolarVehicleCameraComponent : public USolarCameraComponent
{
public:
	class ASolarVehiclePawn*                     Vehicle;                                           // 0x9B8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarVehicleSpringArmComponent*       VehicleSpringArm;                                  // 0x9C0(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2F1D[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UVehicleCameraDataAsset*>       CameraDataAssets;                                  // 0x9E0(0x10)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class USolarVehicleCameraComponent* GetDefaultObj();

};

// 0xD8 (0x4D8 - 0x400)
// Class Solarland.SolarVehicleGameplayAbility
class USolarVehicleGameplayAbility : public UGameplayAbility
{
public:
	bool                                         bCancelAfterVacateSeat;                            // 0x400(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCancelManually;                                   // 0x401(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        AbilityIndex;                                      // 0x402(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2F1E[0x5];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FGameplayTagContainer                 GameplayCueTags;                                   // 0x408(0x20)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class FString                                AbilityActivateVirationHeString;                   // 0x428(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                AbilityEndVirationHeString;                        // 0x438(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCheckInstigatorBeforeActivation;                  // 0x448(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bActivateAbilityOnGranted;                         // 0x449(0x1)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2F1F[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DurationTime;                                      // 0x44C(0x4)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UGameplayEffect>           ActivateEffect;                                    // 0x450(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UTexture2D>             AbilityIcon;                                       // 0x458(0x28)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UTexture2D>             AdditionalAbilityIcon;                             // 0x480(0x28)(Edit, DisableEditOnInstance, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        AbilityDescription;                                // 0x4A8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2F20[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                AbilityTextType;                                   // 0x4B0(0x10)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DamageToVehicle;                                   // 0x4C0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DamageToCharacter;                                 // 0x4C4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2F21[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarVehicleGameplayAbility* GetDefaultObj();

};

// 0x8 (0x4E0 - 0x4D8)
// Class Solarland.SolarVehicleGA_Dash
class USolarVehicleGA_Dash : public USolarVehicleGameplayAbility
{
public:
	float                                        HorizontalDashSpeed;                               // 0x4D8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        VerticalDashSpeed;                                 // 0x4DC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class USolarVehicleGA_Dash* GetDefaultObj();

};

// 0x18 (0x4F0 - 0x4D8)
// Class Solarland.SolarVehicleGA_EMP
class USolarVehicleGA_EMP : public USolarVehicleGameplayAbility
{
public:
	TSubclassOf<class ASolarSkill_EMP>           EMPActorClass;                                     // 0x4D8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UGameplayEffect>           ApplyToTargetGameplayEffectClass;                  // 0x4E0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        EMPLevel;                                          // 0x4E8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2F22[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarVehicleGA_EMP* GetDefaultObj();

};

// 0x48 (0x520 - 0x4D8)
// Class Solarland.SolarVehicleGA_EquipWeapon
class USolarVehicleGA_EquipWeapon : public USolarVehicleGameplayAbility
{
public:
	class UVehicleCameraDataAsset*               CameraDataAsset;                                   // 0x4D8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        EquipDelayTimer;                                   // 0x4E0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxDegreeBetweenMeshUpAndGloblaUp;                 // 0x4E4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FVehicleEquipWeaponOverlapBox> EquipWeaponOverlapBoxes;                           // 0x4E8(0x10)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FVehicleEquipWeaponOverlapCapsule> EquipWeaponOverlapCapsules;                        // 0x4F8(0x10)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        FailToEquipWeaponNotice;                           // 0x508(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bSendMeshRelativeTransform;                        // 0x50C(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2F23[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        WeaponSeatIndex;                                   // 0x510(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2F24[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarVehicleGA_EquipWeapon* GetDefaultObj();

};

// 0x10 (0x4E8 - 0x4D8)
// Class Solarland.SolarVehicleGA_HoverFly
class USolarVehicleGA_HoverFly : public USolarVehicleGameplayAbility
{
public:
	float                                        MaxFlyHeight;                                      // 0x4D8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MinimumTime;                                       // 0x4DC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaximumTime;                                       // 0x4E0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2F25[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarVehicleGA_HoverFly* GetDefaultObj();

};

// 0x18 (0x4F0 - 0x4D8)
// Class Solarland.SolarVehicleGA_HoverJump
class USolarVehicleGA_HoverJump : public USolarVehicleGameplayAbility
{
public:
	float                                        HoverJumpHeight;                                   // 0x4D8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        GravityScale;                                      // 0x4DC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ServerEndTimerWhenNotReceiveBuffer;                // 0x4E0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2F26[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USolarVehicleAT_HoverJump*             HoverJumpTask;                                     // 0x4E8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class USolarVehicleGA_HoverJump* GetDefaultObj();

};

// 0x10 (0x90 - 0x80)
// Class Solarland.SolarVehicleAT_HoverJump
class USolarVehicleAT_HoverJump : public UAbilityTask
{
public:
	uint8                                        Pad_2F27[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarVehicleAT_HoverJump* GetDefaultObj();

};

// 0x18 (0x4F0 - 0x4D8)
// Class Solarland.SolarVehicleGA_HoverRolling
class USolarVehicleGA_HoverRolling : public USolarVehicleGameplayAbility
{
public:
	float                                        RollForwardDegree;                                 // 0x4D8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RollBackDegree;                                    // 0x4DC(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RollForwardDistance;                               // 0x4E0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RollForwardDuration;                               // 0x4E4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RollHorizontalDistance;                            // 0x4E8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2F28[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarVehicleGA_HoverRolling* GetDefaultObj();

};

// 0x18 (0x4F0 - 0x4D8)
// Class Solarland.SolarVehicleGA_IronManLaser
class USolarVehicleGA_IronManLaser : public USolarVehicleGameplayAbility
{
public:
	float                                        TraceLength;                                       // 0x4D8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TraceLengthScaleOnServer;                          // 0x4DC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxFadingLaserLifeTime;                            // 0x4E0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2F29[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UGameplayEffect>           EffectToDriver;                                    // 0x4E8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class USolarVehicleGA_IronManLaser* GetDefaultObj();

};

// 0x50 (0xD0 - 0x80)
// Class Solarland.SolarVehicleAT_IronManLaser
class USolarVehicleAT_IronManLaser : public UAbilityTask
{
public:
	uint8                                        Pad_2F2B[0x50];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarVehicleAT_IronManLaser* GetDefaultObj();

	void OnNotifyEndQueryActor(class FName NotifyName, struct FBranchingPointNotifyPayload& BranchingPointNotifyPayload);
	void OnNotifyBeginQueryActor(class FName NotifyName, struct FBranchingPointNotifyPayload& BranchingPointNotifyPayload);
	void OnMontageEnded(class UAnimMontage* Montage, bool bInterrupted);
};

// 0x8 (0x4E0 - 0x4D8)
// Class Solarland.SolarVehicleGA_Jump
class USolarVehicleGA_Jump : public USolarVehicleGameplayAbility
{
public:
	float                                        LandedDamageRadius;                                // 0x4D8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LandedDamageHeight;                                // 0x4DC(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class USolarVehicleGA_Jump* GetDefaultObj();

	void ApplyDamageOnLanding(struct FHitResult& LandedHit);
};

// 0x30 (0x508 - 0x4D8)
// Class Solarland.SolarVehicleGA_NOS
class USolarVehicleGA_NOS : public USolarVehicleGameplayAbility
{
public:
	class FName                                  VerticalAxisName;                                  // 0x4D8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  HorizontalAxisName;                                // 0x4E0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VerticalAxisValueForCancel;                        // 0x4E8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        JoyStickCancelDegree;                              // 0x4EC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CancelTimeForInput;                                // 0x4F0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CancelTimeForHit;                                  // 0x4F4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CancelSpeedForHit;                                 // 0x4F8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2F2C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USolarVehicleAT_NOS*                   NosTask;                                           // 0x500(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class USolarVehicleGA_NOS* GetDefaultObj();

};

// 0x10 (0x90 - 0x80)
// Class Solarland.SolarVehicleAT_NOS
class USolarVehicleAT_NOS : public UAbilityTask
{
public:
	uint8                                        Pad_2F2E[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarVehicleAT_NOS* GetDefaultObj();

	void OnHitDuringNos(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, struct FHitResult& Hit);
};

// 0x0 (0x4D8 - 0x4D8)
// Class Solarland.SolarVehicleGA_PrecisionShoot
class USolarVehicleGA_PrecisionShoot : public USolarVehicleGameplayAbility
{
public:

	static class UClass* StaticClass();
	static class USolarVehicleGA_PrecisionShoot* GetDefaultObj();

};

// 0x10 (0x4E8 - 0x4D8)
// Class Solarland.SolarVehicleGA_Radar
class USolarVehicleGA_Radar : public USolarVehicleGameplayAbility
{
public:
	TSubclassOf<class ASolarRadarBase>           RadarClass;                                        // 0x4D8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2F2F[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarVehicleGA_Radar* GetDefaultObj();

};

// 0x28 (0x500 - 0x4D8)
// Class Solarland.SolarVehicleGA_SeatEject
class USolarVehicleGA_SeatEject : public USolarVehicleGameplayAbility
{
public:
	struct FRotator                              EjectRotation;                                     // 0x4D8(0xC)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FVehicleEjectParams                   EjectParams;                                       // 0x4E4(0x10)(Edit, DisableEditOnInstance, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTag                          GameplayCueTag;                                    // 0x4F4(0x8)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2F30[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarVehicleGA_SeatEject* GetDefaultObj();

};

// 0x8 (0x4E0 - 0x4D8)
// Class Solarland.SolarVehicleGA_SelfHealing
class USolarVehicleGA_SelfHealing : public USolarVehicleGameplayAbility
{
public:
	uint32                                       FullHealthNotifyId;                                // 0x4D8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2F31[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarVehicleGA_SelfHealing* GetDefaultObj();

};

// 0x0 (0x4D8 - 0x4D8)
// Class Solarland.SolarVehicleGA_ShieldTrigger
class USolarVehicleGA_ShieldTrigger : public USolarVehicleGameplayAbility
{
public:

	static class UClass* StaticClass();
	static class USolarVehicleGA_ShieldTrigger* GetDefaultObj();

};

// 0x8 (0x4E0 - 0x4D8)
// Class Solarland.SolarVehicleGA_Smoke
class USolarVehicleGA_Smoke : public USolarVehicleGameplayAbility
{
public:
	TSubclassOf<class ASolarVehicleSmoke>        VehicleSmoke;                                      // 0x4D8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class USolarVehicleGA_Smoke* GetDefaultObj();

};

// 0x28 (0x500 - 0x4D8)
// Class Solarland.SolarVehicleGA_Stealth
class USolarVehicleGA_Stealth : public USolarVehicleGameplayAbility
{
public:
	uint8                                        Pad_2F34[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarVehicleGA_Stealth* GetDefaultObj();

	void OnPlayerGetOnVehicle(int32 GetOnSeatIndex, class ASolarCharacter* GetOnPlayer);
	void OnPlayerGetOffVehicle(int32 GetOffSeatIndex, class ASolarCharacter* GetOffPlayer);
	void OnCancelStealthByPassenger();
};

// 0x18 (0x4F0 - 0x4D8)
// Class Solarland.SolarVehicleGA_WeaponFire
class USolarVehicleGA_WeaponFire : public USolarVehicleGameplayAbility
{
public:
	uint8                                        Pad_2F35[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarVehicleGA_WeaponFire* GetDefaultObj();

	void OnFireTaskEnd();
	void OnCtrlTaskEnd();
	void DoFireTask();
};

// 0x10 (0x4E8 - 0x4D8)
// Class Solarland.SolarVehicleGA_WeaponReload
class USolarVehicleGA_WeaponReload : public USolarVehicleGameplayAbility
{
public:
	uint8                                        Pad_2F36[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarVehicleGA_WeaponReload* GetDefaultObj();

};

// 0x58 (0x530 - 0x4D8)
// Class Solarland.SolarVehicleGA_WheelTransform
class USolarVehicleGA_WheelTransform : public USolarVehicleGameplayAbility
{
public:
	TArray<TSubclassOf<class UGameplayEffect>>   WheeledEffects;                                    // 0x4D8(0x10)(Edit, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<TSubclassOf<class UGameplayEffect>>   LeggedEffects;                                     // 0x4E8(0x10)(Edit, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2F37[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        InhibitTransformNoticeIDByBrokenWeakPointNums;     // 0x508(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCheckBrokenWeakPointNumConfig;                    // 0x50C(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2F38[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        InhibitTransformIfSurpassBrokenWeakPointNumConfig; // 0x510(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        InhibitTransformNoticeIDByBlock;                   // 0x514(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               TransformToWheelBoxExtent;                         // 0x518(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TransformToWheelOverlapOffset;                     // 0x524(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxFallingSpeedForTransformingWheel;               // 0x528(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        InhibitTransformNoticeIDByFallingSpeed;            // 0x52C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class USolarVehicleGA_WheelTransform* GetDefaultObj();

};

// 0x18 (0x4F0 - 0x4D8)
// Class Solarland.SolarVehicleGA_WholeShield
class USolarVehicleGA_WholeShield : public USolarVehicleGameplayAbility
{
public:
	uint8                                        Pad_2F39[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarVehicleGA_WholeShield* GetDefaultObj();

};

// 0x8 (0x4E0 - 0x4D8)
// Class Solarland.SolarVehicleGA_ZombieTruck
class USolarVehicleGA_ZombieTruck : public USolarVehicleGameplayAbility
{
public:
	float                                        PlatformAttachDegree;                              // 0x4D8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2F3A[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarVehicleGA_ZombieTruck* GetDefaultObj();

};

// 0x818 (0x12A8 - 0xA90)
// Class Solarland.SolarVehicleWeapon
class ASolarVehicleWeapon : public ASolarWeapon
{
public:
	uint8                                        Pad_2F3C[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        MaxWeaponPitch;                                    // 0xA98(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinWeaponPitch;                                    // 0xA9C(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxWeaponYaw;                                      // 0xAA0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinWeaponYaw;                                      // 0xAA4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PitchFollowSpeed;                                  // 0xAA8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        YawFollowSpeed;                                    // 0xAAC(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SimulationSmoothLerpSpeed;                         // 0xAB0(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SimulationSmoothLerpThreshold;                     // 0xAB4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAbsoluteRotator;                                  // 0xAB8(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHasScope;                                         // 0xAB9(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHiddenMesh;                                       // 0xABA(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2F3D[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               ScopeCameraOffset;                                 // 0xABC(0xC)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               ScopeTargetOffset;                                 // 0xAC8(0xC)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ScopeCameraDistance;                               // 0xAD4(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ScopeBlendTime;                                    // 0xAD8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2F3E[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UVehicleCameraDataAsset*               ScopeCameraData;                                   // 0xAE0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ScopeFOVSwitchSpeed;                               // 0xAE8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        QuickAdsFireDelay;                                 // 0xAEC(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EVehicleWeaponScopeType           DefaultWeaponScopeType;                            // 0xAF0(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2F3F[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UVehicleWeaponScopeWidget> ScopeUI;                                           // 0xAF8(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PitchCameraOffset;                                 // 0xB00(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCameraFocusWeapon;                                // 0xB04(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseNormalCameraMode;                              // 0xB05(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EWeaponFireModeType               FireType;                                          // 0xB06(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2F40[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  FireSocketName;                                    // 0xB08(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        UpdateShotStartLocThreshold;                       // 0xB10(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EAxis                             FireAixsType;                                      // 0xB14(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2F41[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  TurretVSocketName;                                 // 0xB18(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  TurretHSocketName;                                 // 0xB20(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ShootTolerance;                                    // 0xB28(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2F42[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ASolarVehiclePawn*                     AttachedVehicle;                                   // 0xB30(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ASolarCharacter*                       WeaponOwner;                                       // 0xB38(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bVehicleWeaponScopeOpen;                           // 0xB40(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bActivedWeapon;                                    // 0xB41(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2F43[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	uint32                                       RotationYawAndPitchPacket;                         // 0xB44(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2F44[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class USkeletalMeshComponent*                VehicleMesh;                                       // 0xB60(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftClassPtr<class USkeletalMeshComponent>  VehicleStencilClass;                               // 0xB68(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkeletalMeshComponent*                VehicleStencilNew;                                 // 0xB90(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  AttachBoneName;                                    // 0xB98(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class ASolarCharacter>        CahedLastOwner;                                    // 0xBA0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2F45[0x338];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	uint8                                        bUseAssistLock : 1;                                // Mask: 0x1, PropSize: 0x10xEE0(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bShowAssistLockUI : 1;                             // Mask: 0x2, PropSize: 0x10xEE0(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_1EE : 6;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_2F46[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector2D                             AssistLockImageSize;                               // 0xEE4(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             PCAssistLockImageSize;                             // 0xEEC(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        bAutoLockSpreadSwitch : 1;                         // Mask: 0x1, PropSize: 0x10xEF4(0x1)(Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        BitPad_1EF : 7;                                    // Fixing Bit-Field Size  [ Dumper-7 ]
	uint8                                        Pad_2F47[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        AutoLockSpreadDecPerSecond;                        // 0xEF8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        PreSelectProgress;                                 // 0xEFC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                    ProgressUpgradeSpeedCurve;                         // 0xF00(0x88)(Edit, NativeAccessSpecifierPublic)
	enum class EAssistLockState                  AssistLockState;                                   // 0xF88(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSimulateWeaponFireSocket;                         // 0xF89(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2F48[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TriggerSmoothReticleDistance;                      // 0xF8C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             SmoothReticleSpeed;                                // 0xF90(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2F49[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            CachedWeaponRelativeTransform;                     // 0xFA0(0x30)(Edit, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FTransform                            CachedFireMuzzleTransform;                         // 0xFD0(0x30)(Edit, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FTransform                            CachedTurretVSocketTransform;                      // 0x1000(0x30)(Edit, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FTransform                            CachedTurretHSocketTransform;                      // 0x1030(0x30)(Edit, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                        SimulateMuzzleDistanceThreshold;                   // 0x1060(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2F4A[0x5C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class ASolarBullet>              VehicleWeaponPrimaryOverrideBulletClass;           // 0x10C0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ASolarBullet>              VehicleWeaponSecondaryOverrideBulletClass;         // 0x10C8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ASolarBullet>              VehicleWeaponPrimaryOverrideTraceBulletClass;      // 0x10D0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                 BlockVehicleWeaponFireTags;                        // 0x10D8(0x20)(Edit, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2F4B[0x19];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bEnablePreAimingLaser;                             // 0x1111(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bNotOptTickIntervalPreAimingActive;                // 0x1112(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2F4C[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  PreAimingLaserLaunchScoket;                        // 0x1114(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2F4D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UParticleSystem>        PreAimingLaserFX;                                  // 0x1120(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UParticleSystem>        PreAimingLaserEnermyFX;                            // 0x1148(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        PreAimingLaserChagringPhase;                       // 0x1170(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2F4E[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UParticleSystemComponent*              PreAimingLaserEffect;                              // 0x1178(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bEnableBackupAmmo;                                 // 0x1180(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2F4F[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        BackupAmmoFireCost;                                // 0x1184(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MaxBackupAmmo;                                     // 0x1188(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ReloadBackupAmmoInterval;                          // 0x118C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        ReloadBackupAmmoNum;                               // 0x1190(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        CurrentBackupAmmo;                                 // 0x1194(0x4)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2F50[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bEnableRechamber;                                  // 0x11A0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2F51[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        PlayRechamberFinishTime;                           // 0x11A4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2F52[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                RechamberStartAndStopSound;                        // 0x11B0(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                RechamberFinishSound;                              // 0x11C0(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVehicleVFX                           RechamberAlertVFX;                                 // 0x11D0(0x90)(Edit, NativeAccessSpecifierPublic)
	int32                                        RechamberAlertMaterialIndex;                       // 0x1260(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bKeepWeaponStateAfterUncontrolled;                 // 0x1264(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2F53[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                ReloadSoundName1P;                                 // 0x1268(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                ReloadSoundName3P;                                 // 0x1278(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                ReloadSoundName3PEnemy;                            // 0x1288(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bReloadingAfterUncontrol;                          // 0x1298(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2F54[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class USolarVehicleGameplayAbility> ReloadAbilityClass;                                // 0x12A0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class ASolarVehicleWeapon* GetDefaultObj();

	void VehicleWeaponOpenScope();
	void VehicleWeaponCloseScope();
	void ServerUpdateVehicleWeaponRotate(uint32 PackedRotation);
	void ServerSendCurveShotHit(uint32 SpawnID, float InTime, class ASolarPlayerController* InPlayerController, struct FHitResult& InHit);
	void ServerCancelVehicleFireAbility(struct FGameplayAbilitySpecHandle& InAbilityHandle);
	void ServerAddWeaponFireTagToCharacter(class ASolarCharacter* InFiredCharacter);
	void ResetWeaponRotation(float DeltaTime);
	void OnVehicleWeaponUnControlled();
	void OnVehicleWeaponControlled();
	void OnStencilLoaded();
	void OnRep_BackupAmmoChanged(int32 InOldAmmo);
	void LocallyVehicleWeaponTick(float DeltaTime);
	bool IsPlayerLocallyControlledWeapon();
	void InitializeVehicleWeapon(class ASolarVehiclePawn* VehicleWeaponOwner, class FName& WeaponAttachSocket);
	struct FVector GetShotTargetLocation();
	enum class EWeaponFireModeType GetFireType();
	struct FVector GetAimTargetLocation();
	void ClientFinishedWeaponReload();
	void ClientDrawDebugString(struct FVector& TextLocation, const class FString& Text, struct FColor& TextColor, float Duration);
	bool CheckCanOpenScope();
	bool CanEnterFireState();
};

// 0x8 (0x12B0 - 0x12A8)
// Class Solarland.SolarVehicleGatlingWeapon
class ASolarVehicleGatlingWeapon : public ASolarVehicleWeapon
{
public:
	uint8                                        Pad_2F55[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASolarVehicleGatlingWeapon* GetDefaultObj();

};

// 0x30 (0x80 - 0x50)
// Class Solarland.SolarVehicleGC_BrokenDanger
class USolarVehicleGC_BrokenDanger : public UGameplayCueNotify_Static
{
public:
	TSoftObjectPtr<class UMaterialInterface>     SourceMaterial;                                    // 0x50(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2F56[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarVehicleGC_BrokenDanger* GetDefaultObj();

};

// 0x0 (0x50 - 0x50)
// Class Solarland.SolarVehicleGC_EquipWeapon
class USolarVehicleGC_EquipWeapon : public UGameplayCueNotify_Static
{
public:

	static class UClass* StaticClass();
	static class USolarVehicleGC_EquipWeapon* GetDefaultObj();

};

// 0x10 (0x60 - 0x50)
// Class Solarland.SolarVehicleGC_HoverJump
class USolarVehicleGC_HoverJump : public UGameplayCueNotify_Static
{
public:
	TArray<struct FVehicleVFX>                   HoverJumpVFXes;                                    // 0x50(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class USolarVehicleGC_HoverJump* GetDefaultObj();

};

// 0x0 (0x50 - 0x50)
// Class Solarland.SolarVehicleGC_ZombieTruck
class USolarVehicleGC_ZombieTruck : public UGameplayCueNotify_Static
{
public:

	static class UClass* StaticClass();
	static class USolarVehicleGC_ZombieTruck* GetDefaultObj();

};

// 0x8 (0x2A0 - 0x298)
// Class Solarland.SolarVehicleGCNotify_Actor
class ASolarVehicleGCNotify_Actor : public AGameplayCueNotify_Actor
{
public:
	uint8                                        Pad_2F57[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASolarVehicleGCNotify_Actor* GetDefaultObj();

};

// 0x150 (0x498 - 0x348)
// Class Solarland.SolarVehicleHealthWidget
class USolarVehicleHealthWidget : public USolarUserWidget
{
public:
	TMap<int32, struct FVehicleHealthResource>   VehicleHealthResourceMap;                          // 0x348(0x50)(Edit, Transient, NativeAccessSpecifierPublic)
	class UProgressBar*                          ProgressBar_Health;                                // 0x398(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                            Txt_Health;                                        // 0x3A0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                            Txt_Health_percent;                                // 0x3A8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                Img_Health;                                        // 0x3B0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCanvasPanel*                          UI_Vehicle_Health_Anim;                            // 0x3B8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      CarHealth_Loop_Anim;                               // 0x3C0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UImage*>                        WeakPointImgs;                                     // 0x3C8(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          VehicleNormalColor;                                // 0x3D8(0x10)(Edit, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          VehicleDamageColor;                                // 0x3E8(0x10)(Edit, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          VehicleBrokenColor;                                // 0x3F8(0x10)(Edit, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          VehicleFillImageNormalColor;                       // 0x408(0x10)(Edit, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          VehicleFillImageDamageColor;                       // 0x418(0x10)(Edit, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          VehicleFillImageBrokenColor;                       // 0x428(0x10)(Edit, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          WeakNormalColor;                                   // 0x438(0x10)(Edit, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          WeakDamageColor;                                   // 0x448(0x10)(Edit, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          WeakBrokenColor;                                   // 0x458(0x10)(Edit, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                          RepairingColor;                                    // 0x468(0x10)(Edit, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2F59[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarVehicleHealthWidget* GetDefaultObj();

	void InitHealthUI(class ASolarVehiclePawn* InVehiclePawn, bool bInDriveControl);
};

// 0x58 (0x1300 - 0x12A8)
// Class Solarland.SolarVehicleHoverWeapon
class ASolarVehicleHoverWeapon : public ASolarVehicleWeapon
{
public:
	float                                        MoveDelayTime;                                     // 0x12A8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        InterpSpeed;                                       // 0x12AC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               WeaponOpenOffset;                                  // 0x12B0(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2F5A[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UCurveFloat*                           WeaponHoverOffsetCurve;                            // 0x12C0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2F5B[0x38];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASolarVehicleHoverWeapon* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Solarland.WheeledVehicleInterface
class IWheeledVehicleInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IWheeledVehicleInterface* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Solarland.VehicleWeaponAnimInterface
class IVehicleWeaponAnimInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class IVehicleWeaponAnimInterface* GetDefaultObj();

};

// 0x58 (0x1300 - 0x12A8)
// Class Solarland.SolarVehicleIronManWeapon
class ASolarVehicleIronManWeapon : public ASolarVehicleWeapon
{
public:
	TSoftObjectPtr<class UAnimMontage>           DriverStandAttackRight;                            // 0x12A8(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UAnimMontage>           DriverLieAttackRight;                              // 0x12D0(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  AttackSectionName;                                 // 0x12F8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class ASolarVehicleIronManWeapon* GetDefaultObj();

	class USkeletalMeshComponent* GetDriverCharacterMesh();
};

// 0x58 (0x1300 - 0x12A8)
// Class Solarland.SolarVehicleLegTurretWeapon
class ASolarVehicleLegTurretWeapon : public ASolarVehicleWeapon
{
public:
	TArray<struct FBoneIKPreset>                 TargetIKSettings;                                  // 0x12A8(0x10)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        IKBlendSpeed;                                      // 0x12B8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  LeftMuzzleName;                                    // 0x12BC(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  RightMuzzleName;                                   // 0x12C4(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               TargetLeftBoneIK;                                  // 0x12CC(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               TargetRightBoneIK;                                 // 0x12D8(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               CurrentLeftBoneIK;                                 // 0x12E4(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               CurrentRightBoneIK;                                // 0x12F0(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2F5C[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASolarVehicleLegTurretWeapon* GetDefaultObj();

};

// 0x0 (0x2A0 - 0x2A0)
// Class Solarland.SolarVehicleNosGCNotify_Actor
class ASolarVehicleNosGCNotify_Actor : public ASolarVehicleGCNotify_Actor
{
public:

	static class UClass* StaticClass();
	static class ASolarVehicleNosGCNotify_Actor* GetDefaultObj();

};

// 0x428 (0x16D0 - 0x12A8)
// Class Solarland.SolarVehicleRocketLauncherWeapon
class ASolarVehicleRocketLauncherWeapon : public ASolarVehicleWeapon
{
public:
	TArray<struct FBombingAreaData>              BombingAreaDatas;                                  // 0x12A8(0x10)(Net, ZeroConstructor, Transient, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class ERocketFireMode                   RocketFireMode;                                    // 0x12B8(0x1)(Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2F5E[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<int32, struct FBombingAreaAsset>        BombingAreaAssetMap;                               // 0x12C0(0x50)(Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2F5F[0x30];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FSpawnedRocketData>            SpawnedRocketDatas;                                // 0x1340(0x10)(ZeroConstructor, Transient, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2F60[0x160];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	struct FBombingAreaAsset                     PreviewRangeAsset;                                 // 0x14B0(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FBombingAreaAsset                     BombingAreaAimAsset;                               // 0x1510(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FBombingAreaAsset                     BombingAreaWarningAsset;                           // 0x1570(0x60)(Edit, BlueprintVisible, BlueprintReadOnly, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UStaticMesh>            AlertLineMeshClass;                                // 0x15D0(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, Transient, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UParticleSystem>        FireMuzzleParticle;                                // 0x15F8(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        BombingAreaBlendTime;                              // 0x1620(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FFireModeSetting                      RocketFireModeSettings[0x2];                       // 0x1624(0x70)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                        ResetOwnerTimer;                                   // 0x1694(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SpawnRocketHight;                                  // 0x1698(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2F61[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class FName>                          MuzzleSocketNames;                                 // 0x16A0(0x10)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                RocketLaunchSound_1P;                              // 0x16B0(0x10)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                RocketLaunchSound_3P;                              // 0x16C0(0x10)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class ASolarVehicleRocketLauncherWeapon* GetDefaultObj();

	void ServerRocketLauncherRealFire(int32 InFireCounter);
	void ServerActivateRocketLauncherFire(struct FVector_NetQuantize& InTargetLocation, int32 InFireCount);
	void OnRocketLauncherRealFire(int32 InFireCounter);
	void OnRep_RocketSpawnerChanged();
	void OnRep_RocketFireModeChanged();
	void OnLocallyActiveFire(int32 InFireCount);
	void MulticastRocketLauncherRealFire(int32 InFireCounter);
	void MulticastPrepareRocketSpawn(struct FVector_NetQuantize& InLocation, enum class ERocketFireMode InFireMode);
};

// 0x1E0 (0x218 - 0x38)
// Class Solarland.SolarVehicleSettings
class USolarVehicleSettings : public UDeveloperSettings
{
public:
	float                                        HpLowerLimitInNormalStatus;                        // 0x38(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HpLowerLimitInDamagedStatus;                       // 0x3C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehicleHitTimer;                                   // 0x40(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ReplicatedDelayTimer;                              // 0x44(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WaterToDestoryTime;                                // 0x48(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxWarningTweenRate;                               // 0x4C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinWarningTweenRate;                               // 0x50(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinDangerWarningOpacity;                           // 0x54(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinProgressBarWarningOpacity;                      // 0x58(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehicleBurningSpendTimer;                          // 0x5C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehicleBurningDeltaTime;                           // 0x60(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DisableOverlapTimer;                               // 0x64(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ResetOwnerTimer;                                   // 0x68(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MeshLodLevelForDefaultDeviceLocalPlayer;           // 0x6C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        MeshLodLevelForLowDeviceLocalPlayer;               // 0x70(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        AutoBrakeTimerWithoutDriver;                       // 0x74(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  WeakPointVFXParamterName;                          // 0x78(0x8)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WeakPointVFXDefaultValue;                          // 0x80(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WeakPointVFXStartValue;                            // 0x84(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WeakPointVFXTargetValue;                           // 0x88(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WeakPointVFXDuration;                              // 0x8C(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  LeftFootLocationXCurve;                            // 0x90(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  RightFootLocationXCurve;                           // 0x98(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  LeftFootLocationZCurve;                            // 0xA0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  RightFootLocationZCurve;                           // 0xA8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        WeaponMagnifiers[0x4];                             // 0xB0(0x10)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class USolarVehicleGameplayAbility> FireAbilityClass;                                  // 0xC0(0x8)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehicleScopeFovBlendTime;                          // 0xC8(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehicleOutShootFovCoefficients[0x8];               // 0xCC(0x20)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2F62[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UMaterialInterface>     VehiclePreviewDissolveMat;                         // 0xF0(0x28)(Edit, Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UMaterialInterface>     VehiclePreviewFresnelMat;                          // 0x118(0x28)(Edit, Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UCurveVector>           VehiclePreviewDissolveCurve;                       // 0x140(0x28)(Edit, Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UCurveVector>           VehiclePreviewFresnelCurve;                        // 0x168(0x28)(Edit, Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehiclePreviewDelayShowSeconds;                    // 0x190(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        VehiclePreviewMeshSortPriority;                    // 0x194(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        VehiclePreviewMirrorMeshSortPriority;              // 0x198(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        VehiclePreviewVFXSortPriority;                     // 0x19C(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        VehiclePreviewMirrorVFXSortPriority;               // 0x1A0(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        VehiclePreviewPlayAnimSound[0xA];                  // 0x1A4(0xA)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2F63[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        VehicleHitTimerForAntiCheating;                    // 0x1B0(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2F64[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<enum class ESolarShakeMainType, float>  VehicleVibrationMultiplier;                        // 0x1B8(0x50)(Edit, Config, NativeAccessSpecifierPublic)
	float                                        ForceUpdateProceduralAnimationToTargetTimeThreshold; // 0x208(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ServerBufferCheckFrameInterval;                    // 0x20C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ServerBufferCheckTimeInterval;                     // 0x210(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ServerBufferCheckCount;                            // 0x214(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class USolarVehicleSettings* GetDefaultObj();

	class USolarVehicleSettings* Get();
};

// 0x118 (0x13C0 - 0x12A8)
// Class Solarland.SolarVehicleSiegeWeapon
class ASolarVehicleSiegeWeapon : public ASolarVehicleWeapon
{
public:
	TSoftObjectPtr<class UParticleSystem>        BulletTargetAreaInSameTeam;                        // 0x12A8(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UMaterialInterface>     BulletDecalMaterialInSameTeam;                     // 0x12D0(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UParticleSystem>        BulletTargetAreaInEnemy;                           // 0x12F8(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UMaterialInterface>     BulletDecalMaterialInEnemy;                        // 0x1320(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AreaParticleScale;                                 // 0x1348(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               AreaDecalSize;                                     // 0x134C(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AreaFadeOutTime;                                   // 0x1358(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  AreaFadeOutName;                                   // 0x135C(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AreaDisplayDistance;                               // 0x1364(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AreaBlockThreshold;                                // 0x1368(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2F65[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<struct FFireUniqueID, struct FBulletExplodedAreaData> BulletAreaParticleMap;                             // 0x1370(0x50)(ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class ASolarVehicleSiegeWeapon* GetDefaultObj();

	void OnBulletSpawned(struct FPredictProjectilePathResult& InHitResult);
};

// 0x1C0 (0x3E8 - 0x228)
// Class Solarland.SolarVehicleSmoke
class ASolarVehicleSmoke : public AActor
{
public:
	float                                        Duration;                                          // 0x228(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2F66[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRuntimeFloatCurve                    AppearCurve;                                       // 0x230(0x88)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FRuntimeFloatCurve                    DisappearCurve;                                    // 0x2B8(0x88)(Edit, Protected, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UParticleSystem>        SmokeEffect;                                       // 0x340(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAkComponent*                          AkAudioComponent;                                  // 0x368(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  SmokeFadeName;                                     // 0x370(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                SoundBegin;                                        // 0x378(0x10)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                SoundLoop;                                         // 0x388(0x10)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                SoundLoopEnd;                                      // 0x398(0x10)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        SmokeTranslucentSortPriority;                      // 0x3A8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2F67[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UParticleSystemComponent*              SmokeEffectComp;                                   // 0x3B0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2F68[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bSmokeWaitToDestory;                               // 0x3C0(0x1)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2F69[0x27];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASolarVehicleSmoke* GetDefaultObj();

	void OnRep_SmokeWaitToDestory();
	void OnEffectPlayOver();
};

// 0x5D8 (0x608 - 0x30)
// Class Solarland.SolarVehicleSoundDataAsset
class USolarVehicleSoundDataAsset : public UDataAsset
{
public:
	class FString                                Engine_3P;                                         // 0x30(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Engine_3P_Enemy;                                   // 0x40(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Engine_Down_3P;                                    // 0x50(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Engine_Down_3P_Enemy;                              // 0x60(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Engine_RTPC;                                       // 0x70(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Engine_Stop_3P;                                    // 0x80(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Engine_Stop_3P_Enemy;                              // 0x90(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Engine_Input_RTPC;                                 // 0xA0(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxMoveSpeed;                                      // 0xB0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2F6A[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                MoveSpeed_Acc_RTPC;                                // 0xB8(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Tire_3P;                                           // 0xC8(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Tire_3P_Enemy;                                     // 0xD8(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Tire_End_3P;                                       // 0xE8(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Tire_End_3P_Enemy;                                 // 0xF8(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Tire_RTPC;                                         // 0x108(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Tire_Group;                                        // 0x118(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<enum class EPhysicalSurface, class FString> Tire_States;                                       // 0x128(0x50)(Edit, NativeAccessSpecifierPublic)
	bool                                         bUseEngineRpm;                                     // 0x178(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2F6B[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                Vehicle_Collision_3P;                              // 0x180(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Vehicle_Collision_3P_Enemy;                        // 0x190(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Vehicle_Collision_RTPC;                            // 0x1A0(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Play_Booster_3P;                                   // 0x1B0(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Play_Booster_3P_Enemy;                             // 0x1C0(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Stop_Booster_3P;                                   // 0x1D0(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Stop_Booster_3P_Enemy;                             // 0x1E0(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Vehicle_Speedboard_1P;                             // 0x1F0(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Vehicle_Speedboard_3P;                             // 0x200(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Vehicle_Speedboard_3P_Enemy;                       // 0x210(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Vehicle_Eject_1P;                                  // 0x220(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Vehicle_Eject_3P;                                  // 0x230(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Vehicle_Eject_3P_Enemy;                            // 0x240(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Play_Vehicle_Destroyed;                            // 0x250(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Weakpoint_Broken_3P;                               // 0x260(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Weakpoint_Broken_3P_Enemy;                         // 0x270(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Weakpoint_Fixed_3P;                                // 0x280(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Weakpoint_Fixed_3P_Enemy;                          // 0x290(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Engine_Start_3P;                                   // 0x2A0(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Engine_Start_3P_Enemy;                             // 0x2B0(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Braking_Loop_RTPC;                                 // 0x2C0(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Play_Braking_Loop_3P;                              // 0x2D0(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Play_Braking_Loop_3P_Enemy;                        // 0x2E0(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Stop_Braking_Loop_3P;                              // 0x2F0(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Stop_Braking_Loop_3P_Enemy;                        // 0x300(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BrakingLoopSoundDegree;                            // 0x310(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BrakingLoopSoundSpeed;                             // 0x314(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Play_Reverse_Loop;                                 // 0x318(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Stop_Reverse_Loop;                                 // 0x328(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Drift_RTPC;                                        // 0x338(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Drift_Start;                                       // 0x348(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Drift_Stop;                                        // 0x358(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        SpeedDifferenceInKmThresholdForHitSound;           // 0x368(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2F6C[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                Play_SelfHealing_3P;                               // 0x370(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Stop_SelfHealing_3P;                               // 0x380(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Play_vehicle_crash_ground_3P;                      // 0x390(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Play_vehicle_crash_ground_3P_enemy;                // 0x3A0(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Vehicle_Crash_Ground_RTPC;                         // 0x3B0(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        VehicleCrashGroundRtpcMultiplier;                  // 0x3C0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2F6D[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                Play_vehicle_crash_water_3P;                       // 0x3C8(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Play_vehicle_crash_water_3P_enemy;                 // 0x3D8(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Play_vehicle_fixing_weakpoint_3P;                  // 0x3E8(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Stop_vehicle_fixing_weakpoint_3P;                  // 0x3F8(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Play_VehicleWholdShieldBegin_Start_1P;             // 0x408(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Play_VehicleWholdShieldBegin_Loop_1P;              // 0x418(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Stop_VehicleWholdShieldBegin_Start_3P;             // 0x428(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Stop_VehicleWholdShieldBegin_Loop_3P;              // 0x438(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Play_VehicleWholdShieldEnd_Start_1P;               // 0x448(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Play_VehicleWholdShieldEnd_Loop_1P;                // 0x458(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Stop_VehicleWholdShieldEnd_Start_3P;               // 0x468(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Stop_VehicleWholdShieldEnd_Loop_3P;                // 0x478(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Play_HitVehicleWholdShield_1P;                     // 0x488(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Play_HitVehicleWholdShield_3P;                     // 0x498(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                HoverJumpOnActive1P;                               // 0x4A8(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                HoverJumpOnActive3P;                               // 0x4B8(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                HoverJumpWhileActive1P;                            // 0x4C8(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                HoverJumpWhileActive3P;                            // 0x4D8(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                HoverJumpOnRemove1P;                               // 0x4E8(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                HoverJumpOnRemove3P;                               // 0x4F8(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Play_VehicleTrumpet_1P;                            // 0x508(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Play_VehicleTrumpet_3P;                            // 0x518(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Stop_VehicleTrumpet_1P;                            // 0x528(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Stop_VehicleTrumpet_3P;                            // 0x538(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Play_vehicle_common_braking_loop_3P;               // 0x548(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Play_vehicle_common_braking_loop_3P_enemy;         // 0x558(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Stop_vehicle_common_braking_loop_3P;               // 0x568(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Stop_vehicle_common_braking_loop_3P_enemy;         // 0x578(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Play_Vehicle_UpShift_3P;                           // 0x588(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Play_Vehicle_UpShift_3P_Enemy;                     // 0x598(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Play_Vehicle_DownShift_3P;                         // 0x5A8(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Play_Vehicle_DownShift_3P_Enemy;                   // 0x5B8(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Play_IronMan_Laser_Hit;                            // 0x5C8(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                FootPlant;                                         // 0x5D8(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Landing_3P;                                        // 0x5E8(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                Landing_3P_Enemy;                                  // 0x5F8(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class USolarVehicleSoundDataAsset* GetDefaultObj();

};

// 0x38 (0x260 - 0x228)
// Class Solarland.SolarVehicleSpawnEffect
class ASolarVehicleSpawnEffect : public AActor
{
public:
	class UBoxComponent*                         BoxCollision;                                      // 0x228(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  EffectMaterialParameterName;                       // 0x230(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UStaticMeshComponent*>          EffectMeshComponentArray;                          // 0x238(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        VehicleID;                                         // 0x248(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               BoxExtent;                                         // 0x24C(0xC)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        EffectTime;                                        // 0x258(0x4)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2F6F[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASolarVehicleSpawnEffect* GetDefaultObj();

	class UStaticMesh* GetVehicleMesh(int32 InVehicleID);
};

// 0xA0 (0x430 - 0x390)
// Class Solarland.SolarVehicleSpawner
class ASolarVehicleSpawner : public ASolarItemSpawner
{
public:
	uint8                                        Pad_2F71[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        SpawnID;                                           // 0x394(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EVehicleSpawnType                 VehicleSpawnType;                                  // 0x398(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2F72[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bVehicleRefresh;                                   // 0x3A0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2F73[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        VehicleRefreshSecond;                              // 0x3A4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bVehicleRefreshRand;                               // 0x3A8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bVehicleRefreshWaitPreBroken;                      // 0x3A9(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2F74[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int64                                        VehicleRefreshCheckRoleDisSquared;                 // 0x3B0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<enum class EObjectTypeQuery>          VehicleCheckObjectTypes;                           // 0x3B8(0x10)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               VehicleCheckBoxSize;                               // 0x3C8(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2F75[0x1C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftClassPtr<class ASolarVehicleSpawnEffect> VehicleSpawnEffectClass;                           // 0x3F0(0x28)(Edit, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ASolarVehicleSpawnEffect*              VehicleSpawnEffect;                                // 0x418(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2F76[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSpawnedActorHandle                   CachedActorHandle;                                 // 0x428(0x4)(NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2F77[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASolarVehicleSpawner* GetDefaultObj();

	void StartVehicleRefreshTimer();
	void PlayVehicleSpawnEffectFinished();
	void OnVehicleRefreshCheck();
	void OnVehicleRefresh();
	void OnPreVehicleDriverGetOn(int32 GetOnSeatIndex, class ASolarCharacter* GetOnPlayer);
	void OnPreVehicleDestroyed(class AActor* DestroyedActor);
};

// 0x48 (0x440 - 0x3F8)
// Class Solarland.SolarVehicleSpringArmComponent
class USolarVehicleSpringArmComponent : public USolarSpringArmComponent
{
public:
	class USolarVehicleCameraComponent*          VehicleCamera;                                     // 0x3F8(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ASolarVehiclePawn*                     VehiclePawn;                                       // 0x400(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2F78[0x38];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarVehicleSpringArmComponent* GetDefaultObj();

};

// 0x70 (0x98 - 0x28)
// Class Solarland.SolarVehicleStateMachine
class USolarVehicleStateMachine : public UObject
{
public:
	class ASolarVehiclePawn*                     Owner;                                             // 0x28(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USolarLeggedVehicleMovement*           MovementComponent;                                 // 0x30(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2F79[0x60];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarVehicleStateMachine* GetDefaultObj();

};

// 0x70 (0xA0 - 0x30)
// Class Solarland.SolarVehicleSubsystem
class USolarVehicleSubsystem : public UWorldSubsystem
{
public:
	FMulticastInlineDelegateProperty_            OnVehicleSpawned;                                  // 0x30(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnVehicleDestroyed;                                // 0x40(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_2F7A[0x50];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarVehicleSubsystem* GetDefaultObj();

	void GetActiveVehicleList(TArray<class AActor*>* OutActiveVehicles);
};

// 0x0 (0x600 - 0x600)
// Class Solarland.SolarVehicleWeakPointComponent
class USolarVehicleWeakPointComponent : public UStaticMeshComponent
{
public:

	static class UClass* StaticClass();
	static class USolarVehicleWeakPointComponent* GetDefaultObj();

};

// 0x90 (0xC0 - 0x30)
// Class Solarland.SolarVibrateManager
class USolarVibrateManager : public USolarGameManager
{
public:
	uint8                                        Pad_2F7D[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UGameplayVibrateDataAsset*             GameplayVibrateDataAsset;                          // 0x50(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<enum class EGameplayVibrateCategory, enum class EGameplayVibrateIntensity> CurrentVibrateCategoryIntensity;                   // 0x58(0x50)(Protected, NativeAccessSpecifierProtected)
	class UDataTable*                            WeaponVibrateTable;                                // 0xA8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UVibrateConfig*                        VibrateConfig;                                     // 0xB0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EWeaponVibrateFactor              WeaponVibrateFactor;                               // 0xB8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2F7E[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        CacheWeaponChargeTime;                             // 0xBC(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class USolarVibrateManager* GetDefaultObj();

	void Stop();
	void SetWeaponVibrateFactor();
	void SetVibrateAbilityEnable(bool bOnEnable);
	void SetGameplayVibrateIntensityByUserSetting();
	void SetGameplayVibrateIntensity(enum class EGameplayVibrateCategory Category, enum class EGameplayVibrateIntensity Intensity);
	void SendLoopParam(int32 Amplitude, int32 Interval);
	void PlayWeaponVibrate(int32 InWeaponID, enum class EWeaponVibrateType InType, float InChargeTime);
	void Play(const class FString& Name, int32 Duration, int32 Loop, int32 Priority, int32 Interval, int32 Amplitude);
	bool GetVibrateAbilityEnable();
};

// 0x10 (0x510 - 0x500)
// Class Solarland.SolarVirtualBulletAKComponent
class USolarVirtualBulletAKComponent : public UAkComponent
{
public:
	uint8                                        Pad_2F7F[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarVirtualBulletAKComponent* GetDefaultObj();

};

// 0xB0 (0x160 - 0xB0)
// Class Solarland.SolarVirtualBulletCollector
class USolarVirtualBulletCollector : public UActorComponent
{
public:
	class ASolarWeapon*                          CacheWeapon;                                       // 0xB0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ASolarCharacterBase*                   CacheCharacter;                                    // 0xB8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWorld*                                CacheWorld;                                        // 0xC0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FSolarVirtualBullet>           Bullets;                                           // 0xC8(0x10)(ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FSolarVirtualBullet>           PendingBulletsInSimulated;                         // 0xD8(0x10)(ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FSolarVirtualBullet>           BulletsInSimulated;                                // 0xE8(0x10)(ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FSolarVirtualBullet>           BulletsInDedicatedServer;                          // 0xF8(0x10)(ZeroConstructor, Transient, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2F80[0x50];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class ASolarBullet*                          EffectBulletCDO;                                   // 0x158(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class USolarVirtualBulletCollector* GetDefaultObj();

};

// 0x0 (0xB0 - 0xB0)
// Class Solarland.SolarWarmGameComponent
class USolarWarmGameComponent : public UActorComponent
{
public:

	static class UClass* StaticClass();
	static class USolarWarmGameComponent* GetDefaultObj();

	bool IsWarmGame();
	void GetAIPickResult(TArray<int32>& InCharactetIDs, int32* OutCharacterID, int32* OutSkinId);
};

// 0x8 (0x240 - 0x238)
// Class Solarland.SolarWaterActorNew
class ASolarWaterActorNew : public AStaticMeshActor
{
public:
	struct FSpawnedActorHandle                   CachedActorHandle;                                 // 0x238(0x4)(NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2F83[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASolarWaterActorNew* GetDefaultObj();

	void OnExitWaterSurface(class UPrimitiveComponent* OverlappedComp, class AActor* Other, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void OnEnterWaterSurface(class UPrimitiveComponent* OverlappedComp, class AActor* Other, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	float GetWaterLineHeight();
};

// 0x18 (0x40 - 0x28)
// Class Solarland.ParticleLoopListener
class UParticleLoopListener : public UObject
{
public:
	uint8                                        Pad_2F84[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UParticleLoopListener* GetDefaultObj();

	void OnParticleFinished(class UParticleSystemComponent* PS);
};

// 0x2F0 (0x6D0 - 0x3E0)
// Class Solarland.SolarWeaponAbilityBlackHole
class ASolarWeaponAbilityBlackHole : public ASummonItemBase
{
public:
	uint8                                        Pad_2F86[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USphereComponent*                      CoreComponent;                                     // 0x3E8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<TWeakObjectPtr<class AActor>, struct FSolarBlackHoleTestActorInfo> TestActorMap;                                      // 0x3F0(0x50)(Transient, Protected, NativeAccessSpecifierProtected)
	class FName                                  CoreTag;                                           // 0x440(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<enum class EActorRegisterType>        TestTypes;                                         // 0x448(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TestRadius;                                        // 0x458(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ForbidAttractiveDistance;                          // 0x45C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AttractiveSpeedWhenNoInput;                        // 0x460(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AttractiveSpeedFactorForCharacterInWater;          // 0x464(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRuntimeFloatCurve                    MaxAttractiveSpeedReduceCurve;                     // 0x468(0x88)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FRuntimeFloatCurve                    AttractiveSpeedReduceAngleWeightCurve;             // 0x4F0(0x88)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FGameplayEffectSpecHandle             ToSelfGameplayEffectHandle;                        // 0x578(0x10)(BlueprintVisible, BlueprintReadOnly, Protected, ExposeOnSpawn, NativeAccessSpecifierProtected)
	struct FGameplayEffectSpecHandle             ToTargetGameplayEffectHandle;                      // 0x588(0x10)(BlueprintVisible, BlueprintReadOnly, Protected, ExposeOnSpawn, NativeAccessSpecifierProtected)
	TMap<enum class ESolarBlackHoleParticle, struct FSolarBlackHoleParticleInfo> ParticleInfoTable;                                 // 0x598(0x50)(Edit, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_2F87[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	enum class ESolarBlackHoleState              CurrentBlackHoleState;                             // 0x5F8(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2F88[0xB];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        BlackHoleReadyDuration;                            // 0x604(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        BlackHoleActiveDuration;                           // 0x608(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        BlackHoleEndDuration;                              // 0x60C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UGameplayEffect>           ZeroSpeedGameplayEffectClass;                      // 0x610(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          ForceAttractiveTag;                                // 0x618(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<TSubclassOf<class AActor>, float>       ClassTypeDamageValueMap;                           // 0x620(0x50)(Edit, Protected, NativeAccessSpecifierProtected)
	TArray<class USplineComponent*>              CardSplineArray;                                   // 0x670(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2F89[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class AActor*>                        CardArray;                                         // 0x688(0x10)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2F8A[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               CardStartLocation;                                 // 0x6A0(0xC)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2F8B[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        CardSpeed;                                         // 0x6B8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2F8C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class AActor>                    CardClass;                                         // 0x6C0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DefaultCardPathLength;                             // 0x6C8(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2F8D[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASolarWeaponAbilityBlackHole* GetDefaultObj();

	void OnTestActorEndPlay(class AActor* InActor, enum class EEndPlayReason InEndPlayReason);
};

// 0x18 (0x320 - 0x308)
// Class Solarland.SolarWeaponAbilityTemp
class ASolarWeaponAbilityTemp : public ASolarAbility
{
public:
	TSubclassOf<class UGameplayAbility>          GameplayAbilityClass;                              // 0x308(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayAbilitySpecHandle            GameplayAbilitySpecHandle;                         // 0x310(0x4)(NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2F8E[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASolarWeaponAbilityTemp* GetDefaultObj();

};

// 0x30 (0xB0 - 0x80)
// Class Solarland.SolarWeaponAT_TaskBase
class USolarWeaponAT_TaskBase : public USolarAbilityTask
{
public:
	FMulticastInlineDelegateProperty_            OnTaskEnd;                                         // 0x80(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UGameplayAbility*                      OwnerAbility;                                      // 0x90(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ASolarCharacter*                       TaskCharacter;                                     // 0x98(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWeaponSystemBase*                     TaskWeaponSysBase;                                 // 0xA0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2F8F[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarWeaponAT_TaskBase* GetDefaultObj();

	class USolarWeaponAT_TaskBase* CreateTaskDynamically(TSubclassOf<class USolarWeaponAT_TaskBase> RealClass, class UGameplayAbility* OwningAbility, class FName TaskInstanceName, class ASolarCharacter* InCharacter);
};

// 0x10 (0xC0 - 0xB0)
// Class Solarland.SolarWeaponAT_CtrlFireBase
class USolarWeaponAT_CtrlFireBase : public USolarWeaponAT_TaskBase
{
public:
	FMulticastInlineDelegateProperty_            OnDoFire;                                          // 0xB0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class USolarWeaponAT_CtrlFireBase* GetDefaultObj();

};

// 0x0 (0xC0 - 0xC0)
// Class Solarland.SolarWeaponAT_CtrlFireCharge
class USolarWeaponAT_CtrlFireCharge : public USolarWeaponAT_CtrlFireBase
{
public:

	static class UClass* StaticClass();
	static class USolarWeaponAT_CtrlFireCharge* GetDefaultObj();

};

// 0x8 (0xC8 - 0xC0)
// Class Solarland.SolarWeaponAT_CtrlFireGatling
class USolarWeaponAT_CtrlFireGatling : public USolarWeaponAT_CtrlFireBase
{
public:
	uint8                                        Pad_2F90[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarWeaponAT_CtrlFireGatling* GetDefaultObj();

};

// 0x30 (0xE0 - 0xB0)
// Class Solarland.SolarWeaponAT_FireBase
class USolarWeaponAT_FireBase : public USolarWeaponAT_TaskBase
{
public:
	uint8                                        Pad_2F91[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UAmmoConfig*                           Ammo;                                              // 0xC8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2F92[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarWeaponAT_FireBase* GetDefaultObj();

	void K2_RequireEndFireTask();
	void K2_RealFireTick(float DeltaTime);
	void K2_PrepareRealFire();
	void K2_ActivateRealFire();
};

// 0x20 (0x100 - 0xE0)
// Class Solarland.SolarWeaponAT_FireBurst
class USolarWeaponAT_FireBurst : public USolarWeaponAT_FireBase
{
public:
	int32                                        BurstMaxCount;                                     // 0xE0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        BurstFireInterval;                                 // 0xE4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FireGroupInterval;                                 // 0xE8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAutoNextBurst;                                    // 0xEC(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2F93[0x13];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarWeaponAT_FireBurst* GetDefaultObj();

};

// 0x190 (0x240 - 0xB0)
// Class Solarland.WeaponFireLaserCollector
class UWeaponFireLaserCollector : public UActorComponent
{
public:
	uint8                                        Pad_2F94[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ASolarWeapon*                          OwnerWeapon;                                       // 0xB8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkComponent*                          FireAkComponent;                                   // 0xC0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkComponent*                          ImpactAkComponent;                                 // 0xC8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FWeaponFireLaserElement               ActElement;                                        // 0xD0(0x48)(NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<struct FWeaponFireLaserElement>       FadingElements;                                    // 0x118(0x10)(ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2F95[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UParticleSystem*                       ExplodeEffectParticle;                             // 0x140(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystem*                       DecalsEffectParticle;                              // 0x148(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UParticleSystemComponent*>      CacheParticles;                                    // 0x150(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2F96[0xE0];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UWeaponFireLaserCollector* GetDefaultObj();

};

// 0x150 (0x230 - 0xE0)
// Class Solarland.SolarWeaponAT_FireLaser
class USolarWeaponAT_FireLaser : public USolarWeaponAT_FireBase
{
public:
	float                                        LaserMaxTime;                                      // 0xE0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        DamageCount;                                       // 0xE4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UGameplayEffect>           VehicleBlockEffect;                                // 0xE8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                           LaserAttackCurve;                                  // 0xF0(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       LaserEffectParticle;                               // 0xF8(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                           LaserEffectCurve;                                  // 0x100(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       ExplodeEffectParticle;                             // 0x108(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTransform                            ExplodeEffectTransform;                            // 0x110(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	class UParticleSystem*                       DecalsEffectParticle;                              // 0x140(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2F97[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            DecalEffectTransform;                              // 0x150(0x30)(Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                        UpdateExplodeInterval;                             // 0x180(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        UpdateSimInterval;                                 // 0x184(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        LaserEffectFadeSpeed;                              // 0x188(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxFadingLifeTime;                                 // 0x18C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        UIAnimLength;                                      // 0x190(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2F98[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                LaserFireSound;                                    // 0x198(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                LaserStopSound;                                    // 0x1A8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                LaserBigSound;                                     // 0x1B8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                LaserImpactFireSound;                              // 0x1C8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                LaserImpactStopSound;                              // 0x1D8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                LaserImpactBigSound;                               // 0x1E8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShowLaserDamageDebug;                             // 0x1F8(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2F99[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  BeamLifeTimeParamName;                             // 0x1FC(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  BeamSizeParamName;                                 // 0x204(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2F9A[0x24];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarWeaponAT_FireLaser* GetDefaultObj();

	class USolarWeaponAT_FireLaser* CreateTask(class UGameplayAbility* OwningAbility, class FName TaskInstanceName, class ASolarCharacter* InCharacter);
};

// 0x0 (0xE0 - 0xE0)
// Class Solarland.SolarWeaponAT_FireNormal
class USolarWeaponAT_FireNormal : public USolarWeaponAT_FireBase
{
public:

	static class UClass* StaticClass();
	static class USolarWeaponAT_FireNormal* GetDefaultObj();

};

// 0x20 (0x100 - 0xE0)
// Class Solarland.SolarWeaponAT_FireRocket
class USolarWeaponAT_FireRocket : public USolarWeaponAT_FireBase
{
public:
	float                                        PerRocketInterval;                                 // 0xE0(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FireGroupInterval;                                 // 0xE4(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ASolarVehicleRocketLauncherWeapon*     RocketLauncherWeapon;                              // 0xE8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2F9B[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarWeaponAT_FireRocket* GetDefaultObj();

};

// 0x8 (0xE8 - 0xE0)
// Class Solarland.SolarWeaponAT_FireSingle
class USolarWeaponAT_FireSingle : public USolarWeaponAT_FireBase
{
public:
	bool                                         bAutoNextFire;                                     // 0xE0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2F9C[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarWeaponAT_FireSingle* GetDefaultObj();

};

// 0x0 (0xE0 - 0xE0)
// Class Solarland.SolarWeaponAT_FireSkill
class USolarWeaponAT_FireSkill : public USolarWeaponAT_FireBase
{
public:

	static class UClass* StaticClass();
	static class USolarWeaponAT_FireSkill* GetDefaultObj();

};

// 0x8 (0xE8 - 0xE0)
// Class Solarland.SolarWeaponAT_FireSummon
class USolarWeaponAT_FireSummon : public USolarWeaponAT_FireBase
{
public:
	uint8                                        Pad_2F9D[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarWeaponAT_FireSummon* GetDefaultObj();

};

// 0x38 (0xB8 - 0x80)
// Class Solarland.SolarWeaponAT_WaitStateForEvent
class USolarWeaponAT_WaitStateForEvent : public USolarAbilityTask
{
public:
	uint8                                        Pad_2F9E[0x38];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarWeaponAT_WaitStateForEvent* GetDefaultObj();

};

// 0x2D8 (0x620 - 0x348)
// Class Solarland.SolarWeaponBattleWidgetMobile
class USolarWeaponBattleWidgetMobile : public USolarUserWidget
{
public:
	TArray<class UUserWidget*>                   WeaponSlotWidgets;                                 // 0x348(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<class FString, class UWidget*>          ExcelLayoutWidgetMap;                              // 0x358(0x50)(ExportObject, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TMap<int32, class FString>                   CharacterStateMap;                                 // 0x3A8(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class ASolarPlayerWeapon>     CurrentActivedPlayerWeapon;                        // 0x3F8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        SkillCDTimeTextLocalizationID;                     // 0x400(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2FAB[0xA4];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UExpWidget*                            WP_Exp;                                            // 0x4A8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarWeaponSkillWidget*               FireActiveControl;                                 // 0x4B0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarMovablePad*                      SecondaryFirePad;                                  // 0x4B8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                SecondaryFireIcon;                                 // 0x4C0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetSwitcher*                       WGS_Fire_Left;                                     // 0x4C8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UButton*                               BT_Weapon_Exit;                                    // 0x4D0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UButton*                               Btn_RoleAbility_Cancel;                            // 0x4D8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URoleSkillWidget*                      SuperSkill;                                        // 0x4E0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URoleSkillWidget*                      TacticalSkill;                                     // 0x4E8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UButton*                               BT_Fire_Left;                                      // 0x4F0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UButton*                               BT_AutoScopeFire_Left;                             // 0x4F8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UButton*                               BT_Cancel_Left;                                    // 0x500(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UButton*                               BT_Cancel_Right;                                   // 0x508(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UButton*                               BT_Cancel_QuickAds;                                // 0x510(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UButton*                               BT_Reload_1;                                       // 0x518(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarMovablePad*                      GunsightPad;                                       // 0x520(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCheckBox*                             GunsightImageCheckBox;                             // 0x528(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                          Panel_Fire_Right;                                  // 0x530(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                          Panel_QuickADS;                                    // 0x538(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetSwitcher*                       WGS_QuickAds;                                      // 0x540(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetSwitcher*                       WGS_Fire_Right;                                    // 0x548(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarMovablePad*                      QuickAdsFirePad;                                   // 0x550(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                          Panel_Fire;                                        // 0x558(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                          Panel_Reload;                                      // 0x560(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                          Panel_Gunsight;                                    // 0x568(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                          Panel_Weapon_1;                                    // 0x570(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                          Panel_Weapon_2;                                    // 0x578(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                          Panel_SuperSkill;                                  // 0x580(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                          Panel_TacticalSkill;                               // 0x588(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                FireIconRight;                                     // 0x590(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                FireIconLeft;                                      // 0x598(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarMovablePad*                      FirePadRight;                                      // 0x5A0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarMovablePad*                      AutoScopeFirePadRight;                             // 0x5A8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarWeaponSlotWidgetMobile*          WP_Slot0;                                          // 0x5B0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarWeaponSlotWidgetMobile*          WP_Slot1;                                          // 0x5B8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarWeaponSlotWidgetMobile*          WP_Slot2;                                          // 0x5C0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Enter_Anim;                                        // 0x5C8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Exit_Anim;                                         // 0x5D0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                          Weapon_UI;                                         // 0x5D8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarTextBlock*                       Txt_NextLvDMG;                                     // 0x5E0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                          Panel_NextLv_Content;                              // 0x5E8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2FAC[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USolarAdapterWidget*                   Panel_Weapon_1_KeyMapping;                         // 0x5F8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarAdapterWidget*                   Panel_Weapon_2_KeyMapping;                         // 0x600(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarAdapterWidget*                   Panel_Weapon_3_KeyMapping;                         // 0x608(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class USolarAdapterWidget*>           WeaponKeyMappingArray;                             // 0x610(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class USolarWeaponBattleWidgetMobile* GetDefaultObj();

	void SetWidgetVisiblityByCharacterState(int32 InCharacterState);
	void SetWidgetVisiblityByActionID(int32 InActionID, bool InbVisible);
	void OnWeaponUpgrade(class ASolarPlayerWeapon* InPlayerWeapon);
	void OnWeaponSlotUpdateParts(int32 InWeaponSlotID);
	void OnWeaponSlotUpdateAmmo(int32 InWeaponSlotID);
	void OnWeaponSlotToggleOverload(int32 InWeaponSlotID, bool InbEnter);
	void OnWeaponSlotSetSkillPoint(int32 InWeaponSlotID, bool InbCDFinished, int32 InSkillPoint);
	void OnWeaponSlotQuitReload(int32 InWeaponSlotID, bool InbFinishReload);
	void OnWeaponSlotInsufficientAmmo(int32 InWeaponSlotID);
	void OnWeaponSlotEquip(int32 InWeaponSlotID, class ASolarPlayerWeapon* InWeapon);
	void OnWeaponSlotEnterSkillCD(int32 InWeaponSlotID);
	void OnWeaponSlotEnterReload(int32 InWeaponSlotID);
	void OnWeaponSlotAddEXP(int32 InWeaponSlotID, int32 InExp);
	void OnWeaponSlotActive(int32 InWeaponSlotID, class AActor* InActiveWeapon);
	void OnWeaponSetScopeButtonRotatableEvent(bool bInCanRotate);
	void OnWeaponSetAutoScopeFireButtonIcon();
	void OnWeaponRefreshFireButtonState(class UWeaponSystemPlayerBase* WeaponSys, bool bInForceRefresh);
	void OnWeaponChangeAimIconState(bool bInOpenScope);
	void OnSwitchEMP(class ASolarCharacter* InCharacter, bool InbSwitchOnEMP);
	void OnRoleAbilityHideHUD(bool bHide);
	void OnReleasedSkillCancelButton();
	void OnReleasedSkillButton(struct FGeometry& InGeometry, struct FPointerEvent& InPointerEvent);
	void OnReleasedRighrFireButton(struct FGeometry& InGeometry, struct FPointerEvent& InPointerEvent);
	void OnReleasedReloadeButton();
	void OnReleasedQuickAdsButton(struct FGeometry& InGeometry, struct FPointerEvent& InPointerEvent);
	void OnReleasedLeftFireButton();
	void OnReleasedCancelRightButton();
	void OnReleasedCancelQuickAdsButton();
	void OnReleasedAllFireButtons();
	void OnPressedSkillCancelButton();
	void OnPressedSkillButton(struct FGeometry& InGeometry, struct FPointerEvent& InPointerEvent);
	void OnPressedRightFireButton(struct FGeometry& InGeometry, struct FPointerEvent& InPointerEvent);
	void OnPressedReloadButton();
	void OnPressedQuickAdsButton(struct FGeometry& InGeometry, struct FPointerEvent& InPointerEvent);
	void OnPressedLeftFireButton();
	void OnPressedGunSightButton(struct FGeometry& InGeometry, struct FPointerEvent& InPointerEvent);
	void OnPressedCancelRightButton();
	void OnPressedCancelQuickAdsButton();
	void OnExitSpectateMode();
	void OnEnterSpectateMode();
	void OnEnterParachuting();
	void OnEnterCruising();
	void OnControllerCharacterSet(class ASolarCharacter* ControlledCharacter);
	void OnChangeSkydiveFlyState(class ASolarCharacter* InCharacter);
	void OnChangeDriveState(enum class EDriveState InDriveState);
	void OnChangeCharacterSwimState(bool InbSwmming);
	bool IsAutoFire();
	TArray<class UUserWidget*> GetWeaponWidgets();
	bool GetSkillPointData(class AActor* InWeapon, bool* OutbCD, int32* OutSkillPoint, int32* OutSkillMaxPoint);
	bool GetSkillButtonBrush(class AActor* InWeapon, struct FSlateBrush* OutBrush);
	bool GetFireButtonBrush(class AActor* InWeapon, struct FSlateBrush* OutBrush);
};

// 0x108 (0x450 - 0x348)
// Class Solarland.SolarWeaponBattleWidgetPC
class USolarWeaponBattleWidgetPC : public USolarUserWidget
{
public:
	class UImage*                                SecondaryFireIcon;                                 // 0x348(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUserWidget*                           UI_Component_Keyboard;                             // 0x350(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetActiveControl*                  FireActiveControl;                                 // 0x358(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarWeaponSlotWidgetPC*              WP_Slot0;                                          // 0x360(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarWeaponSlotWidgetPC*              WP_Slot1;                                          // 0x368(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarWeaponSlotWidgetPC*              WP_Slot2;                                          // 0x370(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHorizontalBox*                        Tips_Reload;                                       // 0x378(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarTextBlock*                       SolarTextBlock_1;                                  // 0x380(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DisplayReloadTipAmmoRate;                          // 0x388(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DisplayReloadTipDuration;                          // 0x38C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FSlateColor                           CanReloadTipColor;                                 // 0x390(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FSlateColor                           CannotReloadTipColor;                              // 0x3B8(0x28)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_2FB1[0x40];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TWeakObjectPtr<class ASolarPlayerWeapon>     CurrentActiveWeapon;                               // 0x420(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class USolarWeaponSlotWidgetPC*>      WeaponSlotWidgets;                                 // 0x428(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bCanDisplayReloadTip;                              // 0x438(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2FB2[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTimerHandle                          ReloadTipTimerHandle;                              // 0x440(0x8)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FTimerHandle                          UpdateWeaponSkillCDTimerHandle;                    // 0x448(0x8)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class USolarWeaponBattleWidgetPC* GetDefaultObj();

	void OnUpdateWeaponParts(int32 InWeaponSlotID);
	void OnUpdateAmmo(int32 InWeaponSlotID);
	void OnSetSkillPoint(int32 InWeaponSlotID, bool InbSkillCDEnd, int32 InSkillPoint);
	void OnQuitReload(int32 InWeaponSlotID, bool InbFinishReload);
	void OnEquipWeapon(int32 InWeaponSlotID, class ASolarPlayerWeapon* InWeapon);
	void OnEnterSkillCD(int32 InWeaponSlotID);
	void OnEnterReload(int32 InWeaponSlotID);
	void OnDrivingStateChanged(enum class EDriveState InDriveState);
	void OnActiveWeapon(int32 InWeaponSlotID, class AActor* InActiveWeapon);
};

// 0xF8 (0x440 - 0x348)
// Class Solarland.SolarWeaponCrosshairPanelWidget
class USolarWeaponCrosshairPanelWidget : public USolarUserWidget
{
public:
	class UUserWidget*                           HUD_Reload;                                        // 0x348(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                HUD_Forbid;                                        // 0x350(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetSwitcher*                       HUD_Overload;                                      // 0x358(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUserWidget*                           HUD_ChargeProgress;                                // 0x360(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFeedbackWidget*                       HUD_Feedback;                                      // 0x368(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCanvasPanel*                          Panel_CrosshairSlot;                               // 0x370(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCanvasPanel*                          Panel_BulletContainerSlot;                         // 0x378(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarWeaponNoAmmoAlertWidget*         HUD_NoAmmoAlert;                                   // 0x380(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarWeaponNoAmmoAlertWidget*         HUD_RechamberHint;                                 // 0x388(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<TSubclassOf<class UUserWidget>, class UUserWidget*> CrosshairWidgetPool;                               // 0x390(0x50)(ExportObject, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FSolarWeaponCrosshairData             CurrentWeaponCrosshairData;                        // 0x3E0(0x38)(BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, NativeAccessSpecifierProtected)
	class UCrossHairWidget*                      ActiveCrosshair;                                   // 0x418(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarWeaponBulletContainerWidget*     ActiveBulletContainer;                             // 0x420(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarWeaponRechamberWidget*           ActiveRechamberWidget;                             // 0x428(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ECrossHairState                   CurrentCrosshairState;                             // 0x430(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class ECrossHairState                   LastCrosshairState;                                // 0x431(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2FB4[0xE];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarWeaponCrosshairPanelWidget* GetDefaultObj();

	void RemoveWeaponWidget(class UUserWidget* CrosshairWidgetToRemove, bool bInRemainCache);
	void RemoveActiveWeaponWidget(bool bRemianCache);
	void ClearAllWeaponWidget();
	class UUserWidget* AddWeaponRechamberWidgetToPanel(TSubclassOf<class UUserWidget> InWidgetClass);
	class UUserWidget* AddWeaponCrosshairToPanel(TSubclassOf<class UUserWidget> InWidgetClass);
	void AddWeaponCrosshairAndBulletContainer(class AActor* InWeapon, struct FSolarWeaponCrosshairData& InWeaponCrosshairData);
	class UUserWidget* AddWeaponBulletContainerToPanel(TSubclassOf<class UUserWidget> InWidgetClass);
};

// 0x60 (0x88 - 0x28)
// Class Solarland.SolarWeaponFireInputResolver
class USolarWeaponFireInputResolver : public UObject
{
public:
	uint8                                        Pad_2FB5[0x60];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarWeaponFireInputResolver* GetDefaultObj();

	enum class ESolarWeaponFireInputButtonState GetRightFireButtonState();
	enum class ESolarWeaponFireInputButtonState GetQuickAdsButtonState();
	enum class ESolarWeaponFireInputButtonState GetLeftFireButtonState();
};

// 0x48 (0x4A8 - 0x460)
// Class Solarland.SolarWeaponGA_Rocket
class USolarWeaponGA_Rocket : public USolarCharacterGameplayAbility
{
public:
	struct FGameplayTag                          CueTag;                                            // 0x460(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LifeTime;                                          // 0x468(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2FB6[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTimerHandle                          LifeTimeEndTimerHandle;                            // 0x470(0x8)(NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class ESkillAnimType                    SkillAnimType;                                     // 0x478(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2FB7[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DelayEndAbilityTime;                               // 0x47C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UUserWidget>               InCrossHairClass;                                  // 0x480(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ASolarBurstRocketBullet>   BurstBulletClass;                                  // 0x488(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ASolarBurstRocketBullet*               CacheBurstBullet;                                  // 0x490(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2FB8[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UCrossHairWidget*                      CrossHairWidget;                                   // 0x4A0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class USolarWeaponGA_Rocket* GetDefaultObj();

	void SetLifeTime(float InLifeTime);
	void OnStartRocketAbility(class ASolarCharacter* Character);
	void OnEndRocketAbility(class ASolarCharacter* Character);
};

// 0x10 (0x428 - 0x418)
// Class Solarland.SolarWeaponGameplayAbility
class USolarWeaponGameplayAbility : public USolarGameplayAbility
{
public:
	struct FGameplayTag                          CueTag;                                            // 0x418(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LifeTime;                                          // 0x420(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2FB9[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarWeaponGameplayAbility* GetDefaultObj();

	void SetLifeTime(float InLifeTime);
};

// 0x78 (0xB0 - 0x38)
// Class Solarland.SolarWeaponInternalSetting
class USolarWeaponInternalSetting : public UDeveloperSettings
{
public:
	struct FSoftObjectPath                       GlobalWeaponConfig;                                // 0x38(0x18)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                       UnArmWeaponClassPath;                              // 0x50(0x18)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                       WeaponDataTable;                                   // 0x68(0x18)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                       WeaponAppearanceDataTable;                         // 0x80(0x18)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                       DefaultProjectileSplineClassPath;                  // 0x98(0x18)(Edit, ZeroConstructor, Config, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class USolarWeaponInternalSetting* GetDefaultObj();

};

// 0x10 (0x38 - 0x28)
// Class Solarland.SolarWeaponMergeMeshManager
class USolarWeaponMergeMeshManager : public UObject
{
public:
	TArray<struct FWeaponMergeMeshStruct>        MergeMeshArray;                                    // 0x28(0x10)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class USolarWeaponMergeMeshManager* GetDefaultObj();

};

// 0x50 (0x398 - 0x348)
// Class Solarland.SolarWeaponNoAmmoAlertWidget
class USolarWeaponNoAmmoAlertWidget : public USolarUserWidget
{
public:
	TMap<enum class EWeaponType, struct FSolarNoAmmoAlertWidgetLayout> NoAmmoAlertLayout;                                 // 0x348(0x50)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class USolarWeaponNoAmmoAlertWidget* GetDefaultObj();

	class UWidgetAnimation* K2_GetAlertAnim();
};

// 0x40 (0x388 - 0x348)
// Class Solarland.SolarWeaponPartEffectTipWidget
class USolarWeaponPartEffectTipWidget : public USolarUserWidget
{
public:
	class UWidgetAnimation*                      Anim_Bubble_UP;                                    // 0x348(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Anim_Bubble_Down;                                  // 0x350(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Anim_Exit_UP;                                      // 0x358(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Anim_Exit_Down;                                    // 0x360(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarTextBlock*                       Txt_Effect;                                        // 0x368(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarTextBlock*                       Txt_Percent;                                       // 0x370(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bTipToUp;                                          // 0x378(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2FBA[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TipDuration;                                       // 0x37C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TipTimer;                                          // 0x380(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bContinueShowTip;                                  // 0x384(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bPlayExitAnimation;                                // 0x385(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2FBB[0x2];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarWeaponPartEffectTipWidget* GetDefaultObj();

	void ChangeTipDirection(bool InbToUp);
};

// 0x0 (0x28 - 0x28)
// Class Solarland.SolarWeaponPenertrableInterface
class ISolarWeaponPenertrableInterface : public IInterface
{
public:

	static class UClass* StaticClass();
	static class ISolarWeaponPenertrableInterface* GetDefaultObj();

	void ReceiveHitResult(struct FHitResult& InHitResult);
};

// 0x28 (0x250 - 0x228)
// Class Solarland.SolarWeaponProjectileSpline
class ASolarWeaponProjectileSpline : public AActor
{
public:
	class USplineComponent*                      Spline;                                            // 0x228(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2FBC[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USplineMeshComponent*                  SplineMeshComponentCache;                          // 0x238(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  PreviewedStaticMesh;                               // 0x240(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USceneComponent*                       PreviewRoot;                                       // 0x248(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class ASolarWeaponProjectileSpline* GetDefaultObj();

	void ShowHitPointAt(struct FVector& Loc);
	void SetPreviewTransform(struct FVector& PreviewLoc, struct FVector& PreviewUpDir, struct FVector& PreviewScale);
	void SetPoints(TArray<struct FVector>& Points);
	void SetNeedUpdateDisplayThrowTrajectory(bool Value);
	void K2_OnDisplaySummonPreview();
	void HideHitPoint();
	void HideAllSummonPreview();
	void Hide();
	class USplineMeshComponent* GetSplineMeshComponent();
	void DrawSplineMesh(TArray<struct FVector>& InPredictPoints);
	void ChangeSummonPreviewAttachParent();
};

// 0x70 (0x3B8 - 0x348)
// Class Solarland.SolarWeaponPropertySlotWidget
class USolarWeaponPropertySlotWidget : public USolarUserWidget
{
public:
	TArray<class UWidget*>                       LockWidgetsCache;                                  // 0x348(0x10)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                PropertyIconBackgroundCache;                       // 0x358(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                PropertyIconBorderCache;                           // 0x360(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                PropertyIconCache;                                 // 0x368(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FSoftObjectPath                       PropertyEmptyIconPath;                             // 0x370(0x18)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                          PropertyIconBorderInvalidColor;                    // 0x388(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                          PropertyIconBackgroundInvalidColor;                // 0x398(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                          PropertyIconBackgroundValidColor;                  // 0x3A8(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class USolarWeaponPropertySlotWidget* GetDefaultObj();

	void UpdatePropertySlot(struct FUpgradeSlotStruct& InSlotData);
	class UImage* GetPropertyIconCache();
	class UImage* GetPropertyIconBorderCache();
	class UImage* GetPropertyIconBorder();
	class UImage* GetPropertyIconBackgroundCache();
	class UImage* GetPropertyIconBackground();
	class UImage* GetPropertyIcon();
	TArray<class UWidget*> GetLockWidgetsCache();
	TArray<class UWidget*> GetLockWidgets();
};

// 0x18 (0x360 - 0x348)
// Class Solarland.SolarWeaponRechamberWidget
class USolarWeaponRechamberWidget : public USolarUserWidget
{
public:
	class UImage*                                Img_FireCD;                                        // 0x348(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      EmptyBullet_Anim;                                  // 0x350(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstanceDynamic*              ProgressMaterial;                                  // 0x358(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class USolarWeaponRechamberWidget* GetDefaultObj();

};

// 0x100 (0x448 - 0x348)
// Class Solarland.WidgetActiveControl
class UWidgetActiveControl : public USolarUserWidget
{
public:
	class UNamedSlot*                            ControlledWidget;                                  // 0x348(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Progress_Grid;                                     // 0x350(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                BT_CD_Prompt;                                      // 0x358(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                BT_Mask_Grid_Forbidden;                            // 0x360(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                BT_Icon_Grid_Forbidden;                            // 0x368(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarTextBlock*                       BT_Txt_CD;                                         // 0x370(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGaugeImage*                           Progress_CD_Mask;                                  // 0x378(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                          LightAngel;                                        // 0x380(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Img_Quick;                                         // 0x388(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Anim_BT_CD_Prompt;                                 // 0x390(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Anim_Loop_Lightning;                               // 0x398(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Anim_Loop_Flicker;                                 // 0x3A0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                    GridSource;                                        // 0x3A8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UObject*                               CDMaskSource;                                      // 0x3B0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                    PromptSource;                                      // 0x3B8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UObject*                               ForbiddenIconSource;                               // 0x3C0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UObject*                               ForbiddenMaskSource;                               // 0x3C8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bUseEnableForActive;                               // 0x3D0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2FBD[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        GridNumber;                                        // 0x3D4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        CDTimerPrecision;                                  // 0x3D8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        GridConsumedEffectSpeed;                           // 0x3DC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                          CDTxtColorSpeedup;                                 // 0x3E0(0x10)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                          CDTxtColorNormal;                                  // 0x3F0(0x10)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                            GridCountTextBlockCache;                           // 0x400(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                          PanelDisableCache;                                 // 0x408(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2FBE[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bWidgetActive;                                     // 0x420(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2FBF[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UMaterialInstanceDynamic*              GridMaterial;                                      // 0x428(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bNeedUpdateGrid;                                   // 0x430(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bNeedUpdateGridEffect;                             // 0x431(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2FC0[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        GridPercent;                                       // 0x434(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        GridEffectPercent;                                 // 0x438(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bGridVisualForbidden;                              // 0x43C(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bNeedUpdateCD;                                     // 0x43D(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2FC1[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        CDPercent;                                         // 0x440(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bCDVisualForbidden;                                // 0x444(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bPlayingCDAnim;                                    // 0x445(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2FC2[0x2];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UWidgetActiveControl* GetDefaultObj();

	void UpdateGridPercent(float Percent);
	void UpdateGridEffectPercent(float Percent);
	void UpdateCDText(const class FString& Value);
	void UpdateCDFloatAsText(float Value);
	void UpdateCD(float Percent);
	void StopUpdateGrid();
	void StopCD(bool bPlayPrompt);
	void StartUpdateGrid();
	void StartCD();
	bool ShouldWidgetActive();
	bool ShouldVisualForbiddenNew();
	bool ShouldVisualForbidden();
	void SetTotalGrid(int32 NewGridNum);
	void SetGridNewPercent(float RestPercent);
	void SetGridForbiddenVisualNew(bool bForbidden);
	void SetGridForbiddenVisual(bool bForbidden);
	void SetGridCountText(int32 InCount);
	void SetCoolingDownVisual(bool bInCD);
	void SetControlledWidgetActive(bool bActive);
	void PlayCooledDownAnim();
	bool IsEnoughOneGrid();
	bool IsCooledDown();
	void HideCooledDownPrompt();
	class UTextBlock* GetGridCountTextBlock();
	class UCanvasPanel* GetDisablePanel();
	void ForceStopCD();
};

// 0x28 (0x470 - 0x448)
// Class Solarland.SolarWeaponSkillWidget
class USolarWeaponSkillWidget : public UWidgetActiveControl
{
public:
	class UWidgetAnimation*                      Anim_EMP_Exit;                                     // 0x448(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Anim_EMP_Enter;                                    // 0x450(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Img_SkillBg;                                       // 0x458(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarTextBlock*                       Txt_SkillType;                                     // 0x460(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOverlay*                              Panel_Skill;                                       // 0x468(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class USolarWeaponSkillWidget* GetDefaultObj();

};

// 0x268 (0x5B0 - 0x348)
// Class Solarland.SolarWeaponSlotWidgetMobile
class USolarWeaponSlotWidgetMobile : public USolarUserWidget
{
public:
	TMap<enum class EShootingOpt, int32>         ShootModeNames;                                    // 0x348(0x50)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	int32                                        SlotID;                                            // 0x398(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class ASolarPlayerWeapon>     SlotOwnerPlayerWeapon;                             // 0x39C(0x8)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2FC8[0x24];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ClipTextBlockCheckedOpacity;                       // 0x3C8(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ClipTextBlockUnCheckedOpacity;                     // 0x3CC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bHideWidgetWhenNoWeapon;                           // 0x3D0(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2FC9[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<int32, struct FSolarTablesData_ItemWeaponParts> WeaponPartsItemTableCache;                         // 0x3D8(0x50)(Protected, NativeAccessSpecifierProtected)
	TArray<class UUIWeaponPartWidget*>           WeaponPartsWidgets;                                // 0x428(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        LevelTextLocalizationID;                           // 0x438(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        SkillCDTextLocalizationID;                         // 0x43C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        IncreaseDamageTextLocalizationID;                  // 0x440(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        LevelUpDamageTextLocalizationID;                   // 0x444(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                          AmmoNotEnoughColor;                                // 0x448(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                          ExtraAmmoColor;                                    // 0x458(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      FX_Weapon_Reload_Progress;                         // 0x468(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      FX_Weapon_Reload;                                  // 0x470(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      FX_Weapon_AmmoEmpty;                               // 0x478(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCheckBox*                             CheckBox_WP;                                       // 0x480(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                            Text_WP_Bullte;                                    // 0x488(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                            Text_WP_Clip;                                      // 0x490(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Img_WP;                                            // 0x498(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                          Panel_WP_Unarm;                                    // 0x4A0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHorizontalBox*                        HorizontalBox_WP_Clip;                             // 0x4A8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                               Panel_Part;                                        // 0x4B0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Img_Bg;                                            // 0x4B8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Img_Bg_Border;                                     // 0x4C0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Img_Bg_Gradient;                                   // 0x4C8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOverlay*                              Overlay_Bg;                                        // 0x4D0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Img_NotSelect;                                     // 0x4D8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUIWeaponPartWidget*                   UI_Weapon_Part;                                    // 0x4E0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUIWeaponPartWidget*                   UI_Weapon_Part_1;                                  // 0x4E8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUIWeaponPartWidget*                   UI_Weapon_Part_2;                                  // 0x4F0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUIWeaponPartWidget*                   UI_Weapon_Part_3;                                  // 0x4F8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUIWeaponPartWidget*                   UI_Weapon_Part_4;                                  // 0x500(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarTextBlock*                       Txt_SkillCD;                                       // 0x508(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      LevelUp_Anim;                                      // 0x510(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Img_Frame_VX;                                      // 0x518(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Img_BG_Light;                                      // 0x520(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Img_BG_Light_1;                                    // 0x528(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                MI_Frame_VX;                                       // 0x530(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Img_Select;                                        // 0x538(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                          Panel_DMG;                                         // 0x540(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarTextBlock*                       Txt_WeaponDMG;                                     // 0x548(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                IMG_DMG_BG_00;                                     // 0x550(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                IMG_DMG_BG_01;                                     // 0x558(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarTextBlock*                       Txt_Upgrade;                                       // 0x560(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                FX_ReLoadA_001;                                    // 0x568(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UProgressBar*                          ProgressBar_127;                                   // 0x570(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        PartEffectTipDuration;                             // 0x578(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2FCA[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USolarWeaponPartEffectTipWidget*       UI_Weapon_Update;                                  // 0x580(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                          PartEffectPanelUp;                                 // 0x588(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                          PartEffectPanelDown;                               // 0x590(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FSolarWeaponPartEffectDesc>    PartEffectTipArray;                                // 0x598(0x10)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class USolarAdapterWidget>    KeyboardTip;                                       // 0x5A8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class USolarWeaponSlotWidgetMobile* GetDefaultObj();

	void SetWeaponSlotPartsVisibility(bool InbVisible);
	void SetWeaponSlotAmmoCount();
	void SetWeaponQualityByLevel(int32 InWeaponLevel);
	void OnWeaponUpgrade(int32 InLevel, uint32 InWeaponUniqueID);
	void OnWeaponUpdateOverload(float InProgress);
	void OnWeaponUpdateAmmoCount(int32 InFireModeType, class ASolarWeapon* InWeapon);
	void OnWeaponToggleOverload(bool InbEnterOverload, uint32 InWeaponUniqueID);
	void OnWeaponQuitReload(bool bInSuccess);
	void OnWeaponInsufficientAmmo();
	void OnToggleCheckedState(bool InbChecked);
	void OnLoadWeaponAssetsCompleted();
	void OnCharacterSet(class ASolarCharacter* InCharacter);
	void OnCharacterLevelUp(int32 InNewLevel, int32 InOldLevel);
	void K2_OnSetWeapon(class ASolarPlayerWeapon* InPlayerWeapon);
	void K2_OnCharacterLevelUp(int32 InLevel);
	void K2_OnActiveWeapon(bool bInActive);
	bool IsDisplayCompleteInfo();
	class UTexture2D* GetWeaponTexture();
	class FString GetWeaponShootModeName();
	class FText GetWeaponName();
	int32 GetWeaponLevel();
	bool GetWeaponAmmoData(int32* OutClipAmmoCount, int32* OutExtraAmmoCount, int32* OutSpareAmmoCount);
	class FString GetLocalizationDataByID(int32 InLocalizationID);
	void GetLevelText(int32 InLocalizationLevelID, const class FString& InReplaceText, class FString* OutHeadText, class FString* OutTailText);
	void ClearLoadWeaponAssetsTimer();
	void AsyncRequestLoadWeaponAssets();
};

// 0x1C8 (0x510 - 0x348)
// Class Solarland.SolarWeaponSlotWidgetPC
class USolarWeaponSlotWidgetPC : public USolarUserWidget
{
public:
	class FString                                KeyActionName;                                     // 0x348(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                Img_WP;                                            // 0x358(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarComponentKeyWidget*              UI_Component_Keyboard;                             // 0x360(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                          HorizontalBox_WP_Clip;                             // 0x368(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                            Text_WP_Clip;                                      // 0x370(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                            Text_WP_Clip_1;                                    // 0x378(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHorizontalBox*                        HorizontalBox_Lv;                                  // 0x380(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                            Txt_Lvl_Head;                                      // 0x388(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                            Txt_Level;                                         // 0x390(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                            Txt_Lvl_Tail;                                      // 0x398(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarTextBlock*                       Txt_FireMode;                                      // 0x3A0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                          Panel_Part;                                        // 0x3A8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUIWeaponPartWidget*                   UI_Weapon_Part_1;                                  // 0x3B0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUIWeaponPartWidget*                   UI_Weapon_Part_2;                                  // 0x3B8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUIWeaponPartWidget*                   UI_Weapon_Part_3;                                  // 0x3C0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUIWeaponPartWidget*                   UI_Weapon_Part_4;                                  // 0x3C8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUIWeaponPartWidget*                   UI_Weapon_Part_5;                                  // 0x3D0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                          Panel_WP_Unarm;                                    // 0x3D8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Img_Bg_Border;                                     // 0x3E0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Img_Bg_Black;                                      // 0x3E8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Img_Bg_Gradient;                                   // 0x3F0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Img_NotSelect;                                     // 0x3F8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOverlay*                              Overlay_Bg;                                        // 0x400(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        LevelLocalizationID;                               // 0x408(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2FCC[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                LevelVariate;                                      // 0x410(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<enum class EShootingOpt, int32>         ShootModeLocalizationIDMap;                        // 0x420(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	TArray<struct FLinearColor>                  WeaponQualityColors;                               // 0x470(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FLinearColor>                  WeaponBGQualityColors;                             // 0x480(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class ASolarPlayerWeapon>     SlotWeapon;                                        // 0x490(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2FCD[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTimerHandle                          LoadWeaponIconTimerHandle;                         // 0x4A8(0x8)(NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UUIWeaponPartWidget*>           WeaponPartWidgets;                                 // 0x4B0(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<int32, struct FSolarTablesData_ItemWeaponParts> WeaponPartsItemTableCache;                         // 0x4C0(0x50)(NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class USolarWeaponSlotWidgetPC* GetDefaultObj();

	void SetWeaponSlot(class ASolarPlayerWeapon* InWeapon);
	void OnUpgradeWeapon(int32 InLevel, uint32 InWeaponUniqueID);
	void OnUpdateAmmo(int32 InFireModeType, class ASolarWeapon* InWeapon);
	void ActiveWeaponSlot(bool InbActive);
};

// 0x220 (0x250 - 0x30)
// Class Solarland.SolarWeaponSubsystem
class USolarWeaponSubsystem : public UWorldSubsystem
{
public:
	uint8                                        Pad_2FCF[0x180];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<class UClass*, class ASolarWeaponProjectileSpline*> CacheSolarWeaponProjectileSplineMap;               // 0x1B0(0x50)(NativeAccessSpecifierPrivate)
	TMap<int32, struct FSolarTablesData_ItemWeaponParts> WeaponPartsItemTableCache;                         // 0x200(0x50)(NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class USolarWeaponSubsystem* GetDefaultObj();

	bool DiscardWeaponFromBackpack(class ASolarWeapon* InPendingWeapon);
};

// 0x840 (0x978 - 0x138)
// Class Solarland.SolarWheeledVehicleMovement
class USolarWheeledVehicleMovement : public UPawnMovementComponent
{
public:
	float                                        LowFrameRateDeltaTime;                             // 0x138(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MinLocationDiffForSuspensionTrace;                 // 0x13C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        Mass;                                              // 0x140(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CenterOfMassOffsetOnZ;                             // 0x144(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        CenterOfMassOffsetOnX;                             // 0x148(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SuspensionClampRatioInLowFrame;                    // 0x14C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRuntimeFloatCurve                    AccelerationCurve;                                 // 0x150(0x88)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FRuntimeFloatCurve                    AccelerationCurveReverse;                          // 0x1D8(0x88)(Edit, Protected, NativeAccessSpecifierProtected)
	int32                                        ReverseEvaluationAccuracy;                         // 0x260(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2FD2[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRuntimeFloatCurve                    SteerAngleLimit;                                   // 0x268(0x88)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FRuntimeFloatCurve                    SteeringResetSpeed;                                // 0x2F0(0x88)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FRuntimeFloatCurve                    SteeringSpeed;                                     // 0x378(0x88)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FRuntimeFloatCurve                    SteeringFraction;                                  // 0x400(0x88)(Edit, Protected, NativeAccessSpecifierProtected)
	struct FRuntimeFloatCurve                    SteerAngleMutiplier;                               // 0x488(0x88)(Edit, Protected, NativeAccessSpecifierProtected)
	float                                        LowSteeringSpeed;                                  // 0x510(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LowSteeringSpeedAccelerationMultiplier;            // 0x514(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LowSteeringSpeedAngleLimitMultiplier;              // 0x518(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LowSpeedSteeringThresholdOnHorizontalInput;        // 0x51C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        FlightStabilizationDamping;                        // 0x520(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LateralFrictionWhenOnlySteeringWheelsOnGround;     // 0x524(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FWheelData>                    Wheels;                                            // 0x528(0x10)(Edit, ZeroConstructor, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RotationMinAngle;                                  // 0x538(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxPitchRotation;                                  // 0x53C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxRollRotation;                                   // 0x540(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RotationTimeLimit;                                 // 0x544(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bOpenTimeLimit;                                    // 0x548(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2FD3[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        PitchTorqueInDegree;                               // 0x54C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RollTorqueInDegree;                                // 0x550(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TorqueForUpsideDown;                               // 0x554(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxAngularVelocityInAir;                           // 0x558(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        TorqueLerpAcceleration;                            // 0x55C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        BalanceAngularVelocityWheelsOnGround;              // 0x560(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2FD4[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UCurveFloat*                           DustEffectScaleCurve;                              // 0x568(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<enum class EPhysicalSurface, TSoftObjectPtr<class UParticleSystem>> BrokenWheelDustEffect;                             // 0x570(0x50)(Edit, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	float                                        WheelDecelerationInBrakeLock;                      // 0x5C0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        WheelLerpSpeedInSlip;                              // 0x5C4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        GravityAcceleration;                               // 0x5C8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        GravityAccelerationInAir;                          // 0x5CC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MinHeightForGravityAccelerationInAir;              // 0x5D0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxHeightForGravityAccelerationInAir;              // 0x5D4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        GravityTransitionDuration;                         // 0x5D8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxStaticDegree;                                   // 0x5DC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRuntimeFloatCurve                    GravityMultiplierForAcceleration;                  // 0x5E0(0x88)(Edit, Protected, NativeAccessSpecifierProtected)
	float                                        DecelerationUnderWater;                            // 0x668(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAutoSteeringEnabled;                              // 0x66C(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2FD5[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        AutoSteeringThresholdTime;                         // 0x670(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AutoSteeringSpeedThreshold;                        // 0x674(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AutoSteeringTraceRadius;                           // 0x678(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               LeftAutoSteeringTraceStart;                        // 0x67C(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               RightAutoSteeringTraceStart;                       // 0x688(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        LeftToRightTangentDegree;                          // 0x694(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AutoSteeringAngleLimit;                            // 0x698(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AutoSteeringSpeed;                                 // 0x69C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AutoSteeringResetSpeed;                            // 0x6A0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AutoSteeringLimitInputY;                           // 0x6A4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ThrottleInputThreshold;                            // 0x6A8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2FD6[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRuntimeFloatCurve                    SteerInputCurve;                                   // 0x6B0(0x88)(Edit, Protected, NativeAccessSpecifierProtected)
	float                                        BrakeDelayTime;                                    // 0x738(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ThrottleReleaseDelayTime;                          // 0x73C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MicroThrottleInputThreshold;                       // 0x740(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MicroThrottleInputSpeed;                           // 0x744(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SteeringLimitMultiplierInDrift;                    // 0x748(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AccelerationMultiplierInDrift;                     // 0x74C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AccelerationInDriftLerpSpeed;                      // 0x750(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AccelerationOutDriftLerpSpeed;                     // 0x754(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MinDriftSpeed;                                     // 0x758(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DriftCompensationRate;                             // 0x75C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DriftCancelTimeWithoutInput;                       // 0x760(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2FD7[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<enum class EPhysicalSurface, TSoftObjectPtr<class UParticleSystem>> DriftParticles;                                    // 0x768(0x50)(Edit, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	float                                        TimerForAntiStuck;                                 // 0x7B8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        StuckAcceleration;                                 // 0x7BC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        StuckAccelerationLerpSpeed;                        // 0x7C0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MinAntiRollThreshold;                              // 0x7C4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxAntiRollThreshold;                              // 0x7C8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2FD8[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FGearSetting>                  ForwardGears;                                      // 0x7D0(0x10)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        ReverseRpm;                                        // 0x7E0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SlipRpmMultiplier;                                 // 0x7E4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        RpmSlipSpeed;                                      // 0x7E8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        BurnoutDelayTime;                                  // 0x7EC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        BurnoutSoundRatio;                                 // 0x7F0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2FD9[0x13C];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	class ASolarVehiclePawn*                     VehiclePawn;                                       // 0x930(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkeletalMeshComponent*                VehicleMesh;                                       // 0x938(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        InputVecXForRotateInAir;                           // 0x940(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        InputVecYForRotateInAir;                           // 0x944(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        BalanceRotateSpendTime;                            // 0x948(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        InputRotateSpendTime;                              // 0x94C(0x4)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<uint8>                                InAirWheelsIndex;                                  // 0x950(0x10)(ZeroConstructor, Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2FDA[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UAkComponent*                          AkAudioComponent;                                  // 0x970(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class USolarWheeledVehicleMovement* GetDefaultObj();

	void SetIsDrift(bool bInDrift, bool bResetDrift);
	void SetIsBurnout(bool bInBurnout);
	void SetDriveType(enum class EWheeledVehicleDriveUserType InType);
	void SetCanAutoSteering(bool bCan);
	void SetCanAdjustInAir(bool bCan);
	void OnVehicleSkinSoundUpdate(class USolarVehicleSoundDataAsset* OldVehicleSoundDataAsset, class USolarVehicleSoundDataAsset* NewVehicleSoundDataAsset);
	void OnVehicleHit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, struct FHitResult& Hit);
	void OnDriverGetOffVehicle(int32 GetOffSeatIndex, class ASolarCharacter* GetOffPlayer);
};

// 0xE8 (0x350 - 0x268)
// Class Solarland.SolarWheeledVehicleStencilAnimInstance
class USolarWheeledVehicleStencilAnimInstance : public UAnimInstance
{
public:
	struct FVector                               FLWheelBoneScale;                                  // 0x268(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               FRWheelBoneScale;                                  // 0x274(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               MLWheelBoneScale;                                  // 0x280(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               MRWheelBoneScale;                                  // 0x28C(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               BLWheelBoneScale;                                  // 0x298(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               BRWheelBoneScale;                                  // 0x2A4(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               FLWheelBoneLocation;                               // 0x2B0(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               FRWheelBoneLocation;                               // 0x2BC(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               MLWheelBoneLocation;                               // 0x2C8(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               MRWheelBoneLocation;                               // 0x2D4(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               BLWheelBoneLocation;                               // 0x2E0(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               BRWheelBoneLocation;                               // 0x2EC(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRotator                              FLWheelBoneRotation;                               // 0x2F8(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FRotator                              FRWheelBoneRotation;                               // 0x304(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FRotator                              MLWheelBoneRotation;                               // 0x310(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FRotator                              MRWheelBoneRotation;                               // 0x31C(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FRotator                              BLWheelBoneRotation;                               // 0x328(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FRotator                              BRWheelBoneRotation;                               // 0x334(0xC)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class USolarWheeledVehicleAnimInstance> VehicleAnim;                                       // 0x340(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2FDB[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarWheeledVehicleStencilAnimInstance* GetDefaultObj();

};

// 0x18 (0x40 - 0x28)
// Class Solarland.SolarWidgetExitCallbackProxy
class USolarWidgetExitCallbackProxy : public UObject
{
public:
	uint8                                        Pad_2FDC[0x18];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarWidgetExitCallbackProxy* GetDefaultObj();

	void OnAnimationFinished();
};

// 0x80 (0x480 - 0x400)
// Class Solarland.SolarWorldSettings
class ASolarWorldSettings : public AWorldSettings
{
public:
	int32                                        MapID;                                             // 0x400(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2FDD[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSoftObjectPath                       PreloadAssets;                                     // 0x408(0x18)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAsyncPreload;                                     // 0x420(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bHoldAllMips;                                      // 0x421(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2FDE[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class USolarPostProcessSettingItem> PostProcessItemClass;                              // 0x428(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        CurrentActiveColorThemeIndex;                      // 0x430(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        SolarMapTypeValue;                                 // 0x434(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         MapEnableLowMemoryGraphOpt;                        // 0x438(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2FDF[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            SpectatorPawnStartPoint;                           // 0x440(0x30)(Edit, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	class USolarPostProcessSettingItem*          PostProcessItem;                                   // 0x470(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2FE0[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASolarWorldSettings* GetDefaultObj();

};

// 0xC8 (0x2F0 - 0x228)
// Class Solarland.SolarZiplineObj
class ASolarZiplineObj : public AActor
{
public:
	struct FGameplayTag                          ZipTriggerTag;                                     // 0x228(0x8)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTag                          ZippingStatusTag;                                  // 0x230(0x8)(Edit, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  ZipActionName;                                     // 0x238(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FZiplineObjData                       ZiplineObjData;                                    // 0x240(0x74)(Edit, BlueprintVisible, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_2FE9[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UBoxComponent*                         ASideCollisionComp;                                // 0x2B8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBoxComponent*                         BSideCollisionComp;                                // 0x2C0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBoxComponent*                         CableCollisionComp;                                // 0x2C8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class ASolarCharacter>        InstigateCharacter;                                // 0x2D0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class ASolarCharacter*>               SlidingCharacters;                                 // 0x2D8(0x10)(Net, ZeroConstructor, RepNotify, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2FEA[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	enum class EZiplineSide                      BeginningSide;                                     // 0x2EC(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2FEB[0x3];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASolarZiplineObj* GetDefaultObj();

	void OnRep_SlidingCharacters();
	void OnEndOverlap(class AActor* OtherActor, enum class EZiplineSide InSide);
	void OnCableEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void OnCableBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	void OnBSideEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void OnBSideBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	void OnBeginOverlap(class AActor* OtherActor, enum class EZiplineSide InSide);
	void OnASideEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void OnASideBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	void K2_OnZiplineEndOverlap(class ASolarCharacter* InCharacter);
	void K2_OnZiplineBeginOverlap(class ASolarCharacter* InCharacter);
	void K2_OnGoZip(class ASolarCharacter* InCharacter);
	void GoZip();
};

// 0x8 (0x230 - 0x228)
// Class Solarland.SpatializeInfo
class ASpatializeInfo : public AInfo
{
public:
	uint8                                        Pad_2FEC[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASpatializeInfo* GetDefaultObj();

};

// 0x248 (0x478 - 0x230)
// Class Solarland.SpatializeInfoTrack
class ASpatializeInfoTrack : public ASpatializeInfo
{
public:
	struct FTrackArray                           TrackArray;                                        // 0x230(0x130)(Net, NativeAccessSpecifierPrivate)
	uint8                                        Pad_2FED[0x8C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Timeout;                                           // 0x3EC(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        MinRevealDistance;                                 // 0x3F0(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        MaxTrackNum;                                       // 0x3F4(0x4)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<struct FTrackItem, class AThreeDMeshWidgetTrack*> CurTrackWidgets;                                   // 0x3F8(0x50)(NativeAccessSpecifierPrivate)
	uint8                                        Pad_2FEE[0x30];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASpatializeInfoTrack* GetDefaultObj();

	void UpdateWidgets(bool bFromNetUpdate);
};

// 0x48 (0x400 - 0x3B8)
// Class Solarland.StripBulletContainer
class UStripBulletContainer : public USolarWeaponBulletContainerWidget
{
public:
	class UImage*                                AmmoGauge_BG;                                      // 0x3B8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGaugeImage*                           AmmoGauge;                                         // 0x3C0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                AmmoGauge_Empty;                                   // 0x3C8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                AmmoGauge_Light;                                   // 0x3D0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                          BulletLightSlot;                                   // 0x3D8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Gauge_Anim;                                        // 0x3E0(0x8)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Battle_Light_Anim;                                 // 0x3E8(0x8)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Recharge_Empty_Anim;                               // 0x3F0(0x8)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_2FF0[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UStripBulletContainer* GetDefaultObj();

	void ReceiveUpdateBulletEvent(float AmmoProgress, bool bIsReloading, bool bIsFirstIn, bool bIsQuitReload);
	void ReceiveUpdateAllBulletEvent();
	void ReceiveReloadFinishEvent(bool bIsReloadSuccess);
};

// 0x50 (0x80 - 0x30)
// Class Solarland.SolarStrongholdNamesConfig
class USolarStrongholdNamesConfig : public UDataAsset
{
public:
	TMap<class FString, struct FVector4>         NamesMap;                                          // 0x30(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class USolarStrongholdNamesConfig* GetDefaultObj();

};

// 0x0 (0x588 - 0x588)
// Class Solarland.STutorialLevelGameMode
class ASTutorialLevelGameMode : public ASBattleGameMode
{
public:

	static class UClass* StaticClass();
	static class ASTutorialLevelGameMode* GetDefaultObj();

	void OnReady();
};

// 0x0 (0x448 - 0x448)
// Class Solarland.STutorialLevelGameState
class ASTutorialLevelGameState : public ASolarGameState
{
public:

	static class UClass* StaticClass();
	static class ASTutorialLevelGameState* GetDefaultObj();

};

// 0x28 (0x50 - 0x28)
// Class Solarland.SubPoolOfHomeActor
class USubPoolOfHomeActor : public UObject
{
public:
	uint8                                        Pad_2FF1[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class ASolarHomeActor*>               UseActors;                                         // 0x30(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class ASolarHomeActor*>               UnUseActors;                                       // 0x40(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class USubPoolOfHomeActor* GetDefaultObj();

};

// 0x220 (0x600 - 0x3E0)
// Class Solarland.SummonItemHealPile
class ASummonItemHealPile : public ASummonItemBase
{
public:
	TArray<struct FChargingInfo>                 ChargingInfoList;                                  // 0x3E0(0x10)(Net, ZeroConstructor, RepNotify, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class EActorRegisterType                ActorRegisterType;                                 // 0x3F0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2FF6[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USphereComponent*                      CollisionComp;                                     // 0x3F8(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                  NormalMesh;                                        // 0x400(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SphereRadius;                                      // 0x408(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        OwnerTeam;                                         // 0x40C(0x4)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               TestOverlapDestroyBoxExtent;                       // 0x410(0xC)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2FF7[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UParticleSystemComponent*              RangeLoopEffect;                                   // 0x420(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UParticleSystemComponent*>      ChargeParticleEffects;                             // 0x428(0x10)(BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        HealQuantity;                                      // 0x438(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HealFrequency;                                     // 0x43C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2FF8[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UMaterialInstanceDynamic*              DynamicMatHealPile;                                // 0x448(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                       NormalMeshPath;                                    // 0x450(0x18)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UParticleSystem>        RangeParticleStartPath;                            // 0x468(0x28)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UParticleSystem>        RangeParticleLoopPath;                             // 0x490(0x28)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UParticleSystem>        RangeParticleEndPath;                              // 0x4B8(0x28)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UParticleSystem>        EnemyRangeParticleStartPath;                       // 0x4E0(0x28)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UParticleSystem>        EnemyRangeParticleLoopPath;                        // 0x508(0x28)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UParticleSystem>        EnemyRangeParticleEndPath;                         // 0x530(0x28)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               RangeEffectScale;                                  // 0x558(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2FF9[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSoftObjectPath                       ChargeParticleEffectPath;                          // 0x568(0x18)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               BeamStartPos;                                      // 0x580(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2FFA[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSoftObjectPath                       OutlineMatPath;                                    // 0x590(0x18)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       BoomEffect;                                        // 0x5A8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2FFB[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class USolarAkGameObject*                    SolarAkGameObject;                                 // 0x5D8(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2FFC[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTimerHandle                          ServerChargingTimerHandle;                         // 0x5F0(0x8)(BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTimerHandle                          ClientChargingTimerHandle;                         // 0x5F8(0x8)(BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class ASummonItemHealPile* GetDefaultObj();

	void TestDestroy();
	void SetIsActivated(bool bActivated);
	void ServerSetHealingPile(bool bEnter, class ASolarCharacter* ChargingCharacter);
	void RemoveChargeParticle(class ASolarCharacter* InCharacter);
	void RemoveAllEffects();
	void ReceiveNormalMeshLoadedEvent();
	void ReceiveChargingPileInitialize();
	void OnUntrigger(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void OnTrigger(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	void OnRep_ChargingInfoListChanged();
	bool IsOwnerTeammate();
	void CreateChargeParticle(class ASolarCharacter* InCharacter);
	void ClientRemoveChargeParticle(class ASolarCharacter* InCharacter);
	void ClientHealPileSound(class ASolarCharacter* ChargingCharacter, enum class EPileHealingType HealingType);
};

// 0x18 (0x280 - 0x268)
// Class Solarland.SummonItemTurretAnimInstance
class USummonItemTurretAnimInstance : public UAnimInstance
{
public:
	bool                                         bReady;                                            // 0x268(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bLocking;                                          // 0x269(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bFiring;                                           // 0x26A(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_2FFD[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRotator                              AimRotate;                                         // 0x26C(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_2FFE[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USummonItemTurretAnimInstance* GetDefaultObj();

};

// 0x60 (0x110 - 0xB0)
// Class Solarland.WeaponAnimationComponent
class UWeaponAnimationComponent : public UActorComponent
{
public:
	class UWeaponAnimInstance*                   WeaponAnimInstance;                                // 0xB0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ASolarWeapon*                          MyWeapon;                                          // 0xB8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<enum class EWeaponAnimState, class UAnimSequence*> AnimSequenceMap;                                   // 0xC0(0x50)(Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UWeaponAnimationComponent* GetDefaultObj();

	void SRecieveProto_SwitchStateAction(const class FString& Paramters);
	void SetWeaponAnimState(enum class EWeaponAnimState InWeaponAnimState, float InAnimPlaySpeed);
	void PostWeaponAnimStateToSimulation(enum class EWeaponAnimState InWeaponAnimState, float InAnimPlaySpeed, bool bForceSetAnimState);
	void InternalSetWeaponAnimState(enum class EWeaponAnimState InWeaponAnimState, float InAnimPlaySpeed);
	void InitSkeletaMesh(class USkeletalMeshComponent* Mesh);
	void GotoState(enum class EWeaponAnimState State, float Interval);
	void CRecieveProto_SwitchStateAction(bool bAutonomous, const class FString& Paramters);
};

// 0x8 (0x118 - 0x110)
// Class Solarland.SummonWeaponAnimationComponent
class USummonWeaponAnimationComponent : public UWeaponAnimationComponent
{
public:
	uint8                                        Pad_3005[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USummonWeaponAnimationComponent* GetDefaultObj();

};

// 0x68 (0x2D0 - 0x268)
// Class Solarland.WeaponAnimInstance
class UWeaponAnimInstance : public UAnimInstance
{
public:
	bool                                         bInterrupt;                                        // 0x268(0x1)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bReload;                                           // 0x269(0x1)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bOverload;                                         // 0x26A(0x1)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bBolt;                                             // 0x26B(0x1)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3008[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FAnimMsgData>                  MsgArray;                                          // 0x270(0x10)(Edit, BlueprintVisible, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAnimMsgData                          CurrentMsg;                                        // 0x280(0x8)(Edit, BlueprintVisible, EditConst, NoDestructor, NativeAccessSpecifierPublic)
	bool                                         bCurrentMsgUsed;                                   // 0x288(0x1)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3009[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UAnimSequence*                         IdleAnim;                                          // 0x290(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                         FireAnim;                                          // 0x298(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                         AltFireAnim;                                       // 0x2A0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                         ReloadAnim;                                        // 0x2A8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                         OverloadAnim;                                      // 0x2B0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                         OpenScopeAnim;                                     // 0x2B8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                         CloseScopeAnim;                                    // 0x2C0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                         BoltAnim;                                          // 0x2C8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UWeaponAnimInstance* GetDefaultObj();

	bool SwitchStateCheck(enum class EWeaponAnimState CheckState);
	void SetInterruptIsTrue();
	bool RouterNodeJudge();
	void OnQuitState(enum class EWeaponAnimState State);
	void OnEnterState(enum class EWeaponAnimState State);
	void Interrupt();
	bool HasMsg();
	bool ConsumMsg();
	bool AddMsg(enum class EWeaponAnimState State, float Speed);
};

// 0x10 (0x2E0 - 0x2D0)
// Class Solarland.SummonWeaponAnimInstance
class USummonWeaponAnimInstance : public UWeaponAnimInstance
{
public:
	float                                        ViewYaw;                                           // 0x2D0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ViewPitch;                                         // 0x2D4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsLocked;                                          // 0x2D8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         IsFire;                                            // 0x2D9(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bAppearCompleted;                                  // 0x2DA(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bTransform;                                        // 0x2DB(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_300A[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USummonWeaponAnimInstance* GetDefaultObj();

};

// 0x0 (0x740 - 0x740)
// Class Solarland.SWarmUpGameMode
class ASWarmUpGameMode : public ASCustomGameMode
{
public:

	static class UClass* StaticClass();
	static class ASWarmUpGameMode* GetDefaultObj();

};

// 0x0 (0x580 - 0x580)
// Class Solarland.SWarmUpGameState
class ASWarmUpGameState : public ASCustomGameState
{
public:

	static class UClass* StaticClass();
	static class ASWarmUpGameState* GetDefaultObj();

};

// 0x130 (0x730 - 0x600)
// Class Solarland.SwitchEffectStaticMeshComponent
class USwitchEffectStaticMeshComponent : public UStaticMeshComponent
{
public:
	TSoftObjectPtr<class UCurveVector>           DissolveCurvePath;                                 // 0x600(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UMaterialInterface>     DissolveMatPath;                                   // 0x628(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UCurveVector>           FresnelCurvePath;                                  // 0x650(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UMaterialInterface>     FresnelMatPath;                                    // 0x678(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIsShowSwitchParticleEffect;                       // 0x6A0(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_300B[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSoftObjectPtr<class UParticleSystem>        SwitchParticleEffectPath;                          // 0x6A8(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_300C[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        SwitchEffectInterval;                              // 0x6D8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SelfDelayShowSeconds;                              // 0x6DC(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                  DissovleMeshComponent;                             // 0x6E0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UMaterialInstanceDynamic*>      DissovleMaterials;                                 // 0x6E8(0x10)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  FresnelMeshComponent;                              // 0x6F8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UMaterialInstanceDynamic*>      FresnelMaterials;                                  // 0x700(0x10)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_300D[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USwitchEffectStaticMeshComponent* GetDefaultObj();

	void StopSwitchEffect();
	void PlaySwitchEffect();
};

// 0x70 (0xA0 - 0x30)
// Class Solarland.TalentDataAsset
class UTalentDataAsset : public UPrimaryDataAsset
{
public:
	struct FSoftClassPath                        TalentClassPath;                                   // 0x30(0x18)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                       TalentIconPath;                                    // 0x48(0x18)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                  TalentName;                                        // 0x60(0x18)(Edit, NativeAccessSpecifierPublic)
	int32                                        NameTextID;                                        // 0x78(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_300E[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FText                                  TalentDescription;                                 // 0x80(0x18)(Edit, NativeAccessSpecifierPublic)
	int32                                        DescriptionTextID;                                 // 0x98(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_300F[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTalentDataAsset* GetDefaultObj();

};

// 0x60 (0x288 - 0x228)
// Class Solarland.TeamBoostProjectile
class ATeamBoostProjectile : public AActor
{
public:
	float                                        BaseMoveSpeed;                                     // 0x228(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxMoveSpeed;                                      // 0x22C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MoveAcceleration;                                  // 0x230(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HeightOffset;                                      // 0x234(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FinishDistance;                                    // 0x238(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3010[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FActorParticleEffectSpawnInfo> ProjectileParticleSpawnInfos;                      // 0x240(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UParticleSystemComponent*>      ProjectileParticleComponents;                      // 0x250(0x10)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class ASolarCharacter>        TargetCharacter;                                   // 0x260(0x8)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3011[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATeamBoostProjectile* GetDefaultObj();

	void OnRep_TargetCharacter();
};

// 0x58 (0x3A0 - 0x348)
// Class Solarland.TeammateHUD
class UTeammateHUD : public USolarUserWidget
{
public:
	class USolarTextBlock*                       Txt_Distance;                                      // 0x348(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarTextBlock*                       Txt_Distance_Unit;                                 // 0x350(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUIComponentNationalFlag*              NationalFlag;                                      // 0x358(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarUserWidget*                      UI_Input_Device;                                   // 0x360(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                            Txt_NickName;                                      // 0x368(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                BTN_Rescue;                                        // 0x370(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                               Img_UVASign;                                       // 0x378(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                PlayerNameSeparator;                               // 0x380(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3015[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTeammateHUD* GetDefaultObj();

	void UpdateName(const class FString& InNickName);
	void UpdateMemberNum(uint8 PosInTeam);
	void UpdateInputDevice(class ASolarPlayerState* PlayerState);
	void UpdateDistance(float InDis);
	void SetRescueVisibility(bool bShow);
	void SetDodgeDisplay(bool bShow);
	void RefreshPosInTeam(uint8 PosInTeam, struct FTeamMemberColor& ColorConfig);
	void RefreshIsSkydivingCaptain(bool bIsCaptain);
	void OuterSetDistanceDisplay(bool bShown);
	void OnLocalPlayerSkydivingCaptainChanged(int32 TeamIndex, const class FString& PlayerName, bool bIsLocalPlayer);
	void OnClickBTN_Rescue();
	void OnBroadcastModeChanged();
};

// 0x30 (0x378 - 0x348)
// Class Solarland.TeammateTalentWidget
class UTeammateTalentWidget : public USolarUserWidget
{
public:
	class UImage*                                Img_Icon_Ability;                                  // 0x348(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Img_Icon_CD;                                       // 0x350(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGaugeImage*                           Progress_CD_Mask;                                  // 0x358(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Anim_TalentShow;                                   // 0x360(0x8)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Anim_Cooldown;                                     // 0x368(0x8)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3017[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTeammateTalentWidget* GetDefaultObj();

	void SetTalentState(enum class ETalentState InTalentUIState, float InAdditionalParam);
	void SetTalentIconByID(uint8 InTalentID);
};

// 0x1D0 (0x1478 - 0x12A8)
// Class Solarland.TechDesignUIOperationDispatcher
class UTechDesignUIOperationDispatcher : public UHUDDispatcherBase
{
public:
	FDelegateProperty_                           OnWidgetAddToBattleUIRequest;                      // 0x12A8(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)
	FDelegateProperty_                           OnWidgetAddToBackpackUIRequest;                    // 0x12B8(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)
	FDelegateProperty_                           OnWidgetAddToMapUIRequest;                         // 0x12C8(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)
	FDelegateProperty_                           OnClearBattleUISlotRequest;                        // 0x12D8(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)
	FDelegateProperty_                           OnClearBackpackUISlotRequest;                      // 0x12E8(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)
	FDelegateProperty_                           OnClearMapUISlotRequest;                           // 0x12F8(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)
	FDelegateProperty_                           OnSetBattleUISubItemVisibilityByGameMode;          // 0x1308(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)
	FDelegateProperty_                           RegisterCustomMapMarkToMiniMap;                    // 0x1318(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)
	FDelegateProperty_                           RegisterCustomMapMarkToBigMap;                     // 0x1328(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)
	FDelegateProperty_                           RemoveCustomMapMarkFromMiniMap;                    // 0x1338(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)
	FDelegateProperty_                           RemoveCustomMapMarkFromBigMap;                     // 0x1348(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)
	FDelegateProperty_                           RegisterCustomRotBarMark;                          // 0x1358(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)
	FDelegateProperty_                           RemoveCustomRotBarMark;                            // 0x1368(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnAllPlayerNavVisibilityChanged;                   // 0x1378(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnBattleUIVisibilityChanged;                       // 0x1388(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnPowerBarVisibilityChanged;                       // 0x1398(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnRotationBarVisibilityChanged;                    // 0x13A8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnMiniMapFovChangeRequested;                       // 0x13B8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FDelegateProperty_                           OnMiniMapInitMarkIconRequested;                    // 0x13C8(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)
	FDelegateProperty_                           OnBigMapAddDotLineRequested;                       // 0x13D8(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)
	FDelegateProperty_                           OnMiniMapAddDotLineRequested;                      // 0x13E8(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnBigMapRemoveDotLineRequested;                    // 0x13F8(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnMiniMapRemoveDotLineRequested;                   // 0x1408(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FDelegateProperty_                           RegisterPositionMark;                              // 0x1418(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)
	FDelegateProperty_                           RegisterActorMark;                                 // 0x1428(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnBattleUIVisibilityHasChanged;                    // 0x1438(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FDelegateProperty_                           OnGettingCanvasPositionOnBattleUI;                 // 0x1448(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)
	FDelegateProperty_                           OnGettingWidgetRenderTransOnBattleUI;              // 0x1458(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)
	FDelegateProperty_                           OnGettingTextOnBackpackUI;                         // 0x1468(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UTechDesignUIOperationDispatcher* GetDefaultObj();

	void SimpleTDDelegate__DelegateSignature();
	void OnWidgetVisibilityHasChanged__DelegateSignature(bool bVisible);
	class FString OnWidgetAddToBattleUIRequest__DelegateSignature(class UPanelSlot** Result, class UWidget* WidgetForAdd, class FName& PanelNameToAdd, bool bReplaceOld);
	class FString OnSetBattleUISubItemVisibilityByGameMode__DelegateSignature(enum class ECustomGameModeTypeForUI GameModeType);
	class FString OnRegisterPositionMarkRequested__DelegateSignature(class UActorMarkBase** Result, TSubclassOf<class UActorMarkBase> MarkClass, struct FVector& Position);
	class FString OnRegisterActorMarkRequested__DelegateSignature(class UActorMarkBase** Result, TSubclassOf<class UActorMarkBase> MarkClass, class AActor* FollowActor);
	class UMapMarkBase* OnMiniMapInitMarkIconRequested__DelegateSignature(TSubclassOf<class UMapMarkBase> MapMarkClass, struct FVector2D& Pivot, int32 ZOrder);
	void OnMiniMapFovChangeRequested__DelegateSignature(float TargetFOV, float PlayTime, bool bWithIconScale);
	int32 OnMapAddDotLineRequested__DelegateSignature(class AActor* StartPointActor, class AActor* EndPointActor, const struct FLinearColor& DotLineColor);
	class FString OnGettingWidgetTransRequest__DelegateSignature(struct FWidgetTransform* Result, class FName& WidgetName);
	class FString OnGettingVector2DRequest__DelegateSignature(struct FVector2D* Result, class FName& WidgetName);
	class FString OnGettingTextRequest__DelegateSignature(class FText* Result, class FName& TextBlockName);
	void OnCustomRotationBarMarkRemoved__DelegateSignature(class URotationBarMarkWidget* MarkToRemove);
	class URotationBarMarkWidget* OnCustomRotationBarMarkRegistered__DelegateSignature(TSubclassOf<class URotationBarMarkWidget> RotationBarMarkClass, struct FVector& MarkPos, int32 ZOrder);
	void OnCustomMapMarkRemoved__DelegateSignature(class UMapMarkBase* MarkToRemove);
	class UMapMarkBase* OnCustomMapMarkRegistered__DelegateSignature(TSubclassOf<class UMapMarkBase> MapMarkClass, struct FVector2D& MarkPos, bool bSupportEdge, bool bSupportEdgeInBigMap, int32 ZOrder);
	class FString OnClearBattleUISlotRequest__DelegateSignature(class FName& PanelNameToClear);
	void IntTDDelegate__DelegateSignature(int32 Value);
	bool GetWidgetRenderTransOnBattleUI(struct FWidgetTransform* Result, class FName WidgetName);
	bool GetTextOnBackpackUI(class FText* Result, class FName TextBlockName);
	bool GetCanvasPositionOnBattleUI(struct FVector2D* Result, class FName ChildName);
	void BroadcastRotationBarVisibilityChanged(bool bVisible);
	void BroadcastPowerBarVisibilityChanged(bool bVisible);
	void BroadcastBattleUIVisibilityChanged(bool bVisible);
	void BroadcastAllPlayerNavVisibilityChanged(bool bVisible);
	void BoolTDDelegate__DelegateSignature(bool bValue);
};

// 0x8 (0x350 - 0x348)
// Class Solarland.Temp_BigMap
class UTemp_BigMap : public USolarUserWidget
{
public:
	uint8                                        Pad_3024[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTemp_BigMap* GetDefaultObj();

	void OnBigMapVisibilitySet(bool bVisible);
	class FString ClearWidgetInPanel(class FName& InPanelName);
	class FString AddWidgetToPanel(class UPanelSlot** OutResult, class UWidget* InWidget, class FName& InPanelName, bool bReplaceOld);
};

// 0x8 (0x350 - 0x348)
// Class Solarland.Temp_Settings
class UTemp_Settings : public USolarUserWidget
{
public:
	uint8                                        Pad_3025[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTemp_Settings* GetDefaultObj();

	void SaveAndQuit();
	void OnSettingRequestOpened(int32 InOwnerType);
};

// 0x160 (0x4A8 - 0x348)
// Class Solarland.Temp_SolarBattleControl
class UTemp_SolarBattleControl : public USolarUserWidget
{
public:
	uint8                                        Pad_3029[0xC8];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<class FString, class UObject*>          IconMap;                                           // 0x410(0x50)(NativeAccessSpecifierPrivate)
	uint8                                        Pad_302A[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UUserWidget*                           UI_KillInfo_A;                                     // 0x468(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UUserWidget*                           UI_KillInfo_B;                                     // 0x470(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_302B[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                RevengeIconName;                                   // 0x488(0x10)(ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USolarAdapterWidget*                   Panel_Shortcut;                                    // 0x498(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Image_UnderWater;                                  // 0x4A0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UTemp_SolarBattleControl* GetDefaultObj();

	class FString SetBattleUISubItemVisibilityByGameMode(enum class ECustomGameModeTypeForUI GameModeType);
	void OnToggleCursorVisibility(bool bIsVisible);
	class UUserWidget* OnHomeGetSelf();
	void OnHideFromLua();
	void OnBattleUIVisibilityChanged(bool bVisible);
	class FString GetRenderTransPosition(struct FWidgetTransform* OutResult, class FName& InPanelName);
	class FString GetCanvasPosition(struct FVector2D* OutResult, class FName& ChildName);
	class FString ClearWidgetInPanel(class FName& InPanelName);
	class FString AddWidgetToPanel(class UPanelSlot** OutResult, class UWidget* InWidget, class FName& InPanelName, bool bReplaceOld);
};

// 0x18 (0x40 - 0x28)
// Class Solarland.TimedEffectController
class UTimedEffectController : public UActorEffectController
{
public:
	float                                        FadeInTime;                                        // 0x28(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        KeepTime;                                          // 0x2C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        FadeOutTime;                                       // 0x30(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_302C[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTimedEffectController* GetDefaultObj();

};

// 0x108 (0x130 - 0x28)
// Class Solarland.Tutorial
class UTutorial : public UObject
{
public:
	uint8                                        Pad_302D[0x38];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTutorialTableRow                     Data;                                              // 0x60(0x98)(Protected, NativeAccessSpecifierProtected)
	class UTutorialTriggerCondition*             TriggerConditionBP;                                // 0xF8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTutorialTaskSequenceAction*           TutorialTask;                                      // 0x100(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_302E[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTutorial* GetDefaultObj();

	void Stop();
	void OnSingleTaskFinish();
	struct FTutorialTableRow GetTableRowData();
	int32 GetCurrentFinishNum();
};

// 0x0 (0x28 - 0x28)
// Class Solarland.TutorialCondition
class UTutorialCondition : public UObject
{
public:

	static class UClass* StaticClass();
	static class UTutorialCondition* GetDefaultObj();

	class FString GetWorldName();
	class ASolarCharacter* GetPlayer();
};

// 0x1D0 (0x1F8 - 0x28)
// Class Solarland.TutorialActionCondition
class UTutorialActionCondition : public UTutorialCondition
{
public:
	struct FTutorialActionTableRow               ActionData;                                        // 0x28(0x1D0)(BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UTutorialActionCondition* GetDefaultObj();

	void SpawnFixedAreaInteractActor(int32 SpawnerID, class ATutorialLevelInteractableActor** OutActor);
	void OnReset();
	void OnEnd();
	void OnBegin();
	class USolarTutorialManager* GetSolarTutorialManager();
	void GetBotAIsOnVehicle(const TArray<int32>& SpawnerIds, TArray<class ASolarBotAIControllerOnVehicle*>* OutBotAI);
	void GetBotAIs(const TArray<int32>& SpawnerIds, TArray<class ASolarBotAIControllerInGuide*>* OutBotAI);
	void GetAllActorsOfClass(TSubclassOf<class AActor> ActorClass, TArray<class AActor*>* OutActors);
	bool CheckSatisfy();
};

// 0x0 (0x228 - 0x228)
// Class Solarland.TutorialLevelInteractableActor
class ATutorialLevelInteractableActor : public AActor
{
public:

	static class UClass* StaticClass();
	static class ATutorialLevelInteractableActor* GetDefaultObj();

	void UnregisterEvent();
	void RegisterEvent();
	class USolarTutorialManager* GetSolarTutorialManager();
};

// 0x58 (0x80 - 0x28)
// Class Solarland.TutorialLevelSaveGame
class UTutorialLevelSaveGame : public USaveGame
{
public:
	TMap<class FString, struct FTutorialLevelSaveData> TutorialLevelSaveDatas;                            // 0x28(0x50)(NativeAccessSpecifierPublic)
	enum class EPlayerProficiency                PlayerProficiency;                                 // 0x78(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3030[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTutorialLevelSaveGame* GetDefaultObj();

};

// 0x28 (0x250 - 0x228)
// Class Solarland.TutorialLevelSpawner
class ATutorialLevelSpawner : public AActor
{
public:
	int32                                        SpawnerID;                                         // 0x228(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               BoxExtent;                                         // 0x22C(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bSpawnBeginPlay;                                   // 0x238(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3031[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DelayTime;                                         // 0x23C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ATutorialLevelInteractableActor> InteractableActorClass;                            // 0x240(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3032[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ATutorialLevelSpawner* GetDefaultObj();

	class ATutorialLevelInteractableActor* SpawnInteractActor();
};

// 0x70 (0x6A0 - 0x630)
// Class Solarland.TutorialLevelSplineComponent
class UTutorialLevelSplineComponent : public USplineComponent
{
public:
	TMap<enum class ESplineMeshType, struct FSplineMeshDetails> SplineMeshMap;                                     // 0x630(0x50)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	class UTutorialLevelSplineComponent*         FollowingSpline;                                   // 0x680(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class USplineMeshComponent*>          SplineMeshComponents;                              // 0x688(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3033[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTutorialLevelSplineComponent* GetDefaultObj();

	void SetMeshsVisibility(bool bNewVisibility, bool bPropagateToChildren);
	void SetFollowingSpline(class UTutorialLevelSplineComponent* InFollowingSpline);
	void CreateSplineMesh();
};

// 0x210 (0x280 - 0x70)
// Class Solarland.TutorialStepAction
class UTutorialStepAction : public UActionNode
{
public:
	uint8                                        Pad_3034[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        OwnerTutorialID;                                   // 0x98(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3035[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTutorialActionTableRow               Data;                                              // 0xA0(0x1D0)(NativeAccessSpecifierPrivate)
	class UTutorialActionCondition*              InterruptConditionBP;                              // 0x270(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTutorialActionCondition*              EndConditionBP;                                    // 0x278(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UTutorialStepAction* GetDefaultObj();

	void StartRepeatOperation();
	void SpawnBotAIsOnVehicle(const TArray<int32>& SpawnerIds);
	void SpawnBotAIs(const TArray<int32>& SpawnerIds);
	void ShowUI();
	void RepeatOperation();
	void ReceiveTick(float DeltaTime);
	void ReceiveSetupData();
	void ReceiveOnReset();
	void ReceiveOnEnd();
	void ReceiveOnBegin();
	void ReceiveMinExecuteTimeUp();
	void OnResetEvent();
	void OnEndedEvent();
	void OnDisposedEvent();
	void OnBeganEvent();
	struct FTutorialActionTableRow GetTableRowData();
	void DestoryBotAIsOnVehicle(const TArray<int32>& SpawnerIds);
	void DestoryBotAIs(const TArray<int32>& SpawnerIds);
};

// 0x0 (0x90 - 0x90)
// Class Solarland.TutorialTaskSequenceAction
class UTutorialTaskSequenceAction : public USequenceNode
{
public:

	static class UClass* StaticClass();
	static class UTutorialTaskSequenceAction* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Solarland.TutorialTriggerCondition
class UTutorialTriggerCondition : public UTutorialCondition
{
public:

	static class UClass* StaticClass();
	static class UTutorialTriggerCondition* GetDefaultObj();

	class USolarTutorialManager* GetSolarTutorialManager();
	bool CheckSatisfy(struct FTutorialTableRow& InData);
};

// 0x78 (0x2D8 - 0x260)
// Class Solarland.TweenBase
class UTweenBase : public UUserWidget
{
public:
	bool                                         AutoPlay;                                          // 0x260(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3037[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Interval;                                          // 0x264(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bLoop;                                             // 0x268(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEndHide;                                          // 0x269(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3038[0x26];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnTweenStart;                                      // 0x290(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnTweenStop;                                       // 0x2A0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                        Pad_3039[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UWidget*                               LinkWidget;                                        // 0x2C0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_303A[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        Progress;                                          // 0x2CC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_303B[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UTweenBase* GetDefaultObj();

	void Stop();
	void Reset();
	void Play();
	void InitAndPlay();
	void Init();
};

// 0xF8 (0x3D0 - 0x2D8)
// Class Solarland.TweenImage
class UTweenImage : public UTweenBase
{
public:
	class UImage*                                TargetImg;                                         // 0x2D8(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FUIScaleTween                         ScaleTween;                                        // 0x2E0(0x40)(Edit, BlueprintVisible, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FUIPositionTween                      PostionTween;                                      // 0x320(0x40)(Edit, BlueprintVisible, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FImageColorTween                      ColorTween;                                        // 0x360(0x48)(Edit, BlueprintVisible, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FUIRenderOpacityTween                 OpacityTween;                                      // 0x3A8(0x28)(Edit, BlueprintVisible, ContainsInstancedReference, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UTweenImage* GetDefaultObj();

	void InitImageTween();
};

// 0xD0 (0x3A8 - 0x2D8)
// Class Solarland.TweenText
class UTweenText : public UTweenBase
{
public:
	class UTextBlock*                            TargetText;                                        // 0x2D8(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FUIScaleTween                         ScaleTween;                                        // 0x2E0(0x40)(Edit, BlueprintVisible, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FUIPositionTween                      PostionTween;                                      // 0x320(0x40)(Edit, BlueprintVisible, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FTextColorTween                       ColorTween;                                        // 0x360(0x48)(Edit, BlueprintVisible, ContainsInstancedReference, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UTweenText* GetDefaultObj();

};

// 0xB0 (0x388 - 0x2D8)
// Class Solarland.TweenWidget
class UTweenWidget : public UTweenBase
{
public:
	class UWidget*                               TargetWidget;                                      // 0x2D8(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FUIScaleTween                         ScaleTween;                                        // 0x2E0(0x40)(Edit, BlueprintVisible, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FUIPositionTween                      PostionTween;                                      // 0x320(0x40)(Edit, BlueprintVisible, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FUIRenderOpacityTween                 OpacityTween;                                      // 0x360(0x28)(Edit, BlueprintVisible, ContainsInstancedReference, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UTweenWidget* GetDefaultObj();

};

// 0x1A0 (0x4E8 - 0x348)
// Class Solarland.UIBackpackWeaponWidget
class UUIBackpackWeaponWidget : public USolarUserWidget
{
public:
	class UButton*                               BtnWeapon;                                         // 0x348(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCanvasPanel*                          Panel_Empty;                                       // 0x350(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                          Panel_Info;                                        // 0x358(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHorizontalBox*                        HorizontalBox_Name;                                // 0x360(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHorizontalBox*                        HorizontalBox_Ammo;                                // 0x368(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Img_Bg;                                            // 0x370(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Img_DragDetect;                                    // 0x378(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUIDragWidget*                         Drag_Weapon;                                       // 0x380(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarTextBlock*                       Txt_Name;                                          // 0x388(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarTextBlock*                       Txt_BulletNum;                                     // 0x390(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarTextBlock*                       Txt_BulletSum;                                     // 0x398(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarTextBlock*                       Txt_Range;                                         // 0x3A0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarTextBlock*                       Txt_Difficulty;                                    // 0x3A8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UVerticalBox*                          Weapon_Detail;                                     // 0x3B0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarTextBlock*                       Txt_Weapon_Type;                                   // 0x3B8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarTextBlock*                       Txt_DMGNum;                                        // 0x3C0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Img_BulletIcon;                                    // 0x3C8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHorizontalBox*                        Weapon_Parts_New;                                  // 0x3D0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUIWeaponPartWidget*                   Weapon_Part_Muzzle;                                // 0x3D8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUIWeaponPartWidget*                   Weapon_Part_Grip;                                  // 0x3E0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUIWeaponPartWidget*                   Weapon_Part_Clip;                                  // 0x3E8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUIWeaponPartWidget*                   Weapon_Part_Scope;                                 // 0x3F0(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUIWeaponPartWidget*                   Weapon_Part_GunStock;                              // 0x3F8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        Weaponid;                                          // 0x400(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint32                                       WeaponUniqueID;                                    // 0x404(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        WeaponSlot;                                        // 0x408(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        WeaponAmmoNum;                                     // 0x40C(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        WeaponExtraAmmoNum;                                // 0x410(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EWidgetPassiveMode                WeaponPassiveMode;                                 // 0x414(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_303E[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<enum class EWeaponType, int32>          WeaponType2TextIdMap;                              // 0x418(0x50)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	TMap<enum class EWeaponType, struct FSoftObjectPath> WeaponType2BulltSpMap;                             // 0x468(0x50)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	struct FVector2D                             ImgSkillSize;                                      // 0x4B8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_303F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TWeakObjectPtr<class ASolarPlayerNormalWeapon> OwnerWeapon;                                       // 0x4C4(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3040[0x1C];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UUIBackpackWeaponWidget* GetDefaultObj();

	void UpdatePassiveMode();
	void SetWidgetPassiveMode(enum class EWidgetPassiveMode InMode);
	void SetWeaponSlot(int32 InWeaponSlot);
	void RefreshBySlot(int32 InWeaponSlot);
	void OnWeaponUpdateAmmoCount(int32 InFireModeType, class ASolarWeapon* InWeapon);
	void OnWeaponSlotUpdateAmmo(int32 InWeaponSlotID);
	void OnWeaponSlotQuitReload(int32 InWeaponSlotID, bool InbFinishReload);
	void OnWeaponPartChanged(int32 InWeaponID);
	void OnWeaponAmmoChanged(int32 InWeaponSlot, int32 InCurrNum, int32 MaxNum);
	void OnCharacterLevelChanged(int32 NewLevel);
};

// 0x2B0 (0x5F8 - 0x348)
// Class Solarland.UIBackpackWidget
class UUIBackpackWidget : public USolarUserWidget
{
public:
	class UUIWeaponPartWidget*                   Weapon_Part_Muzzle;                                // 0x348(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUIWeaponPartWidget*                   Weapon_Part_Grip;                                  // 0x350(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUIWeaponPartWidget*                   Weapon_Part_Clip;                                  // 0x358(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUIWeaponPartWidget*                   Weapon_Part_Scope;                                 // 0x360(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUIWeaponPartWidget*                   Weapon_Part_GunStock;                              // 0x368(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URichTextBlock*                        TextBlock_item_1;                                  // 0x370(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URichTextBlock*                        TextBlock_item_2;                                  // 0x378(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URichTextBlock*                        TextBlock_item_3;                                  // 0x380(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URichTextBlock*                        TextBlock_item_4;                                  // 0x388(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URichTextBlock*                        TextBlock_item_5;                                  // 0x390(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URichTextBlock*                        TextBlock_item_6;                                  // 0x398(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URichTextBlock*                        TextBlock_item_7;                                  // 0x3A0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URichTextBlock*                        TextBlock_item_8;                                  // 0x3A8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URichTextBlock*                        TextBlock_item_9;                                  // 0x3B0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUIDragWidget*                         Dragitem_item_1;                                   // 0x3B8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUIDragWidget*                         Dragitem_item_2;                                   // 0x3C0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUIDragWidget*                         Dragitem_item_3;                                   // 0x3C8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUIDragWidget*                         Dragitem_item_4;                                   // 0x3D0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUIDragWidget*                         Dragitem_item_5;                                   // 0x3D8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUIDragWidget*                         Dragitem_item_6;                                   // 0x3E0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUIDragWidget*                         Dragitem_item_7;                                   // 0x3E8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUIDragWidget*                         Dragitem_item_8;                                   // 0x3F0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUIDragWidget*                         Dragitem_item_9;                                   // 0x3F8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUIDragWidget*                         Dragitem_Relive;                                   // 0x400(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUIBackpackWeaponWidget*               Weapon_A;                                          // 0x408(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUIBackpackWeaponWidget*               Weapon_B;                                          // 0x410(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUIDragWidget*                         Dragitem_Summon;                                   // 0x418(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                          Panel_Empty;                                       // 0x420(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Img_Summon_Bg;                                     // 0x428(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUIDragWidget*                         Dragitem_equip_1;                                  // 0x430(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUIDragWidget*                         Dragitem_equip_2;                                  // 0x438(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUIDragWidget*                         Dragitem_equip_3;                                  // 0x440(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUIDragWidget*                         Dragitem_equip_4;                                  // 0x448(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Item_BG_1;                                         // 0x450(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Item_BG_2;                                         // 0x458(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Item_BG_3;                                         // 0x460(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Item_BG_4;                                         // 0x468(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Item_Quality_BG_1;                                 // 0x470(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Item_Quality_BG_2;                                 // 0x478(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Item_Quality_BG_3;                                 // 0x480(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Item_Quality_BG_4;                                 // 0x488(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Equip_Icon_1;                                      // 0x490(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Equip_Icon_2;                                      // 0x498(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Equip_Icon_3;                                      // 0x4A0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Equip_Icon_4;                                      // 0x4A8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UButton*                               BtnShield;                                         // 0x4B0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UButton*                               BtnBattery;                                        // 0x4B8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UButton*                               BtnHorPush;                                        // 0x4C0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UButton*                               BtnVerPush;                                        // 0x4C8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UButton*                               BtnRespawn;                                        // 0x4D0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UButton*                               BtnSpecial;                                        // 0x4D8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UButton*                               BtnSMGAmmo;                                        // 0x4E0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarTextBlock*                       Txt_Relive;                                        // 0x4E8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Relive_Quality_BG;                                 // 0x4F0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOverlay*                              Relive;                                            // 0x4F8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetSwitcher*                       WidgetSwitcher_Mode;                               // 0x500(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                          PickupPosition;                                    // 0x508(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UButton*                               Button_Close;                                      // 0x510(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUIDropMaskWidget*                     OnDropMask;                                        // 0x518(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUIDropMaskWidget*                     OnDropMask_1;                                      // 0x520(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                Style_ItemNum;                                     // 0x528(0x10)(Edit, BlueprintVisible, ZeroConstructor, EditConst, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                Style_MaxNum;                                      // 0x538(0x10)(Edit, BlueprintVisible, ZeroConstructor, EditConst, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                EquipTexPrePath;                                   // 0x548(0x10)(Edit, BlueprintVisible, ZeroConstructor, EditConst, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bWeaponPartInit;                                   // 0x558(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3044[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<int32>                                ItemIDArray;                                       // 0x560(0x10)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class URichTextBlock*>                ItemTextArray;                                     // 0x570(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UUIDragWidget*>                 ItemDragWidgetArray;                               // 0x580(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<enum class EItemType>                 EquipTypeArray;                                    // 0x590(0x10)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UUIDragWidget*>                 EquipDragWidgetArray;                              // 0x5A0(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UImage*>                        EquipBGArray;                                      // 0x5B0(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UImage*>                        EquipQualityBGArray;                               // 0x5C0(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UImage*>                        EquipIconArray;                                    // 0x5D0(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UButton*>                       EquipBtnArray;                                     // 0x5E0(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        MaxUpgradeLevel;                                   // 0x5F0(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3045[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UUIBackpackWidget* GetDefaultObj();

	void UpdateReviveItemDisplay();
	void UpdateLevelProgress(float Level);
	void ShowWeaponUI();
	void ShowWeaponPartsUI();
	void ShowItemUI();
	void ShowHomeItemUI();
	void ShowEquipUI();
	void RefreshUpgradeRewardsDetail(int32 Level, TArray<enum class EClassLevelUpRewardType>& RewardTypeArray, TArray<struct FSoftObjectPath>& IconPathArray, TArray<class FString>& DescriptionArray);
	void RefreshTacticalSkillInfo(const class FString& Name, const class FString& Description, TSoftObjectPtr<class UTexture2D>& IconPath);
	void RefreshSuperSkillInfo(const class FString& Name, const class FString& Description, TSoftObjectPtr<class UTexture2D>& IconPath);
	void RefreshSummonWeapon();
	void RefreshPassiveSkillInfo(const class FString& Name, const class FString& Description, TSoftObjectPtr<class UTexture2D>& IconPath);
	void RefreshCharacterNameAndIcon(const class FString& Name, TSoftObjectPtr<class UTexture2D>& IconPath);
	void OnWeaponWidgetClicked();
	void OnSetDropMaskVisibility(bool bVisible);
	void OnPlayerStateRep(enum class EPlayerStateRepType RepType, class APlayerState* PlayerState);
	void OnCharacterLevelExpChanged(int32 NewLevel, float NewExpRatio);
	void OnCharacterIDSet(int32 CharacterId);
	void OnCharacterDead(class ASolarCharacter* InCharacter);
	void OnBtnVerPushClicked();
	void OnBtnSpecialClicked();
	void OnBtnShieldClicked();
	void OnBtnRespawnClicked();
	void OnBtnHorPushClicked();
	void OnBtnCloseClicked();
	void OnBtnBatteryClicked();
	void OnBackpackVisibilitySet(bool bInVisible);
	void OnBackpackModeChanged(int32 ModeIndex);
	void InitDefaultWeaponPart();
	void HideUpgradeDetail(int32 Level);
	class FString ClearWidgetInPanel(class FName& InPanelName);
	void BindDelegates();
	class FString AddWidgetToPanel(class UPanelSlot** OutResult, class UWidget* InWidget, class FName& InPanelName, bool bReplaceOld);
};

// 0x30 (0x378 - 0x348)
// Class Solarland.UIComponentNationalFlag
class UUIComponentNationalFlag : public USolarUserWidget
{
public:
	struct FVector2D                             NationalFlagSize;                                  // 0x348(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             ClanFlagSize;                                      // 0x350(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bIgnoreAccountFlagSwitch;                          // 0x358(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3047[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UImage*                                Img_FlagIcon;                                      // 0x360(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarImageURL*                        Img_ClanFlag;                                      // 0x368(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        CurFlagId;                                         // 0x370(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3048[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UUIComponentNationalFlag* GetDefaultObj();

	void SetNationalFlagType();
	void SetDefaultNationalFlag();
	void SetDefaultClanFlag();
	void SetClanFlagType();
	void RefreshFlagByPath(const class FString& TextureFullPath);
	void RefreshFlag(int32 InFlagID);
	void RefreshClanFlagByPath(const class FString& TextureFullPath);
	void LoadClanFlagByUrl();
	bool IsExclusiveFlagId(int32 InFlagID);
	bool IsBroadCastMode();
};

// 0x0 (0x348 - 0x348)
// Class Solarland.UIComponentPlayerName
class UUIComponentPlayerName : public USolarUserWidget
{
public:

	static class UClass* StaticClass();
	static class UUIComponentPlayerName* GetDefaultObj();

	void UpdatePlayerNameAndStyle(const class FString& NickName, uint8 VipType, bool bCheat, bool bKilled);
	void SetVip(uint8 VipType);
	void SetTextColorAndOpacity(const struct FSlateColor& InColor);
	void SetText(const class FString& Content);
	void SetStyle(uint8 VipType, bool bCheat, bool bKilled);
	void SetDeath(bool bDeath);
	void SetCheater(bool bCheat);
};

// 0x1C0 (0x508 - 0x348)
// Class Solarland.UICustomNoticeLayerWidget
class UUICustomNoticeLayerWidget : public USolarUserWidget
{
public:
	TMap<enum class ECustomNoticeType, class UCanvasPanel*> NoticePanel;                                       // 0x348(0x50)(BlueprintVisible, ExportObject, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_3050[0xA0];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<enum class ECustomNoticeColor, struct FNoticeColorData> NoticeColor;                                       // 0x438(0x50)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	class UCustomNoticeTable*                    NoticeConfig;                                      // 0x488(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCustomNoticeImageTable*               NoticeImageConfig;                                 // 0x490(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FSoftObjectPath                       GlobalKillNoticeWidgetPath;                        // 0x498(0x18)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        GlobalKillMaxShowNum;                              // 0x4B0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        GlobalKillNoticeBeginPosX;                         // 0x4B4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        GlobalKillNoticeBeginPosY;                         // 0x4B8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        GlobalKillNoticeInterval;                          // 0x4BC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3051[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TWeakObjectPtr<class UBattleNoticePickup>    PickUpNoticeNormalPtr;                             // 0x4E8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class UBattleNoticePickup>    PickUpNoticeHomePtr;                               // 0x4F0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class UBattleNoticeEquipReplace> EquipReplaceNoticePtr;                             // 0x4F8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3052[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        SkydivingCaptainNoticeId;                          // 0x504(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UUICustomNoticeLayerWidget* GetDefaultObj();

	void UpdateGlobalKillNoticePosition();
	void ShowWidgetAsync(struct FNoticeData* NoticeData);
	void ShowGameNoticeCustom(const class FString& NoticeText, enum class ECustomNoticeType NoticeType, TSubclassOf<class UUINoticeBase> NoticeClass, float NoticeTime, enum class ECustomNoticeColor NoticeColor, class UPaperSprite* NoticeIcon);
	void ShowGameNoticeByID(int32 NoticeId, TMap<class FString, class FString>& Param);
	void OnSkydivingCaptainChanged(int32 TeamIndex, const class FString& PlayerName, bool IsLocalPlayer);
	void OnShowHUDGameNotice(int32 InNoticeID, struct FHUDNoticeParams& InNoticeParams);
	void OnPickUpNoticeAnimFinished();
	void InitNoticePanel();
};

// 0x88 (0x3D0 - 0x348)
// Class Solarland.UIDefenderPlaerShowWidget
class UUIDefenderPlaerShowWidget : public USolarUserWidget
{
public:
	class UScaleBox*                             ScaleBox_Card;                                     // 0x348(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                PlayerName;                                        // 0x350(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        Level;                                             // 0x360(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        RankLevelID;                                       // 0x364(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        PlayerGender;                                      // 0x368(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsMyTeam;                                         // 0x36C(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3058[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        PlayerSeat;                                        // 0x370(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsMySelf;                                         // 0x374(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3059[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        CardPose;                                          // 0x378(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        Cardbackground;                                    // 0x37C(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FExpRankMedalData>             AllExpRankMedalData;                               // 0x380(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        CharacterExp;                                      // 0x390(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_305A[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FMedalInfo>                    TargetCardMedalArray;                              // 0x398(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ASolarPlayerState*                     PlayerState;                                       // 0x3A8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ASolarBusinessCardCharacter*           RTCharacter;                                       // 0x3B0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AActor*                                RTCharacterBackground;                             // 0x3B8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               RTLocation;                                        // 0x3C0(0xC)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_305B[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UUIDefenderPlaerShowWidget* GetDefaultObj();

	void SetPlayerShowInfo(class ASolarPlayerState* PS, bool bIsSelf, int32 Seat, bool bIsSelfTeam, int32 SelfLevel, const struct FVector& CardRTLocation);
	void SetPlayerBusinessInfo(class ASolarPlayerState* PS, int32 PlayerNumber, const struct FExpRankMedalData& ExpRankMedalData);
	void SetCharacterSkin();
	void SetBusinessCard(int32 PoseId, int32 BackgroundId, int32 SkinId, class UScaleBox* ParentPanel);
	void OnRefreshWidget();
	class FString GetNameCardCharacterPathByCharacterIDAndCardPose(int32 CharacterId, int32 CardPoseID);
};

// 0x120 (0x468 - 0x348)
// Class Solarland.UIDefenderTeamShowWidget
class UUIDefenderTeamShowWidget : public USolarUserWidget
{
public:
	class UUIDefenderPlaerShowWidget*            Player_1;                                          // 0x348(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUIDefenderPlaerShowWidget*            Player_2;                                          // 0x350(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUIDefenderPlaerShowWidget*            Player_3;                                          // 0x358(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUIDefenderPlaerShowWidget*            Player_4;                                          // 0x360(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Exit_Anim;                                         // 0x368(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        PlayerNum;                                         // 0x370(0x4)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsMyTeam;                                         // 0x374(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_305C[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  LevelName;                                         // 0x378(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                ActorName_1;                                       // 0x380(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                ActorName_2;                                       // 0x390(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                ActorName_3;                                       // 0x3A0(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                ActorName_4;                                       // 0x3B0(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                CameraName_1;                                      // 0x3C0(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                CameraName_2;                                      // 0x3D0(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                CameraName_3;                                      // 0x3E0(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                CameraName_4;                                      // 0x3F0(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class ASolarPlayerState*>             MyTeamPlayerState;                                 // 0x400(0x10)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class ASolarPlayerState*>             DefenderTeamPlayerState;                           // 0x410(0x10)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UUIDefenderPlaerShowWidget*>    ShowWidget;                                        // 0x420(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class AActor*>                        OutActors;                                         // 0x430(0x10)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class ASceneCapture2D*>               OutSceneCapture2Ds;                                // 0x440(0x10)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FWidgetTransform>              Transforms;                                        // 0x450(0x10)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_305D[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UUIDefenderTeamShowWidget* GetDefaultObj();

	void UpdateOpeningShow(enum class EDefenderTeamType TeamType);
	void SwitchTeamShow(enum class EDefenderTeamType TeamType);
	void ShowPlayerInfo();
	void SetMyTeamPlayerState(TArray<class ASolarPlayerState*>& TeamPlayerState);
	void SetDefenderTeamPlayerState(TArray<class ASolarPlayerState*>& TeamPlayerState);
	void CloseDefenderTeamShowWidget();
};

// 0xE8 (0x430 - 0x348)
// Class Solarland.UIDragWidget
class UUIDragWidget : public USolarUserWidget
{
public:
	uint8                                        Pad_3060[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UImage*                                ItemImage;                                         // 0x358(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USizeBox*                              WidgetSize;                                        // 0x360(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FSlateBrush                           ImageOuter;                                        // 0x368(0x98)(Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	int32                                        ItemID;                                            // 0x400(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        ItemNum;                                           // 0x404(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EItemType                         ItemType;                                          // 0x408(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3061[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                ItemName;                                          // 0x410(0x10)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        WeaponSlot;                                        // 0x420(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                             OffsetVec;                                         // 0x424(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3062[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UUIDragWidget* GetDefaultObj();

	void SetDragWidgetSize(const struct FVector2D& InSize);
	void SetDragWeaponSlot(int32 InWeaponSlot);
	void SetDragItemData(int32 InID, int32 InNum, int32 InItemType, const class FString& InItemName);
	void SetDragImageRenderScale(const struct FVector2D& InScale);
	void SetDragImageBrushFromTexture(class UTexture2D* InTexture2D, bool InMatchSize);
	void SetDragImageBrush(struct FSlateBrush& InBrush);
	void OnEndDragDropCall(bool InVisibility);
	void BindDelegates();
};

// 0x8 (0x350 - 0x348)
// Class Solarland.UIDropMaskWidget
class UUIDropMaskWidget : public USolarUserWidget
{
public:
	class USolarDragDropOperation*               OperationData;                                     // 0x348(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UUIDropMaskWidget* GetDefaultObj();

	void OnDropMutiItem(int32 InItemID, int32 InTotalCount);
	void OnDropConfirmHandle();
};

// 0x50 (0x398 - 0x348)
// Class Solarland.UIEmojiContainer
class UUIEmojiContainer : public USolarUserWidget
{
public:
	uint8                                        Pad_3063[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UCanvasPanel*                          Panel;                                             // 0x358(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3064[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class USolarUserWidget>          CommonEmojiBubbleSubClass;                         // 0x370(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PreCreateEmojiNum;                                 // 0x378(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3065[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSoftObjectPath                       EmojiTablePath;                                    // 0x380(0x18)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UUIEmojiContainer* GetDefaultObj();

};

// 0xF0 (0x120 - 0x30)
// Class Solarland.UIGlobalConfig
class UUIGlobalConfig : public UDataAsset
{
public:
	TMap<uint8, struct FTeamMemberColor>         TeamMemberColors;                                  // 0x30(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TMap<uint8, struct FItemQualityData>         ItemQualityData;                                   // 0x80(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TMap<uint8, struct FOBTeamColor>             OBTeamColors;                                      // 0xD0(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UUIGlobalConfig* GetDefaultObj();

	struct FOBTeamColor GetOBTeamColor(int32 TeamNum);
};

// 0x0 (0x348 - 0x348)
// Class Solarland.UIInputDevice
class UUIInputDevice : public USolarUserWidget
{
public:

	static class UClass* StaticClass();
	static class UUIInputDevice* GetDefaultObj();

	void UpdateInputType(enum class ECommonInputType InputDevice);
};

// 0x20 (0x280 - 0x260)
// Class Solarland.UILayerBase
class UUILayerBase : public UUserWidget
{
public:
	class UCanvasPanel*                          InGameBaseUILayer;                                 // 0x260(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                          VirtualControllerLayer;                            // 0x268(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                          InGamePopupLayer;                                  // 0x270(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                          OutGameUILayer;                                    // 0x278(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UUILayerBase* GetDefaultObj();

};

// 0x108 (0x138 - 0x30)
// Class Solarland.UIManager
class UUIManager : public USolarGameManager
{
public:
	uint8                                        Pad_3078[0x38];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<FDelegateProperty_>                   OnBigMapOpenDelegateGroup;                         // 0x68(0x10)(ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<FDelegateProperty_>                   OnBigMapVisibilityChangedDelegateGroup;            // 0x78(0x10)(ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDataTable*                            BattleWidgetSettings;                              // 0x88(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarUIRoot*                          SolarUIRoot;                                       // 0x90(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FDestroyObjectStruct>          NeedToDestroyObjects;                              // 0x98(0x10)(ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3079[0x90];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UUIManager* GetDefaultObj();

	void WatchReference();
	void WatchAllReference();
	void UpdateButtonSprite(class UButton* TargetButton, const class FString& AtlasType, const class FString& NormalSpName, const class FString& PressedSpName, const class FString& HoveredSpName, const class FString& DisableSpName);
	void TriggerDelegate();
	class USolarUserWidget* ShowUIByName(const class FString& InName, int32 RootID);
	void SetWidgetLayout(class UWidget* InWidget, float Scale, float Opacity, float PositionX, float PositionY, bool bInVisible, bool bInCanHide, float AnchorsMinimumX, float AnchorsMinimumY, float AnchorsMaximumX, float AnchorsMaximumY);
	void SetWidgetChildrenLayout(class UUserWidget* InRootWidget, class FName& PanelAliasName, float Scale, float Opacity, float PositionX, float PositionY, bool bInVisible, bool bInCanHide, float AnchorsMinimumX, float AnchorsMinimumY, float AnchorsMaximumX, float AnchorsMaximumY);
	class USolarUserWidget* SetUIActive(class USolarUserWidget* InWidget, bool Inactive);
	void SetMaterialInstanceParams(class UImage* Image, const class FString& ParamName, float Value);
	void SetMaterialInstanceColor(class UImage* Image, const class FString& ParamName, struct FLinearColor& Value);
	void SetLoadingUIByLevelAndDisplay(int32 InModelID, int32 InLevel, int32 InMapIndex, bool InDisableCustomLoading);
	void SetImageTintColor(class UImage* Img, struct FLinearColor& InColor);
	void SetImageTexture(class UImage* Img, class UTexture2D* Texture);
	void SetImageFromTextureOrSprite(class UImage* DstImage, struct FSoftObjectPath& Path, bool bMatchSize);
	void SetImageColor(class UImage* Img, float R, float G, float B, float A);
	void SetFireInputStyle(class UFireInputWidget* FireInput, class USlateWidgetStyleAsset* Style);
	void SetCheckedState(class UCheckBox* Box, enum class ECheckBoxState State);
	void SetCheckboxStyle(class UCheckBox* CheckBox, class USlateWidgetStyleAsset* Style);
	void SetCheckBoxIsChecked(class UCheckBox* CheckBox, bool Checked);
	void SetButtonStyle(class UButton* Btn, class USlateWidgetStyleAsset* Style);
	void RemoveAllWidgets();
	void OpenUIGM(const class FString& UIID, int32 RootID);
	void OpenConfirmUIInLua(int32 ConfirmID);
	void OnLuaHotReloadFileChanged(const class FString& LuaSysPath, const class FString& LuaPathName);
	void OnInitLuaHotReload();
	void OnGameManagersInitialized();
	void OnClientStartGame();
	void LuaCloseUI(const class FString& MapName);
	class UTexture2D* LoadTexture2DBySoftPath(struct FSoftObjectPath& Path);
	class UTexture2D* LoadTexture2DByPath(class UObject* InOuter, const class FString& FullPath);
	class UTexture2D* LoadTexture2D(class UObject* InOuter, const class FString& TextureType, const class FString& TexName);
	class UTexture2D* LoadQualityBG(class UObject* InOuter, int32 InQuality);
	class UPaperSprite* LoadPaperSprite(class UObject* InOuter, const class FString& AtlasPath, const class FString& SpName);
	class UMaterialInterface* LoadMaterialInstance(class UObject* InOuter, const class FString& MaterialType, const class FString& MaterialName);
	bool IsWidgetVisibleForDisplay(class UWidget* InWidget);
	void InvalidateWidgetPrepass(class UWidget* InWidget);
	void InitLvlTextWidget(class UTextBlock* InHeadTextWidget, class UTextBlock* InTrailTextWidget);
	class ASolarCharacter* GetWidgetOwningCharacter(class UWidget* InWidget);
	class FString GetWeaponTextureFullPath(class FString* IconPath);
	class UUserWidget* GetUIPanel(const class FString& MapName);
	class FString GetTexture2DFullPath(class FString* PrePath, class FString* IconPath);
	class FString GetQualityBGFullPath(int32 InQuality, bool bWithSuffix);
	class UTexture2D* GetPlayerAvatarByID(int32 PlayerAvatarID);
	int32 GetLobbyID();
	bool GetCheckBoxIsChecked(class UCheckBox* CheckBox);
	class UCanvasPanelSlot* GetCanvasPanelSlotForWidget(class UWidget* Widget);
	struct FCustomWidget_TableRow GetBattleWidgetSetting(const class FString& ConfigName);
	class UUserWidget* GetBattleBackpackWidget();
	void ExitSpectateMode();
	void EnterSpectateMode();
	void CloseUIGM(const class FString& UIID);
	void CloseLoadingUI();
	struct FMargin ClampInScreenOffsets(class UWidget* WorldContextObject, struct FMargin& Offsets, struct FAnchors& Anchors, struct FVector2D& Alignment);
};

// 0x60 (0x3A8 - 0x348)
// Class Solarland.UIMassDiscardWidget
class UUIMassDiscardWidget : public USolarUserWidget
{
public:
	uint8                                        Pad_307A[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UButton*                               Button_Increase;                                   // 0x368(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UButton*                               Button_Decrease;                                   // 0x370(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UComponentButtonBaseWidget*            Button_Confirm;                                    // 0x378(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UComponentButtonBaseWidget*            Button_Cancel;                                     // 0x380(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USlider*                               Slider_Quantity;                                   // 0x388(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UProgressBar*                          ProgressBar_Quantity;                              // 0x390(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                            Text_Quantity;                                     // 0x398(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                            Text_Total;                                        // 0x3A0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UUIMassDiscardWidget* GetDefaultObj();

	void SetDiscardItemData(int32 InItemID, int32 InTotalCount);
	void OnSliderValueChanged(float InValue);
	void OnLongPressUpdate();
	void OnDiscardItemNumChanged();
	void OnBtnIncreaseReleased();
	void OnBtnIncreasePressed();
	void OnBtnIncreaseClicked();
	void OnBtnDecreaseReleased();
	void OnBtnDecreasePressed();
	void OnBtnDecreaseClicked();
	void OnBtnConfirmClicked();
	void OnBtnCancelClicked();
	void InitWidgets();
	void BindDelegates();
};

// 0x90 (0xC0 - 0x30)
// Class Solarland.UINavigationManager
class UUINavigationManager : public USolarGameManager
{
public:
	uint8                                        Pad_307E[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<class FString, class USolarUserWidget*> WidgetOpenedMap;                                   // 0x38(0x50)(ExportObject, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<class USolarUserWidget*>              TmpRemovedWidgets;                                 // 0x88(0x10)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<TWeakObjectPtr<class USolarUserWidget>> CachedCreatedWidgets;                              // 0x98(0x10)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_307F[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class USolarUIRoot*                          SolarUIRoot;                                       // 0xB8(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UUINavigationManager* GetDefaultObj();

	void UnbindCustomControlDefine(class USolarUserWidget* PanelWidget, class USolarUserWidget* UserWidget);
	class USolarUserWidget* ShowUIBySubClass(TSubclassOf<class USolarUserWidget> SubClass, enum class EUIRoot RootID);
	bool ShowPanelUI(class USolarUserWidget* CreateWidget, const class FString& UniqueWidgetKey);
	void RemoveUserWidgetLuaRef(class USolarUserWidget* UserWidget);
	void RemoveUIFromOpenedMap(const class FString& UniqueWidgetKey);
	void RemoveAllSolarWidgets();
	void PrePooledWidgetReset(class UUserWidget* UserWidget);
	void OnShowPanelUI(class USolarUserWidget* UserWidget);
	void OnPostLoadMapInitUIRoot(class UWorld* InWorld);
	void OnOpenPanelUI(class USolarUserWidget* UserWidget);
	void OnHidePanelUI(class USolarUserWidget* UserWidget);
	void OnDisplayMetricsChanged();
	void OnClosePanelUI(class USolarUserWidget* UserWidget);
	bool IsUserWidgetInScope(TSubclassOf<class USolarUserWidget>& Class, enum class EScope* OutCurScope, enum class EScope* OutDstScope);
	class USolarUserWidget* GetShowTopWidget();
	class UUserWidget* GetOpenedWidget(const class FString& UniqueWidgetKey);
	void CloseUIBySubClass(TSubclassOf<class USolarUserWidget> SubClass);
	void ClosePanelUI(class USolarUserWidget* CloseWidget, const class FString& UniqueWidgetKey);
	void ClearNonPersistentWidget();
	void ClearAllOpenedWidget();
	void BindWidgetVisibilityChangedEvent(FDelegateProperty_& VisibilityChangedEvent);
	void BindCustomControlDefine(class USolarUserWidget* PanelWidget, class USolarUserWidget* UserWidget, const class FString& FullPath);
	void BatchRemovedWidgets(bool bRemoveAll);
	void AddUIToOpenedMap(const class FString& UniqueWidgetKey, class USolarUserWidget* Widget);
	void AddBatchRemovedWidget(class USolarUserWidget* UserWidget);
};

// 0x38 (0x3A8 - 0x370)
// Class Solarland.UINotice_TaskComplete
class UUINotice_TaskComplete : public UUINoticeBase
{
public:
	class UWidgetAnimation*                      FinishTaskAnim;                                    // 0x370(0x8)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      ExitTaskAnim;                                      // 0x378(0x8)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTextBlock*                       Txt_TaskPercent;                                   // 0x380(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTextBlock*                       Txt_TaskDescTex;                                   // 0x388(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCanvasPanel*                          Normal;                                            // 0x390(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCanvasPanel*                          Finish;                                            // 0x398(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3080[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UUINotice_TaskComplete* GetDefaultObj();

	void OnTaskFinishedAnimEnd();
};

// 0x80 (0x3F0 - 0x370)
// Class Solarland.UINoticeKill
class UUINoticeKill : public UUINoticeBase
{
public:
	class UUIComponentPlayerName*                UIComponentKillerName;                             // 0x370(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUIComponentPlayerName*                UIComponentVictimName;                             // 0x378(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarImage*                           KillTypeWidget;                                    // 0x380(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                WeaponTypeWidget;                                  // 0x388(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                ImgeKillBar_Special;                               // 0x390(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                ImgeKillBar_Common;                                // 0x398(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUIComponentNationalFlag*              KillerFlagWidget;                                  // 0x3A0(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUIComponentNationalFlag*              VictimFlagWidget;                                  // 0x3A8(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarUserWidget*                      UI_Input_Device_Left;                              // 0x3B0(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarUserWidget*                      UI_Input_Device_Right;                             // 0x3B8(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUserWidget*                           KillerTeamNumb;                                    // 0x3C0(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUserWidget*                           KilledTeamNumb;                                    // 0x3C8(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UContentWidget*                        RevengeContentWidget;                              // 0x3D0(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UContentWidget*                        ShutDownContentWidget;                             // 0x3D8(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UContentWidget*                        KillLeaderWidget;                                  // 0x3E0(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTextBlock*                       Txt_PlayerID;                                      // 0x3E8(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UUINoticeKill* GetDefaultObj();

	void SetVictimVipType(uint8 VictimVipType);
	void SetKillerVipType(uint8 KillerVipType);
	int32 RefreshSwticher();
};

// 0x58 (0x3C8 - 0x370)
// Class Solarland.UINoticeKillCombo
class UUINoticeKillCombo : public UUINoticeBase
{
public:
	enum class ELocalNoticeType                  LocalNoticeType;                                   // 0x370(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3086[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UWidgetSwitcher*                       WidgetSwitcher_0;                                  // 0x378(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                Img_KillEffect;                                    // 0x380(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCanvasPanel*                          Panel_KillEffectInfo;                              // 0x388(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTextBlock*                       Text_KillEffectInfo;                               // 0x390(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTextBlock*                       Text_ShutDownInfo;                                 // 0x398(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTextBlock*                       Text_KillerName;                                   // 0x3A0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarImage*                           Img_Killer;                                        // 0x3A8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTextBlock*                       Text_KilledName;                                   // 0x3B0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarImage*                           Img_Killed;                                        // 0x3B8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarRichTextBlock*                   Text_TerminatorName;                               // 0x3C0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UUINoticeKillCombo* GetDefaultObj();

};

// 0x28 (0x398 - 0x370)
// Class Solarland.UINoticeKillLeader
class UUINoticeKillLeader : public UUINoticeBase
{
public:
	bool                                         bIsKillLeaderShutDown;                             // 0x370(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3087[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UWidgetSwitcher*                       WidgetSwitcher_0;                                  // 0x378(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTextBlock*                       Text_killleader;                                   // 0x380(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTextBlock*                       Txt_shutdown_killleader;                           // 0x388(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTextBlock*                       Txt_death_name;                                    // 0x390(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UUINoticeKillLeader* GetDefaultObj();

};

// 0x8 (0x378 - 0x370)
// Class Solarland.UINoticeKillLeaderInfo
class UUINoticeKillLeaderInfo : public UUINoticeBase
{
public:
	class USolarTextBlock*                       Text_KillLeaderInfo;                               // 0x370(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UUINoticeKillLeaderInfo* GetDefaultObj();

};

// 0xC8 (0x438 - 0x370)
// Class Solarland.UINoticeKillTotal
class UUINoticeKillTotal : public UUINoticeBase
{
public:
	class UWidgetSwitcher*                       Wgs_combo_phase;                                   // 0x370(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USolarTextBlock*                       Text_NickName;                                     // 0x378(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        ActiveKillTotalWidgetIndex;                        // 0x380(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3088[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<int32, int32>                           KillTotalTextMap;                                  // 0x388(0x50)(Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_3089[0x60];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UUINoticeKillTotal* GetDefaultObj();

};

// 0x20 (0x390 - 0x370)
// Class Solarland.UINoticeReviveDisableHint
class UUINoticeReviveDisableHint : public UUINoticeBase
{
public:
	class USolarTextBlock*                       Text_CDData;                                       // 0x370(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetAnimation*                      Loop_Anim;                                         // 0x378(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_308A[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UUINoticeReviveDisableHint* GetDefaultObj();

};

// 0x0 (0x370 - 0x370)
// Class Solarland.UINoticeSkydivingCaptain
class UUINoticeSkydivingCaptain : public UUINoticeBase
{
public:

	static class UClass* StaticClass();
	static class UUINoticeSkydivingCaptain* GetDefaultObj();

	void RefreshContent(int32 TeamIndex, const class FString& PlayerName, bool IsLocalPlayer);
};

// 0xD0 (0x440 - 0x370)
// Class Solarland.UINoticeVictory
class UUINoticeVictory : public UUINoticeBase
{
public:
	class UButton*                               BtnReturn;                                         // 0x370(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                Img_Bg;                                            // 0x378(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_308D[0xA8];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSoftObjectPath                       ImgBGPath;                                         // 0x428(0x18)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UUINoticeVictory* GetDefaultObj();

	void OnReturnBtnClick();
};

// 0x18 (0x388 - 0x370)
// Class Solarland.UINoticeVipPlayerJoin
class UUINoticeVipPlayerJoin : public UUINoticeBase
{
public:
	class UUIComponentPlayerName*                UI_Component_PlayerName;                           // 0x370(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                            Txt_Entrance_Info;                                 // 0x378(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUIComponentNationalFlag*              FlagWidget;                                        // 0x380(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UUINoticeVipPlayerJoin* GetDefaultObj();

	void SetVipType(uint8 VipType);
};

// 0x50 (0x78 - 0x28)
// Class Solarland.UIPanelConfig
class UUIPanelConfig : public UObject
{
public:
	TMap<enum class EUIPanelName, struct FUIPanelConfigEntry> PanelConfigs;                                      // 0x28(0x50)(Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UUIPanelConfig* GetDefaultObj();

};

// 0x80 (0xB0 - 0x30)
// Class Solarland.UISubsystem
class UUISubsystem : public UGameInstanceSubsystem
{
public:
	class UUIGlobalConfig*                       GlobalConfig;                                      // 0x30(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUIPanelConfig*                        UIPanelConfig;                                     // 0x38(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<class FString, class USolarUserWidget*> CacheWidgets;                                      // 0x40(0x50)(ExportObject, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_308E[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UUISubsystem* GetDefaultObj();

	void PostInitializeAfterPatch();
};

// 0xA8 (0xE0 - 0x38)
// Class Solarland.UISystemSettings
class UUISystemSettings : public UDeveloperSettings
{
public:
	int32                                        InGameWidgetPoolSize;                              // 0x38(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        VirtualControllerPoolSize;                         // 0x3C(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        InGamePopupPoolSize;                               // 0x40(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        OutGameWidgetPoolSize;                             // 0x44(0x4)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FSoftObjectPath                       UIGlobalConfig;                                    // 0x48(0x18)(Edit, ZeroConstructor, Config, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FSoftClassPath                        UILayer;                                           // 0x60(0x18)(Edit, ZeroConstructor, Config, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FSoftClassPath                        UIPanelConfigClass;                                // 0x78(0x18)(Edit, ZeroConstructor, Config, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<struct FGameplayTag, struct FInteractionButtonSpec> InteractionButtons;                                // 0x90(0x50)(Edit, Config, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UUISystemSettings* GetDefaultObj();

};

// 0x118 (0x460 - 0x348)
// Class Solarland.UIWeaponPartWidget
class UUIWeaponPartWidget : public USolarUserWidget
{
public:
	class UImage*                                Img_Icon;                                          // 0x348(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Img_LevelBg;                                       // 0x350(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Img_PartsBg;                                       // 0x358(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USizeBox*                              WidgetSize;                                        // 0x360(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UUserWidget>               DragDropWidgetClass;                               // 0x368(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                          ColorNotEquip;                                     // 0x370(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                          ColorDisable;                                      // 0x380(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                          ColorNormal;                                       // 0x390(0x10)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                          ColorQuality;                                      // 0x3A0(0x10)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        ItemID;                                            // 0x3B0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        ItemNum;                                           // 0x3B4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EItemType                         ItemType;                                          // 0x3B8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3090[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                ItemName;                                          // 0x3C0(0x10)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        WeaponSlot;                                        // 0x3D0(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EWeaponPartType                   WeaponPartType;                                    // 0x3D4(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3091[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        WeaponPartLevel;                                   // 0x3D8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EWeaponPartType                   EquippedPartType;                                  // 0x3DC(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	enum class EUIWeaponPartState                CurrentState;                                      // 0x3DD(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIsable;                                           // 0x3DE(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bUseHUDIcon;                                       // 0x3DF(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                             OffsetVec;                                         // 0x3E0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<int32, class FString>                   DefaultWeaponPartIconMaps;                         // 0x3E8(0x50)(Protected, NativeAccessSpecifierProtected)
	class FString                                WeaponPartPrePath;                                 // 0x438(0x10)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bApplyToWeaponSlot;                                // 0x448(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3092[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FLinearColor                          PartBGDefaultColor;                                // 0x44C(0x10)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3093[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UUIWeaponPartWidget* GetDefaultObj();

	void UpdateWidgetByEnable(bool InIsable);
	void SetWidgetSize(struct FVector2D& InSize);
	void SetWeaponSlot(int32 InWeaponSlot);
	void SetWeaponPartData(int32 InID, int32 InNumber);
	void SetIsEnable(bool InIsable);
	void SetBrushFromTexture(class UTexture2D* InTextureAsset, bool InMatchSize);
	void InitDefaultWeaponPart(enum class EWeaponPartType InWeaponPartType, bool InUseHUDIcon);
	void ClearWeaponPartData();
};

// 0x0 (0x98 - 0x98)
// Class Solarland.SolarBTT_NgaiBotBattle
class USolarBTT_NgaiBotBattle : public UBTTask_BlackboardBase
{
public:

	static class UClass* StaticClass();
	static class USolarBTT_NgaiBotBattle* GetDefaultObj();

};

// 0x10 (0x238 - 0x228)
// Class Solarland.VehicleAIPath
class AVehicleAIPath : public AActor
{
public:
	class USplineComponent*                      PathComponent;                                     // 0x228(0x8)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PathId;                                            // 0x230(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3094[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AVehicleAIPath* GetDefaultObj();

};

// 0x8 (0x280 - 0x278)
// Class Solarland.VehicleAISpawnerInGuide
class AVehicleAISpawnerInGuide : public ASpawnerInGuide
{
public:
	float                                        NoDamageLeftHP;                                    // 0x278(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        PathId;                                            // 0x27C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class AVehicleAISpawnerInGuide* GetDefaultObj();

};

// 0x390 (0x3C0 - 0x30)
// Class Solarland.VehicleCameraDataAsset
class UVehicleCameraDataAsset : public UDataAsset
{
public:
	struct FRuntimeFloatCurve                    TargetArmLengthCurve;                              // 0x30(0x88)(Edit, BlueprintReadOnly, NativeAccessSpecifierPublic)
	float                                        TargetArmLengthInterpSpeed;                        // 0xB8(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               TargetOffset;                                      // 0xBC(0xC)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  TargetOffsetSocket;                                // 0xC8(0x8)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bTargetOffsetIgnoreRoll;                           // 0xD0(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bTargetOffsetIgnorePitch;                          // 0xD1(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCameraRollSameWithVehicleRoll;                    // 0xD2(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3095[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               SocketOffset;                                      // 0xD4(0xC)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinPitch;                                          // 0xE0(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxPitch;                                          // 0xE4(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinYaw;                                            // 0xE8(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MaxYaw;                                            // 0xEC(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                    CameraFovCurve;                                    // 0xF0(0x88)(Edit, BlueprintReadOnly, NativeAccessSpecifierPublic)
	float                                        CameraFovInterpSpeed;                              // 0x178(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bCameraFollowVehicle;                              // 0x17C(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3096[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DefaultPitch;                                      // 0x180(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3097[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRuntimeFloatCurve                    CameraFollowSpeedCurve;                            // 0x188(0x88)(Edit, BlueprintReadOnly, NativeAccessSpecifierPublic)
	float                                        CameraFollowTimeThreshold;                         // 0x210(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CameraResetFollowSpeed;                            // 0x214(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        CameraFollowSpeedThreshold;                        // 0x218(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableCameraLag;                                  // 0x21C(0x1)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3098[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRuntimeFloatCurve                    CameraLagInterpSpeedCurve;                         // 0x220(0x88)(Edit, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                    CameraLagCurve;                                    // 0x2A8(0x88)(Edit, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                    AdditionalTargetOffsetOnZ;                         // 0x330(0x88)(Edit, BlueprintReadOnly, NativeAccessSpecifierPublic)
	float                                        BlendTime;                                         // 0x3B8(0x4)(Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3099[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UVehicleCameraDataAsset* GetDefaultObj();

};

// 0x50 (0x80 - 0x30)
// Class Solarland.VehicleCollisionSubsystem
class UVehicleCollisionSubsystem : public UEngineSubsystem
{
public:
	uint8                                        Pad_309A[0x50];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UVehicleCollisionSubsystem* GetDefaultObj();

};

// 0x240 (0x420 - 0x1E0)
// Class Solarland.VehicleMoveWidget
class UVehicleMoveWidget : public USolarJoyStick
{
public:
	struct FSlateBrush                           JoyStickThumb;                                     // 0x1E0(0x98)(Edit, NativeAccessSpecifierPublic)
	struct FSlateBrush                           JoyStickThumbPress;                                // 0x278(0x98)(Edit, NativeAccessSpecifierPublic)
	struct FVector2D                             ThumbSize;                                         // 0x310(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSlateBrush                           SprintImage;                                       // 0x318(0x98)(Edit, NativeAccessSpecifierPublic)
	struct FVector2D                             SprintSize;                                        // 0x3B0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TriggerPressTime;                                  // 0x3B8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        DistanceSprintImageToCenter;                       // 0x3BC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ShowLockSprintIconSectorAngle;                     // 0x3C0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             VisualSize;                                        // 0x3C4(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_309B[0x14];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            OnSprintIconActive;                                // 0x3E0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnSprintIconHide;                                  // 0x3F0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnSprintLockIconActive;                            // 0x400(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnSprintChangeToCenterState;                       // 0x410(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UVehicleMoveWidget* GetDefaultObj();

	void SetSprintToCenterDistance(float Distance);
	void ResetSprintState();
};

// 0x0 (0x540 - 0x540)
// Class Solarland.VehiclePreviewActor
class AVehiclePreviewActor : public APreviewActor
{
public:

	static class UClass* StaticClass();
	static class AVehiclePreviewActor* GetDefaultObj();

};

// 0x3F0 (0x420 - 0x30)
// Class Solarland.SolarVehicleSkinPreviewData
class USolarVehicleSkinPreviewData : public UDataAsset
{
public:
	struct FSolarVehicleSkinPreviewMeshInfo      VehicleMeshInfo;                                   // 0x30(0xC0)(Edit, NativeAccessSpecifierPublic)
	TArray<struct FSolarVehicleSkinPreviewMeshInfo> WeaponMeshInfos;                                   // 0xF0(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSolarVehicleSkinPreviewMeshInfo      MirrorMeshInfo;                                    // 0x100(0xC0)(Edit, NativeAccessSpecifierPublic)
	TArray<struct FSolarVehicleSkinPreviewMeshInfo> MirrorWeaponMeshInfos;                             // 0x1C0(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FVehicleVFX>                   VehicleVFXs;                                       // 0x1D0(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UParticleSystem>        SwitchParticleEffectPath;                          // 0x1E0(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FSolarVehicleMaterialData>     VehicleMaterialDataArray;                          // 0x208(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_309C[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            PageTransforms[0xA];                               // 0x220(0x1E0)(Edit, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FSolarVehicleSkinPreviewPageInfo      PageInfos[0xA];                                    // 0x400(0x14)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_309D[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USolarVehicleSkinPreviewData* GetDefaultObj();

};

// 0x100 (0x328 - 0x228)
// Class Solarland.SolarVehiclePreview
class ASolarVehiclePreview : public AActor
{
public:
	class USkeletalMeshComponent*                VehicleMesh;                                       // 0x228(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkeletalMeshComponent*                DissovleVehicleMesh;                               // 0x230(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkeletalMeshComponent*                FresnelVehicleMesh;                                // 0x238(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class USkeletalMeshComponent*>        WeaponMeshes;                                      // 0x240(0x10)(Edit, ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class USkeletalMeshComponent*>        DissovleWeaponMeshes;                              // 0x250(0x10)(Edit, ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class USkeletalMeshComponent*>        FresnelWeaponMeshes;                               // 0x260(0x10)(Edit, ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkeletalMeshComponent*                MirrorVehicleMesh;                                 // 0x270(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkeletalMeshComponent*                MirrorDissovleVehicleMesh;                         // 0x278(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkeletalMeshComponent*                MirrorFresnelVehicleMesh;                          // 0x280(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class USkeletalMeshComponent*>        MirrorWeaponMeshes;                                // 0x288(0x10)(Edit, ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class USkeletalMeshComponent*>        MirrorDissovleWeaponMeshes;                        // 0x298(0x10)(Edit, ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class USkeletalMeshComponent*>        MirrorFresnelWeaponMeshes;                         // 0x2A8(0x10)(Edit, ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_309E[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        SwitchEffectInterval;                              // 0x2C8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_309F[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FSwitchEffectInfo>             DissovleEffectInfos;                               // 0x2D8(0x10)(ZeroConstructor, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FSwitchEffectInfo>             FresnelEffectInfos;                                // 0x2E8(0x10)(ZeroConstructor, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_30A0[0x30];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class ASolarVehiclePreview* GetDefaultObj();

	void StartPlayFresnelEffect();
	void StartPlayDissovleEffect();
};

// 0x28 (0x378 - 0x350)
// Class Solarland.VehicleSpeedScreenEffectWidget
class UVehicleSpeedScreenEffectWidget : public USolarScreenEffectWidget
{
public:
	class UOverlay*                              ScreenVFX;                                         // 0x350(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                Left;                                              // 0x358(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                Right;                                             // 0x360(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstanceDynamic*              LeftMID;                                           // 0x368(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMaterialInstanceDynamic*              RightMID;                                          // 0x370(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UVehicleSpeedScreenEffectWidget* GetDefaultObj();

};

// 0x2B0 (0x550 - 0x2A0)
// Class Solarland.VehicleStealthGCNotify_Actor
class AVehicleStealthGCNotify_Actor : public ASolarVehicleGCNotify_Actor
{
public:
	class UMaterialInterface*                    StealthMaterial;                                   // 0x2A0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                    NormalStealthCurve;                                // 0x2A8(0x88)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	uint8                                        Pad_30A3[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRuntimeFloatCurve                    VehicleVelocityCurve;                              // 0x338(0x88)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                    VehicleBeDamagedCurve;                             // 0x3C0(0x88)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class FName                                  StealthMaterialParamPowerName;                     // 0x448(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  StealthMaterialParamDistanceName;                  // 0x450(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StealthMaterialParamDistanceValue;                 // 0x458(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_30A4[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<enum class EStealthParamType, struct FStealthMaterialParams> VehicleStealthParamterSets;                        // 0x460(0x50)(Edit, NativeAccessSpecifierPublic)
	uint8                                        Pad_30A5[0x38];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                EnterStealthEngine3p;                              // 0x4E8(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                EnterStealthEngine3pEnemy;                         // 0x4F8(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                CancelStealthEngine3p;                             // 0x508(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FString                                CancelStealthEngine3pEnemy;                        // 0x518(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        WarningOtherRange;                                 // 0x528(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        WarningOtherRangeOutThreshold;                     // 0x52C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_30A6[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FCueContent>                   CueContents;                                       // 0x540(0x10)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class AVehicleStealthGCNotify_Actor* GetDefaultObj();

	void OnVehicleSkinUpdate(class ASolarVehiclePawn* InVehiclePawn);
	void OnToggleStealth(bool bInStealh);
	void OnPlayerGetOnVehicle(int32 GetOnSeatIndex, class ASolarCharacter* GetOnPlayer);
	void OnPlayerGetOffVehicle(int32 GetOffSeatIndex, class ASolarCharacter* GetOffPlayer);
};

// 0x0 (0x228 - 0x228)
// Class Solarland.VehicleStopArea
class AVehicleStopArea : public AActor
{
public:

	static class UClass* StaticClass();
	static class AVehicleStopArea* GetDefaultObj();

};

// 0x40 (0x310 - 0x2D0)
// Class Solarland.VehicleWeaponAnimInstance
class UVehicleWeaponAnimInstance : public UWeaponAnimInstance
{
public:
	uint8                                        Pad_30A7[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRotator                              VehicleWeaponPitchRot;                             // 0x2D8(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FRotator                              VehicleWeaponYawRot;                               // 0x2E4(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FVector                               LeftBoneIKOffset;                                  // 0x2F0(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                               RightBoneIKOffset;                                 // 0x2FC(0xC)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bVehicleWeaponReloading;                           // 0x308(0x1)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_30A8[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UVehicleWeaponAnimInstance* GetDefaultObj();

};

// 0x188 (0x488 - 0x300)
// Class Solarland.VehicleWeaponCrossHairWidget
class UVehicleWeaponCrossHairWidget : public UCrossHairWidget
{
public:
	bool                                         bUseSecondReticle;                                 // 0x300(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_30A9[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        DirectionRadius;                                   // 0x304(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                          SecondReticlePanel;                                // 0x308(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanelSlot*                      SecondReticleSlot;                                 // 0x310(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                ReticleDirectionImage;                             // 0x318(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanelSlot*                      ReticleDirectionSlot;                              // 0x320(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                RangedImage;                                       // 0x328(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_30AA[0x20];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class USizeBox*                              AssistLockSizeBox;                                 // 0x350(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                          ChangeNewAssistLockPawnPanel;                      // 0x358(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                          EnterLockPawnPanel;                                // 0x360(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_30AB[0x14];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TWeakObjectPtr<class APawn>                  AssistLockPawn;                                    // 0x37C(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_30AC[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UGlobalVehicleWeaponConfig*            GVehicleWeaponConfig;                              // 0x388(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ASolarPlayerController*                SolarPlayerController;                             // 0x390(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_30AD[0x9C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        CurProgressOfPreEnterAssistLock;                   // 0x434(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        PreEnterAssistLockSpeed;                           // 0x438(0x4)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_30AE[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        TimeIntervalToCheckBlock;                          // 0x44C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_30AF[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UCanvasPanel*                          DynamicAimCanvas;                                  // 0x458(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanelSlot*                      DynamicAimCanvasSlot;                              // 0x460(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DynamicAimOccludeOpacity;                          // 0x468(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                             DynamicAimSmoothSpeed;                             // 0x46C(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_30B0[0xC];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bAlwaysShowOverload;                               // 0x480(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_30B1[0x7];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UVehicleWeaponCrossHairWidget* GetDefaultObj();

	struct FVector2D UpdateAssistLockUIScale();
	void UpdateAssistLockStateUI(enum class EAssistLockState InEAssistLockState);
	void SetWidgetResources(class UCanvasPanel** InSecondReticlePanel, class UImage** InReticleDirectionImage, class UImage** InRangedImage, class USizeBox** InAssistLockSizeBox, class UCanvasPanel** InChangeNewAssistLockPawnPanel, class UCanvasPanel** InEnterLockPawnPanel, class UCanvasPanel** InCanvas_Dynamic);
	void OnUpdateAimTargetDistance(float InDistance);
	void OnTransformerWeaponChanged(enum class ETransformerType InType);
	void InitAssitLockInfo(class ASolarVehicleWeapon* VehicleWeapon);
	class UCanvasPanel* GetSecondReticlePanel();
	class UImage* GetReticleDirectionImage();
};

// 0xA0 (0x3E8 - 0x348)
// Class Solarland.VehicleWeaponScopeWidget
class UVehicleWeaponScopeWidget : public USolarUserWidget
{
public:
	enum class EVehicleWeaponScopeType           PresetScopeType;                                   // 0x348(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_30B5[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UImage*                                Img_Vehicle;                                       // 0x350(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Img_Weapon;                                        // 0x358(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                          Panel_Pitch;                                       // 0x360(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWeaponScopeSliderWidget*              Crosshair_Slider;                                  // 0x368(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarCheckBox*                        Btn_Pitch;                                         // 0x370(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                          SecondReticlePanel;                                // 0x378(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                          Panel_BG;                                          // 0x380(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                          Panel_Border;                                      // 0x388(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                ReticleDirection;                                  // 0x390(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                          Coredot;                                           // 0x398(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarWeaponRechamberWidget*           HUD_CarFireCD_L;                                   // 0x3A0(0x8)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Anim_Enter;                                        // 0x3A8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanelSlot*                      SecondReticleSlot;                                 // 0x3B0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCanvasPanelSlot*                      ReticleDirectionSlot;                              // 0x3B8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UImage*                                ProgressImage;                                     // 0x3C0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWidgetAnimation*                      ProgressAnima;                                     // 0x3C8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMaterialInstanceDynamic*              ProgressMaterial;                                  // 0x3D0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_30B6[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UVehicleWeaponScopeWidget* GetDefaultObj();

	void UpdateScopeUI(class ASolarVehicleWeapon* VehicleWeapon, struct FVehicleWeaponCrossHairInfo& InCrossHairInfo);
	void SetChargeProgress(class UImage** InProgressImage, class UWidgetAnimation** InProgressAnima);
	void OnUpdateChargeProgress(bool InbCharging, int32 InChargeMode, float InChargeProgress);
	void OnScopeTriggerChanged(bool bChecked);
	void OnScopeOpened();
	void InitScopeUI(class ASolarVehiclePawn* InVehicle, bool bSpectate);
	void ApplyWeaponCrossHairToScope(struct FVehicleWeaponCrossHairInfo& InCrossHairInfo);
};

// 0x2D8 (0x578 - 0x2A0)
// Class Solarland.VehicleWholeShieldGCNotify_Actor
class AVehicleWholeShieldGCNotify_Actor : public ASolarVehicleGCNotify_Actor
{
public:
	TSoftObjectPtr<class UMaterialInterface>     TeammateWholeShieldMaterial;                       // 0x2A0(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UMaterialInterface>     NoTeammateWholeShieldMaterial;                     // 0x2C8(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  StartShieldMaterialParam;                          // 0x2F0(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FRuntimeFloatCurve                    StartShieldCurve;                                  // 0x2F8(0x88)(Edit, NativeAccessSpecifierPrivate)
	class FName                                  ShieldMaterialChangeParam;                         // 0x380(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<float, float>                           HighShieldChangeRateToMaterialValue;               // 0x388(0x50)(Edit, NativeAccessSpecifierPrivate)
	TMap<float, float>                           LowShieldChangeRateToMaterialValue;                // 0x3D8(0x50)(Edit, NativeAccessSpecifierPrivate)
	class FName                                  SphereParameterName;                               // 0x428(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                  HitLocaitonParameterName;                          // 0x430(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FRuntimeFloatCurve                    HitEffectDurationCurve;                            // 0x438(0x88)(Edit, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UParticleSystem>        TeammateBulletHitEffect;                           // 0x4C0(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UParticleSystem>        NoTeammateBulletHitEffect;                         // 0x4E8(0x28)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                               BulletHitEffectScale;                              // 0x510(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_30B9[0x5C];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AVehicleWholeShieldGCNotify_Actor* GetDefaultObj();

	void OnPlayerGetOnVehicle(int32 GetOnSeatIndex, class ASolarCharacter* GetOnPlayer);
	void OnPlayerGetOffVehicle(int32 GetOffSeatIndex, class ASolarCharacter* GetOffPlayer);
};

// 0x18 (0xC8 - 0xB0)
// Class Solarland.VerticalFOVComponent
class UVerticalFOVComponent : public UActorComponent
{
public:
	float                                        VerticalFOV;                                       // 0xB0(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        AspectRatioThreshold;                              // 0xB4(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        HorizontalFOV;                                     // 0xB8(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_30BA[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UVerticalFOVComponent* GetDefaultObj();

	void RefreshHorizontalFOV(class UGameViewportClient* Viewport);
	class UGameViewportClient* GetCurrentViewport();
};

// 0x70 (0xA0 - 0x30)
// Class Solarland.VibrateConfig
class UVibrateConfig : public UDataAsset
{
public:
	class UDataTable*                            DataTab;                                           // 0x30(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<enum class EWeaponVibrateFactor, float> WeaponVibrateFactorMap;                            // 0x38(0x50)(Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                       WeaponDataTabPath;                                 // 0x88(0x18)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UVibrateConfig* GetDefaultObj();

};

// 0x18 (0x50 - 0x38)
// Class Solarland.VisibilityFlagSettings
class UVisibilityFlagSettings : public UDeveloperSettings
{
public:
	struct FGameplayTag                          DefaultVisibilityFlagTag;                          // 0x38(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, Config, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FGameplayTag>                  VisibilityFlagTags;                                // 0x40(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, EditFixedSize, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UVisibilityFlagSettings* GetDefaultObj();

	int32 StaticGetVisibilityFlag(struct FGameplayTag& Tag);
	int32 GetVisibilityFlag(struct FGameplayTag& Tag);
};

// 0xB8 (0xE8 - 0x30)
// Class Solarland.VisualSoundConfig
class UVisualSoundConfig : public UDataAsset
{
public:
	uint8                                        ElemMaxCount;                                      // 0x30(0x1)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_30BB[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        VehicleMoveDecidingSpeed;                          // 0x34(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        IgnoredCheckRate;                                  // 0x38(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        IgnoredCheckAngle;                                 // 0x3C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        IgnoredCheckDis_PlayerDefault;                     // 0x40(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        IgnoredCheckDis_VehicleDefault;                    // 0x44(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<int32, float>                           IgnoredCheckDis_VehicleMap;                        // 0x48(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	TMap<enum class EBattlePromptType, struct FVisualSoundData> VisualSoundDataMap;                                // 0x98(0x50)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UVisualSoundConfig* GetDefaultObj();

};

// 0x4F0 (0x6D0 - 0x1E0)
// Class Solarland.WalkWidgetNew
class UWalkWidgetNew : public USolarJoyStick
{
public:
	FMulticastInlineDelegateProperty_            OnSprintChangeToCenterState;                       // 0x1E0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnSprintIconActive;                                // 0x1F0(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnSprintIconHide;                                  // 0x200(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnSprintLockIconActive;                            // 0x210(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnStartSprintFree;                                 // 0x220(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            OnTerminateSprintFree;                             // 0x230(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FSlateBrush                           JoyStickThumb;                                     // 0x240(0x98)(Edit, NativeAccessSpecifierPublic)
	struct FSlateBrush                           JoyStickThumbPress;                                // 0x2D8(0x98)(Edit, NativeAccessSpecifierPublic)
	struct FSlateBrush                           JoyStickBG;                                        // 0x370(0x98)(Edit, NativeAccessSpecifierPublic)
	struct FSlateBrush                           SprintImage;                                       // 0x408(0x98)(Edit, NativeAccessSpecifierPublic)
	struct FSlateBrush                           UsedSprintImage;                                   // 0x4A0(0x98)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FSlateBrush                           SprintImageHovered;                                // 0x538(0x98)(Edit, NativeAccessSpecifierPublic)
	struct FSlateBrush                           UsedSprintImageHovered;                            // 0x5D0(0x98)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	struct FVector2D                             SprintSize;                                        // 0x668(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TriggerDistanceToSprint;                           // 0x670(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TriggerDistanceToShowSprint;                       // 0x674(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ShowSprintIconSectorAngle;                         // 0x678(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ShowLockSprintIconSectorAngle;                     // 0x67C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bOpenLeftHalfTouch;                                // 0x680(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseTouchStartOffset;                              // 0x681(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_30BC[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector2D                             VisualCenter;                                      // 0x684(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             VisualSize;                                        // 0x68C(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             ThumbSize;                                         // 0x694(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                             InputScale;                                        // 0x69C(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ActiveOpacity;                                     // 0x6A4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        InactiveOpacity;                                   // 0x6A8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TimeUntilDeactive;                                 // 0x6AC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bPreventReCenter;                                  // 0x6B0(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_30BD[0x1F];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UWalkWidgetNew* GetDefaultObj();

	void SetSprintToCenterDistance(float Distance);
	void SetNewSprintImageResource(class UObject* NewResource, class UObject* NewHoveredResource);
	void SetNewSprintImage(struct FSlateBrush& NewImage, struct FSlateBrush& NewHoveredImage);
	void SetCustomizeVisualInfo(struct FVector2D& InPosition, float InScale, float InOpacity);
	void SetCanChangeSprintState(bool CanChange);
	void ResetSprintState();
	void ResetSprintImage();
};

// 0x0 (0x28 - 0x28)
// Class Solarland.WarmGameHeroPickRule
class UWarmGameHeroPickRule : public UHeroPickRuleBase
{
public:

	static class UClass* StaticClass();
	static class UWarmGameHeroPickRule* GetDefaultObj();

};

// 0x38 (0x260 - 0x228)
// Class Solarland.WarmupMatchManager
class AWarmupMatchManager : public AGameManagerBase
{
public:
	uint8                                        Pad_30BE[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	FMulticastInlineDelegateProperty_            MatchSuccessedDelegate;                            // 0x230(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_            MatchInterruptDelegate;                            // 0x240(0x10)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	float                                        AutoGoToTargetLevelTime;                           // 0x250(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_30BF[0xC];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AWarmupMatchManager* GetDefaultObj();

	void MatchSuccessed();
	void MatchInterrupt();
	void GotoMatchTargetLevel();
	void AutoGotoMatchTargetLevel();
};

// 0xA8 (0x3B0 - 0x308)
// Class Solarland.WeaponAbilityBase
class AWeaponAbilityBase : public ASolarAbility
{
public:
	struct FHitResult                            HitResult;                                         // 0x308(0x88)(IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	bool                                         bClientVaild;                                      // 0x390(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bServerVaild;                                      // 0x391(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bLife;                                             // 0x392(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_30C0[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        LifeTime;                                          // 0x394(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AActor*                                TargetActor;                                       // 0x398(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_30C1[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TWeakObjectPtr<class ASolarWeapon>           TargetWeapon;                                      // 0x3A4(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_30C2[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AWeaponAbilityBase* GetDefaultObj();

	bool HasLife();
};

// 0x2A8 (0x2D8 - 0x30)
// Class Solarland.WeaponAssistAimWeaponConfig
class UWeaponAssistAimWeaponConfig : public UDataAsset
{
public:
	float                                        MaxTargetDetectionDistance;                        // 0x30(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_30C3[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FBaseFollowSpeedByTag>         BaseFollowSpeedByTags;                             // 0x38(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagRequirements              TargetVelocityFollowTagRequirements;               // 0x48(0x50)(Edit, NativeAccessSpecifierPublic)
	float                                        TargetVelocityFollowDeactivationDelay;             // 0x98(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_30C4[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRuntimeFloatCurve                    TargetVelocityFollowHorizontalRatioCurve;          // 0xA0(0x88)(Edit, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                    TargetVelocityFollowVerticalRatioCurve;            // 0x128(0x88)(Edit, NativeAccessSpecifierPublic)
	float                                        TargetVelocityFollowHorizontalRatioCurveScale;     // 0x1B0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TargetVelocityFollowVerticalRatioCurveScale;       // 0x1B4(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TargetVelocityFollowMaxHorizontalSpeed;            // 0x1B8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        TargetVelocityFollowMaxVerticalSpeed;              // 0x1BC(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                    TargetVelocityFollowRatioScaleByDistanceCurve;     // 0x1C0(0x88)(Edit, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                    GlobalSensitivityScaleCurve;                       // 0x248(0x88)(Edit, NativeAccessSpecifierPublic)
	float                                        GlobalSensitivityScaleCurveScale;                  // 0x2D0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_30C5[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UWeaponAssistAimWeaponConfig* GetDefaultObj();

};

// 0x100 (0x130 - 0x30)
// Class Solarland.WeaponAssistAimConfig
class UWeaponAssistAimConfig : public UDataAsset
{
public:
	uint8                                        AssistAimTargetFlag;                               // 0x30(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_30C6[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<enum class EObjectTypeQuery>          TargetDetectionBlockTypes;                         // 0x38(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<enum class EObjectTypeQuery>          LockAimingBlockTypes;                              // 0x48(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableAssistFollow;                               // 0x58(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableGlobalSensitivityScale;                     // 0x59(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_30C7[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FWeaponAssistAimWeaponConfigAll       DefaultAssistAimWeaponConfigAll;                   // 0x60(0x60)(Edit, NativeAccessSpecifierPublic)
	struct FWeaponAssistAimWeaponConfigAll       DefaultAssistAimWeaponConfigAllGamepad;            // 0xC0(0x60)(Edit, NativeAccessSpecifierPublic)
	TArray<struct FWeaponAssistAimByCharacterTag> AssistAimWeaponConfigsByCharacterTag;              // 0x120(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UWeaponAssistAimConfig* GetDefaultObj();

};

// 0x0 (0x30 - 0x30)
// Class Solarland.WeaponCameraShakePattern
class UWeaponCameraShakePattern : public USolarPattern
{
public:

	static class UClass* StaticClass();
	static class UWeaponCameraShakePattern* GetDefaultObj();

};

// 0x0 (0x30 - 0x30)
// Class Solarland.WeaponCameraShakePatternRuntime
class UWeaponCameraShakePatternRuntime : public USolarPatternRuntime
{
public:

	static class UClass* StaticClass();
	static class UWeaponCameraShakePatternRuntime* GetDefaultObj();

};

// 0x8 (0x38 - 0x30)
// Class Solarland.NormalCameraShakePattern
class UNormalCameraShakePattern : public UWeaponCameraShakePattern
{
public:
	TSubclassOf<class UCameraShake>              ShakeClass;                                        // 0x30(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UNormalCameraShakePattern* GetDefaultObj();

};

// 0x0 (0x30 - 0x30)
// Class Solarland.NormalCameraShakePatternRuntime
class UNormalCameraShakePatternRuntime : public UWeaponCameraShakePatternRuntime
{
public:

	static class UClass* StaticClass();
	static class UNormalCameraShakePatternRuntime* GetDefaultObj();

};

// 0x18 (0x48 - 0x30)
// Class Solarland.CameraShakeWithCurvePattern
class UCameraShakeWithCurvePattern : public UWeaponCameraShakePattern
{
public:
	TSubclassOf<class UCameraShakeWithCurve>     ShakeClass;                                        // 0x30(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCameraShakeWithCurve*                 ShakeTemplate;                                     // 0x38(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RandomSeed;                                        // 0x40(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                        RandomStep;                                        // 0x44(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UCameraShakeWithCurvePattern* GetDefaultObj();

};

// 0x0 (0x30 - 0x30)
// Class Solarland.CameraShakeWithCurvePatternRuntime
class UCameraShakeWithCurvePatternRuntime : public UWeaponCameraShakePatternRuntime
{
public:

	static class UClass* StaticClass();
	static class UCameraShakeWithCurvePatternRuntime* GetDefaultObj();

};

// 0x98 (0x3E0 - 0x348)
// Class Solarland.WeaponChosenWidget
class UWeaponChosenWidget : public USolarUserWidget
{
public:
	class USolarButton*                          Btn_Select;                                        // 0x348(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bEmpty;                                            // 0x350(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bSelect;                                           // 0x351(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_30C8[0x8E];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UWeaponChosenWidget* GetDefaultObj();

	void SelectSlot();
	void OnScopeChanged(int32 InNewScope);
	void K2_OnSelected(bool InbSelected);
	void K2_OnReset();
	void K2_InitWidget(struct FChooseWeaponItemData& InData);
	enum class EWeaponEquipSlot K2_GetUsedSlot();
};

// 0xD0 (0x100 - 0x30)
// Class Solarland.WeaponExtraAttributeSet
class UWeaponExtraAttributeSet : public USolarAttributeSet
{
public:
	struct FGameplayAttributeData                ExtraARMag;                                        // 0x30(0x10)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, Protected, NativeAccessSpecifierProtected)
	struct FGameplayAttributeData                ExtraSMGMag;                                       // 0x40(0x10)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, Protected, NativeAccessSpecifierProtected)
	struct FGameplayAttributeData                ExtraSGMag;                                        // 0x50(0x10)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, Protected, NativeAccessSpecifierProtected)
	struct FGameplayAttributeData                ExtraSRMag;                                        // 0x60(0x10)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, Protected, NativeAccessSpecifierProtected)
	struct FGameplayAttributeData                ARLoadSpeedMultiple;                               // 0x70(0x10)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, Protected, NativeAccessSpecifierProtected)
	struct FGameplayAttributeData                SMGLoadSpeedMultiple;                              // 0x80(0x10)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, Protected, NativeAccessSpecifierProtected)
	struct FGameplayAttributeData                SGLoadSpeedMultiple;                               // 0x90(0x10)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, Protected, NativeAccessSpecifierProtected)
	struct FGameplayAttributeData                SRLoadSpeedMultiple;                               // 0xA0(0x10)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, Protected, NativeAccessSpecifierProtected)
	struct FGameplayAttributeData                ARHeadshotDamageMultiple;                          // 0xB0(0x10)(BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FGameplayAttributeData                SMGHeadshotDamageMultiple;                         // 0xC0(0x10)(BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FGameplayAttributeData                SGHeadshotDamageMultiple;                          // 0xD0(0x10)(BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FGameplayAttributeData                SRHeadshotDamageMultiple;                          // 0xE0(0x10)(BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FGameplayAttributeData                WeaponSkillCDMultiple;                             // 0xF0(0x10)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, Protected, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UWeaponExtraAttributeSet* GetDefaultObj();

	void OnRep_WeaponSkillCDMultiple(struct FGameplayAttributeData& OldValue);
	void OnRep_SRLoadSpeedMultiple(struct FGameplayAttributeData& OldValue);
	void OnRep_SMGLoadSpeedMultiple(struct FGameplayAttributeData& OldValue);
	void OnRep_SGLoadSpeedMultiple(struct FGameplayAttributeData& OldValue);
	void OnRep_ExtraSRMag(struct FGameplayAttributeData& OldValue);
	void OnRep_ExtraSMGMag(struct FGameplayAttributeData& OldValue);
	void OnRep_ExtraSGMag(struct FGameplayAttributeData& OldValue);
	void OnRep_ExtraARMag(struct FGameplayAttributeData& OldValue);
	void OnRep_ARLoadSpeedMultiple(struct FGameplayAttributeData& OldValue);
};

// 0x8 (0x30 - 0x28)
// Class Solarland.WeaponGrowthManager
class UWeaponGrowthManager : public UObject
{
public:
	uint8                                        Pad_30CA[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UWeaponGrowthManager* GetDefaultObj();

	class FString GetWeaponBpPath(int32 ID);
};

// 0x0 (0x3B0 - 0x3B0)
// Class Solarland.WeaponHitAbility
class AWeaponHitAbility : public AWeaponAbilityBase
{
public:

	static class UClass* StaticClass();
	static class AWeaponHitAbility* GetDefaultObj();

};

// 0x1F0 (0x220 - 0x30)
// Class Solarland.WeaponSkinData
class UWeaponSkinData : public UDataAsset
{
public:
	enum class EWeaponSkinType                   WeaponSkinType;                                    // 0x30(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_30CD[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FWeaponBodyData                       WeaponData;                                        // 0x38(0xB0)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TArray<struct FWeaponSkinPartData>           WeaponBarMap;                                      // 0xE8(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         WeaponBarLocked;                                   // 0xF8(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_30CE[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FWeaponSkinPartData>           WeaponClipMap;                                     // 0x100(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         WeaponClipLocked;                                  // 0x110(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_30CF[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FWeaponSkinPartData>           WeaponGripMap;                                     // 0x118(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         WeaponGripLocked;                                  // 0x128(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bUseGripIkSocket;                                  // 0x129(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_30D0[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FWeaponSkinPartData>           WeaponScopeMap;                                    // 0x130(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         WeaponScopeLocked;                                 // 0x140(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_30D1[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<struct FWeaponSkinPartData>           WeaponStockMap;                                    // 0x148(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         WeaponStockLocked;                                 // 0x158(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_30D2[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class ASolarBullet>              DedicatedBulletEffect;                             // 0x160(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ASolarBullet>              DedicatedSkillEffect;                              // 0x168(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftClassPath                        DedicatedBulletEffectPath;                         // 0x170(0x18)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftClassPath                        DedicatedSkillEffectPath;                          // 0x188(0x18)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UParticleSystem*                       DedicatedKillEffect;                               // 0x1A0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                       DedicatedKillEffectPath;                           // 0x1A8(0x18)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                       DedicatedSpecialEffectPath;                        // 0x1C0(0x18)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UActorEffect>              DedicatedDissolvedDeathActorEffect;                // 0x1D8(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                       DedicatedDissolvedDeathFXPath;                     // 0x1E0(0x18)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                PlayAudioEventName;                                // 0x1F8(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                StopAudioEventName;                                // 0x208(0x10)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimSequence*                         OutsideAnimation;                                  // 0x218(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UWeaponSkinData* GetDefaultObj();

	void ModifyResPath();
	bool IsMeshReplace();
	bool GetPartLockedInfoByType(enum class EWeaponPartType PartType);
	bool GetPartDataArrayByType(enum class EWeaponPartType PartType, TArray<struct FWeaponSkinPartData>* PartDataMap);
};

// 0x0 (0x600 - 0x600)
// Class Solarland.WeaponPartStaticMeshComponent
class UWeaponPartStaticMeshComponent : public UStaticMeshComponent
{
public:

	static class UClass* StaticClass();
	static class UWeaponPartStaticMeshComponent* GetDefaultObj();

};

// 0xC0 (0x6C0 - 0x600)
// Class Solarland.WeaponPartComp
class UWeaponPartComp : public UWeaponPartStaticMeshComponent
{
public:
	int32                                        PartID;                                            // 0x600(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_30D3[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UWeaponPartDataAsset*                  PartDataAsset;                                     // 0x608(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_30D4[0xB0];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UWeaponPartComp* GetDefaultObj();

};

// 0x0 (0x6C0 - 0x6C0)
// Class Solarland.WeaponPartClipComp
class UWeaponPartClipComp : public UWeaponPartComp
{
public:

	static class UClass* StaticClass();
	static class UWeaponPartClipComp* GetDefaultObj();

	bool IsSupportExtract();
	struct FRotator GetHandRotOffset();
	struct FVector GetHandLocOffset();
	float GetDropLifeSpan();
	class FName GetCharacterHandSocket();
	class FName GetCharacterHandInverseSocket();
};

// 0xE8 (0x118 - 0x30)
// Class Solarland.WeaponPartDataAsset
class UWeaponPartDataAsset : public UDataAsset
{
public:
	bool                                         bOnlyData;                                         // 0x30(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_30D5[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<int32>                                OnlyDataForWeaponSkinIDArray;                      // 0x38(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                       ViewStaticMeshPath;                                // 0x48(0x18)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTransform                            PreviewTransform;                                  // 0x60(0x30)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                       FightStaticMeshPath;                               // 0x90(0x18)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                       PartIcon;                                          // 0xA8(0x18)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<int32, struct FVector>                  SpecificScaleMap;                                  // 0xC0(0x50)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class UWeaponPartWeaponAttributeDataAsset*   WeaponAttributeConfig;                             // 0x110(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UWeaponPartDataAsset* GetDefaultObj();

};

// 0x38 (0x150 - 0x118)
// Class Solarland.WeaponPartClipDataAsset
class UWeaponPartClipDataAsset : public UWeaponPartDataAsset
{
public:
	bool                                         bSupportExtract;                                   // 0x118(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_30D6[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               HandLocOffsetVector;                               // 0x11C(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              HandRotOffsetRotator;                              // 0x128(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                        DropLifeSpan;                                      // 0x134(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  CharacterHandSocket;                               // 0x138(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  CharacterHandInverseSocket;                        // 0x140(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_30D7[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UWeaponPartClipDataAsset* GetDefaultObj();

};

// 0x20 (0x50 - 0x30)
// Class Solarland.WeaponPartWeaponAttributeDataAsset
class UWeaponPartWeaponAttributeDataAsset : public UDataAsset
{
public:
	struct FWeaponAttributeModifierContainer     AttributeModifiers;                                // 0x30(0x10)(Edit, NativeAccessSpecifierPublic)
	TArray<struct FWeaponPartWeaponAttributeByWeaponType> ModifiersByWeaponType;                             // 0x40(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UWeaponPartWeaponAttributeDataAsset* GetDefaultObj();

};

// 0x0 (0x6C0 - 0x6C0)
// Class Solarland.WeaponPartGripComp
class UWeaponPartGripComp : public UWeaponPartComp
{
public:

	static class UClass* StaticClass();
	static class UWeaponPartGripComp* GetDefaultObj();

};

// 0x58 (0x170 - 0x118)
// Class Solarland.WeaponPartGripDataAsset
class UWeaponPartGripDataAsset : public UWeaponPartDataAsset
{
public:
	TMap<enum class ECharacterBodyScaleType, struct FWeaponPartGripDataForCharacter> DataForCharacterMap;                               // 0x118(0x50)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	uint8                                        Pad_30D8[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UWeaponPartGripDataAsset* GetDefaultObj();

};

// 0x0 (0x6C0 - 0x6C0)
// Class Solarland.WeaponPartGunStockComp
class UWeaponPartGunStockComp : public UWeaponPartComp
{
public:

	static class UClass* StaticClass();
	static class UWeaponPartGunStockComp* GetDefaultObj();

};

// 0x8 (0x120 - 0x118)
// Class Solarland.WeaponPartGunStockDataAsset
class UWeaponPartGunStockDataAsset : public UWeaponPartDataAsset
{
public:
	uint8                                        Pad_30D9[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UWeaponPartGunStockDataAsset* GetDefaultObj();

};

// 0x0 (0x6C0 - 0x6C0)
// Class Solarland.WeaponPartMuzzleComp
class UWeaponPartMuzzleComp : public UWeaponPartComp
{
public:

	static class UClass* StaticClass();
	static class UWeaponPartMuzzleComp* GetDefaultObj();

	bool HasSilencer();
	bool HasFlameArrester();
};

// 0x8 (0x120 - 0x118)
// Class Solarland.WeaponPartMuzzleDataAsset
class UWeaponPartMuzzleDataAsset : public UWeaponPartDataAsset
{
public:
	bool                                         bSilencer;                                         // 0x118(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bFlameArrester;                                    // 0x119(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_30DA[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UWeaponPartMuzzleDataAsset* GetDefaultObj();

};

// 0x98 (0x148 - 0xB0)
// Class Solarland.WeaponPartsComponent
class UWeaponPartsComponent : public UActorComponent
{
public:
	uint8                                        Pad_30DF[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UWeaponPartScopeComp*                  ScopeComp;                                         // 0xC8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWeaponPartClipComp*                   ClipComp;                                          // 0xD0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWeaponPartMuzzleComp*                 MuzzleComp;                                        // 0xD8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWeaponPartGripComp*                   GripComp;                                          // 0xE0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWeaponPartGunStockComp*               GunStockComp;                                      // 0xE8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  CrossHairPlane;                                    // 0xF0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMeshComponent*                  RedCrosshairPanel;                                 // 0xF8(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bQuickScope;                                       // 0x100(0x1)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_30E0[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  ScopeSocket;                                       // 0x104(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  GripSocket;                                        // 0x10C(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  ClipSocket;                                        // 0x114(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  OldClipSocket;                                     // 0x11C(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  MuzzleSocket;                                      // 0x124(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  GunStockSocket;                                    // 0x12C(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_30E1[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ASolarWeapon*                          MyWeaponActor;                                     // 0x138(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_30E2[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UWeaponPartsComponent* GetDefaultObj();

	void UpdateSinglePartHoldView(class UWeaponPartComp* PartComp, bool bLocal);
	void ShowParts(bool Show, enum class EWeaponPartVisibilityChangeFlag Flag);
	bool IsPartExist(int32 ID);
	bool IsDefaultPart(int32 PartID);
	bool IsAmmoExist(int32 ID);
	TArray<class UWeaponPartComp*> GetValidWeaponParts();
};

// 0x150 (0x810 - 0x6C0)
// Class Solarland.WeaponPartScopeComp
class UWeaponPartScopeComp : public UWeaponPartComp
{
public:
	bool                                         bOpen;                                             // 0x6C0(0x1)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_30E3[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        FovValue;                                          // 0x6C4(0x4)(Edit, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HipToAdsTime;                                      // 0x6C8(0x4)(Edit, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_30E4[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UCurveFloat*                           FovChangeCurve;                                    // 0x6D0(0x8)(Edit, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        HitEffectScale;                                    // 0x6D8(0x4)(Edit, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_30E5[0x104];                                   // Fixing Size After Last Property  [ Dumper-7 ]
	class UMaterialInstance*                     ScopeCrossHairMaterial;                            // 0x7E0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStaticMesh*                           ScopeCrossHairMesh;                                // 0x7E8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMaterialInstance*                     ScopeEnemyMakerMaterial;                           // 0x7F0(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStaticMesh*                           ScopeEnemyMakerMesh;                               // 0x7F8(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStaticMesh*                           ScopeMeshForFPP;                                   // 0x800(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStaticMesh*                           ScopeMeshForTPP;                                   // 0x808(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UWeaponPartScopeComp* GetDefaultObj();

	void OpenScope(float Time);
	bool IsOpened();
	enum class EWeaponScopeType GetScopeType();
	struct FVector GetScopeAimCenterPoint();
	struct FRotator GetFPPRotation();
	struct FVector GetFPPLocation();
	float GetDistanceToEyeWhenScope();
	void CloseScope();
};

// 0x1D8 (0x2F0 - 0x118)
// Class Solarland.WeaponPartScopeDataAsset
class UWeaponPartScopeDataAsset : public UWeaponPartDataAsset
{
public:
	enum class EWeaponScopeType                  TypeID;                                            // 0x118(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_30E6[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               FPPLocation;                                       // 0x11C(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                              FPPRotation;                                       // 0x128(0xC)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                        DistanceToEyeWhenScope;                            // 0x134(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bShoulderShootChangeScale;                         // 0x138(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_30E7[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ShoulderShootChangeScale;                          // 0x13C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  CrosshairSocketName;                               // 0x140(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                       LodXMeshPath;                                      // 0x148(0x18)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                       ScopeCrossHairMaterialPath;                        // 0x160(0x18)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                       ScopeCrossHairMeshPath;                            // 0x178(0x18)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bVibration;                                        // 0x190(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_30E8[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<int32, struct FPartScopeCorrect>        CorrectMapData;                                    // 0x198(0x50)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	TMap<int32, struct FPartScopeCorrect>        FPPMapForWeaponSkin;                               // 0x1E8(0x50)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FSolarAmmoMeshData                    AmmoMeshData;                                      // 0x238(0x48)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	bool                                         bEnableEnemyMaker;                                 // 0x280(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_30E9[0xF];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            EnemyMakerRelativeTransform;                       // 0x290(0x30)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                       ScopeCrossHairRedPointMaterialPath;                // 0x2C0(0x18)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSoftObjectPath                       ScopeCrossHairRedPointMeshPath;                    // 0x2D8(0x18)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UWeaponPartScopeDataAsset* GetDefaultObj();

};

// 0x1D8 (0x210 - 0x38)
// Class Solarland.RecoverableRecoilPattern
class URecoverableRecoilPattern : public USolarIncreaseAndDecreasePattern
{
public:
	bool                                         bLimitMaxOffset;                                   // 0x38(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_30EA[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               MaxOffset;                                         // 0x3C(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bLimitRecoveryStopOffset;                          // 0x48(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_30EB[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FVector                               RecoveryStopOffset;                                // 0x4C(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        IncreaseTime;                                      // 0x58(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_30EC[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRuntimeFloatCurve                    IncreaseCurve;                                     // 0x60(0x88)(Edit, NativeAccessSpecifierPublic)
	struct FWeaponRecoilVectorGenerator          OffsetGenerator;                                   // 0xE8(0x18)(Edit, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                    DecreaseTimeCurve;                                 // 0x100(0x88)(Edit, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                    DecreaseRatioCurve;                                // 0x188(0x88)(Edit, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class URecoverableRecoilPattern* GetDefaultObj();

};

// 0x38 (0x88 - 0x50)
// Class Solarland.RecoverableRecoilPatternRuntime
class URecoverableRecoilPatternRuntime : public USolarIncreaseAndDecreasePatternRuntime
{
public:
	uint8                                        Pad_30ED[0x38];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class URecoverableRecoilPatternRuntime* GetDefaultObj();

};

// 0x10 (0x220 - 0x210)
// Class Solarland.WeaponRecoilPattern
class UWeaponRecoilPattern : public URecoverableRecoilPattern
{
public:
	bool                                         bEnableRecoveryCorrection;                         // 0x210(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_30EE[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRangeFloat                           HoriRecoveryRangeWithCorrection;                   // 0x214(0x8)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_30EF[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UWeaponRecoilPattern* GetDefaultObj();

};

// 0x10 (0x98 - 0x88)
// Class Solarland.WeaponRecoilPatternRuntime
class UWeaponRecoilPatternRuntime : public URecoverableRecoilPatternRuntime
{
public:
	uint8                                        Pad_30F0[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UWeaponRecoilPatternRuntime* GetDefaultObj();

};

// 0xE0 (0x118 - 0x38)
// Class Solarland.WeaponTPPKickPattern
class UWeaponTPPKickPattern : public USolarIncreaseAndDecreasePattern
{
public:
	struct FVector                               MaxOffset;                                         // 0x38(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        IncreaseTime;                                      // 0x44(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveVector*                          IncreaseCurve;                                     // 0x48(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FWeaponRecoilVectorGenerator          OffsetGenerator;                                   // 0x50(0x18)(Edit, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	float                                        DecreaseTime;                                      // 0x68(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_30F1[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRuntimeFloatCurve                    DecreaseRatioCurve;                                // 0x70(0x88)(Edit, NativeAccessSpecifierPublic)
	class UCurveVector*                          DecreaseOffsetCurve;                               // 0xF8(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FWeaponRecoilVectorGenerator          DecreaseOffsetGenerator;                           // 0x100(0x18)(Edit, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UWeaponTPPKickPattern* GetDefaultObj();

};

// 0x30 (0x80 - 0x50)
// Class Solarland.WeaponTPPKickPatternRuntime
class UWeaponTPPKickPatternRuntime : public USolarIncreaseAndDecreasePatternRuntime
{
public:
	uint8                                        Pad_30F2[0x30];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UWeaponTPPKickPatternRuntime* GetDefaultObj();

};

// 0x230 (0x268 - 0x38)
// Class Solarland.WeaponGunKickPattern
class UWeaponGunKickPattern : public USolarIncreaseAndDecreasePattern
{
public:
	struct FValueCurveBySprayingTime             SprayingOffset;                                    // 0x38(0x18)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FValueCurveBySprayingTime             SprayingRotation;                                  // 0x50(0x18)(Edit, NoDestructor, NativeAccessSpecifierPublic)
	float                                        SprayingRestartSmoothTime;                         // 0x68(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SprayingRecoveryTime;                              // 0x6C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                    SprayingRecoveryRatioCurve;                        // 0x70(0x88)(Edit, NativeAccessSpecifierPublic)
	float                                        IncreaseTime;                                      // 0xF8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_30F3[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRuntimeFloatCurve                    IncreaseCurve;                                     // 0x100(0x88)(Edit, NativeAccessSpecifierPublic)
	struct FVector                               MaxOffset;                                         // 0x188(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_30F4[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FWeaponRecoilVectorGenerator          OffsetGenerator;                                   // 0x198(0x18)(Edit, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	struct FRotator                              MaxRotation;                                       // 0x1B0(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_30F5[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FWeaponRecoilRotatorGenerator         RotationGenerator;                                 // 0x1C0(0x18)(Edit, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	float                                        DecreaseTime;                                      // 0x1D8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_30F6[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRuntimeFloatCurve                    DecreaseRatioCurve;                                // 0x1E0(0x88)(Edit, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UWeaponGunKickPattern* GetDefaultObj();

};

// 0x88 (0xD8 - 0x50)
// Class Solarland.WeaponGunKickPatternRuntime
class UWeaponGunKickPatternRuntime : public USolarIncreaseAndDecreasePatternRuntime
{
public:
	uint8                                        Pad_30F7[0x88];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UWeaponGunKickPatternRuntime* GetDefaultObj();

};

// 0x0 (0x28 - 0x28)
// Class Solarland.WeaponRecoilValueGenerator
class UWeaponRecoilValueGenerator : public UObject
{
public:

	static class UClass* StaticClass();
	static class UWeaponRecoilValueGenerator* GetDefaultObj();

};

// 0x8 (0x30 - 0x28)
// Class Solarland.ConstantValueGenerator
class UConstantValueGenerator : public UWeaponRecoilValueGenerator
{
public:
	float                                        Value;                                             // 0x28(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_30F8[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UConstantValueGenerator* GetDefaultObj();

};

// 0x18 (0x40 - 0x28)
// Class Solarland.RandomRangeValueGenerator
class URandomRangeValueGenerator : public UWeaponRecoilValueGenerator
{
public:
	struct FSymmetricRangeFloat                  ValueRange;                                        // 0x28(0xC)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	int32                                        RandomSeed;                                        // 0x34(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        RandomStep;                                        // 0x38(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_30F9[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class URandomRangeValueGenerator* GetDefaultObj();

};

// 0x18 (0x40 - 0x28)
// Class Solarland.RandomByPerlinNoiseValueGenerator
class URandomByPerlinNoiseValueGenerator : public UWeaponRecoilValueGenerator
{
public:
	struct FSymmetricRangeFloat                  ValueRange;                                        // 0x28(0xC)(Edit, NoDestructor, NativeAccessSpecifierPrivate)
	float                                        NoiseBase;                                         // 0x34(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        NoiseFrequency;                                    // 0x38(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_30FA[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class URandomByPerlinNoiseValueGenerator* GetDefaultObj();

};

// 0x98 (0xC0 - 0x28)
// Class Solarland.FixedCurveValueGenerator
class UFixedCurveValueGenerator : public UWeaponRecoilValueGenerator
{
public:
	struct FRuntimeFloatCurve                    ValueCurve;                                        // 0x28(0x88)(Edit, NativeAccessSpecifierPrivate)
	float                                        ValueScale;                                        // 0xB0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EFixedValueMode                   ValueMode;                                         // 0xB4(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_30FB[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        RepeatStartIndex;                                  // 0xB8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_30FC[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFixedCurveValueGenerator* GetDefaultObj();

};

// 0x98 (0xC0 - 0x28)
// Class Solarland.FixedCurveValueByIndexGenerator
class UFixedCurveValueByIndexGenerator : public UWeaponRecoilValueGenerator
{
public:
	struct FRuntimeFloatCurve                    ValueCurve;                                        // 0x28(0x88)(Edit, NativeAccessSpecifierPrivate)
	float                                        ValueScale;                                        // 0xB0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EFixedValueMode                   ValueMode;                                         // 0xB4(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bRepeatable;                                       // 0xB5(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_30FD[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        RepeatStartIndex;                                  // 0xB8(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_30FE[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFixedCurveValueByIndexGenerator* GetDefaultObj();

};

// 0x20 (0x48 - 0x28)
// Class Solarland.FixedPointsValueGenerator
class UFixedPointsValueGenerator : public UWeaponRecoilValueGenerator
{
public:
	TArray<float>                                Values;                                            // 0x28(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                        ValueScale;                                        // 0x38(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	enum class EFixedValueMode                   ValueMode;                                         // 0x3C(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_30FF[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        RepeatStartIndex;                                  // 0x40(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3100[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFixedPointsValueGenerator* GetDefaultObj();

};

// 0x18 (0x40 - 0x28)
// Class Solarland.FixedSectionValueGenerator
class UFixedSectionValueGenerator : public UWeaponRecoilValueGenerator
{
public:
	TArray<struct FFixedSectionInfo>             Sections;                                          // 0x28(0x10)(Edit, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                        RepeatStartIndex;                                  // 0x38(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3101[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UFixedSectionValueGenerator* GetDefaultObj();

};

// 0x10 (0x38 - 0x28)
// Class Solarland.CompositeValueGenerator
class UCompositeValueGenerator : public UWeaponRecoilValueGenerator
{
public:
	TArray<class UWeaponRecoilValueGenerator*>   Generators;                                        // 0x28(0x10)(Edit, ExportObject, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UCompositeValueGenerator* GetDefaultObj();

};

// 0x90 (0x7C0 - 0x730)
// Class Solarland.WeaponryPartBase
class UWeaponryPartBase : public USwitchEffectStaticMeshComponent
{
public:
	uint8                                        Pad_3106[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        PartID;                                            // 0x738(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bDataAssetInit;                                    // 0x73C(0x1)(Edit, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bMeshAssetsInit;                                   // 0x73D(0x1)(Edit, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3107[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FSoftObjectPath                       AssetPath;                                         // 0x740(0x18)(ZeroConstructor, Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWeaponPartDataAsset*                  OrginDataAsset;                                    // 0x758(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWeaponPartDataAsset*                  SkinPartDataAsset;                                 // 0x760(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStaticMesh*                           MyStaticMesh;                                      // 0x768(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWeaponSkinData*                       WeaponSkin;                                        // 0x770(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FWeaponSkinPartData                   SkinMatchedPartData;                               // 0x778(0x40)(Transient, Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_3108[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UWeaponryPartBase* GetDefaultObj();

	void ResetSkin(bool bShowHDMesh);
	void RefreshSpecificScale();
	void PartUninstall(int32 ID);
	void PartInitialize(int32 ID, bool bShowHDMesh, bool bDefault);
	void OnInitMeshAssets();
	void OnInitDataAsset();
	bool IsValidPart();
	bool HasInitialized();
	TArray<struct FSoftObjectPath> GetSkinNeedLoadAssets(class UWeaponSkinData* SkinData, bool bShowHDMesh);
	enum class EWeaponPartType GetPartType();
	int32 GetPartID();
	TArray<struct FSoftObjectPath> GetClientNeedLoadMesh(bool bShowHDMesh);
	TArray<struct FSoftObjectPath> GetClientNeedLoadAssets(bool bShowHDMesh);
};

// 0x0 (0x7C0 - 0x7C0)
// Class Solarland.WeaponryPartClip
class UWeaponryPartClip : public UWeaponryPartBase
{
public:

	static class UClass* StaticClass();
	static class UWeaponryPartClip* GetDefaultObj();

};

// 0x60 (0x110 - 0xB0)
// Class Solarland.WeaponryPartComponent
class UWeaponryPartComponent : public UActorComponent
{
public:
	uint8                                        Pad_310D[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UWeaponryPartScope*                    ScopeComp;                                         // 0xB8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWeaponryPartClip*                     ClipComp;                                          // 0xC0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWeaponryPartMuzzle*                   MuzzleComp;                                        // 0xC8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWeaponryPartGrip*                     GripComp;                                          // 0xD0(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWeaponryPartGunStock*                 GunStockComp;                                      // 0xD8(0x8)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                  ScopeSocket;                                       // 0xE0(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  GripSocket;                                        // 0xE8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  ClipSocket;                                        // 0xF0(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  MuzzleSocket;                                      // 0xF8(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  GunStockSocket;                                    // 0x100(0x8)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AWeaponryWeapon*                       MyWeaponActor;                                     // 0x108(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UWeaponryPartComponent* GetDefaultObj();

	void UpdateSkin(class UWeaponSkinData* SkinData, bool bShowHDMesh);
	void UninstallWeaponPart(int32 PartID);
	bool SinglePartHasInitilized(class UWeaponryPartBase* Part);
	void ShowParts(bool Show);
	void SetSinglePartSkin(class UWeaponryPartBase* Part, class UWeaponSkinData* SkinData);
	void ResetSkin(bool bShowHDMesh);
	bool ReplaceWeaponPart(int32 PartID, bool bReplaceRoute);
	bool IsPartExist(int32 ID);
	void InitDefaultParts(bool bShowHDMesh);
	bool HasInitilizeFinish();
	int32 GetPartsTypeByID(int32 ID);
	void AttachToRightSocket(class UWeaponryPartBase* PartComp);
};

// 0x0 (0x7C0 - 0x7C0)
// Class Solarland.WeaponryPartGrip
class UWeaponryPartGrip : public UWeaponryPartBase
{
public:

	static class UClass* StaticClass();
	static class UWeaponryPartGrip* GetDefaultObj();

};

// 0x0 (0x7C0 - 0x7C0)
// Class Solarland.WeaponryPartGunStock
class UWeaponryPartGunStock : public UWeaponryPartBase
{
public:

	static class UClass* StaticClass();
	static class UWeaponryPartGunStock* GetDefaultObj();

};

// 0x0 (0x7C0 - 0x7C0)
// Class Solarland.WeaponryPartMuzzle
class UWeaponryPartMuzzle : public UWeaponryPartBase
{
public:

	static class UClass* StaticClass();
	static class UWeaponryPartMuzzle* GetDefaultObj();

};

// 0x0 (0x7C0 - 0x7C0)
// Class Solarland.WeaponryPartScope
class UWeaponryPartScope : public UWeaponryPartBase
{
public:

	static class UClass* StaticClass();
	static class UWeaponryPartScope* GetDefaultObj();

};

// 0x18 (0xC8 - 0xB0)
// Class Solarland.WeaponrySkinComponent
class UWeaponrySkinComponent : public UActorComponent
{
public:
	uint8                                        Pad_310E[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UWeaponSkinData*                       SkinDataAsset;                                     // 0xB8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AWeaponryWeapon*                       MyWeapon;                                          // 0xC0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UWeaponrySkinComponent* GetDefaultObj();

	class UWeaponSkinData* GetSkinData();
};

// 0x438 (0x660 - 0x228)
// Class Solarland.WeaponryWeapon
class AWeaponryWeapon : public AActor
{
public:
	uint8                                        Pad_3114[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FTransform                            PreviewTransform;                                  // 0x230(0x30)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FTransform                            ScoOffsetTransform;                                // 0x260(0x30)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FTransform                            StoOffsetTransform;                                // 0x290(0x30)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FTransform                            GriOffsetTransform;                                // 0x2C0(0x30)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FTransform                            BarOffsetTransform;                                // 0x2F0(0x30)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FTransform                            CliOffsetTransform;                                // 0x320(0x30)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FTransform                            ShopPreviewTransform;                              // 0x350(0x30)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FTransform                            BattlePassPreviewTransform;                        // 0x380(0x30)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FTransform                            GetRewardTransform;                                // 0x3B0(0x30)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FTransform                            GrowTaskTransform;                                 // 0x3E0(0x30)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FTransform                            LuckDrawTransform;                                 // 0x410(0x30)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FTransform                            CarouselDrawTransform;                             // 0x440(0x30)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FTransform                            SupplyBoxDetailTransform;                          // 0x470(0x30)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FTransform                            SupplyBoxRaffleTransform;                          // 0x4A0(0x30)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	class USingleWeaponConfig*                   Config;                                            // 0x4D0(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USkeletalMeshComponent*                Mesh;                                              // 0x4D8(0x8)(Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3115[0x1C];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        Weaponid;                                          // 0x4FC(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FSoftObjectPath                       FightMeshPath;                                     // 0x500(0x18)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystemComponent*              SkinSpecialEffect;                                 // 0x518(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWeaponryPartComponent*                WeaponPartComponent;                               // 0x520(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWeaponrySkinComponent*                WeaponSkinComponent;                               // 0x528(0x8)(Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSoftObjectPtr<class UCurveVector>           DissolveCurvePath;                                 // 0x530(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UMaterialInterface>     DissolveMatPath;                                   // 0x558(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UCurveVector>           FresnelCurvePath;                                  // 0x580(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UMaterialInterface>     FresnelMatPath;                                    // 0x5A8(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UParticleSystem>        SwitchParticleEffectPath;                          // 0x5D0(0x28)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3116[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        SwitchEffectInterval;                              // 0x600(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SelfDelayShowSeconds;                              // 0x604(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSwitchEffectInfo                     DissolveEffectInfo;                                // 0x608(0x18)(ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FSwitchEffectInfo                     FresnelEffectInfo;                                 // 0x620(0x18)(ContainsInstancedReference, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3117[0x28];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class AWeaponryWeapon* GetDefaultObj();

	void TransformToMirror(const struct FTransform& OriginalTransform);
	void StopTweenImmediately(struct FVector& DestPos);
	void SetWeaponSkin(class UWeaponSkinData* SkinData);
	void SetWeaponMeshVisibility(bool bIsVisible);
	void SetWeaponMesh(class USkeletalMesh* NewMesh, bool bWithSwitchEffect);
	void SetIsDownloadHDModel(bool InValue);
	void ResetSkinSpecialEffect();
	void ResetMaterial();
	void PostUpdateAppearance();
	void PlaySwitchEffect();
	void OnWeaponSkinRefresh(bool bValid, int32 SkinId);
	void OnWeaponDataInitComplete();
	void MoveToSpecifiedPos(struct FVector& DestPos, bool IsDecMode, float BaseValue, float CurveValue);
	class UParticleSystemComponent* InternalPlayEffectAttached(class UParticleSystem* PS, class USceneComponent* AttachToComponent, class FName AttachPointName, const struct FAttachedEffectParam& Param);
	void InitWeaponConfig(int32 Weaponid, const struct FVector& DefaultLoc);
	int32 GetWeaponID();
	TArray<struct FSoftObjectPath> GetSkinNeedLoadAssets(class UWeaponSkinData* SkinData, bool bLoadHDMesh);
	bool GetIsDownloadHDModel();
	class USingleWeaponConfig* GetCurrentConfig();
	void EnqueueUpdateAppearanceCmd(uint8 Cmd, const class FString& Params);
	void EmptyMeshOverrideMaterials();
};

// 0x70 (0x498 - 0x428)
// Class Solarland.WeaponScanAbility
class UWeaponScanAbility : public USolarWeaponGameplayAbility
{
public:
	TSubclassOf<class ASolarRadarBase>           RadarClass;                                        // 0x428(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ASolarRadarBase*                       SpawnedRadar;                                      // 0x430(0x8)(Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        EffectRadius;                                      // 0x438(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        DelayDisplayTime;                                  // 0x43C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                          ExecuteAnimMontage;                                // 0x440(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                          ExecuteAnimMontageWithWeapon;                      // 0x448(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bExecuteAnimMontageByWeaponStatus;                 // 0x450(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bWaitMontageNotifyToSpawnRadar;                    // 0x451(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3118[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FName                                  SpawnRadarMontageNotify;                           // 0x454(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bWaitExecuteAnimCompletedSpawnRader;               // 0x45C(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3119[0x3];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TSubclassOf<class UGameplayEffect>           WaitSpawnGameplayEffect;                           // 0x460(0x8)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FActiveGameplayEffectHandle           ActiveWaitSpawnEffectHandle;                       // 0x468(0x8)(NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ASolarCharacter*                       EffectUser;                                        // 0x470(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_311A[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TWeakObjectPtr<class AActor>                 InstigatorCache;                                   // 0x488(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_311B[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UWeaponScanAbility* GetDefaultObj();

	void SpawnRadar();
	void RemoveWaitSpawnEffect();
	void OnMontageNotify(class FName NotifyName);
	void OnExecuteAnimationCompleted();
	void OnCharacterReset();
	void AddWaitSpawnEffect();
	void ActiveRader();
};

// 0x58 (0x3A0 - 0x348)
// Class Solarland.WeaponScopeSliderWidget
class UWeaponScopeSliderWidget : public USolarUserWidget
{
public:
	TArray<struct FScopeSliderData>              ScopeSliderDatas;                                  // 0x348(0x10)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        ScopeSliderType;                                   // 0x358(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SliderAnimPlaySpeed;                               // 0x35C(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        SliderValueScale;                                  // 0x360(0x4)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_311C[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class USlider*                               Slider_ADS;                                        // 0x368(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarTextBlock*                       Txt_Scope;                                         // 0x370(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Anim_Type0;                                        // 0x378(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Anim_Type1;                                        // 0x380(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      AnimToPlay;                                        // 0x388(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_311D[0x10];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UWeaponScopeSliderWidget* GetDefaultObj();

	void SetSliderDisplay(bool bSkipAnimation);
	void OnSliderValueChangedOnPC(float InValue);
	void OnSliderValueChanged(float InValue);
};

// 0x400 (0x430 - 0x30)
// Class Solarland.WeaponShootConfig
class UWeaponShootConfig : public UDataAsset
{
public:
	bool                                         bEnableNewSpread;                                  // 0x30(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableNewRecoil;                                  // 0x31(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableNewWeaponAnim;                              // 0x32(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bEnableNewCameraShake;                             // 0x33(0x1)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        ShootOriginRange;                                  // 0x34(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        StandardShootDistance;                             // 0x38(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               RotationPivot;                                     // 0x3C(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<enum class EWeaponScopeType, struct FVector> RotationPivotMap;                                  // 0x48(0x50)(Edit, NativeAccessSpecifierPublic)
	float                                        BaseSpread;                                        // 0x98(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_311E[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRuntimeFloatCurve                    SpreadDistributionCurve;                           // 0xA0(0x88)(Edit, NativeAccessSpecifierPublic)
	float                                        AverageSpreadDistribution;                         // 0x128(0x4)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_311F[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRuntimeFloatCurve                    VisualSpreadScaleCurve;                            // 0x130(0x88)(Edit, NativeAccessSpecifierPublic)
	TArray<struct FWeaponAttributeModifiersByTag> ModifiersByOwnerTag;                               // 0x1B8(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	enum class ESprayingRecoveryMode             SprayingRecoveryMode;                              // 0x1C8(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3120[0x7];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRuntimeFloatCurve                    SprayingRecoveryCurve;                             // 0x1D0(0x88)(Edit, NativeAccessSpecifierPublic)
	class UWeaponSpreadPattern*                  SpreadPattern;                                     // 0x258(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWeaponRecoilPattern*                  RecoilPattern;                                     // 0x260(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBlendSpace*                           TPPKickAnimBlendSpace;                             // 0x268(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                               TPPKickBlendSpaceMaxValue;                         // 0x270(0xC)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3121[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UWeaponTPPKickPattern*                 TPPKickPattern;                                    // 0x280(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<enum class EWeaponScopeType, float>     RecoilHoriRecRangeWithCoScaleMap;                  // 0x288(0x50)(Edit, NativeAccessSpecifierPublic)
	class UWeaponGunKickPattern*                 GunKickPattern;                                    // 0x2D8(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<enum class EWeaponScopeType, struct FGunKickScale> GunKickScaleMap;                                   // 0x2E0(0x50)(Edit, NativeAccessSpecifierPublic)
	bool                                         bEnableEndShake;                                   // 0x330(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                         bStopEndShakeOnShot;                               // 0x331(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3122[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UCurveVector*                          EndShakeOffsetCurve;                               // 0x338(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveVector*                          EndShakeRotationCurve;                             // 0x340(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                           EndShakeScaleBySpeedCurve;                         // 0x348(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveVector*                          EndShakeScaleByVelocityCurve;                      // 0x350(0x8)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SkewOffsetSmoothSpeed;                             // 0x358(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SkewRotationSmoothSpeed;                           // 0x35C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FWeaponSkewAdjustment>         SkewAdjustments;                                   // 0x360(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCrossHairShootConfig                 DefaultCrossHairConfig;                            // 0x370(0x10)(Edit, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TMap<enum class EWeaponScopeType, struct FCrossHairShootConfig> CrossHairConfigMap;                                // 0x380(0x50)(Edit, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class UWeaponCameraShakePattern*             ShakePatternOnShot;                                // 0x3D0(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWeaponCameraShakePattern*             ShakePatternOnScopeShot;                           // 0x3D8(0x8)(Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<enum class EWeaponScopeType, float>     ShakeScaleMapOnScopeShot;                          // 0x3E0(0x50)(Edit, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class UWeaponShootConfig* GetDefaultObj();

};

// 0x118 (0x140 - 0x28)
// Class Solarland.WeaponSpreadAndRecoil
class UWeaponSpreadAndRecoil : public UObject
{
public:
	class ASolarWeapon*                          Weapon;                                            // 0x28(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3123[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class UWeaponSpreadPatternRuntime*           SpreadPattern;                                     // 0x38(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWeaponRecoilPatternRuntime*           RecoilPattern;                                     // 0x40(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWeaponTPPKickPatternRuntime*          TPPKickPattern;                                    // 0x48(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWeaponGunKickPatternRuntime*          GunKickPattern;                                    // 0x50(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class URecoverableRecoilPatternRuntime*      CrossHairKickPattern;                              // 0x58(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWeaponCameraShakePatternRuntime*      ShakePatternOnShot;                                // 0x60(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWeaponCameraShakePatternRuntime*      ShakePatternOnScopeShot;                           // 0x68(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3124[0xD0];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UWeaponSpreadAndRecoil* GetDefaultObj();

};

// 0x0 (0x30 - 0x30)
// Class Solarland.WeaponSpreadPattern
class UWeaponSpreadPattern : public USolarPattern
{
public:

	static class UClass* StaticClass();
	static class UWeaponSpreadPattern* GetDefaultObj();

};

// 0x0 (0x30 - 0x30)
// Class Solarland.WeaponSpreadPatternRuntime
class UWeaponSpreadPatternRuntime : public USolarPatternRuntime
{
public:

	static class UClass* StaticClass();
	static class UWeaponSpreadPatternRuntime* GetDefaultObj();

};

// 0x1C0 (0x1F0 - 0x30)
// Class Solarland.SimpleSpreadPattern
class USimpleSpreadPattern : public UWeaponSpreadPattern
{
public:
	TArray<struct FWeaponAttributeParam>         SpreadModifiers;                                   // 0x30(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        SpreadScaleIncreaseTime;                           // 0x40(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                        Pad_3125[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	struct FRuntimeFloatCurve                    SpreadScaleIncreaseCurve;                          // 0x48(0x88)(Edit, NativeAccessSpecifierPublic)
	TArray<struct FSpreadScaleIncrease>          SpreadScaleIncreases;                              // 0xD0(0x10)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                    SpreadScaleDecreaseTimeCurve;                      // 0xE0(0x88)(Edit, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                    SpreadScaleDecreaseRatioCurve;                     // 0x168(0x88)(Edit, NativeAccessSpecifierPublic)

	static class UClass* StaticClass();
	static class USimpleSpreadPattern* GetDefaultObj();

};

// 0x38 (0x68 - 0x30)
// Class Solarland.SimpleSpreadPatternRuntime
class USimpleSpreadPatternRuntime : public UWeaponSpreadPatternRuntime
{
public:
	uint8                                        Pad_3126[0x38];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class USimpleSpreadPatternRuntime* GetDefaultObj();

};

// 0x50 (0x78 - 0x28)
// Class Solarland.WeaponSystemAssistAim
class UWeaponSystemAssistAim : public UObject
{
public:
	uint8                                        Pad_3128[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UWeaponAssistAimWeaponConfig*          CurrentAssistAimWpnCfg;                            // 0x50(0x8)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3129[0x20];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UWeaponSystemAssistAim* GetDefaultObj();

	void RefreshCurrentWeapon(class ASolarWeapon* Weapon);
	bool Init(class AActor* InWeaponHolder);
	bool GetActive();
};

// 0x80 (0xA8 - 0x28)
// Class Solarland.WeaponSystemAutoFire
class UWeaponSystemAutoFire : public UObject
{
public:
	uint8                                        Pad_312A[0x80];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UWeaponSystemAutoFire* GetDefaultObj();

	void OnWeaponFire();
};

// 0xD0 (0x180 - 0xB0)
// Class Solarland.WeaponSystemBase
class UWeaponSystemBase : public UActorComponent
{
public:
	uint8                                        Pad_312C[0x48];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class UWeaponSystemAutoFire*                 WeaponSystemAutoFire;                              // 0xF8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarWeaponFireInputResolver*         WeaponSystemFireInputResolver;                     // 0x100(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWeaponSystemAssistAim*                WeaponSystemAssistAim;                             // 0x108(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FWeaponSystemInteract                 WeaponSysIneract;                                  // 0x110(0x50)(Protected, NativeAccessSpecifierProtected)
	uint8                                        Pad_312D[0x10];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class AActor*                                MyPossessPawn;                                     // 0x170(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bAssistAim;                                        // 0x178(0x1)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bAutoFire;                                         // 0x179(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_312E[0x6];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UWeaponSystemBase* GetDefaultObj();

	void WeaponAssistSystemTick(float InDeltaTime);
	void SwitchSingleWeaponPressMode();
	void SwitchScopeButtonRotatableMode();
	void SwitchDoScopeMode();
	void SwitchAutoScopeEnable();
	void SwitchAutoFireEnable();
	void SwitchAutoFire(bool Open);
	void SwitchAssistAim(bool Opened);
	void SetCurrentActiveWeapon(class ASolarWeapon* Weapon);
	void SetCrosshairVisible(bool InVisible);
	void SetAutoScope(bool bOpen);
	void ServerPlayNoAmmoSound();
	void ReceiveMsgFromPlayer(bool bClient, struct FPlayerWeaponMsg& Msg);
	void OnTouchScreen();
	void OnToggleAutoFire();
	void OnToggleAssistAim();
	void OnOtherPlayerSpectateMyOwner();
	void NetMulticastPlayNoAmmoSound();
	bool IsUsingSpecialQuickAdsButton();
	class USolarWeaponFireInputResolver* GetFireInputResolver();
	void GetFireButtonInputState(enum class ESolarWeaponFireInputButtonState* OutLeftFireButton, enum class ESolarWeaponFireInputButtonState* OutRightFireButton, enum class ESolarWeaponFireInputButtonState* OutQuickAdsButton);
	struct FWeaponSysStateStruct GetCurrentState();
	bool CheckAutoFire(bool* Canfire);
};

// 0xA0 (0x220 - 0x180)
// Class Solarland.WeaponSystemPlayerBase
class UWeaponSystemPlayerBase : public UWeaponSystemBase
{
public:
	uint8                                        Pad_3130[0x38];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bHasPrimarySlotWeapon;                             // 0x1B8(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bHasSecondarySlotWeapon;                           // 0x1B9(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                         bHasTertiarySlotWeapon;                            // 0x1BA(0x1)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3131[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TWeakObjectPtr<class ASolarUnArmWeapon>      Punch;                                             // 0x1BC(0x8)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class ASolarPlayerWeapon>     PrimarySlotWeapon;                                 // 0x1C4(0x8)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class ASolarPlayerWeapon>     SecondarySlotWeapon;                               // 0x1CC(0x8)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class ASolarPlayerWeapon>     TertiarySlotWeapon;                                // 0x1D4(0x8)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class ASolarPlayerWeapon>     HeldWeapon;                                        // 0x1DC(0x8)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3132[0x3C];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UWeaponSystemPlayerBase* GetDefaultObj();

	void TriggerBoltAnim();
	void SpawnMeleeWeapon();
	void ResetCurrentWeaponFireState();
	void PostBolt();
	void OpenScopeForSpectator();
	void OnRep_TertiarySlotWeapon();
	void OnRep_SecondarySlotWeapon();
	void OnRep_Punch();
	void OnRep_PrimarySlotWeapon();
	void OnRep_HeldWeapon();
	class ASolarPlayerWeapon* GetWeaponBySlot(int32 InSlotType);
	class ASolarUnArmWeapon* GetUnArmWeapon();
	class ASolarPlayerWeapon* GetPackSecondaryWeapon();
	class ASolarPlayerWeapon* GetPackPrimaryWeapon();
	int32 GetLastActiveWeaponSlot();
	bool GetIsUnArm();
	float GetCurrentWeaponReloadTime(int32 Mode);
	bool GetCurrentWeaponIsOverloading();
	class UTexture2D* GetCurrentWeaponIcon();
	float GetCurrentWeaponBoltTime(int32 Mode);
	class ASolarPlayerWeapon* GetCurrentWeapon();
	float GetCurrentSwitchWeaponTime();
	int32 GetCurrentActiveSlot();
	class UStaticMesh* GetClipMeshOfCurrentWeapon();
	void GameStatisticsWeaponSkill(int32 InFireMode);
	void CrosshairQuitReload();
	void CrosshairEnterReload();
	void CloseScopeForSpectator();
	void CleanWeaponSlotsUI();
};

// 0x98 (0x2B8 - 0x220)
// Class Solarland.WeaponSystemPlayer
class UWeaponSystemPlayer : public UWeaponSystemPlayerBase
{
public:
	uint8                                        Pad_3140[0x49];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bInitializeWeaponSystem;                           // 0x269(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3141[0x12];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        ReloadBlockTimeMax;                                // 0x27C(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                ReceviedReloadMessage;                             // 0x280(0x10)(ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3142[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class AStaticMeshActor*                      DroppedClip;                                       // 0x298(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AStaticMeshActor*                      ExtractedClip;                                     // 0x2A0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bHoldFire;                                         // 0x2A8(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3143[0xF];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UWeaponSystemPlayer* GetDefaultObj();

	void TakeOffEquipAttributes(class ASolarPlayerWeapon* Weapon);
	void SwitchFireMode();
	void ServerSwitch(int8 InTargetSlot);
	void ServerSwap(int8 InSourceSlot, int8 InTargetSlot);
	bool ServerPackDropWeapon(int32 Slot);
	void ServerGameStaticsWeaponSkill(int8 InFireMode);
	void RecieveSafeAreaUpdateMsg(int32 Num);
	void RecieveExpPackMsg(int32 ItemID, int32 Num);
	void RecieveExpMsg(bool bClient, int32 Type, int32 Num, int32 Slot);
	void RecieveAssistMsg(enum class ESolarCharacterType HitedCharacterType);
	void PutEquipAttributes(class ASolarPlayerWeapon* Weapon);
	void PostAddWeaponEXPMessageWhenKill(int32 InWeaponSlot, enum class ESolarHitType InHitType, float InDamage, bool InbKillPlayer);
	void OnWeaponUpgrade(int32 InCurrentLevel, uint32 InUniqueID);
	void OnWeaponUpdateSkillPoint(uint32 InWeaponUniqueID, bool InbCoolDownFinish, int32 InCurrentExtraPoint);
	void OnWeaponUpdatePart(int32 InNewPartId, int32 InOldPartID, uint32 InWeaponUniqueID);
	void OnWeaponUpdateExp(float InTotalExp, float InCurrentExp, uint32 InUniqueID);
	void OnWeaponUpdateClipCapacity(int32 InFireMode, class ASolarWeapon* InWeapon);
	void OnWeaponSwitchOverload(bool InbSwitchOn, uint32 InUniqueID);
	void OnWeaponQuitReload(int32 InFireMode, bool InbReloadSuccess, uint32 InUniqueID);
	void OnWeaponEnterReload(int32 InFireMode, uint32 InUniqueID);
	void OnWeaponEnterFireCD(int32 InFireMode, uint32 InUniqueID);
	void OnWeaponControlled(class ASolarWeapon* InWeapon);
	void OnPlayerEnergyUpdate();
	void OnEnterBattleAction(enum class EEnterBattleType battleType);
	bool IsWeaponAmmoUseEnergy(int32 Slot, int32 FireMode);
	bool IsReloadBlock();
	bool IsCurrentWeapon(uint32 InUniqueID);
	class ASolarPlayerWeapon* GetWeaponByItemID(int32 ItemInstanceId);
	class ASolarPlayerWeapon* GetWeaponByID(int32 ID);
	int32 GetSlotByItemID(int64 InItemThisID);
	float GetRetrofitCost(int32 Slot);
	void ClientRecieveExpMsg(int32 Type, int32 Num, int32 Slot);
	void ClearWeapons();
};

// 0x0 (0x220 - 0x220)
// Class Solarland.WeaponSystemPlayerAI
class UWeaponSystemPlayerAI : public UWeaponSystemPlayerBase
{
public:

	static class UClass* StaticClass();
	static class UWeaponSystemPlayerAI* GetDefaultObj();

	bool IsCurrentWeapon(int32 ID);
	void ClearWeapons();
};

// 0x118 (0x298 - 0x180)
// Class Solarland.WeaponSystemVehicleComponent
class UWeaponSystemVehicleComponent : public UWeaponSystemBase
{
public:
	struct FWeaponSystemInteract                 WeaponSystemInteract;                              // 0x180(0x50)(NativeAccessSpecifierPublic)
	uint8                                        Pad_3146[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class ASolarVehicleWeapon*                   CurrentWeapon;                                     // 0x1E8(0x8)(Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ASolarCharacter*                       MyPawn;                                            // 0x1F0(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3147[0x28];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	struct FWeaponAction                         WeaponEquipAction;                                 // 0x220(0x8)(Net, RepNotify, NoDestructor, NativeAccessSpecifierPrivate)
	struct FWeaponAction                         WeaponUnequipAction;                               // 0x228(0x8)(Net, RepNotify, NoDestructor, NativeAccessSpecifierPrivate)
	TMap<class FName, enum class EVehicleWeaponScopeType> SavedWeaponScopeMap;                               // 0x230(0x50)(Transient, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3148[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bQuickAdsHolding;                                  // 0x281(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_3149[0xE];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        QuickAdsPressedTime;                               // 0x290(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                        Pad_314A[0x4];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UWeaponSystemVehicleComponent* GetDefaultObj();

	void ServerStatVehicleWeaponFire(int32 InFireMode);
	void ServerReload(uint8 ModeIndex, int32 Need);
	void ServerChangeWeaponScopeType(enum class EVehicleWeaponScopeType InScopeType);
	void OnRep_WeaponUnequipAction();
	void OnRep_WeaponEquipAction();
	void OnRep_CurrentWeapon(class ASolarVehicleWeapon* PreviousWeapon);
	void OnQuickAdsFire();
	class ASolarVehicleWeapon* GetCurrentVehicleWeapon();
};

// 0x0 (0xC8 - 0xC8)
// Class Solarland.WeaponUIStyleSheet
class UWeaponUIStyleSheet : public UDataTable
{
public:

	static class UClass* StaticClass();
	static class UWeaponUIStyleSheet* GetDefaultObj();

};

// 0x108 (0x130 - 0x28)
// Class Solarland.WidgetInputManager
class UWidgetInputManager : public UObject
{
public:
	FDelegateProperty_                           OnTouchStartDetected;                              // 0x28(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)
	FDelegateProperty_                           OnTouchUpdate;                                     // 0x38(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)
	FDelegateProperty_                           OnTouchEndDetected;                                // 0x48(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)
	FDelegateProperty_                           OnPointerStartDetected;                            // 0x58(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)
	FDelegateProperty_                           OnPointerUpdate;                                   // 0x68(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)
	FDelegateProperty_                           OnPointerEndDetected;                              // 0x78(0x10)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                        Pad_314D[0x8];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	TMap<int32, struct FVector2D>                TouchedList;                                       // 0x90(0x50)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPrivate)
	TMap<int32, struct FVector2D>                PointerList;                                       // 0xE0(0x50)(BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPrivate)

	static class UClass* StaticClass();
	static class UWidgetInputManager* GetDefaultObj();

	class UWidget* K2_GetManagedWidget();
	bool GetWidgetTouchedList(class USolarUserWidget* InWidget, TMap<int32, struct FVector2D>* OutList);
	bool GetWidgetPointerList(class USolarUserWidget* InWidget, TMap<int32, struct FVector2D>* OutList);
};

// 0xE0 (0x480 - 0x3A0)
// Class Solarland.WorldMark_ReviveTeammates
class UWorldMark_ReviveTeammates : public UActorMarkBase
{
public:
	class UCanvasPanel*                          CanvasPanel_0;                                     // 0x3A0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                          Panel;                                             // 0x3A8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UScaleBox*                             ScaleBox_0;                                        // 0x3B0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Img_Light_1;                                       // 0x3B8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Img_HeadBg_Shadow;                                 // 0x3C0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Img_PlayerHead;                                    // 0x3C8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                ProgressCD;                                        // 0x3D0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarTextBlock*                       Txt_Recover;                                       // 0x3D8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                            Distance;                                          // 0x3E0(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                Img_Arrow;                                         // 0x3E8(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                      Occupy_Anim;                                       // 0x3F0(0x8)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInstanceDynamic*              CDMaterial;                                        // 0x3F8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USolarResurrectionComponent*           ResurrectionComp;                                  // 0x400(0x8)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FName                                  ProgressParamName;                                 // 0x408(0x8)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                          ProgressParamDefaultValue;                         // 0x410(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                TimeParamName;                                     // 0x420(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        DistanceLocalTextID;                               // 0x430(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        RecoverLocalTextID;                                // 0x434(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int32                                        TimeFormatLocalTextID;                             // 0x438(0x4)(Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_314E[0x4];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class FString                                NotifySoundName;                                   // 0x440(0x10)(Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_314F[0x30];                                    // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UWorldMark_ReviveTeammates* GetDefaultObj();

	void SetPlayerIDAndChangeColor(const class FString& PlayerId);
};

// 0x40 (0x388 - 0x348)
// Class Solarland.WorldMarkButton
class UWorldMarkButton : public USolarUserWidget
{
public:
	class UImage*                                Select_Arrow;                                      // 0x348(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UButton*                               WorldMarkBtn;                                      // 0x350(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetSwitcher*                       Switcher;                                          // 0x358(0x8)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3150[0x1];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	bool                                         bButtonClicked;                                    // 0x361(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3151[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        UnHoveredDis;                                      // 0x364(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIfTouchMoveout;                                   // 0x368(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIfQuickChatWheelOpened;                           // 0x369(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3152[0x6];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	class ASolarHUDInGame*                       SolarHUDInGame;                                    // 0x370(0x8)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIfChooseAnyMark;                                  // 0x378(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         bIfPressed;                                        // 0x379(0x1)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3153[0x2];                                     // Fixing Size After Last Property  [ Dumper-7 ]
	float                                        LongPressDeltaTime;                                // 0x37C(0x4)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3154[0x8];                                     // Fixing Size Of Struct [ Dumper-7 ]

	static class UClass* StaticClass();
	static class UWorldMarkButton* GetDefaultObj();

	void SetMarkButtonState(enum class EMarkButtonState NewState);
	void ResetButton();
	struct FEventReply ReleaseMouseCapture();
	void RefreshButtonState(bool IsAlreadyBeResponsed);
	void OnMarkButtonDragSelectEnded();
	void OnCustomGameStateChanged(enum class ESCMInGameState NewGameState);
	void OnCharacterDead(class ASolarCharacter* InCharacter);
	void LongPressCheckBegin();
	void ClearLongPressCheckTimer();
	struct FEventReply CaptureMouse();
};

// 0x148 (0x1F8 - 0xB0)
// Class Solarland.WorldMarkComponent
class UWorldMarkComponent : public UActorComponent
{
public:
	uint8                                        Pad_3166[0x18];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	class ASolarCharacter*                       Owner;                                             // 0xC8(0x8)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                       WorldMarkPoolOriginSize;                           // 0xD0(0x4)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                        MinCheckDistance;                                  // 0xD4(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                        MaxCheckDistance;                                  // 0xD8(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                         AutoMarkIsCoolingDown;                             // 0xDC(0x1)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3167[0x5B];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	int32                                        AttachedToCharacterNumLimit;                       // 0x138(0x4)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3168[0x54];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<TWeakObjectPtr<class UHUD_WorldMark>> ChosenMarksTable;                                  // 0x190(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TWeakObjectPtr<class UHUD_WorldMark>         CurrentChosenMark;                                 // 0x1A0(0x8)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                        Pad_3169[0x40];                                    // Fixing Size After Last Property  [ Dumper-7 ]
	TArray<class UHUD_WorldMark*>                WorldMarkPool;                                     // 0x1E8(0x10)(ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

	static class UClass* StaticClass();
	static class UWorldMarkComponent* GetDefaultObj();

	void VehicleNotify(int32 VehicleID, int32 NameLocID, class ASolarPlayerController* Controller);
	bool VagueMarkCharacter();
	void UpdateAttachedMarks();
	void UnMarkItemByIDLuaCall(int64 InstanceID);
	void ResponseChosenMark();
	void RemoveItemMarkWhenPlayerPicked(int64& InItemInstanceId);
	void RemoveAttachedMarkByActors(TArray<class AActor*>* InActors);
	void ReleaseWorldMarkPool();
	void RefreshChosenMark();
	void RecycleWorldMark(class UHUD_WorldMark* WorldMark);
	void PushBackQueueGroupMapWidget(enum class EWorldMarkType Type, int32 PosInTeam, class UHUD_WorldMark* Widget);
	class UHUD_WorldMark* PopQueueGroupMapWidget(enum class EWorldMarkType Type, int32 PosInTeam);
	void OnVehicleEndPlay(class AActor* Actor, enum class EEndPlayReason EndPlayReason);
	void OnMarkBeChosen(class UHUD_WorldMark* MarkWidget, bool IfWasChosen);
	void NotifyThatToFarToMark();
	void MarkWarningOnWorld();
	void MarkQuickChatOnWorld(const class FString& IconImg);
	void MarkPointOnWorld();
	void MarkOnWorldByMinimapPosition(int32 PosInTeam, struct FVector2D& MinimapPos);
	void MarkItemInPickupList(struct FVector& ItemLocation, struct FSolarItemData& ItemData);
	void MarkActorByAttachToThem(class AActor* InActor);
	void InteractTypeNotify(enum class EInteractableType Type, class ASolarPlayerController* Controller);
	void InitWorldMarkPool();
	void Init(class ASolarCharacter* Character);
	class UHUD_WorldMarkPanel* GetWorldMarkPanel();
	int32 GetQuickVoiceLocalizationID(int32& VoiceID);
	class FString GetQuickVoiceEventName(int32& VoiceID);
	int32 GetQueueGroupMapSize(enum class EWorldMarkType Type, int32 PosInTeam);
	class FString GetInvalidTypeDefaultIconPath();
	class FString GetInteractiveObjectsFullPath(enum class EInteractableType Type);
	class UHUD_WorldMark* GetFreeWorldMark();
	void CreateWorldMarkInternal(int32 PosInTeam, struct FWorldMarkData& InWorldMarkedData, class UObject* IconAsset);
	void CreateWorldMark(int32 PosInTeam, struct FWorldMarkData& InWorldMarkedData);
	void CreateWarningWidget(const struct FWorldMarkData& Data, bool NeedSendMessage);
	void CreateItemMarkWidget(struct FWorldMarkData& Data);
	void CreateInvalidWidget(const struct FWorldMarkData& Data, bool bShouldNotify);
	bool CheckMarkPointIsOutOfMap(struct FVector& Location);
	bool CheckIfWorldPosValid(const struct FWorldMarkData& Data, int32& PosInTeam);
	bool CheckIfThisItemBeenMarkedInternal(int32 InstanceID, int32 PosInTeam);
	bool CheckAutoMarkDamagingCharacter();
	void AutoMarkDamagingCharacter();
};

}


