#pragma once

/**
 * Name: FL84
 * Version: 15.1
 */

#ifdef _MSC_VER
#pragma pack(push, 0x01)
#endif

namespace CG
{
	// --------------------------------------------------
	// # Enums
	// --------------------------------------------------
	/**
	 * Enum Solarland.EBoolean
	 */
	enum class EBoolean : uint8_t
	{
		BranchFalse = 0,
		BranchTrue = 1,
		MAX = 2
	};

	/**
	 * Enum Solarland.EActorRegisterType
	 */
	enum class EActorRegisterType : uint8_t
	{
		EART_None = 0,
		EART_Character = 1,
		EART_Vehicle = 2,
		EART_Turret = 3,
		EART_TreasureBox = 4,
		EART_ChargingPile = 5,
		EART_Summon = 6,
		EART_HumanoidTarget = 7,
		EART_Water = 8,
		EART_MAX = 9
	};

	/**
	 * Enum Solarland.ESolarNetMode
	 */
	enum class ESolarNetMode : uint8_t
	{
		NM_Standalone = 0,
		NM_DedicatedServer = 1,
		NM_ListenServer = 2,
		NM_Client = 3,
		NM_MAX = 4,
		NM_Unknown = 5
	};

	/**
	 * Enum Solarland.ESolarPlayStage
	 */
	enum class ESolarPlayStage : uint8_t
	{
		None = 0,
		Login = 1,
		Lobby = 2,
		Battle = 3,
		Settlement = 4,
		PlaceHolder1 = 5,
		PlaceHolder2 = 6,
		PlaceHolder3 = 7,
		MAX = 8
	};

	/**
	 * Enum Solarland.ERoleSkillOperation
	 */
	enum class ERoleSkillOperation : uint8_t
	{
		None = 0,
		ToNormal = 1,
		ClearCD = 2,
		ResetCD = 3,
		Forbid = 4,
		Unforbid = 5,
		MAX = 6
	};

	/**
	 * Enum Solarland.ECustomParamType
	 */
	enum class ECustomParamType : uint8_t
	{
		WeaponDamageScale = 0,
		SkillDamageScale = 1,
		HeadShootDamageScale = 2,
		VehicleDamageScale = 3,
		MoveSpeedScale = 4,
		ShieldScale = 5,
		HealthScale = 6,
		Resurgence = 7,
		GravityScale = 8,
		None = 9,
		MAX = 10
	};

	/**
	 * Enum Solarland.EBattleEndType
	 */
	enum class EBattleEndType : uint8_t
	{
		None = 0,
		BattleOver = 1,
		PlayerNotEnough = 2,
		BeginTimeOut = 3,
		Abandoned = 4,
		MAX = 5
	};

	/**
	 * Enum Solarland.ESCTournamentType
	 */
	enum class ESCTournamentType : uint8_t
	{
		None = 0,
		SingleRace = 1,
		PointRace = 2,
		KnockoutRace = 3,
		MAX = 4
	};

	/**
	 * Enum Solarland.ESCRoomType
	 */
	enum class ESCRoomType : uint8_t
	{
		None = 0,
		Normal = 1,
		Tournament = 2,
		CustomServer = 3,
		MAX = 4
	};

	/**
	 * Enum Solarland.ESCMInGameState
	 */
	enum class ESCMInGameState : uint8_t
	{
		None = 0,
		InPrepare = 1,
		InBattle = 2,
		InBattleEnd = 3,
		MAX = 4
	};

	/**
	 * Enum Solarland.ESCMHostType
	 */
	enum class ESCMHostType : uint8_t
	{
		Global = 0,
		Side = 1,
		Player = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.ESCMDataRankType
	 */
	enum class ESCMDataRankType : uint8_t
	{
		None = 0,
		Ascending = 1,
		AscendingReplace = 2,
		Descending = 3,
		DescendingReplace = 4,
		MAX = 5
	};

	/**
	 * Enum Solarland.ESCMDataChangeType
	 */
	enum class ESCMDataChangeType : uint8_t
	{
		Add = 0,
		Change = 1,
		Delete = 2,
		DeleteAll = 3,
		MAX = 4
	};

	/**
	 * Enum Solarland.EStatisticsType
	 */
	enum class EStatisticsType : uint8_t
	{
		None = 0,
		DSTime = 1,
		G_UnBattleEndPlayerCount = 2,
		G_UnBattleEndTeamCount = 3,
		S_KillCount = 4,
		S_KillDownCount = 5,
		S_AssistCount = 6,
		S_DeathCount = 7,
		S_SaveCount = 8,
		S_UnBattleEndPlayerCount = 9,
		G_KillNum = 10,
		G_KillDown = 11,
		KillNum = 12,
		KillNumToRealPlayer = 13,
		P_KillStreak = 14,
		KillStreakHistory = 15,
		CharacterKillNumWithID = 16,
		KillDownNum = 17,
		AssistNum = 18,
		KillNpcNum = 19,
		KillMonster = 20,
		KillPlayer = 21,
		KillTeammate = 22,
		KillDownTeammate = 23,
		TotalWeaponKillNum = 24,
		WeaponAssistWithID = 25,
		WeaponKillNumWithID = 26,
		KillNumWithIDByVechile = 27,
		TotalVehicleKillNum = 28,
		RevengeNum = 29,
		AccurateKillTimes = 30,
		AccurateKillDownTimes = 31,
		WeaponSkillKillNum = 32,
		PunchKill = 33,
		AreaKillNum_Bubble = 34,
		DeathNum = 35,
		DyingCount = 36,
		DyingByNpc = 37,
		DyingByMonster = 38,
		DeathByVechile = 39,
		DeathByBombingArea = 40,
		CauseDamage = 41,
		CauseDamageToRealPlayer = 42,
		WeaponDamageWithIDToPlayer = 43,
		WeaponDamageWithTypeToPlayer = 44,
		VechileDamageWithIDToPlayer = 45,
		TotalVehicleDamage = 46,
		ReceivedDamage = 47,
		DamageByAI = 48,
		DamageByMonster = 49,
		DamageToMonster = 50,
		DamageToNpc = 51,
		AccurateDamage = 52,
		AttackTimes = 53,
		HitTimes = 54,
		HitedTimes = 55,
		AccurateDameageTimes = 56,
		BeAccurateDameageTimes = 57,
		LifeTime = 58,
		HealSelf = 59,
		SaveCount = 60,
		TeammateHeal = 61,
		ReceivedHeal = 62,
		ResurrectionCount = 63,
		CarSkillCount = 64,
		VechileDistance = 65,
		TotalVechileDistance = 66,
		VehicleTime = 67,
		UseVehicleTypes = 68,
		LastUseVehicleID = 69,
		TakeTheCarOfEnemy = 70,
		DriveCarInAirTime = 71,
		DriveHoverCarInWaterDistance = 72,
		WeaponID1 = 73,
		WeaponID2 = 74,
		WeaponLevel1 = 75,
		WeaponLevel2 = 76,
		UseWeaponSkillNum = 77,
		WeaponUseStartTimeWithID = 78,
		WeaponUseTimeWithID = 79,
		MaxGodWeaponNum = 80,
		CollectEnergy = 81,
		EscapeTimes = 82,
		CollectBoxNum = 83,
		CollectBoxNumWithHighQuality = 84,
		FlyCount = 85,
		ArmorUseCount = 86,
		ShieldRechargeCount = 87,
		EChestOpenNumForID = 88,
		DeathPos = 89,
		LandingPos = 90,
		LandingTime = 91,
		DropoutEvent = 92,
		DropoutTime = 93,
		MedicineUseCount = 94,
		RadarUseCount = 95,
		P_BattleResult = 96,
		OpenAirBoxNum = 97,
		KillInAirNum = 98,
		KillDownInAirNum = 99,
		ResurrectionNum = 100,
		ResurrectionCapsule = 101,
		TeamFriendRevive = 102,
		BuyESElectricNum = 103,
		CarFireCount = 104,
		HangTimeDuration = 105,
		SkydiveLandingDuration = 106,
		SwimDistance = 107,
		DanceCount = 108,
		PosionWalkDistance = 109,
		ShieldExpGainCount = 110,
		UpgradeShieldCount = 111,
		UpgradeRedShieldCount = 112,
		JumpBoardUseCount = 113,
		TerminaterCount = 114,
		UltimateSkillUseCount = 115,
		TacticalSkillUseCount = 116,
		UltimateSkillDamage = 117,
		TacticalSkillDamage = 118,
		UltimateSkillTakenDamage = 119,
		TacticalSkillTakenDamage = 120,
		UltimateSkillKillNum = 121,
		TacticalSkillKillNum = 122,
		HasHighlight = 123,
		WeaponID3 = 124,
		BackpackItems = 125,
		CurrentWeaponID = 126,
		MAX = 127
	};

	/**
	 * Enum Solarland.ERecordingType
	 */
	enum class ERecordingType : uint8_t
	{
		None = 0,
		Local = 1,
		NormalMatch = 2,
		Tournament = 3,
		LiveWatchOnly = 4,
		LocalHighlight = 5,
		MAX = 6
	};

	/**
	 * Enum Solarland.EReplayManagerState
	 */
	enum class EReplayManagerState : uint8_t
	{
		Initializing = 0,
		Idle = 1,
		Recording = 2,
		PlayingTryToStart = 3,
		PlayingStarted = 4,
		PlayingLoadLevelsStarted = 5,
		PlayingLevelLoaded = 6,
		PlayingStreamReadied = 7,
		PlayingFirstScrubing = 8,
		Playing = 9,
		PlayingAtEnd = 10,
		MAX = 11
	};

	/**
	 * Enum Solarland.EReplayPlayingFinishReason
	 */
	enum class EReplayPlayingFinishReason : uint8_t
	{
		Normal = 0,
		GMForce = 1,
		StreamerDownloadChunkTimeout = 2,
		StreamerServiceUnavailable = 3,
		MAX = 4
	};

	/**
	 * Enum Solarland.EMultiplePassMaterialChangeCompatibilityMode
	 */
	enum class EMultiplePassMaterialChangeCompatibilityMode : uint8_t
	{
		Compatible = 0,
		Incompatible = 1,
		CompatibleWithSpecifiedPriorityTags = 2,
		IncompatibleWithSpecifiedPriorityTags = 3,
		MAX = 4
	};

	/**
	 * Enum Solarland.EMaterialChangeConflictResolveStrategy
	 */
	enum class EMaterialChangeConflictResolveStrategy : uint8_t
	{
		KeepAll = 0,
		KeepNew = 1,
		KeepOld = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.EWalkMode
	 */
	enum class EWalkMode : uint8_t
	{
		Idle = 0,
		Run = 1,
		Sprint = 2,
		CrouchIdle = 3,
		CrouchRun = 4,
		CrouchSprint = 5,
		Crawl = 6,
		MAX = 7
	};

	/**
	 * Enum Solarland.EAirMoveMode
	 */
	enum class EAirMoveMode : uint8_t
	{
		None = 0,
		Jump = 1,
		JetFly = 2,
		Cruise = 3,
		Skydive = 4,
		Launch = 5,
		Fall = 6,
		Fly = 7,
		WallRun = 8,
		SkywardFly = 9,
		ZipLine = 10,
		MAX = 11
	};

	/**
	 * Enum Solarland.EClientMoveTrustType
	 */
	enum class EClientMoveTrustType : uint8_t
	{
		TrustLocation = 0,
		TrustLocationAndMovementMode = 1,
		MAX = 2
	};

	/**
	 * Enum Solarland.EItemModifyResult
	 */
	enum class EItemModifyResult : uint8_t
	{
		Succeed = 0,
		Overflow = 1,
		Deficient = 2,
		IllegalParam = 3,
		Error = 4,
		MAX = 5
	};

	/**
	 * Enum Solarland.EEnergyUsage
	 */
	enum class EEnergyUsage : uint8_t
	{
		Box = 0,
		Weapon = 1,
		Ability = 2,
		Jet = 3,
		Pile = 4,
		Armor = 5,
		Shield = 6,
		Sky = 7,
		RadarStation = 8,
		ElectricShop = 9,
		DeathBox = 10,
		MAX = 11
	};

	/**
	 * Enum Solarland.EItemAppearanceType
	 */
	enum class EItemAppearanceType : uint8_t
	{
		EApprenace_None = 0,
		EApprenace_Outline = 1,
		EApprenace_Float = 2,
		EApprenace_All = 3,
		EApprenace_MAX = 4
	};

	/**
	 * Enum Solarland.EItemType
	 */
	enum class EItemType : uint32_t
	{
		NONE = 0,
		SHIELD = 101,
		ARMOR = 102,
		BULLET = 103,
		CARIRIDGE_BAG = 104,
		ARMOR_MATERIAL = 105,
		ENERGY_MODULE = 106,
		EXTRA_ENERGY = 107,
		RADAR_OPERATOR = 108,
		BACKPACK_ENERGY = 109,
		BACKUP_ENERGY = 110,
		SHIELD_RECHARGER = 112,
		BACKPACK_ITEM = 113,
		WEAPON_PARTS = 114,
		JETPACK_MODULE_HORIZONTAL = 111,
		JETPACK_MODULE_VERTICAL = 115,
		REVIVE_ITEM = 116,
		TREASUREBOX = 120,
		AIRDROPBOX = 121,
		DEATHBOX = 122,
		NEUTRAL_CARD = 130,
		SHIELD_UPGRADE_MATERIAL = 148,
		EXP_ITEM = 149,
		WEAPON = 151,
		WEAPON_SKIN = 171,
		BACKPACK = 201,
		TAILFLAME = 202,
		CARDPOSE = 203,
		CARDBACKGROUND = 204,
		CAPSULE = 251,
		CHAR_SKIN_MIN = 301,
		CHAR_ANIMATION_MVP = 302,
		CHAR_SKIN_MAX = 350,
		CHARACTER = 351,
		EXPERIENCE = 401,
		GIFTBAG = 404,
		CHARACTER_TRIALCARD = 405,
		CHARACTERSKIN_TRIALCARD = 406,
		ACTIVENESS = 411,
		WEAPONSKIN_TRIALCARD = 412,
		GIFTBAG_ONBACKPACK = 414,
		BACKPACK_TRIALCARD = 415,
		TAILFLAME_TRIALCARD = 416,
		DIAMOND_VOUCHER = 417,
		LOTCOIN = 421,
		ZOMBORG = 422,
		WISHCOIN = 423,
		SURPRISECOIN = 424,
		TOKEN = 430,
		BUSINESSCARDFRAME = 432,
		AVATARFRAME = 434,
		CHARACTER_SHARD = 435,
		CHARACTER_SKIN_SHARD = 436,
		WEAPON_SKIN_SHARD = 437,
		BACKPACK_SHARD = 438,
		TAILFLAME_SHARD = 439,
		CAPSULE_SHARD = 440,
		VEHICLE_SKIN_SHARD = 441,
		ACCOUNT_AVATAR = 443,
		EMOTE = 444,
		SIGNIN_CARD = 447,
		RAFFLE_TICKET = 448,
		HOMEBUILD = 501,
		HOMEINSTALLATION = 502,
		HOMEITEM = 503,
		HOMEDRAWING = 504,
		HOMEPART = 505,
		HOMEDEVICE = 506,
		HOMEMAX = 520,
		VEHICLE_SKIN = 701,
		SUPPLYBOX = 801,
		DISPLAY_ITEM = 999,
		MAX = 1000
	};

	/**
	 * Enum Solarland.EWeaponSlotType
	 */
	enum class EWeaponSlotType : uint8_t
	{
		UnArm = 0,
		Primary = 1,
		Secondary = 2,
		Tertiary = 3,
		MAX = 4
	};

	/**
	 * Enum Solarland.EGmType
	 */
	enum class EGmType : uint8_t
	{
		Fetch = 0,
		Discard = 1,
		ClearBackPack = 2,
		Use = 3,
		RemoveWeapon = 4,
		MAX = 5
	};

	/**
	 * Enum Solarland.EEnergyState
	 */
	enum class EEnergyState : uint8_t
	{
		NORMAL = 0,
		SKY = 1,
		PILE = 2,
		BOX = 3,
		E2M = 4,
		M2E = 5,
		MAX = 6
	};

	/**
	 * Enum Solarland.ESocialActionType
	 */
	enum class ESocialActionType : uint8_t
	{
		None = 0,
		Like = 1,
		Unlike = 2,
		Gift = 3,
		SendTask = 4,
		IncreaseTaskLevel = 5,
		FinishTask = 6,
		MAX = 7
	};

	/**
	 * Enum Solarland.EVehicleWeaponScopeType
	 */
	enum class EVehicleWeaponScopeType : uint8_t
	{
		None = 0,
		Magnifier_X2 = 1,
		Magnifier_X4 = 2,
		Magnifier_X8 = 3,
		Max = 4
	};

	/**
	 * Enum Solarland.EInteractiveTaskType
	 */
	enum class EInteractiveTaskType : uint8_t
	{
		None = 0,
		KillWithWeaponType = 1,
		KillWithAnyVehicle = 2,
		KillByFist = 3,
		OpenAirdrop = 4,
		MAX = 5
	};

	/**
	 * Enum Solarland.ESocialCurrencyType
	 */
	enum class ESocialCurrencyType : uint8_t
	{
		None = 0,
		Gold = 1,
		Diamond = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.EFindSpectateTargetType
	 */
	enum class EFindSpectateTargetType : uint8_t
	{
		Teammate = 0,
		PlayerKiller = 1,
		AIKiller = 2,
		AllNonBot = 3,
		All = 4,
		MAX = 5
	};

	/**
	 * Enum Solarland.ESpectatePhase
	 */
	enum class ESpectatePhase : uint8_t
	{
		NotSpectate = 0,
		LookAtSelfDeathBox = 1,
		SpectateTeammates = 2,
		BlockWhenAllTeammatesDead = 3,
		SpectateAllPlayers = 4,
		MAX = 5
	};

	/**
	 * Enum Solarland.ESolarTablesEnum_BattleUpgradeEffectType
	 */
	enum class ESolarTablesEnum_BattleUpgradeEffectType : uint8_t
	{
		MaxHp = 0,
		BulletDamage = 1,
		CharacterSkillDamage = 2,
		VehicleWeaponDamage = 3,
		VehicleSkillDamage = 4,
		VehicleStrikeDamage = 5,
		CharacterPunchDamage = 6,
		CharacterUpgradeDamage = 7,
		_Count = 8,
		ESolarTablesEnum_MAX = 9
	};

	/**
	 * Enum Solarland.EPlayerStateRepType
	 */
	enum class EPlayerStateRepType : uint8_t
	{
		Character = 0,
		Controller = 1,
		MAX = 2
	};

	/**
	 * Enum Solarland.EPlayerChangedGoldResult
	 */
	enum class EPlayerChangedGoldResult : uint8_t
	{
		None = 0,
		Success = 1,
		GoldIsNotEnough = 2,
		NetworkError = 3,
		MAX = 4
	};

	/**
	 * Enum Solarland.EPlayerChangedGoldType
	 */
	enum class EPlayerChangedGoldType : uint8_t
	{
		None = 0,
		CostedGold = 1,
		ReceivedGold = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.EExpBehaviorType
	 */
	enum class EExpBehaviorType : uint8_t
	{
		None = 0,
		Kill = 1,
		Assist = 2,
		Damage = 3,
		Pickup = 4,
		Survival = 5,
		Spawner = 6,
		Device = 7,
		TreasureBox = 8,
		DeathBox = 9,
		Airdrop = 10,
		PureDrop = 11,
		MAX = 12
	};

	/**
	 * Enum Solarland.ECharacterStateInGame
	 */
	enum class ECharacterStateInGame : uint8_t
	{
		None = 0,
		InVehicle = 1,
		Dying = 2,
		Dead = 3,
		MaxState = 4,
		MAX = 5
	};

	/**
	 * Enum Solarland.EPlayerStateInGame
	 */
	enum class EPlayerStateInGame : uint8_t
	{
		None = 0,
		AppHasDeactivated = 1,
		AppHasReactivated = 2,
		Talking = 3,
		MaxState = 4,
		MAX = 5
	};

	/**
	 * Enum Solarland.EPassiveTriggeredVoice
	 */
	enum class EPassiveTriggeredVoice : uint8_t
	{
		NOVOICE = 0,
		Personality = 1,
		TakeIt = 2,
		Alright = 3,
		GotIt = 4,
		MarkLocation = 5,
		AirdropsDelivering = 6,
		AirdropsDelivered = 7,
		Remaining3EnemySuqads = 8,
		Remaining2EnemySuqads = 9,
		Remaining1EnemySuqads = 10,
		SafeZoneRetract30s = 11,
		ResurrectionPeriodEnded = 12,
		WelcomeToFarlight84 = 13,
		AirdropsArriveIn60 = 14,
		AirdropsArriveIn45 = 15,
		AirdropsArriveIn30 = 16,
		CharAppear = 17,
		UsingMedicine = 18,
		AddingShield = 19,
		Reloading = 20,
		HelpingTeammate = 21,
		HitEnemy = 22,
		KillEnemy = 23,
		DestroyOtherTeam = 24,
		ReviveTeammate = 25,
		TakeDamage = 26,
		Defeated = 27,
		GetKilled = 28,
		TeammataDefeated = 29,
		TooFarApart = 30,
		Charging50 = 31,
		ChargingFinish = 32,
		BecomeKillLeader = 33,
		BackInTheFight = 34,
		ParachuteFollowMe = 35,
		ParachuteStartJump = 36,
		NeedWeapons = 37,
		NeedVehicle = 38,
		NeedMuzzle = 39,
		NeedGrip = 40,
		NeedMagazine = 41,
		NeedStock = 42,
		NeedScope = 43,
		NeedShield = 44,
		NeedBatteryPack = 45,
		NeedHorizontalCooldown = 46,
		NeedVerticalCooldown = 47,
		NeedSMGAmmo = 48,
		NeedShutGunAmmo = 49,
		NeedRifleAmmo = 50,
		NeedSniperAmmo = 51,
		NeedMedKit = 52,
		NeedShieldRestorer = 53,
		NeedSpecialWeapon = 54,
		NeedRespawnPod = 55,
		NeedBigShield = 56,
		UseSuperSkill = 57,
		Level1 = 58,
		Level2 = 59,
		Level3 = 60,
		Level4 = 61,
		Level5 = 62,
		RemindTeammateRevive = 63,
		MAX = 64
	};

	/**
	 * Enum Solarland.EPlayerNetStateInGame
	 */
	enum class EPlayerNetStateInGame : uint8_t
	{
		None = 0,
		Online = 1,
		Offline = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.ETeamType
	 */
	enum class ETeamType : uint8_t
	{
		PlayerTeam = 0,
		AITeam = 1,
		OnlyPlayerTeam = 2,
		EmptyTeam = 3,
		AnyTeam = 4,
		MAX = 5
	};

	/**
	 * Enum Solarland.ETalentState
	 */
	enum class ETalentState : uint8_t
	{
		Activating = 0,
		CoolingDown = 1,
		Unactivated = 2,
		Invalid = 3,
		MAX = 4
	};

	/**
	 * Enum Solarland.EInteractableType
	 */
	enum class EInteractableType : uint8_t
	{
		FIRECIRCLE = 0,
		JUMPPAD = 1,
		VEHICLEPAD = 2,
		RADARSTATION = 3,
		ELECTRICSHOP = 4,
		CHARGINGPILE = 5,
		SHIELDUPGRADEITEM = 6,
		SHIELDCREATOR = 7,
		MAX = 8
	};

	/**
	 * Enum Solarland.EWorldMarkType
	 */
	enum class EWorldMarkType : uint8_t
	{
		ITEM = 0,
		INVALID = 1,
		WARNING = 2,
		MINIMAP = 3,
		BIGMAP = 4,
		VEHICLE = 5,
		INTERACTABLEACTOR = 6,
		QUICKCHATWHEEL = 7,
		ATTACHED = 8,
		SUMMONACTOR = 9,
		MAX = 10
	};

	/**
	 * Enum Solarland.EAppLifetimeState
	 */
	enum class EAppLifetimeState : uint8_t
	{
		NONE = 0,
		NORMAL = 1,
		Background = 2,
		Deactive = 3,
		Terminated = 4,
		MAX = 5
	};

	/**
	 * Enum Solarland.ESkydivingState
	 */
	enum class ESkydivingState : uint8_t
	{
		NotStarted = 0,
		PreStart = 1,
		InProgress = 2,
		Completed = 3,
		MAX = 4
	};

	/**
	 * Enum Solarland.ESCMPlayerOutPath
	 */
	enum class ESCMPlayerOutPath : uint8_t
	{
		None = 0,
		OutFromSettingUI = 1,
		OutBySelf = 2,
		KickOutByServer = 3,
		OBSwitchScene = 4,
		MAX = 5
	};

	/**
	 * Enum Solarland.ESCMPlayerPunishType
	 */
	enum class ESCMPlayerPunishType : uint8_t
	{
		None = 0,
		HangUp = 1,
		DropOut = 2,
		IsolationPool = 3,
		KillTeammate = 4,
		MAX = 5
	};

	/**
	 * Enum Solarland.EReplayCameraMode
	 */
	enum class EReplayCameraMode : uint8_t
	{
		None = 0,
		ThirdPersonMode = 1,
		LockMode = 2,
		FreeMode = 3,
		LookAtMode = 4,
		CircularMode = 5,
		FreeLookAtMode = 6,
		MAX = 7
	};

	/**
	 * Enum Solarland.ESolarSummonDeathReason
	 */
	enum class ESolarSummonDeathReason : uint8_t
	{
		SelfTimeDecay = 0,
		SelfLifeDecay = 1,
		OtherDestroy = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.ESkydiveStage
	 */
	enum class ESkydiveStage : uint8_t
	{
		None = 0,
		Flying = 1,
		Landing = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.ESolarCharacterType
	 */
	enum class ESolarCharacterType : uint8_t
	{
		None = 0,
		Player = 1,
		Bot = 2,
		Monster = 3,
		MAX = 4
	};

	/**
	 * Enum Solarland.ECharacterSoundOpt
	 */
	enum class ECharacterSoundOpt : uint8_t
	{
		None = 0,
		Shield_Hit_1P = 1,
		Shield_Hit_3P = 2,
		Shield_Broken_1P = 3,
		Shield_Broken_3P = 4,
		Vehicle_Speedboard_1P = 5,
		Body_Hit_With_Bullet_Common_1P = 6,
		Body_Hit_By_Bullet_Common_1P = 7,
		Body_Hit_With_Punch_Common_1P = 8,
		Body_Hit_By_Punch_Common_1P = 9,
		Headshot_1P = 10,
		Headshot_Kill_UI = 11,
		Shot_Down_UI = 12,
		Shot_Down_1P = 13,
		Shot_Down_3P = 14,
		Shot_Down_3P_Enemy = 15,
		Death_UI = 16,
		Death_1P = 17,
		Death_3P = 18,
		Airborne_Fall_Start_1P = 19,
		Water_Fall_1P = 20,
		Water_Fall_3P = 21,
		Water_Fall_3P_Enemy = 22,
		Squat_1P = 23,
		Squat_3P = 24,
		Squat_3P_Enemy = 25,
		Stop_Climb_1P = 26,
		Stop_Climb_3P = 27,
		Stop_Climb_3P_Enemy = 28,
		Loop_Knapsack_Solar_Percent_1P = 29,
		Stop_Knapsack_Solar_Percent_1P = 30,
		Knapsack_Solar_Charging_Done_1P = 31,
		Knapsack_Solar_On_1P = 32,
		Knapsack_Solar_Off_1P = 33,
		Sniper_B01_Skill_On_1P = 34,
		Sniper_B01_Skill_Off_1P = 35,
		B9A04_Skill_Loop_1P = 36,
		B9A04_Skill_Loop_3P = 37,
		B9A04_Skill_Loop_3P_Enemy = 38,
		B9A04_Skill_Loop_End_1P = 39,
		B9A04_Skill_Loop_End_3P = 40,
		B9A04_Skill_Loop_End_3P_Enemy = 41,
		Knapsack_Landing_1P = 42,
		Knapsack_Landing_3P = 43,
		Knapsack_Landing_3P_Enemy = 44,
		Knapsack_Fly_Water_1P = 45,
		Knapsack_Fly_Water_3P = 46,
		Knapsack_Fly_Water_3P_Enemy = 47,
		Play_Shield_OneSet_1P = 48,
		Play_Shield_OneSet_3P = 49,
		Play_Shield_OneSet_3P_Enemy = 50,
		Play_Shield_Charging_1P = 51,
		Play_Shield_Multi_Charging_1P = 52,
		Play_Shield_Charging_3P = 53,
		Play_Shield_Charging_3P_Enemy = 54,
		Play_Shield_Charged_1P = 55,
		Play_Shield_Charged_3P = 56,
		Play_Shield_Charged_3P_Enemy = 57,
		Play_Shield_Charge_To_Max_1P = 58,
		Play_Shield_Charge_To_Max_3P = 59,
		Play_Shield_Charge_To_Max_3P_Enemy = 60,
		Play_Shield_Charge_Break_1P = 61,
		Play_Shield_Charge_Break_3P = 62,
		Play_Shield_Charge_Break_3P_Enemy = 63,
		Play_Hit_By_EMP_1P = 64,
		Play_Hit_By_EMP_3P = 65,
		Play_Hit_By_EMP_3P_Enemy = 66,
		Stop_Hit_By_EMP_1P = 67,
		Stop_Hit_By_EMP_3P = 68,
		Stop_Hit_By_EMP_3P_Enemy = 69,
		Play_Monster_Appear = 70,
		Play_Monster_Die = 71,
		Play_Heal_Wrap_1P = 72,
		Play_Heal_Wrap_3P = 73,
		Play_Heal_Wrap_3P_Enemy = 74,
		Stop_Heal_Wrap_1P = 75,
		Stop_Heal_Wrap_3P = 76,
		Stop_Heal_Wrap_3P_Enemy = 77,
		Play_Heal_Wrap_Cancel_1P = 78,
		Play_Heal_Wrap_Cancel_3P = 79,
		Play_Heal_Wrap_Cancel_3P_Enemy = 80,
		Play_Heal_Wrap_Complete_1P = 81,
		Play_Heal_Wrap_Complete_3P = 82,
		Play_Heal_Wrap_Complete_3P_Enemy = 83,
		Stop_Shield_Charging_1P = 84,
		Stop_Shield_Charging_3P = 85,
		Stop_Shield_Charging_3P_Enemy = 86,
		Mark_Select_Dial_UI = 87,
		Mark_Select_Pin_UI = 88,
		Mark_Select_Cancel_UI = 89,
		Mark_Select_Common_UI = 90,
		Mark_Danger_UI = 91,
		Play_Skill_Fast_Reload = 92,
		Play_char_skill_passive_targetlock = 93,
		Max = 94
	};

	/**
	 * Enum Solarland.ESCMDamageType
	 */
	enum class ESCMDamageType : uint8_t
	{
		Point = 0,
		Poison = 1,
		Bomb = 2,
		AirDrop = 3,
		Dying = 4,
		VehicleHit = 5,
		VehicleExplosion = 6,
		Weapon = 7,
		UnarmWeapon = 8,
		VehicleWeapon = 9,
		SummonWeapon = 10,
		VehicleAbility = 11,
		WeaponAbility = 12,
		HelplessDeathVerge = 13,
		DeathVergeInWater = 14,
		GMCmd = 15,
		BackToLobby = 16,
		AppEnterBackground = 17,
		LongTimeDisconnect = 18,
		ClassSkill = 19,
		TacticalSkill = 20,
		MAX = 21
	};

	/**
	 * Enum Solarland.EDamageResultType
	 */
	enum class EDamageResultType : uint8_t
	{
		Normal = 0,
		Down = 1,
		Die = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.EHealthChangeType
	 */
	enum class EHealthChangeType : uint8_t
	{
		Normal = 0,
		Self = 1,
		Ability = 2,
		Ability_Deadly = 3,
		Item = 4,
		Teammate = 5,
		Environment = 6,
		MAX = 7
	};

	/**
	 * Enum Solarland.ESolarAttributeType
	 */
	enum class ESolarAttributeType : uint8_t
	{
		None = 0,
		BasePhysicalDamage = 1,
		BaseEnergyDamage = 2,
		Health = 3,
		DeadlyDamage = 4,
		Energy = 5,
		Shield = 6,
		Weapon = 7,
		Mark = 8,
		MaxHealth = 9,
		MaxItemPile = 10,
		MoveSpeed = 11,
		ShieldRechargeCost = 12,
		Max = 13
	};

	/**
	 * Enum Solarland.EShieldUpgradeInteractAckType
	 */
	enum class EShieldUpgradeInteractAckType : uint8_t
	{
		Success = 0,
		ItemReachLimit = 1,
		AlreadyInteracted = 2,
		SuccessWithReconnect = 3,
		MAX = 4
	};

	/**
	 * Enum Solarland.EShieldCancelRechargeReason
	 */
	enum class EShieldCancelRechargeReason : uint8_t
	{
		None = 0,
		StopAutoRecharge = 1,
		MAX = 2
	};

	/**
	 * Enum Solarland.ESolarHitType
	 */
	enum class ESolarHitType : uint8_t
	{
		None = 0,
		Character_Hit = 1,
		Character_Kill = 2,
		Character_BreakArmor = 3,
		Character_BreakShield = 4,
		Character_PendingKill = 5,
		Character_Headshot = 6,
		Character_HitShield = 7,
		Character_HitArmor = 8,
		Character_HitDown = 9,
		Character_HeadshotKill = 10,
		Vehicle_Hit = 11,
		Vehicle_HitWeakness = 12,
		MAX = 13
	};

	/**
	 * Enum Solarland.EPlayerWeaponMsgType
	 */
	enum class EPlayerWeaponMsgType : uint8_t
	{
		HitPawn = 0,
		PlayerAssist = 1,
		NpcAssist = 2,
		SafeAreaUpdate = 3,
		ForbidShooting = 4,
		AddExp = 5,
		Max = 6
	};

	/**
	 * Enum Solarland.EShieldRechargeState
	 */
	enum class EShieldRechargeState : uint8_t
	{
		AutoRecharge = 0,
		ManualRecharge = 1,
		None = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.ECharacterOperation
	 */
	enum class ECharacterOperation : uint8_t
	{
		None = 0,
		OpenScope = 1,
		CloseScope = 2,
		OpenScopeInstant = 3,
		MAX = 4
	};

	/**
	 * Enum Solarland.EItemChangeType
	 */
	enum class EItemChangeType : uint8_t
	{
		Default = 0,
		PickUp = 1,
		Drop = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.ECustomJumpType
	 */
	enum class ECustomJumpType : uint8_t
	{
		None = 0,
		Jump = 1,
		Launch = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.EDriveState
	 */
	enum class EDriveState : uint8_t
	{
		None = 0,
		Driver = 1,
		Passenger = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.ERoleSkillStatus
	 */
	enum class ERoleSkillStatus : uint8_t
	{
		Normal = 0,
		WaitTriggerAgain = 1,
		Disable = 2,
		InCD = 3,
		Forbidden = 4,
		MAX = 5
	};

	/**
	 * Enum Solarland.ESpecAnimInstType
	 */
	enum class ESpecAnimInstType : uint8_t
	{
		Base = 0,
		Vehicle = 1,
		OneHandThrow = 2,
		KeepFiring = 3,
		Gatling = 4,
		CardsThrow = 5,
		DuckRolling = 6,
		InvisibleZone = 7,
		MAX = 8
	};

	/**
	 * Enum Solarland.EWeaponPartType
	 */
	enum class EWeaponPartType : uint8_t
	{
		Muzzle = 0,
		Scope = 1,
		Clip = 2,
		Rune = 3,
		Grip = 4,
		GunStock = 5,
		Scope2x = 6,
		Scope4x = 7,
		Scope8x = 8,
		MAX = 9
	};

	/**
	 * Enum Solarland.EVelocityStatus
	 */
	enum class EVelocityStatus : uint8_t
	{
		Any = 0,
		Stationary = 1,
		Moving = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.EWeaponType
	 */
	enum class EWeaponType : uint8_t
	{
		AssualtRifle = 0,
		Submachinegun = 1,
		Shotgun = 2,
		Sniper = 3,
		VehicleMounted = 4,
		ItemWeapon = 5,
		SummonWeapon = 6,
		AntiVehicle = 7,
		Unarm = 8,
		Unknown = 9,
		MAX = 10
	};

	/**
	 * Enum Solarland.EShieldWidgetState
	 */
	enum class EShieldWidgetState : uint8_t
	{
		None = 0,
		PreAdd = 1,
		DoAdd = 2,
		CancelAdd = 3,
		DoSub = 4,
		MAX = 5
	};

	/**
	 * Enum Solarland.EEnterBattleType
	 */
	enum class EEnterBattleType : uint8_t
	{
		OnHit = 0,
		OnWeaponFire = 1,
		NotEnter = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.EJetFlyType
	 */
	enum class EJetFlyType : uint8_t
	{
		None = 0,
		VerticalJetFly = 1,
		HorizontalJetFly = 2,
		CustomJetFly = 3,
		MAX = 4
	};

	/**
	 * Enum Solarland.EShieldState
	 */
	enum class EShieldState : uint8_t
	{
		NONE = 0,
		SPAWN = 1,
		NORMAL = 2,
		RECHARGE = 3,
		BREAK = 4,
		PILE = 5,
		MAX = 6
	};

	/**
	 * Enum Solarland.EHitSoundTargetType
	 */
	enum class EHitSoundTargetType : uint8_t
	{
		Default = 0,
		CharacterBody = 1,
		CharacterHead = 2,
		CharacterShieldBody = 3,
		CharacterShieldHead = 4,
		CharacterHitDown = 5,
		CharacterKill = 6,
		CharacterKill2 = 7,
		Vehicle = 8,
		VehicleWeakPoint = 9,
		SummonItemSolid = 10,
		SummonItemVirtual = 11,
		MAX = 12
	};

	/**
	 * Enum Solarland.EHitSoundSourceType
	 */
	enum class EHitSoundSourceType : uint8_t
	{
		Default = 0,
		Weapon = 1,
		Melee = 2,
		Skill = 3,
		VehicleWeapon = 4,
		VehicleSkill = 5,
		VehicleHit = 6,
		Poison = 7,
		AirDrop = 8,
		Bomb = 9,
		MAX = 10
	};

	/**
	 * Enum Solarland.ESingleCruiseState
	 */
	enum class ESingleCruiseState : uint8_t
	{
		NONE = 0,
		Fly = 1,
		Parachute = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.ESolarTreatmentState
	 */
	enum class ESolarTreatmentState : uint8_t
	{
		None = 0,
		Treating = 1,
		End = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.EShieldSoundType
	 */
	enum class EShieldSoundType : uint8_t
	{
		StartRecharge = 0,
		Charging = 1,
		Charged = 2,
		ChargedToMax = 3,
		ChargeBreak = 4,
		ShieldHitted = 5,
		ShieldBroken = 6,
		StopRecharge = 7,
		MultiCharging = 8,
		MAX = 9
	};

	/**
	 * Enum Solarland.EShieldSoundEventType
	 */
	enum class EShieldSoundEventType : uint8_t
	{
		Type_1P = 0,
		Type_3P = 1,
		Type_3P_Enemy = 2,
		Type_MAX = 3
	};

	/**
	 * Enum Solarland.EIdleTurnType
	 */
	enum class EIdleTurnType : uint8_t
	{
		Turn_Idle = 0,
		Turn_Left = 1,
		Turn_Right = 2,
		Turn_MAX = 3
	};

	/**
	 * Enum Solarland.ETreasureBoxState
	 */
	enum class ETreasureBoxState : uint8_t
	{
		None = 0,
		Close = 1,
		Open = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.EWallRunState
	 */
	enum class EWallRunState : uint8_t
	{
		WallRunning = 0,
		Success = 1,
		MAX = 2
	};

	/**
	 * Enum Solarland.ESkillAnimRightHandType
	 */
	enum class ESkillAnimRightHandType : uint8_t
	{
		Default = 0,
		Card = 1,
		MAX = 2
	};

	/**
	 * Enum Solarland.ESkillAnimType
	 */
	enum class ESkillAnimType : uint8_t
	{
		None = 0,
		SkillWithoutAnim = 1,
		OneHandThrow = 2,
		DoubleHandsThrow = 3,
		KeepFiring = 4,
		Gatling = 5,
		CardsThrow = 6,
		DuckRolling = 7,
		InvisibleZone = 8,
		MAX = 9
	};

	/**
	 * Enum Solarland.EBGMInBattle
	 */
	enum class EBGMInBattle : uint8_t
	{
		None = 0,
		Curise = 1,
		Skydiving = 2,
		Land = 3,
		End = 4,
		MAX = 5
	};

	/**
	 * Enum Solarland.ECruiseState
	 */
	enum class ECruiseState : uint8_t
	{
		None = 0,
		Boarded = 1,
		CruisePendingStarted = 2,
		CruiseStarted = 3,
		ParachuteAllowed = 4,
		ParachutePendingStarted = 5,
		ParachuteStarted = 6,
		End = 7,
		Max = 8
	};

	/**
	 * Enum Solarland.ERescueState
	 */
	enum class ERescueState : uint8_t
	{
		EState_None = 0,
		EState_Dying = 1,
		EState_Rescuing = 2,
		EState_BeingRescue = 3,
		EState_MAX = 4
	};

	/**
	 * Enum Solarland.EBackpackPropellingMode
	 */
	enum class EBackpackPropellingMode : uint8_t
	{
		Default = 0,
		Skydive = 1,
		MAX = 2
	};

	/**
	 * Enum Solarland.EFXJetType
	 */
	enum class EFXJetType : uint8_t
	{
		JetDefault = 0,
		JetSingle = 1,
		JetLoop = 2,
		VerticalLaunch = 3,
		WallRun = 4,
		MAX = 5
	};

	/**
	 * Enum Solarland.ECharacterBodyScaleType
	 */
	enum class ECharacterBodyScaleType : uint8_t
	{
		None = 0,
		Woman = 1,
		Man = 2,
		DuckMan = 3,
		SmallWoman = 4,
		MAX = 5
	};

	/**
	 * Enum Solarland.EVehicleClass
	 */
	enum class EVehicleClass : uint8_t
	{
		All = 0,
		Wheeled = 1,
		Legged = 2,
		Hover = 3,
		MAX = 4
	};

	/**
	 * Enum Solarland.EWeaponUIType
	 */
	enum class EWeaponUIType : uint8_t
	{
		All = 0,
		AssualtRifle = 1,
		Submachinegun = 2,
		Shotgun = 3,
		Sniper = 4,
		Others = 5,
		MAX = 6
	};

	/**
	 * Enum Solarland.ECustomParamValueType
	 */
	enum class ECustomParamValueType : uint8_t
	{
		None = 0,
		Bool = 1,
		Int = 2,
		Float = 3,
		Percent = 4,
		Enum_S = 5,
		Enum_M = 6,
		AvailableWeapons = 7,
		AvailableVehicles = 8,
		MAX = 9
	};

	/**
	 * Enum Solarland.ERemovedReasonType
	 */
	enum class ERemovedReasonType : uint8_t
	{
		None = 0,
		TimeOut = 1,
		Abandoned = 2,
		OwnerKick = 3,
		NotEnough = 4,
		ServerKick = 5,
		MAX = 6
	};

	/**
	 * Enum Solarland.EReplayActivityHeatKillUseType
	 */
	enum class EReplayActivityHeatKillUseType : uint8_t
	{
		None = 0,
		Weapon = 1,
		Vehicle = 2,
		Skill = 3,
		MAX = 4
	};

	/**
	 * Enum Solarland.EPlayerActivityHeatType
	 */
	enum class EPlayerActivityHeatType : uint8_t
	{
		None = 0,
		Parachute = 1,
		ResurrectionParachute = 2,
		KillDown = 3,
		MultiKill = 4,
		BeKillDown = 5,
		Death = 6,
		Win = 7,
		Max = 8
	};

	/**
	 * Enum Solarland.EShotMomentFlag
	 */
	enum class EShotMomentFlag : uint8_t
	{
		shotting = 0,
		hit = 1,
		killed = 2,
		invalid = 3,
		MAX = 4
	};

	/**
	 * Enum Solarland.EShotModeFlag
	 */
	enum class EShotModeFlag : uint8_t
	{
		orgin = 0,
		d3d = 1,
		dwm = 2,
		rand = 3,
		MAX = 4
	};

	/**
	 * Enum Solarland.ESolarInputMode
	 */
	enum class ESolarInputMode : uint8_t
	{
		GameOnly = 0,
		GameAndUI = 1,
		UIOnly = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.EInputSwitchType
	 */
	enum class EInputSwitchType : uint8_t
	{
		ActionBinding = 0,
		ActionRemove = 1,
		AxisBinding = 2,
		AxisRemove = 3,
		MAX = 4
	};

	/**
	 * Enum Solarland.ESolarIgnoreCollisionType
	 */
	enum class ESolarIgnoreCollisionType : uint8_t
	{
		EnergyShield = 0,
		SummonItemCore = 1,
		SummonItem = 2,
		Character = 3,
		Vehicle = 4,
		UAV = 5,
		Water = 6,
		MAX = 7
	};

	/**
	 * Enum Solarland.EAlertDirection
	 */
	enum class EAlertDirection : uint8_t
	{
		Forward = 0,
		Backward = 1,
		Left = 2,
		Right = 3,
		MAX = 4
	};

	/**
	 * Enum Solarland.ECustomNoticeColor
	 */
	enum class ECustomNoticeColor : uint8_t
	{
		None = 0,
		Red = 1,
		Green = 2,
		Blue = 3,
		Yellow = 4,
		MAX = 5
	};

	/**
	 * Enum Solarland.ECustomNoticeType
	 */
	enum class ECustomNoticeType : uint8_t
	{
		SmallNotice = 0,
		MediumNotice = 1,
		BigNotice = 2,
		KillEffectNotice = 3,
		GlobalKillNotice = 4,
		LocalKillNotice = 5,
		PickUpNotice = 6,
		WeaponExpNotice = 7,
		EquipReplaceNotice = 8,
		TaskNotice = 9,
		MAX = 10
	};

	/**
	 * Enum Solarland.EResurrectionState
	 */
	enum class EResurrectionState : uint8_t
	{
		Alive = 0,
		WaitingTeammatesHelp = 1,
		TimeOut = 2,
		AllTeammatesDied = 3,
		LeaveBattle = 4,
		MAX = 5
	};

	/**
	 * Enum Solarland.ESCMDataType
	 */
	enum class ESCMDataType : uint8_t
	{
		None = 0,
		Byte = 1,
		Int = 2,
		Float = 3,
		Bool = 4,
		FVector = 5,
		FString = 6,
		MAX = 7
	};

	/**
	 * Enum Solarland.ETaskPage
	 */
	enum class ETaskPage : uint8_t
	{
		TPNone = 0,
		TPDaily = 1,
		TPGrow = 2,
		TPHomeDaily = 3,
		TPSeason = 4,
		TPPassDaily = 5,
		TPPassWelfare = 6,
		TPPassWeek = 7,
		TPMonthlyDaily = 8,
		TPMonthlyWeek = 9,
		TPHalMonth = 10,
		TPWeekChallenge = 11,
		TPShareCodeDaily = 12,
		TPShareCodePersonal = 13,
		TPShareCodeFriend = 14,
		TPCollectRedeem = 15,
		MAX = 16
	};

	/**
	 * Enum Solarland.ESCMPlayerGameRole
	 */
	enum class ESCMPlayerGameRole : uint8_t
	{
		StandBy = 0,
		OBPlayer = 1,
		Player = 2,
		Spectator = 3,
		MAX = 4
	};

	/**
	 * Enum Solarland.ESCMPlayerType
	 */
	enum class ESCMPlayerType : uint8_t
	{
		None = 0,
		Player = 1,
		BotAI = 2,
		Monster = 3,
		MAX = 4
	};

	/**
	 * Enum Solarland.ESCMPlayerOutType
	 */
	enum class ESCMPlayerOutType : uint8_t
	{
		None = 0,
		SelfLogout = 1,
		BattleEnd = 2,
		SelfEnd = 3,
		OfflineEnd = 4,
		Cheating = 5,
		Abnormal = 6,
		MAX = 7
	};

	/**
	 * Enum Solarland.ESCMPlayerState
	 */
	enum class ESCMPlayerState : uint8_t
	{
		None = 0,
		PreLogin = 1,
		NotJoin = 2,
		InBattle = 3,
		Suspend = 4,
		BattleEnd = 5,
		MAX = 6
	};

	/**
	 * Enum Solarland.EPersonalScoreType
	 */
	enum class EPersonalScoreType : uint8_t
	{
		None = 0,
		Kill = 1,
		Assist = 2,
		OccupyingPerSec = 3,
		Capture = 4,
		Release = 5,
		MAX = 6
	};

	/**
	 * Enum Solarland.EBattlegroundPlayerStatus
	 */
	enum class EBattlegroundPlayerStatus : uint8_t
	{
		WaitForBattle = 0,
		Battle = 1,
		WaitForRebirth = 2,
		Deploying = 3,
		MAX = 4
	};

	/**
	 * Enum Solarland.EDeploymentType
	 */
	enum class EDeploymentType : uint8_t
	{
		None = 0,
		BlueHome = 1,
		RedHome = 2,
		A = 3,
		B = 4,
		C = 5,
		D = 6,
		MAX = 7
	};

	/**
	 * Enum Solarland.EMatchResult
	 */
	enum class EMatchResult : uint8_t
	{
		None = 0,
		Victory = 1,
		Fail = 2,
		Draw = 3,
		MAX = 4
	};

	/**
	 * Enum Solarland.EFactionType
	 */
	enum class EFactionType : uint8_t
	{
		Neutral = 0,
		Blue = 1,
		Red = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.EFileDownloadError
	 */
	enum class EFileDownloadError : uint8_t
	{
		None = 0,
		ConnectFailed = 1,
		RequestHeadFailed = 2,
		CreateFileFailed = 3,
		DownloadFailed = 4,
		WriteFailed = 5,
		DeleteOldFailed = 6,
		MoveFailed = 7,
		MAX = 8
	};

	/**
	 * Enum Solarland.EDownloadFailedStep
	 */
	enum class EDownloadFailedStep : uint8_t
	{
		DownloadServerListFailed = 0,
		DownloadPakListFailed = 1,
		DownloadPakFileFailed = 2,
		MountPakFileFailed = 3,
		MAX = 4
	};

	/**
	 * Enum Solarland.EBuffEffectTagType
	 */
	enum class EBuffEffectTagType : uint8_t
	{
		None = 0,
		TopHalfPart = 1,
		BottomHalfPart = 2,
		TwoSidePart = 3,
		BorderPart = 4,
		FullPart = 5,
		MAX = 6
	};

	/**
	 * Enum Solarland.ESolarTablesEnum_InputTriggerType
	 */
	enum class ESolarTablesEnum_InputTriggerType : uint8_t
	{
		InputTriggerPressed = 0,
		InputTriggerTap = 1,
		InputTriggerDoubleTap = 2,
		InputTriggerHold = 3,
		_Count = 4,
		ESolarTablesEnum_MAX = 5
	};

	/**
	 * Enum Solarland.ESolarTablesEnum_InputActionType
	 */
	enum class ESolarTablesEnum_InputActionType : uint8_t
	{
		Action = 0,
		Axis = 1,
		_Count = 2,
		ESolarTablesEnum_MAX = 3
	};

	/**
	 * Enum Solarland.EPickupItemType
	 */
	enum class EPickupItemType : uint8_t
	{
		None = 0,
		Normal = 1,
		TreasureBox = 2,
		DeathBox = 3,
		HomeItem = 4,
		MAX = 5
	};

	/**
	 * Enum Solarland.EJetFlyForbiddenType
	 */
	enum class EJetFlyForbiddenType : uint8_t
	{
		Water = 0,
		Climb = 1,
		MAX = 2
	};

	/**
	 * Enum Solarland.ESolarITemHUDStyle
	 */
	enum class ESolarITemHUDStyle : uint8_t
	{
		Spread = 0,
		Wheel = 1,
		MAX = 2
	};

	/**
	 * Enum Solarland.ECountDownState
	 */
	enum class ECountDownState : uint8_t
	{
		CD_Normal = 0,
		CD_Buff = 1,
		CD_MAX = 2
	};

	/**
	 * Enum Solarland.EInputButton
	 */
	enum class EInputButton : uint8_t
	{
		None = 0,
		Jump = 1,
		RechargeShield = 2,
		BigRechargeShield = 3,
		Crouch = 4,
		JetVertical = 5,
		JetHorizontal = 6,
		Fire = 7,
		LeftFire = 8,
		AltFire = 9,
		QuickAds = 10,
		CancelAction = 11,
		FreeLook = 12,
		Interact = 13,
		InteractAlternative = 14,
		Reload = 15,
		TogglePrimaryWeapon = 16,
		ToggleSecondaryWeapon = 17,
		ToggleTertiaryWeapon = 18,
		TogglePrimaryWeapon_Checkbox = 19,
		ToggleSecondaryWeapon_Checkbox = 20,
		ToggleTertiaryWeapon_Checkbox = 21,
		ToggleGunsight = 22,
		Gunsight = 23,
		SprintFreeOnPC = 24,
		SprintFreeOnMobile = 25,
		SprintLock = 26,
		Equip1 = 27,
		Equip2 = 28,
		Map = 29,
		Eject = 30,
		OutVehicle = 31,
		Backpack = 32,
		UseMedicine = 33,
		UseRecommendItem = 34,
		Pickup = 35,
		TogglePickup = 36,
		SwitchFireMode = 37,
		SwitchToSeat1 = 38,
		SwitchToSeat2 = 39,
		SwitchToSeat3 = 40,
		SwitchToSeat4 = 41,
		VehicleAbility1 = 42,
		VehicleAbility2 = 43,
		RoleSkillSuper = 44,
		RoleSkillTactical = 45,
		ShieldUpgrade = 46,
		ShieldUpgradeCancel = 47,
		TogglePutAwayWeapon = 48,
		Max = 49
	};

	/**
	 * Enum Solarland.EKillParamsCompressInfo
	 */
	enum class EKillParamsCompressInfo : uint8_t
	{
		Default = 0,
		bKillLeaderChange = 1,
		bKillLeaderShutDown = 2,
		bRevenge = 3,
		bShutDown = 4,
		bDown = 5,
		bClearTeam = 6,
		bKillDefender = 7,
		bKillerDead = 8,
		bHitHead = 9,
		bKillLeaderKill = 10,
		MAX = 11
	};

	/**
	 * Enum Solarland.ESpectateReferToState
	 */
	enum class ESpectateReferToState : uint8_t
	{
		Invalid = 0,
		Enter = 1,
		Change = 2,
		Exit = 3,
		MAX = 4
	};

	/**
	 * Enum Solarland.EVehicleInterationUIState
	 */
	enum class EVehicleInterationUIState : uint8_t
	{
		None = 0,
		Repair = 1,
		Drive = 2,
		Passenger = 3,
		Backpacker = 4,
		MAX = 5
	};

	/**
	 * Enum Solarland.ETransformerType
	 */
	enum class ETransformerType : uint8_t
	{
		Wheeled = 0,
		Legged = 1,
		Max = 2
	};

	/**
	 * Enum Solarland.EPlayerNamePanelScale
	 */
	enum class EPlayerNamePanelScale : uint8_t
	{
		ExtraSmallSize = 0,
		SmallSize = 1,
		DefaultSize = 2,
		LargeSize = 3,
		ExtraLargeSize = 4,
		MAX = 5
	};

	/**
	 * Enum Solarland.EBattleOBHUDType
	 */
	enum class EBattleOBHUDType : uint8_t
	{
		None = 0,
		SpectatePlayer = 1,
		FreeView = 2,
		FreeLookAt = 3,
		Director = 4,
		MAX = 5
	};

	/**
	 * Enum Solarland.EOBPlayerHeadInfoWidgetStyle
	 */
	enum class EOBPlayerHeadInfoWidgetStyle : uint8_t
	{
		NearMode = 0,
		MiddleMode = 1,
		FarMode = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.EUIPanelName
	 */
	enum class EUIPanelName : uint8_t
	{
		None = 0,
		SolarBattleControll = 1,
		WorldMarkPanel = 2,
		WeaponCrosshairPanel = 3,
		SolarBattle_Backpack = 4,
		Separate_Discarded_MultiItem = 5,
		HUD_ElectricShop = 6,
		BigMapUMG = 7,
		HUD_CustomizedNotice = 8,
		UI_Settings = 9,
		UI_OB_Root = 10,
		UI_OB_GlobalControl = 11,
		UI_OB_BigMap = 12,
		UI_OB_Settlement = 13,
		UI_OB_Settlement_InputMask = 14,
		UI_OB_HeadInfo = 15,
		UI_OB_ShortKeyboard = 16,
		UI_OpeningShow = 17,
		UI_Eliminate = 18,
		UI_Skill_Scan = 19,
		UI_HeroPick = 20,
		JobEffectDetailPanel = 21,
		UI_BuffEffectScreenPanel = 22,
		UI_TestCustomPanel = 23,
		Solarland_DevDebugUI_Widget = 24,
		UI_Highlight_Overview = 25,
		UI_BattleGround_End = 26,
		MAX = 27
	};

	/**
	 * Enum Solarland.EWidgetBackKeyType
	 */
	enum class EWidgetBackKeyType : uint8_t
	{
		Invalid = 0,
		FromKey = 1,
		FromClose = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.EWidgetLayerLevel
	 */
	enum class EWidgetLayerLevel : uint8_t
	{
		NormalWidget = 0,
		SameLevelCacheWidget = 1,
		SameLevelReplaceWidget = 2,
		CloseAllBackKeyWidget = 3,
		CloseAllBackKeyAndNormalWidget = 4,
		MAX = 5
	};

	/**
	 * Enum Solarland.EWidgetScope
	 */
	enum class EWidgetScope : uint8_t
	{
		World = 0,
		Global = 1,
		MAX = 2
	};

	/**
	 * Enum Solarland.ELayoutPreviewType
	 */
	enum class ELayoutPreviewType : uint8_t
	{
		Mobile = 0,
		Desktop = 1,
		MAX = 2
	};

	/**
	 * Enum Solarland.EInputCapture
	 */
	enum class EInputCapture : uint8_t
	{
		EIC_None = 0,
		EIC_Start = 1,
		EIC_End = 2,
		EIC_Move = 3,
		EIC_Transient = 4,
		EIC_All = 5,
		EIC_MAX = 6
	};

	/**
	 * Enum Solarland.ESolarSupportLanguages
	 */
	enum class ESolarSupportLanguages : uint8_t
	{
		DefaultLanguage = 0,
		SimplifiedChinese = 1,
		TraditionalChinese = 2,
		Arabic = 3,
		German = 4,
		English = 5,
		Spanish = 6,
		French = 7,
		Hindi = 8,
		Indonesian = 9,
		Italian = 10,
		Japanese = 11,
		Korean = 12,
		Malay = 13,
		Polish = 14,
		Portuguese = 15,
		Russian = 16,
		Thai = 17,
		Turkish = 18,
		Vietnamese = 19,
		Tagalog = 20,
		PO = 21,
		OP = 22,
		MAX = 23
	};

	/**
	 * Enum Solarland.EImageURLDownloadState
	 */
	enum class EImageURLDownloadState : uint8_t
	{
		NotStarted = 0,
		Processing = 1,
		Success = 2,
		Failed = 3,
		MAX = 4
	};

	/**
	 * Enum Solarland.ECustomGameModeTypeForUI
	 */
	enum class ECustomGameModeTypeForUI : uint8_t
	{
		Type_Default = 0,
		Type_Sabotage = 1,
		Type_MAX = 2
	};

	/**
	 * Enum Solarland.EShopWeaponUpgradeState
	 */
	enum class EShopWeaponUpgradeState : uint8_t
	{
		Upgrade_None = 0,
		Upgrade_Enable = 1,
		Upgrade_Max = 2,
		Upgrade_NotEnoughEnergy = 3
	};

	/**
	 * Enum Solarland.EActionWheelOperateType
	 */
	enum class EActionWheelOperateType : uint8_t
	{
		NeedClick = 0,
		AutoCommand = 1,
		MAX = 2
	};

	/**
	 * Enum Solarland.EActionWheelCommandType
	 */
	enum class EActionWheelCommandType : uint8_t
	{
		None = 0,
		UseItem = 1,
		WorldMark = 2,
		UseSticker = 3,
		PlayAnimation = 4,
		PlaySound = 5,
		Max = 6
	};

	/**
	 * Enum Solarland.EActorMaterialChangeRebuildReason
	 */
	enum class EActorMaterialChangeRebuildReason : uint8_t
	{
		OriginalMeshChanged = 0,
		MeshAddedOrRemoved = 1,
		MAX = 2
	};

	/**
	 * Enum Solarland.EMaterialChangeTextureOverrideMode
	 */
	enum class EMaterialChangeTextureOverrideMode : uint8_t
	{
		None = 0,
		OverrideAllTextures = 1,
		OverrideSpecifiedTextures = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.EMaterialParameterTypeFlags
	 */
	enum class EMaterialParameterTypeFlags : uint8_t
	{
		None = 0,
		Scaler = 1,
		Vector = 2,
		Texture = 3,
		Font = 4,
		AllWithoutFont = 5,
		All = 6,
		MAX = 7
	};

	/**
	 * Enum Solarland.EMaterialParameterType2
	 */
	enum class EMaterialParameterType2 : uint8_t
	{
		Scaler = 0,
		Vector = 1,
		Texture = 2,
		Font = 3,
		MAX = 4
	};

	/**
	 * Enum Solarland.EMaterialChangeType
	 */
	enum class EMaterialChangeType : uint8_t
	{
		Normal = 0,
		MultiplePass = 1,
		MAX = 2
	};

	/**
	 * Enum Solarland.EActorParticleEffectAttachOption
	 */
	enum class EActorParticleEffectAttachOption : uint8_t
	{
		None = 0,
		AttachToActor = 1,
		AttachToMesh = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.EOperator
	 */
	enum class EOperator : uint8_t
	{
		IDLE = 0,
		ADD = 1,
		MINUS = 2,
		CANCEL = 3,
		MAX = 4
	};

	/**
	 * Enum Solarland.EAirDropOpenState
	 */
	enum class EAirDropOpenState : uint8_t
	{
		Closed = 0,
		Opening = 1,
		Opened = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.EAirDropMovementState
	 */
	enum class EAirDropMovementState : uint8_t
	{
		None = 0,
		Waiting = 1,
		FreeFalling = 2,
		UniformFalling = 3,
		DecelerateFalling = 4,
		Landing = 5,
		Landed = 6,
		Removed = 7,
		MAX = 8
	};

	/**
	 * Enum Solarland.EBulletTraceTargetType
	 */
	enum class EBulletTraceTargetType : uint8_t
	{
		None = 0,
		Character = 1,
		Vehicle = 2,
		SummonItem = 3,
		MAX = 4
	};

	/**
	 * Enum Solarland.EBounceType
	 */
	enum class EBounceType : uint8_t
	{
		NONE = 0,
		ONCE = 1,
		STICK = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.ETriggerType
	 */
	enum class ETriggerType : uint8_t
	{
		KEY_DOWN = 0,
		KEY_UP = 1,
		KEY_HOLD = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.EHoldActionType
	 */
	enum class EHoldActionType : uint8_t
	{
		HT_Charge = 0,
		HT_Projectile = 1,
		HT_None = 2,
		HT_MAX = 3
	};

	/**
	 * Enum Solarland.EVirtualBulletType
	 */
	enum class EVirtualBulletType : uint8_t
	{
		LinearBullet = 0,
		CurveBullet = 1,
		GravityBullet = 2,
		TracingBullet = 3,
		MAX = 4
	};

	/**
	 * Enum Solarland.ETrajectoryType
	 */
	enum class ETrajectoryType : uint8_t
	{
		LINE = 0,
		LINE_GRAVITY = 1,
		CURVE = 2,
		CANISTER = 3,
		BEAM = 4,
		Rocket = 5,
		VirtualBullet = 6,
		MAX = 7
	};

	/**
	 * Enum Solarland.EWeaponSkillChargedState
	 */
	enum class EWeaponSkillChargedState : uint8_t
	{
		PREPARE = 0,
		START = 1,
		COMPLETECHARGE = 2,
		EXECUTE = 3,
		MAX = 4
	};

	/**
	 * Enum Solarland.EFireMethodType
	 */
	enum class EFireMethodType : uint8_t
	{
		BULLET = 0,
		SKILL = 1,
		SUMMONBULLET = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.ECostFireType
	 */
	enum class ECostFireType : uint8_t
	{
		DESCRETE = 0,
		CONTINUOUS = 1,
		MAX = 2
	};

	/**
	 * Enum Solarland.EShootingSoundOpt
	 */
	enum class EShootingSoundOpt : uint8_t
	{
		EShootingSound_SINGLE_1P = 0,
		EShootingSound_SINGLE_3P = 1,
		EShootingSound_SINGLE_3P_ENEMY = 2,
		EShootingSound_AUTO_1P = 3,
		EShootingSound_AUTO_3P = 4,
		EShootingSound_AUTO_3P_ENEMY = 5,
		EShootingSound_BURST_1P = 6,
		EShootingSound_BURST_3P = 7,
		EShootingSound_BURST_3P_ENEMY = 8,
		EShootingSound_FIRE_LAST_1P = 9,
		EShootingSound_FIRE_LAST_3P = 10,
		EShootingSound_SKILL_CAST_1P = 11,
		EShootingSound_SKILL_CAST_3P = 12,
		EShootingSound_LAND_COMMON_HIT_3P = 13,
		EShootingSound_SKILL_FX_START_1P = 14,
		EShootingSound_SKILL_FX_START_3P = 15,
		EShootingSound_SHIELD_HIT_1P = 16,
		EShootingSound_SHIELD_HIT_3P = 17,
		EShootingSound_SHIELD_BROKEN_1P = 18,
		EShootingSound_SHIELD_BROKEN_3P = 19,
		EShootingSound_BODY_HIT_1P = 20,
		EShootingSound_BODY_HIT_3P = 21,
		EShootingSound_FIRE_OVERLOAD_1P = 22,
		EShootingSound_FIRE_OVERLOAD_3P = 23,
		EShootingSound_Fly_Loop = 24,
		EShootingSound_Fly_Once = 25,
		EShootingSound_Vehicle_Gun_On = 26,
		EShootingSound_Vehicle_Gun_Off = 27,
		EShootingSound_Smoke_Loop = 28,
		EShootingSound_B9A04Skill = 29,
		EShootingSound_Reload_1P = 30,
		EShootingSound_Reload_3P = 31,
		EShootingSound_Reload_1P01 = 32,
		EShootingSound_Reload_3P01 = 33,
		EShootingSound_Reload_1P02 = 34,
		EShootingSound_Reload_3P02 = 35,
		EShootingSound_Bolt_1P = 36,
		EShootingSound_Bolt_3P = 37,
		EShootingSound_MAX = 38
	};

	/**
	 * Enum Solarland.EShootingOpt
	 */
	enum class EShootingOpt : uint8_t
	{
		SINGLE = 0,
		AUTO = 1,
		BURST = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.EFootEffectType
	 */
	enum class EFootEffectType : uint8_t
	{
		Effect_None = 0,
		Effect_Water = 1,
		Effect_MAX = 2
	};

	/**
	 * Enum Solarland.EAttributeSubBehavior
	 */
	enum class EAttributeSubBehavior : uint8_t
	{
		Apply = 0,
		Cancel = 1,
		Update = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.EBackPackTransitionAnimState
	 */
	enum class EBackPackTransitionAnimState : uint8_t
	{
		TransitionAnimStateDefault = 0,
		SkyCharge2NoCharge_NoFly = 1,
		SkyCharge2NoEnergy_NoFly = 2,
		SkyCharge2NoCharge_Fly = 3,
		SkyCharge2NoEnergy_Fly = 4,
		SkyCharge2NoCharge_IntoFly = 5,
		SkyCharge2NoEnergy_IntoFly = 6,
		NoCharge2SkyCharge_NoFly = 7,
		NoEnergy2SkyCharge_NoFly = 8,
		NoCharge2SkyCharge_Fly = 9,
		NoEnergy2SkyCharge_Fly = 10,
		NoCharge2SkyCharge_OutFly = 11,
		NoEnergy2SkyCharge_OutFly = 12,
		PileCharge2NoCharge_NoFly = 13,
		PileCharge2NoEnergy_NoFly = 14,
		PileCharge2NoCharge_Fly = 15,
		PileCharge2NoEnergy_Fly = 16,
		PileCharge2NoCharge_IntoFly = 17,
		PileCharge2NoEnergy_IntoFly = 18,
		NoCharge2PileCharge_NoFly = 19,
		NoEnergy2PileCharge_NoFly = 20,
		NoCharge2PileCharge_Fly = 21,
		NoEnergy2PileCharge_Fly = 22,
		NoCharge2PileCharge_OutFly = 23,
		NoEnergy2PileCharge_OutFly = 24,
		BoxCharge2NoCharge_NoFly = 25,
		BoxCharge2NoEnergy_NoFly = 26,
		BoxCharge2NoCharge_Fly = 27,
		BoxCharge2NoEnergy_Fly = 28,
		BoxCharge2NoCharge_IntoFly = 29,
		BoxCharge2NoEnergy_IntoFly = 30,
		NoCharge2BoxCharge_NoFly = 31,
		NoEnergy2BoxCharge_NoFly = 32,
		NoCharge2BoxCharge_Fly = 33,
		NoEnergy2BoxCharge_Fly = 34,
		NoCharge2BoxCharge_OutFly = 35,
		NoEnergy2BoxCharge_OutFly = 36,
		NoCharge2NoEnergy_NoFly = 37,
		NoCharge2NoEnergy_IntoFly = 38,
		NoEnergy2NoCharge_NoFly = 39,
		NoEnergy2NoCharge_OutFly = 40,
		MAX = 41
	};

	/**
	 * Enum Solarland.EBackPackFixedAnimState
	 */
	enum class EBackPackFixedAnimState : uint8_t
	{
		FixedAnimStateDefault = 0,
		FixedSkyChargeNoFly = 1,
		FixedPileChargeNoFly = 2,
		FixedBoxChargeNoFly = 3,
		FixedNoChargeNoFly = 4,
		FixedNoEnergyNoFly = 5,
		FixedSkyChargeIsFly = 6,
		FixedPileChargeIsFly = 7,
		FixedBoxChargeIsFly = 8,
		FixedNoChargeIsFly = 9,
		FixedNoEnergyIsFly = 10,
		MAX = 11
	};

	/**
	 * Enum Solarland.EBackPackAnimSubType
	 */
	enum class EBackPackAnimSubType : uint8_t
	{
		SkyChargeNoFly = 0,
		PileChargeNoFly = 1,
		BoxChargeNoFly = 2,
		NoChargeNoFly = 3,
		NoEnergyNoFly = 4,
		SkyChargeIsFly = 5,
		PileChargeIsFly = 6,
		BoxChargeIsFly = 7,
		NoChargeIsFly = 8,
		NoEnergyIsFly = 9,
		Charge2NoCharge_NoFly = 10,
		Charge2NoEnergy_NoFly = 11,
		Charge2NoCharge_Fly = 12,
		Charge2NoEnergy_Fly = 13,
		Charge2NoCharge_IntoFly = 14,
		Charge2NoEnergy_IntoFly = 15,
		NoCharge2Charge_NoFly = 16,
		NoEnergy2Charge_NoFly = 17,
		NoCharge2Charge_Fly = 18,
		NoEnergy2Charge_Fly = 19,
		NoCharge2Charge_OutFly = 20,
		NoEnergy2Charge_OutFly = 21,
		NoCharge2NoEnergy_NoFly = 22,
		NoCharge2NoEnergy_IntoFly = 23,
		NoEnergy2NoCharge_NoFly = 24,
		NoEnergy2NoCharge_OutFly = 25,
		ETypeDefault = 26,
		MAX = 27
	};

	/**
	 * Enum Solarland.EBackPackAnimType
	 */
	enum class EBackPackAnimType : uint8_t
	{
		SkyCharge = 0,
		PileCharge = 1,
		BoxCharge = 2,
		NoCharge = 3,
		NoEnergy = 4,
		NoFly = 5,
		IsFly = 6,
		MAX = 7
	};

	/**
	 * Enum Solarland.EProgressStatus
	 */
	enum class EProgressStatus : uint8_t
	{
		Min = 0,
		Max = 1,
		NoChange = 2,
		Increase = 3,
		Decrease = 4
	};

	/**
	 * Enum Solarland.EControlPointStatus
	 */
	enum class EControlPointStatus : uint8_t
	{
		None = 0,
		Neutral = 1,
		Owned = 2,
		Enemy = 3,
		MAX = 4
	};

	/**
	 * Enum Solarland.EBattlegroundPlayerStartRegion
	 */
	enum class EBattlegroundPlayerStartRegion : uint8_t
	{
		Default = 0,
		Inner = 1,
		Outer = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.EBattlegroundMapElementType
	 */
	enum class EBattlegroundMapElementType : uint8_t
	{
		None = 0,
		Home = 1,
		ControlPoint = 2,
		AirWall = 3,
		PlayerStart = 4,
		VehicleSpawner = 5,
		Custom = 6,
		MAX = 7
	};

	/**
	 * Enum Solarland.EBattleRoyalTimeLineEnum
	 */
	enum class EBattleRoyalTimeLineEnum : uint8_t
	{
		None = 0,
		CreateBombingZone = 1,
		CreateAirdrop = 2,
		ModifyEnvironmentState = 3,
		MAX = 4
	};

	/**
	 * Enum Solarland.EBattleUpgradeEffectCategory
	 */
	enum class EBattleUpgradeEffectCategory : uint8_t
	{
		None = 0,
		Attack = 1,
		Defence = 2,
		Speed = 3,
		Bag = 4,
		Cooldown = 5,
		PlaceHolder1 = 6,
		PlaceHolder2 = 7,
		PlaceHolder3 = 8,
		PlaceHolder4 = 9,
		MAX = 10
	};

	/**
	 * Enum Solarland.EBombingZoneState
	 */
	enum class EBombingZoneState : uint8_t
	{
		Waiting = 0,
		Firing = 1,
		Ending = 2,
		End = 3,
		MAX = 4
	};

	/**
	 * Enum Solarland.EBotAttrOperator
	 */
	enum class EBotAttrOperator : uint8_t
	{
		Equal = 0,
		Greater = 1,
		Less = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.EBotAttrValueType
	 */
	enum class EBotAttrValueType : uint8_t
	{
		Current = 0,
		Max = 1,
		Percent = 2
	};

	/**
	 * Enum Solarland.EBotAttrType
	 */
	enum class EBotAttrType : uint8_t
	{
		Health = 0,
		Shield = 1,
		Energy = 2,
		Difficulty = 3,
		MAX = 4
	};

	/**
	 * Enum Solarland.EBotCheckCondition
	 */
	enum class EBotCheckCondition : uint8_t
	{
		AlwaysPass = 0,
		ReadyFight = 1,
		CanJetVertical = 2,
		CanJetHorizontal = 3,
		ReadyWeaponSkill = 4,
		IsIndependent = 5,
		NeedReloading = 6,
		MAX = 7
	};

	/**
	 * Enum Solarland.EBotCheckAIServer
	 */
	enum class EBotCheckAIServer : uint8_t
	{
		AlwaysPass = 0,
		AIServerIsOnline = 1,
		MAX = 2
	};

	/**
	 * Enum Solarland.EBotCheckNgaiMLAction
	 */
	enum class EBotCheckNgaiMLAction : uint8_t
	{
		AlwaysPass = 0,
		DoOnceFire = 1,
		DoJump = 2,
		DoJetVertical = 3,
		DoJetForward = 4,
		DoUseRoleSkillOne = 5,
		DoUseRoleSkillTwo = 6,
		DoContinueFire = 7,
		DoMoveTo = 8,
		DoUseMedicine = 9,
		DoUseShieldRecharger = 10,
		DoVehicleFire = 11,
		DoUseVehicleFirstSkill = 12,
		DoUseVehicleSecondSkill = 13,
		MAX = 14
	};

	/**
	 * Enum Solarland.EBotCheckState
	 */
	enum class EBotCheckState : uint8_t
	{
		None = 0,
		Falling = 1,
		Driving = 2,
		Passager = 3,
		Swiming = 4,
		Dying = 5,
		Dead = 6,
		WeaponReloading = 7,
		ShootAiming = 8,
		SiegeVehicleLocated = 9,
		BeingRescued = 10,
		Cruising = 11,
		Skydiving = 12,
		SkydivingInitially = 13,
		SkydivingAfterRebirth = 14,
		SkydivingByLauncher = 15,
		MAX = 16
	};

	/**
	 * Enum Solarland.EDistanceComparison
	 */
	enum class EDistanceComparison : uint8_t
	{
		Equal = 0,
		Greater = 1,
		Less = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.ESameScreenEffectHandleType
	 */
	enum class ESameScreenEffectHandleType : uint8_t
	{
		Ignore = 0,
		StopPrev = 1,
		MAX = 2
	};

	/**
	 * Enum Solarland.EBuffEffectDurationType
	 */
	enum class EBuffEffectDurationType : uint8_t
	{
		Instant = 0,
		HasDuration = 1,
		MAX = 2
	};

	/**
	 * Enum Solarland.ELevelLoadType
	 */
	enum class ELevelLoadType : uint8_t
	{
		ClientAntServer = 0,
		ClientOnly = 1,
		ServerOnly = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.EVaultType
	 */
	enum class EVaultType : uint8_t
	{
		None = 0,
		Step = 1,
		Step_Cross = 2,
		Step_Sprint = 3,
		Step_Sprint_Cross = 4,
		Vault = 5,
		Vault_Cross = 6,
		Vault_Sprint = 7,
		Vault_Sprint_Cross = 8,
		Climb = 9,
		Climb_Cross = 10,
		Climb_Sprint = 11,
		Climb_Sprint_Cross = 12,
		Climb_Water = 13,
		HighClimb = 14,
		HighClimb_Cross = 15,
		HighClimb_Sprint = 16,
		HighClimb_Sprint_Cross = 17,
		WallRun = 18,
		WallRunFailed = 19,
		MAX = 20
	};

	/**
	 * Enum Solarland.EObstacleDetectorType
	 */
	enum class EObstacleDetectorType : uint8_t
	{
		Knee = 0,
		Waist = 1,
		Chest = 2,
		Overhead = 3,
		Nullifier = 4,
		MAX = 5
	};

	/**
	 * Enum Solarland.EMatActionOnRemoved
	 */
	enum class EMatActionOnRemoved : uint8_t
	{
		None = 0,
		ResetToBeginValue = 1,
		ResetToEndValue = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.EBuffEffectType
	 */
	enum class EBuffEffectType : uint8_t
	{
		Both = 0,
		ScreenEffect = 1,
		ActorEffect = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.EActorEffectAffectedActorType
	 */
	enum class EActorEffectAffectedActorType : uint8_t
	{
		CharacterOnly = 0,
		All = 1,
		MAX = 2
	};

	/**
	 * Enum Solarland.ECueContentVisibleTargetFlag
	 */
	enum class ECueContentVisibleTargetFlag : uint8_t
	{
		None = 0,
		Self = 1,
		Teammate = 2,
		Other = 3,
		Observer = 4,
		Anyone = 5,
		MAX = 6
	};

	/**
	 * Enum Solarland.ECueContentPlayTiming
	 */
	enum class ECueContentPlayTiming : uint8_t
	{
		OnExecute = 0,
		OnActive = 1,
		WhileActive = 2,
		OnRemove = 3,
		OnCustomEvent = 4,
		MAX = 5
	};

	/**
	 * Enum Solarland.EUseType
	 */
	enum class EUseType : uint8_t
	{
		NORMAL = 0,
		HANDSETTING = 1,
		MAX = 2
	};

	/**
	 * Enum Solarland.EWeaponEquipSlot
	 */
	enum class EWeaponEquipSlot : uint8_t
	{
		None = 0,
		First = 1,
		Second = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.ECrossHairState
	 */
	enum class ECrossHairState : uint8_t
	{
		None = 0,
		Normal = 1,
		Reload = 2,
		Overload = 3,
		Forbid = 4,
		MAX = 5
	};

	/**
	 * Enum Solarland.ESpreadType
	 */
	enum class ESpreadType : uint8_t
	{
		Absolute = 0,
		Relative = 1,
		MAX = 2
	};

	/**
	 * Enum Solarland.ECrossHairSpecialFireState
	 */
	enum class ECrossHairSpecialFireState : uint8_t
	{
		PrepareFire = 0,
		ActivateFire = 1,
		KeepFiring = 2,
		EndFire = 3,
		MAX = 4
	};

	/**
	 * Enum Solarland.ECurvedEffectControllerStopMode
	 */
	enum class ECurvedEffectControllerStopMode : uint8_t
	{
		KeepCurrentProgress = 0,
		SetProgressToBegin = 1,
		SetProgressToEnd = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.EUsePlayerType
	 */
	enum class EUsePlayerType : uint8_t
	{
		Self = 0,
		Teammate = 1,
		Enemy = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.EUseEmojiScene
	 */
	enum class EUseEmojiScene : uint8_t
	{
		None = 0,
		Lobby = 1,
		Battle = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.EAnimationType
	 */
	enum class EAnimationType : uint8_t
	{
		Overload = 0,
		Overlay = 1,
		MAX = 2
	};

	/**
	 * Enum Solarland.EWeaponInfiniteAmmoMode
	 */
	enum class EWeaponInfiniteAmmoMode : uint8_t
	{
		Default = 0,
		InfiniteClip = 1,
		InfinitePkg = 2,
		InfiniteBoth = 3,
		MAX = 4
	};

	/**
	 * Enum Solarland.EJetAltitudeLimitationMode
	 */
	enum class EJetAltitudeLimitationMode : uint8_t
	{
		Default = 0,
		Home = 1,
		MAX = 2
	};

	/**
	 * Enum Solarland.EWeaponVibrateFactor
	 */
	enum class EWeaponVibrateFactor : uint8_t
	{
		Off = 0,
		Low = 1,
		Middle = 2,
		High = 3,
		MAX = 4
	};

	/**
	 * Enum Solarland.EWeaponVibrateType
	 */
	enum class EWeaponVibrateType : uint8_t
	{
		None = 0,
		Fire = 1,
		Reload_GetOld = 2,
		Reload_Restore = 3,
		Bolt = 4,
		Charge = 5,
		MAX = 6
	};

	/**
	 * Enum Solarland.EGameplayVibrateIntensity
	 */
	enum class EGameplayVibrateIntensity : uint8_t
	{
		Off = 0,
		Low = 1,
		Middle = 2,
		High = 3,
		MAX = 4
	};

	/**
	 * Enum Solarland.EGameplayVibrateCategory
	 */
	enum class EGameplayVibrateCategory : uint8_t
	{
		None = 0,
		SelfBeingHit = 1,
		SelfJetpackFlying = 2,
		SelfContinuousDamaged = 3,
		TriggerCharacterDown = 4,
		TriggerCharacterDie = 5,
		MAX = 6
	};

	/**
	 * Enum Solarland.EVibrateDeviceType
	 */
	enum class EVibrateDeviceType : uint8_t
	{
		Nonsupport = 0,
		Mobile = 1,
		Gamepad = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.ESCMDataGatherType_Settle
	 */
	enum class ESCMDataGatherType_Settle : uint8_t
	{
		None = 0,
		Self = 1,
		Side = 2,
		All = 3,
		ESCMDataGatherType_MAX = 4
	};

	/**
	 * Enum Solarland.ESCMDataReplicateType
	 */
	enum class ESCMDataReplicateType : uint8_t
	{
		None = 0,
		RepOwner = 1,
		RepSide = 2,
		RepGlobal = 3,
		MAX = 4
	};

	/**
	 * Enum Solarland.ESCMRankCheckType
	 */
	enum class ESCMRankCheckType : uint8_t
	{
		New = 0,
		Change = 1,
		Delete = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.ESCMDataSetType
	 */
	enum class ESCMDataSetType : uint8_t
	{
		None = 0,
		Array = 1,
		Map = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.EGaugeType
	 */
	enum class EGaugeType : uint8_t
	{
		None = 0,
		Degree = 1,
		Degree01 = 2,
		Degree02 = 3,
		DownUp = 4,
		LeftRight = 5,
		MAX = 6
	};

	/**
	 * Enum Solarland.EAimOffsetAdjustType
	 */
	enum class EAimOffsetAdjustType : uint8_t
	{
		None = 0,
		AdjustPitch = 1,
		AdjustYaw = 2,
		AdjustBoth = 3,
		MAX = 4
	};

	/**
	 * Enum Solarland.EPosture
	 */
	enum class EPosture : uint8_t
	{
		Stand = 0,
		Crouch = 1,
		MAX = 2
	};

	/**
	 * Enum Solarland.EAimTraceOriginType
	 */
	enum class EAimTraceOriginType : uint8_t
	{
		Default = 0,
		Muzzle = 1,
		Camera = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.EUIHeroPickListCellState
	 */
	enum class EUIHeroPickListCellState : uint8_t
	{
		Show = 0,
		Lock = 1,
		Forbidden = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.EHeroOwnedType
	 */
	enum class EHeroOwnedType : uint8_t
	{
		Own = 0,
		OwnForNow = 1,
		NotOwn = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.EHeroPickType
	 */
	enum class EHeroPickType : uint8_t
	{
		AllSidePlayer = 0,
		SpecificPlayer = 1,
		AllPlayer = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.EUIHeroPickPlayerState
	 */
	enum class EUIHeroPickPlayerState : uint8_t
	{
		Waiting = 0,
		Selecting = 1,
		Confirm = 2,
		Done = 3,
		MAX = 4
	};

	/**
	 * Enum Solarland.EHomeJetPackflag
	 */
	enum class EHomeJetPackflag : uint8_t
	{
		NONE = 0,
		Horizontal = 1,
		Vertical = 2,
		Stop = 3,
		MAX = 4
	};

	/**
	 * Enum Solarland.ESkillStateType
	 */
	enum class ESkillStateType : uint8_t
	{
		Normal = 0,
		CD = 1,
		NoneSkill = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.EKeyMappingStatus
	 */
	enum class EKeyMappingStatus : uint8_t
	{
		EMPTY = 0,
		BASE = 1,
		OTHER = 2,
		OTHERANDBASE = 3,
		INVALID = 4,
		DONE = 5,
		MAX = 6
	};

	/**
	 * Enum Solarland.EKillNoticeType
	 */
	enum class EKillNoticeType : uint8_t
	{
		BeKillLeader = 0,
		ShutDownKillLeader = 1,
		Revenge = 2,
		ShutDown = 3,
		CumulativeKill = 4,
		Down = 5,
		ClearTeam = 6,
		KillDefender = 7,
		SelfKillNotify = 8,
		KillLeaderChange = 9,
		KillLeaderShutDown = 10,
		GlobalKillNotify = 11,
		MAX = 12
	};

	/**
	 * Enum Solarland.EMapCellSelectionAccess
	 */
	enum class EMapCellSelectionAccess : uint8_t
	{
		Can = 0,
		Cannot = 1,
		MAX = 2
	};

	/**
	 * Enum Solarland.EMassInvState
	 */
	enum class EMassInvState : uint8_t
	{
		Begin = 0,
		Prepare = 1,
		Normal = 2,
		Sprint = 3,
		End = 4,
		MAX = 5
	};

	/**
	 * Enum Solarland.EMapState
	 */
	enum class EMapState : uint8_t
	{
		Idle = 0,
		FOVScale = 1,
		MAX = 2
	};

	/**
	 * Enum Solarland.EMapFOVParamType
	 */
	enum class EMapFOVParamType : uint8_t
	{
		VehicleSpeed = 0,
		PoisonCircle = 1,
		MAX = 2
	};

	/**
	 * Enum Solarland.EMapFOVState
	 */
	enum class EMapFOVState : uint8_t
	{
		Default = 0,
		Fov1 = 1,
		Fov2 = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.EAirdropStatus
	 */
	enum class EAirdropStatus : uint8_t
	{
		Default = 0,
		Coming = 1,
		Available = 2,
		Opening = 3,
		Opened = 4,
		MAX = 5
	};

	/**
	 * Enum Solarland.EMeshWidgetDisplayType
	 */
	enum class EMeshWidgetDisplayType : uint8_t
	{
		Icon = 0,
		Flash = 1,
		Diffuse = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.EMissileSwarmDebugFlag
	 */
	enum class EMissileSwarmDebugFlag : uint8_t
	{
		Aim = 0,
		Trail = 1,
		Trace = 2,
		Explode = 3,
		Mesh = 4,
		MAX = 5
	};

	/**
	 * Enum Solarland.EMeshProgressType
	 */
	enum class EMeshProgressType : uint8_t
	{
		Normal = 0,
		Damage = 1,
		Background = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.E_Type_OB_Scoreboard
	 */
	enum class E_Type_OB_Scoreboard : uint8_t
	{
		OB_Settlement = 0,
		OB_InGame = 1,
		Lobby_League_Settlement = 2,
		Lobby_CreateRoom_Settlement = 3,
		E_Type_OB_MAX = 4
	};

	/**
	 * Enum Solarland.EOBPithyPlayerState
	 */
	enum class EOBPithyPlayerState : uint8_t
	{
		Alive = 0,
		Dying = 1,
		Dead = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.EOBTeamListTab
	 */
	enum class EOBTeamListTab : uint8_t
	{
		Pithy = 0,
		All = 1,
		Nearby = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.ERoleWidgetStatus
	 */
	enum class ERoleWidgetStatus : uint8_t
	{
		Normal = 0,
		WaitTriggerAgain = 1,
		Disable = 2,
		InCD = 3,
		Forbidden = 4,
		MAX = 5
	};

	/**
	 * Enum Solarland.ERoleWidgetType
	 */
	enum class ERoleWidgetType : uint8_t
	{
		Super = 0,
		Tactical = 1,
		MAX = 2
	};

	/**
	 * Enum Solarland.ESCMMapElementVisibilityType
	 */
	enum class ESCMMapElementVisibilityType : uint8_t
	{
		Visible = 0,
		Hidden = 1,
		MAX = 2
	};

	/**
	 * Enum Solarland.ESCMMapElementStateType
	 */
	enum class ESCMMapElementStateType : uint8_t
	{
		Normal = 0,
		Suspend = 1,
		MAX = 2
	};

	/**
	 * Enum Solarland.ESCMMapElementType
	 */
	enum class ESCMMapElementType : uint8_t
	{
		PlayerStart = 0,
		ItemSpawner = 1,
		AirDrop = 2,
		ChargingPile = 3,
		JumpPad = 4,
		CarPad = 5,
		Vehicle = 6,
		Poison = 7,
		Custom = 8,
		MAX = 9
	};

	/**
	 * Enum Solarland.EMatchType
	 */
	enum class EMatchType : uint8_t
	{
		NONE = 0,
		Team = 1,
		AverageSide = 2,
		SingleSide = 3,
		MAX = 4
	};

	/**
	 * Enum Solarland.EPlayerResurrectType
	 */
	enum class EPlayerResurrectType : uint8_t
	{
		NONE = 0,
		SelfResurrectionCoin = 1,
		RequestTeamResurrect = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.EPlayerPawnType
	 */
	enum class EPlayerPawnType : uint8_t
	{
		NONE = 0,
		Character = 1,
		Vehicle = 2,
		Other = 3,
		MAX = 4
	};

	/**
	 * Enum Solarland.ESCMGameSceneType
	 */
	enum class ESCMGameSceneType : uint8_t
	{
		None = 0,
		InBattle = 1,
		Settlement = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.EDownloadState
	 */
	enum class EDownloadState : uint8_t
	{
		None = 0,
		Downloading = 1,
		Successful = 2,
		Failed = 3,
		MAX = 4
	};

	/**
	 * Enum Solarland.EShieldUpgradeItemShopOpenState
	 */
	enum class EShieldUpgradeItemShopOpenState : uint8_t
	{
		Closed = 0,
		Opening = 1,
		Open = 2,
		Closing = 3,
		MAX = 4
	};

	/**
	 * Enum Solarland.ESolarWeaponBrand
	 */
	enum class ESolarWeaponBrand : uint8_t
	{
		WeaponBrand_None = 0,
		WeaponBrand_9A = 1,
		WeaponBrand_Wasteland = 2,
		WeaponBrand_Murphy = 3,
		WeaponBrand_Prism = 4,
		WeaponBrand_MAX = 5
	};

	/**
	 * Enum Solarland.ERoleAbilityVoiceTriggerTiming
	 */
	enum class ERoleAbilityVoiceTriggerTiming : uint8_t
	{
		None = 0,
		Active = 1,
		Commit = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.ESolarAbilityInstanceType
	 */
	enum class ESolarAbilityInstanceType : uint8_t
	{
		Multiple = 0,
		SingleReplace = 1,
		SingleYield = 2,
		Max = 3
	};

	/**
	 * Enum Solarland.ESolarAttributeDurationType
	 */
	enum class ESolarAttributeDurationType : uint8_t
	{
		Instant = 0,
		HasDuration = 1,
		Infinite = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.ESolarAttributeValueSourceType
	 */
	enum class ESolarAttributeValueSourceType : uint8_t
	{
		Value = 0,
		FromConfig = 1,
		MAX = 2
	};

	/**
	 * Enum Solarland.EAchievementCondition
	 */
	enum class EAchievementCondition : uint8_t
	{
		None = 0,
		AchTSubAchievement = 1,
		AchTMinuteKill = 2,
		AchTUseVehicle = 3,
		AchTHPKill = 4,
		AchTLimitWin = 5,
		AchTDyingWin = 6,
		AchTAssistWin = 7,
		AchTRescue = 8,
		AchTLevel = 9,
		AchTSkyKill = 10,
		AchTOnlyLiveWin = 11,
		AchTFirstKill = 12,
		AchTBlindSniper = 13,
		AchTFriendNum = 14,
		AchTOpenBoxNum = 15,
		AchTenemyVehicle = 16,
		AchTDie = 17,
		AchTMarsWin = 18,
		AchTFistKill = 19,
		AchTAirUmbrella = 20,
		AchTAirTrapeze = 21,
		AchTAirSpeed = 22,
		AchTBubbleKill = 23,
		AchTCharacterNum = 24,
		AchAdvancedWeapon = 25,
		AchTBombingDie = 26,
		AchTRevengeKill = 27,
		MAX = 28
	};

	/**
	 * Enum Solarland.EAchievementReportType
	 */
	enum class EAchievementReportType : uint8_t
	{
		None = 0,
		SingleBattlle = 1,
		MultiBattle = 2,
		NoBattle = 3,
		MAX = 4
	};

	/**
	 * Enum Solarland.ESigninItemState
	 */
	enum class ESigninItemState : uint8_t
	{
		Got = 0,
		UnGot = 1,
		No = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.EWidgetOverrideParamType
	 */
	enum class EWidgetOverrideParamType : uint8_t
	{
		None = 0,
		Text = 1,
		Image = 2,
		Custom = 3,
		GameplayTag = 4,
		MAX = 5
	};

	/**
	 * Enum Solarland.EWidgetLoadType
	 */
	enum class EWidgetLoadType : uint8_t
	{
		Start = 0,
		Delay = 1,
		MAX = 2
	};

	/**
	 * Enum Solarland.EProgressBoardChannelState
	 */
	enum class EProgressBoardChannelState : uint8_t
	{
		None = 0,
		Add = 1,
		Minus = 2,
		HoldOn = 3,
		MAX = 4
	};

	/**
	 * Enum Solarland.ESolarAIValueCompareOp
	 */
	enum class ESolarAIValueCompareOp : uint8_t
	{
		Equal = 0,
		Greater = 1,
		Less = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.ESolarAudioDetailCatalog
	 */
	enum class ESolarAudioDetailCatalog : uint8_t
	{
		SADC_Common = 0,
		SADC_Music = 1,
		SADC_UI = 2,
		SADC_Gun = 3,
		SADC_Vehicle = 4,
		SADC_Object = 5,
		SADC_Character = 6,
		SADC_Voice = 7,
		SADC_VoiceEx = 8,
		SADC_MAX = 9
	};

	/**
	 * Enum Solarland.ESolarAudioDetailUnloadMode
	 */
	enum class ESolarAudioDetailUnloadMode : uint8_t
	{
		SADU_NeverUnload = 0,
		SADU_SwitchLevel = 1,
		SADU_Manual = 2,
		SADU_EnterOtherScene = 3,
		SADU_LeaveLobby = 4,
		SADU_LeaveTutorial = 5,
		SADU_LeaveHome = 6,
		SADU_LeaveWaiting = 7,
		SADU_LeaveGame = 8,
		SADU_DontCare = 9,
		SADU_MAX = 10
	};

	/**
	 * Enum Solarland.ESolarAudioDetailLoadMode
	 */
	enum class ESolarAudioDetailLoadMode : uint8_t
	{
		SADL_BeginPlay = 0,
		SADL_OnDemand = 1,
		SADL_Manual = 2,
		SADL_EnterBindScene = 3,
		SADL_EnterLobby = 4,
		SADL_EnterTutorial = 5,
		SADL_EnterHome = 6,
		SADL_EnterWaiting = 7,
		SADL_EnterGame = 8,
		SADL_NeverLoad = 9,
		SADL_MAX = 10
	};

	/**
	 * Enum Solarland.EBankLoadState
	 */
	enum class EBankLoadState : uint8_t
	{
		NotLoaded = 0,
		Loaded = 1,
		AsyncLoading = 2,
		AsyncUnloading = 3,
		MAX = 4
	};

	/**
	 * Enum Solarland.EAnimBlendDirection
	 */
	enum class EAnimBlendDirection : uint8_t
	{
		Idle = 0,
		Forward = 1,
		Back = 2,
		Right = 3,
		Left = 4,
		Max = 5
	};

	/**
	 * Enum Solarland.EInVehicleState
	 */
	enum class EInVehicleState : uint8_t
	{
		None = 0,
		Driving = 1,
		Riding = 2,
		StickingOut = 3,
		MAX = 4
	};

	/**
	 * Enum Solarland.ECruiseAnimState
	 */
	enum class ECruiseAnimState : uint8_t
	{
		None = 0,
		Looping = 1,
		Leaving = 2,
		End = 3,
		MAX = 4
	};

	/**
	 * Enum Solarland.ECharacterMontage
	 */
	enum class ECharacterMontage : uint8_t
	{
		Invalid = 0,
		Bolt = 1,
		Equip = 2,
		PreFire = 3,
		Rechamber = 4,
		Fire1 = 5,
		Reload = 6,
		ReloadWithBolt = 7,
		Max = 8
	};

	/**
	 * Enum Solarland.EVehicleAnimationType
	 */
	enum class EVehicleAnimationType : uint8_t
	{
		None = 0,
		Suv = 1,
		Sports = 2,
		MotorBike = 3,
		Hover = 4,
		Legged = 5,
		IronMan = 6,
		Backpacker = 7,
		MAX = 8
	};

	/**
	 * Enum Solarland.EDriveTurnType
	 */
	enum class EDriveTurnType : uint8_t
	{
		Idle = 0,
		Left = 1,
		Right = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.EWeaponStatus
	 */
	enum class EWeaponStatus : uint8_t
	{
		NoWeapon = 0,
		Peace = 1,
		Aiming = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.EAnoAntiDataType
	 */
	enum class EAnoAntiDataType : uint8_t
	{
		Unknown = 0,
		SecAntiDataFlow = 1,
		SecAttackFlow = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.EMeerkatSubComponentType
	 */
	enum class EMeerkatSubComponentType : uint8_t
	{
		MB = 0,
		Hp = 1,
		AE = 2,
		AR = 3,
		MAX = 4
	};

	/**
	 * Enum Solarland.EMeerkatGameDispatchEvents
	 */
	enum class EMeerkatGameDispatchEvents : uint8_t
	{
		ServerFire = 0,
		ServerHit = 1,
		ServerKill = 2,
		ServerKilled = 3,
		ClientFire = 4,
		ClientHit = 5,
		ClientKill = 6,
		ClientKilled = 7,
		ClientHitDown = 8,
		ClientBeHitDown = 9,
		ClientTick = 10,
		ServerTick = 11,
		ClientBeginPlay = 12,
		ServerBeginPlay = 13,
		ClientEndPlay = 14,
		ServerEndPlay = 15,
		EventMax = 16,
		MAX = 17
	};

	/**
	 * Enum Solarland.EItemLoadPriority
	 */
	enum class EItemLoadPriority : uint8_t
	{
		DEFAULT = 0,
		ITEM_MIN = 1,
		ITEM_MAX = 2,
		WEAPON_MIN = 3,
		WEAPON_MAX = 4,
		VEHICLE_MIN = 5,
		VEHICLE_MAX = 6,
		CHARACTER_MIN = 7,
		CHARACTER_MAX = 8,
		CLASS_PRIORITY = 9,
		MAX = 10
	};

	/**
	 * Enum Solarland.EAutoSaveType
	 */
	enum class EAutoSaveType : uint8_t
	{
		Weapon = 0,
		ItemActor = 1,
		MAX = 2
	};

	/**
	 * Enum Solarland.ESolarBotMemberState
	 */
	enum class ESolarBotMemberState : uint8_t
	{
		None = 0,
		Leader = 1,
		OnCall = 2,
		Separate = 3,
		Leaving = 4,
		Invalid = 5,
		MAX = 6
	};

	/**
	 * Enum Solarland.EBotTeleportReason
	 */
	enum class EBotTeleportReason : uint8_t
	{
		Unknown = 0,
		SolveBlock = 1,
		SolveOffMesh = 2,
		BTTask = 3,
		PreservePop = 4,
		MAX = 5
	};

	/**
	 * Enum Solarland.ESolarAITagStateTimeType
	 */
	enum class ESolarAITagStateTimeType : uint8_t
	{
		DurationInCurrentState = 0,
		TimeSinceLastExitToState = 1,
		MAX = 2
	};

	/**
	 * Enum Solarland.EBotInteractCondition
	 */
	enum class EBotInteractCondition : uint8_t
	{
		Invalid = 0,
		NeedToResponsePoison = 1,
		FoundEnemyActor = 2,
		TeammateKillEnemy = 3,
		WeAreTheChampion = 4,
		TeammateMarkTargetLocation = 5,
		TeammateMarkTargetDangerPoint = 6,
		TeammateMarkTargetItem = 7,
		TeammateMarkTargetFootstep = 8,
		TeammateMarkFollowHe = 9,
		TeammateMarkGetOnVehicle = 10,
		TeammateMarkNeedVehicle = 11,
		TeammateMarkNeedWeapon = 12,
		TeammateMarkNeedHelp = 13,
		TeammateMarkAttack = 14,
		TeammateMarkDefend = 15,
		MockEnemy = 16,
		MockDyingEnemy = 17,
		EnterDying = 18,
		BoringEnough = 19,
		MAX = 20
	};

	/**
	 * Enum Solarland.EBotFocusType
	 */
	enum class EBotFocusType : uint8_t
	{
		FocusToNothing = 0,
		FocusToActor = 1,
		FocusToPoint = 2,
		FocusToDirection = 3,
		MAX = 4
	};

	/**
	 * Enum Solarland.ENgaiMLType
	 */
	enum class ENgaiMLType : uint8_t
	{
		None = 0,
		OnlyImitationLearning = 1,
		OnlyReinforcementLearning = 2,
		Both = 3,
		MAX = 4
	};

	/**
	 * Enum Solarland.EBotAIType
	 */
	enum class EBotAIType : uint8_t
	{
		BehaviorTree = 0,
		ImitationLearning = 1,
		ReinforcementLearning = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.EPopLocationType
	 */
	enum class EPopLocationType : uint8_t
	{
		Default = 0,
		ShowFight = 1,
		Guarantee = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.ESolarBotTimelineTriggerAction
	 */
	enum class ESolarBotTimelineTriggerAction : uint8_t
	{
		None = 0,
		Add = 1,
		Remove = 2,
		Clear = 3,
		MAX = 4
	};

	/**
	 * Enum Solarland.ESolarBotTimelineFilterParameterType
	 */
	enum class ESolarBotTimelineFilterParameterType : uint8_t
	{
		None = 0,
		MoreThan = 1,
		LessThan = 2,
		Equal = 3,
		NotEqual = 4,
		Contain = 5,
		NotContain = 6,
		Radius = 7,
		Target = 8,
		MAX = 9
	};

	/**
	 * Enum Solarland.ESolarBotTimelineFilterType
	 */
	enum class ESolarBotTimelineFilterType : uint8_t
	{
		None = 0,
		RankPoint = 1,
		Equipment = 2,
		Disengagement = 3,
		KillNum = 4,
		DamageNum = 5,
		ItemNum = 6,
		SkillCoolingDown = 7,
		SurroundingTeammate = 8,
		SurroundingEnemy = 9,
		MAX = 10
	};

	/**
	 * Enum Solarland.ESolarBotTimelineAIDataSettingType
	 */
	enum class ESolarBotTimelineAIDataSettingType : uint8_t
	{
		None = 0,
		Health = 1,
		Shield = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.ESolarBotTimelineWeaponPartType
	 */
	enum class ESolarBotTimelineWeaponPartType : uint8_t
	{
		None = 0,
		Muzzle = 1,
		Grip = 2,
		Clip = 3,
		Scope = 4,
		GunStock = 5,
		MAX = 6
	};

	/**
	 * Enum Solarland.ESolarBotTimelineEquipmentSettingType
	 */
	enum class ESolarBotTimelineEquipmentSettingType : uint8_t
	{
		None = 0,
		PrimaryWeapon = 1,
		SecondaryWeapon = 2,
		Shield = 3,
		VerticalJet = 4,
		HorizontalJet = 5,
		SummonGun = 6,
		MAX = 7
	};

	/**
	 * Enum Solarland.ESolarBotTimelineTriggerType
	 */
	enum class ESolarBotTimelineTriggerType : uint8_t
	{
		None = 0,
		Timeline = 1,
		Guarantee = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.ESolarBotWarmSystemType
	 */
	enum class ESolarBotWarmSystemType : uint8_t
	{
		Regular = 0,
		Script = 1,
		Unknown = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.EBotShotTargetCtlType
	 */
	enum class EBotShotTargetCtlType : uint8_t
	{
		Player = 0,
		Bot = 1,
		Any = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.EBotShotTargetType
	 */
	enum class EBotShotTargetType : uint8_t
	{
		Character = 0,
		Vehicle = 1,
		SummonItem = 2,
		Any = 3,
		MAX = 4
	};

	/**
	 * Enum Solarland.EBotOnVehicleFireType
	 */
	enum class EBotOnVehicleFireType : uint8_t
	{
		None = 0,
		FireOn = 1,
		FireOnDelayOff = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.EBotOnVehicleStopType
	 */
	enum class EBotOnVehicleStopType : uint8_t
	{
		None = 0,
		Delay = 1,
		Stop = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.EBotFirePolicy
	 */
	enum class EBotFirePolicy : uint8_t
	{
		AlwaysFire = 0,
		FirstRoughMoveDone = 1,
		FirstPreciseMoveDone = 2,
		PreciseMoveOrGreater = 3,
		FollowMoveOrGreater = 4,
		OnlyWhenHitSimulatedTarget = 5,
		OnlyWhenHitLockedTarget = 6,
		MAX = 7
	};

	/**
	 * Enum Solarland.EBotActionState
	 */
	enum class EBotActionState : uint8_t
	{
		Sprite = 0,
		Crouch = 1,
		GunAim = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.EBotBunkerType
	 */
	enum class EBotBunkerType : uint8_t
	{
		Invalid = 0,
		FullSize = 1,
		HalfSize = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.EBotTeamVehicleDrivePolicy
	 */
	enum class EBotTeamVehicleDrivePolicy : uint8_t
	{
		DirectlyMove = 0,
		HoldAndWaitPassenger = 1,
		MoveAndTakePassenger = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.EPoisonResponseType
	 */
	enum class EPoisonResponseType : uint8_t
	{
		NoResponse = 0,
		LowPriority = 1,
		HighPriority = 2,
		Immediately = 3,
		MAX = 4
	};

	/**
	 * Enum Solarland.ESolarTaskScoringItemType
	 */
	enum class ESolarTaskScoringItemType : uint8_t
	{
		None = 0,
		CurrentHP = 1,
		IfSelfInBattle = 2,
		IfSelfInSafeArea = 3,
		IfSelfInPoisonCircle = 4,
		TimeToEnterSafeArea = 5,
		TimeToEnterPoisonCircleXPoisonDamage = 6,
		IfRelativeActorInSafeArea = 7,
		IfRelativeActorInPoisonCircle = 8,
		IfRescueTargetIsPlayer = 9,
		TimeToMovetoRescueTarget = 10,
		DistanceFromRescueTargetToSafeArea = 11,
		DistanceFromRescueTargetToPoisonCircleXPoisonDamage = 12,
		IfRescuingThisTarget = 13,
		IfRescuingOtherTarget = 14,
		TimePoisonToRescueTarget = 15,
		CurrentPoisonDamage = 16,
		MAX = 17
	};

	/**
	 * Enum Solarland.ESolarTeamTaskType
	 */
	enum class ESolarTeamTaskType : uint8_t
	{
		RescueTeammate = 0,
		MAX = 1
	};

	/**
	 * Enum Solarland.EJetTaskFinishMode
	 */
	enum class EJetTaskFinishMode : uint8_t
	{
		AfterResponded = 0,
		AfterDone = 1,
		MAX = 2
	};

	/**
	 * Enum Solarland.EJetPackMode
	 */
	enum class EJetPackMode : uint8_t
	{
		Horizontal = 0,
		Vertical = 1,
		MAX = 2
	};

	/**
	 * Enum Solarland.EJumpTaskFinishMode
	 */
	enum class EJumpTaskFinishMode : uint8_t
	{
		AfterResponded = 0,
		AfterApex = 1,
		AfterDone = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.EBotShootTargetType
	 */
	enum class EBotShootTargetType : uint8_t
	{
		Player = 0,
		Bot = 1,
		Vehicle = 2,
		Monster = 3,
		MAX = 4
	};

	/**
	 * Enum Solarland.ECameraShakeDurationType
	 */
	enum class ECameraShakeDurationType : uint8_t
	{
		Fixed = 0,
		Infinite = 1,
		Custom = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.ECameraShakeUpdateResultFlags
	 */
	enum class ECameraShakeUpdateResultFlags : uint8_t
	{
		ApplyAsAbsolute = 0,
		SkipAutoScale = 1,
		SkipAutoPlaySpace = 2,
		Default = 3,
		MAX = 4
	};

	/**
	 * Enum Solarland.ECameraShakePlaySpace
	 */
	enum class ECameraShakePlaySpace : uint8_t
	{
		CameraLocal = 0,
		World = 1,
		UserDefined = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.ECruiseStatePrivate
	 */
	enum class ECruiseStatePrivate : uint8_t
	{
		None = 0,
		Start = 1,
		CanParachute = 2,
		ForceParachute = 3,
		End = 4,
		MAX = 5
	};

	/**
	 * Enum Solarland.ERoleAbilityCancelPhase
	 */
	enum class ERoleAbilityCancelPhase : uint8_t
	{
		None = 0,
		Pressing = 1,
		Continuous = 2,
		All = 3,
		MAX = 4
	};

	/**
	 * Enum Solarland.CharacterRoleAbilityEnum
	 */
	enum class ECharacterRoleAbilityEnum : uint8_t
	{
		CharacterRoleAbilityEnumSuper = 0,
		CharacterRoleAbilityEnumTactical = 1,
		CharacterRoleAbilityEnumCount = 2,
		CharacterRoleAbilityEnumCharacterRoleAbilityEnum_MAX = 3
	};

	/**
	 * Enum Solarland.EMovementComponentEnableType
	 */
	enum class EMovementComponentEnableType : uint8_t
	{
		Default = 0,
		Dying = 1,
		OnLevelStreaming = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.EHitTraceType
	 */
	enum class EHitTraceType : uint8_t
	{
		None = 0,
		Sniper = 1,
		Default = 2,
		Bump = 3,
		Vehicle = 4,
		MAX = 5
	};

	/**
	 * Enum Solarland.EAntiCheatGameEvents
	 */
	enum class EAntiCheatGameEvents : uint8_t
	{
		ServerFire = 0,
		ServerHit = 1,
		ServerKill = 2,
		ServerKilled = 3,
		ClientFire = 4,
		ClientHit = 5,
		ClientKill = 6,
		ClientKilled = 7,
		ClientHitDown = 8,
		ClientBeHitDown = 9,
		ClientTick = 10,
		ServerTick = 11,
		ClientBeginPlay = 12,
		ServerBeginPlay = 13,
		ClientEndPlay = 14,
		ServerEndPlay = 15,
		EventMax = 16,
		MAX = 17
	};

	/**
	 * Enum Solarland.EClipAttachType
	 */
	enum class EClipAttachType : uint8_t
	{
		Weapon = 0,
		CharacterLeftHand = 1,
		CharacterRightHand = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.EAnimReloadNotifyType
	 */
	enum class EAnimReloadNotifyType : uint8_t
	{
		InHand = 0,
		InHandAndDrop = 1,
		GetOld = 2,
		InPocket = 3,
		Restore = 4,
		SpawnFakeOldClip = 5,
		PhysicsDropOldClip = 6,
		SpawnFakeNewClip = 7,
		RestoreClip = 8,
		MAX = 9
	};

	/**
	 * Enum Solarland.EWeaponSystemState
	 */
	enum class EWeaponSystemState : uint8_t
	{
		None = 0,
		PreReload = 1,
		PreOpenScope = 2,
		PreCloseScope = 3,
		PreFire = 4,
		PreSwitchWeapon = 5,
		PreDropCurrentWeapon = 6,
		PreFireOverload = 7,
		PreNeedBolt = 8,
		PreCharging = 9,
		PreReplaceWeapon = 10,
		PrePickupWeapon = 11,
		PreSwapWeapon = 12,
		Max = 13
	};

	/**
	 * Enum Solarland.ECamShakeType
	 */
	enum class ECamShakeType : uint8_t
	{
		Default = 0,
		JumpBegin = 1,
		JumpEndLight = 2,
		JumpEndHeavy = 3,
		FullBodyMeleeWithTarget = 4,
		FullBodyMeleeWithoutTarget = 5,
		TacticalDodgeForward = 6,
		TacticalDodgeBackward = 7,
		TacticalDodgeLeft = 8,
		TacticalDodgeRight = 9,
		MAX = 10
	};

	/**
	 * Enum Solarland.EGunsightCameraSwitchMode
	 */
	enum class EGunsightCameraSwitchMode : uint8_t
	{
		CloseScope = 0,
		CloseShoulderShot = 1,
		OpenShoulderShot = 2,
		OpenScope = 3,
		MAX = 4
	};

	/**
	 * Enum Solarland.ESolarCameraSmoothType
	 */
	enum class ESolarCameraSmoothType : uint8_t
	{
		Default = 0,
		Instant = 1,
		Constant = 2,
		EaseOut = 3,
		EaseInEaseOut = 4,
		FloatCurve = 5,
		MAX = 6
	};

	/**
	 * Enum Solarland.EReconnectionStatus
	 */
	enum class EReconnectionStatus : uint8_t
	{
		None = 0,
		Reconnecting = 1,
		Reconnected = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.EAnimDirection
	 */
	enum class EAnimDirection : uint8_t
	{
		AnimNone = 0,
		AnimForward = 1,
		AnimBackward = 2,
		AnimLeft = 3,
		AnimRight = 4,
		MAX = 5
	};

	/**
	 * Enum Solarland.ESkydiveEffectLifetime
	 */
	enum class ESkydiveEffectLifetime : uint8_t
	{
		DuringFlying = 0,
		DuringLanding = 1,
		DuringWholeSkydiving = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.RoleAbilityCommitPhase
	 */
	enum class ERoleAbilityCommitPhase : uint8_t
	{
		RoleAbilityCommitPhaseOnActive = 0,
		RoleAbilityCommitPhaseCustom = 1,
		RoleAbilityCommitPhaseRoleAbilityCommitPhase_MAX = 2
	};

	/**
	 * Enum Solarland.EUpdateWarmServiceEventType
	 */
	enum class EUpdateWarmServiceEventType : uint8_t
	{
		None = 0,
		CharacterUpgrade = 1,
		WeaponUpgrade = 2,
		ShieldUpgrade = 3,
		SuperAbilityReady = 4,
		TacticalAbilityReady = 5,
		BattleStation = 6,
		MAX = 7
	};

	/**
	 * Enum Solarland.EMassInVisibilityWarningType
	 */
	enum class EMassInVisibilityWarningType : uint8_t
	{
		None = 0,
		Character = 1,
		Vehicle = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.EHitRecoverType
	 */
	enum class EHitRecoverType : uint8_t
	{
		EHRT_Normal = 0,
		EHRT_DeathVerge = 1,
		EHRT_MAX = 2
	};

	/**
	 * Enum Solarland.EBResurrectionState
	 */
	enum class EBResurrectionState : uint8_t
	{
		NoneState = 0,
		WaitForApply = 1,
		NotApply = 2,
		Resurrected = 3,
		WaitForResurrect = 4,
		GiveUp = 5,
		Timeout = 6,
		AllTeammatesDied = 7,
		MAX = 8
	};

	/**
	 * Enum Solarland.EDroppedItemType
	 */
	enum class EDroppedItemType : uint8_t
	{
		Weapons = 0,
		WeaponParts = 1,
		Consumables = 2,
		Equipments = 3,
		MAX = 4
	};

	/**
	 * Enum Solarland.EBagScopeSlotType
	 */
	enum class EBagScopeSlotType : uint8_t
	{
		None = 0,
		Primary = 1,
		Second = 2,
		Bag = 3,
		MAX = 4
	};

	/**
	 * Enum Solarland.EBagGridType
	 */
	enum class EBagGridType : uint8_t
	{
		None = 0,
		Pick = 1,
		Normal = 2,
		Lock = 3,
		Fix = 4,
		MAX = 5
	};

	/**
	 * Enum Solarland.ETreatmentSoundType
	 */
	enum class ETreatmentSoundType : uint8_t
	{
		Healing = 0,
		Cancel = 1,
		StopHealing = 2,
		Completed = 3,
		MAX = 4
	};

	/**
	 * Enum Solarland.EShieldAutoRechargeStopReason
	 */
	enum class EShieldAutoRechargeStopReason : uint8_t
	{
		SwitchShield = 0,
		OnWeaponFire = 1,
		OnHit = 2,
		Die = 3,
		ShieldFull = 4,
		ManualRecharge = 5,
		MAX = 6
	};

	/**
	 * Enum Solarland.ECharacterStateForWeapon
	 */
	enum class ECharacterStateForWeapon : uint8_t
	{
		Unknown = 0,
		Standing = 1,
		Crouching = 2,
		Running = 3,
		Sprinting = 4,
		Jumping = 5,
		Flying = 6,
		MAX = 7
	};

	/**
	 * Enum Solarland.EPoseMode
	 */
	enum class EPoseMode : uint8_t
	{
		Stand = 0,
		Crouch = 1,
		Crawl = 2,
		Skydive = 3,
		MAX = 4
	};

	/**
	 * Enum Solarland.EPickUpTargetType
	 */
	enum class EPickUpTargetType : uint8_t
	{
		Invalid = 0,
		Item = 1,
		Weapon = 2,
		TreasureItem = 3,
		HomeItem = 4,
		BoxHomeItem = 5,
		MAX = 6
	};

	/**
	 * Enum Solarland.ESolarExpBehaviorType
	 */
	enum class ESolarExpBehaviorType : uint8_t
	{
		SurvivalTime = 0,
		Kills = 1,
		Assists = 2,
		Selfhealing = 3,
		TeammateHealing = 4,
		Unpacking = 5,
		CollectElectricity = 6,
		PickExpPack = 7,
		EveryDamageDealt = 8,
		MAX = 9
	};

	/**
	 * Enum Solarland.ESolarCheckButtonSelectType
	 */
	enum class ESolarCheckButtonSelectType : uint8_t
	{
		None = 0,
		Next = 1,
		Prev = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.EClassLevelUpRewardType
	 */
	enum class EClassLevelUpRewardType : uint8_t
	{
		BattleUpgradeEffect = 0,
		UpgradeSkill1 = 1,
		UpgradeSkill2 = 2,
		ClassCommonPassiveSkill = 3,
		ClassSpecificPassiveSkill = 4,
		Max = 5
	};

	/**
	 * Enum Solarland.EClassType
	 */
	enum class EClassType : uint8_t
	{
		None = 0,
		Assault = 1,
		Defence = 2,
		Support = 3,
		Scout = 4,
		MAX = 5
	};

	/**
	 * Enum Solarland.ESolarCrosshairType
	 */
	enum class ESolarCrosshairType : uint8_t
	{
		Weapon = 0,
		Feedback = 1,
		BulletContainer = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.ESolarDamageTextType
	 */
	enum class ESolarDamageTextType : uint8_t
	{
		DamageTextType_None = 0,
		DamageTextType_Common = 1,
		DamageTextType_Headshot = 2,
		DamageTextType_HitShield = 3,
		DamageTextType_HeadshotWithShield = 4,
		DamageTextType_HitVehicle = 5,
		DamageTextType_HitVehicleWeak = 6,
		DamageTextType_BrokenShiled = 7,
		DamageTextType_BrokenShieldWithHeadShot = 8,
		DamageTextType_HitSummonItem = 9,
		DamageTextType_MAX = 10
	};

	/**
	 * Enum Solarland.EUIDragSourceType
	 */
	enum class EUIDragSourceType : uint8_t
	{
		Default = 0,
		Weapon1 = 1,
		Weapon2 = 2,
		Weapon3 = 3,
		PickupList = 4,
		BackpackConsumable = 5,
		BackpackEquip = 6,
		BackpackPickupList = 7,
		MAX = 8
	};

	/**
	 * Enum Solarland.EShopStatisticType
	 */
	enum class EShopStatisticType : uint8_t
	{
		OnActivated = 0,
		OnUpgradeWeapon = 1,
		OnPurchaseItem = 2,
		OnItemRefresh = 3,
		OnUpgradeShield = 4,
		MAX = 5
	};

	/**
	 * Enum Solarland.EShopModelAnimType
	 */
	enum class EShopModelAnimType : uint8_t
	{
		Idle = 0,
		Upgrade = 1,
		Purchase = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.AIVehicleState
	 */
	enum class EAIVehicleState : uint8_t
	{
		AIVehicleState_Forward = 0,
		AIVehicleState_ReverseSolveBlock = 1,
		AIVehicleState_SolveBlockFoward = 2,
		AIVehicleState_ReverseToTarget = 3,
		AIVehicleState_MAX = 4
	};

	/**
	 * Enum Solarland.EAntiCheatReportType
	 */
	enum class EAntiCheatReportType : uint8_t
	{
		Player = 0,
		Weapon = 1,
		Vehicle = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.EActiveEffectDurationChangeProxy
	 */
	enum class EActiveEffectDurationChangeProxy : uint8_t
	{
		MaintainCurrent = 0,
		MaintainRemain = 1,
		ScalingCurrent = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.ESolarGAInputID
	 */
	enum class ESolarGAInputID : uint8_t
	{
		None = 0,
		Jump = 1,
		Crouch = 2,
		Sprint = 3,
		JetVertical = 4,
		JetHorizontal = 5,
		Parachute = 6,
		SkydiveAccelerate = 7,
		Fire = 8,
		OutVehicle = 9,
		SkillTest = 10,
		RoleSkillOne = 11,
		RoleSkillTwo = 12,
		MAX = 13
	};

	/**
	 * Enum Solarland.ELogChannel
	 */
	enum class ELogChannel : uint8_t
	{
		General = 0,
		Mode = 1,
		Hunt = 2,
		BattleRoyal = 3,
		Weapon = 4,
		Character = 5,
		Vehicle = 6,
		Camera = 7,
		Animation = 8,
		Physics = 9,
		Inventory = 10,
		World = 11,
		MAX = 12
	};

	/**
	 * Enum Solarland.EConfigVersion
	 */
	enum class EConfigVersion : uint8_t
	{
		BeforeCustomVersionWasAdded = 0,
		FixedCanAutoSteering = 1,
		FixedDefaultFOV = 2,
		VersionPlusOne = 3,
		LatestVersion = 4,
		MAX = 5
	};

	/**
	 * Enum Solarland.EBasicSettingBool
	 */
	enum class EBasicSettingBool : uint8_t
	{
		NotInit = 0,
		Off = 1,
		On = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.ESolarTouchAccMode
	 */
	enum class ESolarTouchAccMode : uint8_t
	{
		Velocity = 0,
		Constant = 1,
		Distance = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.ESolarAudioMode
	 */
	enum class ESolarAudioMode : uint8_t
	{
		PushToTalk = 0,
		FreeToTalk = 1,
		MAX = 2
	};

	/**
	 * Enum Solarland.ESolarSoundQuality
	 */
	enum class ESolarSoundQuality : uint8_t
	{
		NotInit = 0,
		Low = 1,
		High = 2,
		Ultra = 3,
		MAX = 4
	};

	/**
	 * Enum Solarland.ESolarWeaponDoScopeMode
	 */
	enum class ESolarWeaponDoScopeMode : uint8_t
	{
		Click = 0,
		Press = 1,
		Mixed = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.EWheeledVehicleDriveUserType
	 */
	enum class EWheeledVehicleDriveUserType : uint8_t
	{
		DirectionalInput = 0,
		SteeringInput = 1,
		JoyStickInput = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.ESolarDamageTextDisplayModeType
	 */
	enum class ESolarDamageTextDisplayModeType : uint8_t
	{
		DamageTextDisplayMode_Off = 0,
		DamageTextDisplayMode_Stacked = 1,
		DamageTextDisplayMode_Floating = 2,
		DamageTextDisplayMode_Combined = 3,
		DamageTextDisplayMode_MAX = 4
	};

	/**
	 * Enum Solarland.ESolarGameUserSettingPart
	 */
	enum class ESolarGameUserSettingPart : uint8_t
	{
		PickupSettings = 0,
		GraphicsSettings = 1,
		WeaponSettings = 2,
		LanguageSettings = 3,
		SoundSettings = 4,
		BasicSettings = 5,
		PersonalitySettings = 6,
		SensitivitySettings = 7,
		ShakeSettings = 8,
		DriverSettings = 9,
		ChatOperatorSettings = 10,
		SensitivitySettingsKeyboard = 11,
		SensitivitySettingsGamepad = 12,
		KeyboardControlSettings = 13,
		GamepadSettings = 14,
		GamepadAdvancedSettings = 15,
		All = 16,
		MAX = 17
	};

	/**
	 * Enum Solarland.EGraphicQualitySelect
	 */
	enum class EGraphicQualitySelect : uint8_t
	{
		Default = 0,
		Lobby = 1,
		InGame = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.ESolarChatOperatorType
	 */
	enum class ESolarChatOperatorType : uint8_t
	{
		All = 0,
		Team = 1,
		Off = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.ESolarShakeMainType
	 */
	enum class ESolarShakeMainType : uint8_t
	{
		OFF = 0,
		LOW = 1,
		MEDIUM = 2,
		HIGH = 3,
		MAX = 4
	};

	/**
	 * Enum Solarland.ESolarGyroscopeChooseType
	 */
	enum class ESolarGyroscopeChooseType : uint8_t
	{
		DefaultGyroscope = 0,
		ALWAYS = 1,
		FOCUS = 2,
		NEVER = 3,
		MAX = 4
	};

	/**
	 * Enum Solarland.ESolarColorBlindMode
	 */
	enum class ESolarColorBlindMode : uint8_t
	{
		Default = 0,
		RedGreen = 1,
		RedBlue = 2,
		YellowGreen = 3,
		MAX = 4
	};

	/**
	 * Enum Solarland.ESolarRenderingResolutionScaleLevel
	 */
	enum class ESolarRenderingResolutionScaleLevel : uint8_t
	{
		Default = 0,
		Percent25 = 1,
		Percent50 = 2,
		Percent75 = 3,
		Percent100 = 4,
		Invalid = 5,
		MAX = 6
	};

	/**
	 * Enum Solarland.ESolarPostProcessingEffectsLevel
	 */
	enum class ESolarPostProcessingEffectsLevel : uint8_t
	{
		Default = 0,
		Low = 1,
		Medium = 2,
		High = 3,
		ExtraHigh = 4,
		MAX = 5
	};

	/**
	 * Enum Solarland.ESolarReflectionQualityLevel
	 */
	enum class ESolarReflectionQualityLevel : uint8_t
	{
		Off = 0,
		Low = 1,
		Medium = 2,
		High = 3,
		ExtraHigh = 4,
		Invalid = 5,
		MAX = 6
	};

	/**
	 * Enum Solarland.ESolarSSGIQualityLevel
	 */
	enum class ESolarSSGIQualityLevel : uint8_t
	{
		Off = 0,
		Low = 1,
		Medium = 2,
		High = 3,
		ExtraHigh = 4,
		Invalid = 5,
		MAX = 6
	};

	/**
	 * Enum Solarland.ESolarAmbientOcclusionQualityLevel
	 */
	enum class ESolarAmbientOcclusionQualityLevel : uint8_t
	{
		Off = 0,
		Low = 1,
		Medium = 2,
		High = 3,
		Invalid = 4,
		MAX = 5
	};

	/**
	 * Enum Solarland.ESolarPointLightShadowDetailsLevel
	 */
	enum class ESolarPointLightShadowDetailsLevel : uint8_t
	{
		Off = 0,
		Low = 1,
		Medium = 2,
		High = 3,
		VeryHigh = 4,
		ExtraHigh = 5,
		MAX = 6
	};

	/**
	 * Enum Solarland.ESolarMaxCSMResolutionLevel
	 */
	enum class ESolarMaxCSMResolutionLevel : uint8_t
	{
		Off = 0,
		Low = 1,
		Medium = 2,
		High = 3,
		Invalid = 4,
		MAX = 5
	};

	/**
	 * Enum Solarland.ESolarSunlightShadowDetailLevel
	 */
	enum class ESolarSunlightShadowDetailLevel : uint8_t
	{
		Off = 0,
		Low = 1,
		Medium = 2,
		High = 3,
		Invalid = 4,
		MAX = 5
	};

	/**
	 * Enum Solarland.ESolarAnisotropicFilterLevel
	 */
	enum class ESolarAnisotropicFilterLevel : uint8_t
	{
		Default = 0,
		Level1X = 1,
		Level2X = 2,
		Level4X = 3,
		Level8X = 4,
		Level16X = 5,
		Invalid = 6,
		MAX = 7
	};

	/**
	 * Enum Solarland.ESolarAntiAliasingLevel
	 */
	enum class ESolarAntiAliasingLevel : uint8_t
	{
		Off = 0,
		FXAA = 1,
		TAA = 2,
		MSAA = 3,
		Invalid = 4,
		MAX = 5
	};

	/**
	 * Enum Solarland.ESolarMotionBlurLevel
	 */
	enum class ESolarMotionBlurLevel : uint8_t
	{
		Off = 0,
		Low = 1,
		Medium = 2,
		High = 3,
		Ultra = 4,
		Invalid = 5,
		MAX = 6
	};

	/**
	 * Enum Solarland.ESolarVSyncLevel
	 */
	enum class ESolarVSyncLevel : uint8_t
	{
		Off = 0,
		DoubleBuffered = 1,
		TripleBuffered = 2,
		Invalid = 3,
		MAX = 4
	};

	/**
	 * Enum Solarland.ESolarRayTracingLevel
	 */
	enum class ESolarRayTracingLevel : uint8_t
	{
		Off = 0,
		HighPerformance = 1,
		HighQuality = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.ESolarNvdiaReflexLevel
	 */
	enum class ESolarNvdiaReflexLevel : uint8_t
	{
		Off = 0,
		On = 1,
		High = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.ESolarGraphicQuality
	 */
	enum class ESolarGraphicQuality : uint8_t
	{
		Default = 0,
		Low = 1,
		Medium = 2,
		High = 3,
		MAX = 4
	};

	/**
	 * Enum Solarland.ESolarFPS
	 */
	enum class ESolarFPS : uint8_t
	{
		Default = 0,
		FPS30 = 1,
		FPS60 = 2,
		FPS90 = 3,
		FPS120 = 4,
		FPS144 = 5,
		FPS240 = 6,
		FPS360 = 7,
		FPS500 = 8,
		SameWithMonitor = 9,
		MAX = 10
	};

	/**
	 * Enum Solarland.ESolarGraphicsMode
	 */
	enum class ESolarGraphicsMode : uint8_t
	{
		Default = 0,
		HighPerformance = 1,
		HighQuality = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.ESolarMonitor
	 */
	enum class ESolarMonitor : uint8_t
	{
		Default = 0,
		Monitor1 = 1,
		Monitor2 = 2,
		Monitor3 = 3,
		MAX = 4
	};

	/**
	 * Enum Solarland.ESolarResolution
	 */
	enum class ESolarResolution : uint8_t
	{
		Default = 0,
		Resolution1 = 1,
		Resolution2 = 2,
		Resolution3 = 3,
		Resolution4 = 4,
		Resolution5 = 5,
		MAX = 6
	};

	/**
	 * Enum Solarland.ESolarWheelModeType
	 */
	enum class ESolarWheelModeType : uint8_t
	{
		Default = 0,
		Click = 1,
		Release = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.ESolarSprintModeType
	 */
	enum class ESolarSprintModeType : uint8_t
	{
		Default = 0,
		Pressing = 1,
		Toggle = 2,
		Auto = 3,
		MAX = 4
	};

	/**
	 * Enum Solarland.ESolarAimModeType
	 */
	enum class ESolarAimModeType : uint8_t
	{
		Default = 0,
		Change = 1,
		Press = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.ESolarColorTheme
	 */
	enum class ESolarColorTheme : uint8_t
	{
		ESCT_Default = 0,
		ESCT_Bright = 1,
		ESCT_Soft = 2,
		ESCT_Cold = 3,
		ESCT_MAX = 4
	};

	/**
	 * Enum Solarland.ESolarFrameRateLevel
	 */
	enum class ESolarFrameRateLevel : uint8_t
	{
		ESFRL_NONE = 0,
		ESFRL_Low = 1,
		ESFRL_Mid = 2,
		ESFRL_High = 3,
		ESFRL_HighEnd = 4,
		ESFRL_EXTREME = 5,
		ESFRL_MAX = 6
	};

	/**
	 * Enum Solarland.ESolarContentScaleFactorLevel
	 */
	enum class ESolarContentScaleFactorLevel : uint8_t
	{
		ESCSFL_NONE = 0,
		ESCSFL_Low = 1,
		ESCSFL_Mid = 2,
		ESCSFL_High = 3,
		ESCSFL_HighEnd = 4,
		ESCSFL_MAX = 5
	};

	/**
	 * Enum Solarland.ESolarDeviceType
	 */
	enum class ESolarDeviceType : uint8_t
	{
		ESDT_Invalid = 0,
		ESDT_Windows = 1,
		ESDT_Android = 2,
		ESDT_IOS = 3,
		ESDT_Switch = 4,
		ESDT_Other = 5,
		ESDT_MAX = 6
	};

	/**
	 * Enum Solarland.ESolarDeviceLevel
	 */
	enum class ESolarDeviceLevel : uint8_t
	{
		ESDL_Invalid = 0,
		ESDL_Level1 = 1,
		ESDL_Level2 = 2,
		ESDL_Level3 = 3,
		ESDL_Level4 = 4,
		ESDL_Level5 = 5,
		ESDL_Level6 = 6,
		ESDL_Level7 = 7,
		ESDL_VALUE_MIN = 8,
		ESDL_VALUE_MAX = 9,
		ESDL_MAX = 10
	};

	/**
	 * Enum Solarland.ESolarGraphicsQualityLevel
	 */
	enum class ESolarGraphicsQualityLevel : uint8_t
	{
		ESGQL_Invalid = 0,
		ESGQL_Level1 = 1,
		ESGQL_Level2 = 2,
		ESGQL_Level3 = 3,
		ESGQL_Level4 = 4,
		ESGQL_Level5 = 5,
		ESGQL_Level6 = 6,
		ESGQL_Level7 = 7,
		ESGQL_VALUE_MIN = 8,
		ESGQL_VALUE_MAX = 9,
		ESGQL_MAX = 10
	};

	/**
	 * Enum Solarland.EHomeCameraMode
	 */
	enum class EHomeCameraMode : uint8_t
	{
		Normal = 0,
		Ceiling = 1,
		Panoramic = 2,
		Orthographic = 3,
		MAX = 4
	};

	/**
	 * Enum Solarland.EHomeLoadingChangeType
	 */
	enum class EHomeLoadingChangeType : uint8_t
	{
		NONE = 0,
		OPEN = 1,
		CLOSE = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.EHomeOperationType
	 */
	enum class EHomeOperationType : uint8_t
	{
		NONE = 0,
		CREATE = 1,
		UPDATE = 2,
		REMOVE = 3,
		MAX = 4
	};

	/**
	 * Enum Solarland.EHomeDragUIType
	 */
	enum class EHomeDragUIType : uint8_t
	{
		NONE = 0,
		ARROW = 1,
		ROUND = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.EHomeActorOwner
	 */
	enum class EHomeActorOwner : uint8_t
	{
		NOBODY = 0,
		SELF = 1,
		OTHERS = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.EHomeActorSurfaceDir
	 */
	enum class EHomeActorSurfaceDir : uint8_t
	{
		NONE = 0,
		FORWARD = 1,
		BACKWARD = 2,
		LEFT = 3,
		RIGHT = 4,
		UP = 5,
		DOWN = 6,
		MAX = 7
	};

	/**
	 * Enum Solarland.EHomeActor_SecondType
	 */
	enum class EHomeActor_SecondType : uint8_t
	{
		NONE = 0,
		CONSTRUCT_BASE = 1,
		CONSTRUCT_FLOOR = 2,
		CONSTRUCT_WALL = 3,
		DEVICE_ON_FLOOR = 4,
		DEVICE_ON_WALL = 5,
		DEVICE_ON_CEILING = 6,
		EHomeActor_MAX = 7
	};

	/**
	 * Enum Solarland.EHomeActor_FirstType
	 */
	enum class EHomeActor_FirstType : uint8_t
	{
		NONE = 0,
		CONSTRUCT = 1,
		DEVICE = 2,
		EHomeActor_MAX = 3
	};

	/**
	 * Enum Solarland.EHoverCraftHitType
	 */
	enum class EHoverCraftHitType : uint8_t
	{
		Default = 0,
		HoverCraftVehicle = 1,
		HoverVehicle = 2,
		LeggedVehicle = 3,
		WheeledVehicle = 4,
		MAX = 5
	};

	/**
	 * Enum Solarland.EInputKeyMappingType
	 */
	enum class EInputKeyMappingType : uint8_t
	{
		KeyAndMouse1 = 0,
		KeyAndMouse2 = 1,
		Gamepad = 2,
		Count = 3,
		MAX = 4
	};

	/**
	 * Enum Solarland.EInputActionContextType
	 */
	enum class EInputActionContextType : uint8_t
	{
		Pawn = 0,
		Controller = 1,
		LevelScriptActor = 2,
		UserWidget = 3,
		Count = 4,
		MAX = 5
	};

	/**
	 * Enum Solarland.EGamepadDPad
	 */
	enum class EGamepadDPad : uint8_t
	{
		None = 0,
		Reset = 1,
		Up = 2,
		Down = 3,
		Right = 4,
		Left = 5,
		MAX = 6
	};

	/**
	 * Enum Solarland.EInputActionFlags
	 */
	enum class EInputActionFlags : uint8_t
	{
		None = 0,
		FlagBigMap = 1,
		FlagBackpack = 2,
		FlagChatWheel = 3,
		FlagParachute = 4,
		FlagSpectate = 5,
		FlagTeamDeath = 6,
		FlagRelive = 7,
		FlagBlockAll = 8,
		FlagMax = 9,
		MAX = 10
	};

	/**
	 * Enum Solarland.ESolarInteractionType
	 */
	enum class ESolarInteractionType : uint8_t
	{
		Invalid = 0,
		RescueTeammate = 1,
		ReviveTeammate = 2,
		OpenAirdrop = 3,
		MAX = 4
	};

	/**
	 * Enum Solarland.ESolarItemPrivilegeType
	 */
	enum class ESolarItemPrivilegeType : uint8_t
	{
		NONE = 0,
		NETBAR = 1,
		MAX = 2
	};

	/**
	 * Enum Solarland.ESolarItemShowType
	 */
	enum class ESolarItemShowType : uint8_t
	{
		NOTSHOW = 0,
		SHOW = 1,
		MAX = 2
	};

	/**
	 * Enum Solarland.ESolarRedHintType
	 */
	enum class ESolarRedHintType : uint8_t
	{
		ZERO = 0,
		SHOW = 1,
		HIDE = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.ESolarItemOwnType
	 */
	enum class ESolarItemOwnType : uint8_t
	{
		ZERO = 0,
		NOOWN = 1,
		OWN = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.ESolarItemBuyType
	 */
	enum class ESolarItemBuyType : uint8_t
	{
		ZERO = 0,
		NOBUY = 1,
		BUY = 2,
		CANTBUY = 3,
		MAX = 4
	};

	/**
	 * Enum Solarland.ESolarItemUseType
	 */
	enum class ESolarItemUseType : uint8_t
	{
		ZERO = 0,
		NOUSE = 1,
		USING = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.ESolarItemLimitType
	 */
	enum class ESolarItemLimitType : uint8_t
	{
		ZERO = 0,
		NOLIMIT = 1,
		LIMITING = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.ESolarItemMarkType
	 */
	enum class ESolarItemMarkType : uint8_t
	{
		ZERO = 0,
		NOMARK = 1,
		MARKED = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.ESolarItemDownloadType
	 */
	enum class ESolarItemDownloadType : uint8_t
	{
		ZERO = 0,
		NOTDOWNLOAD = 1,
		DOWNLOADING = 2,
		DOWNLOADED = 3,
		PAUSING = 4,
		MAX = 5
	};

	/**
	 * Enum Solarland.ESolarItemLockType
	 */
	enum class ESolarItemLockType : uint8_t
	{
		ZERO = 0,
		NOLOCK = 1,
		LOCKED = 2,
		TEMPUNLOCK = 3,
		MAX = 4
	};

	/**
	 * Enum Solarland.ESolarItemSelectType
	 */
	enum class ESolarItemSelectType : uint8_t
	{
		ZERO = 0,
		NOTSELECT = 1,
		SELECTED = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.ESolarItemQualityType
	 */
	enum class ESolarItemQualityType : uint8_t
	{
		ZERO = 0,
		N = 1,
		R = 2,
		SR = 3,
		SSR = 4,
		SSRPLUS = 5,
		MAX = 6
	};

	/**
	 * Enum Solarland.EBurstMethod
	 */
	enum class EBurstMethod : uint8_t
	{
		ParabCurveFitting = 0,
		GoldenSpiral = 1,
		MAX = 2
	};

	/**
	 * Enum Solarland.ESpecialItemID
	 */
	enum class ESpecialItemID : uint8_t
	{
		NONE = 0,
		CARIRIDGE_BAG = 1,
		REVIVE_ITEM = 2,
		RADAR_SCANNER = 3,
		SHIELD_RECHARGER = 4,
		SHIELD_BIG_RECHARGER = 5,
		AMMO_ASSAULT_RIFLE = 6,
		AMMO_RIFLE = 7,
		AMMO_SNIPER = 8,
		AMMO_SHOTGUN = 9,
		SHIELD_UPGRADE_MATERIAL = 10,
		EXP_ITEM = 11,
		MAX = 12
	};

	/**
	 * Enum Solarland.EItemConfirmID
	 */
	enum class EItemConfirmID : uint8_t
	{
		DropExtraEnergyConfirmID = 0,
		ReplaceExtraEnergyConfirmID = 1,
		DropEnergyModuleConfirmID = 2,
		ReplaceEnergyModuleConfirmID = 3,
		MAX = 4
	};

	/**
	 * Enum Solarland.EItemLocalTextID
	 */
	enum class EItemLocalTextID : uint8_t
	{
		LevelNumTextID = 0,
		MAX = 1
	};

	/**
	 * Enum Solarland.EItemNoticeID
	 */
	enum class EItemNoticeID : uint8_t
	{
		BoxBeUsing = 0,
		CantEquipThisScope = 1,
		CantEquipThisPart = 2,
		WillEquipLowLevelScope = 3,
		WillEquipLowLevelPart = 4,
		HasBetterPart = 5,
		HasBetterScope = 6,
		GetItem = 7,
		GetHomeItem = 8,
		EquipReplace = 9,
		DropItemNotAutoPickup = 10,
		ItemMaxPile = 11,
		ReviveItemMaxPile = 12,
		CantPickupReviveItem = 13,
		MAX = 14
	};

	/**
	 * Enum Solarland.ESpawnStage
	 */
	enum class ESpawnStage : uint8_t
	{
		STAGE_NONE = 0,
		STAGE_READY = 1,
		STAGE_BATTLE = 2,
		STAGE_ALL = 3,
		STAGE_MAX = 4
	};

	/**
	 * Enum Solarland.EOutcomeType
	 */
	enum class EOutcomeType : uint8_t
	{
		None = 0,
		Single = 1,
		Pool = 2,
		DynamicPool = 3,
		MAX = 4
	};

	/**
	 * Enum Solarland.EItemSourceType
	 */
	enum class EItemSourceType : uint8_t
	{
		None = 0,
		DeathTreasureBox = 1,
		TreasureBox = 2,
		AirDropTreasureBox = 3,
		Max = 4
	};

	/**
	 * Enum Solarland.EItemDiscardState
	 */
	enum class EItemDiscardState : uint8_t
	{
		DEFAULT = 0,
		DEATHBOX = 1,
		MAX = 2
	};

	/**
	 * Enum Solarland.EItemState
	 */
	enum class EItemState : uint8_t
	{
		NONE = 0,
		POSSESS = 1,
		DISCARD = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.EItemQualityType
	 */
	enum class EItemQualityType : uint8_t
	{
		None = 0,
		White = 1,
		Green = 2,
		Blue = 3,
		Purple = 4,
		Orange = 5,
		Red = 6,
		MAX = 7
	};

	/**
	 * Enum Solarland.ESpawnerLevel
	 */
	enum class ESpawnerLevel : uint8_t
	{
		LEVEL = 0,
		LEVEL01 = 1,
		LEVEL02 = 2,
		LEVEL03 = 3,
		LEVEL_MAX = 4
	};

	/**
	 * Enum Solarland.ESpawnerType
	 */
	enum class ESpawnerType : uint8_t
	{
		NONE = 0,
		NORMAL = 1,
		TREASUREBOX = 2,
		AIRDROP = 3,
		VEHICLE = 4,
		MAX = 5
	};

	/**
	 * Enum Solarland.OnLSDestroyStrategy
	 */
	enum class EOnLSDestroyStrategy : uint8_t
	{
		OnLSDestroyStrategyCustom = 0,
		OnLSDestroyStrategySelfDestroy = 1,
		OnLSDestroyStrategyFreeFall = 2,
		OnLSDestroyStrategyOnLSDestroyStrategy_MAX = 3
	};

	/**
	 * Enum Solarland.OnLSModifiedStrategy
	 */
	enum class EOnLSModifiedStrategy : uint8_t
	{
		OnLSModifiedStrategyCustom = 0,
		OnLSModifiedStrategyUpdateHeight = 1,
		OnLSModifiedStrategyOnLSModifiedStrategy_MAX = 2
	};

	/**
	 * Enum Solarland.ELayoutDataType
	 */
	enum class ELayoutDataType : uint8_t
	{
		Invalid = 0,
		Mobile = 1,
		Desktop = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.EWalkingDirection
	 */
	enum class EWalkingDirection : uint8_t
	{
		None = 0,
		Forward = 1,
		Backward = 2,
		Left = 3,
		Right = 4,
		MAX = 5
	};

	/**
	 * Enum Solarland.EVehicleShrinkCapsuleExtent
	 */
	enum class EVehicleShrinkCapsuleExtent : uint8_t
	{
		SHRINK_None = 0,
		SHRINK_RadiusCustom = 1,
		SHRINK_HeightCustom = 2,
		SHRINK_AllCustom = 3,
		SHRINK_MAX = 4
	};

	/**
	 * Enum Solarland.EVehicleLocomotionState
	 */
	enum class EVehicleLocomotionState : uint8_t
	{
		Walk = 0,
		Run = 1,
		Sprint = 2,
		Max = 3
	};

	/**
	 * Enum Solarland.ESolarBuildConfiguration
	 */
	enum class ESolarBuildConfiguration : uint8_t
	{
		Unknown = 0,
		Debug = 1,
		Development = 2,
		Shipping = 3,
		Test = 4,
		MAX = 5
	};

	/**
	 * Enum Solarland.EElementVisibilityType
	 */
	enum class EElementVisibilityType : uint8_t
	{
		Visible = 0,
		Hidden = 1,
		MAX = 2
	};

	/**
	 * Enum Solarland.EElementStateType
	 */
	enum class EElementStateType : uint8_t
	{
		Normal = 0,
		Suspend = 1,
		MAX = 2
	};

	/**
	 * Enum Solarland.ESolarMapElementPropertyType
	 */
	enum class ESolarMapElementPropertyType : uint8_t
	{
		String = 0,
		Float = 1,
		Int = 2,
		Bool = 3,
		MAX = 4
	};

	/**
	 * Enum Solarland.ESGameMode_ElementType
	 */
	enum class ESGameMode_ElementType : uint8_t
	{
		PlayerStart = 0,
		ItemSpawner = 1,
		AirDrop = 2,
		ChargingPile = 3,
		JumpPad = 4,
		CarPad = 5,
		Vehicle = 6,
		Poison = 7,
		Custom = 8,
		ESGameMode_MAX = 9
	};

	/**
	 * Enum Solarland.EMapDarkDataType
	 */
	enum class EMapDarkDataType : uint8_t
	{
		POISONCIRCLE = 0,
		MAX = 1
	};

	/**
	 * Enum Solarland.EMapAirlineType
	 */
	enum class EMapAirlineType : uint8_t
	{
		Default = 0,
		Capsule = 1,
		Airdrop = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.EDirection
	 */
	enum class EDirection : uint8_t
	{
		TOP = 0,
		BOTTOM = 1,
		LEFT = 2,
		RIGHT = 3,
		MAX = 4
	};

	/**
	 * Enum Solarland.EBattlePromptType
	 */
	enum class EBattlePromptType : uint8_t
	{
		None = 0,
		Player = 1,
		Vehicle = 2,
		Move = 3,
		Fire = 4,
		HeavyWeapon = 5,
		Crouch = 6,
		Skydive = 7,
		PlayerStep = 8,
		VehicleMove = 9,
		PlayerCrouchMove = 10,
		PlayerSkydive = 11,
		PlayerFire = 12,
		VehicleFire = 13,
		PlayerHeavyFire = 14,
		VehicleHeavyFire = 15,
		MAX = 16
	};

	/**
	 * Enum Solarland.EMarkerType
	 */
	enum class EMarkerType : uint8_t
	{
		NONE = 0,
		ENEMYSTEP = 1,
		ENEMYFIGHT = 2,
		AIRDROPBOX = 3,
		REDZONE = 4,
		VEHICLEVOICE = 5,
		VEHICLEMARK = 6,
		ENEMYLAUNCH = 7,
		VEHICLELAUNCH = 8,
		SKILLBUFFMARK = 9,
		RADARCharacter = 10,
		RADARCharacterWithAngle = 11,
		RADARVehicle = 12,
		RADARTreasureBox = 13,
		RADARChargingPile = 14,
		RADAR = 15,
		ELECTRICSHOP = 16,
		PARACHUTE = 17,
		RESPAWN = 18,
		SHIELDUPGRADEITEMSHOP = 19,
		ReviveTeammate = 20,
		BLUECIRCLE = 21,
		MAX = 22
	};

	/**
	 * Enum Solarland.EMovablePadLimitationFlag
	 */
	enum class EMovablePadLimitationFlag : uint8_t
	{
		None = 0,
		NoPress = 1,
		NoRelease = 2,
		NoMove = 3,
		NoPressAndRelease = 4,
		NoPressAndMove = 5,
		NoReleaseAndMove = 6,
		MAX = 7
	};

	/**
	 * Enum Solarland.ENavLinkType
	 */
	enum class ENavLinkType : uint8_t
	{
		Jet = 0,
		Vault = 1,
		None = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.EOwnerType
	 */
	enum class EOwnerType : uint8_t
	{
		None = 0,
		Vehicle = 1,
		TreasureBox = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.ERestState
	 */
	enum class ERestState : uint8_t
	{
		AT_REST = 0,
		JUST_STARTED_MOVING = 1,
		MOVING = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.EExtrapolationMode
	 */
	enum class EExtrapolationMode : uint8_t
	{
		UNLIMITED = 0,
		LIMITED = 1,
		NONE = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.ESyncMode
	 */
	enum class ESyncMode : uint8_t
	{
		NONE = 0,
		X = 1,
		Y = 2,
		Z = 3,
		XY = 4,
		XZ = 5,
		YZ = 6,
		XYZ = 7,
		MAX = 8
	};

	/**
	 * Enum Solarland.ENightComesState
	 */
	enum class ENightComesState : uint8_t
	{
		None = 0,
		Begin = 1,
		Ongoing = 2,
		End = 3,
		MAX = 4
	};

	/**
	 * Enum Solarland.EPerceivableEffectAreaTendency
	 */
	enum class EPerceivableEffectAreaTendency : uint8_t
	{
		Hostile = 0,
		Neutral = 1,
		Friendly = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.EPerceivableEffectAreaType
	 */
	enum class EPerceivableEffectAreaType : uint8_t
	{
		Unknow = 0,
		SmokeGrenade = 1,
		NightCome = 2,
		AutomaticTurret = 3,
		BlackHole = 4,
		Incendiary = 5,
		EnergyBubble = 6,
		SummonWall = 7,
		UAVShield = 8,
		UAVRescue = 9,
		HealPile = 10,
		MAX = 11
	};

	/**
	 * Enum Solarland.EPickupListItemType
	 */
	enum class EPickupListItemType : uint8_t
	{
		None = 0,
		Single = 1,
		Merge = 2,
		Customize = 3,
		MAX = 4
	};

	/**
	 * Enum Solarland.EPickupListChangeReason
	 */
	enum class EPickupListChangeReason : uint8_t
	{
		Default = 0,
		Backpack = 1,
		Skill = 2,
		Weapon = 3,
		MAX = 4
	};

	/**
	 * Enum Solarland.ESolarPileType
	 */
	enum class ESolarPileType : uint8_t
	{
		ChargingPile = 0,
		HealPile = 1,
		MAX = 2
	};

	/**
	 * Enum Solarland.EChargingChannel
	 */
	enum class EChargingChannel : uint8_t
	{
		MAIN = 0,
		EXTRA = 1,
		MAX = 2
	};

	/**
	 * Enum Solarland.EPileHealingType
	 */
	enum class EPileHealingType : uint8_t
	{
		None = 0,
		Health = 1,
		Armor = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.ELevelTickType
	 */
	enum class ELevelTickType : uint8_t
	{
		LEVELTICK_TimeOnly = 0,
		LEVELTICK_ViewportsOnly = 1,
		LEVELTICK_All = 2,
		LEVELTICK_PauseTick = 3,
		LEVELTICK_MAX = 4
	};

	/**
	 * Enum Solarland.EInteractiveFlag
	 */
	enum class EInteractiveFlag : uint8_t
	{
		None = 0,
		DanceLearder = 1,
		MAX = 2
	};

	/**
	 * Enum Solarland.ESolarPlayerSensitivitysType
	 */
	enum class ESolarPlayerSensitivitysType : uint8_t
	{
		None = 0,
		HoldWeaponSensitivity = 1,
		WeaponShootSensitivity = 2,
		WeaponShoulderNoShotSensitivity = 3,
		WeaponShoulderShotSensitivity = 4,
		WeaponSkillSensitivity = 5,
		SightSensitivity = 6,
		ScopeSensitivity = 7,
		ScopeShootSensitivity = 8,
		VehicleDriverSensitivity = 9,
		VehicleFireSensitivity = 10,
		SuperSkillSensitivity = 11,
		TacticalSkillSensitivity = 12,
		MAX = 13
	};

	/**
	 * Enum Solarland.ECharacterOwnerType
	 */
	enum class ECharacterOwnerType : uint8_t
	{
		CSITNone = 0,
		CSITOwn = 1,
		CSITExperience = 2,
		CSITLimit = 3,
		CSITPrivilege = 4,
		MAX = 5
	};

	/**
	 * Enum Solarland.EWeaponAttachState
	 */
	enum class EWeaponAttachState : uint8_t
	{
		NONE = 0,
		AttachOnHand = 1,
		AttachOnBackpack = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.EWeaponRVCmd
	 */
	enum class EWeaponRVCmd : uint8_t
	{
		Cmd_None = 0,
		LocalHold = 1,
		OtherHold = 2,
		Dropped = 3,
		ReplacePart = 4,
		SkinRefresh = 5,
		MAX = 6
	};

	/**
	 * Enum Solarland.EPreservedBotType
	 */
	enum class EPreservedBotType : uint8_t
	{
		PendingInit = 0,
		OnCall = 1,
		WaitingForSend = 2,
		Killer = 3,
		WaitingToDie = 4,
		MAX = 5
	};

	/**
	 * Enum Solarland.ESolarProjBulletCollisionType
	 */
	enum class ESolarProjBulletCollisionType : uint8_t
	{
		Shape = 0,
		Box = 1,
		MAX = 2
	};

	/**
	 * Enum Solarland.ERadarType
	 */
	enum class ERadarType : uint8_t
	{
		ERT_WholeMap = 0,
		ERT_FollowSpawner = 1,
		ERT_FixedRound = 2,
		ERT_UAV = 3,
		ERT_OneTimeScan = 4,
		ERT_MAX = 5
	};

	/**
	 * Enum Solarland.ERedHintPath
	 */
	enum class ERedHintPath : uint8_t
	{
		None = 0,
		Root = 1,
		Social = 2,
		Arsenal = 3,
		Arsenal_Weapon = 4,
		Arsenal_Skin = 5,
		Arsenal_Part = 6,
		Shop = 7,
		Mail = 8,
		Capsulers = 9,
		Capsulers_Detail = 10,
		Capsulers_Story = 11,
		Capsulers_Skin = 12,
		Capsulers_LevelUp = 13,
		Capsulers_Pose = 14,
		Capsulers_PoseTab = 15,
		Capsulers_BG = 16,
		Capsulers_BGTab = 17,
		Capsulers_BGFrame = 18,
		Capsulers_BGFrameTab = 19,
		Capsulers_DeathBox = 20,
		Capsulers_DeathBoxTab = 21,
		Capsulers_Voice = 22,
		Capsulers_VoiceKillVoice = 23,
		Capsulers_VoiceTeamDie = 24,
		Capsulers_VoiceTopKill = 25,
		Capsulers_VoiceParachute = 26,
		Capsulers_VoiceBattleTab = 27,
		Capsulers_VoicePersonalityTab = 28,
		Capsulers_VoiceTab = 29,
		WareHouse = 30,
		Task = 31,
		Activity = 32,
		RankFight = 33,
		Achievement = 34,
		EditBusinessCard = 35,
		PlayerInfo = 36,
		GameMode = 37,
		Raffle = 38,
		Vehicle = 39,
		Vehicle_Skin = 40,
		Clan = 41,
		ClanPermission = 42,
		Collection = 43,
		Tournament = 44,
		VipCard = 45,
		ClanMember = 46,
		Max = 47
	};

	/**
	 * Enum Solarland.ERedHintValueType
	 */
	enum class ERedHintValueType : uint8_t
	{
		Single = 0,
		MultiValue = 1,
		MAX = 2
	};

	/**
	 * Enum Solarland.ECharacterSkydivingState
	 */
	enum class ECharacterSkydivingState : uint8_t
	{
		EveryBattle = 0,
		Flying = 1,
		Skydiving = 2,
		Landing = 3,
		Num = 4,
		MAX = 5
	};

	/**
	 * Enum Solarland.EReplayDamageSourceType
	 */
	enum class EReplayDamageSourceType : uint8_t
	{
		None = 0,
		Weapon = 1,
		Vehicle = 2,
		Skill = 3,
		MAX = 4
	};

	/**
	 * Enum Solarland.ENarrateActivityType
	 */
	enum class ENarrateActivityType : uint8_t
	{
		None = 0,
		OnEngage = 1,
		OnScramble = 2,
		WeaponKnockdown = 3,
		VehicleKnockdown = 4,
		AbilityKnockdown = 5,
		OnKilled = 6,
		OnPickUpItem = 7,
		OnDriveVehicle = 8,
		OnGameStart = 9,
		OnChangeScene = 10,
		OnTeamEliminate = 11,
		OnReaperKilled = 12,
		OnVictory = 13,
		OnMultiKill = 14,
		OnChatInformative = 15,
		OnGameEnd = 16,
		OnInterrupt = 17,
		OnCheatKickOut = 18,
		MAX = 19
	};

	/**
	 * Enum Solarland.EAutoDirectorActivityType
	 */
	enum class EAutoDirectorActivityType : uint8_t
	{
		None = 0,
		PlayerWeaponHit = 1,
		PlayerWeaponDown = 2,
		PlayerWeaponKill = 3,
		PickupItem = 4,
		DriveVehicle = 5,
		VehicleWeaponHit = 6,
		VehicleWeaponDown = 7,
		VehicleWeaponKill = 8,
		BandagePlayer = 9,
		RevivePlayer = 10,
		UseTacticalAbility = 11,
		UseUltimateAbility = 12,
		AbilityDown = 13,
		AbilityKill = 14,
		StartSkydive = 15,
		MAX = 16
	};

	/**
	 * Enum Solarland.EAutoDirectorCameraMode
	 */
	enum class EAutoDirectorCameraMode : uint8_t
	{
		Free = 0,
		Follow = 1,
		MAX = 2
	};

	/**
	 * Enum Solarland.EReplayFindSpectateTargetApproach
	 */
	enum class EReplayFindSpectateTargetApproach : uint8_t
	{
		None = 0,
		SuggestTarget = 1,
		LastTarget = 2,
		ClosestToCamera = 3,
		FirstInPlayerList = 4,
		MAX = 5
	};

	/**
	 * Enum Solarland.EPlayerHighlightMarkType
	 */
	enum class EPlayerHighlightMarkType : uint8_t
	{
		B = 0,
		A = 1,
		S = 2,
		Ex = 3,
		Max = 4
	};

	/**
	 * Enum Solarland.EClassRepNodeMapping
	 */
	enum class EClassRepNodeMapping : uint8_t
	{
		Missing = 0,
		NotRouted = 1,
		CustomRelevancy = 2,
		RelevantAllConnections = 3,
		Spatialize_Static = 4,
		Spatialize_Dynamic = 5,
		Spatialize_Dormancy = 6,
		MAX = 7
	};

	/**
	 * Enum Solarland.EIncreaseAndDecreaseTransitionMode
	 */
	enum class EIncreaseAndDecreaseTransitionMode : uint8_t
	{
		Continuously = 0,
		BreakAndKeepLast = 1,
		MAX = 2
	};

	/**
	 * Enum Solarland.EActorInSafeAreaStatus
	 */
	enum class EActorInSafeAreaStatus : uint8_t
	{
		InSafeArea = 0,
		NotInSafeArea = 1,
		InTargetSafeArea = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.ESafeAreaStatus
	 */
	enum class ESafeAreaStatus : uint8_t
	{
		None = 0,
		WaitingForStart = 1,
		WaitingForShrink = 2,
		Shrink = 3,
		ShrinkEnd = 4,
		Pause = 5,
		End = 6,
		NoEffect = 7,
		MAX = 8
	};

	/**
	 * Enum Solarland.ENeverShowDuration
	 */
	enum class ENeverShowDuration : uint8_t
	{
		Day = 0,
		Week = 1,
		Month = 2,
		Year = 3,
		Never = 4,
		None = 5,
		MAX = 6
	};

	/**
	 * Enum Solarland.EShieldUpgradeItemShopState
	 */
	enum class EShieldUpgradeItemShopState : uint8_t
	{
		None = 0,
		Upgrading = 1,
		Done = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.EParticleOptimization
	 */
	enum class EParticleOptimization : uint8_t
	{
		Origin = 0,
		LowPriorityOptimization = 1,
		MidPriorityOptimization = 2,
		HighPriorityOptimization = 3,
		UltraHighPriorityOptimization = 4,
		MAX = 5
	};

	/**
	 * Enum Solarland.ESolarEMPParticleType
	 */
	enum class ESolarEMPParticleType : uint8_t
	{
		FadeIn = 0,
		FadeOut = 1,
		Loop = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.ESolarEMPForceFieldState
	 */
	enum class ESolarEMPForceFieldState : uint8_t
	{
		None = 0,
		Ready = 1,
		Active = 2,
		End = 3,
		MAX = 4
	};

	/**
	 * Enum Solarland.ESolarDamageShapeType
	 */
	enum class ESolarDamageShapeType : uint8_t
	{
		Capsule = 0,
		Sphere = 1,
		Box = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.ESolarSurroundLightningApplyType
	 */
	enum class ESolarSurroundLightningApplyType : uint8_t
	{
		SurroundLightningApplyType_Character = 0,
		SurroundLightningApplyType_Vehicle = 1,
		SurroundLightningApplyType_Other = 2,
		SurroundLightningApplyType_MAX = 3
	};

	/**
	 * Enum Solarland.ESpectatorMode
	 */
	enum class ESpectatorMode : uint8_t
	{
		DeathWatch = 0,
		Replay = 1,
		MAX = 2
	};

	/**
	 * Enum Solarland.ESolarSummonItemType
	 */
	enum class ESolarSummonItemType : uint8_t
	{
		Default = 0,
		Skill_Tower = 1,
		MAX = 2
	};

	/**
	 * Enum Solarland.ETabControlListStyle
	 */
	enum class ETabControlListStyle : uint8_t
	{
		None = 0,
		Text = 1,
		Icon = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.ETabControlListSlotType
	 */
	enum class ETabControlListSlotType : uint8_t
	{
		Leaf = 0,
		Compound = 1,
		MAX = 2
	};

	/**
	 * Enum Solarland.ESolarTablesEnum_CalculatingSign
	 */
	enum class ESolarTablesEnum_CalculatingSign : uint8_t
	{
		Plus = 0,
		Multiplication = 1,
		Equal = 2,
		_Count = 3,
		ESolarTablesEnum_MAX = 4
	};

	/**
	 * Enum Solarland.ESolarTablesEnum_PartsType
	 */
	enum class ESolarTablesEnum_PartsType : uint8_t
	{
		Muzzle = 0,
		Scope = 1,
		Clip = 2,
		Runes = 3,
		Grip = 4,
		GunStock = 5,
		Scope2x = 6,
		Scope4x = 7,
		Scope8x = 8,
		_Count = 9,
		ESolarTablesEnum_MAX = 10
	};

	/**
	 * Enum Solarland.ESolarTablesEnum_AccessoryType
	 */
	enum class ESolarTablesEnum_AccessoryType : uint8_t
	{
		WeaponParts = 0,
		WeaponAmmo = 1,
		_Count = 2,
		ESolarTablesEnum_MAX = 3
	};

	/**
	 * Enum Solarland.ESolarTablesEnum_FireCostType
	 */
	enum class ESolarTablesEnum_FireCostType : uint8_t
	{
		Descrete = 0,
		Continuous = 1,
		_Count = 2,
		ESolarTablesEnum_MAX = 3
	};

	/**
	 * Enum Solarland.ESolarTablesEnum_TriggerType
	 */
	enum class ESolarTablesEnum_TriggerType : uint8_t
	{
		KeyDown = 0,
		KeyUp = 1,
		KeyHold = 2,
		_Count = 3,
		ESolarTablesEnum_MAX = 4
	};

	/**
	 * Enum Solarland.ESolarTablesEnum_TrajectoryType
	 */
	enum class ESolarTablesEnum_TrajectoryType : uint8_t
	{
		Line = 0,
		LineGravity = 1,
		Curve = 2,
		Canister = 3,
		Beam = 4,
		Rocket = 5,
		VirtualBullet = 6,
		_Count = 7,
		ESolarTablesEnum_MAX = 8
	};

	/**
	 * Enum Solarland.ESolarTablesEnum_FireMethodType
	 */
	enum class ESolarTablesEnum_FireMethodType : uint8_t
	{
		Bullet = 0,
		Skill = 1,
		SummonBullet = 2,
		_Count = 3,
		ESolarTablesEnum_MAX = 4
	};

	/**
	 * Enum Solarland.ESolarTablesEnum_WeaponType
	 */
	enum class ESolarTablesEnum_WeaponType : uint8_t
	{
		AssualtRifle = 0,
		Submachinegun = 1,
		Shotgun = 2,
		Sniper = 3,
		Vehicle = 4,
		ItemWeapon = 5,
		SummonWeapon = 6,
		AntiVehicle = 7,
		_Count = 8,
		ESolarTablesEnum_MAX = 9
	};

	/**
	 * Enum Solarland.ESolarTablesEnum_TrigerType
	 */
	enum class ESolarTablesEnum_TrigerType : uint8_t
	{
		GameTime = 0,
		AliveCount = 1,
		RealTime = 2,
		MatchRoundTime = 3,
		GameWorldTime = 4,
		_Count = 5,
		ESolarTablesEnum_MAX = 6
	};

	/**
	 * Enum Solarland.ESolarTablesEnum_CategoryType
	 */
	enum class ESolarTablesEnum_CategoryType : uint8_t
	{
		CategoryType_None = 0,
		CategoryType_Reco = 1,
		CategoryType_Character = 2,
		CategoryType_CharacterSkin = 3,
		CategoryType_WeaponSkin = 4,
		CategoryType_Capsule = 5,
		CategoryType_Bag = 6,
		CategoryType_Tail = 7,
		CategoryType_Home = 8,
		CategoryType_Others = 9,
		_Count = 10,
		ESolarTablesEnum_MAX = 11
	};

	/**
	 * Enum Solarland.ESolarTablesEnum_ShareType
	 */
	enum class ESolarTablesEnum_ShareType : uint8_t
	{
		ActionType_None = 0,
		ShareType_RankShare = 1,
		ShareType_BattlePassShare = 2,
		ShareType_AchieveItemShare = 3,
		ShareType_ScoreShare = 4,
		ShareType_LoginActivityShare = 5,
		ShareType_MedalShare = 6,
		ShareType_UserGrowthShare = 7,
		ShareType_FollowCommunity = 8,
		ShareType_PersonalHistory = 9,
		ShareType_IdolShare = 10,
		_Count = 11,
		ESolarTablesEnum_MAX = 12
	};

	/**
	 * Enum Solarland.ESolarTablesEnum_LobbyMatchEnterType
	 */
	enum class ESolarTablesEnum_LobbyMatchEnterType : uint8_t
	{
		CanClick = 0,
		PartialClick = 1,
		ForbidClick = 2,
		_Count = 3,
		ESolarTablesEnum_MAX = 4
	};

	/**
	 * Enum Solarland.ESolarTablesEnum_StackType
	 */
	enum class ESolarTablesEnum_StackType : uint8_t
	{
		StackByQTY = 0,
		StackByTime = 1,
		_Count = 2,
		ESolarTablesEnum_MAX = 3
	};

	/**
	 * Enum Solarland.ESolarTablesEnum_InputRelatedType
	 */
	enum class ESolarTablesEnum_InputRelatedType : uint8_t
	{
		InputRelatedNone = 0,
		Input_F = 1,
		InputRelated2 = 2,
		InputRelated3 = 3,
		InputRelated4 = 4,
		InputRelated5 = 5,
		InputRelated6 = 6,
		InputRelated7 = 7,
		InputRelated8 = 8,
		InputRelated9 = 9,
		InputRelated10 = 10,
		Input_J = 11,
		_Count = 12,
		ESolarTablesEnum_MAX = 13
	};

	/**
	 * Enum Solarland.ESolarTablesEnum_InputContextType
	 */
	enum class ESolarTablesEnum_InputContextType : uint8_t
	{
		InputCommon = 0,
		InputPlayer = 1,
		InputVehicle = 2,
		InputOB = 3,
		InputPlayerSkill = 4,
		InputActionWheel = 5,
		_Count = 6,
		ESolarTablesEnum_MAX = 7
	};

	/**
	 * Enum Solarland.ESolarTablesEnum_InputTabType
	 */
	enum class ESolarTablesEnum_InputTabType : uint8_t
	{
		InputTabPlayer = 0,
		InputTabVehicle = 1,
		InputTabOB = 2,
		InputTabMisc = 3,
		_Count = 4,
		ESolarTablesEnum_MAX = 5
	};

	/**
	 * Enum Solarland.ESolarTablesEnum_InputCtrlType
	 */
	enum class ESolarTablesEnum_InputCtrlType : uint8_t
	{
		InputCtrlHide = 0,
		InputCtrlShow = 1,
		InputCtrlCustom = 2,
		_Count = 3,
		ESolarTablesEnum_MAX = 4
	};

	/**
	 * Enum Solarland.ESolarTablesEnum_InputGroupType
	 */
	enum class ESolarTablesEnum_InputGroupType : uint8_t
	{
		InputNone = 0,
		InputKeyF = 1,
		InputKeyG = 2,
		InputKeyP = 3,
		_Count = 4,
		ESolarTablesEnum_MAX = 5
	};

	/**
	 * Enum Solarland.ESolarTablesEnum_GamepadCtrlType
	 */
	enum class ESolarTablesEnum_GamepadCtrlType : uint8_t
	{
		GamepadCtrlHide = 0,
		GamepadCtrlShowOnly = 1,
		GamepadCtrlCustom = 2,
		GamepadCtrlCustomAndCom = 3,
		_Count = 4,
		ESolarTablesEnum_MAX = 5
	};

	/**
	 * Enum Solarland.ESolarTablesEnum_InputGamepadType
	 */
	enum class ESolarTablesEnum_InputGamepadType : uint8_t
	{
		InputGamepadOneKey = 0,
		InputGamepadComKey = 1,
		InputGamepadFreeComKey = 2,
		_Count = 3,
		ESolarTablesEnum_MAX = 4
	};

	/**
	 * Enum Solarland.ESolarTablesEnum_ClassModeType
	 */
	enum class ESolarTablesEnum_ClassModeType : uint8_t
	{
		CLASS_MODE_NONE = 0,
		CLASS_MODE_V13 = 1,
		CLASS_MODE_UniqueSkill = 2,
		CLASS_MODE_RoleGrow = 3,
		_Count = 4,
		ESolarTablesEnum_MAX = 5
	};

	/**
	 * Enum Solarland.ESolarTablesEnum_ExcuterType
	 */
	enum class ESolarTablesEnum_ExcuterType : uint8_t
	{
		AirDrop = 0,
		GasCircle = 1,
		Bomb = 2,
		_Count = 3,
		ESolarTablesEnum_MAX = 4
	};

	/**
	 * Enum Solarland.ESolarTablesEnum_DisplayType
	 */
	enum class ESolarTablesEnum_DisplayType : uint8_t
	{
		None = 0,
		Tips = 1,
		Window = 2,
		_Count = 3,
		ESolarTablesEnum_MAX = 4
	};

	/**
	 * Enum Solarland.ESolarTablesEnum_ChestType
	 */
	enum class ESolarTablesEnum_ChestType : uint8_t
	{
		AirDrop = 0,
		ElecChest = 1,
		_Count = 2,
		ESolarTablesEnum_MAX = 3
	};

	/**
	 * Enum Solarland.ESolarTablesEnum_Duration
	 */
	enum class ESolarTablesEnum_Duration : uint8_t
	{
		Day = 0,
		Week = 1,
		Month = 2,
		Year = 3,
		Never = 4,
		None = 5,
		_Count = 6,
		ESolarTablesEnum_MAX = 7
	};

	/**
	 * Enum Solarland.ESolarTablesEnum_CharacterLevelUpType
	 */
	enum class ESolarTablesEnum_CharacterLevelUpType : uint8_t
	{
		Health = 0,
		Damage = 1,
		Movement = 2,
		FlyCooldown = 3,
		_Count = 4,
		ESolarTablesEnum_MAX = 5
	};

	/**
	 * Enum Solarland.ESolarTablesEnum_CharacterType
	 */
	enum class ESolarTablesEnum_CharacterType : uint8_t
	{
		None = 0,
		Assault = 1,
		Defence = 2,
		Support = 3,
		Scout = 4,
		_Count = 5,
		ESolarTablesEnum_MAX = 6
	};

	/**
	 * Enum Solarland.ESolarTablesEnum_BehaviorType
	 */
	enum class ESolarTablesEnum_BehaviorType : uint8_t
	{
		SurvivalTime = 0,
		Kills = 1,
		Assists = 2,
		Selfhealing = 3,
		TeammateHealing = 4,
		Unpacking = 5,
		CollectElectricity = 6,
		PickExpPack = 7,
		EveryDamageDealt = 8,
		NpcKills = 9,
		NpcAssists = 10,
		_Count = 11,
		ESolarTablesEnum_MAX = 12
	};

	/**
	 * Enum Solarland.ESolarTablesEnum_Enum_Behavior
	 */
	enum class ESolarTablesEnum_Enum_Behavior : uint8_t
	{
		Behavior1 = 0,
		Behavior2 = 1,
		Behavior3 = 2,
		Behavior4 = 3,
		Behavior5 = 4,
		Behavior6 = 5,
		Behavior7 = 6,
		Behavior8 = 7,
		Behavior9 = 8,
		Behavior10 = 9,
		Behavior11 = 10,
		_Count = 11,
		ESolarTablesEnum_Enum_MAX = 12
	};

	/**
	 * Enum Solarland.ESolarTablesEnum_ActionType
	 */
	enum class ESolarTablesEnum_ActionType : uint8_t
	{
		ActionType_None = 0,
		ActionType_OpenGift = 1,
		ActionType_Charge = 2,
		ActionType_Battle = 3,
		ActionType_Mail = 4,
		ActionType_ShopBuy = 5,
		ActionType_DailyTask = 6,
		ActionType_Activity = 7,
		ActionType_Guid = 8,
		ActionType_GM = 9,
		ActionType_BattleBag = 10,
		ActionType_ItemUse = 11,
		ActionType_Refund = 12,
		ActionType_BattleDouble = 13,
		ActionType_UnitProf = 14,
		ActionType_SanctuaryBuild = 15,
		ActionType_SanctuaryFacility = 16,
		ActionType_Weapon_Upgrade = 17,
		ActionType_Activereward = 18,
		ActionType_ComposeItem = 19,
		ActionType_LoginReward = 20,
		ActionType_NewUserLogin = 21,
		ActionType_HomeDailyTask = 22,
		ActionType_BattlePass = 23,
		ActionType_LevelReward = 24,
		ActionType_HomeUpgrade = 25,
		ActionType_BattlePassRepeat = 26,
		ActionType_TopUP = 27,
		ActionType_Achievement = 28,
		ActionType_LuckDraw = 29,
		ActionType_BattlePassShare = 30,
		ActionType_CDKey = 31,
		ActionType_HalfMonthLogin = 32,
		ActionType_MonthlyEvent = 33,
		ActionType_FriendEvent = 34,
		ActionType_WeekChanllenge = 35,
		ActionType_RoomCard = 36,
		ActionType_BindAccount = 37,
		ActionType_UserGrowthEvent = 38,
		ActionType_SendGift = 39,
		ActionType_SellItem = 40,
		ActionType_CollectRedeem = 41,
		ActionType_RandomPack = 42,
		ActionType_Clan = 43,
		ActionType_Bet = 44,
		ActionType_BetBonus = 45,
		ActionType_BetReturn = 46,
		ActionType_CarouselDraw = 47,
		ActionType_WeekFree = 48,
		ActionType_TutorialLevelReward = 49,
		ActionType_TournamentMiss = 50,
		ActionType_TournamentReward = 51,
		ActionType_RankingCard = 52,
		ActionType_BattleSupplyBox = 53,
		ActionType_BattlePassMission = 54,
		ActionType_SupplyBox = 55,
		ActionType_VipcardReceive = 56,
		ActionType_VipcardSign = 57,
		ActionType_Vipcard = 58,
		ActionType_Signcard = 59,
		ActionType_ChangeName = 60,
		ActionType_ServerCard = 61,
		ActionType_ExResourceDownload = 62,
		ActionType_CustomServer_Renewal = 63,
		_Count = 64,
		ESolarTablesEnum_MAX = 65
	};

	/**
	 * Enum Solarland.ETaskStatus
	 */
	enum class ETaskStatus : uint8_t
	{
		Runing = 0,
		Completed = 1,
		ReceiveAward = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.ECostType
	 */
	enum class ECostType : uint8_t
	{
		NONE = 0,
		ELECTRONIC = 1,
		MAX = 2
	};

	/**
	 * Enum Solarland.ETreasureBoxSpawnType
	 */
	enum class ETreasureBoxSpawnType : uint8_t
	{
		SingleRandom = 0,
		Group = 1,
		MAX = 2
	};

	/**
	 * Enum Solarland.ETutorialUIType
	 */
	enum class ETutorialUIType : uint8_t
	{
		None = 0,
		Common = 1,
		Special = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.ELevelRewardStatus
	 */
	enum class ELevelRewardStatus : uint8_t
	{
		NotClaimed = 0,
		Claimed = 1,
		Disable = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.EWidgetPlayAnimationFlag
	 */
	enum class EWidgetPlayAnimationFlag : uint8_t
	{
		None = 0,
		Finish = 1,
		MAX = 2
	};

	/**
	 * Enum Solarland.EWidgetInteractionFlag
	 */
	enum class EWidgetInteractionFlag : uint8_t
	{
		None = 0,
		Pressed = 1,
		Released = 2,
		Clicked = 3,
		MAX = 4
	};

	/**
	 * Enum Solarland.ETutorialStage
	 */
	enum class ETutorialStage : uint8_t
	{
		None = 0,
		Lobby = 1,
		BattleField = 2,
		Home = 3,
		TutorialLevel = 4,
		MAX = 5
	};

	/**
	 * Enum Solarland.ETutorialUIParent
	 */
	enum class ETutorialUIParent : uint8_t
	{
		Parent = 0,
		UnderBattleRoot = 1,
		BattleRoot = 2,
		BattleRootGuide = 3,
		MiddleRoot = 4,
		CommonRoot = 5,
		Map = 6,
		BattleNoticeRoot = 7,
		Guide = 8,
		PopRoot = 9,
		TipsRoot = 10,
		NoticeRoot = 11,
		Loading = 12,
		Reconnecting = 13,
		ExternalToolsRoot = 14,
		MAX = 15
	};

	/**
	 * Enum Solarland.ETutorialConditionType
	 */
	enum class ETutorialConditionType : uint8_t
	{
		None = 0,
		Trigger = 1,
		Interrupt = 2,
		Finish = 3,
		ForeverClose = 4,
		MAX = 5
	};

	/**
	 * Enum Solarland.ETutorialType
	 */
	enum class ETutorialType : uint8_t
	{
		TEvent = 0,
		TTick = 1,
		MAX = 2
	};

	/**
	 * Enum Solarland.ETutorialTriggerType
	 */
	enum class ETutorialTriggerType : uint8_t
	{
		TickActivateTutorials = 0,
		AlreadyTriggeredMaxCount = 1,
		HasSpecifiedItem = 2,
		HasTakenDamage = 3,
		PlayerAcountLevel = 4,
		SprintingContinuously = 5,
		JumpBegin = 6,
		ShieldNotFull = 7,
		WidgetClicked = 8,
		CanUseSpecifiedVehicleAbility = 9,
		CanUseSpecifiedVehicleWeapon = 10,
		AirDropBoxLanded = 11,
		NearAirDropBox = 12,
		OpenBigMapUMG = 13,
		CanUseSpecifiedWeaponAbility = 14,
		CanOpenTreasureBox = 15,
		PlayerInTargetStage = 16,
		EquipSpecifiedWeapon = 17,
		FeatureUnlock = 18,
		ApproachTreasureBox = 19,
		BotAIDying = 20,
		RunningStep = 21,
		HasSpecifiedEquipmentByType = 22,
		TutorialLevelDone = 23,
		WeaponSlotHasSpecifiedItem = 24,
		HasUIPanelOpened = 25,
		SpecifiedPlayerProficiency = 26,
		PlayerUpgradeBattleLevel = 27,
		MAX = 28
	};

	/**
	 * Enum Solarland.EPlayerProficiency
	 */
	enum class EPlayerProficiency : uint8_t
	{
		None = 0,
		Rookie = 1,
		FPS = 2,
		Veteran = 3,
		MAX = 4
	};

	/**
	 * Enum Solarland.EUAVRescueState
	 */
	enum class EUAVRescueState : uint8_t
	{
		None = 0,
		Idle = 1,
		Heal = 2,
		Navigate = 3,
		Rescue = 4,
		MAX = 5
	};

	/**
	 * Enum Solarland.EWidgetPassiveMode
	 */
	enum class EWidgetPassiveMode : uint8_t
	{
		Normal = 0,
		Passive_Buff = 1,
		Passive_Debuff = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.EVehicleRotateAnimationType
	 */
	enum class EVehicleRotateAnimationType : uint8_t
	{
		None = 0,
		Right = 1,
		Right01 = 2,
		Left = 3,
		Left01 = 4,
		Right02 = 5,
		Left02 = 6,
		MAX = 7
	};

	/**
	 * Enum Solarland.EIronManHandPart
	 */
	enum class EIronManHandPart : uint8_t
	{
		LeftHand = 0,
		RightHand = 1,
		MAX = 2
	};

	/**
	 * Enum Solarland.EIronManSoundEvent
	 */
	enum class EIronManSoundEvent : uint8_t
	{
		LaserHit = 0,
		MAX = 1
	};

	/**
	 * Enum Solarland.EPlayerInputMask
	 */
	enum class EPlayerInputMask : uint8_t
	{
		Invalidated = 0,
		VehicleBraking = 1,
		VehicleTrumpet = 2,
		VehicleAutoMove = 3,
		All = 4,
		MAX = 5
	};

	/**
	 * Enum Solarland.EAssistLockState
	 */
	enum class EAssistLockState : uint8_t
	{
		None = 0,
		PreEnterAssistLock = 1,
		EnterAssistLock = 2,
		HoldAssistLock = 3,
		LeaveAssistLock = 4,
		MAX = 5
	};

	/**
	 * Enum Solarland.EHoverVehicleVFXType
	 */
	enum class EHoverVehicleVFXType : uint8_t
	{
		Forward = 0,
		Backward = 1,
		Right = 2,
		Left = 3,
		Max = 4
	};

	/**
	 * Enum Solarland.EEnterWaterVFX
	 */
	enum class EEnterWaterVFX : uint8_t
	{
		HorizontalLightEffect = 0,
		HorizontalHeavyEffect = 1,
		VerticalLightEffect = 2,
		VerticalHeavyEffect = 3,
		MAX = 4
	};

	/**
	 * Enum Solarland.EVehicleSpawnSourceType
	 */
	enum class EVehicleSpawnSourceType : uint8_t
	{
		CommonSpawn = 0,
		VehicleSummonWeapon = 1,
		MAX = 2
	};

	/**
	 * Enum Solarland.EVehicleControlUIType
	 */
	enum class EVehicleControlUIType : uint8_t
	{
		Vehicle = 0,
		Character = 1,
		MAX = 2
	};

	/**
	 * Enum Solarland.EVehicleRotateCondition
	 */
	enum class EVehicleRotateCondition : uint8_t
	{
		None = 0,
		Forward = 1,
		Backward = 2,
		Right = 3,
		Left = 4,
		All = 5,
		MAX = 6
	};

	/**
	 * Enum Solarland.EVehicleOpenTips
	 */
	enum class EVehicleOpenTips : uint8_t
	{
		FloorCanNotOpen = 0,
		SpeedCanNotOpen = 1,
		MAX = 2
	};

	/**
	 * Enum Solarland.ESiegeVehicleAnimation
	 */
	enum class ESiegeVehicleAnimation : uint8_t
	{
		CloseIdle = 0,
		OpenIdle = 1,
		Fire = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.EVehicleDamageStatus
	 */
	enum class EVehicleDamageStatus : uint8_t
	{
		Normal = 0,
		Damaged = 1,
		SeriouslyDamaged = 2,
		BrokenDanger = 3,
		Broken = 4,
		MAX = 5
	};

	/**
	 * Enum Solarland.EVehicleAnimationState
	 */
	enum class EVehicleAnimationState : uint8_t
	{
		None = 0,
		Jump = 1,
		Dash = 2,
		TakingOff = 3,
		Cruising = 4,
		MAX = 5
	};

	/**
	 * Enum Solarland.ERocketFireMode
	 */
	enum class ERocketFireMode : uint8_t
	{
		NomalFire = 0,
		PrecisionFire = 1,
		Max = 2
	};

	/**
	 * Enum Solarland.EVehiclePageType
	 */
	enum class EVehiclePageType : uint8_t
	{
		Lobby = 0,
		VehicleBag = 1,
		BattlePass = 2,
		LuckDraw = 3,
		GetReward = 4,
		GrowTask = 5,
		Shop = 6,
		CarouselDraw = 7,
		SupplyBoxDetail = 8,
		SupplyBoxRaffle = 9,
		Max = 10
	};

	/**
	 * Enum Solarland.EVehicleSpawnType
	 */
	enum class EVehicleSpawnType : uint8_t
	{
		SingleRandom = 0,
		Group = 1,
		MAX = 2
	};

	/**
	 * Enum Solarland.EVehicleState
	 */
	enum class EVehicleState : uint8_t
	{
		None = 0,
		Ground = 1,
		Air = 2,
		Sliding = 3,
		MAX = 4
	};

	/**
	 * Enum Solarland.ESolarWeaponSpreadState
	 */
	enum class ESolarWeaponSpreadState : uint8_t
	{
		Standby = 0,
		Approach = 1,
		Recover = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.ESolarBlackHoleParticle
	 */
	enum class ESolarBlackHoleParticle : uint8_t
	{
		ForceField = 0,
		CoreFadeIn = 1,
		CoreFadeOut = 2,
		CoreLoop = 3,
		CoreHit = 4,
		Explode = 5,
		CharacterDebuff = 6,
		MAX = 7
	};

	/**
	 * Enum Solarland.ESolarBlackHoleState
	 */
	enum class ESolarBlackHoleState : uint8_t
	{
		None = 0,
		Startup = 1,
		Ready = 2,
		Active = 3,
		End = 4,
		MAX = 5
	};

	/**
	 * Enum Solarland.EWeaponOverloadState
	 */
	enum class EWeaponOverloadState : uint8_t
	{
		NormalDecrease = 0,
		FireSuspend = 1,
		ForceOverload = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.EWeaponFireModeType
	 */
	enum class EWeaponFireModeType : uint8_t
	{
		UnArm = 0,
		Primary = 1,
		Secondary = 2,
		Tertiary = 3,
		MAX = 4
	};

	/**
	 * Enum Solarland.EWeaponScopeType
	 */
	enum class EWeaponScopeType : uint8_t
	{
		None = 0,
		ScopeX0 = 1,
		ScopeX1 = 2,
		ScopeX2 = 3,
		ScopeX3 = 4,
		ScopeX4 = 5,
		ScopeX6 = 6,
		ScopeX8 = 7,
		Count = 8,
		MAX = 9
	};

	/**
	 * Enum Solarland.EGearState
	 */
	enum class EGearState : uint8_t
	{
		Reverse = 0,
		Neutral = 1,
		Forward = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.EUIRoot
	 */
	enum class EUIRoot : uint8_t
	{
		None = 0,
		UnderBattleRoot = 1,
		BattleRoot = 2,
		BattleRootGuide = 3,
		MiddleRoot = 4,
		CommonRoot = 5,
		Map = 6,
		BattleNoticeRoot = 7,
		Guide = 8,
		PopRoot = 9,
		TipsRoot = 10,
		NoticeRoot = 11,
		Loading = 12,
		Reconnecting = 13,
		ExternalToolsRoot = 14,
		MAX = 15
	};

	/**
	 * Enum Solarland.EInputEventHandleType
	 */
	enum class EInputEventHandleType : uint8_t
	{
		Unhandle = 0,
		SimulateKey = 1,
		BroadcastEvent = 2,
		SimulateTouch = 3,
		NoKeyOnly = 4,
		NoEventOnly = 5,
		NoTouchOnly = 6,
		HandleAll = 7,
		MAX = 8
	};

	/**
	 * Enum Solarland.ETouchMovePriority
	 */
	enum class ETouchMovePriority : uint8_t
	{
		Highest = 0,
		Higher = 1,
		Normal = 2,
		Lower = 3,
		Lowest = 4,
		MAX = 5
	};

	/**
	 * Enum Solarland.EZiplineSide
	 */
	enum class EZiplineSide : uint8_t
	{
		None = 0,
		Cable = 1,
		A = 2,
		B = 3,
		MAX = 4
	};

	/**
	 * Enum Solarland.EZiplineType
	 */
	enum class EZiplineType : uint8_t
	{
		Horizontal = 0,
		Vertical = 1,
		MAX = 2
	};

	/**
	 * Enum Solarland.ESoundPoolSimpleRule
	 */
	enum class ESoundPoolSimpleRule : uint8_t
	{
		Random = 0,
		RandomNoRepeat = 1,
		Sequential = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.ESoundGroupPlayContextEnum
	 */
	enum class ESoundGroupPlayContextEnum : uint8_t
	{
		None = 0,
		IsSelf = 1,
		IsTeammate = 2,
		IsAttackingOther = 3,
		IsAttachedByOther = 4,
		MAX = 5
	};

	/**
	 * Enum Solarland.ESolarImageProgressHalfCirclePrivotType
	 */
	enum class ESolarImageProgressHalfCirclePrivotType : uint8_t
	{
		MidLeft = 0,
		MidRight = 1,
		MidBottom = 2,
		MidTop = 3,
		MAX = 4
	};

	/**
	 * Enum Solarland.ESolarImageProgressQuaterCirclePrivotType
	 */
	enum class ESolarImageProgressQuaterCirclePrivotType : uint8_t
	{
		LeftBottom = 0,
		RightBottom = 1,
		LeftTop = 2,
		RightTop = 3,
		MAX = 4
	};

	/**
	 * Enum Solarland.ESolarImageProgressLineDirType
	 */
	enum class ESolarImageProgressLineDirType : uint8_t
	{
		Horizantal = 0,
		Vertical = 1,
		MAX = 2
	};

	/**
	 * Enum Solarland.ESolarImageProgressType
	 */
	enum class ESolarImageProgressType : uint8_t
	{
		None = 0,
		Line = 1,
		QuarterCircle = 2,
		HalfCircle = 3,
		Circle = 4,
		MAX = 5
	};

	/**
	 * Enum Solarland.ESolarImageFillType
	 */
	enum class ESolarImageFillType : uint8_t
	{
		Normal = 0,
		Mirror = 1,
		Quarter = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.ESummonItemType
	 */
	enum class ESummonItemType : uint8_t
	{
		SolidSummonItem = 0,
		VirtualSummonItem = 1,
		MAX = 2
	};

	/**
	 * Enum Solarland.ESolarSummonSoundType
	 */
	enum class ESolarSummonSoundType : uint8_t
	{
		SummonSoundType_1P = 0,
		SummonSoundType_3P = 1,
		SummonSoundType_3P_Enemy = 2,
		SummonSoundType_MAX = 3
	};

	/**
	 * Enum Solarland.ERefreshCause
	 */
	enum class ERefreshCause : uint8_t
	{
		ECause_None = 0,
		ECause_OutOrIntoScreen = 1,
		ECause_RescueStateChange = 2,
		ECause_MAX = 3
	};

	/**
	 * Enum Solarland.ESplineMeshType
	 */
	enum class ESplineMeshType : uint8_t
	{
		DEFAULT = 0,
		START = 1,
		END = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.EBackpackInfoPageType
	 */
	enum class EBackpackInfoPageType : uint8_t
	{
		Level = 0,
		Skill = 1,
		Max = 2
	};

	/**
	 * Enum Solarland.ETweenInterpolationType
	 */
	enum class ETweenInterpolationType : uint8_t
	{
		Easing = 0,
		Curve = 1,
		MAX = 2
	};

	/**
	 * Enum Solarland.EDefenderTeamType
	 */
	enum class EDefenderTeamType : uint8_t
	{
		MyTeam = 0,
		DefenderTeam = 1,
		MAX = 2
	};

	/**
	 * Enum Solarland.EPlayerWidgetState
	 */
	enum class EPlayerWidgetState : uint8_t
	{
		NORMAL = 0,
		DRIVER = 1,
		PASSGNER = 2,
		EQUIPVEHICLEWEAPON = 3,
		CRUISING = 4,
		PATACHUTING = 5,
		SWIMMING = 6,
		MAX = 7
	};

	/**
	 * Enum Solarland.ELocalNoticeType
	 */
	enum class ELocalNoticeType : uint8_t
	{
		Revenge = 0,
		KillDown = 1,
		ClearTeam = 2,
		ShutDown = 3,
		KillDefender = 4,
		MAX = 5
	};

	/**
	 * Enum Solarland.EUIWeaponPartState
	 */
	enum class EUIWeaponPartState : uint8_t
	{
		NotEquip = 0,
		Equipped = 1,
		CantEquip = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.EWidgetVisibilityFlags
	 */
	enum class EWidgetVisibilityFlags : uint8_t
	{
		None = 0,
		ChatSwitch = 1,
		ChatMsgSending = 2,
		ConnectionState = 3,
		TalentState = 4,
		TalentValidation = 5,
		MAX = 6
	};

	/**
	 * Enum Solarland.EStealthParamType
	 */
	enum class EStealthParamType : uint8_t
	{
		None = 0,
		Type_1P = 1,
		Type_3P = 2,
		Type_3P_Enemy = 3,
		MAX = 4
	};

	/**
	 * Enum Solarland.EWholeShieldState
	 */
	enum class EWholeShieldState : uint8_t
	{
		Begin = 0,
		InProgress = 1,
		End = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.EVisualSoundDetectionRule
	 */
	enum class EVisualSoundDetectionRule : uint8_t
	{
		XYZ = 0,
		XY = 1,
		XY_FiniteZ = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.EWeaponAnimState
	 */
	enum class EWeaponAnimState : uint8_t
	{
		Idle = 0,
		Fire = 1,
		AltFire = 2,
		Reload = 3,
		Overload = 4,
		OpenScope = 5,
		CloseScope = 6,
		Bolt = 7,
		Preview = 8,
		Summon = 9,
		MAX = 10
	};

	/**
	 * Enum Solarland.ESolarWeaponLODState
	 */
	enum class ESolarWeaponLODState : uint8_t
	{
		Hold = 0,
		OpenScope = 1,
		Discard = 2,
		AttachedOnBackpack = 3,
		MAX = 4
	};

	/**
	 * Enum Solarland.EWeaponSkinType
	 */
	enum class EWeaponSkinType : uint8_t
	{
		Material = 0,
		Mesh = 1,
		MAX = 2
	};

	/**
	 * Enum Solarland.EWeaponMechanicalSideFlag
	 */
	enum class EWeaponMechanicalSideFlag : uint8_t
	{
		None = 0,
		OnGround = 1,
		Unequip = 2,
		OpenScope = 3,
		ForceFiring = 4,
		ChargedFire = 5,
		NeedBolt = 6,
		GatlingRolling = 7,
		DetectedWall = 8,
		NeedRechamber = 9,
		NoAmmoReserved = 10,
		MAX = 11
	};

	/**
	 * Enum Solarland.EWeaponMechanicalUniqueState
	 */
	enum class EWeaponMechanicalUniqueState : uint8_t
	{
		None = 0,
		Idle = 1,
		PreFire = 2,
		RealFire = 3,
		Rechamber = 4,
		Reloading = 5,
		Bolting = 6,
		Charging = 7,
		Overloading = 8,
		KeyUPHolding = 9,
		MAX = 10
	};

	/**
	 * Enum Solarland.EWeaponUpgradeType
	 */
	enum class EWeaponUpgradeType : uint8_t
	{
		Part = 0,
		SecondaryAmmo = 1,
		MAX = 2
	};

	/**
	 * Enum Solarland.EWeaponNetToClientProto
	 */
	enum class EWeaponNetToClientProto : uint8_t
	{
		CSkin_RefreshSkin = 0,
		CUpgrade_UpLevel = 1,
		CUpgrade_ExpRefresh = 2,
		CUpgrade_ReplaceUpgradeRoute = 3,
		CParts_ReplacePart = 4,
		CParts_ReplaceAmmo = 5,
		CParts_InitFinish = 6,
		CAnimation_RefreshState = 7,
		MAX = 8
	};

	/**
	 * Enum Solarland.EWeaponNetToServerProto
	 */
	enum class EWeaponNetToServerProto : uint8_t
	{
		SUpgrade_AddExp = 0,
		SParts_Hold = 1,
		SAnimation_RefreshState = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.EWeaponPartVisibilityChangeFlag
	 */
	enum class EWeaponPartVisibilityChangeFlag : uint8_t
	{
		Default = 0,
		BySignificance = 1,
		MAX = 2
	};

	/**
	 * Enum Solarland.EFixedValueMode
	 */
	enum class EFixedValueMode : uint8_t
	{
		Raw = 0,
		Increment = 1,
		MAX = 2
	};

	/**
	 * Enum Solarland.EWeaponSkewAdjustmentType
	 */
	enum class EWeaponSkewAdjustmentType : uint8_t
	{
		Pitch = 0,
		Yaw = 1,
		Roll = 2,
		XOffset = 3,
		YOffset = 4,
		ZOffset = 5,
		MAX = 6
	};

	/**
	 * Enum Solarland.EWeaponSkewInputType
	 */
	enum class EWeaponSkewInputType : uint8_t
	{
		PitchSpeed = 0,
		YawSpeed = 1,
		HorizontalSpeed = 2,
		VerticalSpeed = 3,
		MAX = 4
	};

	/**
	 * Enum Solarland.ESprayingRecoveryMode
	 */
	enum class ESprayingRecoveryMode : uint8_t
	{
		SyncWithRecoil = 0,
		RecoverByCurve = 1,
		MAX = 2
	};

	/**
	 * Enum Solarland.EWeaponAttributeParamType
	 */
	enum class EWeaponAttributeParamType : uint8_t
	{
		ParamA = 0,
		ParamB = 1,
		ParamC = 2,
		ParamD = 3,
		MAX = 4
	};

	/**
	 * Enum Solarland.ESpreadScaleDecreaseMode
	 */
	enum class ESpreadScaleDecreaseMode : uint8_t
	{
		DecreaseByFixedSpeed = 0,
		DecreaseByFixedTime = 1,
		MAX = 2
	};

	/**
	 * Enum Solarland.ESolarWeaponFireInputButtonState
	 */
	enum class ESolarWeaponFireInputButtonState : uint8_t
	{
		FireWaiting = 0,
		FirePressed = 1,
		CancelWaiting = 2,
		CancelPressed = 3,
		Invalid = 4,
		MAX = 5
	};

	/**
	 * Enum Solarland.EWSCurWeaponUpdateType
	 */
	enum class EWSCurWeaponUpdateType : uint8_t
	{
		Switch = 0,
		PartUpdate = 1,
		MAX = 2
	};

	/**
	 * Enum Solarland.ECheckFireResultType
	 */
	enum class ECheckFireResultType : uint8_t
	{
		None = 0,
		Fire = 1,
		Reload = 2,
		OpenScope = 3,
		CloseScope = 4,
		Charge = 5,
		EndCharge = 6,
		MAX = 7
	};

	/**
	 * Enum Solarland.EOperateScopeStateReason
	 */
	enum class EOperateScopeStateReason : uint8_t
	{
		None = 0,
		OpenScopeButton = 1,
		OpenQuickAds = 2,
		Open = 3,
		CloseReload = 4,
		CloseBolt = 5,
		Close = 6,
		AllFlag = 7,
		MAX = 8
	};

	/**
	 * Enum Solarland.EBehaviorExpID
	 */
	enum class EBehaviorExpID : uint8_t
	{
		Default = 0,
		KillPlayer = 1,
		AssistPlayer = 2,
		DamageExp = 3,
		KillNpc = 4,
		AssistNpc = 5,
		MAX = 6
	};

	/**
	 * Enum Solarland.EClientRecieveProto
	 */
	enum class EClientRecieveProto : uint8_t
	{
		PickUpWeapon = 0,
		DropWeapon = 1,
		SwitchWeaponFinish = 2,
		ReplaceWeapon = 3,
		WeaponDataUpdate = 4,
		AddExpMsg = 5,
		ClearWeapons = 6,
		ReloadCompleted = 7,
		MAX = 8
	};

	/**
	 * Enum Solarland.EServerRecieveProto
	 */
	enum class EServerRecieveProto : uint8_t
	{
		SwitchWeapon = 0,
		Reload = 1,
		ShowOrHideCurrent = 2,
		GameStaticsWeaponSkill = 3,
		DropItemWeapon = 4,
		ReplaceUpgradeRoute = 5,
		SwapWeapon = 6,
		MAX = 7
	};

	/**
	 * Enum Solarland.EAIPlayerServerRecieveProto
	 */
	enum class EAIPlayerServerRecieveProto : uint8_t
	{
		PickUpWeapon = 0,
		MAX = 1
	};

	/**
	 * Enum Solarland.EAIPlayerClientRecieveProto
	 */
	enum class EAIPlayerClientRecieveProto : uint8_t
	{
		PickUpWeapon = 0,
		SwitchWeapon = 1,
		MAX = 2
	};

	/**
	 * Enum Solarland.EVehicleWeaponServerRecieveProto
	 */
	enum class EVehicleWeaponServerRecieveProto : uint8_t
	{
		Reload = 0,
		StartReload = 1,
		MAX = 2
	};

	/**
	 * Enum Solarland.EWeaponSystemVehicleState
	 */
	enum class EWeaponSystemVehicleState : uint8_t
	{
		PreCharging = 0,
		PreFire = 1,
		PreReload = 2,
		PreOpenScope = 3,
		PreCloseScope = 4,
		PreFireOverload = 5,
		MAX = 6
	};

	/**
	 * Enum Solarland.EWeaponSystemVehicleProto
	 */
	enum class EWeaponSystemVehicleProto : uint8_t
	{
		Equip = 0,
		UnEquip = 1,
		StartReload = 2,
		MAX = 3
	};

	/**
	 * Enum Solarland.EMarkButtonState
	 */
	enum class EMarkButtonState : uint8_t
	{
		Normal = 0,
		Pressed = 1,
		Selecting = 2,
		Canceled = 3,
		Respond = 4,
		MAX = 5
	};

	// --------------------------------------------------
	// # Structs
	// --------------------------------------------------
	/**
	 * ScriptStruct Solarland.PlayAnimationParams
	 * Size -> 0x0040
	 */
	struct FPlayAnimationParams
	{
	public:
		unsigned char                                              UnknownData_7UZY[0x40];                                  // 0x0000(0x0040) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.WrappedLocalTextID
	 * Size -> 0x0004
	 */
	struct FWrappedLocalTextID
	{
	public:
		int32_t                                                    LocalTextId;                                             // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.ActionWheelStyle
	 * Size -> 0x0070
	 */
	struct FActionWheelStyle
	{
	public:
		struct FLinearColor                                        BlackgroundColor;                                        // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLinearColor                                        InnerCircleColor;                                        // 0x0010(0x0010) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLinearColor                                        BlackgroundSelectedColor;                                // 0x0020(0x0010) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLinearColor                                        InnerCircleSelectedColor;                                // 0x0030(0x0010) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLinearColor                                        WheelGradientColor;                                      // 0x0040(0x0010) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLinearColor                                        WheelSelectedGradientColor;                              // 0x0050(0x0010) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           IconSize;                                                // 0x0060(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      IconOffset;                                              // 0x0068(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SelectedIconOffset;                                      // 0x006C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.ActionWheelCommand
	 * Size -> 0x0038
	 */
	struct FActionWheelCommand
	{
	public:
		EActionWheelCommandType                                    CommandType;                                             // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SWFB[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              ConfigKey;                                               // 0x0008(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FWrappedLocalTextID                                 DisplayName;                                             // 0x0018(0x0004) Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0QKP[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSoftObjectPath                                     Icon;                                                    // 0x0020(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.ActionWheelConfig
	 * Size -> 0x00D8 (FullSize[0x00E0] - InheritedSize[0x0008])
	 */
	struct FActionWheelConfig : public FTableRowBase
	{
	public:
		int32_t                                                    groupid;                                                 // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FWrappedLocalTextID                                 Title;                                                   // 0x000C(0x0004) Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    StyleID;                                                 // 0x0010(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RHG4[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              WheelDes;                                                // 0x0018(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DisplayDelay;                                            // 0x0028(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DisplayDelay_Gamepad;                                    // 0x002C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PointMoveSensitivity;                                    // 0x0030(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PointMoveSensitivity_Gamepad;                            // 0x0034(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           Offset;                                                  // 0x0038(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass* WheelFunctionBP;                                         // 0x0040(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              InputActionName;                                         // 0x0048(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EActionWheelOperateType                                    OperateType;                                             // 0x0058(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PPNF[0x3];                                   // 0x0059(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FActionWheelStyle                                   ActionWheelStyle;                                        // 0x005C(0x0070) Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3QCA[0x4];                                   // 0x00CC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FActionWheelCommand>                         ActionWheelCommands;                                     // 0x00D0(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.ActorEffectPool
	 * Size -> 0x0010
	 */
	struct FActorEffectPool
	{
	public:
		TArray<class UActorEffect*>                                EffectInstances;                                         // 0x0000(0x0010) ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate
	};

	/**
	 * ScriptStruct Solarland.ActorEffectControllerPool
	 * Size -> 0x0010
	 */
	struct FActorEffectControllerPool
	{
	public:
		TArray<class UActorEffectController*>                      ControllerInstances;                                     // 0x0000(0x0010) ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate
	};

	/**
	 * ScriptStruct Solarland.MaterialChangePriorityGroup
	 * Size -> 0x0010
	 */
	struct FMaterialChangePriorityGroup
	{
	public:
		TArray<struct FGameplayTag>                                Tags;                                                    // 0x0000(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.ForceChangeMaterialInfos
	 * Size -> 0x0070
	 */
	struct FForceChangeMaterialInfos
	{
	public:
		struct FGameplayTagContainer                               MaterialPriorityTags;                                    // 0x0000(0x0020) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		unsigned char                                              MaterialPaths[0x50];                                     // 0x0020(0x0050) UNKNOWN PROPERTY: SetProperty
	};

	/**
	 * ScriptStruct Solarland.MaterialChangeHandle
	 * Size -> 0x0008
	 */
	struct FMaterialChangeHandle
	{
	public:
		unsigned char                                              UnknownData_6C0A[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.AddMaterialChangeParams
	 * Size -> 0x0028
	 */
	struct FAddMaterialChangeParams
	{
	public:
		unsigned char                                              UnknownData_O11W[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FGameplayTag                                        PriorityTag;                                             // 0x0008(0x0008) Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EMaterialChangeConflictResolveStrategy                     ResolveStrategy;                                         // 0x0010(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EMaterialChangeTextureOverrideMode                         TextureOverrideMode;                                     // 0x0011(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_H998[0x6];                                   // 0x0012(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class FName>                                        TextureParameterNamesToOverride;                         // 0x0018(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.AddMultiplePassMaterialChangeParams
	 * Size -> 0x0040
	 */
	struct FAddMultiplePassMaterialChangeParams
	{
	public:
		struct FGameplayTag                                        PriorityTag;                                             // 0x0000(0x0008) Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EMaterialChangeConflictResolveStrategy                     ResolveStrategy;                                         // 0x0008(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EMultiplePassMaterialChangeCompatibilityMode               CompatibilityMode;                                       // 0x0009(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_62JM[0x6];                                   // 0x000A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FGameplayTagContainer                               SpecifiedPriorityTags;                                   // 0x0010(0x0020) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		bool                                                       bNeedMultiplePass : 1;                                   // 0x0030(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bForceFrontFaceCull : 1;                                 // 0x0030(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIgnoreTranslucentSection : 1;                           // 0x0030(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIgnoreMaskedSection : 1;                                // 0x0030(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bTreatAsBackgroundForOcclusion : 1;                      // 0x0030(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUseAsOccluder : 1;                                      // 0x0030(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIgnoreOcclusionCull : 1;                                // 0x0030(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bRenderMainPassStencil : 1;                              // 0x0030(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bSetTranslucencySortPriorityOnly : 1;                    // 0x0031(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bRenderCustomDepth : 1;                                  // 0x0031(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7XQM[0x2];                                   // 0x0032(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    MainPassDepthStencilValue;                               // 0x0034(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    TranslucencySortPriority;                                // 0x0038(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CustomDepthStencilValue;                                 // 0x003C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.LimitedMeshContainer
	 * Size -> 0x0010
	 */
	struct FLimitedMeshContainer
	{
	public:
		TArray<class UMeshComponent*>                              Meshes;                                                  // 0x0000(0x0010) ExportObject, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.MaterialChange
	 * Size -> 0x0038
	 */
	struct FMaterialChange
	{
	public:
		unsigned char                                              UnknownData_MHQA[0x28];                                  // 0x0000(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UMaterialInterface*>                          Materials;                                               // 0x0028(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.MeshMaterialInfo
	 * Size -> 0x0050
	 */
	struct FMeshMaterialInfo
	{
	public:
		unsigned char                                              UnknownData_CP2R[0x18];                                  // 0x0000(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FMaterialChange>                             NormalMaterialChanges;                                   // 0x0018(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_E2DT[0x18];                                  // 0x0028(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FMaterialChange>                             MultiplePassMaterialChanges;                             // 0x0040(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.ActorMaterialInfo
	 * Size -> 0x0170
	 */
	struct FActorMaterialInfo
	{
	public:
		unsigned char                                              UnknownData_S1MF[0x20];                                  // 0x0000(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<struct FMaterialChangeHandle, class UMaterialInterface*> SourceMaterials;                                         // 0x0020(0x0050) NativeAccessSpecifierPublic
		TMap<struct FMaterialChangeHandle, struct FAddMaterialChangeParams> NormalParams;                                            // 0x0070(0x0050) NativeAccessSpecifierPublic
		TMap<struct FMaterialChangeHandle, struct FAddMultiplePassMaterialChangeParams> MultiplePassParams;                                      // 0x00C0(0x0050) NativeAccessSpecifierPublic
		TMap<struct FMaterialChangeHandle, struct FLimitedMeshContainer> LimitedMeshes;                                           // 0x0110(0x0050) ContainsInstancedReference, NativeAccessSpecifierPublic
		TArray<struct FMeshMaterialInfo>                           MeshMaterials;                                           // 0x0160(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.ActorParticleEffectSpawnInfo
	 * Size -> 0x0070
	 */
	struct FActorParticleEffectSpawnInfo
	{
	public:
		unsigned char                                              ParticleSystem[0x28];                                    // 0x0000(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		EActorParticleEffectAttachOption                           AttachOption;                                            // 0x0028(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_F4SI[0x3];                                   // 0x0029(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                AttachPointName;                                         // 0x002C(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EAttachLocation                                            LocationType;                                            // 0x0034(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_O3EU[0x3];                                   // 0x0035(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             Location;                                                // 0x0038(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                            Rotation;                                                // 0x0044(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FVector                                             Scale;                                                   // 0x0050(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAutoActivate;                                           // 0x005C(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAutoDestroy;                                            // 0x005D(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bEnablePooling;                                          // 0x005E(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAbsoluteRotation;                                       // 0x005F(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class FName>                                        ComponentTags;                                           // 0x0060(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.AirDropSkillData
	 * Size -> 0x0008
	 */
	struct FAirDropSkillData
	{
	public:
		float                                                      GameSeconds;                                             // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    OutcomeID;                                               // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.AirDropSkillDatas
	 * Size -> 0x0010
	 */
	struct FAirDropSkillDatas
	{
	public:
		TArray<struct FAirDropSkillData>                           OutcomeSetting;                                          // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.WrappedLevelToIdMap
	 * Size -> 0x0050
	 */
	struct FWrappedLevelToIdMap
	{
	public:
		TMap<int32_t, int32_t>                                     LevelToId;                                               // 0x0000(0x0050) Edit, BlueprintVisible, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.WrappedIdCount
	 * Size -> 0x0008
	 */
	struct FWrappedIdCount
	{
	public:
		int32_t                                                    ID;                                                      // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    count;                                                   // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.AirDropShieldOutcomeConfig
	 * Size -> 0x0018
	 */
	struct FAirDropShieldOutcomeConfig
	{
	public:
		int32_t                                                    MinLevel;                                                // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaxLevel;                                                // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FWrappedIdCount>                             CompensationOutcomes;                                    // 0x0008(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.AirDropWeaponPartOutcomeConfig
	 * Size -> 0x0020
	 */
	struct FAirDropWeaponPartOutcomeConfig
	{
	public:
		int32_t                                                    count;                                                   // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MinLevel;                                                // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ScopeMinLevel;                                           // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaxLevel;                                                // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FWrappedIdCount>                             CompensationOutcomes;                                    // 0x0010(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.AirDropSupplyOutcomeConfig
	 * Size -> 0x0018
	 */
	struct FAirDropSupplyOutcomeConfig
	{
	public:
		int32_t                                                    count;                                                   // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ASOX[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FWrappedIdCount>                             CompensationItems;                                       // 0x0008(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.AirDropAllOutcomeConfig
	 * Size -> 0x0068
	 */
	struct FAirDropAllOutcomeConfig
	{
	public:
		float                                                      GameSeconds;                                             // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PV5X[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FAirDropShieldOutcomeConfig                         ShieldOutcome;                                           // 0x0008(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		struct FAirDropWeaponPartOutcomeConfig                     WeaponPartOutcome;                                       // 0x0020(0x0020) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		struct FAirDropSupplyOutcomeConfig                         SupplyOutcome;                                           // 0x0040(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		TArray<struct FWrappedIdCount>                             GeneralOutcome;                                          // 0x0058(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.AirDropAllOutcomeConfigArray
	 * Size -> 0x0010
	 */
	struct FAirDropAllOutcomeConfigArray
	{
	public:
		TArray<struct FAirDropAllOutcomeConfig>                    OutcomesOverTime;                                        // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarItemData
	 * Size -> 0x00AC (FullSize[0x00B8] - InheritedSize[0x000C])
	 */
	struct FSolarItemData : public FFastArraySerializerItem
	{
	public:
		int32_t                                                    ItemID;                                                  // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int64_t                                                    ThisID;                                                  // 0x0010(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Name;                                                    // 0x0018(0x0010) Edit, BlueprintVisible, ZeroConstructor, RepSkip, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Icon;                                                    // 0x0028(0x0010) Edit, BlueprintVisible, ZeroConstructor, RepSkip, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Info;                                                    // 0x0038(0x0010) Edit, BlueprintVisible, ZeroConstructor, RepSkip, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    count;                                                   // 0x0048(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EItemType                                                  ItemType;                                                // 0x004C(0x0001) ELEMENT_SIZE_MISMATCH Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ES0U[0x3];                                   // 0x004D(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		int32_t                                                    Quality;                                                 // 0x0050(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaxPile;                                                 // 0x0054(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IfReplace;                                               // 0x0058(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_F25U[0x7];                                   // 0x0059(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              AbilityBP;                                               // 0x0060(0x0010) Edit, BlueprintVisible, ZeroConstructor, RepSkip, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ItemBP;                                                  // 0x0070(0x0010) Edit, BlueprintVisible, ZeroConstructor, RepSkip, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    DropTime;                                                // 0x0080(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    UnPickupTime;                                            // 0x0084(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsRecommend;                                             // 0x0088(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDirty;                                                  // 0x0089(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsPickupLock;                                            // 0x008A(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0C9E[0x5];                                   // 0x008B(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int64_t                                                    UserId;                                                  // 0x0090(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Level;                                                   // 0x0098(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Prize;                                                   // 0x009C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CurValue;                                                // 0x00A0(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       UseOnPickup;                                             // 0x00A4(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EItemAppearanceType                                        AppearanceType;                                          // 0x00A5(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUpdateOverlap;                                          // 0x00A6(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Z79L[0x1];                                   // 0x00A7(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    SourceType;                                              // 0x00A8(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KQ19[0xC];                                   // 0x00AC(0x000C) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.SolarLandscapeListenerConfig
	 * Size -> 0x0010
	 */
	struct FSolarLandscapeListenerConfig
	{
	public:
		bool                                                       bListenLandscape;                                        // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EOnLSModifiedStrategy                                      LSModifiedStrategy;                                      // 0x0001(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAdjustRotate;                                           // 0x0002(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EOnLSDestroyStrategy                                       LSDestroyStrategy;                                       // 0x0003(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             FreeFallBoxExtent;                                       // 0x0004(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarItemDataArray
	 * Size -> 0x0010 (FullSize[0x0118] - InheritedSize[0x0108])
	 */
	struct FSolarItemDataArray : public FFastArraySerializer
	{
	public:
		TArray<struct FSolarItemData>                              ItemDatas;                                               // 0x0108(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarDamageInfo
	 * Size -> 0x0040
	 */
	struct FSolarDamageInfo
	{
	public:
		class AActor* TargetActor;                                             // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AActor* SourceActor;                                             // 0x0008(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AActor* DamageCauserActor;                                       // 0x0010(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      OriginalDamage;                                          // 0x0018(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      OriginalDamageForVehicle;                                // 0x001C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SXZK[0x4];                                   // 0x0020(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		ESCMDamageType                                             DamageType;                                              // 0x0024(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BK7X[0x3];                                   // 0x0025(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      DamageRadial;                                            // 0x0028(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bRadialIgnoreCollision : 1;                              // 0x002C(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bRadialIgnoreVehicle : 1;                                // 0x002C(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bEnableSelfDamage : 1;                                   // 0x002C(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCheckSourceToTargetCollision : 1;                       // 0x002C(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bApplyToSource : 1;                                      // 0x002C(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bJustForShield : 1;                                      // 0x002C(0x0001) BIT_FIELD Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_V0OX[0x3];                                   // 0x002D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ExplosionMinDistance;                                    // 0x0030(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ExplosionMaxDistance;                                    // 0x0034(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCurveFloat* ExplosionDistanceScaleCurve;                             // 0x0038(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.AirlineData
	 * Size -> 0x0028
	 */
	struct FAirlineData
	{
	public:
		float                                                      AirlineHeight;                                           // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AirlineSpeed;                                            // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           StartPoint;                                              // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           EndPoint;                                                // 0x0010(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           RealStartPoint;                                          // 0x0018(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           RealEndPoint;                                            // 0x0020(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.VehicleVFX
	 * Size -> 0x0090
	 */
	struct FVehicleVFX
	{
	public:
		unsigned char                                              Particle[0x28];                                          // 0x0000(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		class FName                                                AttachedSocket;                                          // 0x0028(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTransform                                          OffsetTransform;                                         // 0x0030(0x0030) Edit, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		class UCurveFloat* ActivateCurve;                                           // 0x0060(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                ParameterName;                                           // 0x0068(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3N3P[0x20];                                  // 0x0070(0x0020) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.FireChargeData
	 * Size -> 0x00C0
	 */
	struct FFireChargeData
	{
	public:
		bool                                                       IfContinuousCharge;                                      // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VSNX[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ChargeTime;                                              // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCurveFloat* ChargeDamageRadiusCurve;                                 // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCurveFloat* ChargeDamageMagnificationCurve;                          // 0x0010(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IfPenetrable;                                            // 0x0018(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7G6E[0x7];                                   // 0x0019(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAmmoConfig* OverrideAmmo;                                            // 0x0020(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    OverrideAmmoID;                                          // 0x0028(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RHCC[0x4];                                   // 0x002C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              ChargeSoundName;                                         // 0x0030(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ChargeSoundEnemyName;                                    // 0x0040(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              FireSoundName;                                           // 0x0050(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              FireSoundEnemyName;                                      // 0x0060(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IfBurst;                                                 // 0x0070(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GJ39[0x7];                                   // 0x0071(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UCurveFloat* BulletBurstCountCurve;                                   // 0x0078(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IfCostToChargeScale;                                     // 0x0080(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ICUM[0x3];                                   // 0x0081(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    FireCostFullShot;                                        // 0x0084(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IfForceFullShotCost;                                     // 0x0088(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bNeedPlayCameraShake;                                    // 0x0089(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0AC8[0x6];                                   // 0x008A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UCurveFloat* AmmoSpeedScaleCurve;                                     // 0x0090(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCurveFloat* AmmoEffectXScaleCurve;                                   // 0x0098(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCurveFloat* AmmoEffectYZScaleCurve;                                  // 0x00A0(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCurveFloat* OverloadCurve;                                           // 0x00A8(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ChargeAnimationRate;                                     // 0x00B0(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_V04R[0x4];                                   // 0x00B4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UCurveFloat* DeflectionAngleCurve;                                    // 0x00B8(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.WeaponFireTPPAnimConfig
	 * Size -> 0x0028
	 */
	struct FWeaponFireTPPAnimConfig
	{
	public:
		float                                                      SingleFirePulse;                                         // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SingleStiffnessCoefficient;                              // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LoopFirePulse;                                           // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LoopStiffnessCoefficient;                                // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RecoverSpeed;                                            // 0x0010(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BlendSpaceScale;                                         // 0x0014(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UBlendSpace* BlendSpace;                                              // 0x0018(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_N346[0x8];                                   // 0x0020(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.WeaponFireFPPAnimConfig
	 * Size -> 0x0070
	 */
	struct FWeaponFireFPPAnimConfig
	{
	public:
		float                                                      SingleFireStraightPulse;                                 // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SingleStiffnessCoefficient;                              // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SingleFireBackwardOffset;                                // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LoopFireStraightPulse;                                   // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LoopStiffnessCoefficient;                                // 0x0010(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LoopFireBackwardOffset;                                  // 0x0014(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCurveFloat* StraightStiffnessCurve;                                  // 0x0018(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      StraightRecoverSpeed;                                    // 0x0020(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             ShakePivotOffset;                                        // 0x0024(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FVector2D>                                   ShakeOffsets;                                            // 0x0030(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FRotator>                                    ShakeRotations;                                          // 0x0040(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bNeedEndShake;                                           // 0x0050(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YWVH[0x7];                                   // 0x0051(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UCurveVector* EndShakeOffsetCurve;                                     // 0x0058(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCurveVector* EndShakeRotateCurve;                                     // 0x0060(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TUPZ[0x8];                                   // 0x0068(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.AmmonRecoilStruct
	 * Size -> 0x0028
	 */
	struct FAmmonRecoilStruct
	{
	public:
		float                                                      CostTime;                                                // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1DKZ[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UCurveFloat* RecoilRangeCurve;                                        // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    APointCurveKeyIndex;                                     // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      APointMin;                                               // 0x0014(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      APointMax;                                               // 0x0018(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    BPointCurveKeyIndex;                                     // 0x001C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BPointMin;                                               // 0x0020(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BPointMax;                                               // 0x0024(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.AmmonVerticalRecoilStruct
	 * Size -> 0x0008 (FullSize[0x0030] - InheritedSize[0x0028])
	 */
	struct FAmmonVerticalRecoilStruct : public FAmmonRecoilStruct
	{
	public:
		class UCurveFloat* ContinuousFireWeightCurve;                               // 0x0028(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.AmmonHorizontalRecoilStruct
	 * Size -> 0x0008 (FullSize[0x0030] - InheritedSize[0x0028])
	 */
	struct FAmmonHorizontalRecoilStruct : public FAmmonRecoilStruct
	{
	public:
		class UCurveVector* ContinuousFireInfoCurve;                                 // 0x0028(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.AmmonRecoilRollStruct
	 * Size -> 0x0018 (FullSize[0x0040] - InheritedSize[0x0028])
	 */
	struct FAmmonRecoilRollStruct : public FAmmonRecoilStruct
	{
	public:
		class UCurveFloat* RollProbabilityCurve;                                    // 0x0028(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ADSRollCOP;                                              // 0x0030(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_J0Z9[0x4];                                   // 0x0034(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UCurveFloat* ContinuousFireWeightCurve;                               // 0x0038(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.AmmonRecoilCrossHair
	 * Size -> 0x0024
	 */
	struct FAmmonRecoilCrossHair
	{
	public:
		float                                                      VMaxDistanceOffSetScale;                                 // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      VVibrationDurationScale;                                 // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      VSingleOffSetScale;                                      // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      VContinuousOffSetScale;                                  // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HMaxDistanceOffSetScale;                                 // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HVibrationDurationScale;                                 // 0x0014(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HSingleOffSetScale;                                      // 0x0018(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HContinuousOffSetScale;                                  // 0x001C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HOffSetProbabilityScale;                                 // 0x0020(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.AmmonRecoilScopeRoll
	 * Size -> 0x0010 (FullSize[0x0038] - InheritedSize[0x0028])
	 */
	struct FAmmonRecoilScopeRoll : public FAmmonRecoilStruct
	{
	public:
		class UCurveFloat* RollProbabilityCurve;                                    // 0x0028(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCurveFloat* ContinuousFireWeightCurve;                               // 0x0030(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.AmmonRecoilScope
	 * Size -> 0x00B8
	 */
	struct FAmmonRecoilScope
	{
	public:
		bool                                                       EnableScopeVibration;                                    // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       EnableCrossHairVibration;                                // 0x0001(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       EnableScopeRoll;                                         // 0x0002(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_M4VO[0x1];                                   // 0x0003(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ScopeVMaxDistanceOffSet;                                 // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ScopeVVibrationDuration;                                 // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WVN5[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UCurveFloat* ScopeVSingleOffSetCurve;                                 // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCurveFloat* ScopeVContinuousOffSetCurve;                             // 0x0018(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ScopeVContinuousFallingDuration;                         // 0x0020(0x0004) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7MC6[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UCurveFloat* ScopeVContinuousFallingCurve;                            // 0x0028(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ScopeVContinuousFallingPointIndex;                       // 0x0030(0x0004) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ScopeHMaxDistanceOffSet;                                 // 0x0034(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ScopeHVibrationDuration;                                 // 0x0038(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Z5LW[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UCurveFloat* ScopeHSingleOffSetCurve;                                 // 0x0040(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCurveFloat* ScopeHContinuousOffSetCurve;                             // 0x0048(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCurveFloat* ScopeHOffSetProbabilityCurve;                            // 0x0050(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FAmmonRecoilCrossHair                               CrossHairScaleSettings;                                  // 0x0058(0x0024) Edit, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DD9V[0x4];                                   // 0x007C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FAmmonRecoilScopeRoll                               ScopeRollSettings;                                       // 0x0080(0x0038) Edit, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.TracerBulletData
	 * Size -> 0x0040
	 */
	struct FTracerBulletData
	{
	public:
		float                                                      DeflectionAnglePerSec;                                   // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaximumDetectionAngle;                                   // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HomingRange;                                             // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bTraceTargetOnly;                                        // 0x000C(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JS5N[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              TracingTargetWarningSound;                               // 0x0010(0x0010) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              TracingTargetWarningRTPC;                                // 0x0020(0x0010) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              TracingAuthorPromptSound;                                // 0x0030(0x0010) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.FootEffect
	 * Size -> 0x0040
	 */
	struct FFootEffect
	{
	public:
		EFootEffectType                                            Type;                                                    // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CY0A[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UParticleSystem* PSTemplate;                                              // 0x0008(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              PSTemplateSoft[0x28];                                    // 0x0010(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		class FName                                                SocketName;                                              // 0x0038(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.CharacterSound
	 * Size -> 0x0030
	 */
	struct FCharacterSound
	{
	public:
		class FString                                              SoundOptPlayer;                                          // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              SoundOptTeammate;                                        // 0x0010(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              SoundOptEnemy;                                           // 0x0020(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarSkinnedAsset
	 * Size -> 0x0008
	 */
	struct FSolarSkinnedAsset
	{
	public:
		unsigned char                                              UnknownData_97LL[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.SolarSkinnedParticleSystem
	 * Size -> 0x0068 (FullSize[0x0070] - InheritedSize[0x0008])
	 */
	struct FSolarSkinnedParticleSystem : public FSolarSkinnedAsset
	{
	public:
		struct FSoftObjectPath                                     DefaultSkinnedParticle;                                  // 0x0008(0x0018) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TMap<int32_t, struct FSoftObjectPath>                      SkinnedParticles;                                        // 0x0020(0x0050) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.AttachedMeshInfo
	 * Size -> 0x0040
	 */
	struct FAttachedMeshInfo
	{
	public:
		class UStaticMesh* MeshResource;                                            // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                SocketName;                                              // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTransform                                          TransformOffset;                                         // 0x0010(0x0030) Edit, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.MeerkatConfig
	 * Size -> 0x0014
	 */
	struct FMeerkatConfig
	{
	public:
		int32_t                                                    ID;                                                      // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Min;                                                     // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Max;                                                     // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Tolerance;                                               // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ProbeInterval;                                           // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.AttributeSubSetting
	 * Size -> 0x000C
	 */
	struct FAttributeSubSetting
	{
	public:
		bool                                                       bUsingAttributeSub;                                      // 0x0000(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EAttributeSubBehavior                                      Behavior;                                                // 0x0001(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_R4DZ[0x2];                                   // 0x0002(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    AttributeSubID;                                          // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Value;                                                   // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.VertexAnimInfo
	 * Size -> 0x0010
	 */
	struct FVertexAnimInfo
	{
	public:
		int32_t                                                    StartFrame;                                              // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    EndFrame;                                                // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Length;                                                  // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       Loop;                                                    // 0x000C(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MZ2F[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.BattlegroundMapElementData
	 * Size -> 0x000C
	 */
	struct FBattlegroundMapElementData
	{
	public:
		int32_t                                                    SubModeID;                                               // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EBattlegroundMapElementType                                Type;                                                    // 0x0004(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EFactionType                                               DefaultOwnerFaction;                                     // 0x0005(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EDeploymentType                                            DeploymentType;                                          // 0x0006(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EBattlegroundPlayerStartRegion                             PlayerStartRegion;                                       // 0x0007(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      EnemyCheckDistance;                                      // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.ControlPointData
	 * Size -> 0x0014
	 */
	struct FControlPointData
	{
	public:
		float                                                      OccupiedAddScorePerSec;                                  // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              MinProgress;                                             // 0x0004(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              MaxProgress;                                             // 0x0005(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DB92[0x2];                                   // 0x0006(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      OccupyingProgressPerSec;                                 // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ReOccupyingProgressPerSec;                               // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RegainTime;                                              // 0x0010(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.PersonalScoreData
	 * Size -> 0x0008
	 */
	struct FPersonalScoreData
	{
	public:
		EPersonalScoreType                                         ScoreType;                                               // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_II71[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    Score;                                                   // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.BattlegroundGlobalData
	 * Size -> 0x0040
	 */
	struct FBattlegroundGlobalData
	{
	public:
		int32_t                                                    MaxBattleTime;                                           // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              WaitingLandCountDownTime;                                // 0x0004(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HMMS[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      BattlePrepareTime;                                       // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RebirthWaitTime;                                         // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RebirthInvincibleTime;                                   // 0x0010(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DeployConfirmTime;                                       // 0x0014(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    BatttleEndLeaveTime;                                     // 0x0018(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      VictoryScore;                                            // 0x001C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BonusScorePerSec;                                        // 0x0020(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZH47[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FPersonalScoreData>                          PersonalScoreArray;                                      // 0x0028(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    AiLevel;                                                 // 0x0038(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LUGN[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.BattlegroundSubModeData
	 * Size -> 0x001C
	 */
	struct FBattlegroundSubModeData
	{
	public:
		int32_t                                                    SubModeID;                                               // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MapId;                                                   // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           MapCenter;                                               // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MapFOV;                                                  // 0x0010(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           SafeAreaCenter;                                          // 0x0014(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.PrePooledBundle
	 * Size -> 0x0010
	 */
	struct FPrePooledBundle
	{
	public:
		class FName                                                ClassPath;                                               // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Number;                                                  // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bNeedOnClient;                                           // 0x000C(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bNeedOnServer;                                           // 0x000D(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BEB3[0x2];                                   // 0x000E(0x0002) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.GameStartConditionList
	 * Size -> 0x0058
	 */
	struct FGameStartConditionList
	{
	public:
		unsigned char                                              UnknownData_WJN1[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FGameplayTagContainer                               ServerStartConditionList;                                // 0x0008(0x0020) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		struct FGameplayTagContainer                               ClientStartConditionList;                                // 0x0028(0x0020) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class AGameStateBase* Owner;                                                   // 0x0048(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_Q1VP[0x8];                                   // 0x0050(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.TournamentData
	 * Size -> 0x0010
	 */
	struct FTournamentData
	{
	public:
		int32_t                                                    StartTime;                                               // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    DelayTime;                                               // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Turn;                                                    // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESCTournamentType                                          TournamentType;                                          // 0x000C(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0KXK[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.CustomServerData
	 * Size -> 0x0058
	 */
	struct FCustomServerData
	{
	public:
		class FString                                              ID;                                                      // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ConfigID;                                                // 0x0010(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_78NJ[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<int32_t>                                            WeaponBlacklist;                                         // 0x0018(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<int32_t>                                            WeaponTypeBlacklist;                                     // 0x0028(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<int32_t>                                            VehicleTypeBlacklist;                                    // 0x0038(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<int32_t>                                            VehicleClassBlacklist;                                   // 0x0048(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.CustomRoomData
	 * Size -> 0x00D8
	 */
	struct FCustomRoomData
	{
	public:
		class FString                                              Name;                                                    // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int64_t                                                    MinPlayerLimit;                                          // 0x0010(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int64_t                                                    MaxPlayerLimit;                                          // 0x0018(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              OwnerID;                                                 // 0x0020(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Passwd;                                                  // 0x0030(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    LevelLimit;                                              // 0x0040(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AU2K[0x4];                                   // 0x0044(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int64_t                                                    ShowID;                                                  // 0x0048(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int64_t                                                    MaxOBPlayerLimit;                                        // 0x0050(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsEnabledSwapPos;                                       // 0x0058(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsEnabledInvite;                                        // 0x0059(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsEnableTeamJoin;                                       // 0x005A(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESCRoomType                                                RoomType;                                                // 0x005B(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTournamentData                                     TournamentData;                                          // 0x005C(0x0010) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		int32_t                                                    RewardPoolID;                                            // 0x006C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RewardPoolPrizeType;                                     // 0x0070(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LKL7[0x4];                                   // 0x0074(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FCustomServerData                                   CustomServerData;                                        // 0x0078(0x0058) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		int32_t                                                    KeepMatchTime;                                           // 0x00D0(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_T93T[0x4];                                   // 0x00D4(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.BattlegroundScoreData
	 * Size -> 0x000C
	 */
	struct FBattlegroundScoreData
	{
	public:
		EFactionType                                               Faction;                                                 // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ILY7[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      Score;                                                   // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EMatchResult                                               MatchResult;                                             // 0x0008(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QDLS[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.MedalInfo
	 * Size -> 0x0010
	 */
	struct FMedalInfo
	{
	public:
		int32_t                                                    MedalID;                                                 // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MedalType;                                               // 0x0004(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MedalPos;                                                // 0x0008(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MedalLv;                                                 // 0x000C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.EquipVoiceData
	 * Size -> 0x0018
	 */
	struct FEquipVoiceData
	{
	public:
		int32_t                                                    Type;                                                    // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1DPU[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<int32_t>                                            Ids;                                                     // 0x0008(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.BattleCharacterData
	 * Size -> 0x0060
	 */
	struct FBattleCharacterData
	{
	public:
		int32_t                                                    CharacterId;                                             // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SkinId;                                                  // 0x0004(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CharacterLevel;                                          // 0x0008(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    TalentID;                                                // 0x000C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    UseTimes;                                                // 0x0010(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CardPose;                                                // 0x0014(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Cardbackground;                                          // 0x0018(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CharacterExp;                                            // 0x001C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Title;                                                   // 0x0020(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_60TS[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int64_t                                                    Expired;                                                 // 0x0028(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CombatScore;                                             // 0x0030(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    BagId;                                                   // 0x0034(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    TailFlameId;                                             // 0x0038(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CapsuleActorId;                                          // 0x003C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    DeathBoxId;                                              // 0x0040(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CharacterOwnerType;                                      // 0x0044(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FEquipVoiceData>                             Voice;                                                   // 0x0048(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    KillReport;                                              // 0x0058(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OVZG[0x4];                                   // 0x005C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.CharacterSkin
	 * Size -> 0x0008
	 */
	struct FCharacterSkin
	{
	public:
		int32_t                                                    SkinId;                                                  // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SkinOwnerType;                                           // 0x0004(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.ExpRankMedalData
	 * Size -> 0x0038
	 */
	struct FExpRankMedalData
	{
	public:
		class FString                                              Area;                                                    // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Country;                                                 // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Rank;                                                    // 0x0020(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CharacterId;                                             // 0x0024(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CharacterType;                                           // 0x0028(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RankScore;                                               // 0x002C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RankType;                                                // 0x0030(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    AutoID;                                                  // 0x0034(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.LastBattleInfo
	 * Size -> 0x001C
	 */
	struct FLastBattleInfo
	{
	public:
		float                                                      MvpScore;                                                // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    KillNum;                                                 // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    HitDown;                                                 // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    AssistNum;                                               // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RescueNum;                                               // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    AliveTime;                                               // 0x0014(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CauseDamage;                                             // 0x0018(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SettlementParam_ExtraRewardInfo
	 * Size -> 0x0040
	 */
	struct FSettlementParam_ExtraRewardInfo
	{
	public:
		int32_t                                                    TextID;                                                  // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TP0K[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              LocVariable;                                             // 0x0008(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Content;                                                 // 0x0018(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ItemList;                                                // 0x0028(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Order;                                                   // 0x0038(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ILDA[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.SettlementReward
	 * Size -> 0x0008
	 */
	struct FSettlementReward
	{
	public:
		int32_t                                                    ItemID;                                                  // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Amount;                                                  // 0x0004(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SettlementCrateReward
	 * Size -> 0x0018
	 */
	struct FSettlementCrateReward
	{
	public:
		int64_t                                                    crateID;                                                 // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FSettlementReward>                           Items;                                                   // 0x0008(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.ShieldInfo
	 * Size -> 0x0008
	 */
	struct FShieldInfo
	{
	public:
		int32_t                                                    ShieldID;                                                // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CurValue;                                                // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.EquippedEmotesData
	 * Size -> 0x0010
	 */
	struct FEquippedEmotesData
	{
	public:
		TArray<int32_t>                                            EmoteData;                                               // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.KillEnemySnapshot
	 * Size -> 0x0018
	 */
	struct FKillEnemySnapshot
	{
	public:
		unsigned char                                              UnknownData_BUBR[0x18];                                  // 0x0000(0x0018) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.SettlementTempData
	 * Size -> 0x00D8
	 */
	struct FSettlementTempData
	{
	public:
		int32_t                                                    TotalAccountExp;                                         // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    AccountLevel;                                            // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2SKL[0x50];                                  // 0x0008(0x0050) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    CurCharacterLevel;                                       // 0x0058(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    TotalCharacterExp;                                       // 0x005C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCharExpFull;                                            // 0x0060(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bHaveRankData;                                           // 0x0061(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_A7I9[0x2];                                   // 0x0062(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    RankBeforeScore;                                         // 0x0064(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RankAfterScore;                                          // 0x0068(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RankSurviveScore;                                        // 0x006C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RankBeforeSurviveScore;                                  // 0x0070(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RankDefeatScore;                                         // 0x0074(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RankBeforeDefeatScore;                                   // 0x0078(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RankDefeatRatio;                                         // 0x007C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RankLegend;                                              // 0x0080(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              RankProtectType;                                         // 0x0084(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsRankFight;                                             // 0x0085(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6QJQ[0x2];                                   // 0x0086(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    WinninScoreID;                                           // 0x0088(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    BattlePassID;                                            // 0x008C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    BattlePassAddExp;                                        // 0x0090(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    BattlePassExp;                                           // 0x0094(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<int32_t>                                            BattlePassTaskID;                                        // 0x0098(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<int32_t>                                            BattlePassTaskWeek;                                      // 0x00A8(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<int32_t>                                            BattlePassTaskAdd;                                       // 0x00B8(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<int32_t>                                            BattlePassTaskVal;                                       // 0x00C8(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.ExposeLocationMap
	 * Size -> 0x0058
	 */
	struct FExposeLocationMap
	{
	public:
		TMap<class ASolarPlayerState*, int32_t>                    InnerMap;                                                // 0x0000(0x0050) Protected, NativeAccessSpecifierProtected
		class ASolarPlayerState* Owner;                                                   // 0x0050(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct Solarland.SolarBattleWeaponData
	 * Size -> 0x0008
	 */
	struct FSolarBattleWeaponData
	{
	public:
		int32_t                                                    weaponid;                                                // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SkinId;                                                  // 0x0004(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SCMRepData
	 * Size -> 0x0038
	 */
	struct FSCMRepData
	{
	public:
		class FString                                              Name;                                                    // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESCMDataType                                               Type;                                                    // 0x0010(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESCMDataChangeType                                         DataChangeType;                                          // 0x0011(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZT15[0x2];                                   // 0x0012(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    VInt;                                                    // 0x0014(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      VFloat;                                                  // 0x0018(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector_NetQuantize100                              VVector;                                                 // 0x001C(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              VString;                                                 // 0x0028(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SCMRepDataArray
	 * Size -> 0x0078
	 */
	struct FSCMRepDataArray
	{
	public:
		class FString                                              Name;                                                    // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESCMDataType                                               Type;                                                    // 0x0010(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_523B[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<ESCMDataChangeType>                                 ChangeTypeArray;                                         // 0x0018(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<uint32_t>                                           ChangeIndexArray;                                        // 0x0028(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<int32_t>                                            VInt;                                                    // 0x0038(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<float>                                              VFloat;                                                  // 0x0048(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FVector_NetQuantize100>                      VVector;                                                 // 0x0058(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class FString>                                      VString;                                                 // 0x0068(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SCMRepDataMap
	 * Size -> 0x0078
	 */
	struct FSCMRepDataMap
	{
	public:
		class FString                                              Name;                                                    // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESCMDataType                                               Type;                                                    // 0x0010(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GK9K[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<ESCMDataChangeType>                                 ChangeTypeArray;                                         // 0x0018(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class FString>                                      KeyArray;                                                // 0x0028(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<int32_t>                                            VInt;                                                    // 0x0038(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<float>                                              VFloat;                                                  // 0x0048(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FVector_NetQuantize100>                      VVector;                                                 // 0x0058(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class FString>                                      VString;                                                 // 0x0068(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SCMReplicateHostData
	 * Size -> 0x0048
	 */
	struct FSCMReplicateHostData
	{
	public:
		ESCMHostType                                               HostType;                                                // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CQQ4[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              HostID;                                                  // 0x0008(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FSCMRepData>                                 RepDataArray;                                            // 0x0018(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FSCMRepDataArray>                            RepArrDataArray;                                         // 0x0028(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FSCMRepDataMap>                              RepMapDataArray;                                         // 0x0038(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.BattlePassLevelInfo
	 * Size -> 0x0018
	 */
	struct FBattlePassLevelInfo
	{
	public:
		unsigned char                                              UnknownData_H7TD[0x18];                                  // 0x0000(0x0018) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.PromptElemInfo
	 * Size -> 0x0034
	 */
	struct FPromptElemInfo
	{
	public:
		EBattlePromptType                                          Type;                                                    // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HRRJ[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector2D                                           ArrowPosition;                                           // 0x0004(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           IconPosition;                                            // 0x000C(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ArrowColorFactor;                                        // 0x0014(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ArrowLengthFactor;                                       // 0x0018(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    IconFactor;                                              // 0x001C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TransparencyFactor;                                      // 0x0020(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Distance;                                                // 0x0024(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Angle;                                                   // 0x0028(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bBlocked;                                                // 0x002C(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_U7IM[0x3];                                   // 0x002D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    UVIdx;                                                   // 0x0030(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.BattleUpgradeEffectCategoryColorSet
	 * Size -> 0x0060
	 */
	struct FBattleUpgradeEffectCategoryColorSet
	{
	public:
		struct FLinearColor                                        BannerCategoryTextColor;                                 // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLinearColor                                        BannerIconColor;                                         // 0x0010(0x0010) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLinearColor                                        BannerBorderColor;                                       // 0x0020(0x0010) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLinearColor                                        BannerBackgroundColor;                                   // 0x0030(0x0010) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLinearColor                                        BadgeIconColor;                                          // 0x0040(0x0010) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLinearColor                                        BadgeBackgroundColor;                                    // 0x0050(0x0010) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.BattleUpgradeEffectCategoryConfig
	 * Size -> 0x0064
	 */
	struct FBattleUpgradeEffectCategoryConfig
	{
	public:
		int32_t                                                    TitleLocalTextID;                                        // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FBattleUpgradeEffectCategoryColorSet                ColorSet;                                                // 0x0004(0x0060) Edit, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.BlueCircleInfo
	 * Size -> 0x0014
	 */
	struct FBlueCircleInfo
	{
	public:
		struct FVector                                             CenterLocation;                                          // 0x0000(0x000C) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Radius;                                                  // 0x000C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bHiddenInLevel;                                          // 0x0010(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9KN3[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.DeathBoxItemData
	 * Size -> 0x0008
	 */
	struct FDeathBoxItemData
	{
	public:
		int32_t                                                    ItemID;                                                  // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ItemNum;                                                 // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.ScreenEffectWidgetCacheInfo
	 * Size -> 0x0018
	 */
	struct FScreenEffectWidgetCacheInfo
	{
	public:
		class UClass* WidgetClass;                                             // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class USolarScreenEffectWidget*>                    WidgetInstances;                                         // 0x0008(0x0010) ExportObject, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.BuffEffectActorElemList
	 * Size -> 0x0010
	 */
	struct FBuffEffectActorElemList
	{
	public:
		TArray<class UBuffEffectActorElem*>                        ElemList;                                                // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.BuffParticleEffectGroup
	 * Size -> 0x00B0
	 */
	struct FBuffParticleEffectGroup
	{
	public:
		unsigned char                                              UnknownData_4JOM[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<class FName, struct FBuffEffectActorElemList>         InstantActorListMap;                                     // 0x0008(0x0050) Transient, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_13IV[0x8];                                   // 0x0058(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<class FName, struct FBuffEffectActorElemList>         DurationActorListMap;                                    // 0x0060(0x0050) Transient, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.BuffParticleEffectInstance
	 * Size -> 0x0030
	 */
	struct FBuffParticleEffectInstance
	{
	public:
		unsigned char                                              UnknownData_YKP3[0x20];                                  // 0x0000(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UBuffEffectActorElem*>                        AttachElemList;                                          // 0x0020(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
	};

	/**
	 * ScriptStruct Solarland.BuffEffectActorElemPool
	 * Size -> 0x0010
	 */
	struct FBuffEffectActorElemPool
	{
	public:
		TArray<class UBuffEffectActorElem*>                        PoolInstances;                                           // 0x0000(0x0010) ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate
	};

	/**
	 * ScriptStruct Solarland.ScreenEffectInstance
	 * Size -> 0x0098
	 */
	struct FScreenEffectInstance
	{
	public:
		unsigned char                                              UnknownData_L7AG[0x98];                                  // 0x0000(0x0098) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.ScreenEffectGroup
	 * Size -> 0x0060
	 */
	struct FScreenEffectGroup
	{
	public:
		TMap<int32_t, struct FScreenEffectInstance>                InstantScreenEffects;                                    // 0x0000(0x0050) NativeAccessSpecifierPublic
		TArray<struct FScreenEffectInstance>                       DurationScreenEffects;                                   // 0x0050(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.CameraShakeWithCurvePool
	 * Size -> 0x0010
	 */
	struct FCameraShakeWithCurvePool
	{
	public:
		TArray<class UCameraShakeWithCurve*>                       PooledShakes;                                            // 0x0000(0x0010) ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.CameraShakeWithCurveTemplatePool
	 * Size -> 0x0018
	 */
	struct FCameraShakeWithCurveTemplatePool
	{
	public:
		unsigned char                                              UnknownData_F6B1[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UCameraShakeWithCurve*>                       PooledShakes;                                            // 0x0008(0x0010) ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.ActiveCameraShakeWithCurve
	 * Size -> 0x0018
	 */
	struct FActiveCameraShakeWithCurve
	{
	public:
		class UCameraShakeWithCurve* ShakeInstance;                                           // 0x0000(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LAGM[0x10];                                  // 0x0008(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.RangeFloat
	 * Size -> 0x0008
	 */
	struct FRangeFloat
	{
	public:
		float                                                      Min;                                                     // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Max;                                                     // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SymmetricRangeFloat
	 * Size -> 0x000C
	 */
	struct FSymmetricRangeFloat
	{
	public:
		struct FRangeFloat                                         Range;                                                   // 0x0000(0x0008) Edit, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       bSymmetric;                                              // 0x0008(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9W5P[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.EchelonFormation
	 * Size -> 0x0010
	 */
	struct FEchelonFormation
	{
	public:
		TArray<struct FVector>                                     LocationList;                                            // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.CruiseFormation
	 * Size -> 0x0010
	 */
	struct FCruiseFormation
	{
	public:
		TArray<struct FVector>                                     LocationList;                                            // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.KnockoutParams
	 * Size -> 0x0028
	 */
	struct FKnockoutParams
	{
	public:
		float                                                      KnockoutKillPoint;                                       // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ENXF[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<float>                                              KnockoutRankPoints;                                      // 0x0008(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      KnockoutDamagePoint;                                     // 0x0018(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      KnockoutDamageTakenPoint;                                // 0x001C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ScalarParam;                                             // 0x0020(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JI2Y[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.SCMElementMapConfig
	 * Size -> 0x0020
	 */
	struct FSCMElementMapConfig
	{
	public:
		struct FSoftObjectPath                                     ElementLevel;                                            // 0x0000(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       LoadWithLevel;                                           // 0x0018(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ELevelLoadType                                             LoadType;                                                // 0x0019(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KT83[0x6];                                   // 0x001A(0x0006) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.SCMMapConfig
	 * Size -> 0x0080
	 */
	struct FSCMMapConfig
	{
	public:
		class FString                                              Desc;                                                    // 0x0000(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     LevelMap;                                                // 0x0010(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MiniMapId;                                               // 0x0028(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsStreaming;                                             // 0x002C(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_48NS[0x3];                                   // 0x002D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<class FString, struct FSCMElementMapConfig>           ElementGroups;                                           // 0x0030(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.CharacterMovementNetworkOptions
	 * Size -> 0x000C
	 */
	struct FCharacterMovementNetworkOptions
	{
	public:
		bool                                                       bEnabled;                                                // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bServerAcceptClientAuthoritativePosition;                // 0x0001(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIgnoreClientMovementErrorChecksAndCorrection;           // 0x0002(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CGYU[0x1];                                   // 0x0003(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MaxLocationDifferenceToTrustClientMove;                  // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EClientMoveTrustType                                       ClientMoveTrustType;                                     // 0x0008(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PQYZ[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.DataManagerConfig
	 * Size -> 0x0010
	 */
	struct FDataManagerConfig
	{
	public:
		class UDataTable* GeneralDataTable;                                        // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UDataTable* DataTable;                                               // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.InGameLevelingConfig
	 * Size -> 0x0008
	 */
	struct FInGameLevelingConfig
	{
	public:
		class UDataTable* ExpTable;                                                // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.ExpItemConfig
	 * Size -> 0x0010
	 */
	struct FExpItemConfig
	{
	public:
		class UDataTable* ConfigTable;                                             // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UDataTable* KilledConfigTable;                                       // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.ExpItemReduceRate
	 * Size -> 0x0008
	 */
	struct FExpItemReduceRate
	{
	public:
		class UDataTable* ConfigTable;                                             // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.BoxBurstItemConfig
	 * Size -> 0x0008
	 */
	struct FBoxBurstItemConfig
	{
	public:
		class UDataTable* ConfigTable;                                             // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.FinalsBGMData
	 * Size -> 0x0028
	 */
	struct FFinalsBGMData
	{
	public:
		bool                                                       bEnableFinalsBGM;                                        // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              FinalsBGMSafeAreaIndex;                                  // 0x0001(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              FinalsBGMPlayTeamCount;                                  // 0x0002(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              FinalsBGMStopTeamCount;                                  // 0x0003(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WOTR[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              FinalsBGMName_Play;                                      // 0x0008(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              FinalsBGMName_Stop;                                      // 0x0018(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.AbilityMeshMontage
	 * Size -> 0x0010
	 */
	struct FAbilityMeshMontage
	{
	public:
		class USkeletalMeshComponent* Mesh;                                                    // 0x0000(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimMontage* Montage;                                                 // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarGameplayEffectConfig
	 * Size -> 0x0010
	 */
	struct FSolarGameplayEffectConfig
	{
	public:
		class UClass* GameplayEffectClass;                                     // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bRemoveOnEnd;                                            // 0x0008(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5M0N[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    Level;                                                   // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarSkillProjectileData
	 * Size -> 0x00D0
	 */
	struct FSolarSkillProjectileData
	{
	public:
		float                                                      PredictTime;                                             // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_EJC3[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<ESlateDetailMode, float>                              PredictSimFrequencyMap;                                  // 0x0008(0x0050) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		float                                                      PredictRadius;                                           // 0x0058(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PredictSpeed;                                            // 0x005C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PredictGravityZ;                                         // 0x0060(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      GravityScale;                                            // 0x0064(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PredictAngle;                                            // 0x0068(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                StartSocketName;                                         // 0x006C(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             StartSocketOffset;                                       // 0x0074(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDisplayHoldModel;                                       // 0x0080(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7545[0x3];                                   // 0x0081(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                HoldSocketName;                                          // 0x0084(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4KIR[0x4];                                   // 0x008C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTransform                                          HoldModelTransform;                                      // 0x0090(0x0030) Edit, BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		int32_t                                                    count;                                                   // 0x00C0(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HorizontalOffsetAngle;                                   // 0x00C4(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5B2W[0x8];                                   // 0x00C8(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.DoppelgangerBehaviorConfig
	 * Size -> 0x0070
	 */
	struct FDoppelgangerBehaviorConfig
	{
	public:
		bool                                                       bNeedCopy;                                               // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCopyRotate;                                             // 0x0001(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCopyCrouch;                                             // 0x0002(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCopySprint;                                             // 0x0003(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCopyJump;                                               // 0x0004(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCopyJetFly;                                             // 0x0005(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DNQR[0x2];                                   // 0x0006(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MoveDuration;                                            // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           MoveDirection;                                           // 0x000C(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FindTargetRange;                                         // 0x0014(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCanAutoShoot;                                           // 0x0018(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5MKZ[0x7];                                   // 0x0019(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<EWeaponType, float>                                   ShootRequestInterval;                                    // 0x0020(0x0050) Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.ActiveDynamicEffectTriggerVolumeInfo
	 * Size -> 0x0010
	 */
	struct FActiveDynamicEffectTriggerVolumeInfo
	{
	public:
		TArray<struct FActiveGameplayEffectHandle>                 AppliedEffectHandles;                                    // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.AlertConfig
	 * Size -> 0x00B0
	 */
	struct FAlertConfig
	{
	public:
		bool                                                       bShowDebug;                                              // 0x0000(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_14G6[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      TickInterval;                                            // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HighAlertAngle;                                          // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HighAlertRadiusMin;                                      // 0x000C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HighAlertRadiusMax;                                      // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           HighAlertBoxExtent;                                      // 0x0014(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4YKY[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<EAlertDirection, float>                               AlertCD;                                                 // 0x0020(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		float                                                      VoiceCD;                                                 // 0x0070(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    VoiceID;                                                 // 0x0074(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      NoticeCD;                                                // 0x0078(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_G76Y[0x4];                                   // 0x007C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class FName>                                        OcclusionCheckBones;                                     // 0x0080(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FGameplayTagContainer                               BlockTags;                                               // 0x0090(0x0020) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarSkinnedMontage
	 * Size -> 0x0068 (FullSize[0x0070] - InheritedSize[0x0008])
	 */
	struct FSolarSkinnedMontage : public FSolarSkinnedAsset
	{
	public:
		struct FSoftObjectPath                                     DefaultSkinnedMontage;                                   // 0x0008(0x0018) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TMap<int32_t, struct FSoftObjectPath>                      SkinnedMontages;                                         // 0x0020(0x0050) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.TacticalDodgeDirectionConfig
	 * Size -> 0x0078
	 */
	struct FTacticalDodgeDirectionConfig
	{
	public:
		struct FSolarSkinnedMontage                                SkinnedMontage;                                          // 0x0000(0x0070) Edit, NativeAccessSpecifierPublic
		ECamShakeType                                              CameraShake;                                             // 0x0070(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IXAX[0x7];                                   // 0x0071(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.ActorEffectContent
	 * Size -> 0x0020
	 */
	struct FActorEffectContent
	{
	public:
		class UClass* ActorEffectClass;                                        // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EActorEffectAffectedActorType                              AffectedActorType;                                       // 0x0008(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bHideFX;                                                 // 0x0009(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_85UJ[0x2];                                   // 0x000A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FGameplayTag                                        VisibilityFlagTag;                                       // 0x000C(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RNZT[0xC];                                   // 0x0014(0x000C) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.BuffEffectContent
	 * Size -> 0x0014
	 */
	struct FBuffEffectContent
	{
	public:
		class FName                                                BuffEffectID;                                            // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bStopOnEnd;                                              // 0x0008(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EBuffEffectType                                            BuffEffectType;                                          // 0x0009(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_359O[0xA];                                   // 0x000A(0x000A) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.SoundContent
	 * Size -> 0x0008
	 */
	struct FSoundContent
	{
	public:
		class FName                                                SoundGroupName;                                          // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.HeadIconContent
	 * Size -> 0x0008
	 */
	struct FHeadIconContent
	{
	public:
		struct FGameplayTag                                        HeadIconTag;                                             // 0x0000(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.ParticleSystemContent
	 * Size -> 0x0088
	 */
	struct FParticleSystemContent
	{
	public:
		struct FActorParticleEffectSpawnInfo                       SpawnInfo;                                               // 0x0000(0x0070) Edit, NativeAccessSpecifierPublic
		bool                                                       bStopOnEnd;                                              // 0x0070(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_I88U[0x17];                                  // 0x0071(0x0017) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.CueContent
	 * Size -> 0x00B8
	 */
	struct FCueContent
	{
	public:
		ECueContentPlayTiming                                      PlayTiming;                                              // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_C3BE[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                CustomEvent;                                             // 0x0004(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              VisibleTargetFlag;                                       // 0x000C(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_EIDG[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FGameplayTagRequirements                            PlayTagRequirements;                                     // 0x0010(0x0050) Edit, NativeAccessSpecifierPublic
		TArray<struct FActorEffectContent>                         ActorEffectContents;                                     // 0x0060(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FBuffEffectContent>                          BuffEffectContents;                                      // 0x0070(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FSoundContent>                               SoundContents;                                           // 0x0080(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FHeadIconContent>                            HeadIconContents;                                        // 0x0090(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FParticleSystemContent>                      ParticleSystemContents;                                  // 0x00A0(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CN6U[0x8];                                   // 0x00B0(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.DGMatUpdateParams
	 * Size -> 0x0010
	 */
	struct FDGMatUpdateParams
	{
	public:
		class FName                                                MatParam;                                                // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCurveBase* MatCurve;                                                // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarExtraShieldEffect
	 * Size -> 0x0018
	 */
	struct FSolarExtraShieldEffect
	{
	public:
		int32_t                                                    Level;                                                   // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                TeammateEffectID;                                        // 0x0004(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                EnemyEffectID;                                           // 0x000C(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOnRemoveStop;                                           // 0x0014(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NYL9[0x3];                                   // 0x0015(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.SolarCharacterBillboardIconConfig
	 * Size -> 0x0030
	 */
	struct FSolarCharacterBillboardIconConfig
	{
	public:
		struct FGameplayTag                                        IconTag;                                                 // 0x0000(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              IconSoftPtr[0x28];                                       // 0x0008(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	};

	/**
	 * ScriptStruct Solarland.SolarCharacterBillboardIconGroupConfig
	 * Size -> 0x0010
	 */
	struct FSolarCharacterBillboardIconGroupConfig
	{
	public:
		TArray<struct FSolarCharacterBillboardIconConfig>          IconConfigs;                                             // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.CharacterBodyScaleConfig
	 * Size -> 0x0008
	 */
	struct FCharacterBodyScaleConfig
	{
	public:
		float                                                      CapsuleHeight;                                           // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MeshOriginHeight;                                        // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.BaseFollowExtentByTag
	 * Size -> 0x0060
	 */
	struct FBaseFollowExtentByTag
	{
	public:
		struct FGameplayTagRequirements                            TagRequirements;                                         // 0x0000(0x0050) Edit, NativeAccessSpecifierPublic
		struct FVector2D                                           BaseFollowTriggerExtent;                                 // 0x0050(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           BaseFollowStopExtent;                                    // 0x0058(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.WeaponAssistAimTargetConfig
	 * Size -> 0x0048
	 */
	struct FWeaponAssistAimTargetConfig
	{
	public:
		struct FVector2D                                           BaseFollowTriggerExtent;                                 // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           BaseFollowStopExtent;                                    // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FBaseFollowExtentByTag>                      BaseFollowExtentByTags;                                  // 0x0010(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           TargetVelocityFollowTriggerExtent;                       // 0x0020(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           LockAimingExtent;                                        // 0x0028(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           GlobalSensitivityScaleTriggerExtent;                     // 0x0030(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GXN1[0x10];                                  // 0x0038(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.CharacterAssistAimTargetConfig
	 * Size -> 0x00D8
	 */
	struct FCharacterAssistAimTargetConfig
	{
	public:
		struct FWeaponAssistAimTargetConfig                        Standing;                                                // 0x0000(0x0048) Edit, NativeAccessSpecifierPublic
		struct FWeaponAssistAimTargetConfig                        Crouching;                                               // 0x0048(0x0048) Edit, NativeAccessSpecifierPublic
		struct FWeaponAssistAimTargetConfig                        Crawling;                                                // 0x0090(0x0048) Edit, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.CharacterSpecializedComponentInfo
	 * Size -> 0x0028
	 */
	struct FCharacterSpecializedComponentInfo
	{
	public:
		TArray<ENetRole>                                           ValidRoles;                                              // 0x0000(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bEnableReplication;                                      // 0x0010(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5AKZ[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UClass*>                                      ComponentClasses;                                        // 0x0018(0x0010) Edit, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.CharacterSpecializedComponentInfos
	 * Size -> 0x0010
	 */
	struct FCharacterSpecializedComponentInfos
	{
	public:
		TArray<struct FCharacterSpecializedComponentInfo>          ComponentInfos;                                          // 0x0000(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.InjectorMeshPreset
	 * Size -> 0x0050
	 */
	struct FInjectorMeshPreset
	{
	public:
		struct FSoftObjectPath                                     InjectorMeshPath;                                        // 0x0000(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_O6GX[0x8];                                   // 0x0018(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTransform                                          InjectorRelativeTrans;                                   // 0x0020(0x0030) Edit, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.WaterEffectPreset
	 * Size -> 0x0050
	 */
	struct FWaterEffectPreset
	{
	public:
		unsigned char                                              EffectResource[0x28];                                    // 0x0000(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		class FName                                                DefaultTrackSocket;                                      // 0x0028(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                FTrackSocket;                                            // 0x0030(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                BTrackSocket;                                            // 0x0038(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                LTrackSocket;                                            // 0x0040(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                RTrackSocket;                                            // 0x0048(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.TreasureBoxOperatorMeshPreset
	 * Size -> 0x0050
	 */
	struct FTreasureBoxOperatorMeshPreset
	{
	public:
		struct FGameplayTag                                        StaticOrnamentMeshTag;                                   // 0x0000(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     TreasureBoxOperatorMeshPath;                             // 0x0008(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTransform                                          TreasureBoxOperatorRelativeTrans;                        // 0x0020(0x0030) Edit, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.OperatorMeshPreset
	 * Size -> 0x0120
	 */
	struct FOperatorMeshPreset
	{
	public:
		unsigned char                                              ShieldRepairFXResourceSoft[0x28];                        // 0x0000(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		struct FVector                                             ShieldRepairFXRelativeLocation;                          // 0x0028(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_H65U[0x4];                                   // 0x0034(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              ShieldMultiRecoverFXResourceSoft[0x28];                  // 0x0038(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		struct FVector                                             ShieldMultiRecoverFXRelativeLocation;                    // 0x0060(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HHG8[0x4];                                   // 0x006C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSoftObjectPath                                     ShieldOperatorMeshPath;                                  // 0x0070(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     ShieldOperatorBigMeshPath;                               // 0x0088(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTransform                                          ShieldOperatorRelativeTrans;                             // 0x00A0(0x0030) Edit, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     ShieldUpgradeOperatorMeshPath;                           // 0x00D0(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_34UN[0x8];                                   // 0x00E8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTransform                                          ShieldUpgradeOperatorRelativeTrans;                      // 0x00F0(0x0030) Edit, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.VehicleRepairToolMeshPreset
	 * Size -> 0x0050
	 */
	struct FVehicleRepairToolMeshPreset
	{
	public:
		struct FSoftObjectPath                                     MeshPath;                                                // 0x0000(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TO3Q[0x8];                                   // 0x0018(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTransform                                          RelativeTrans;                                           // 0x0020(0x0030) Edit, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.TeammateHUDPreset
	 * Size -> 0x0020
	 */
	struct FTeammateHUDPreset
	{
	public:
		class UClass* TeammateHUDClass;                                        // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUseDesireSize;                                          // 0x0008(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YE0P[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector2D                                           DrawSize;                                                // 0x000C(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ZOrder;                                                  // 0x0014(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DisplayMaxDistance;                                      // 0x0018(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WRUU[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.StaticMeshOrnamentConfig
	 * Size -> 0x0080
	 */
	struct FStaticMeshOrnamentConfig
	{
	public:
		struct FSoftObjectPath                                     OrnamentRes;                                             // 0x0000(0x0018) Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class FName                                                OrnamentAttachSocket;                                    // 0x0018(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FTransform                                          OrnamentRelativeTransform;                               // 0x0020(0x0030) Edit, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected
		struct FSoftObjectPath                                     OrnamentVisibilityConfig;                                // 0x0050(0x0018) Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		TArray<class FName>                                        OrnamentComponentTags;                                   // 0x0068(0x0010) Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_Y7HT[0x8];                                   // 0x0078(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.SkeletalMeshOrnamentConfig
	 * Size -> 0x00A0
	 */
	struct FSkeletalMeshOrnamentConfig
	{
	public:
		struct FSoftObjectPath                                     OrnamentRes;                                             // 0x0000(0x0018) Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FSoftClassPath                                      OrnamentABPRes;                                          // 0x0018(0x0018) Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class FName                                                OrnamentAttachSocket;                                    // 0x0030(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_37BR[0x8];                                   // 0x0038(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTransform                                          OrnamentRelativeTransform;                               // 0x0040(0x0030) Edit, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected
		struct FSoftObjectPath                                     OrnamentVisibilityConfig;                                // 0x0070(0x0018) Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		TArray<class FName>                                        OrnamentComponentTags;                                   // 0x0088(0x0010) Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_ZLSC[0x8];                                   // 0x0098(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.ChildActorOrnamentConfig
	 * Size -> 0x0080
	 */
	struct FChildActorOrnamentConfig
	{
	public:
		struct FSoftClassPath                                      OrnamentRes;                                             // 0x0000(0x0018) Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		class FName                                                OrnamentAttachSocket;                                    // 0x0018(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		struct FTransform                                          OrnamentRelativeTransform;                               // 0x0020(0x0030) Edit, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected
		struct FSoftObjectPath                                     OrnamentVisibilityConfig;                                // 0x0050(0x0018) Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		TArray<class FName>                                        OrnamentComponentTags;                                   // 0x0068(0x0010) Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		unsigned char                                              UnknownData_Q393[0x8];                                   // 0x0078(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.ChooseWeaponItemState
	 * Size -> 0x0004
	 */
	struct FChooseWeaponItemState
	{
	public:
		bool                                                       bCollected;                                              // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bSelected;                                               // 0x0001(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bSelectedBySlot1;                                        // 0x0002(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bSelectedBySlot2;                                        // 0x0003(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.ChooseWeaponItemData
	 * Size -> 0x0088
	 */
	struct FChooseWeaponItemData
	{
	public:
		class FName                                                RowName;                                                 // 0x0000(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    weaponid;                                                // 0x0008(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    WeaponTypeId;                                            // 0x000C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    WeaponSkinID;                                            // 0x0010(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCollected;                                              // 0x0014(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_T44D[0x3];                                   // 0x0015(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<int32_t>                                            AvailableScopes;                                         // 0x0018(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    DefaultScope;                                            // 0x0028(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_T1EX[0x4];                                   // 0x002C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              SelectedSlots[0x50];                                     // 0x0030(0x0050) UNKNOWN PROPERTY: SetProperty
		int32_t                                                    SelectedScope;                                           // 0x0080(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VZSH[0x4];                                   // 0x0084(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.StateItemStruct
	 * Size -> 0x0010
	 */
	struct FStateItemStruct
	{
	public:
		class UWidget* CrosshairChildWidget;                                    // 0x0000(0x0008) Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESlateVisibility                                           VisibilityType;                                          // 0x0008(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZXJM[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.StateMapItemStruct
	 * Size -> 0x0018
	 */
	struct FStateMapItemStruct
	{
	public:
		TArray<struct FStateItemStruct>                            ChildWidgetConfigList;                                   // 0x0000(0x0010) Edit, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bLoadChildWidgetTool;                                    // 0x0010(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BKAD[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.UICrossHairSpreadStruct
	 * Size -> 0x0048
	 */
	struct FUICrossHairSpreadStruct
	{
	public:
		class UWidget* TargetWidget;                                            // 0x0000(0x0008) Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESpreadType                                                SpreadType;                                              // 0x0008(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bPosition;                                               // 0x0009(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_G46G[0x2];                                   // 0x000A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      Angle;                                                   // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       Pos_UseCustomizeFunc;                                    // 0x0010(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bScale;                                                  // 0x0011(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SHC6[0x2];                                   // 0x0012(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector2D                                           ScaleFactor;                                             // 0x0014(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       Scale_UseCustomizeFunc;                                  // 0x001C(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bRenderAngle;                                            // 0x001D(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_POY7[0x2];                                   // 0x001E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      RenderAngleFactor;                                       // 0x0020(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       Angle_UseCustomizeFunc;                                  // 0x0024(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QF17[0x3];                                   // 0x0025(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector2D                                           OrginalVector;                                           // 0x0028(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		struct FVector2D                                           OrginalScale;                                            // 0x0030(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                      OrginalAngle;                                            // 0x0038(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		struct FVector2D                                           Dir;                                                     // 0x003C(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_Y3ZC[0x4];                                   // 0x0044(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.UICrossHairAimColorStruct
	 * Size -> 0x0028
	 */
	struct FUICrossHairAimColorStruct
	{
	public:
		class UImage* TargetImg;                                               // 0x0000(0x0008) Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLinearColor                                        TargetColor;                                             // 0x0008(0x0010) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_J53W[0x10];                                  // 0x0018(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.CrosshairLayout
	 * Size -> 0x0004
	 */
	struct FCrosshairLayout
	{
	public:
		float                                                      InitSpread;                                              // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.CrosshairSprite
	 * Size -> 0x0030
	 */
	struct FCrosshairSprite
	{
	public:
		struct FSoftObjectPath                                     Normal;                                                  // 0x0000(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     Energy;                                                  // 0x0018(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.CustomParamConfig
	 * Size -> 0x0020
	 */
	struct FCustomParamConfig
	{
	public:
		int32_t                                                    DisplayName;                                             // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Desc;                                                    // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ECustomParamType                                           ParamType;                                               // 0x0008(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ECustomParamValueType                                      ValueType;                                               // 0x0009(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5SWX[0x2];                                   // 0x000A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    DefaultIndex;                                            // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<float>                                              ValueRange;                                              // 0x0010(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.CategoryConfig
	 * Size -> 0x0040
	 */
	struct FCategoryConfig
	{
	public:
		int32_t                                                    Category;                                                // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YV8G[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FCustomParamConfig>                          Configs;                                                 // 0x0008(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              StyleClass[0x28];                                        // 0x0018(0x0028) UNKNOWN PROPERTY: SoftClassProperty
	};

	/**
	 * ScriptStruct Solarland.UserSetting
	 * Size -> 0x0020
	 */
	struct FUserSetting
	{
	public:
		int32_t                                                    Name;                                                    // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Category;                                                // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ECustomParamType                                           ParamType;                                               // 0x0008(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ECustomParamValueType                                      ValueType;                                               // 0x0009(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MO0X[0x2];                                   // 0x000A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    Index;                                                   // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<float>                                              ValueRange;                                              // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.BoxChargingInfo
	 * Size -> 0x001C
	 */
	struct FBoxChargingInfo
	{
	public:
		unsigned char                                              UnknownData_CJWN[0x1C];                                  // 0x0000(0x001C) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.TerminatorNotifyUIConfig
	 * Size -> 0x0028
	 */
	struct FTerminatorNotifyUIConfig
	{
	public:
		int32_t                                                    LocalizationID;                                          // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_X2YZ[0x14];                                  // 0x0004(0x0014) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass* TerminatorNotifyUI;                                      // 0x0018(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ECustomNoticeType                                          NoticeType;                                              // 0x0020(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ESY5[0x3];                                   // 0x0021(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      NoticeTime;                                              // 0x0024(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.DotLineData
	 * Size -> 0x0020
	 */
	struct FDotLineData
	{
	public:
		class AActor* StartActor;                                              // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AActor* EndActor;                                                // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLinearColor                                        DotLineColor;                                            // 0x0010(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.CircleData
	 * Size -> 0x001C
	 */
	struct FCircleData
	{
	public:
		struct FVector2D                                           Center;                                                  // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Radius;                                                  // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLinearColor                                        LineColor;                                               // 0x000C(0x0010) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.StaticMeshOverride
	 * Size -> 0x0050
	 */
	struct FStaticMeshOverride
	{
	public:
		unsigned char                                              MeshOverride[0x28];                                      // 0x0000(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		unsigned char                                              MaterialOverride[0x28];                                  // 0x0028(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	};

	/**
	 * ScriptStruct Solarland.SkeletalMeshOverride
	 * Size -> 0x0050
	 */
	struct FSkeletalMeshOverride
	{
	public:
		unsigned char                                              MeshOverride[0x28];                                      // 0x0000(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		unsigned char                                              MaterialOverride[0x28];                                  // 0x0028(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	};

	/**
	 * ScriptStruct Solarland.CustomJumpParams
	 * Size -> 0x0098
	 */
	struct FCustomJumpParams
	{
	public:
		float                                                      JumpHeight;                                              // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      JumpTime;                                                // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      JumpDelay;                                               // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bEnableLateralSpeedAdjust;                               // 0x000C(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8R0S[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRuntimeFloatCurve                                  LateralSpeedAdjustCurve;                                 // 0x0010(0x0088) Edit, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.DuckRollingCharacterHitConfig
	 * Size -> 0x00A0
	 */
	struct FDuckRollingCharacterHitConfig
	{
	public:
		float                                                      MinSelfSpeed;                                            // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NNHR[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass* EnableCharacterHitAbility;                               // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UParticleSystem* SpeedEffect;                                             // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_M58C[0x8];                                   // 0x0018(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTransform                                          SpeedEffectRelativeTransform;                            // 0x0020(0x0030) Edit, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		float                                                      PushUpAngle;                                             // 0x0050(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      UpBoundingRatio;                                         // 0x0054(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             PushBoxExtent;                                           // 0x0058(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HHAP[0x4];                                   // 0x0064(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UCurveFloat* PushSpeedCurve;                                          // 0x0068(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bTeleportTargetOnPush;                                   // 0x0070(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZRX8[0x3];                                   // 0x0071(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MinRelativeSpeedForDamage;                               // 0x0074(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinIntervalForDamage;                                    // 0x0078(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BaseDamage;                                              // 0x007C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCurveFloat* RelativeSpeedToDamageMultiplierCurve;                    // 0x0080(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UParticleSystem* HitEffect;                                               // 0x0088(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              HitSoundEvent;                                           // 0x0090(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SpawnedActorHandle
	 * Size -> 0x0004
	 */
	struct FSpawnedActorHandle
	{
	public:
		uint32_t                                                   Handle;                                                  // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
	};

	/**
	 * ScriptStruct Solarland.FeedbackSingleData
	 * Size -> 0x0030
	 */
	struct FFeedbackSingleData
	{
	public:
		class UUserWidget* AnimationWidget;                                         // 0x0000(0x0008) Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                AnimationName;                                           // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AnimationPlaySpeed;                                      // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AnimationStartTime;                                      // 0x0014(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AnimationAgainStartTime;                                 // 0x0018(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    AnimationLoopNumber;                                     // 0x001C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                AudioName;                                               // 0x0020(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EAnimationType                                             AnimationType;                                           // 0x0028(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8FG1[0x7];                                   // 0x0029(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.SCMChangeDataArray
	 * Size -> 0x0020
	 */
	struct FSCMChangeDataArray
	{
	public:
		TArray<ESCMDataChangeType>                                 ChangeType;                                              // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<uint32_t>                                           ChangeIndexArray;                                        // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SCMChangeDataMap
	 * Size -> 0x0020
	 */
	struct FSCMChangeDataMap
	{
	public:
		TArray<ESCMDataChangeType>                                 ChangeType;                                              // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class FString>                                      ChangeKeyArray;                                          // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.HostChangeData
	 * Size -> 0x00F0
	 */
	struct FHostChangeData
	{
	public:
		TMap<class FString, ESCMDataChangeType>                    DataChangeMap;                                           // 0x0000(0x0050) NativeAccessSpecifierPublic
		TMap<class FString, struct FSCMChangeDataArray>            ArrayChangeMap;                                          // 0x0050(0x0050) NativeAccessSpecifierPublic
		TMap<class FString, struct FSCMChangeDataMap>              MapChangeMap;                                            // 0x00A0(0x0050) NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SCMSaveDataBase
	 * Size -> 0x0018
	 */
	struct FSCMSaveDataBase
	{
	public:
		class FString                                              Name;                                                    // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESCMDataType                                               Type;                                                    // 0x0010(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESCMDataReplicateType                                      RepType;                                                 // 0x0011(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GO86[0x6];                                   // 0x0012(0x0006) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.SCMSaveData
	 * Size -> 0x0008 (FullSize[0x0020] - InheritedSize[0x0018])
	 */
	struct FSCMSaveData : public FSCMSaveDataBase
	{
	public:
		unsigned char                                              UnknownData_4NBQ[0x8];                                   // 0x0018(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.SCMArrayData
	 * Size -> 0x0010 (FullSize[0x0028] - InheritedSize[0x0018])
	 */
	struct FSCMArrayData : public FSCMSaveDataBase
	{
	public:
		unsigned char                                              UnknownData_T1QT[0x10];                                  // 0x0018(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.SCMMapData
	 * Size -> 0x0050 (FullSize[0x0068] - InheritedSize[0x0018])
	 */
	struct FSCMMapData : public FSCMSaveDataBase
	{
	public:
		unsigned char                                              UnknownData_PW18[0x50];                                  // 0x0018(0x0050) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.SCMHostData
	 * Size -> 0x0488
	 */
	struct FSCMHostData
	{
	public:
		struct FHostChangeData                                     DataChangeToGlobal;                                      // 0x0000(0x00F0) NativeAccessSpecifierPublic
		struct FHostChangeData                                     DataChangeToSide;                                        // 0x00F0(0x00F0) NativeAccessSpecifierPublic
		struct FHostChangeData                                     DataChangeToSelf;                                        // 0x01E0(0x00F0) NativeAccessSpecifierPublic
		TMap<class FString, struct FSCMSaveData>                   DataMap;                                                 // 0x02D0(0x0050) NativeAccessSpecifierPublic
		TMap<class FString, struct FSCMArrayData>                  ArrayDataMap;                                            // 0x0320(0x0050) NativeAccessSpecifierPublic
		TMap<class FString, struct FSCMMapData>                    MapDataMap;                                              // 0x0370(0x0050) NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_26V7[0xA0];                                  // 0x03C0(0x00A0) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FScriptMulticastDelegate                             SCMDataChangeDelegate;                                   // 0x0460(0x0010) ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic
		class FString                                              Name;                                                    // 0x0470(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESCMHostType                                               HostType;                                                // 0x0480(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_EY9N[0x7];                                   // 0x0481(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.LoadingScreenLevelData
	 * Size -> 0x0068
	 */
	struct FLoadingScreenLevelData
	{
	public:
		struct FVector                                             BackupLevelStreamingLocation;                            // 0x0000(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BPXH[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              LockupLevels[0x50];                                      // 0x0010(0x0050) UNKNOWN PROPERTY: SetProperty
		float                                                      LockupLevelMaxSquaredXYDistance;                         // 0x0060(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5QYA[0x4];                                   // 0x0064(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.VibratePlayParams
	 * Size -> 0x0028
	 */
	struct FVibratePlayParams
	{
	public:
		class FString                                              ClipToPlay;                                              // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Duration;                                                // 0x0010(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Loop;                                                    // 0x0014(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Priority;                                                // 0x0018(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Interval;                                                // 0x001C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Amplitude;                                               // 0x0020(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_P1NG[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.VibrateDevicePlayParams
	 * Size -> 0x0050
	 */
	struct FVibrateDevicePlayParams
	{
	public:
		TMap<EVibrateDeviceType, struct FVibratePlayParams>        DeviceMap;                                               // 0x0000(0x0050) Edit, BlueprintVisible, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.VibrateIntensityPlayParams
	 * Size -> 0x0050
	 */
	struct FVibrateIntensityPlayParams
	{
	public:
		TMap<EGameplayVibrateIntensity, struct FVibrateDevicePlayParams> IntensityMap;                                            // 0x0000(0x0050) Edit, BlueprintVisible, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SCMRankListMulticast
	 * Size -> 0x0018
	 */
	struct FSCMRankListMulticast
	{
	public:
		int32_t                                                    BeginRank;                                               // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    EndRank;                                                 // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FScriptMulticastDelegate                             RankListChangeMulticast;                                 // 0x0008(0x0010) ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.WeaponAttributeGameplayTags
	 * Size -> 0x0018
	 */
	struct FWeaponAttributeGameplayTags
	{
	public:
		struct FGameplayTag                                        Spread;                                                  // 0x0000(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FGameplayTag                                        HorizontalRecoil;                                        // 0x0008(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FGameplayTag                                        VerticalRecoil;                                          // 0x0010(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.AssitLockBoneWeight
	 * Size -> 0x000C
	 */
	struct FAssitLockBoneWeight
	{
	public:
		class FName                                                BoneName;                                                // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BoneWeight;                                              // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.WeaponHitResponse
	 * Size -> 0x0001
	 */
	struct FWeaponHitResponse
	{
	public:
		bool                                                       bForceBlock : 1;                                         // 0x0000(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bForcePenetrate : 1;                                     // 0x0000(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bForceAimIgnore : 1;                                     // 0x0000(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAffectHalo : 1;                                         // 0x0000(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bTakeDamage : 1;                                         // 0x0000(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bShowExplode : 1;                                        // 0x0000(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bShowDecal : 1;                                          // 0x0000(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bPlaySound : 1;                                          // 0x0000(0x0001) BIT_FIELD Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarBulletContainerLayout
	 * Size -> 0x001C
	 */
	struct FSolarBulletContainerLayout
	{
	public:
		struct FVector2D                                           Offset;                                                  // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SpinAngle;                                               // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           Scale;                                                   // 0x000C(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           OneBulletSize;                                           // 0x0014(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.BulletContainerColor
	 * Size -> 0x0008
	 */
	struct FBulletContainerColor
	{
	public:
		struct FColor                                              Normal;                                                  // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FColor                                              Energy;                                                  // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.PlayerSelectInfo
	 * Size -> 0x0028
	 */
	struct FPlayerSelectInfo
	{
	public:
		class ASolarPlayerState* Player;                                                  // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    PlayerPos;                                               // 0x0008(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CharacterId;                                             // 0x000C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SkinId;                                                  // 0x0010(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    HeroExpLevel;                                            // 0x0014(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       HasConfirm;                                              // 0x0018(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3O7E[0x3];                                   // 0x0019(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      PlayerSelectTime;                                        // 0x001C(0x0004) ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsInHeroPickProcess;                                     // 0x0020(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KS8Y[0x7];                                   // 0x0021(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.PlayerSelection
	 * Size -> 0x0018
	 */
	struct FPlayerSelection
	{
	public:
		class ASolarPlayerState* PlayerState;                                             // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UHeroPickCharacterData* SelectionData;                                           // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CachedPos;                                               // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_76UA[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.SoundGroupHitSoundWwiseParams
	 * Size -> 0x0040
	 */
	struct FSoundGroupHitSoundWwiseParams
	{
	public:
		class FString                                              SwitchGroup;                                             // 0x0000(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              SwitchState_IAttackOther;                                // 0x0010(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              SwitchState_OtherAttackMe;                               // 0x0020(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              SwitchState_Other;                                       // 0x0030(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.HitTraceData
	 * Size -> 0x0018
	 */
	struct FHitTraceData
	{
	public:
		EHitTraceType                                              Type;                                                    // 0x0000(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LO40[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             TraceDirection;                                          // 0x0004(0x000C) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Damage;                                                  // 0x0010(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HitTime;                                                 // 0x0014(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.HitTraceMeshWidgetData
	 * Size -> 0x003C
	 */
	struct FHitTraceMeshWidgetData
	{
	public:
		unsigned char                                              UnknownData_SP8G[0x4];                                   // 0x0000(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FHitTraceData                                       HitTraceSourceData;                                      // 0x0004(0x0018) NoDestructor, NativeAccessSpecifierPublic
		struct FVector2D                                           Position;                                                // 0x001C(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Scale;                                                   // 0x0024(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Angle;                                                   // 0x0028(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Opacity;                                                 // 0x002C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              IconIndex;                                               // 0x0030(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              ColorIdx;                                                // 0x0031(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OBIL[0x2];                                   // 0x0032(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    ArcLength;                                               // 0x0034(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SniperLength;                                            // 0x0038(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarClientAdjustPositionInfo
	 * Size -> 0x0038
	 */
	struct FSolarClientAdjustPositionInfo
	{
	public:
		unsigned char                                              UnknownData_1HVL[0x20];                                  // 0x0000(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UPrimitiveComponent* NewBase;                                                 // 0x0020(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_R6IT[0x10];                                  // 0x0028(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.ServerMoveData
	 * Size -> 0x0050
	 */
	struct FServerMoveData
	{
	public:
		float                                                      Timestamp;                                               // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8H8E[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int64_t                                                    ServerTimeStamp;                                         // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             Acceleration;                                            // 0x0010(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             Velocity;                                                // 0x001C(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             Loction;                                                 // 0x0028(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              CompressedMoveFlags;                                     // 0x0034(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              RollByte;                                                // 0x0035(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YAVR[0x2];                                   // 0x0036(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		uint32_t                                                   YawPitchInt;                                             // 0x0038(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              MovementMode;                                            // 0x003C(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Z8JF[0x3];                                   // 0x003D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		uint32_t                                                   FullBodyAnimationState;                                  // 0x0040(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		uint32_t                                                   MontageAnimState;                                        // 0x0044(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              JetPackFlag;                                             // 0x0048(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bValid;                                                  // 0x0049(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_53LT[0x6];                                   // 0x004A(0x0006) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.SolarAerialReconnaissanceConfig
	 * Size -> 0x0008
	 */
	struct FSolarAerialReconnaissanceConfig
	{
	public:
		int32_t                                                    MarkMaximum;                                             // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bMarkTeamMode;                                           // 0x0004(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VMSS[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.WorldMarkData
	 * Size -> 0x006C (FullSize[0x0078] - InheritedSize[0x000C])
	 */
	struct FWorldMarkData : public FFastArraySerializerItem
	{
	public:
		int32_t                                                    WorldMarkGUID;                                           // 0x000C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector_NetQuantize                                 WorldPos;                                                // 0x0010(0x000C) Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              PosInTeam;                                               // 0x001C(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GJPC[0x3];                                   // 0x001D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector2D                                           ScreenCoordinate;                                        // 0x0020(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EWorldMarkType                                             Type;                                                    // 0x0028(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0RSN[0x3];                                   // 0x0029(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    ItemID;                                                  // 0x002C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int64_t                                                    ItemInstanceId;                                          // 0x0030(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    NameLocID;                                               // 0x0038(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Y28K[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              IconImg;                                                 // 0x0040(0x0010) Edit, BlueprintVisible, ZeroConstructor, RepSkip, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    WeaponLevel;                                             // 0x0050(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EInteractableType                                          InteractableType;                                        // 0x0054(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FS8S[0x3];                                   // 0x0055(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    MarkVoiceEventName;                                      // 0x0058(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    OuterBoxThisID;                                          // 0x005C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MarkTimeStamp;                                           // 0x0060(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LifeTime;                                                // 0x0064(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ExtraLiveTime;                                           // 0x0068(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TWeakObjectPtr<class AActor>                               AttachedActor;                                           // 0x006C(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5T99[0x4];                                   // 0x0074(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.VehicleEjectParams
	 * Size -> 0x0010
	 */
	struct FVehicleEjectParams
	{
	public:
		float                                                      EjectTime;                                               // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      EjectDistance;                                           // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      EjectBreakableTime;                                      // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      EjectCameraFadeOutTime;                                  // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.ULoadingDataEntry
	 * Size -> 0x00B8
	 */
	struct FULoadingDataEntry
	{
	public:
		struct FSoftObjectPath                                     LoadingBg;                                               // 0x0000(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<int32_t>                                            TipIntArray;                                             // 0x0018(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FWrappedLocalTextID>                         TipLocalTitleArray;                                      // 0x0028(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FWrappedLocalTextID>                         TipLocalLeftArray;                                       // 0x0038(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FWrappedLocalTextID>                         TipLocalMidArray;                                        // 0x0048(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FWrappedLocalTextID>                         TipLocalRightArray;                                      // 0x0058(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class FString>                                      TipArray;                                                // 0x0068(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class FString>                                      TipTitleArray;                                           // 0x0078(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class FString>                                      TipLeftArray;                                            // 0x0088(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class FString>                                      TipMidArray;                                             // 0x0098(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class FString>                                      TipRightArray;                                           // 0x00A8(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.MassInvStateTransitionData
	 * Size -> 0x0090
	 */
	struct FMassInvStateTransitionData
	{
	public:
		float                                                      TransitionTime;                                          // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0IFM[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRuntimeFloatCurve                                  TransitionCurve;                                         // 0x0008(0x0088) Edit, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.MassInvMaterialParams
	 * Size -> 0x0028
	 */
	struct FMassInvMaterialParams
	{
	public:
		float                                                      PatternResolution;                                       // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Detail;                                                  // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaskBlend;                                               // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Opacity;                                                 // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      StealthAdjust;                                           // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Tilling;                                                 // 0x0014(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLinearColor                                        BaseColor;                                               // 0x0018(0x0010) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.MassInvStateMaterialParams
	 * Size -> 0x0078
	 */
	struct FMassInvStateMaterialParams
	{
	public:
		struct FMassInvMaterialParams                              PrepareParams;                                           // 0x0000(0x0028) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FMassInvMaterialParams                              NormalParams;                                            // 0x0028(0x0028) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FMassInvMaterialParams                              SprintParams;                                            // 0x0050(0x0028) Edit, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.NormalMaterialChange
	 * Size -> 0x0050
	 */
	struct FNormalMaterialChange
	{
	public:
		unsigned char                                              SourceMaterial[0x28];                                    // 0x0000(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		struct FAddMaterialChangeParams                            Params;                                                  // 0x0028(0x0028) Edit, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.MaterialVariableChange
	 * Size -> 0x0018
	 */
	struct FMaterialVariableChange
	{
	public:
		class FName                                                Variable;                                                // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FromValue;                                               // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ToValue;                                                 // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BeginProgress;                                           // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      EndProgress;                                             // 0x0014(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.MapMarkElem
	 * Size -> 0x0010
	 */
	struct FMapMarkElem
	{
	public:
		class UMapMarkBase* MapMark;                                                 // 0x0000(0x0008) Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUsing;                                                  // 0x0008(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NOG2[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.MapMarkElemArray
	 * Size -> 0x0010
	 */
	struct FMapMarkElemArray
	{
	public:
		TArray<struct FMapMarkElem>                                MapMarkElems;                                            // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.MiniMapData
	 * Size -> 0x0018
	 */
	struct FMiniMapData
	{
	public:
		bool                                                       bUseAsBigMap;                                            // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOverride;                                               // 0x0001(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WZII[0x2];                                   // 0x0002(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MinFOV;                                                  // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxFOV;                                                  // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CurrentFOV;                                              // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           MapSize;                                                 // 0x0010(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.ConfigMiniMapMeshWidgetData
	 * Size -> 0x0018
	 */
	struct FConfigMiniMapMeshWidgetData
	{
	public:
		float                                                      TimeSpeed;                                               // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              IconTexId;                                               // 0x0004(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              ColorOpacityIndex;                                       // 0x0005(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XPVX[0x2];                                   // 0x0006(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector2D                                           OpacityCoeff;                                            // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           ScaleAndRipplingCoeff;                                   // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.AirdropMeshWidgetData
	 * Size -> 0x0048
	 */
	struct FAirdropMeshWidgetData
	{
	public:
		struct FConfigMiniMapMeshWidgetData                        IconData;                                                // 0x0000(0x0018) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		struct FConfigMiniMapMeshWidgetData                        DiffuseData;                                             // 0x0018(0x0018) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		struct FConfigMiniMapMeshWidgetData                        FlashData;                                               // 0x0030(0x0018) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.MissileBulletConfig
	 * Size -> 0x0020
	 */
	struct FMissileBulletConfig
	{
	public:
		struct FVector                                             EjectDir;                                                // 0x0000(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      EjectDelayTime;                                          // 0x000C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<int32_t>                                            TrailSpreadIndexArray;                                   // 0x0010(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.MultiplePassMaterialChange
	 * Size -> 0x0068
	 */
	struct FMultiplePassMaterialChange
	{
	public:
		unsigned char                                              SourceMaterial[0x28];                                    // 0x0000(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		struct FAddMultiplePassMaterialChangeParams                Params;                                                  // 0x0028(0x0040) Edit, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.DetailedListViewInfo
	 * Size -> 0x0040
	 */
	struct FDetailedListViewInfo
	{
	public:
		bool                                                       bIsUsingStructInfo;                                      // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsCheater;                                              // 0x0001(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsMVP;                                                  // 0x0002(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_89OD[0x5];                                   // 0x0003(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              playerName;                                              // 0x0008(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    KillNum;                                                 // 0x0018(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    AssistNum;                                               // 0x001C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CauseDamage;                                             // 0x0020(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ReceivedDamage;                                          // 0x0024(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HealSelf;                                                // 0x0028(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ReceivedHeal;                                            // 0x002C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LifeTime;                                                // 0x0030(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MvpScore;                                                // 0x0034(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    FlagID;                                                  // 0x0038(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ECommonInputType                                           InputType;                                               // 0x003C(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PISM[0x3];                                   // 0x003D(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.DetailedTeamListViewInfo
	 * Size -> 0x0040
	 */
	struct FDetailedTeamListViewInfo
	{
	public:
		int32_t                                                    TeamID;                                                  // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BDM7[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              TeamName;                                                // 0x0008(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Rank;                                                    // 0x0018(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Point;                                                   // 0x001C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		uint32_t                                                   PreliminaryRank;                                         // 0x0020(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_39BT[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FDetailedListViewInfo>                       PlayerDetailInfos;                                       // 0x0028(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsTournament;                                           // 0x0038(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_T2QP[0x7];                                   // 0x0039(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.ProgressMeshData
	 * Size -> 0x001C
	 */
	struct FProgressMeshData
	{
	public:
		float                                                      Progress;                                                // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLinearColor                                        Color;                                                   // 0x0004(0x0010) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           Offset;                                                  // 0x0014(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.ConfigMeshData
	 * Size -> 0x00F8
	 */
	struct FConfigMeshData
	{
	public:
		bool                                                       bTeamVisible;                                            // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6R32[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    TeamID;                                                  // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           TenOffset;                                               // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           OneOffset;                                               // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLinearColor                                        MainColor;                                               // 0x0018(0x0010) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLinearColor                                        ViceColor;                                               // 0x0028(0x0010) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bShieldVisible;                                          // 0x0038(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IKZV[0x3];                                   // 0x0039(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FProgressMeshData                                   Shield;                                                  // 0x003C(0x001C) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FProgressMeshData                                   ShieldDamage;                                            // 0x0058(0x001C) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FProgressMeshData                                   ShieldBG;                                                // 0x0074(0x001C) Edit, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       bHPVisible;                                              // 0x0090(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XQG0[0x3];                                   // 0x0091(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FProgressMeshData                                   HP;                                                      // 0x0094(0x001C) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FProgressMeshData                                   HPDamage;                                                // 0x00B0(0x001C) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FProgressMeshData                                   HPBG;                                                    // 0x00CC(0x001C) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FVector2D                                           ScreenOffset;                                            // 0x00E8(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_G4BK[0x8];                                   // 0x00F0(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.OBTeammateInfo
	 * Size -> 0x0048
	 */
	struct FOBTeammateInfo
	{
	public:
		unsigned char                                              UnknownData_HFB7[0x48];                                  // 0x0000(0x0048) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.TeamPlayerNavArray
	 * Size -> 0x0010
	 */
	struct FTeamPlayerNavArray
	{
	public:
		TArray<class UOBPlayerNavWidget*>                          NavArray;                                                // 0x0000(0x0010) ExportObject, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.ReplayActivityKillDetail
	 * Size -> 0x000C
	 */
	struct FReplayActivityKillDetail
	{
	public:
		float                                                      KillTime;                                                // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EReplayActivityHeatKillUseType                             KillUseType;                                             // 0x0004(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WAWU[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    KillToolID;                                              // 0x0008(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.ReplayActivityHeatFragment
	 * Size -> 0x0030
	 */
	struct FReplayActivityHeatFragment
	{
	public:
		int32_t                                                    FragmentId;                                              // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EPlayerActivityHeatType                                    ActivityHeatType;                                        // 0x0004(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RAI7[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      TotalScore;                                              // 0x0008(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BeginTime;                                               // 0x000C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      EndTime;                                                 // 0x0010(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TT0Q[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FReplayActivityKillDetail>                   ActivityKillDetails;                                     // 0x0018(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    KillNum;                                                 // 0x0028(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ActivityHotTime;                                         // 0x002C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.CupViewInfo
	 * Size -> 0x0028
	 */
	struct FCupViewInfo
	{
	public:
		class FString                                              TournamentName;                                          // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              TournamentIcon;                                          // 0x0010(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    GameModeId;                                              // 0x0020(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RuleID;                                                  // 0x0024(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.OpponentPerspectiveMaterialParams
	 * Size -> 0x0220
	 */
	struct FOpponentPerspectiveMaterialParams
	{
	public:
		struct FRuntimeFloatCurve                                  OpacityCurve;                                            // 0x0000(0x0088) Edit, NativeAccessSpecifierPublic
		struct FRuntimeFloatCurve                                  OutlineSizeCurve;                                        // 0x0088(0x0088) Edit, NativeAccessSpecifierPublic
		struct FRuntimeFloatCurve                                  OpacityScaleByFOVCurve;                                  // 0x0110(0x0088) Edit, NativeAccessSpecifierPublic
		struct FRuntimeFloatCurve                                  OutlineSizeScaleByFOVCurve;                              // 0x0198(0x0088) Edit, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.OpponentPerspectiveMaterialParamsConditional
	 * Size -> 0x0270
	 */
	struct FOpponentPerspectiveMaterialParamsConditional
	{
	public:
		struct FGameplayTagRequirements                            OpponentTagRequirements;                                 // 0x0000(0x0050) Edit, NativeAccessSpecifierPublic
		struct FOpponentPerspectiveMaterialParams                  MaterialParams;                                          // 0x0050(0x0220) Edit, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.PassiveSkillLevelDescription
	 * Size -> 0x0020
	 */
	struct FPassiveSkillLevelDescription
	{
	public:
		struct FWrappedLocalTextID                                 InnerDescriptionLocalTextID;                             // 0x0000(0x0004) Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FWrappedLocalTextID                                 ShortDescriptionLocalTextID;                             // 0x0004(0x0004) Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     InnerIconPath;                                           // 0x0008(0x0018) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.PickupListViewItemData
	 * Size -> 0x00D0
	 */
	struct FPickupListViewItemData
	{
	public:
		struct FSolarItemData                                      ItemData;                                                // 0x0000(0x00B8) NativeAccessSpecifierPublic
		int32_t                                                    Index;                                                   // 0x00B8(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_41CB[0x4];                                   // 0x00BC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AActor* PickActor;                                               // 0x00C0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EItemType                                                  PickActroItemType;                                       // 0x00C8(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_B4WW[0x3];                                   // 0x00C9(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		unsigned char                                              UnknownData_70KX[0x4];                                   // 0x00CC(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.BackpackAnimInfo
	 * Size -> 0x000C
	 */
	struct FBackpackAnimInfo
	{
	public:
		int32_t                                                    StartFrame;                                              // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    EndFrame;                                                // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Length;                                                  // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.InWaterActorInfo
	 * Size -> 0x0008
	 */
	struct FInWaterActorInfo
	{
	public:
		bool                                                       bIsInWater;                                              // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IQ8L[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      WaterLineHeight;                                         // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.ReconnectionParams
	 * Size -> 0x0001
	 */
	struct FReconnectionParams
	{
	public:
		bool                                                       bIsCrouched;                                             // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.HitSoundData
	 * Size -> 0x001C
	 */
	struct FHitSoundData
	{
	public:
		TWeakObjectPtr<class AActor>                               Instigator;                                              // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EHitSoundSourceType                                        SourceType;                                              // 0x0008(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EHitSoundTargetType                                        TargetType;                                              // 0x0009(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CKIK[0x2];                                   // 0x000A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                SubTableKey;                                             // 0x000C(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                SubTableKey2;                                            // 0x0014(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.HitSoundReplicationData
	 * Size -> 0x0080
	 */
	struct FHitSoundReplicationData
	{
	public:
		uint16_t                                                   HitCount;                                                // 0x0000(0x0002) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              DirtyDataMask;                                           // 0x0002(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2TL5[0x1];                                   // 0x0003(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FHitSoundData                                       HitData_Default;                                         // 0x0004(0x001C) NoDestructor, NativeAccessSpecifierPublic
		struct FHitSoundData                                       HitData_Weapon;                                          // 0x0020(0x001C) NoDestructor, NativeAccessSpecifierPublic
		struct FHitSoundData                                       HitData_Melee;                                           // 0x003C(0x001C) NoDestructor, NativeAccessSpecifierPublic
		struct FHitSoundData                                       HitData_Skill;                                           // 0x0058(0x001C) NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_APDE[0xC];                                   // 0x0074(0x000C) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.CharacterTagListenerForOrnamentComp
	 * Size -> 0x0058
	 */
	struct FCharacterTagListenerForOrnamentComp
	{
	public:
		unsigned char                                              OrnamentCompPairs[0x50];                                 // 0x0000(0x0050) UNKNOWN PROPERTY: SetProperty
		unsigned char                                              UnknownData_WIDV[0x8];                                   // 0x0050(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.OrnamentMontageInfo
	 * Size -> 0x0018
	 */
	struct FOrnamentMontageInfo
	{
	public:
		class UAnimMontage* ActiveMontage;                                           // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FGameplayTag                                        OrnamentTag;                                             // 0x0008(0x0008) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bForcePlayBit : 1;                                       // 0x0010(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2FF4[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.ReplicateMaxPileData
	 * Size -> 0x0008
	 */
	struct FReplicateMaxPileData
	{
	public:
		int32_t                                                    ItemID;                                                  // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaxPile;                                                 // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.ReplicateItemData
	 * Size -> 0x000C
	 */
	struct FReplicateItemData
	{
	public:
		int32_t                                                    ItemID;                                                  // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    count;                                                   // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Slot;                                                    // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.WeaponIgnoreScopeLists
	 * Size -> 0x0020
	 */
	struct FWeaponIgnoreScopeLists
	{
	public:
		TArray<EWeaponPartType>                                    Weapon1IgnoreList;                                       // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<EWeaponPartType>                                    Weapon2IgnoreList;                                       // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.BackpackJetPrepelInfo
	 * Size -> 0x000C
	 */
	struct FBackpackJetPrepelInfo
	{
	public:
		bool                                                       IsPropelling;                                            // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VYWM[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    PropellingCounter;                                       // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EFXJetType                                                 JetType;                                                 // 0x0008(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCheckGround;                                            // 0x0009(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0BNN[0x2];                                   // 0x000A(0x0002) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.CharacterOperationEvent
	 * Size -> 0x0010
	 */
	struct FCharacterOperationEvent
	{
	public:
		ECharacterOperation                                        Name;                                                    // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PS7F[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UObject* Target;                                                  // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.ShieldSoundData
	 * Size -> 0x0050
	 */
	struct FShieldSoundData
	{
	public:
		TMap<EShieldSoundEventType, ECharacterSoundOpt>            SoundData;                                               // 0x0000(0x0050) BlueprintVisible, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.RadarDataSpec
	 * Size -> 0x001C (FullSize[0x0028] - InheritedSize[0x000C])
	 */
	struct FRadarDataSpec : public FFastArraySerializerItem
	{
	public:
		struct FGameplayAbilitySpecHandle                          RadarHandle;                                             // 0x000C(0x0004) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              RadarType;                                               // 0x0010(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3XPO[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector2D                                           RadarRange;                                              // 0x0014(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CP3E[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class APawn* RadarSpawner;                                            // 0x0020(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.RadarDataSpecContainer
	 * Size -> 0x0018 (FullSize[0x0120] - InheritedSize[0x0108])
	 */
	struct FRadarDataSpecContainer : public FFastArraySerializer
	{
	public:
		TArray<struct FRadarDataSpec>                              Radars;                                                  // 0x0108(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USolarRadarComponent* Owner;                                                   // 0x0118(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.CriticalHitInfo
	 * Size -> 0x0068
	 */
	struct FCriticalHitInfo
	{
	public:
		class ASolarPlayerState* Instigator;                                              // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Damage;                                                  // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DamageTime;                                              // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    LastDamageWeaponID;                                      // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MHJ7[0x54];                                  // 0x0014(0x0054) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.SingleCruiseBaseParam
	 * Size -> 0x0020
	 */
	struct FSingleCruiseBaseParam
	{
	public:
		unsigned char                                              UnknownData_X999[0x20];                                  // 0x0000(0x0020) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.BoardedVehicleInfo
	 * Size -> 0x0010
	 */
	struct FBoardedVehicleInfo
	{
	public:
		class ASolarVehiclePawn* BoardedVehicle;                                          // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    BoardedSeatIndex;                                        // 0x0008(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_E7ZY[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.BattleUpgradeEffect
	 * Size -> 0x001C (FullSize[0x0028] - InheritedSize[0x000C])
	 */
	struct FBattleUpgradeEffect : public FFastArraySerializerItem
	{
	public:
		int32_t                                                    Level;                                                   // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    EffectID;                                                // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_R4TE[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<int32_t>                                            EffectCandidate;                                         // 0x0018(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.BattleUpgradeEffectContainer
	 * Size -> 0x0018 (FullSize[0x0120] - InheritedSize[0x0108])
	 */
	struct FBattleUpgradeEffectContainer : public FFastArraySerializer
	{
	public:
		TArray<struct FBattleUpgradeEffect>                        DataArray;                                               // 0x0108(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ASolarCharacter* Owner;                                                   // 0x0118(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.AbilityCooldownTimer
	 * Size -> 0x000C
	 */
	struct FAbilityCooldownTimer
	{
	public:
		struct FGameplayTag                                        AbilityCooldownTag;                                      // 0x0000(0x0008) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AbilityAppliedTime;                                      // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.GameplayHitInfo
	 * Size -> 0x0020
	 */
	struct FGameplayHitInfo
	{
	public:
		unsigned char                                              UnknownData_GC8F[0x20];                                  // 0x0000(0x0020) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.SolarDamageText
	 * Size -> 0x0028
	 */
	struct FSolarDamageText
	{
	public:
		bool                                                       bHitHead;                                                // 0x0000(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bHitShield;                                              // 0x0001(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bBrokenShield;                                           // 0x0002(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JDLV[0x1];                                   // 0x0003(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    Damage;                                                  // 0x0004(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TWeakObjectPtr<class AActor>                               Target;                                                  // 0x0008(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TWeakObjectPtr<class AActor>                               Source;                                                  // 0x0010(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             HitLocation;                                             // 0x0018(0x000C) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		uint32_t                                                   TargetUniqueID;                                          // 0x0024(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.FixedAntiCheatData
	 * Size -> 0x001C
	 */
	struct FFixedAntiCheatData
	{
	public:
		int32_t                                                    FOV;                                                     // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EAspectRatioAxisConstraint                                 AxisConstraint;                                          // 0x0004(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAssistAim;                                              // 0x0005(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_981J[0x2];                                   // 0x0006(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             HeadBoneScale;                                           // 0x0008(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       CurrWeaponRecoil;                                        // 0x0014(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CPY5[0x3];                                   // 0x0015(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      LatestTimeDiscrepancyError;                              // 0x0018(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SeparatedPackageInfo
	 * Size -> 0x0028
	 */
	struct FSeparatedPackageInfo
	{
	public:
		int32_t                                                    SeparetedPkgID;                                          // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HIRI[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<int32_t>                                            ChunksInPkg;                                             // 0x0008(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<int32_t>                                            DependentPkgID;                                          // 0x0018(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.PakDownloadInfo
	 * Size -> 0x0010
	 */
	struct FPakDownloadInfo
	{
	public:
		class FString                                              Filename;                                                // 0x0000(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.DownloadFileInfo
	 * Size -> 0x0030
	 */
	struct FDownloadFileInfo
	{
	public:
		class FString                                              URL;                                                     // 0x0000(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Filename;                                                // 0x0010(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              HashStr;                                                 // 0x0020(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.ShootingTargetRing
	 * Size -> 0x001C
	 */
	struct FShootingTargetRing
	{
	public:
		float                                                      Radius;                                                  // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Score;                                                   // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLinearColor                                        ColorHUD;                                                // 0x0008(0x0010) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FColor                                              Color3D;                                                 // 0x0018(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.WeaponDebugFlag
	 * Size -> 0x0004
	 */
	struct FWeaponDebugFlag
	{
	public:
		bool                                                       bIgnoreActivated;                                        // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bExtraInfo;                                              // 0x0001(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bMechanicalState;                                        // 0x0002(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bShowShootDir;                                           // 0x0003(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.MoveSpeedReduceCurveConfig
	 * Size -> 0x00D8
	 */
	struct FMoveSpeedReduceCurveConfig
	{
	public:
		struct FGameplayTagRequirements                            TagRequirements;                                         // 0x0000(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		struct FRuntimeFloatCurve                                  MoveSpeedReduceCurveOnHoldingWeapon;                     // 0x0050(0x0088) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarWeaponFireSocketData
	 * Size -> 0x0060
	 */
	struct FSolarWeaponFireSocketData
	{
	public:
		TArray<class FName>                                        MultiBulletSocketNames;                                  // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		TArray<class FName>                                        MuzzleSocketNames;                                       // 0x0010(0x0010) Edit, BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		TArray<class FName>                                        AdsMuzzleSocketNames;                                    // 0x0020(0x0010) Edit, BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		TArray<class FName>                                        MuzzleBlockCheckSocketNames;                             // 0x0030(0x0010) Edit, BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		TArray<class FName>                                        MultiCastShellSocketNames;                               // 0x0040(0x0010) Edit, BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
		TArray<class FName>                                        AdsMultiCastShellSocketNames;                            // 0x0050(0x0010) Edit, BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct Solarland.WeaponAssistAimWeaponConfigAll
	 * Size -> 0x0060
	 */
	struct FWeaponAssistAimWeaponConfigAll
	{
	public:
		class UWeaponAssistAimWeaponConfig* DefaultConfig;                                           // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UWeaponAssistAimWeaponConfig* DefaultScopeConfig;                                      // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TMap<EWeaponScopeType, class UWeaponAssistAimWeaponConfig*> ScopeConfigMap;                                          // 0x0010(0x0050) Edit, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarWeaponScopeFPPData
	 * Size -> 0x0018
	 */
	struct FSolarWeaponScopeFPPData
	{
	public:
		struct FVector                                             RelativeLocation;                                        // 0x0000(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                            RelativeRotation;                                        // 0x000C(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarWeaponScopeFPPConfig
	 * Size -> 0x0068
	 */
	struct FSolarWeaponScopeFPPConfig
	{
	public:
		TMap<int32_t, struct FSolarWeaponScopeFPPData>             ScopeFPPDataByWeaponSkinIDMap;                           // 0x0000(0x0050) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		struct FSolarWeaponScopeFPPData                            DefaultFPPDataForWeaponSkinID;                           // 0x0050(0x0018) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarWeaponFPPData
	 * Size -> 0x0068
	 */
	struct FSolarWeaponFPPData
	{
	public:
		TMap<EWeaponScopeType, struct FSolarWeaponScopeFPPConfig>  ScopeFPPConfigByScopeTypeMap;                            // 0x0000(0x0050) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		struct FSolarWeaponScopeFPPData                            DefaultFPPDataForScopeType;                              // 0x0050(0x0018) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarWeaponFPPConfig
	 * Size -> 0x0070
	 */
	struct FSolarWeaponFPPConfig
	{
	public:
		struct FRangeFloat                                         AspectRatioRange;                                        // 0x0000(0x0008) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		struct FSolarWeaponFPPData                                 FPPData;                                                 // 0x0008(0x0068) Edit, BlueprintVisible, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarNoAmmoAlertWidgetLayout
	 * Size -> 0x0018
	 */
	struct FSolarNoAmmoAlertWidgetLayout
	{
	public:
		bool                                                       bOverrideLayout;                                         // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9J8H[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector2D                                           Offset;                                                  // 0x0004(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SpinAngle;                                               // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           Scale;                                                   // 0x0010(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarWeaponCrosshairData
	 * Size -> 0x0038
	 */
	struct FSolarWeaponCrosshairData
	{
	public:
		unsigned char                                              HasReload;                                               // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              HasForbid;                                               // 0x0001(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              HasOverload;                                             // 0x0002(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              HasChargeProgress;                                       // 0x0003(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              HasFeedback;                                             // 0x0004(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EWeaponType                                                WeaponType;                                              // 0x0005(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsEnergyType;                                           // 0x0006(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_04TD[0x1];                                   // 0x0007(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass* CrossHairWidget;                                         // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass* BulletContainerWidget;                                   // 0x0010(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass* WeaponRechamberWidget;                                   // 0x0018(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSolarNoAmmoAlertWidgetLayout                       AmmoAlertWidgetLayout;                                   // 0x0020(0x0018) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SkydivingEffectPreset
	 * Size -> 0x0070
	 */
	struct FSkydivingEffectPreset
	{
	public:
		unsigned char                                              EffectResource[0x28];                                    // 0x0000(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		unsigned char                                              UnknownData_D53D[0x8];                                   // 0x0028(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTransform                                          AttachmentOffset;                                        // 0x0030(0x0030) Edit, BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		class FName                                                AttachmentSocket;                                        // 0x0060(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESkydiveEffectLifetime                                     LifeTime;                                                // 0x0068(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5MU6[0x7];                                   // 0x0069(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.LaunchDeviceInfo
	 * Size -> 0x0020
	 */
	struct FLaunchDeviceInfo
	{
	public:
		bool                                                       bIsUsing;                                                // 0x0000(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_EZLD[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                LaunchPadLocSocketName;                                  // 0x0004(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                PrepareEffectLocSocketName;                              // 0x000C(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VY08[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UParticleSystemComponent* AvailableDeviceEffect;                                   // 0x0018(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.ReplicateEffectData
	 * Size -> 0x0018
	 */
	struct FReplicateEffectData
	{
	public:
		struct FSoftObjectPath                                     IconPath;                                                // 0x0000(0x0018) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarAttributeModifier
	 * Size -> 0x00A0
	 */
	struct FSolarAttributeModifier
	{
	public:
		ESolarAttributeType                                        SolarAttributeType;                                      // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESolarAttributeDurationType                                AttributeDurationType;                                   // 0x0001(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESolarAttributeValueSourceType                             AttributeDurationSourceType;                             // 0x0002(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3S5A[0x1];                                   // 0x0003(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      AttributeModifyDuration;                                 // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              AttributeModifyDurationSourceKey;                        // 0x0008(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AttributeModifyMinDistance;                              // 0x0018(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AttributeModifyMaxDistance;                              // 0x001C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCurveFloat* AttributeDistanceScaleCurve;                             // 0x0020(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       AttributeUseTargetValue;                                 // 0x0028(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FUA4[0x3];                                   // 0x0029(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      AttributeTargetValue;                                    // 0x002C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESolarAttributeValueSourceType                             AttributeChangeValueSourceType;                          // 0x0030(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KCZ1[0x3];                                   // 0x0031(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      AttributeChangeValue;                                    // 0x0034(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AttributeChangeValueForVehicle;                          // 0x0038(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JRK4[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              AttributeChangeValueSourceKey;                           // 0x0040(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       AttributeChangeValueIsMultiplier;                        // 0x0050(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2XRY[0x7];                                   // 0x0051(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		ESolarAttributeValueSourceType                             AttributeChangeSpeedSourceType;                          // 0x0058(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GDZ1[0x7];                                   // 0x0059(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              AttributeChangeSpeedSourceKey;                           // 0x0060(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AttributeChangeSpeed;                                    // 0x0070(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       AttributeApplyChargingScale;                             // 0x0074(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7BS5[0x3];                                   // 0x0075(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<int32_t>                                            AttributeExtraIntParam;                                  // 0x0078(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<float>                                              AttributeExtraFloatParam;                                // 0x0088(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JOEV[0x8];                                   // 0x0098(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.GameplayAbilityLocalAnimMontageForMesh
	 * Size -> 0x0038
	 */
	struct FGameplayAbilityLocalAnimMontageForMesh
	{
	public:
		class USkeletalMeshComponent* Mesh;                                                    // 0x0000(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FGameplayAbilityLocalAnimMontage                    LocalMontageInfo;                                        // 0x0008(0x0030) NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.GameplayAbilityRepAnimMontageForMesh
	 * Size -> 0x0040
	 */
	struct FGameplayAbilityRepAnimMontageForMesh
	{
	public:
		class USkeletalMeshComponent* Mesh;                                                    // 0x0000(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FGameplayAbilityRepAnimMontage                      RepMontageInfo;                                          // 0x0008(0x0038) NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.AchievementResult
	 * Size -> 0x000C
	 */
	struct FAchievementResult
	{
	public:
		int32_t                                                    AchievementID;                                           // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ProgressValue;                                           // 0x0004(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsUnlock;                                                // 0x0008(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EAchievementReportType                                     AchievementReportType;                                   // 0x0009(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HG07[0x2];                                   // 0x000A(0x0002) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.SolarIgnoreCollisionTypeData
	 * Size -> 0x0010
	 */
	struct FSolarIgnoreCollisionTypeData
	{
	public:
		TArray<class AActor*>                                      Actors;                                                  // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.WidgetOverrideParam
	 * Size -> 0x0140
	 */
	struct FWidgetOverrideParam
	{
	public:
		EWidgetOverrideParamType                                   Type;                                                    // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZJ5D[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                ChildName;                                               // 0x0004(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bEnableLocText;                                          // 0x000C(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JEW7[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                Text;                                                    // 0x0010(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		int32_t                                                    LocTextID;                                               // 0x0028(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XY9S[0x4];                                   // 0x002C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSlateBrush                                         Brush;                                                   // 0x0030(0x00E0) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		class FString                                              CustomParameter;                                         // 0x0110(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FGameplayTag                                        GameplayTag;                                             // 0x0120(0x0008) Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class FString>                                      MetaData;                                                // 0x0128(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SG1E[0x8];                                   // 0x0138(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.AdvProgressChannelInfo
	 * Size -> 0x0010
	 */
	struct FAdvProgressChannelInfo
	{
	public:
		EProgressBoardChannelState                                 State;                                                   // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8RBH[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      Percent;                                                 // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TargetPercent;                                           // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Speed;                                                   // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarAIValueCompare
	 * Size -> 0x000C
	 */
	struct FSolarAIValueCompare
	{
	public:
		ESolarAIValueCompareOp                                     Operator;                                                // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JB11[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ComparedValue;                                           // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      EqualThreshold;                                          // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.BasedMovement
	 * Size -> 0x0028
	 */
	struct FBasedMovement
	{
	public:
		class UPrimitiveComponent* MovementBase;                                            // 0x0000(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector_NetQuantize100                              Location;                                                // 0x0008(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                            Rotation;                                                // 0x0014(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       bRelativeRotation;                                       // 0x0020(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bServerHasVelocity;                                      // 0x0021(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JIEK[0x6];                                   // 0x0022(0x0006) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.VehicleSeatAbility
	 * Size -> 0x0010
	 */
	struct FVehicleSeatAbility
	{
	public:
		class UClass* AbilityClass;                                            // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FGameplayAbilitySpecHandle                          ServerOrDriverAbilityHandle;                             // 0x0008(0x0004) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FGameplayAbilitySpecHandle                          SkinPreAbilityHandle;                                    // 0x000C(0x0004) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.VehicleSeatSlot
	 * Size -> 0x00D8
	 */
	struct FVehicleSeatSlot
	{
	public:
		class FName                                                SeatSocketName;                                          // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                SeatWeaponSocket;                                        // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDisplayBackpack;                                        // 0x0010(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       SeatStickOutEnable;                                      // 0x0011(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GUZX[0x6];                                   // 0x0012(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UVehicleCameraDataAsset* OutShootCameraData;                                      // 0x0018(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UVehicleCameraDataAsset* OutShootAimCameraData;                                   // 0x0020(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCurveFloat* OutShootPitchLimitCurve;                                 // 0x0028(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FVehicleSeatAbility>                         VechicleAbilities;                                       // 0x0030(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass* VehicleWeaponClass;                                      // 0x0040(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass* VehicleWeaponSkinClass;                                  // 0x0048(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAutoEquipWeapon;                                        // 0x0050(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Z6T6[0x7];                                   // 0x0051(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              SeatDisplayIcon[0x28];                                   // 0x0058(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		float                                                      DamageRatio;                                             // 0x0080(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PenetrationDamageRatio;                                  // 0x0084(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FBoxSphereBounds                                    PenetrationSphere;                                       // 0x0088(0x001C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FRotator                                            EjectRotation;                                           // 0x00A4(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       bOverrideDefaultEjectParams;                             // 0x00B0(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SKAH[0x3];                                   // 0x00B1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVehicleEjectParams                                 EjectParams;                                             // 0x00B4(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		TWeakObjectPtr<class ASolarCharacter>                      SeatPassenger;                                           // 0x00C4(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_C2KH[0x4];                                   // 0x00CC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ASolarVehicleWeapon* SeatWeapon;                                              // 0x00D0(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.VehicleVFXMesh
	 * Size -> 0x0080
	 */
	struct FVehicleVFXMesh
	{
	public:
		unsigned char                                              Mesh[0x28];                                              // 0x0000(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		TArray<class UMaterialInterface*>                          OverrideMaterials;                                       // 0x0028(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                AttachedSocket;                                          // 0x0038(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTransform                                          OffsetTransform;                                         // 0x0040(0x0030) Edit, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_04KV[0x10];                                  // 0x0070(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.SolarVehicleMaterialData
	 * Size -> 0x0028
	 */
	struct FSolarVehicleMaterialData
	{
	public:
		int8_t                                                     MaterialIndex;                                           // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_X5G9[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                ParamName;                                               // 0x0004(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      OnValue;                                                 // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      OffValue;                                                // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ActiveSpeed;                                             // 0x0014(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMaterialInstanceDynamic* MatInstanceDynamic;                                      // 0x0018(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PG8X[0x8];                                   // 0x0020(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.DamageStatusVehicleVFXs
	 * Size -> 0x0010
	 */
	struct FDamageStatusVehicleVFXs
	{
	public:
		TArray<struct FVehicleVFX>                                 VehicleVFXs;                                             // 0x0000(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.VehicleWeakPointSpec
	 * Size -> 0x01F0
	 */
	struct FVehicleWeakPointSpec
	{
	public:
		float                                                      CurrentHealth;                                           // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bInRepairing;                                            // 0x0004(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_R63Y[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class USolarVehicleWeakPointComponent* WeakPointMeshComponent;                                  // 0x0008(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ASolarVehiclePawn* VehiclePawn;                                             // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              WeakPointID;                                             // 0x0018(0x0001) Edit, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4DDH[0x7];                                   // 0x0019(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class FName>                                        WeakPointSockets;                                        // 0x0020(0x0010) Edit, ZeroConstructor, RepSkip, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             WeakPointOffset;                                         // 0x0030(0x000C) Edit, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZGUN[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              WeakPointStaticMesh[0x28];                               // 0x0040(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		unsigned char                                              UnknownData_ZL1O[0x8];                                   // 0x0068(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTransform                                          WeakPointRelativeTransform;                              // 0x0070(0x0030) Edit, IsPlainOldData, RepSkip, NoDestructor, NativeAccessSpecifierPublic
		float                                                      MaxWeakPointHealth;                                      // 0x00A0(0x0004) Edit, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RepairDuration;                                          // 0x00A4(0x0004) Edit, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bRecoverBoneScaleAfterVFXFinished;                       // 0x00A8(0x0001) Edit, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_E20R[0x7];                                   // 0x00A9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVehicleVFX                                         BrokenWeakPointVFX;                                      // 0x00B0(0x0090) Edit, RepSkip, NativeAccessSpecifierPrivate
		struct FVehicleVFX                                         RepairingWeakPointVFX;                                   // 0x0140(0x0090) Edit, RepSkip, NativeAccessSpecifierPrivate
		float                                                      FacingAngle;                                             // 0x01D0(0x0004) Edit, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		float                                                      DistFromCharacterToWeakPoint;                            // 0x01D4(0x0004) Edit, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_K3Q7[0x18];                                  // 0x01D8(0x0018) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.AirdropParas
	 * Size -> 0x0020
	 */
	struct FAirdropParas
	{
	public:
		class UClass* SolarTreasureBoxSpawnerClass;                            // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    OutcomeID;                                               // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ChestID;                                                 // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ChestSpawnID;                                            // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             Scale;                                                   // 0x0014(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.PlaygroundEffect
	 * Size -> 0x0028
	 */
	struct FPlaygroundEffect
	{
	public:
		struct FSoftObjectPath                                     ParticlePath;                                            // 0x0000(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SpawnDelay;                                              // 0x0018(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CLR9[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UParticleSystemComponent* Handle;                                                  // 0x0020(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.AirshipConfig
	 * Size -> 0x0030
	 */
	struct FAirshipConfig
	{
	public:
		float                                                      MoveSpeed;                                               // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MoveSpeedAfterAirdrop;                                   // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RouteHeight;                                             // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RouteMinLength;                                          // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      StartDistToAirdropMinLength;                             // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FurthestDistAfterAirdrop;                                // 0x0014(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DecelerateDistance;                                      // 0x0018(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AccelerateDistance;                                      // 0x001C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HoveringDurance;                                         // 0x0020(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BestDegreeRange;                                         // 0x0024(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCurveFloat* FogDensityCurve;                                         // 0x0028(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.RouteInfo
	 * Size -> 0x0034
	 */
	struct FRouteInfo
	{
	public:
		struct FVector                                             RouteStart;                                              // 0x0000(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             RouteEnd;                                                // 0x000C(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RouteLength;                                             // 0x0018(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             RouteDirection;                                          // 0x001C(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             AirdropLocation;                                         // 0x0028(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.MiniMapAirlineData
	 * Size -> 0x0030
	 */
	struct FMiniMapAirlineData
	{
	public:
		EMapAirlineType                                            AirlineType;                                             // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_EIOC[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector2D                                           StartPoint;                                              // 0x0004(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           EndPoint;                                                // 0x000C(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           RealStartPoint;                                          // 0x0014(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           RealEndPoint;                                            // 0x001C(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           AirlineDir;                                              // 0x0024(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AirlineLength;                                           // 0x002C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.AIQueryTeammateEvent
	 * Size -> 0x0030
	 */
	struct FAIQueryTeammateEvent
	{
	public:
		class UAIPerceptionComponent* QueryingTeammate;                                        // 0x0000(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAIPerceptionComponent* TeammateBeingQueried;                                    // 0x0008(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AActor* Target;                                                  // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_I2LV[0x18];                                  // 0x0018(0x0018) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.RadarDetectConfig
	 * Size -> 0x0018
	 */
	struct FRadarDetectConfig
	{
	public:
		class UClass* DetectActorType;                                         // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DetectRadius;                                            // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LossRadius;                                              // 0x000C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ScanInterval;                                            // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UBDW[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.SolarAudioDetail
	 * Size -> 0x0018
	 */
	struct FSolarAudioDetail
	{
	public:
		class FName                                                BankName;                                                // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                BindScene;                                               // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESolarAudioDetailLoadMode                                  LoadStrategy;                                            // 0x0010(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESolarAudioDetailUnloadMode                                UnloadStrategy;                                          // 0x0011(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESolarAudioDetailCatalog                                   ResCatalog;                                              // 0x0012(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       LoadInQueue;                                             // 0x0013(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    OwnerCharacterID;                                        // 0x0014(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.LeftHandGripConfig
	 * Size -> 0x0084
	 */
	struct FLeftHandGripConfig
	{
	public:
		struct FRotator                                            HandL;                                                   // 0x0000(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FRotator                                            Thumbl01;                                                // 0x000C(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FRotator                                            Thumbl02;                                                // 0x0018(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FRotator                                            Index01;                                                 // 0x0024(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FRotator                                            Index02;                                                 // 0x0030(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FRotator                                            Middle01;                                                // 0x003C(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FRotator                                            Middle02;                                                // 0x0048(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FRotator                                            Ring01;                                                  // 0x0054(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FRotator                                            Ring02;                                                  // 0x0060(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FRotator                                            Pinky01;                                                 // 0x006C(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FRotator                                            Pinky02;                                                 // 0x0078(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.JetPackPoseSpeedRange
	 * Size -> 0x0008
	 */
	struct FJetPackPoseSpeedRange
	{
	public:
		float                                                      Min;                                                     // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Max;                                                     // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.PreloadBundle
	 * Size -> 0x0010
	 */
	struct FPreloadBundle
	{
	public:
		class FName                                                FolderPath;                                              // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                ClassName;                                               // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarAttributeSubReplicateData
	 * Size -> 0x0008
	 */
	struct FSolarAttributeSubReplicateData
	{
	public:
		int32_t                                                    AttributeID;                                             // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AttributeValue;                                          // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarAttributeConfig
	 * Size -> 0x000C
	 */
	struct FSolarAttributeConfig
	{
	public:
		float                                                      MinValue;                                                // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxValue;                                                // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BaseValue;                                               // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.AutoNavLinkSetting
	 * Size -> 0x003C
	 */
	struct FAutoNavLinkSetting
	{
	public:
		float                                                      TraceLength;                                             // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxHeight;                                               // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinDistSquard;                                           // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TestAgentHalfHeight;                                     // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TestAgentRadius;                                         // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AgentPassSphereRadius;                                   // 0x0014(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinPassWidth;                                            // 0x0018(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxStepHeight;                                           // 0x001C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             FinalSnapExtent;                                         // 0x0020(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ProjectNavigationError;                                  // 0x002C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      VaultDetectDistance;                                     // 0x0030(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      VaultDetectDeltaDistance;                                // 0x0034(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      VerticalError;                                           // 0x0038(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.BombingZoneBomb
	 * Size -> 0x001C
	 */
	struct FBombingZoneBomb
	{
	public:
		float                                                      Radius;                                                  // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxDamage;                                               // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinDamage;                                               // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      VehicleMaxDamage;                                        // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      VehicleMinDamage;                                        // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      InVehicleDamageScale;                                    // 0x0014(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LandingTime;                                             // 0x0018(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.BombingZone
	 * Size -> 0x0060
	 */
	struct FBombingZone
	{
	public:
		int32_t                                                    instanceID;                                              // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ConfigID;                                                // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Radius;                                                  // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Duration;                                                // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MinBomb;                                                 // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaxBomb;                                                 // 0x0014(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             Location;                                                // 0x0018(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FBombingZoneBomb                                    Bomb;                                                    // 0x0024(0x001C) ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		EBombingZoneState                                          State;                                                   // 0x0040(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9S3U[0x1F];                                  // 0x0041(0x001F) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.BotFireConfig
	 * Size -> 0x0010
	 */
	struct FBotFireConfig
	{
	public:
		float                                                      ShootDisperse;                                           // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HitRate;                                                 // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ActiveDamageRate;                                        // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ActiveDamageFactor;                                      // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.BotSpecifiedFireConfig
	 * Size -> 0x0014
	 */
	struct FBotSpecifiedFireConfig
	{
	public:
		EWeaponType                                                UsedWeaponType;                                          // 0x0000(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EBotShotTargetCtlType                                      TargetCtlType;                                           // 0x0001(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EBotShotTargetType                                         TargetType;                                              // 0x0002(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PWBC[0x1];                                   // 0x0003(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FBotFireConfig                                      FireConfig;                                              // 0x0004(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarBotShootConfig
	 * Size -> 0x0058
	 */
	struct FSolarBotShootConfig
	{
	public:
		EBotFirePolicy                                             FirePolicy;                                              // 0x0000(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MSAE[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      FollowInterpSpeed;                                       // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AntiHorizRecoilStrenghth;                                // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AntiVertRecoilStrenghth;                                 // 0x000C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LockHeightOffset;                                        // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AimInterpSpeed;                                          // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxFollowDeltaAngle;                                     // 0x0018(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxPreciseMoveAngle;                                     // 0x001C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RoughMoveMaxAngle;                                       // 0x0020(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FollowMoveSpeed;                                         // 0x0024(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PreciseMoveSpeed;                                        // 0x0028(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RoughMoveSpeed;                                          // 0x002C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LockMoveSpeed;                                           // 0x0030(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PreciseMoveDeviationYaw;                                 // 0x0034(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PreciseMoveDeviationPitch;                               // 0x0038(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RoughMoveDeviationYaw;                                   // 0x003C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RoughMoveDeviationPitch;                                 // 0x0040(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LockMoveMaxDeltaYaw;                                     // 0x0044(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LockMoveMaxDeltaPitch;                                   // 0x0048(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RoughMoveReactionTime;                                   // 0x004C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PreciseMoveReactionTime;                                 // 0x0050(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxFollowUnreachTime;                                    // 0x0054(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarBotBattleConfigNew
	 * Size -> 0x00D8
	 */
	struct FSolarBotBattleConfigNew
	{
	public:
		struct FBotFireConfig                                      DefaultFireConfig;                                       // 0x0000(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic
		TArray<struct FBotSpecifiedFireConfig>                     SpecifiedFireConfigs;                                    // 0x0010(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DefaultFireLockRadius;                                   // 0x0020(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7AH1[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<EBotShotTargetType, struct FRangeFloat>               ShotLockRadiusMap;                                       // 0x0028(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		bool                                                       bPreventFatalDamageToPlayer;                             // 0x0078(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bEnableShootSimulator;                                   // 0x0079(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TSS7[0x2];                                   // 0x007A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSolarBotShootConfig                                DefaultShootConfig;                                      // 0x007C(0x0058) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4W3K[0x4];                                   // 0x00D4(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.SolarBotBattleConfig
	 * Size -> 0x0158
	 */
	struct FSolarBotBattleConfig
	{
	public:
		struct FBotFireConfig                                      DefaultFireConfig;                                       // 0x0000(0x0010) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		struct FBotFireConfig                                      FireConfigToBot;                                         // 0x0010(0x0010) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		TMap<EWeaponType, struct FBotFireConfig>                   WeaponFireConfigs;                                       // 0x0020(0x0050) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		TMap<EWeaponType, struct FBotFireConfig>                   WeaponFireConfigsToBot;                                  // 0x0070(0x0050) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		struct FBotFireConfig                                      VehicleFireConfig;                                       // 0x00C0(0x0010) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		struct FBotFireConfig                                      VehicleFireConfigToBot;                                  // 0x00D0(0x0010) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       bPreventFatalDamageToPlayer;                             // 0x00E0(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4VQW[0x3];                                   // 0x00E1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      DamageFactorToVehicle;                                   // 0x00E4(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DamageFactorToBotVehicle;                                // 0x00E8(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DamageFactorToSummonItem;                                // 0x00EC(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DamageFactorToBotSummonItem;                             // 0x00F0(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BotAIAttackRange;                                        // 0x00F4(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BotAIAttackRangeUnArm;                                   // 0x00F8(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bEnableShootSimulator;                                   // 0x00FC(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZEHI[0x3];                                   // 0x00FD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSolarBotShootConfig                                DefaultShootConfig;                                      // 0x0100(0x0058) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.BotEmojiSetting
	 * Size -> 0x0088
	 */
	struct FBotEmojiSetting
	{
	public:
		TMap<int32_t, float>                                       EmojiPool;                                               // 0x0000(0x0050) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		struct FGameplayTagContainer                               TagsRequested;                                           // 0x0050(0x0020) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		float                                                      PersonalCD;                                              // 0x0070(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TeamCD;                                                  // 0x0074(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinTimeDelay;                                            // 0x0078(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxTimeDelay;                                            // 0x007C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TriggeredProbability;                                    // 0x0080(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_05CY[0x4];                                   // 0x0084(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.BotResponseSetting
	 * Size -> 0x0014
	 */
	struct FBotResponseSetting
	{
	public:
		float                                                      PersonalCD;                                              // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TeamCD;                                                  // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinTimeDelay;                                            // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxTimeDelay;                                            // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TriggeredProbability;                                    // 0x0010(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarBotUseSniperPosConfig
	 * Size -> 0x001C
	 */
	struct FSolarBotUseSniperPosConfig
	{
	public:
		int32_t                                                    MinNumSpawnerHasSearched;                                // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinElapsedReachedZone;                                   // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinEnemyDistance;                                        // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MinNumBeHitAbandonPos;                                   // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaxDurationOccupyPos;                                    // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxDurationReachedPos;                                   // 0x0014(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      IntervalUseNextPos;                                      // 0x0018(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarBotLootValuationConfig
	 * Size -> 0x0044
	 */
	struct FSolarBotLootValuationConfig
	{
	public:
		float                                                      MoveCostFactor;                                          // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DistSelfToSpawnerFactor;                                 // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DistSpawnerOffsetFactor;                                 // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AvgDistSpawnerToTeammatesFactor;                         // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AssualtRifleBaseValue;                                   // 0x0010(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ShotgunBaseValue;                                        // 0x0014(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SubmachinegunBaseValue;                                  // 0x0018(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SniperBaseValue;                                         // 0x001C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      WeaponQualityValue;                                      // 0x0020(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AmmoBaseValue;                                           // 0x0024(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AmmoMatchFactor;                                         // 0x0028(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ShieldBaseValue;                                         // 0x002C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ShieldQualityValue;                                      // 0x0030(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      JetpackModuleBaseValue;                                  // 0x0034(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      JetpackModuleQualityValue;                               // 0x0038(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MedkitBaseValue;                                         // 0x003C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MedkitHPRatioFactor;                                     // 0x0040(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarBotLootSearchConfig
	 * Size -> 0x0044
	 */
	struct FSolarBotLootSearchConfig
	{
	public:
		float                                                      HPRatioToUseMedicine;                                    // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ShieldRatioToRecharge;                                   // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxSearchRangeNearbyPlayer;                              // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinSearchRangeNearbyPlayer;                              // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RadiusTolerance;                                         // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           NearbyEnemyOuterFactorRange;                             // 0x0014(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           NearbyEnemyInnerFactorRange;                             // 0x001C(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           NearbyEnemyCountRange;                                   // 0x0024(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           NearbySpawnerOuterFactorRange;                           // 0x002C(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           NearbySpawnerInnerFactorRange;                           // 0x0034(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           NearbySpawnerCountRange;                                 // 0x003C(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarBotLootWeaponFeedConfig
	 * Size -> 0x0020
	 */
	struct FSolarBotLootWeaponFeedConfig
	{
	public:
		float                                                      MaxNoWeaponTime;                                         // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZXRQ[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<int32_t>                                            FeedWeaponIDs;                                           // 0x0008(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CheckPlayerSightInterval;                                // 0x0018(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bStartFeedAfterSearchedAnySpawner;                       // 0x001C(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6AJB[0x3];                                   // 0x001D(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.SolarBotThreatConfig
	 * Size -> 0x0070
	 */
	struct FSolarBotThreatConfig
	{
	public:
		float                                                      ThreatUpdateInterval;                                    // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AttackTriggerThreshold;                                  // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CancelAttackTriggerThreshold;                            // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SwitchTargetDifferenceValue;                             // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DistanceThreshold;                                       // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DistanceThresholdInSmoke;                                // 0x0014(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SightLoseRange;                                          // 0x0018(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PeripheralVisionAngleDegrees;                            // 0x001C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SightIncreaseBase;                                       // 0x0020(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SightIncreaseDistanceFactor;                             // 0x0024(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SightDecreaseBase;                                       // 0x0028(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SightDecreaseDistanceFactor;                             // 0x002C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SightDecreaseMax;                                        // 0x0030(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SightMaxValue;                                           // 0x0034(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HearingAddBase;                                          // 0x0038(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HearingAddDistanceFactor;                                // 0x003C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HearingDecreasePerTick;                                  // 0x0040(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HearingMaxValue;                                         // 0x0044(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HitSoundAlertRange;                                      // 0x0048(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BotThreatFactor;                                         // 0x004C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PlayerThreatFactor;                                      // 0x0050(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DeathVergeFactor;                                        // 0x0054(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MassInvisibilityPrepareFactor;                           // 0x0058(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxDistanceThreatFactor;                                 // 0x005C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DistanceThreatFactorDecayRate;                           // 0x0060(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AccompanyThreatMaxValue;                                 // 0x0064(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AccompanyThreatAddBase;                                  // 0x0068(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AccompanyDecreasePerTick;                                // 0x006C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarBotSafeAreaConfig
	 * Size -> 0x0008
	 */
	struct FSolarBotSafeAreaConfig
	{
	public:
		float                                                      EstimateAdjustFactor;                                    // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SafeAreaRadiusEx;                                        // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarBotSkyDivingConfig
	 * Size -> 0x0024
	 */
	struct FSolarBotSkyDivingConfig
	{
	public:
		float                                                      DecisionAltitude;                                        // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RandomLandingRadius;                                     // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RandomDelayCancelFollow;                                 // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FollowAcceptDistance;                                    // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AbandonCheckAltitude;                                    // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CheckEnemyRange;                                         // 0x0014(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CheckEnemyCount;                                         // 0x0018(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      OuterRandomLandingRadius;                                // 0x001C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      InnerRandomLandingRadius;                                // 0x0020(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarBotTeamBuildRule
	 * Size -> 0x0068
	 */
	struct FSolarBotTeamBuildRule
	{
	public:
		class FString                                              Description;                                             // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsHeroPickTypeRule;                                     // 0x0010(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_S64Q[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<struct FGameplayTag, float>                           TagWeights;                                              // 0x0018(0x0050) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.BotMemberDebugInfo
	 * Size -> 0x0028
	 */
	struct FBotMemberDebugInfo
	{
	public:
		struct FVector                                             MemberLocation;                                          // 0x0000(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6OSH[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              IDStr;                                                   // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESolarBotMemberState                                       MemberState;                                             // 0x0020(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_24R8[0x7];                                   // 0x0021(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.BotTeamDebugInfo
	 * Size -> 0x0018
	 */
	struct FBotTeamDebugInfo
	{
	public:
		int32_t                                                    TeamID;                                                  // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8C0V[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FBotMemberDebugInfo>                         MemberDebugInfos;                                        // 0x0008(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.ActiveBotDebugInfo
	 * Size -> 0x0070
	 */
	struct FActiveBotDebugInfo
	{
	public:
		class FString                                              BotName;                                                 // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bTeleSuccess;                                            // 0x0010(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DG94[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    BotCharacterID;                                          // 0x0014(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    BotTeamID;                                               // 0x0018(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_L3W0[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              BotConfigName;                                           // 0x0020(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             BotLocation;                                             // 0x0030(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             WarmTargetLocation;                                      // 0x003C(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DistanceToWarmTarget;                                    // 0x0048(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             BotLocationOnTeleport;                                   // 0x004C(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             WarmTargetLocationOnTeleport;                            // 0x0058(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DistanceToWarmTargetOnTeleport;                          // 0x0064(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsAlive;                                                // 0x0068(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0SXY[0x7];                                   // 0x0069(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.WarmBotDebugInfo
	 * Size -> 0x0010
	 */
	struct FWarmBotDebugInfo
	{
	public:
		TArray<struct FActiveBotDebugInfo>                         PoppedBots;                                              // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarWeaponPartBonusDropSetting
	 * Size -> 0x0050
	 */
	struct FSolarWeaponPartBonusDropSetting
	{
	public:
		TMap<EWeaponPartType, float>                               PriorityMap;                                             // 0x0000(0x0050) Edit, BlueprintVisible, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarBotTimelineGameSetting
	 * Size -> 0x0080 (FullSize[0x0088] - InheritedSize[0x0008])
	 */
	struct FSolarBotTimelineGameSetting : public FTableRowBase
	{
	public:
		ESolarBotWarmSystemType                                    WarmSystemType;                                          // 0x0008(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XBZO[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    MaxiumTeam;                                              // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Comment;                                                 // 0x0010(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UDataTable* Action;                                                  // 0x0020(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UDataTable* Item;                                                    // 0x0028(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UDataTable* Downsize;                                                // 0x0030(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TMap<class UDataTable*, float>                             ItemProgressionWeightMap;                                // 0x0038(0x0050) Edit, BlueprintVisible, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.WarmTargetState
	 * Size -> 0x0028
	 */
	struct FWarmTargetState
	{
	public:
		float                                                      BoringValue;                                             // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ServedTimes;                                             // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bNeedWarmService;                                        // 0x0008(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              KillPlayerNum;                                           // 0x0009(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              KillBotNum;                                              // 0x000A(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RTTJ[0x1];                                   // 0x000B(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      LastBattleTime;                                          // 0x000C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CurTraceRecordIdx;                                       // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BOW7[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FVector>                                     TraceRecords;                                            // 0x0018(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarBotTimelineEquipmentArray
	 * Size -> 0x0050
	 */
	struct FSolarBotTimelineEquipmentArray
	{
	public:
		TMap<int32_t, int32_t>                                     IDArray;                                                 // 0x0000(0x0050) Edit, BlueprintVisible, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarBotTimelineAIItemSetting
	 * Size -> 0x00F0
	 */
	struct FSolarBotTimelineAIItemSetting
	{
	public:
		TMap<ESolarBotTimelineEquipmentSettingType, struct FSolarBotTimelineEquipmentArray> Equipment;                                               // 0x0000(0x0050) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		TMap<int32_t, struct FIntPoint>                            Consumable;                                              // 0x0050(0x0050) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		TMap<ESolarBotTimelineWeaponPartType, struct FSolarBotTimelineEquipmentArray> WeaponPart;                                              // 0x00A0(0x0050) Edit, BlueprintVisible, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.TimeItemsSetting
	 * Size -> 0x00F8
	 */
	struct FTimeItemsSetting
	{
	public:
		float                                                      TriggerTime;                                             // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7K1L[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSolarBotTimelineAIItemSetting                      Items;                                                   // 0x0008(0x00F0) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarAITagStateTransition
	 * Size -> 0x0020
	 */
	struct FSolarAITagStateTransition
	{
	public:
		struct FGameplayTag                                        FromStateTag;                                            // 0x0000(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FGameplayTag                                        ToStateTag;                                              // 0x0008(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class USolarAICondition*>                           TransConditions;                                         // 0x0010(0x0010) Edit, ExportObject, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarTaskScoringItem
	 * Size -> 0x0050
	 */
	struct FSolarTaskScoringItem
	{
	public:
		TMap<ESolarTaskScoringItemType, float>                     ScoringItemMap;                                          // 0x0000(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.ItemBurstParam
	 * Size -> 0x001C
	 */
	struct FItemBurstParam
	{
	public:
		float                                                      BurstRadius;                                             // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BurstRadiusRandScale;                                    // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BurstLocalHeight;                                        // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BurstEulerAngle;                                         // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bBurstSplitItem;                                         // 0x0010(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EBurstMethod                                               BurstMethod;                                             // 0x0011(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_B8B8[0x2];                                   // 0x0012(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      RadSafeSlopeToBurstOn;                                   // 0x0014(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      GoldenSpiralMinRadiusSquared;                            // 0x0018(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.UsingAirlineData
	 * Size -> 0x0044
	 */
	struct FUsingAirlineData
	{
	public:
		int32_t                                                    MapId;                                                   // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             StartPoint;                                              // 0x0004(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             EndPoint;                                                // 0x0010(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           Direction;                                               // 0x001C(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Speed;                                                   // 0x0024(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Height;                                                  // 0x0028(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             CanParachutePoint;                                       // 0x002C(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             ForceParachutePoint;                                     // 0x0038(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.BoardingSpotInfo
	 * Size -> 0x0020
	 */
	struct FBoardingSpotInfo
	{
	public:
		struct FVector                                             SpotLocation;                                            // 0x0000(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_C45R[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ASolarPlayerState* BoardingPlayer;                                          // 0x0010(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ASolarPlayerState* LeaderPlayer;                                            // 0x0018(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.EchelonFormationUnit
	 * Size -> 0x0010
	 */
	struct FEchelonFormationUnit
	{
	public:
		TArray<struct FBoardingSpotInfo>                           EchelonFormation;                                        // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.TeamFormationUnit
	 * Size -> 0x0050
	 */
	struct FTeamFormationUnit
	{
	public:
		TMap<unsigned char, struct FEchelonFormationUnit>          TeamFormation;                                           // 0x0000(0x0050) NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.BoarderInfo
	 * Size -> 0x0010
	 */
	struct FBoarderInfo
	{
	public:
		class ASolarCharacter* Boarder;                                                 // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    BoarderTeamID;                                           // 0x0008(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    BoarderTeamSize;                                         // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SingleCruiseParamForReplicated
	 * Size -> 0x0028
	 */
	struct FSingleCruiseParamForReplicated
	{
	public:
		class ASolarCharacter* CurrentCharacter;                                        // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             StartLocation;                                           // 0x0008(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             EndLocation;                                             // 0x0014(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FlyDuringTime;                                           // 0x0020(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      StartTime;                                               // 0x0024(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarCharacterBillboardIconRuntimeInfo
	 * Size -> 0x0028
	 */
	struct FSolarCharacterBillboardIconRuntimeInfo
	{
	public:
		unsigned char                                              UnknownData_YF98[0x18];                                  // 0x0000(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UStaticMeshComponent* Component;                                               // 0x0018(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_764G[0x8];                                   // 0x0020(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.CamEffectSettings
	 * Size -> 0x0038
	 */
	struct FCamEffectSettings
	{
	public:
		float                                                      FadeIn;                                                  // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FadeOut;                                                 // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Duration;                                                // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bEnableOffset;                                           // 0x000C(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2VID[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UCurveVector* OffsetCurve;                                             // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bEnableRotation;                                         // 0x0018(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ROVX[0x7];                                   // 0x0019(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UCurveVector* RotationCurve;                                           // 0x0020(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bEnableFOV;                                              // 0x0028(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6PB2[0x7];                                   // 0x0029(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UCurveFloat* FOVCurve;                                                // 0x0030(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.CameraSettings
	 * Size -> 0x0020
	 */
	struct FCameraSettings
	{
	public:
		float                                                      DistanceToTarget;                                        // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CameraFOV;                                               // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             TargetOffset;                                            // 0x0008(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             CameraOffset;                                            // 0x0014(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarCharacterDeathEffectData
	 * Size -> 0x0070
	 */
	struct FSolarCharacterDeathEffectData
	{
	public:
		struct FSoftObjectPath                                     Path;                                                    // 0x0000(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     PathForOther;                                            // 0x0018(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTransform                                          RelativeTransform;                                       // 0x0030(0x0030) Edit, BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		class FName                                                SocketName;                                              // 0x0060(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAttachToSocket;                                         // 0x0068(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LJYS[0x7];                                   // 0x0069(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.ChargingInfo
	 * Size -> 0x0030
	 */
	struct FChargingInfo
	{
	public:
		TWeakObjectPtr<class ASolarCharacter>                      Ch;                                                      // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Time;                                                    // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LastChargeTime;                                          // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bShowEffect;                                             // 0x0010(0x0001) ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WZIQ[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      Quantity;                                                // 0x0014(0x0004) ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Frequency;                                               // 0x0018(0x0004) ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EPileHealingType                                           PileHealingType;                                         // 0x001C(0x0001) ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_C2OS[0x3];                                   // 0x001D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      TotalChargeEnergy;                                       // 0x0020(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_F57B[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class USolarBackpackComponent* BackpackComponent;                                       // 0x0028(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
	};

	/**
	 * ScriptStruct Solarland.ChargingPilePreset
	 * Size -> 0x0150
	 */
	struct FChargingPilePreset
	{
	public:
		struct FSoftObjectPath                                     NormalMeshPath;                                          // 0x0000(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     BrokenMeshPath;                                          // 0x0018(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     BrokenMatPath;                                           // 0x0030(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     RangeRingPath;                                           // 0x0048(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     RangeRingMatPath;                                        // 0x0060(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     ChargeCirclePath;                                        // 0x0078(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     ChargeCircleMatPath;                                     // 0x0090(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     ChargeParticleEffectPath;                                // 0x00A8(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     OutlineMatPath;                                          // 0x00C0(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MECJ[0x8];                                   // 0x00D8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTransform                                          RangeRingTrans;                                          // 0x00E0(0x0030) Edit, BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FTransform                                          ChargeCircleTrans;                                       // 0x0110(0x0030) Edit, BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FVector                                             BeamStartPos;                                            // 0x0140(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NQDR[0x4];                                   // 0x014C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.ChunkAssignRule
	 * Size -> 0x0018
	 */
	struct FChunkAssignRule
	{
	public:
		class FString                                              FullPath;                                                // 0x0000(0x0010) Edit, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ChunkID;                                                 // 0x0010(0x0004) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RVJA[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.SafeAreaInfoBase
	 * Size -> 0x0018
	 */
	struct FSafeAreaInfoBase
	{
	public:
		struct FVector                                             Location;                                                // 0x0000(0x000C) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      WaitTime;                                                // 0x000C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ShrinkTime;                                              // 0x0010(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DamageValue;                                             // 0x0014(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.CircleSafeAreaInfo
	 * Size -> 0x0004 (FullSize[0x001C] - InheritedSize[0x0018])
	 */
	struct FCircleSafeAreaInfo : public FSafeAreaInfoBase
	{
	public:
		float                                                      Radius;                                                  // 0x0018(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SlateFontSizeLangData
	 * Size -> 0x0008
	 */
	struct FSlateFontSizeLangData
	{
	public:
		ESolarSupportLanguages                                     SpecialLang;                                             // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_P9U6[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    SpecialFontSize;                                         // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SlateFontSizeForLang
	 * Size -> 0x0018
	 */
	struct FSlateFontSizeForLang
	{
	public:
		bool                                                       bEnableFontForLang;                                      // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QUPA[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    DefaultFontSize;                                         // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FSlateFontSizeLangData>                      FontForLangGroup;                                        // 0x0008(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarDamageTextData
	 * Size -> 0x0014
	 */
	struct FSolarDamageTextData
	{
	public:
		TWeakObjectPtr<class USolarTextBlock>                      Text;                                                    // 0x0000(0x0008) Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TWeakObjectPtr<class UWidgetAnimation>                     Animation;                                               // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bEnableDamageSpecialAnimation;                           // 0x0010(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VEW2[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.SolarDamageTextIconData
	 * Size -> 0x0028
	 */
	struct FSolarDamageTextIconData
	{
	public:
		TArray<class UImage*>                                      Icons;                                                   // 0x0000(0x0010) Edit, BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TWeakObjectPtr<class UImage>                               Outline;                                                 // 0x0010(0x0008) Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TWeakObjectPtr<class UCanvasPanel>                         Panel;                                                   // 0x0018(0x0008) Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TWeakObjectPtr<class UWidgetAnimation>                     Animation;                                               // 0x0020(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarDamageTextColor
	 * Size -> 0x0068
	 */
	struct FSolarDamageTextColor
	{
	public:
		struct FSlateColor                                         FontColor;                                               // 0x0000(0x0028) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		struct FLinearColor                                        ShadowColor;                                             // 0x0028(0x0010) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLinearColor                                        IconColor;                                               // 0x0038(0x0010) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLinearColor                                        OutlineColor;                                            // 0x0048(0x0010) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLinearColor                                        IconOutlineColor;                                        // 0x0058(0x0010) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarDamageTextStyle
	 * Size -> 0x00A0
	 */
	struct FSolarDamageTextStyle
	{
	public:
		class FText                                                DamageText;                                              // 0x0000(0x0018) BlueprintVisible, NativeAccessSpecifierPublic
		struct FSlateFontInfo                                      Font;                                                    // 0x0018(0x0060) Edit, BlueprintVisible, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           ShadowOffset;                                            // 0x0078(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FMargin                                             Margin;                                                  // 0x0080(0x0010) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		TArray<struct FSolarDamageTextColor>                       Colors;                                                  // 0x0090(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarDamageTextOffsetData
	 * Size -> 0x000C
	 */
	struct FSolarDamageTextOffsetData
	{
	public:
		float                                                      HitHeightOffset;                                         // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           DisplayPositionOffset;                                   // 0x0004(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarDamageTextGroupData
	 * Size -> 0x0030
	 */
	struct FSolarDamageTextGroupData
	{
	public:
		TArray<TWeakObjectPtr<class USolarDamageTextSlotWidget>>   FloatDamageTextSlotWidgets;                              // 0x0000(0x0010) ExportObject, ZeroConstructor, ContainsInstancedReference, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TWeakObjectPtr<class USolarDamageTextSlotWidget>           StackDamageTextSlotWidget;                               // 0x0010(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    HitCount;                                                // 0x0018(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CurrentDisplayIndex;                                     // 0x001C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TWeakObjectPtr<class USolarDamageTextSlotWidget>           PendingDamageTextSlotWidget;                             // 0x0020(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    DamageCount;                                             // 0x0028(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bFirstDisplay;                                           // 0x002C(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              ReferenceTimes;                                          // 0x002D(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_M4YZ[0x2];                                   // 0x002E(0x0002) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.ElectricShopItem
	 * Size -> 0x0018
	 */
	struct FElectricShopItem
	{
	public:
		int32_t                                                    ItemID;                                                  // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Prize;                                                   // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Num;                                                     // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ProductID;                                               // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CoolDown;                                                // 0x0010(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Generation;                                              // 0x0014(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.ElectricShopSection
	 * Size -> 0x0018
	 */
	struct FElectricShopSection
	{
	public:
		TArray<struct FElectricShopItem>                           Items;                                                   // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CoolDownDuration;                                        // 0x0010(0x0004) Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YF99[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.ElectricShopCDRecord
	 * Size -> 0x0020
	 */
	struct FElectricShopCDRecord
	{
	public:
		int32_t                                                    ProductID;                                               // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Duration;                                                // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      EndWorldTime;                                            // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BPZN[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              BuyerID;                                                 // 0x0010(0x0010) Edit, BlueprintVisible, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.PoolRefreshInfo
	 * Size -> 0x0008
	 */
	struct FPoolRefreshInfo
	{
	public:
		int32_t                                                    PoolGroupID;                                             // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PoolRefreshTime;                                         // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.MatUpdateParams
	 * Size -> 0x0020
	 */
	struct FMatUpdateParams
	{
	public:
		class FName                                                MatParam;                                                // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCurveBase* MatCurve;                                                // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCurveBase* MatCurveEnemy;                                           // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCanComplete;                                            // 0x0018(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5X6L[0x7];                                   // 0x0019(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.PerceivableEAInfluenceConfig
	 * Size -> 0x0060
	 */
	struct FPerceivableEAInfluenceConfig
	{
	public:
		TMap<EPerceivableEffectAreaType, float>                    AreaTypeValueMap;                                        // 0x0000(0x0050) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
		float                                                      HostileAreaFactor;                                       // 0x0050(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      NeutralAreaFactor;                                       // 0x0054(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FriendlyAreaFactor;                                      // 0x0058(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_F4GZ[0x4];                                   // 0x005C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.CharacterSkydiveTrailStaticInfo
	 * Size -> 0x002C (FullSize[0x0038] - InheritedSize[0x000C])
	 */
	struct FCharacterSkydiveTrailStaticInfo : public FFastArraySerializerItem
	{
	public:
		unsigned char                                              UnknownData_N69I[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              CharacterId;                                             // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ASolarPlayerState* PlayerState;                                             // 0x0020(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              TrailAssemblingId;                                       // 0x0028(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.CharacterSkydiveTrailStaticInfoContainer
	 * Size -> 0x0018 (FullSize[0x0120] - InheritedSize[0x0108])
	 */
	struct FCharacterSkydiveTrailStaticInfoContainer : public FFastArraySerializer
	{
	public:
		TArray<struct FCharacterSkydiveTrailStaticInfo>            InfoArray;                                               // 0x0108(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ASolarFlyTrail* Owner;                                                   // 0x0118(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SkydiveTrailFrameInfo
	 * Size -> 0x0020
	 */
	struct FSkydiveTrailFrameInfo
	{
	public:
		class ASolarPlayerState* OwnerPlayerState;                                        // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector_NetQuantize                                 Location;                                                // 0x0008(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector_NetQuantize                                 Velocity;                                                // 0x0014(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.PackedSkydiveTrailFrameInfo
	 * Size -> 0x0024 (FullSize[0x0030] - InheritedSize[0x000C])
	 */
	struct FPackedSkydiveTrailFrameInfo : public FFastArraySerializerItem
	{
	public:
		float                                                      Timestamp;                                               // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FSkydiveTrailFrameInfo>                      FrameInfos;                                              // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class ASolarPlayerState*>                           FinishedPlayerStates;                                    // 0x0020(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.PackedSkydiveTrailFrameInfoContainer
	 * Size -> 0x0018 (FullSize[0x0120] - InheritedSize[0x0108])
	 */
	struct FPackedSkydiveTrailFrameInfoContainer : public FFastArraySerializer
	{
	public:
		TArray<struct FPackedSkydiveTrailFrameInfo>                InfoArray;                                               // 0x0108(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ASolarFlyTrail* Owner;                                                   // 0x0118(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.CharacterSkydiveTrailData
	 * Size -> 0x0060
	 */
	struct FCharacterSkydiveTrailData
	{
	public:
		unsigned char                                              UnknownData_99VC[0x60];                                  // 0x0000(0x0060) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.VehicleDetector
	 * Size -> 0x0018
	 */
	struct FVehicleDetector
	{
	public:
		struct FRotator                                            VehicleLocalRotator;                                     // 0x0000(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FVector                                             StartLocParameter;                                       // 0x000C(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.FuncCharacterBackpackInfo
	 * Size -> 0x0008
	 */
	struct FFuncCharacterBackpackInfo
	{
	public:
		int32_t                                                    BagId;                                                   // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    TailFlameId;                                             // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.RegistedActorContainer
	 * Size -> 0x0050
	 */
	struct FRegistedActorContainer
	{
	public:
		unsigned char                                              UnknownData_V1RJ[0x50];                                  // 0x0000(0x0050) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.AntiCheatSetting
	 * Size -> 0x0040
	 */
	struct FAntiCheatSetting
	{
	public:
		int64_t                                                    ID;                                                      // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int64_t                                                    ValueType;                                               // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		double                                                     ValueStart;                                              // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		double                                                     ValueEnd;                                                // 0x0018(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int64_t                                                    Tolerance;                                               // 0x0020(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int64_t                                                    ProbeInterval;                                           // 0x0028(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              VariableName;                                            // 0x0030(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.ScreenshotConfig
	 * Size -> 0x0050
	 */
	struct FScreenshotConfig
	{
	public:
		bool                                                       EnableOnCurrentReportGameCheating;                       // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TQFQ[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    MaxCountInRound;                                         // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ScreenshotMoment;                                        // 0x0008(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ScreenshotInterval;                                      // 0x0018(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ScreenshotWidth;                                         // 0x001C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ScreenshotQuality;                                       // 0x0020(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9N1T[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              ImageSaveType;                                           // 0x0028(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ScreenshotMode;                                          // 0x0038(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ImageMaxSize;                                            // 0x0048(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XKJQ[0x4];                                   // 0x004C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.SCustomMode_GameModeSetting
	 * Size -> 0x0068
	 */
	struct FSCustomMode_GameModeSetting
	{
	public:
		struct FSoftObjectPath                                     PlayerControllerClass;                                   // 0x0000(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     DefaultPawnClass;                                        // 0x0018(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     PlayerStateClass;                                        // 0x0030(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     HUDClass;                                                // 0x0048(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SettlementStageConfigID;                                 // 0x0060(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZBOL[0x4];                                   // 0x0064(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.SolarElementGroupPath
	 * Size -> 0x0030
	 */
	struct FSolarElementGroupPath
	{
	public:
		class FString                                              Name;                                                    // 0x0000(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     ElementLevel;                                            // 0x0010(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       LoadWithLevel;                                           // 0x0028(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bPersistentLevel;                                        // 0x0029(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UOU5[0x6];                                   // 0x002A(0x0006) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.SGameMode_LevelConfig
	 * Size -> 0x0078
	 */
	struct FSGameMode_LevelConfig
	{
	public:
		class FString                                              Name;                                                    // 0x0000(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Desc;                                                    // 0x0010(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     LevelMap;                                                // 0x0020(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MiniMapId;                                               // 0x0038(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsStreaming;                                             // 0x003C(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KKQK[0x3];                                   // 0x003D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSolarElementGroupPath>                      ElementGroups;                                           // 0x0040(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              LoadingUI[0x28];                                         // 0x0050(0x0028) UNKNOWN PROPERTY: SoftClassProperty
	};

	/**
	 * ScriptStruct Solarland.RangeData
	 * Size -> 0x0008
	 */
	struct FRangeData
	{
	public:
		float                                                      MinValue;                                                // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxValue;                                                // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SoundSettingsRange
	 * Size -> 0x0020
	 */
	struct FSoundSettingsRange
	{
	public:
		struct FRangeData                                          Sound_Global;                                            // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FRangeData                                          Sound_Action;                                            // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FRangeData                                          Sound_BackGround;                                        // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FRangeData                                          Sound_Character;                                         // 0x0018(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.CameraSensitivityRangeData
	 * Size -> 0x0040
	 */
	struct FCameraSensitivityRangeData
	{
	public:
		struct FRangeData                                          Sensitivity_Basic;                                       // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FRangeData                                          Sensitivity_Shoulder;                                    // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FRangeData                                          Sensitivity_RedPoint;                                    // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FRangeData                                          Sensitivity_Lens_Two;                                    // 0x0018(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FRangeData                                          Sensitivity_Lens_Three;                                  // 0x0020(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FRangeData                                          Sensitivity_Lens_Four;                                   // 0x0028(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FRangeData                                          Sensitivity_Lens_Six;                                    // 0x0030(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FRangeData                                          Sensitivity_Lens_Eight;                                  // 0x0038(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.VehicleCameraSensitivityRangeData
	 * Size -> 0x0018
	 */
	struct FVehicleCameraSensitivityRangeData
	{
	public:
		struct FRangeData                                          Sensitivity_Lens_Two;                                    // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FRangeData                                          Sensitivity_Lens_Four;                                   // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FRangeData                                          Sensitivity_Lens_Eight;                                  // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.GyroscopeSensitivityRangeData
	 * Size -> 0x0040
	 */
	struct FGyroscopeSensitivityRangeData
	{
	public:
		struct FRangeData                                          GyroscopeSensitivity_Basic;                              // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FRangeData                                          GyroscopeSensitivity_Shoulder;                           // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FRangeData                                          GyroscopeSensitivity_RedPoint;                           // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FRangeData                                          GyroscopeSensitivity_Lens_Two;                           // 0x0018(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FRangeData                                          GyroscopeSensitivity_Lens_Three;                         // 0x0020(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FRangeData                                          GyroscopeSensitivity_Lens_Four;                          // 0x0028(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FRangeData                                          GyroscopeSensitivity_Lens_Six;                           // 0x0030(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FRangeData                                          GyroscopeSensitivity_Lens_Eight;                         // 0x0038(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SensitivitySettingsRange
	 * Size -> 0x0120
	 */
	struct FSensitivitySettingsRange
	{
	public:
		struct FRangeData                                          Sensitivity_CurveScale;                                  // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FRangeData                                          Sensitivity_Free;                                        // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FRangeData                                          Sensitivity_SecondarySkills;                             // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FRangeData                                          Sensitivity_SuperSkills;                                 // 0x0018(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FCameraSensitivityRangeData                         Sensitivity_NoShoot;                                     // 0x0020(0x0040) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FCameraSensitivityRangeData                         Sensitivity_Shoot;                                       // 0x0060(0x0040) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FVehicleCameraSensitivityRangeData                  Sensitivity_Vehicle_NoShoot;                             // 0x00A0(0x0018) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FVehicleCameraSensitivityRangeData                  Sensitivity_Vehicle_Shoot;                               // 0x00B8(0x0018) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FRangeData                                          Sensitivity_VehicleDriver;                               // 0x00D0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FRangeData                                          Sensitivity_VehicleFire;                                 // 0x00D8(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FGyroscopeSensitivityRangeData                      Sensitivity_GyroscopeData;                               // 0x00E0(0x0040) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.GraphicsSettingsRange
	 * Size -> 0x0018
	 */
	struct FGraphicsSettingsRange
	{
	public:
		struct FRangeData                                          AdaptationUIValue;                                       // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FRangeData                                          FOVRange;                                                // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FRangeData                                          BrightnessRange;                                         // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.MouseAndKeyboardSettingsRange
	 * Size -> 0x0008
	 */
	struct FMouseAndKeyboardSettingsRange
	{
	public:
		struct FRangeData                                          MainSensitivity;                                         // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.GamepadSettingsRange
	 * Size -> 0x0010
	 */
	struct FGamepadSettingsRange
	{
	public:
		struct FRangeData                                          MainHorizontalSensitivity;                               // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FRangeData                                          MainVerticalSensitivity;                                 // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarGameStatisticsLogHeadInfo
	 * Size -> 0x0028
	 */
	struct FSolarGameStatisticsLogHeadInfo
	{
	public:
		int32_t                                                    BattleInstanceId;                                        // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    PIEInstance;                                             // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              BattleID;                                                // 0x0008(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              WorldName;                                               // 0x0018(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.PickupItemData
	 * Size -> 0x0008
	 */
	struct FPickupItemData
	{
	public:
		int32_t                                                    ItemID;                                                  // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ItemNum;                                                 // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.PickupUserSettings
	 * Size -> 0x0018
	 */
	struct FPickupUserSettings
	{
	public:
		bool                                                       bAutoPickup;                                             // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bStopAutoPickupWhenClose;                                // 0x0001(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUseTileView;                                            // 0x0002(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7T3V[0x5];                                   // 0x0003(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FPickupItemData>                             PickupItemList;                                          // 0x0008(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.FloatValue
	 * Size -> 0x0004
	 */
	struct FFloatValue
	{
	public:
		float                                                      Value;                                                   // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.GraphicsUserSettings
	 * Size -> 0x0060
	 */
	struct FGraphicsUserSettings
	{
	public:
		ESolarFrameRateLevel                                       FpsLevel;                                                // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESolarContentScaleFactorLevel                              ContentScaleFactorLevel;                                 // 0x0001(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESolarColorTheme                                           ColorThemeType;                                          // 0x0002(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       MSAAIsEnabled;                                           // 0x0003(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       VSyncIsEnabled;                                          // 0x0004(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_A70G[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FFloatValue                                         AdaptationUIValue;                                       // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       EnableDynamicShadow;                                     // 0x000C(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESolarGraphicsQualityLevel                                 SelectQualityLevel;                                      // 0x000D(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JNLJ[0x2];                                   // 0x000E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FFloatValue                                         CustomizedCharacterCameraFOV;                            // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SavedVersion;                                            // 0x0014(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_J3HT[0x48];                                  // 0x0018(0x0048) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.WeaponUserSettings
	 * Size -> 0x0020
	 */
	struct FWeaponUserSettings
	{
	public:
		bool                                                       bAimAssist_Global;                                       // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAutoFire_Global;                                        // 0x0001(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bVehicleWeaponAutoFire_Global;                           // 0x0002(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bEnableRecoilRecovery_Global;                            // 0x0003(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAutoScope_Global;                                       // 0x0004(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAutoScope_SpecialButtonGlobal;                          // 0x0005(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAutoScopeRifle_Global;                                  // 0x0006(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAutoScopeSubmachinegun_Global;                          // 0x0007(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAutoScopeShotgunSingle_Global;                          // 0x0008(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAutoScopeShotgunAuto_Global;                            // 0x0009(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAutoScopeSniperSingle_Global;                           // 0x000A(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAutoScopeSniperAuto_Global;                             // 0x000B(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAutoScopeSpecial_Global;                                // 0x000C(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bSniperSingleShootOnPressed_Global;                      // 0x000D(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bShotgunSingleShootOnPressed_Global;                     // 0x000E(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_83PX[0x1];                                   // 0x000F(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UCurveFloat* HitEffectDistanceToScaleCurve;                           // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESolarWeaponDoScopeMode                                    DoScopeMode_Global;                                      // 0x0018(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOpenVehicleWeaponCrosshair;                             // 0x0019(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bVehicleAutoScope;                                       // 0x001A(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bVehicleAutoScope_SpecialButton;                         // 0x001B(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCanScopeButtonRotateView;                               // 0x001C(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bShowQuickChangeScopeButton;                             // 0x001D(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_I0KZ[0x2];                                   // 0x001E(0x0002) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.LanguageUserSettings
	 * Size -> 0x0003
	 */
	struct FLanguageUserSettings
	{
	public:
		ESolarSupportLanguages                                     CurLanguage;                                             // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESolarSupportLanguages                                     CurCharacterVoiceLanguage;                               // 0x0001(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       HasLoadedChinese;                                        // 0x0002(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.CharacterVoiceUserSettings
	 * Size -> 0x0001
	 */
	struct FCharacterVoiceUserSettings
	{
	public:
		ESolarSupportLanguages                                     CurVoiceLanguage;                                        // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.ConditionValue
	 * Size -> 0x0008
	 */
	struct FConditionValue
	{
	public:
		bool                                                       bOpen;                                                   // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_G30F[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    CurValue;                                                // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SoundUserSettings
	 * Size -> 0x0060
	 */
	struct FSoundUserSettings
	{
	public:
		struct FConditionValue                                     Sound_Global;                                            // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FConditionValue                                     Sound_Action;                                            // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FConditionValue                                     Sound_BackGround;                                        // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FConditionValue                                     Sound_Character;                                         // 0x0018(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		int32_t                                                    MicroPhoneVolume;                                        // 0x0020(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    LoudSpeakerVolume;                                       // 0x0024(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESolarSoundQuality                                         Sound_Quality;                                           // 0x0028(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESolarAudioMode                                            AudioMode;                                               // 0x0029(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FQS7[0x2];                                   // 0x002A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    MicLevel;                                                // 0x002C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SpeakerLevel;                                            // 0x0030(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ChooseMicIndex;                                          // 0x0034(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ChooseSpeakerIndex;                                      // 0x0038(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_EPDO[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              MicDeviceID;                                             // 0x0040(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              SpeakerDeviceID;                                         // 0x0050(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.BasicUserSettings
	 * Size -> 0x0011
	 */
	struct FBasicUserSettings
	{
	public:
		bool                                                       bOpenUniversalMark;                                      // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EBasicSettingBool                                          OpenOffScreen;                                           // 0x0001(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOpenQuickChat;                                          // 0x0002(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAutoOverturn;                                           // 0x0003(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bPowerAnim;                                              // 0x0004(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOpenRecruitRecommend;                                   // 0x0005(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESolarGyroscopeChooseType                                  curGyroscpeChooseLevel;                                  // 0x0006(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bHorizontalGyroscopeInvert;                              // 0x0007(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bVerticalGyroscopeInvert;                                // 0x0008(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESolarDamageTextDisplayModeType                            CurrentDamageTextDisplayMode;                            // 0x0009(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EBasicSettingBool                                          OpenHighlightMoment;                                     // 0x000A(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EBasicSettingBool                                          OpenOutline;                                             // 0x000B(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bShowInputKeyTips;                                       // 0x000C(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bEnableGamepadInput;                                     // 0x000D(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EBasicSettingBool                                          OpenScreenDamageEffect;                                  // 0x000E(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOpenMiniMapRotate;                                      // 0x000F(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOpenDirectionBlood3D;                                   // 0x0010(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.ColorValue
	 * Size -> 0x0010
	 */
	struct FColorValue
	{
	public:
		struct FLinearColor                                        Value;                                                   // 0x0000(0x0010) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.ColorPreset
	 * Size -> 0x002C
	 */
	struct FColorPreset
	{
	public:
		int32_t                                                    ColorID;                                                 // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FColorValue                                         ModelColor;                                              // 0x0004(0x0010) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FColorValue                                         UIColor;                                                 // 0x0014(0x0010) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ColorNameLocalText;                                      // 0x0024(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bNotShowDomestic;                                        // 0x0028(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDefault;                                                // 0x0029(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDefaultDomestic;                                        // 0x002A(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HZRW[0x1];                                   // 0x002B(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.ParticlePreset
	 * Size -> 0x0048
	 */
	struct FParticlePreset
	{
	public:
		int32_t                                                    ColorID;                                                 // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_S5KJ[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              Particle[0x28];                                          // 0x0008(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		struct FColorValue                                         UIColor;                                                 // 0x0030(0x0010) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ColorNameLocalText;                                      // 0x0040(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bNotShowDomestic;                                        // 0x0044(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDefault;                                                // 0x0045(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDefaultDomestic;                                        // 0x0046(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FIOC[0x1];                                   // 0x0047(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.PersonalityUserSettings
	 * Size -> 0x0088
	 */
	struct FPersonalityUserSettings
	{
	public:
		TArray<struct FColorPreset>                                TeammatePerspectiveColors;                               // 0x0000(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FColorPreset>                                OpponentPerspectiveColors;                               // 0x0010(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FParticlePreset>                             BloodMistColors;                                         // 0x0020(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FColorValue                                         TeammatePerspectiveColor;                                // 0x0030(0x0010) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FColorValue                                         OpponentPerspectiveColor;                                // 0x0040(0x0010) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              BloodMistParticle[0x28];                                 // 0x0050(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		int32_t                                                    TeammateColor;                                           // 0x0078(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    OpponentColor;                                           // 0x007C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    BloodMistColor;                                          // 0x0080(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WZON[0x4];                                   // 0x0084(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.CameraSensitivityData
	 * Size -> 0x0020
	 */
	struct FCameraSensitivityData
	{
	public:
		struct FFloatValue                                         Sensitivity_Basic;                                       // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FFloatValue                                         Sensitivity_Shoulder;                                    // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FFloatValue                                         Sensitivity_RedPoint;                                    // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FFloatValue                                         Sensitivity_Lens_Two;                                    // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FFloatValue                                         Sensitivity_Lens_Three;                                  // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FFloatValue                                         Sensitivity_Lens_Four;                                   // 0x0014(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FFloatValue                                         Sensitivity_Lens_Six;                                    // 0x0018(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FFloatValue                                         Sensitivity_Lens_Eight;                                  // 0x001C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.GyroscopeSensitivityData
	 * Size -> 0x0020
	 */
	struct FGyroscopeSensitivityData
	{
	public:
		struct FFloatValue                                         GyroscopeSensitivity_Basic;                              // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FFloatValue                                         GyroscopeSensitivity_Shoulder;                           // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FFloatValue                                         GyroscopeSensitivity_RedPoint;                           // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FFloatValue                                         GyroscopeSensitivity_Lens_Two;                           // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FFloatValue                                         GyroscopeSensitivity_Lens_Three;                         // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FFloatValue                                         GyroscopeSensitivity_Lens_Four;                          // 0x0014(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FFloatValue                                         GyroscopeSensitivity_Lens_Six;                           // 0x0018(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FFloatValue                                         GyroscopeSensitivity_Lens_Eight;                         // 0x001C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.VehicleCameraSensitivityData
	 * Size -> 0x000C
	 */
	struct FVehicleCameraSensitivityData
	{
	public:
		struct FFloatValue                                         Sensitivity_Lens_Two;                                    // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FFloatValue                                         Sensitivity_Lens_Four;                                   // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FFloatValue                                         Sensitivity_Lens_Eight;                                  // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SensitivityUserSettings
	 * Size -> 0x0094
	 */
	struct FSensitivityUserSettings
	{
	public:
		ESolarTouchAccMode                                         Sensitivity_AccMode;                                     // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JEUM[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FFloatValue                                         Sensitivity_CurveScale;                                  // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FFloatValue                                         Sensitivity_Free;                                        // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FFloatValue                                         Sensitivity_SecondarySkills;                             // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FFloatValue                                         Sensitivity_SuperSkills;                                 // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FCameraSensitivityData                              Sensitivity_NoShoot;                                     // 0x0014(0x0020) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FCameraSensitivityData                              Sensitivity_Shoot;                                       // 0x0034(0x0020) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FGyroscopeSensitivityData                           GyroscopeData;                                           // 0x0054(0x0020) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FFloatValue                                         Sensitivity_VehicleDriver;                               // 0x0074(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FFloatValue                                         Sensitivity_VehicleFire;                                 // 0x0078(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVehicleCameraSensitivityData                       Sensitivity_Vehicle_NoShoot;                             // 0x007C(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FVehicleCameraSensitivityData                       Sensitivity_Vehicle_Shoot;                               // 0x0088(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.ShakeUserSettings
	 * Size -> 0x0001
	 */
	struct FShakeUserSettings
	{
	public:
		ESolarShakeMainType                                        ShakeMainStatus;                                         // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.VehicleControlUserSettings
	 * Size -> 0x0005
	 */
	struct FVehicleControlUserSettings
	{
	public:
		EWheeledVehicleDriveUserType                               WheeledVehicleDriveType;                                 // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCanAdjustInAir;                                         // 0x0001(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCanAutoSteering;                                        // 0x0002(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EWheeledVehicleDriveUserType                               LastWheeledVehicleDriveType;                             // 0x0003(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCanVehicleCameraShake;                                  // 0x0004(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.ChatOperatorUserSettings
	 * Size -> 0x0002
	 */
	struct FChatOperatorUserSettings
	{
	public:
		ESolarChatOperatorType                                     Speaker;                                                 // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESolarChatOperatorType                                     Mic;                                                     // 0x0001(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.MouseAndKeyboardSettings
	 * Size -> 0x000C
	 */
	struct FMouseAndKeyboardSettings
	{
	public:
		struct FFloatValue                                         MainSensitivity;                                         // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bMouseInvert;                                            // 0x0004(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESolarWeaponDoScopeMode                                    AimMode;                                                 // 0x0005(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESolarSprintModeType                                       SprintMode;                                              // 0x0006(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESolarWheelModeType                                        MedicWheelMode;                                          // 0x0007(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESolarWheelModeType                                        EmojiWheelMode;                                          // 0x0008(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESolarITemHUDStyle                                         CurrentItemHUDStyle;                                     // 0x0009(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BIGD[0x2];                                   // 0x000A(0x0002) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.SolarAimModeWithLocalText
	 * Size -> 0x0008
	 */
	struct FSolarAimModeWithLocalText
	{
	public:
		int32_t                                                    LocalText;                                               // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESolarWeaponDoScopeMode                                    AimMode;                                                 // 0x0004(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WBVT[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.SolarSprintModeWithLocalText
	 * Size -> 0x0008
	 */
	struct FSolarSprintModeWithLocalText
	{
	public:
		int32_t                                                    LocalText;                                               // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESolarSprintModeType                                       SprintMode;                                              // 0x0004(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_J3I3[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.FloatWithLocalText
	 * Size -> 0x0008
	 */
	struct FFloatWithLocalText
	{
	public:
		int32_t                                                    LocalText;                                               // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Value;                                                   // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.ObjectWithLocalText
	 * Size -> 0x0020
	 */
	struct FObjectWithLocalText
	{
	public:
		int32_t                                                    LocalText;                                               // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Q27H[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSoftObjectPath                                     ObjectPath;                                              // 0x0008(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarWheelModeTypeWithLocalText
	 * Size -> 0x0008
	 */
	struct FSolarWheelModeTypeWithLocalText
	{
	public:
		int32_t                                                    LocalText;                                               // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESolarWheelModeType                                        WheelPadMode;                                            // 0x0004(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YGGW[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.GamepadSettings
	 * Size -> 0x00E0
	 */
	struct FGamepadSettings
	{
	public:
		TArray<struct FSolarAimModeWithLocalText>                  AimModeMap;                                              // 0x0000(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FSolarSprintModeWithLocalText>               SprintModeMap;                                           // 0x0010(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FFloatWithLocalText>                         ViewSensitivityMap;                                      // 0x0020(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FObjectWithLocalText>                        ResponseCurveMap;                                        // 0x0030(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FFloatWithLocalText>                         LeftStickDeadzoneMap;                                    // 0x0040(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FFloatWithLocalText>                         RightStickDeadzoneMap;                                   // 0x0050(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FFloatWithLocalText>                         TriggerDeadzoneMap;                                      // 0x0060(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FFloatWithLocalText>                         VibrationLevelMap;                                       // 0x0070(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRangeData                                          CursorSpeedRange;                                        // 0x0080(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		TArray<struct FSolarWheelModeTypeWithLocalText>            WheelModeTypeMap;                                        // 0x0088(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    AimModeID;                                               // 0x0098(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SprintModeID;                                            // 0x009C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FConditionValue                                     MainHorizontalSensitivity;                               // 0x00A0(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FConditionValue                                     MainVerticalSensitivity;                                 // 0x00A8(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		int32_t                                                    RightStickSensitivityID;                                 // 0x00B0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RightStickResponseCurveID;                               // 0x00B4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bInvertedLook;                                           // 0x00B8(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HT0B[0x3];                                   // 0x00B9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    LeftStickDeadzoneID;                                     // 0x00BC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RightStickDeadzoneID;                                    // 0x00C0(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    TriggerDeadzoneID;                                       // 0x00C4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FFloatValue                                         CursorSpeed;                                             // 0x00C8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    VibrationLevelID;                                        // 0x00CC(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bEnableAimAssist;                                        // 0x00D0(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bEnableClassicWheeledVehicleControlMode;                 // 0x00D1(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6OMC[0x2];                                   // 0x00D2(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    MedicWheelModeID;                                        // 0x00D4(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    EmojiWheelModeID;                                        // 0x00D8(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_M97M[0x4];                                   // 0x00DC(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.GamepadAdvancedSettings
	 * Size -> 0x003C
	 */
	struct FGamepadAdvancedSettings
	{
	public:
		struct FRangeData                                          ScalerRange;                                             // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FRangeData                                          SpeedUpScalerRange;                                      // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FRangeData                                          SpeedUpDelayRange;                                       // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FRangeData                                          SpeedUpStartRange;                                       // 0x0018(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FFloatValue                                         ScalerX;                                                 // 0x0020(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FFloatValue                                         ScalerY;                                                 // 0x0024(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FFloatValue                                         SpeedUpScalerX;                                          // 0x0028(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FFloatValue                                         SpeedUpScalerY;                                          // 0x002C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FFloatValue                                         SpeedUpDelayTime;                                        // 0x0030(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FFloatValue                                         SpeedUpStartTime;                                        // 0x0034(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bEnableAdsSpeedUp;                                       // 0x0038(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GR7W[0x3];                                   // 0x0039(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.GraphicsUserSettingsPC
	 * Size -> 0x0058
	 */
	struct FGraphicsUserSettingsPC
	{
	public:
		ESolarResolution                                           Resolution;                                              // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3ADB[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UDataTable* ResolutionDataTable;                                     // 0x0008(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESolarMonitor                                              Monitor;                                                 // 0x0010(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESolarFPS                                                  Fps;                                                     // 0x0011(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESolarGraphicsMode                                         GraphicsMode;                                            // 0x0012(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7AOS[0x1];                                   // 0x0013(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FFloatValue                                         Brightness;                                              // 0x0014(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESolarGraphicQuality                                       ROV;                                                     // 0x0018(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESolarNvdiaReflexLevel                                     NvdiaReflex;                                             // 0x0019(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESolarRayTracingLevel                                      RayTracing;                                              // 0x001A(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESolarVSyncLevel                                           VSync;                                                   // 0x001B(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESolarMotionBlurLevel                                      MotionBlur;                                              // 0x001C(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESolarAntiAliasingLevel                                    AntiAliasing;                                            // 0x001D(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESolarAnisotropicFilterLevel                               AnisotropicFiltering;                                    // 0x001E(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESolarGraphicQuality                                       TextureQuality;                                          // 0x001F(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESolarGraphicQuality                                       TextureModel;                                            // 0x0020(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESolarGraphicQuality                                       DetailQuality;                                           // 0x0021(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESolarGraphicQuality                                       VisualEffects;                                           // 0x0022(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MHBQ[0x1];                                   // 0x0023(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FFloatValue                                         SunlightShadowRange;                                     // 0x0024(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESolarSunlightShadowDetailLevel                            SunlightShadowDetails;                                   // 0x0028(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AENB[0x7];                                   // 0x0029(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UDataTable* ShadowDetailLevelDataTable;                              // 0x0030(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESolarMaxCSMResolutionLevel                                MaxCSMResolutionLevel;                                   // 0x0038(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESolarPointLightShadowDetailsLevel                         PointLightShadowDetails;                                 // 0x0039(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESolarAmbientOcclusionQualityLevel                         AmbientOcclusionQuality;                                 // 0x003A(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESolarSSGIQualityLevel                                     SSGIQuality;                                             // 0x003B(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESolarReflectionQualityLevel                               Reflection;                                              // 0x003C(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       VolumetricLighting;                                      // 0x003D(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       DynamicVolumetricShadows;                                // 0x003E(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESolarPostProcessingEffectsLevel                           PostProcessingEffects;                                   // 0x003F(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESolarRenderingResolutionScaleLevel                        RenderingResolutionScale;                                // 0x0040(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESolarGraphicQuality                                       GrassDensity;                                            // 0x0041(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESolarColorBlindMode                                       ColorBlindMode;                                          // 0x0042(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_H6CW[0x15];                                  // 0x0043(0x0015) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.SolarShieldItemShopDataEntry
	 * Size -> 0x0014 (FullSize[0x0020] - InheritedSize[0x000C])
	 */
	struct FSolarShieldItemShopDataEntry : public FFastArraySerializerItem
	{
	public:
		struct FVector_NetQuantize                                 Pos;                                                     // 0x000C(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Uid;                                                     // 0x0018(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              InteractState;                                           // 0x001C(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YR7Z[0x3];                                   // 0x001D(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.SolarShieldItemShopDataArray
	 * Size -> 0x0028 (FullSize[0x0130] - InheritedSize[0x0108])
	 */
	struct FSolarShieldItemShopDataArray : public FFastArraySerializer
	{
	public:
		TArray<struct FSolarShieldItemShopDataEntry>               Elements;                                                // 0x0108(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0AGV[0x18];                                  // 0x0118(0x0018) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.ColorGradingItem
	 * Size -> 0x05D0
	 */
	struct FColorGradingItem
	{
	public:
		ESolarColorTheme                                           ColorTheme;                                              // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AM87[0xF];                                   // 0x0001(0x000F) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FPostProcessSettings                                PPSettings;                                              // 0x0010(0x05C0) Edit, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.FrameRateLevelItem
	 * Size -> 0x0010
	 */
	struct FFrameRateLevelItem
	{
	public:
		ESolarFrameRateLevel                                       FrameRateLevel;                                          // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_A73F[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      FrameRateLobby;                                          // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FrameRateInGame;                                         // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FrameRatePC;                                             // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.MaxQualityConfig
	 * Size -> 0x0050
	 */
	struct FMaxQualityConfig
	{
	public:
		TMap<ESolarGraphicsQualityLevel, ESolarFrameRateLevel>     CurQualityToMaxFrameRateLevel;                           // 0x0000(0x0050) Edit, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.ContentScaleFactorLevelItem
	 * Size -> 0x0058
	 */
	struct FContentScaleFactorLevelItem
	{
	public:
		ESolarContentScaleFactorLevel                              ContentScaleFactorLevel;                                 // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HEV0[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<ESolarDeviceLevel, float>                             DeviceLevelContentScaleFactorMap;                        // 0x0008(0x0050) Edit, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.HitTraceInfo
	 * Size -> 0x0028
	 */
	struct FHitTraceInfo
	{
	public:
		TWeakObjectPtr<class AActor>                               CausingActor;                                            // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector_NetQuantizeNormal                           TraceDirection;                                          // 0x0008(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             DamageCauserLocation;                                    // 0x0014(0x000C) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Damage;                                                  // 0x0020(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EWeaponType                                                WeaponType;                                              // 0x0024(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsVehicleHitTrace;                                      // 0x0025(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsBump;                                                  // 0x0026(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5KSZ[0x1];                                   // 0x0027(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.HomeActorStaticData
	 * Size -> 0x0038
	 */
	struct FHomeActorStaticData
	{
	public:
		int64_t                                                    ItemID;                                                  // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EHomeActor_FirstType                                       FirstType;                                               // 0x0008(0x0001) ELEMENT_SIZE_MISMATCH Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_EAZW[0x3];                                   // 0x0009(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		EHomeActor_SecondType                                      SecondType;                                              // 0x000C(0x0001) ELEMENT_SIZE_MISMATCH Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MVE9[0x3];                                   // 0x000D(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		bool                                                       IsBrace;                                                 // 0x0010(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5OUD[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              Icon;                                                    // 0x0018(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              BpPath;                                                  // 0x0028(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.BuildMeshSlotData
	 * Size -> 0x0020
	 */
	struct FBuildMeshSlotData
	{
	public:
		class FString                                              SlotName;                                                // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              TexturesID;                                              // 0x0010(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.HomeActorServerData
	 * Size -> 0x0068
	 */
	struct FHomeActorServerData
	{
	public:
		int32_t                                                    ItemID;                                                  // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_E1GT[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              ThisID;                                                  // 0x0008(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EHomeActorOwner                                            Owner;                                                   // 0x0018(0x0001) ELEMENT_SIZE_MISMATCH Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7TYB[0x3];                                   // 0x0019(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		bool                                                       isPreview;                                               // 0x001C(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       isDelete;                                                // 0x001D(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ALH6[0x2];                                   // 0x001E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             CurLocation;                                             // 0x0020(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                            CurRotation;                                             // 0x002C(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		TArray<struct FBuildMeshSlotData>                          FacesMatData;                                            // 0x0038(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ParentObject;                                            // 0x0048(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class FString>                                      ChildObjects;                                            // 0x0058(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.HomeOriginalShader
	 * Size -> 0x0028
	 */
	struct FHomeOriginalShader
	{
	public:
		unsigned char                                              UnknownData_2FNG[0x28];                                  // 0x0000(0x0028) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.HomeShaderData
	 * Size -> 0x00A0
	 */
	struct FHomeShaderData
	{
	public:
		unsigned char                                              UnknownData_KMH8[0xA0];                                  // 0x0000(0x00A0) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.BaseSpaceData
	 * Size -> 0x000C
	 */
	struct FBaseSpaceData
	{
	public:
		int32_t                                                    Layer;                                                   // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EHomeActor_SecondType                                      BaseSpaceType;                                           // 0x0004(0x0001) ELEMENT_SIZE_MISMATCH Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HAWV[0x3];                                   // 0x0005(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		bool                                                       IsOccupied;                                              // 0x0008(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsShow;                                                  // 0x0009(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_EWV0[0x2];                                   // 0x000A(0x0002) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.CameraMovementParameters
	 * Size -> 0x0068
	 */
	struct FCameraMovementParameters
	{
	public:
		float                                                      OneFingerMoveScale;                                      // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MouseMoveScale;                                          // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      OneFingerZoomScale;                                      // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MouseZoomScale;                                          // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DoubleFingerSpinScale;                                   // 0x0010(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DoubleFingerPitchScale;                                  // 0x0014(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MouseRotateScale;                                        // 0x0018(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LookAtLocationHeigh;                                     // 0x001C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinPitch;                                                // 0x0020(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxPitch;                                                // 0x0024(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PanoramicDefaultPitch;                                   // 0x0028(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      homeCameraBoundary;                                      // 0x002C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCurveFloat* DistanceCurve;                                           // 0x0030(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DefultTime;                                              // 0x0038(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3J1T[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UCurveFloat* DistanceCurve_Orthographic;                              // 0x0040(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DefaultTime_Orthographic;                                // 0x0048(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_I9VN[0x4];                                   // 0x004C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UCurveFloat* LayerTransitionCurve;                                    // 0x0050(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCurveFloat* CeilingTransitionCurve;                                  // 0x0058(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCurveFloat* PanoramicTransitionCurve;                                // 0x0060(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.BuildMeshData
	 * Size -> 0x0030
	 */
	struct FBuildMeshData
	{
	public:
		int64_t                                                    ItemID;                                                  // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     MeshPath;                                                // 0x0008(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FBuildMeshSlotData>                          DefaultMat;                                              // 0x0020(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.ThrusterData
	 * Size -> 0x003C
	 */
	struct FThrusterData
	{
	public:
		float                                                      HoverHeightMultiplierInForward;                          // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HoverHeightMultiplierInBackward;                         // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HoverHeightMultiplierInLeft;                             // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HoverHeightMultiplierInRight;                            // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bRaiseDust;                                              // 0x0010(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_F4NF[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      DustEffectScale;                                         // 0x0014(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             DustEffectOffest;                                        // 0x0018(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                ThrusterSocket;                                          // 0x0024(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             ThrusterOffsetIfNoValidSocket;                           // 0x002C(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SweepRadius;                                             // 0x0038(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.PIDController
	 * Size -> 0x001C
	 */
	struct FPIDController
	{
	public:
		float                                                      PCoeff;                                                  // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ICoeff;                                                  // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DCoeff;                                                  // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Minimum;                                                 // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Maximum;                                                 // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PK1P[0x8];                                   // 0x0014(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.ThrusterState
	 * Size -> 0x00C8
	 */
	struct FThrusterState
	{
	public:
		unsigned char                                              UnknownData_2WIE[0x38];                                  // 0x0000(0x0038) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FHitResult                                          TouchGroundHit;                                          // 0x0038(0x0088) BlueprintVisible, BlueprintReadOnly, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8IBJ[0x8];                                   // 0x00C0(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.SolarImageProgressInfo
	 * Size -> 0x0020
	 */
	struct FSolarImageProgressInfo
	{
	public:
		ESolarImageProgressType                                    ProgressType;                                            // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESolarImageProgressLineDirType                             LineProgressDir;                                         // 0x0001(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESolarImageProgressQuaterCirclePrivotType                  QuaterProgressPrivot;                                    // 0x0002(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESolarImageProgressHalfCirclePrivotType                    HalfProgressPrivot;                                      // 0x0003(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CircleProgressInitDegree;                                // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bInvertProgressDir;                                      // 0x0008(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AJD1[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      Progress;                                                // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMaterial* Material;                                                // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMaterialInstanceDynamic* MaterialInstance;                                        // 0x0018(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarInputActionEntry
	 * Size -> 0x0018
	 */
	struct FSolarInputActionEntry
	{
	public:
		class UInputAction* InputAction;                                             // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_IZHE[0x10];                                  // 0x0008(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.SolarVirtualInput
	 * Size -> 0x0020
	 */
	struct FSolarVirtualInput
	{
	public:
		EInputEventHandleType                                      InputBindType;                                           // 0x0000(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2UKP[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FKey                                                VirtualKey;                                              // 0x0008(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.InputHandler
	 * Size -> 0x0020
	 */
	struct FInputHandler
	{
	public:
		unsigned char                                              UnknownData_IUMU[0x20];                                  // 0x0000(0x0020) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.TouchHandler
	 * Size -> 0x0160 (FullSize[0x0180] - InheritedSize[0x0020])
	 */
	struct FTouchHandler : public FInputHandler
	{
	public:
		unsigned char                                              UnknownData_YWQV[0x78];                                  // 0x0020(0x0078) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UCurveFloat* HorizCurve;                                              // 0x0098(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UCurveFloat* VertCurve;                                               // 0x00A0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_O37O[0x28];                                  // 0x00A8(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UCurveFloat* DistHorizCurve;                                          // 0x00D0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UCurveFloat* DistVertCurve;                                           // 0x00D8(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_7AE5[0xA0];                                  // 0x00E0(0x00A0) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.InputKeyMappingPair
	 * Size -> 0x0028
	 */
	struct FInputKeyMappingPair
	{
	public:
		class FString                                              KeyStr1;                                                 // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              KeyStr2;                                                 // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESolarTablesEnum_InputTriggerType                          TriggerType;                                             // 0x0020(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_K1NR[0x7];                                   // 0x0021(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.InputKeyMappingEntry
	 * Size -> 0x0040
	 */
	struct FInputKeyMappingEntry
	{
	public:
		bool                                                       bValid;                                                  // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ER2E[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              ActionID;                                                // 0x0008(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ActionName;                                              // 0x0018(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESolarTablesEnum_InputActionType                           ActionType;                                              // 0x0028(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Q1C1[0x3];                                   // 0x0029(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      Scale;                                                   // 0x002C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FInputKeyMappingPair>                        KeyMappingPairList;                                      // 0x0030(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.InputDeviceProxy
	 * Size -> 0x000C
	 */
	struct FInputDeviceProxy
	{
	public:
		ECommonInputType                                           InputType;                                               // 0x0000(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8JGJ[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                GamepadType;                                             // 0x0004(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.RadarStationCollection
	 * Size -> 0x0018
	 */
	struct FRadarStationCollection
	{
	public:
		int32_t                                                    Zone;                                                    // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KEIT[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class ASolarRadarStation*>                          AllRadarStations;                                        // 0x0008(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SyncBurstItemParam
	 * Size -> 0x0028
	 */
	struct FSyncBurstItemParam
	{
	public:
		struct FVector_NetQuantize                                 StartLoc;                                                // 0x0000(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector_NetQuantize                                 MediumLoc;                                               // 0x000C(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector_NetQuantize                                 EndLoc;                                                  // 0x0018(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BurstLocalHeight;                                        // 0x0024(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarItemSpawnerArray
	 * Size -> 0x0010
	 */
	struct FSolarItemSpawnerArray
	{
	public:
		TArray<class ASolarItemSpawner*>                           ItemSpawnerArray;                                        // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.OutcomeContentData
	 * Size -> 0x0038
	 */
	struct FOutcomeContentData
	{
	public:
		int32_t                                                    ID;                                                      // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ItemID;                                                  // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Weight;                                                  // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_R4B3[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<int32_t>                                            RandomNums;                                              // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaxTimes;                                                // 0x0020(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MinTimes;                                                // 0x0024(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RelatedContentID;                                        // 0x0028(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EItemType                                                  ItemType;                                                // 0x002C(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_H1GZ[0x3];                                   // 0x002D(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		int32_t                                                    DropedTimes;                                             // 0x0030(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsValid;                                                 // 0x0034(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsDeleted;                                               // 0x0035(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_057R[0x2];                                   // 0x0036(0x0002) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.OutcomeTypeLimitData
	 * Size -> 0x0010
	 */
	struct FOutcomeTypeLimitData
	{
	public:
		EItemType                                                  LimitType;                                               // 0x0000(0x0001) ELEMENT_SIZE_MISMATCH Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QL1Z[0x3];                                   // 0x0001(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		int32_t                                                    MinTimes;                                                // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaxTimes;                                                // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CurrDropTimes;                                           // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.OutcomeIDLimitData
	 * Size -> 0x0020
	 */
	struct FOutcomeIDLimitData
	{
	public:
		TArray<int32_t>                                            LimitIDs;                                                // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MinTimes;                                                // 0x0010(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaxTimes;                                                // 0x0014(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CurrDropTimes;                                           // 0x0018(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BBT5[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.OutcomeData
	 * Size -> 0x01A8
	 */
	struct FOutcomeData
	{
	public:
		int32_t                                                    ID;                                                      // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KFC4[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<int32_t>                                            Contents;                                                // 0x0008(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESpawnStage                                                SpawnStage;                                              // 0x0018(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EOutcomeType                                               OutcomeType;                                             // 0x0019(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ISA4[0x6];                                   // 0x001A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<int32_t, int32_t>                                     OutcomePools;                                            // 0x0020(0x0050) NativeAccessSpecifierPublic
		TMap<int32_t, int32_t>                                     OutcomeDynamicWeights;                                   // 0x0070(0x0050) NativeAccessSpecifierPublic
		TMap<int32_t, int32_t>                                     OutcomeSubWeights;                                       // 0x00C0(0x0050) NativeAccessSpecifierPublic
		int32_t                                                    PoolTotalWeight;                                         // 0x0110(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    PoolOutcomeID;                                           // 0x0114(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaxTimes;                                                // 0x0118(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MinTimes;                                                // 0x011C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SpawnerID;                                               // 0x0120(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    NetSetTimes;                                             // 0x0124(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    DropedTimes;                                             // 0x0128(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_C93Q[0x4];                                   // 0x012C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<int32_t, struct FOutcomeContentData>                  ContentDatas;                                            // 0x0130(0x0050) NativeAccessSpecifierPublic
		bool                                                       IsValid;                                                 // 0x0180(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KV3N[0x3];                                   // 0x0181(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    GlobalDropTimes;                                         // 0x0184(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FOutcomeTypeLimitData>                       LimitTypeDatas;                                          // 0x0188(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FOutcomeIDLimitData>                         LimitIDDatas;                                            // 0x0198(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.OutcomeDataCollection
	 * Size -> 0x0010
	 */
	struct FOutcomeDataCollection
	{
	public:
		TArray<struct FOutcomeData>                                Datas;                                                   // 0x0000(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SimpleDropItemDataCollection
	 * Size -> 0x0050
	 */
	struct FSimpleDropItemDataCollection
	{
	public:
		TMap<int32_t, int32_t>                                     Datas;                                                   // 0x0000(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.FinalDropDataCollection
	 * Size -> 0x0010
	 */
	struct FFinalDropDataCollection
	{
	public:
		TArray<struct FSolarItemData>                              Datas;                                                   // 0x0000(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.LayoutDataElement
	 * Size -> 0x002C
	 */
	struct FLayoutDataElement
	{
	public:
		struct FAnchorData                                         LayoutData;                                              // 0x0000(0x002C) Edit, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.LayoutDataEntry
	 * Size -> 0x0060
	 */
	struct FLayoutDataEntry
	{
	public:
		class FName                                                WidgetName;                                              // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLayoutDataElement                                  MobileLayoutData;                                        // 0x0008(0x002C) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FLayoutDataElement                                  DesktopLayoutData;                                       // 0x0034(0x002C) Edit, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.VehicleLocomotionData
	 * Size -> 0x001C
	 */
	struct FVehicleLocomotionData
	{
	public:
		float                                                      Speed;                                                   // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Acceleration;                                            // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Deceleration;                                            // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Friction;                                                // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RotateFriction;                                          // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RotationSpeed;                                           // 0x0014(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MovementDegree;                                          // 0x0018(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.LeggedVehiclePostPhysicsTickFunction
	 * Size -> 0x0008 (FullSize[0x0030] - InheritedSize[0x0028])
	 */
	struct FLeggedVehiclePostPhysicsTickFunction : public FTickFunction
	{
	public:
		unsigned char                                              UnknownData_OVAH[0x8];                                   // 0x0028(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.VehicleFootIKData
	 * Size -> 0x0064
	 */
	struct FVehicleFootIKData
	{
	public:
		class FName                                                LegBoneName;                                             // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                FootBoneName;                                            // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                FootVirtualBoneName;                                     // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                FootVirtualBoneForGround;                                // 0x0018(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                FootIKBoneName;                                          // 0x0020(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FootHorizontalOffsetAfterBroken;                         // 0x0028(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FootVerticalOffsetAfterBroken;                           // 0x002C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FootUnderWaterOffset;                                    // 0x0030(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RaiseDustEffectScale;                                    // 0x0034(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BrokenFootMultiplier;                                    // 0x0038(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             FootBoneOffset;                                          // 0x003C(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                ParentBone;                                              // 0x0048(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    GroupIndex;                                              // 0x0050(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      StepDistanceMultiplier;                                  // 0x0054(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      StepDistanceMultiplierForVelocity;                       // 0x0058(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinVelocityDegreeForStepDistance;                        // 0x005C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxVelocityDegreeForStepDistance;                        // 0x0060(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.CharacterTransformData
	 * Size -> 0x0024
	 */
	struct FCharacterTransformData
	{
	public:
		struct FVector                                             CharacterOffset;                                         // 0x0000(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                            CharacterRot;                                            // 0x000C(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FVector                                             CharacterScale;                                          // 0x0018(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.PSAttachElem
	 * Size -> 0x0038
	 */
	struct FPSAttachElem
	{
	public:
		struct FSoftObjectPath                                     ParticleSystemPath;                                      // 0x0000(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                SocketName;                                              // 0x0018(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             LocationOffset;                                          // 0x0020(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                            RotationOffset;                                          // 0x002C(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.ItemSpawnerPath
	 * Size -> 0x0010
	 */
	struct FItemSpawnerPath
	{
	public:
		class ASolarItemSpawner* To;                                                      // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MoveCost;                                                // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2YNE[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.ItemSpawnerGraphNode
	 * Size -> 0x0010
	 */
	struct FItemSpawnerGraphNode
	{
	public:
		TArray<struct FItemSpawnerPath>                            Paths;                                                   // 0x0000(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.LootZonePath
	 * Size -> 0x0010
	 */
	struct FLootZonePath
	{
	public:
		class ASolarLootZone* To;                                                      // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MoveCost;                                                // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JEV2[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.SolarPlayerReport
	 * Size -> 0x0498
	 */
	struct FSolarPlayerReport
	{
	public:
		class FString                                              PlayerId;                                                // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		uint64_t                                                   UserId;                                                  // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              NickName;                                                // 0x0018(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CharacterId;                                             // 0x0028(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SkinId;                                                  // 0x002C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    PlayerRank;                                              // 0x0030(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Gender;                                                  // 0x0034(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    AvatarID;                                                // 0x0038(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6EB4[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              AvatarUrl;                                               // 0x0040(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    AccountFlag;                                             // 0x0050(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    TeamRank;                                                // 0x0054(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    TeamID;                                                  // 0x0058(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    PosInTeam;                                               // 0x005C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bHasHangUpBehavior;                                      // 0x0060(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_70HG[0x3];                                   // 0x0061(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    KillNum;                                                 // 0x0064(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    KillNumToRealPlayer;                                     // 0x0068(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Y1C9[0x4];                                   // 0x006C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<int32_t>                                            VehicleKillNum_ID;                                       // 0x0070(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<int32_t>                                            VehicleKillNum_Value;                                    // 0x0080(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    KillTeammate;                                            // 0x0090(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    KillInAirNum;                                            // 0x0094(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    KillDownInAirNum;                                        // 0x0098(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    WeaponSkillKillNum;                                      // 0x009C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    P_KillStreak;                                            // 0x00A0(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BI05[0x4];                                   // 0x00A4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<int32_t>                                            KillStreakHistory;                                       // 0x00A8(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RevengeNum;                                              // 0x00B8(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    DeathNum;                                                // 0x00BC(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    KillDownNum;                                             // 0x00C0(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    KillDownTeammate;                                        // 0x00C4(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AccurateDamage;                                          // 0x00C8(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    AccurateDameageTimes;                                    // 0x00CC(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    AccurateKillTimes;                                       // 0x00D0(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    AccurateKillDownTimes;                                   // 0x00D4(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CauseDamage;                                             // 0x00D8(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CauseDamageToRealPlayer;                                 // 0x00DC(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ReceivedDamage;                                          // 0x00E0(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    AssistNum;                                               // 0x00E4(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CollectEnergy;                                           // 0x00E8(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    BuyESElectricNum;                                        // 0x00EC(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ResurrectionCapsule;                                     // 0x00F0(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    TeamFriendRevive;                                        // 0x00F4(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ReceivedHeal;                                            // 0x00F8(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HealSelf;                                                // 0x00FC(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TeammateHeal;                                            // 0x0100(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    OpenAirBoxNum;                                           // 0x0104(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LifeTime;                                                // 0x0108(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SaveCount;                                               // 0x010C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    FlyCount;                                                // 0x0110(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    VehicleTime;                                             // 0x0114(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CurCharacterLevel;                                       // 0x0118(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    TotalCharacterExp;                                       // 0x011C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCharExpFull;                                            // 0x0120(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZAZ7[0x7];                                   // 0x0121(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<int32_t>                                            CharacterExpReason;                                      // 0x0128(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CharacterExp;                                            // 0x0138(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    AccountExp;                                              // 0x013C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    TotalAccountExp;                                         // 0x0140(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    AccountLevel;                                            // 0x0144(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bHaveRankData;                                           // 0x0148(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YVGS[0x3];                                   // 0x0149(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    RankID;                                                  // 0x014C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RankBeforeScore;                                         // 0x0150(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RankSurviveScore;                                        // 0x0154(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RankBeforeSurviveScore;                                  // 0x0158(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RankDefeatScore;                                         // 0x015C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RankBeforeDefeatScore;                                   // 0x0160(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RankDefeatRatio;                                         // 0x0164(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RankAfterScore;                                          // 0x0168(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RankLegend;                                              // 0x016C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              RankProtectType;                                         // 0x0170(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsRankFight;                                             // 0x0171(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_27PM[0x2];                                   // 0x0172(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    WinninScoreID;                                           // 0x0174(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Zomborg;                                                 // 0x0178(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MvpScore;                                                // 0x017C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      KDA;                                                     // 0x0180(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsAce;                                                   // 0x0184(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsVictory;                                               // 0x0185(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsValid;                                                 // 0x0186(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZMCD[0x1];                                   // 0x0187(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<int32_t>                                            SettlementItems;                                         // 0x0188(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class FString>                                      StringExtraRewards;                                      // 0x0198(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<int32_t>                                            SendGiftGold;                                            // 0x01A8(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<int32_t>                                            SendGiftDiamond;                                         // 0x01B8(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class FString>                                      SendGiftPlayerName;                                      // 0x01C8(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class FString>                                      SendGiftPlayerID;                                        // 0x01D8(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<int32_t>                                            WeaponExpIds;                                            // 0x01E8(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<int32_t>                                            WeaponLevel;                                             // 0x01F8(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<int32_t>                                            CurWeaponExp;                                            // 0x0208(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<int32_t>                                            WeaponExps;                                              // 0x0218(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<int32_t>                                            WeaponKillNum_ID;                                        // 0x0228(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<float>                                              WeaponKillNum_Value;                                     // 0x0238(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<int32_t>                                            WeaponDamage_ID;                                         // 0x0248(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<float>                                              WeaponDamage_Value;                                      // 0x0258(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<int32_t>                                            VehicleDamage_ID;                                        // 0x0268(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<float>                                              VehicleDamage_Value;                                     // 0x0278(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<int32_t>                                            VehicleDistance_ID;                                      // 0x0288(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<int32_t>                                            VehicleDistance_Value;                                   // 0x0298(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    GainCombatScore;                                         // 0x02A8(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    GameModeSubID;                                           // 0x02AC(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              KillerPlayerId;                                          // 0x02B0(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		uint64_t                                                   KillerUserId;                                            // 0x02C0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              KillerNickName;                                          // 0x02C8(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              KillerOS;                                                // 0x02D8(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              OS;                                                      // 0x02E8(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<int32_t>                                            CharacterKillNumIDs;                                     // 0x02F8(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<int32_t>                                            CharacterKillNumValues;                                  // 0x0308(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    WarmType;                                                // 0x0318(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Z9V9[0x4];                                   // 0x031C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<int32_t>                                            AchievementIDs;                                          // 0x0320(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<int32_t>                                            AchievementValues;                                       // 0x0330(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    LikeValue;                                               // 0x0340(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XEHA[0x4];                                   // 0x0344(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<int32_t>                                            StrategyConditionIDs;                                    // 0x0348(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SettlementDisplayStrategyID;                             // 0x0358(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    LastUseVehicleID;                                        // 0x035C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class FString>                                      SavedTeammateIDArr;                                      // 0x0360(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<int32_t>                                            SavedTeammateBonusArr;                                   // 0x0370(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<unsigned char>                                      SettlementRewards;                                       // 0x0380(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<unsigned char>                                      CrateRewardData;                                         // 0x0390(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<unsigned char>                                      CollectionItems;                                         // 0x03A0(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ClanId;                                                  // 0x03B0(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    KnockoutPoints;                                          // 0x03C0(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsKnockoutPointsValid;                                  // 0x03C4(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PTRV[0x3];                                   // 0x03C5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    BattlePassAddExp;                                        // 0x03C8(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    BattlePassExp;                                           // 0x03CC(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    BattlePassID;                                            // 0x03D0(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_COGR[0x4];                                   // 0x03D4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<int32_t>                                            BattlePassTaskWeek;                                      // 0x03D8(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<int32_t>                                            BattlePassTaskID;                                        // 0x03E8(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<int32_t>                                            BattlePassTaskAdd;                                       // 0x03F8(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<int32_t>                                            BattlePassTaskVal;                                       // 0x0408(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<int32_t>                                            UsedCharacterIDs;                                        // 0x0418(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CardPose;                                                // 0x0428(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Cardbackground;                                          // 0x042C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SameClanCnt;                                             // 0x0430(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CombatScore;                                             // 0x0434(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsCheater;                                               // 0x0438(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_M2L5[0x7];                                   // 0x0439(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<unsigned char>                                      SettlePunishTypes;                                       // 0x0440(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MedicineUseCount;                                        // 0x0450(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    DriveHoverCarInWaterDistance;                            // 0x0454(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SwimDistance;                                            // 0x0458(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    DanceCount;                                              // 0x045C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    PosionWalkDistance;                                      // 0x0460(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ShieldExpGainCount;                                      // 0x0464(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    UpgradeShieldCount;                                      // 0x0468(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    UpgradeRedShieldCount;                                   // 0x046C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    JumpBoardUseCount;                                       // 0x0470(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    TerminaterCount;                                         // 0x0474(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CarSkillCount;                                           // 0x0478(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    UltimateSkillUseCount;                                   // 0x047C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    TacticalSkillUseCount;                                   // 0x0480(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HGUG[0x4];                                   // 0x0484(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class FString>                                      ReCombatLimitPlayer;                                     // 0x0488(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.MapData
	 * Size -> 0x003C
	 */
	struct FMapData
	{
	public:
		struct FVector2D                                           MapTopLeftCoord;                                         // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           MapRightBottomCoord;                                     // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           MapImageSize;                                            // 0x0010(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MapImage;                                                // 0x0018(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AirlineZ;                                                // 0x001C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HorizonLineZ;                                            // 0x0020(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TopZ;                                                    // 0x0024(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BottomZ;                                                 // 0x0028(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AverageZ;                                                // 0x002C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      InitFogZ;                                                // 0x0030(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TargetFogZ;                                              // 0x0034(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MapFOV;                                                  // 0x0038(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.VehicleData
	 * Size -> 0x0010
	 */
	struct FVehicleData
	{
	public:
		float                                                      Speed1;                                                  // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Fov1;                                                    // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Speed2;                                                  // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Fov2;                                                    // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.BattlePromptElem
	 * Size -> 0x0028
	 */
	struct FBattlePromptElem
	{
	public:
		unsigned char                                              UnknownData_IKK9[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		EBattlePromptType                                          RealType;                                                // 0x0008(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_74WO[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             CacheLoc;                                                // 0x000C(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Distance;                                                // 0x0018(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      StartTime;                                               // 0x001C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DestroyTime;                                             // 0x0020(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ReplaceTime;                                             // 0x0024(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.BattlePromptData
	 * Size -> 0x0018
	 */
	struct FBattlePromptData
	{
	public:
		unsigned char                                              MaxLength;                                               // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_OG96[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FBattlePromptElem>                           BattlePromptElemArr;                                     // 0x0008(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.MapSelectPointCellConfig
	 * Size -> 0x0014
	 */
	struct FMapSelectPointCellConfig
	{
	public:
		int32_t                                                    X;                                                       // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Y;                                                       // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Width;                                                   // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Height;                                                  // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DistanceOfCell;                                          // 0x0010(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.MapSelectPointCellData
	 * Size -> 0x0050
	 */
	struct FMapSelectPointCellData
	{
	public:
		bool                                                       CellBeSelected;                                          // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EMapCellSelectionAccess                                    SelectionAccess;                                         // 0x0001(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GJD7[0x2];                                   // 0x0002(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    PlayerId;                                                // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XR2F[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              CellAddress;                                             // 0x0010(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              SolarPlayerID;                                           // 0x0020(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_12O6[0x20];                                  // 0x0030(0x0020) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.MobilePlatformSplinePoint
	 * Size -> 0x0008
	 */
	struct FMobilePlatformSplinePoint
	{
	public:
		float                                                      DelayTime;                                               // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Speed;                                                   // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SmartLinkInstance
	 * Size -> 0x0060
	 */
	struct FSmartLinkInstance
	{
	public:
		ENavLinkType                                               LinkType;                                                // 0x0000(0x0001) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_48HN[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		uint32_t                                                   NavLinkUserId;                                           // 0x0004(0x0004) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass* EnabledAreaClass;                                        // 0x0008(0x0008) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass* DisabledAreaClass;                                       // 0x0010(0x0008) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FNavAgentSelector                                   SupportedAgents;                                         // 0x0018(0x0004) Edit, EditConst, NoDestructor, NativeAccessSpecifierPublic
		struct FVector                                             LinkRelativeStart;                                       // 0x001C(0x000C) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             LinkRelativeEnd;                                         // 0x0028(0x000C) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ENavLinkDirection                                          LinkDirection;                                           // 0x0034(0x0001) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9JXU[0x3];                                   // 0x0035(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             VaultPoint;                                              // 0x0038(0x000C) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             VaultDirect;                                             // 0x0044(0x000C) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EVaultType                                                 VaultAnimate;                                            // 0x0050(0x0001) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PHQW[0x3];                                   // 0x0051(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             VaultLandPoint;                                          // 0x0054(0x000C) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.ObjectArray
	 * Size -> 0x0010
	 */
	struct FObjectArray
	{
	public:
		TArray<class UObject*>                                     ObjectArray;                                             // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.OperationUIElement
	 * Size -> 0x0050
	 */
	struct FOperationUIElement
	{
	public:
		class FString                                              PanelName;                                               // 0x0000(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              PanelAliasName;                                          // 0x0010(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CurScale;                                                // 0x0020(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinScale;                                                // 0x0024(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxScale;                                                // 0x0028(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CurOpacity;                                              // 0x002C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinOpacity;                                              // 0x0030(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxOpacity;                                              // 0x0034(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCanHide;                                                // 0x0038(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bVisible;                                                // 0x0039(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bLockAxisX;                                              // 0x003A(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SOQJ[0x1];                                   // 0x003B(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      minOffsetY;                                              // 0x003C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      maxOffsetY;                                              // 0x0040(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCannotChangeScale;                                      // 0x0044(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCannotChangeOpacity;                                    // 0x0045(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bVisibleInVehicle;                                       // 0x0046(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_87E9[0x1];                                   // 0x0047(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector2D                                           Translation;                                             // 0x0048(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.ActorArray
	 * Size -> 0x0010
	 */
	struct FActorArray
	{
	public:
		TArray<class AActor*>                                      ActorArray;                                              // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.ActorArrayMap
	 * Size -> 0x0050
	 */
	struct FActorArrayMap
	{
	public:
		TMap<int32_t, struct FActorArray>                          ActorArrayMap;                                           // 0x0000(0x0050) NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.WeaponMechanicalState
	 * Size -> 0x0050
	 */
	struct FWeaponMechanicalState
	{
	public:
		EWeaponMechanicalUniqueState                               UniqueState;                                             // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_RI9V[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		EWeaponMechanicalSideFlag                                  SideFlags;                                               // 0x0004(0x0001) ELEMENT_SIZE_MISMATCH ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_QA9E[0x3];                                   // 0x0005(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		unsigned char                                              UnknownData_GHZB[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ASolarWeapon* Weapon;                                                  // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class USingleWeaponConfig* Config;                                                  // 0x0018(0x0008) ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_AHWI[0x30];                                  // 0x0020(0x0030) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.ImpactDisplayInfo
	 * Size -> 0x0010
	 */
	struct FImpactDisplayInfo
	{
	public:
		struct FVector                                             Pos;                                                     // 0x0000(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Scale;                                                   // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.FireMode
	 * Size -> 0x0028
	 */
	struct FFireMode
	{
	public:
		unsigned char                                              Index;                                                   // 0x0000(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_D9IY[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      FireRateAccumulation;                                    // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FireRateAccumulationBurstInterval;                       // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SDPZ[0x14];                                  // 0x000C(0x0014) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UParticleSystemComponent* ChargingEffect;                                          // 0x0020(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.WeaponAnimationInfo
	 * Size -> 0x0030
	 */
	struct FWeaponAnimationInfo
	{
	public:
		struct FSoftObjectPath                                     AssetPath;                                               // 0x0000(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PlayRate;                                                // 0x0018(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUseAdaptivePlayRate;                                    // 0x001C(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GK9X[0x3];                                   // 0x001D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimMontage* Animation;                                               // 0x0020(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimMontage* AnimOverride;                                            // 0x0028(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.CameraShakeData
	 * Size -> 0x0020
	 */
	struct FCameraShakeData
	{
	public:
		class UClass* CameraShakeClass;                                        // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCurveFloat* CameraShakeScaleCurve;                                   // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ScaleMultiplier;                                         // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ScopeScaleMultiplier;                                    // 0x0014(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LF33[0x8];                                   // 0x0018(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.OverrideBulletStruct
	 * Size -> 0x0018
	 */
	struct FOverrideBulletStruct
	{
	public:
		class UClass* PrimaryOverrideBulletClass;                              // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass* SecondaryOverrideBulletClass;                            // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass* PrimaryOverrideTraceBulletClass;                         // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.FireUniqueID
	 * Size -> 0x0004
	 */
	struct FFireUniqueID
	{
	public:
		uint32_t                                                   Data;                                                    // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.RadarDelegateHandle
	 * Size -> 0x0008
	 */
	struct FRadarDelegateHandle
	{
	public:
		unsigned char                                              UnknownData_9NBD[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.PerspectiveActorInfo
	 * Size -> 0x0002
	 */
	struct FPerspectiveActorInfo
	{
	public:
		unsigned char                                              UnknownData_TG3T[0x2];                                   // 0x0000(0x0002) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.ScannedInfo
	 * Size -> 0x001C
	 */
	struct FScannedInfo
	{
	public:
		uint32_t                                                   UniqueId;                                                // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EActorRegisterType                                         TargetType;                                              // 0x0004(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IT4C[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		uint32_t                                                   VehicleID;                                               // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             TargetLocation;                                          // 0x000C(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TargetToward;                                            // 0x0018(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.NarrateEventInfoResult
	 * Size -> 0x0028
	 */
	struct FNarrateEventInfoResult
	{
	public:
		float                                                      EventTime;                                               // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Z1KP[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              NarrateText;                                             // 0x0008(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              AudioAssetPath;                                          // 0x0018(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.ReplayFindSpectateTargetParams
	 * Size -> 0x0018
	 */
	struct FReplayFindSpectateTargetParams
	{
	public:
		unsigned char                                              UnknownData_492I[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ASolarPlayerState* SuggestTarget;                                           // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarActorGroupOfReplayCamera
	 * Size -> 0x0018
	 */
	struct FSolarActorGroupOfReplayCamera
	{
	public:
		unsigned char                                              UnknownData_FKCP[0x18];                                  // 0x0000(0x0018) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.HeroClassConfig
	 * Size -> 0x0038
	 */
	struct FHeroClassConfig
	{
	public:
		unsigned char                                              SpecificPassiveSkill[0x28];                              // 0x0000(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		float                                                      HPGridUnit;                                              // 0x0028(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bEnableCombatRegeneration;                               // 0x002C(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9NZE[0x3];                                   // 0x002D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    RegenGrids;                                              // 0x0030(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GDCA[0x4];                                   // 0x0034(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.SavedTagAndValueData
	 * Size -> 0x0050
	 */
	struct FSavedTagAndValueData
	{
	public:
		TMap<class FName, class FString>                           SavedTagsAndValue;                                       // 0x0000(0x0050) Edit, EditConst, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.FilteredData
	 * Size -> 0x0110
	 */
	struct FFilteredData
	{
	public:
		struct FARFilter                                           Filter;                                                  // 0x0000(0x00E8) Edit, NativeAccessSpecifierPublic
		TArray<struct FAssetData>                                  Results;                                                 // 0x00E8(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass* ObjectBaseClassType;                                     // 0x00F8(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FSavedTagAndValueData>                       SavedTagAndValueData;                                    // 0x0100(0x0010) Edit, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.NeverShowCheckWindow
	 * Size -> 0x0018
	 */
	struct FNeverShowCheckWindow
	{
	public:
		int32_t                                                    ConfirmID;                                               // 0x0000(0x0004) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QGB1[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FDateTime                                           Timestamp;                                               // 0x0008(0x0008) Edit, ZeroConstructor, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ENeverShowDuration                                         Duration;                                                // 0x0010(0x0001) ELEMENT_SIZE_MISMATCH Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_S03B[0x3];                                   // 0x0011(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		unsigned char                                              UnknownData_5PJB[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.SolarShieldCreatorEffect
	 * Size -> 0x0060
	 */
	struct FSolarShieldCreatorEffect
	{
	public:
		struct FSoftObjectPath                                     TeammatePath;                                            // 0x0000(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     EnemyPath;                                               // 0x0018(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTransform                                          RelativeTransform;                                       // 0x0030(0x0030) Edit, BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarIntEntry
	 * Size -> 0x0004 (FullSize[0x0010] - InheritedSize[0x000C])
	 */
	struct FSolarIntEntry : public FFastArraySerializerItem
	{
	public:
		int32_t                                                    IntProperty;                                             // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarIntArray
	 * Size -> 0x0028 (FullSize[0x0130] - InheritedSize[0x0108])
	 */
	struct FSolarIntArray : public FFastArraySerializer
	{
	public:
		TArray<struct FSolarIntEntry>                              Elements;                                                // 0x0108(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3XW5[0x18];                                  // 0x0118(0x0018) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.SiegeVehicleOpenTraceData
	 * Size -> 0x0018
	 */
	struct FSiegeVehicleOpenTraceData
	{
	public:
		struct FVector                                             BoxPostion;                                              // 0x0000(0x000C) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             TraceBox;                                                // 0x000C(0x000C) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarProjectileCustomBounceData
	 * Size -> 0x0008
	 */
	struct FSolarProjectileCustomBounceData
	{
	public:
		float                                                      CanBounceAngle;                                          // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaxBounceCount;                                          // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarSubClusterGrenadeData
	 * Size -> 0x0018
	 */
	struct FSolarSubClusterGrenadeData
	{
	public:
		class UClass* SubClusterGrenadeClass;                                  // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DelaySpawnTime;                                          // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SpawnTimer;                                              // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bLaunchSpawnTimer;                                       // 0x0010(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bSpawned;                                                // 0x0011(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XPPM[0x6];                                   // 0x0012(0x0006) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.SolarEMPParticleInfo
	 * Size -> 0x0080
	 */
	struct FSolarEMPParticleInfo
	{
	public:
		struct FSoftObjectPath                                     ParticlePathForTeammate;                                 // 0x0000(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     ParticlePathForEnemy;                                    // 0x0018(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTransform                                          RelativeTransform;                                       // 0x0030(0x0030) Edit, BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       bAttachMode;                                             // 0x0060(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7Q95[0x3];                                   // 0x0061(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                AttachSocketName;                                        // 0x0064(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EAttachLocation                                            AttachLocationType;                                      // 0x006C(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAutoDestroy;                                            // 0x006D(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_78E6[0x2];                                   // 0x006E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      Duration;                                                // 0x0070(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EPSCPoolMethod                                             PoolMode;                                                // 0x0074(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KUEG[0xB];                                   // 0x0075(0x000B) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.SolarEffectData
	 * Size -> 0x0050
	 */
	struct FSolarEffectData
	{
	public:
		struct FSoftObjectPath                                     Path;                                                    // 0x0000(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MZ5G[0x8];                                   // 0x0018(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTransform                                          RelativeTransform;                                       // 0x0020(0x0030) Edit, BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarDamageShapeData
	 * Size -> 0x0090
	 */
	struct FSolarDamageShapeData
	{
	public:
		ESolarDamageShapeType                                      ShapeType;                                               // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UA62[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             ShapeExtent;                                             // 0x0004(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTransform                                          DamageRelativeTransform;                                 // 0x0010(0x0030) Edit, BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FSolarEffectData                                    EffectData;                                              // 0x0040(0x0050) Edit, BlueprintVisible, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.BuffDurationInfo
	 * Size -> 0x0060
	 */
	struct FBuffDurationInfo
	{
	public:
		unsigned char                                              UnknownData_2TN7[0x60];                                  // 0x0000(0x0060) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.SolarSurroundLightningConfig
	 * Size -> 0x0098
	 */
	struct FSolarSurroundLightningConfig
	{
	public:
		struct FVector                                             ParticleDefaultScale;                                    // 0x0000(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_C67H[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRuntimeFloatCurve                                  ParticleScaleByDistanceCurve;                            // 0x0010(0x0088) Edit, BlueprintVisible, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.AnimBlendPointInfo
	 * Size -> 0x0030
	 */
	struct FAnimBlendPointInfo
	{
	public:
		struct FVector2D                                           GridLocation;                                            // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<EAnimBlendDirection>                                AnimBlendArray;                                          // 0x0008(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1ITS[0x18];                                  // 0x0018(0x0018) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.SpectateConditions
	 * Size -> 0x0020
	 */
	struct FSpectateConditions
	{
	public:
		bool                                                       bCanBeSpectate;                                          // 0x0000(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCanBeSpectateByHostilePlayer;                           // 0x0001(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCanBeSpectateByFriendlyPlayer;                          // 0x0002(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCanISpectateBot;                                        // 0x0003(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCanISpectateHostilePlayers;                             // 0x0004(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3DUZ[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      LookAtSelfDeathBoxCountDown;                             // 0x0008(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_S0D9[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<EFindSpectateTargetType>                            FindSpectateTargetPolicy;                                // 0x0010(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.GiftSenderInfo
	 * Size -> 0x0028
	 */
	struct FGiftSenderInfo
	{
	public:
		int32_t                                                    Gold;                                                    // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Diamond;                                                 // 0x0004(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              playerName;                                              // 0x0008(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              PlayerId;                                                // 0x0018(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.InteractiveTaskStatus
	 * Size -> 0x0078
	 */
	struct FInteractiveTaskStatus
	{
	public:
		int32_t                                                    TaskID;                                                  // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CurLevel;                                                // 0x0004(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ProgressValue;                                           // 0x0008(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    TargetValue;                                             // 0x000C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Param;                                                   // 0x0010(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAvailableToNxtLevel;                                    // 0x0014(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DNSN[0x53];                                  // 0x0015(0x0053) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FGiftSenderInfo>                             TaskGiftPlayerInfo;                                      // 0x0068(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.CharacterRoleAbilityInfo
	 * Size -> 0x0018
	 */
	struct FCharacterRoleAbilityInfo
	{
	public:
		bool                                                       bHasAbility;                                             // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3LKW[0x1];                                   // 0x0001(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       bIsCountingDown;                                         // 0x0002(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BZ5Q[0x1];                                   // 0x0003(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      StartCDTime;                                             // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TotalCDTime;                                             // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    State;                                                   // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FX82[0x4];                                   // 0x0010(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       bOngoing;                                                // 0x0014(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GPCH[0x3];                                   // 0x0015(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.RepCountdownData
	 * Size -> 0x002C
	 */
	struct FRepCountdownData
	{
	public:
		int32_t                                                    RepTimes;                                                // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RepTextID;                                               // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RepPassiveTextID;                                        // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RepPassiveCharacterID;                                   // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RepDuration;                                             // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RepRemaining;                                            // 0x0014(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RepAmount;                                               // 0x0018(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RepStartTime;                                            // 0x001C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RepEndTime;                                              // 0x0020(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RepCancel;                                               // 0x0024(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RemainingTime;                                           // 0x0028(0x0004) ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.BattleUpgradeEffectParamData
	 * Size -> 0x0008
	 */
	struct FBattleUpgradeEffectParamData
	{
	public:
		ESolarTablesEnum_BattleUpgradeEffectType                   EffectType;                                              // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UUAW[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    ParameterSum;                                            // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.VehicleSpectateInfo
	 * Size -> 0x0030
	 */
	struct FVehicleSpectateInfo
	{
	public:
		TWeakObjectPtr<class ASolarVehiclePawn>                    SpectateVehicle;                                         // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TWeakObjectPtr<class ASolarVehicleWeapon>                  SpectateVehicleWeapon;                                   // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EVehicleWeaponScopeType                                    VehicleWeaponScopeType;                                  // 0x0010(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TP4V[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TWeakObjectPtr<class ASolarPlayerWeapon>                   SpectatePlayerWeapon;                                    // 0x0014(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ScopeId;                                                 // 0x001C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<int32_t>                                            WeaponIDs;                                               // 0x0020(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarSummonPreview
	 * Size -> 0x0018
	 */
	struct FSolarSummonPreview
	{
	public:
		class UStreamableRenderAsset* Mesh;                                                    // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMaterialInterface* ValidMaterial;                                           // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMaterialInterface* InvalidMaterial;                                         // 0x0010(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarSummonCondition
	 * Size -> 0x0080
	 */
	struct FSolarSummonCondition
	{
	public:
		TArray<EObjectTypeQuery>                                   SurfaceCheckTypes;                                       // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<EPhysicalSurface>                                   ForbiddenSurfaces;                                       // 0x0010(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class UClass*>                                      ForbiddenSurfaceClasses;                                 // 0x0020(0x0010) Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUseChannelTest;                                         // 0x0030(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ECollisionChannel                                          TestCollisionChannel;                                    // 0x0031(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8P9U[0x6];                                   // 0x0032(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<EObjectTypeQuery>                                   CollisionCheckTypes;                                     // 0x0038(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class UClass*>                                      CollisionCheckIgnoreClasses;                             // 0x0048(0x0010) Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxPlaceableAngle;                                       // 0x0058(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDisplayOverThanPlaceableAngle;                          // 0x005C(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CUO9[0x3];                                   // 0x005D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             CheckSize;                                               // 0x0060(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CollisionToGroundDistance;                               // 0x006C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bEnableSummonInRoom;                                     // 0x0070(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ATKG[0x3];                                   // 0x0071(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      RoomCheckHalfHeight;                                     // 0x0074(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bKeepPreviewUpright;                                     // 0x0078(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIgnorePlacementCollision;                               // 0x0079(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NS4E[0x6];                                   // 0x007A(0x0006) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.SolarSummonTimer
	 * Size -> 0x0008
	 */
	struct FSolarSummonTimer
	{
	public:
		bool                                                       bEnable;                                                 // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CN6T[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      Timer;                                                   // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.InvisibleZoneParticleInfo
	 * Size -> 0x0070
	 */
	struct FInvisibleZoneParticleInfo
	{
	public:
		struct FSoftObjectPath                                     ParticlePathForTeammate;                                 // 0x0000(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     ParticlePathForEnemy;                                    // 0x0018(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTransform                                          RelativeTransform;                                       // 0x0030(0x0030) Edit, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       bAttach;                                                 // 0x0060(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MJUS[0xF];                                   // 0x0061(0x000F) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.TowerParticleInfo
	 * Size -> 0x0050
	 */
	struct FTowerParticleInfo
	{
	public:
		struct FSoftObjectPath                                     ParticlePath;                                            // 0x0000(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JHLB[0x8];                                   // 0x0018(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTransform                                          RelativeTransform;                                       // 0x0020(0x0030) Edit, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.TowerPadEffect
	 * Size -> 0x0050
	 */
	struct FTowerPadEffect
	{
	public:
		class UParticleSystem* Particle;                                                // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_58OB[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTransform                                          Transform;                                               // 0x0010(0x0030) Edit, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		class UParticleSystemComponent* Handle;                                                  // 0x0040(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SKCD[0x8];                                   // 0x0048(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.SolarTablesDataBase
	 * Size -> 0x0010
	 */
	struct FSolarTablesDataBase
	{
	public:
		unsigned char                                              UnknownData_LNDL[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.SolarTablesData_AccountFixedExp
	 * Size -> 0x0008 (FullSize[0x0018] - InheritedSize[0x0010])
	 */
	struct FSolarTablesData_AccountFixedExp : public FSolarTablesDataBase
	{
	public:
		int32_t                                                    ID;                                                      // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Exp;                                                     // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarTables_AccountFixedExp
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FSolarTables_AccountFixedExp : public FSolarTablesDataBase
	{
	public:
		TMap<int32_t, struct FSolarTablesData_AccountFixedExp>     Data;                                                    // 0x0010(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct Solarland.SolarTablesData_AccountFlag
	 * Size -> 0x0028 (FullSize[0x0038] - InheritedSize[0x0010])
	 */
	struct FSolarTablesData_AccountFlag : public FSolarTablesDataBase
	{
	public:
		int32_t                                                    ID;                                                      // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    FlagType;                                                // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              FlagIcon;                                                // 0x0018(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              StateName;                                               // 0x0028(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarTables_AccountFlag
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FSolarTables_AccountFlag : public FSolarTablesDataBase
	{
	public:
		TMap<int32_t, struct FSolarTablesData_AccountFlag>         Data;                                                    // 0x0010(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct Solarland.SolarTablesData_Airline
	 * Size -> 0x0058 (FullSize[0x0068] - InheritedSize[0x0010])
	 */
	struct FSolarTablesData_Airline : public FSolarTablesDataBase
	{
	public:
		int32_t                                                    ID;                                                      // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_EYD5[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<float>                                              AirlineCoordinateA;                                      // 0x0018(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<float>                                              RealPointA;                                              // 0x0028(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<float>                                              AirlineCoordinateB;                                      // 0x0038(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<float>                                              RealPointB;                                              // 0x0048(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    UseGameMode;                                             // 0x0058(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MapId;                                                   // 0x005C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AirlineAltitude;                                         // 0x0060(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CapsuleSpeed;                                            // 0x0064(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarTables_Airline
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FSolarTables_Airline : public FSolarTablesDataBase
	{
	public:
		TMap<int32_t, struct FSolarTablesData_Airline>             Data;                                                    // 0x0010(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct Solarland.SolarTablesData_Armory
	 * Size -> 0x0078 (FullSize[0x0088] - InheritedSize[0x0010])
	 */
	struct FSolarTablesData_Armory : public FSolarTablesDataBase
	{
	public:
		int32_t                                                    ID;                                                      // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    WeaponType;                                              // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    WeaponDescription;                                       // 0x0018(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SkillName;                                               // 0x001C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SkillDescription;                                        // 0x0020(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DBYQ[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              UrlName;                                                 // 0x0028(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              WeaponMovie;                                             // 0x0038(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              WeaponConfig;                                            // 0x0048(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    WeaponUnlockLevel;                                       // 0x0058(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    WeaponDamage;                                            // 0x005C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    WeaponRateOfFire;                                        // 0x0060(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    WeaponRecoil;                                            // 0x0064(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    WeaponSpread;                                            // 0x0068(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    WeaponRange;                                             // 0x006C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    WeaponMobility;                                          // 0x0070(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GI0G[0x4];                                   // 0x0074(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              SilhouetteIcon;                                          // 0x0078(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarTables_Armory
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FSolarTables_Armory : public FSolarTablesDataBase
	{
	public:
		TMap<int32_t, struct FSolarTablesData_Armory>              Data;                                                    // 0x0010(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct Solarland.SolarTablesData_BattleUpgradeContent
	 * Size -> 0x0030 (FullSize[0x0040] - InheritedSize[0x0010])
	 */
	struct FSolarTablesData_BattleUpgradeContent : public FSolarTablesDataBase
	{
	public:
		int32_t                                                    ID;                                                      // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HA74[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<int32_t>                                            ModelID;                                                 // 0x0018(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Grade;                                                   // 0x0028(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_P8SX[0x4];                                   // 0x002C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<int32_t>                                            UpgradeContent;                                          // 0x0030(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarTables_BattleUpgradeContent
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FSolarTables_BattleUpgradeContent : public FSolarTablesDataBase
	{
	public:
		TMap<int32_t, struct FSolarTablesData_BattleUpgradeContent> Data;                                                    // 0x0010(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct Solarland.SolarTablesData_BattleUpgradeEffect
	 * Size -> 0x0010 (FullSize[0x0020] - InheritedSize[0x0010])
	 */
	struct FSolarTablesData_BattleUpgradeEffect : public FSolarTablesDataBase
	{
	public:
		int32_t                                                    ID;                                                      // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESolarTablesEnum_BattleUpgradeEffectType                   Effect;                                                  // 0x0014(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YTXE[0x3];                                   // 0x0015(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    EffectValue;                                             // 0x0018(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    StackingTimes;                                           // 0x001C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarTables_BattleUpgradeEffect
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FSolarTables_BattleUpgradeEffect : public FSolarTablesDataBase
	{
	public:
		TMap<int32_t, struct FSolarTablesData_BattleUpgradeEffect> Data;                                                    // 0x0010(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct Solarland.SolarTablesData_BattleUpgradeEffectPool
	 * Size -> 0x0018 (FullSize[0x0028] - InheritedSize[0x0010])
	 */
	struct FSolarTablesData_BattleUpgradeEffectPool : public FSolarTablesDataBase
	{
	public:
		int32_t                                                    ID;                                                      // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_M3PT[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<int32_t>                                            Pool;                                                    // 0x0018(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarTables_BattleUpgradeEffectPool
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FSolarTables_BattleUpgradeEffectPool : public FSolarTablesDataBase
	{
	public:
		TMap<int32_t, struct FSolarTablesData_BattleUpgradeEffectPool> Data;                                                    // 0x0010(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct Solarland.SolarTablesData_BattleEndRankSettlement
	 * Size -> 0x0020 (FullSize[0x0030] - InheritedSize[0x0010])
	 */
	struct FSolarTablesData_BattleEndRankSettlement : public FSolarTablesDataBase
	{
	public:
		int32_t                                                    ID;                                                      // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RuleID;                                                  // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RealPerson;                                              // 0x0018(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_EESX[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<int32_t>                                            ItemDrop;                                                // 0x0020(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarTables_BattleEndRankSettlement
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FSolarTables_BattleEndRankSettlement : public FSolarTablesDataBase
	{
	public:
		TMap<int32_t, struct FSolarTablesData_BattleEndRankSettlement> Data;                                                    // 0x0010(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct Solarland.SolarTablesData_BpAward
	 * Size -> 0x0040 (FullSize[0x0050] - InheritedSize[0x0010])
	 */
	struct FSolarTablesData_BpAward : public FSolarTablesDataBase
	{
	public:
		int32_t                                                    ID;                                                      // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    BpID;                                                    // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Level;                                                   // 0x0018(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Exp;                                                     // 0x001C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    UpdateValue;                                             // 0x0020(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Z0SR[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<int32_t>                                            FreeAward;                                               // 0x0028(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<int32_t>                                            PayAward;                                                // 0x0038(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       UnlockExtraTask;                                         // 0x0048(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       BuyLevel;                                                // 0x0049(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       LoopReward;                                              // 0x004A(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_85BX[0x5];                                   // 0x004B(0x0005) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.SolarTables_BpAward
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FSolarTables_BpAward : public FSolarTablesDataBase
	{
	public:
		TMap<int32_t, struct FSolarTablesData_BpAward>             Data;                                                    // 0x0010(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct Solarland.SolarTablesLocalText
	 * Size -> 0x0004
	 */
	struct FSolarTablesLocalText
	{
	public:
		int32_t                                                    ID;                                                      // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarTablesData_Behavior
	 * Size -> 0x0028 (FullSize[0x0038] - InheritedSize[0x0010])
	 */
	struct FSolarTablesData_Behavior : public FSolarTablesDataBase
	{
	public:
		int32_t                                                    ID;                                                      // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESolarTablesEnum_BehaviorType                              BehaviorType;                                            // 0x0014(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZN72[0x3];                                   // 0x0015(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    CharacterGetExp;                                         // 0x0018(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    WeaponGetExp;                                            // 0x001C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    WeaponExp_2;                                             // 0x0020(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    WeaponExp_3;                                             // 0x0024(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    WeaponExp_5;                                             // 0x0028(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSolarTablesLocalText                               CharaGetExpText;                                         // 0x002C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic
		int32_t                                                    WeaponGetExpText;                                        // 0x0030(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_899V[0x4];                                   // 0x0034(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.SolarTables_Behavior
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FSolarTables_Behavior : public FSolarTablesDataBase
	{
	public:
		TMap<int32_t, struct FSolarTablesData_Behavior>            Data;                                                    // 0x0010(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct Solarland.SolarTablesData_EscapeExp
	 * Size -> 0x0028 (FullSize[0x0038] - InheritedSize[0x0010])
	 */
	struct FSolarTablesData_EscapeExp : public FSolarTablesDataBase
	{
	public:
		int32_t                                                    ID;                                                      // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESolarTablesEnum_BehaviorType                              BehaviorType;                                            // 0x0014(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_34OJ[0x3];                                   // 0x0015(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    CharacterGetExp;                                         // 0x0018(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    WeaponGetExp;                                            // 0x001C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    WeaponExp_2;                                             // 0x0020(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    WeaponExp_3;                                             // 0x0024(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    WeaponExp_5;                                             // 0x0028(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSolarTablesLocalText                               CharaGetExpText;                                         // 0x002C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic
		int32_t                                                    WeaponGetExpText;                                        // 0x0030(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ExpID;                                                   // 0x0034(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarTables_EscapeExp
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FSolarTables_EscapeExp : public FSolarTablesDataBase
	{
	public:
		TMap<int32_t, struct FSolarTablesData_EscapeExp>           Data;                                                    // 0x0010(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct Solarland.SolarTablesData_CaseToggleAlphabet
	 * Size -> 0x0088 (FullSize[0x0098] - InheritedSize[0x0010])
	 */
	struct FSolarTablesData_CaseToggleAlphabet : public FSolarTablesDataBase
	{
	public:
		int32_t                                                    ID;                                                      // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsLower;                                                 // 0x0014(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_C2X3[0x3];                                   // 0x0015(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              de;                                                      // 0x0018(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              fr;                                                      // 0x0028(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              es;                                                      // 0x0038(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              pt;                                                      // 0x0048(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              it;                                                      // 0x0058(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              pl;                                                      // 0x0068(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              tr;                                                      // 0x0078(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ru;                                                      // 0x0088(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarTables_CaseToggleAlphabet
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FSolarTables_CaseToggleAlphabet : public FSolarTablesDataBase
	{
	public:
		TMap<int32_t, struct FSolarTablesData_CaseToggleAlphabet>  Data;                                                    // 0x0010(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct Solarland.SolarTablesData_UnitCharacter
	 * Size -> 0x0168 (FullSize[0x0178] - InheritedSize[0x0010])
	 */
	struct FSolarTablesData_UnitCharacter : public FSolarTablesDataBase
	{
	public:
		int32_t                                                    ID;                                                      // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSolarTablesLocalText                               Name;                                                    // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic
		struct FSolarTablesLocalText                               name_extra;                                              // 0x0018(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic
		struct FSolarTablesLocalText                               Info;                                                    // 0x001C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic
		int32_t                                                    Gender;                                                  // 0x0020(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Body;                                                    // 0x0024(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESolarTablesEnum_CharacterType                             CharacterType;                                           // 0x0028(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KYV1[0x7];                                   // 0x0029(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              ClassTypeIcon;                                           // 0x0030(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSolarTablesLocalText                               ClassTypeInfo;                                           // 0x0040(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       defaultChara;                                            // 0x0044(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_G7CU[0x3];                                   // 0x0045(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    defaultSkin;                                             // 0x0048(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    defaultPose;                                             // 0x004C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    defaultBackground;                                       // 0x0050(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       usableChara;                                             // 0x0054(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FEWI[0x3];                                   // 0x0055(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              CharacterProtrait;                                       // 0x0058(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              UrlName;                                                 // 0x0068(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TMap<class FString, class FString>                         CharacterAttributesID;                                   // 0x0078(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		float                                                      MaxNormalHP;                                             // 0x00C8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    defaultArmor;                                            // 0x00CC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    defaultShield;                                           // 0x00D0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    defaultJetPackModule;                                    // 0x00D4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              BasicItemMax;                                            // 0x00D8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      InitialSolarCharge;                                      // 0x00E8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RechargeFrequencyFromSky;                                // 0x00EC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RechargeFrequencyFromDeathBox;                           // 0x00F0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RechargeFrequencyFromPile;                               // 0x00F4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RechargeQuantityFromSky;                                 // 0x00F8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RechargeQuantityFromDeathBox;                            // 0x00FC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RechargeQuantityFromPile;                                // 0x0100(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      InitialEnergyLimit;                                      // 0x0104(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      InitialExtraEnergyLimit;                                 // 0x0108(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      InitialExtraEnergyCharge;                                // 0x010C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      InitialChargeCD;                                         // 0x0110(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ExpID;                                                   // 0x0114(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ExpBonus;                                                // 0x0118(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CharaGiftID;                                             // 0x011C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              CharacterIngameBP;                                       // 0x0120(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              AnimBPResPath;                                           // 0x0130(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    StandJogSpeed;                                           // 0x0140(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    StandRunSpeed;                                           // 0x0144(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    StandSprintSpeed;                                        // 0x0148(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CrouchJogSpeed;                                          // 0x014C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CrouchRunSpeed;                                          // 0x0150(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CrouchSprintSpeed;                                       // 0x0154(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ItemID;                                                  // 0x0158(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BackpackScale;                                           // 0x015C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CharacterSize;                                           // 0x0160(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    BotConfigID;                                             // 0x0164(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CharacterSort;                                           // 0x0168(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CharacterTag1;                                           // 0x016C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CharacterTag2;                                           // 0x0170(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8XGV[0x4];                                   // 0x0174(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.SolarTables_UnitCharacter
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FSolarTables_UnitCharacter : public FSolarTablesDataBase
	{
	public:
		TMap<int32_t, struct FSolarTablesData_UnitCharacter>       Data;                                                    // 0x0010(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct Solarland.SolarTablesData_CharacterAbility
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FSolarTablesData_CharacterAbility : public FSolarTablesDataBase
	{
	public:
		int32_t                                                    ID;                                                      // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CharacterId;                                             // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              DataAssetsPath;                                          // 0x0018(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSolarTablesLocalText                               Name;                                                    // 0x0028(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic
		struct FSolarTablesLocalText                               Info;                                                    // 0x002C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic
		int32_t                                                    DataID;                                                  // 0x0030(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KPBI[0x4];                                   // 0x0034(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              AbilityBP;                                               // 0x0038(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Icon;                                                    // 0x0048(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Data;                                                    // 0x0058(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IfActive;                                                // 0x005C(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QVH4[0x3];                                   // 0x005D(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.SolarTables_CharacterAbility
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FSolarTables_CharacterAbility : public FSolarTablesDataBase
	{
	public:
		TMap<int32_t, struct FSolarTablesData_CharacterAbility>    Data;                                                    // 0x0010(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct Solarland.SolarTablesData_CharacterPassiveAbility
	 * Size -> 0x0018 (FullSize[0x0028] - InheritedSize[0x0010])
	 */
	struct FSolarTablesData_CharacterPassiveAbility : public FSolarTablesDataBase
	{
	public:
		int32_t                                                    ID;                                                      // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_V2DB[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              DataAssetsPath;                                          // 0x0018(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarTables_CharacterPassiveAbility
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FSolarTables_CharacterPassiveAbility : public FSolarTablesDataBase
	{
	public:
		TMap<int32_t, struct FSolarTablesData_CharacterPassiveAbility> Data;                                                    // 0x0010(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct Solarland.SolarTablesData_GetPoint
	 * Size -> 0x0010 (FullSize[0x0020] - InheritedSize[0x0010])
	 */
	struct FSolarTablesData_GetPoint : public FSolarTablesDataBase
	{
	public:
		int32_t                                                    ID;                                                      // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Point;                                                   // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    TaskValue;                                               // 0x0018(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSolarTablesLocalText                               TaskText;                                                // 0x001C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarTables_GetPoint
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FSolarTables_GetPoint : public FSolarTablesDataBase
	{
	public:
		TMap<int32_t, struct FSolarTablesData_GetPoint>            Data;                                                    // 0x0010(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct Solarland.SolarTablesData_ChestSpawn
	 * Size -> 0x0030 (FullSize[0x0040] - InheritedSize[0x0010])
	 */
	struct FSolarTablesData_ChestSpawn : public FSolarTablesDataBase
	{
	public:
		int32_t                                                    ID;                                                      // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESolarTablesEnum_ChestType                                 ChestType;                                               // 0x0014(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8IJY[0x3];                                   // 0x0015(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<int32_t>                                            Chests;                                                  // 0x0018(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<int32_t>                                            Weight;                                                  // 0x0028(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SpawnCount;                                              // 0x0038(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CG1B[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.SolarTables_ChestSpawn
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FSolarTables_ChestSpawn : public FSolarTablesDataBase
	{
	public:
		TMap<int32_t, struct FSolarTablesData_ChestSpawn>          Data;                                                    // 0x0010(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct Solarland.SolarTablesData_ChestSpawnGroup
	 * Size -> 0x0018 (FullSize[0x0028] - InheritedSize[0x0010])
	 */
	struct FSolarTablesData_ChestSpawnGroup : public FSolarTablesDataBase
	{
	public:
		int32_t                                                    ID;                                                      // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CUC1[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<int32_t>                                            ChestGroup;                                              // 0x0018(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarTables_ChestSpawnGroup
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FSolarTables_ChestSpawnGroup : public FSolarTablesDataBase
	{
	public:
		TMap<int32_t, struct FSolarTablesData_ChestSpawnGroup>     Data;                                                    // 0x0010(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct Solarland.SolarTablesData_ClanFlag
	 * Size -> 0x0028 (FullSize[0x0038] - InheritedSize[0x0010])
	 */
	struct FSolarTablesData_ClanFlag : public FSolarTablesDataBase
	{
	public:
		int32_t                                                    ID;                                                      // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_B1KR[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              FlagIcon;                                                // 0x0018(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              WebIcon;                                                 // 0x0028(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarTables_ClanFlag
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FSolarTables_ClanFlag : public FSolarTablesDataBase
	{
	public:
		TMap<int32_t, struct FSolarTablesData_ClanFlag>            Data;                                                    // 0x0010(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct Solarland.SolarTablesData_DayAndNight
	 * Size -> 0x0010 (FullSize[0x0020] - InheritedSize[0x0010])
	 */
	struct FSolarTablesData_DayAndNight : public FSolarTablesDataBase
	{
	public:
		int32_t                                                    ID;                                                      // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    TimeOfDays;                                              // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ChangingSpeed;                                           // 0x0018(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ChargingRate;                                            // 0x001C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarTables_DayAndNight
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FSolarTables_DayAndNight : public FSolarTablesDataBase
	{
	public:
		TMap<int32_t, struct FSolarTablesData_DayAndNight>         Data;                                                    // 0x0010(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct Solarland.SolarTablesData_DsVariableRange
	 * Size -> 0x0030 (FullSize[0x0040] - InheritedSize[0x0010])
	 */
	struct FSolarTablesData_DsVariableRange : public FSolarTablesDataBase
	{
	public:
		int32_t                                                    ID;                                                      // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_EI3J[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              VariableName;                                            // 0x0018(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ValueStart;                                              // 0x0028(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ValueEnd;                                                // 0x002C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ValueType;                                               // 0x0030(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Tolerance;                                               // 0x0034(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ProbeInterval;                                           // 0x0038(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_A8K7[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.SolarTables_DsVariableRange
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FSolarTables_DsVariableRange : public FSolarTablesDataBase
	{
	public:
		TMap<int32_t, struct FSolarTablesData_DsVariableRange>     Data;                                                    // 0x0010(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct Solarland.SolarTablesData_EShop
	 * Size -> 0x0030 (FullSize[0x0040] - InheritedSize[0x0010])
	 */
	struct FSolarTablesData_EShop : public FSolarTablesDataBase
	{
	public:
		int32_t                                                    ID;                                                      // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_J7TA[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<int32_t>                                            PoolGroupID;                                             // 0x0018(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IfMapShow;                                               // 0x0028(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OKQ7[0x7];                                   // 0x0029(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<int32_t>                                            PoolRefreshTime;                                         // 0x0030(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarTables_EShop
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FSolarTables_EShop : public FSolarTablesDataBase
	{
	public:
		TMap<int32_t, struct FSolarTablesData_EShop>               Data;                                                    // 0x0010(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct Solarland.SolarTablesData_EShopDemoModel
	 * Size -> 0x0008 (FullSize[0x0018] - InheritedSize[0x0010])
	 */
	struct FSolarTablesData_EShopDemoModel : public FSolarTablesDataBase
	{
	public:
		int32_t                                                    ID;                                                      // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ModelID;                                                 // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarTables_EShopDemoModel
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FSolarTables_EShopDemoModel : public FSolarTablesDataBase
	{
	public:
		TMap<int32_t, struct FSolarTablesData_EShopDemoModel>      Data;                                                    // 0x0010(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct Solarland.SolarTablesData_EShopGoodsPool
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FSolarTablesData_EShopGoodsPool : public FSolarTablesDataBase
	{
	public:
		int32_t                                                    ID;                                                      // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MYM6[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<int32_t>                                            Equipments;                                              // 0x0018(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<int32_t>                                            Prize;                                                   // 0x0028(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<int32_t>                                            Nums;                                                    // 0x0038(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<int32_t>                                            Weight;                                                  // 0x0048(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    NumbersToDisplay;                                        // 0x0058(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ColdDown;                                                // 0x005C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarTables_EShopGoodsPool
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FSolarTables_EShopGoodsPool : public FSolarTablesDataBase
	{
	public:
		TMap<int32_t, struct FSolarTablesData_EShopGoodsPool>      Data;                                                    // 0x0010(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct Solarland.SolarTablesData_EShopGoodsPoolGroup
	 * Size -> 0x0018 (FullSize[0x0028] - InheritedSize[0x0010])
	 */
	struct FSolarTablesData_EShopGoodsPoolGroup : public FSolarTablesDataBase
	{
	public:
		int32_t                                                    ID;                                                      // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9HTC[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<int32_t>                                            PoolIDs;                                                 // 0x0018(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarTables_EShopGoodsPoolGroup
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FSolarTables_EShopGoodsPoolGroup : public FSolarTablesDataBase
	{
	public:
		TMap<int32_t, struct FSolarTablesData_EShopGoodsPoolGroup> Data;                                                    // 0x0010(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct Solarland.SolarTablesData_EShopSpawn
	 * Size -> 0x0028 (FullSize[0x0038] - InheritedSize[0x0010])
	 */
	struct FSolarTablesData_EShopSpawn : public FSolarTablesDataBase
	{
	public:
		int32_t                                                    ID;                                                      // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4TR6[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<int32_t>                                            Eshops;                                                  // 0x0018(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<int32_t>                                            Weight;                                                  // 0x0028(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarTables_EShopSpawn
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FSolarTables_EShopSpawn : public FSolarTablesDataBase
	{
	public:
		TMap<int32_t, struct FSolarTablesData_EShopSpawn>          Data;                                                    // 0x0010(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct Solarland.SolarTablesData_BattleRoyaleMode
	 * Size -> 0x0040 (FullSize[0x0050] - InheritedSize[0x0010])
	 */
	struct FSolarTablesData_BattleRoyaleMode : public FSolarTablesDataBase
	{
	public:
		int32_t                                                    ID;                                                      // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OKG6[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<int32_t>                                            GlobalOutcomes;                                          // 0x0018(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    BattleMap;                                               // 0x0028(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ReadyMap;                                                // 0x002C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ReadyStateTime;                                          // 0x0030(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    StartTime;                                               // 0x0034(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      EenTime;                                                 // 0x0038(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CharacterEXPCoefficient;                                 // 0x003C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class FString>                                      EventSets;                                               // 0x0040(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarTables_BattleRoyaleMode
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FSolarTables_BattleRoyaleMode : public FSolarTablesDataBase
	{
	public:
		TMap<int32_t, struct FSolarTablesData_BattleRoyaleMode>    Data;                                                    // 0x0010(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct Solarland.SolarTablesData_GameModeGroup
	 * Size -> 0x0078 (FullSize[0x0088] - InheritedSize[0x0010])
	 */
	struct FSolarTablesData_GameModeGroup : public FSolarTablesDataBase
	{
	public:
		int32_t                                                    ID;                                                      // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSolarTablesLocalText                               ModeGroupName;                                           // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic
		int32_t                                                    SortId;                                                  // 0x0018(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_G5NA[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<int32_t>                                            ModeID;                                                  // 0x0020(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              GroupBg;                                                 // 0x0030(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Icon_s;                                                  // 0x0040(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Icon_mini;                                               // 0x0050(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Icon_recruit;                                            // 0x0060(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    DefaultSelect;                                           // 0x0070(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IfMultiple;                                              // 0x0074(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UPCV[0x3];                                   // 0x0075(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              GuideVideoUrl;                                           // 0x0078(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarTables_GameModeGroup
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FSolarTables_GameModeGroup : public FSolarTablesDataBase
	{
	public:
		TMap<int32_t, struct FSolarTablesData_GameModeGroup>       Data;                                                    // 0x0010(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct Solarland.SolarTablesData_GameModeMain
	 * Size -> 0x0160 (FullSize[0x0170] - InheritedSize[0x0010])
	 */
	struct FSolarTablesData_GameModeMain : public FSolarTablesDataBase
	{
	public:
		int32_t                                                    ID;                                                      // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    groupid;                                                 // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       Enabled;                                                 // 0x0018(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XILV[0x3];                                   // 0x0019(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    DefaultSelect;                                           // 0x001C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSolarTablesLocalText                               Name;                                                    // 0x0020(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic
		struct FSolarTablesLocalText                               Desc;                                                    // 0x0024(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic
		struct FSolarTablesLocalText                               DetailDes;                                               // 0x0028(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1GYE[0x4];                                   // 0x002C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              Icon;                                                    // 0x0030(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Icon_s;                                                  // 0x0040(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Icon_recruit;                                            // 0x0050(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Icon_recruit_issue;                                      // 0x0060(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Icon_mini;                                               // 0x0070(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IfRecruitShow;                                           // 0x0080(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6XTP[0x3];                                   // 0x0081(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    ModeType;                                                // 0x0084(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    OutcomeSet;                                              // 0x0088(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    LifeTime;                                                // 0x008C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<int32_t>                                            AccessClient;                                            // 0x0090(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<int32_t>                                            AccessServer;                                            // 0x00A0(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<int32_t>                                            AccessAccount;                                           // 0x00B0(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<int32_t>                                            AccessActivity;                                          // 0x00C0(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    UnlockLvl;                                               // 0x00D0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DAEO[0x4];                                   // 0x00D4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<int32_t>                                            MatchRule;                                               // 0x00D8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    DefaultMatchRule;                                        // 0x00E8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Backpack;                                                // 0x00EC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              UIConfig;                                                // 0x00F0(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ModeConfig;                                              // 0x0100(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Parameters;                                              // 0x0110(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       AIMatch;                                                 // 0x0120(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AUZ0[0x7];                                   // 0x0121(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              SettlementBPPath;                                        // 0x0128(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       ReEnterBattle;                                           // 0x0138(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsAutoFillTeammate;                                      // 0x0139(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KOMX[0x6];                                   // 0x013A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<int32_t>                                            CustomRoomNum;                                           // 0x0140(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       GetSupplyBox;                                            // 0x0150(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2FH9[0x3];                                   // 0x0151(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    ChunkID;                                                 // 0x0154(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<int32_t>                                            ChunkIdList;                                             // 0x0158(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESolarTablesEnum_ClassModeType                             ClassModeType;                                           // 0x0168(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       WarmUp;                                                  // 0x0169(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       EnableCustomRoomReplay;                                  // 0x016A(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NG50[0x5];                                   // 0x016B(0x0005) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.SolarTables_GameModeMain
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FSolarTables_GameModeMain : public FSolarTablesDataBase
	{
	public:
		TMap<int32_t, struct FSolarTablesData_GameModeMain>        Data;                                                    // 0x0010(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct Solarland.SolarTablesData_OutcomeSet
	 * Size -> 0x0028 (FullSize[0x0038] - InheritedSize[0x0010])
	 */
	struct FSolarTablesData_OutcomeSet : public FSolarTablesDataBase
	{
	public:
		int32_t                                                    ID;                                                      // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_T8LD[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<int32_t>                                            OutcomeRef;                                              // 0x0018(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<int32_t>                                            GlobalOutcome;                                           // 0x0028(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarTables_OutcomeSet
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FSolarTables_OutcomeSet : public FSolarTablesDataBase
	{
	public:
		TMap<int32_t, struct FSolarTablesData_OutcomeSet>          Data;                                                    // 0x0010(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct Solarland.SolarTablesData_GameTimeLine
	 * Size -> 0x0040 (FullSize[0x0050] - InheritedSize[0x0010])
	 */
	struct FSolarTablesData_GameTimeLine : public FSolarTablesDataBase
	{
	public:
		int32_t                                                    ID;                                                      // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DZ8N[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<int32_t>                                            CheckEvent;                                              // 0x0018(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    GameMode;                                                // 0x0028(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    StartTime;                                               // 0x002C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    DaylightChange;                                          // 0x0030(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    AirDrops;                                                // 0x0034(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IfPoisonShrink;                                          // 0x0038(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CWS9[0x7];                                   // 0x0039(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<int32_t>                                            RedZone;                                                 // 0x0040(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarTables_GameTimeLine
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FSolarTables_GameTimeLine : public FSolarTablesDataBase
	{
	public:
		TMap<int32_t, struct FSolarTablesData_GameTimeLine>        Data;                                                    // 0x0010(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct Solarland.SolarTablesData_GlobalOutcome
	 * Size -> 0x0048 (FullSize[0x0058] - InheritedSize[0x0010])
	 */
	struct FSolarTablesData_GlobalOutcome : public FSolarTablesDataBase
	{
	public:
		int32_t                                                    ID;                                                      // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MK0N[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<int32_t>                                            ItemIDs;                                                 // 0x0018(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<int32_t>                                            ItemNums;                                                // 0x0028(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SingleMaxTimes;                                          // 0x0038(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    TotalMaxTimes;                                           // 0x003C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    TotalMinTimes;                                           // 0x0040(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_C2E6[0x4];                                   // 0x0044(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<int32_t>                                            AffectedOutcomes;                                        // 0x0048(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarTables_GlobalOutcome
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FSolarTables_GlobalOutcome : public FSolarTablesDataBase
	{
	public:
		TMap<int32_t, struct FSolarTablesData_GlobalOutcome>       Data;                                                    // 0x0010(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct Solarland.SolarTablesData_GlobalSensitivity
	 * Size -> 0x0090 (FullSize[0x00A0] - InheritedSize[0x0010])
	 */
	struct FSolarTablesData_GlobalSensitivity : public FSolarTablesDataBase
	{
	public:
		int32_t                                                    ID;                                                      // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_L9WR[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<float>                                              HoldWeaponSensitivity;                                   // 0x0018(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<float>                                              FireWeaponSensitivity;                                   // 0x0028(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ShoulderShootSenSItivity;                                // 0x0038(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ShoulderShootFireSenSItivity;                            // 0x003C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<float>                                              SkillSensitivity;                                        // 0x0040(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<float>                                              SightSensitivity;                                        // 0x0050(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<float>                                              VehicleDriverSensitivity;                                // 0x0060(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<float>                                              VehicleFireSensitivity;                                  // 0x0070(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<float>                                              SuperSkillSensitivity;                                   // 0x0080(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<float>                                              TacticalSkillSensitivity;                                // 0x0090(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarTables_GlobalSensitivity
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FSolarTables_GlobalSensitivity : public FSolarTablesDataBase
	{
	public:
		TMap<int32_t, struct FSolarTablesData_GlobalSensitivity>   Data;                                                    // 0x0010(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct Solarland.SolarTablesData_HeroPowerFormula
	 * Size -> 0x0018 (FullSize[0x0028] - InheritedSize[0x0010])
	 */
	struct FSolarTablesData_HeroPowerFormula : public FSolarTablesDataBase
	{
	public:
		int32_t                                                    ID;                                                      // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MatchRuleID;                                             // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Battlerank;                                              // 0x0018(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RankScore;                                               // 0x001C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      KillRealConfig;                                          // 0x0020(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      KillAiConfig;                                            // 0x0024(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarTables_HeroPowerFormula
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FSolarTables_HeroPowerFormula : public FSolarTablesDataBase
	{
	public:
		TMap<int32_t, struct FSolarTablesData_HeroPowerFormula>    Data;                                                    // 0x0010(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct Solarland.SolarTablesData_InputAction
	 * Size -> 0x0018 (FullSize[0x0028] - InheritedSize[0x0010])
	 */
	struct FSolarTablesData_InputAction : public FSolarTablesDataBase
	{
	public:
		class FString                                              ID;                                                      // 0x0010(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bFlagBigMap;                                             // 0x0020(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bFlagBackpack;                                           // 0x0021(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bFlagChat;                                               // 0x0022(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bFlagParachute;                                          // 0x0023(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bFlagSpectate;                                           // 0x0024(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bFlagTeamDeath;                                          // 0x0025(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bFlagRelive;                                             // 0x0026(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RBL5[0x1];                                   // 0x0027(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.SolarTables_InputAction
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FSolarTables_InputAction : public FSolarTablesDataBase
	{
	public:
		TMap<class FString, struct FSolarTablesData_InputAction>   Data;                                                    // 0x0010(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct Solarland.SolarTablesData_InputMapping
	 * Size -> 0x0088 (FullSize[0x0098] - InheritedSize[0x0010])
	 */
	struct FSolarTablesData_InputMapping : public FSolarTablesDataBase
	{
	public:
		class FString                                              ID;                                                      // 0x0010(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ActionName;                                              // 0x0020(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESolarTablesEnum_InputActionType                           ActionType;                                              // 0x0030(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BO85[0x3];                                   // 0x0031(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      Scale;                                                   // 0x0034(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESolarTablesEnum_InputTriggerType                          TriggerType;                                             // 0x0038(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_82CQ[0x7];                                   // 0x0039(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              FirstDefaultKeys;                                        // 0x0040(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              SecondDefaultKeys;                                       // 0x0050(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ThirdDefaultKeys;                                        // 0x0060(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESolarTablesEnum_InputCtrlType                             CtrlType;                                                // 0x0070(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESolarTablesEnum_InputContextType                          ContextType;                                             // 0x0071(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESolarTablesEnum_InputRelatedType                          RelatedType;                                             // 0x0072(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5XA7[0x1];                                   // 0x0073(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSolarTablesLocalText                               ActionDisplayName;                                       // 0x0074(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic
		struct FSolarTablesLocalText                               ActionTipsDesc;                                          // 0x0078(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic
		ESolarTablesEnum_InputTabType                              TabType;                                                 // 0x007C(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7L4H[0x3];                                   // 0x007D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    GroupIndex;                                              // 0x0080(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSolarTablesLocalText                               GroupTitle;                                              // 0x0084(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic
		ESolarTablesEnum_InputGroupType                            GroupType;                                               // 0x0088(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_U0FR[0x3];                                   // 0x0089(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    GroupPriority;                                           // 0x008C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       AffectedByActionTipsSettings;                            // 0x0090(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0K0P[0x7];                                   // 0x0091(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.SolarTables_InputMapping
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FSolarTables_InputMapping : public FSolarTablesDataBase
	{
	public:
		TMap<class FString, struct FSolarTablesData_InputMapping>  Data;                                                    // 0x0010(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct Solarland.SolarTablesData_Item
	 * Size -> 0x0040 (FullSize[0x0050] - InheritedSize[0x0010])
	 */
	struct FSolarTablesData_Item : public FSolarTablesDataBase
	{
	public:
		int32_t                                                    ID;                                                      // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSolarTablesLocalText                               Name;                                                    // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic
		class FString                                              Icon;                                                    // 0x0018(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSolarTablesLocalText                               Info;                                                    // 0x0028(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic
		int32_t                                                    Quality;                                                 // 0x002C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ItemClass;                                               // 0x0030(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ItemType;                                                // 0x0034(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       ShowInStorage;                                           // 0x0038(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IfUse;                                                   // 0x0039(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IfRecycle;                                               // 0x003A(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESolarTablesEnum_StackType                                 StackType;                                               // 0x003B(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BQZF[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<int32_t>                                            JumpLink;                                                // 0x0040(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarTables_Item
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FSolarTables_Item : public FSolarTablesDataBase
	{
	public:
		TMap<int32_t, struct FSolarTablesData_Item>                Data;                                                    // 0x0010(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct Solarland.SolarTablesData_BackpackProperty
	 * Size -> 0x0070 (FullSize[0x0080] - InheritedSize[0x0010])
	 */
	struct FSolarTablesData_BackpackProperty : public FSolarTablesDataBase
	{
	public:
		int32_t                                                    ID;                                                      // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSolarTablesLocalText                               Name;                                                    // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic
		class FString                                              Icon;                                                    // 0x0018(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSolarTablesLocalText                               Info;                                                    // 0x0028(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic
		int32_t                                                    Quality;                                                 // 0x002C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ItemClass;                                               // 0x0030(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ItemType;                                                // 0x0034(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       ShowInStorage;                                           // 0x0038(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IfUse;                                                   // 0x0039(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IfRecycle;                                               // 0x003A(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESolarTablesEnum_StackType                                 StackType;                                               // 0x003B(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XBSZ[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<int32_t>                                            JumpLink;                                                // 0x0040(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              BackpackMeshPath;                                        // 0x0050(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              PreviewBpPath;                                           // 0x0060(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    StartFrame;                                              // 0x0070(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    EndFrame;                                                // 0x0074(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Length;                                                  // 0x0078(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Q6OX[0x4];                                   // 0x007C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.SolarTables_BackpackProperty
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FSolarTables_BackpackProperty : public FSolarTablesDataBase
	{
	public:
		TMap<int32_t, struct FSolarTablesData_BackpackProperty>    Data;                                                    // 0x0010(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct Solarland.SolarTablesData_BackpackTrailProperty
	 * Size -> 0x0060 (FullSize[0x0070] - InheritedSize[0x0010])
	 */
	struct FSolarTablesData_BackpackTrailProperty : public FSolarTablesDataBase
	{
	public:
		int32_t                                                    ID;                                                      // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSolarTablesLocalText                               Name;                                                    // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic
		class FString                                              Icon;                                                    // 0x0018(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSolarTablesLocalText                               Info;                                                    // 0x0028(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic
		int32_t                                                    Quality;                                                 // 0x002C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ItemClass;                                               // 0x0030(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ItemType;                                                // 0x0034(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       ShowInStorage;                                           // 0x0038(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IfUse;                                                   // 0x0039(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IfRecycle;                                               // 0x003A(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESolarTablesEnum_StackType                                 StackType;                                               // 0x003B(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SAWF[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<int32_t>                                            JumpLink;                                                // 0x0040(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              PreviewTrailPath;                                        // 0x0050(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              AssemblingId;                                            // 0x0060(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarTables_BackpackTrailProperty
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FSolarTables_BackpackTrailProperty : public FSolarTablesDataBase
	{
	public:
		TMap<int32_t, struct FSolarTablesData_BackpackTrailProperty> Data;                                                    // 0x0010(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct Solarland.SolarTablesData_CapsuleProperty
	 * Size -> 0x0060 (FullSize[0x0070] - InheritedSize[0x0010])
	 */
	struct FSolarTablesData_CapsuleProperty : public FSolarTablesDataBase
	{
	public:
		int32_t                                                    ID;                                                      // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSolarTablesLocalText                               Name;                                                    // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic
		class FString                                              Icon;                                                    // 0x0018(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSolarTablesLocalText                               Info;                                                    // 0x0028(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic
		int32_t                                                    Quality;                                                 // 0x002C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ItemClass;                                               // 0x0030(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ItemType;                                                // 0x0034(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       ShowInStorage;                                           // 0x0038(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IfUse;                                                   // 0x0039(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IfRecycle;                                               // 0x003A(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESolarTablesEnum_StackType                                 StackType;                                               // 0x003B(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_99F5[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<int32_t>                                            JumpLink;                                                // 0x0040(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              CapsuleBPPath;                                           // 0x0050(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              PreviewBpPath;                                           // 0x0060(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarTables_CapsuleProperty
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FSolarTables_CapsuleProperty : public FSolarTablesDataBase
	{
	public:
		TMap<int32_t, struct FSolarTablesData_CapsuleProperty>     Data;                                                    // 0x0010(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct Solarland.SolarTablesData_Dance
	 * Size -> 0x0070 (FullSize[0x0080] - InheritedSize[0x0010])
	 */
	struct FSolarTablesData_Dance : public FSolarTablesDataBase
	{
	public:
		int32_t                                                    ID;                                                      // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSolarTablesLocalText                               Name;                                                    // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic
		class FString                                              Icon;                                                    // 0x0018(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSolarTablesLocalText                               Info;                                                    // 0x0028(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic
		int32_t                                                    Quality;                                                 // 0x002C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ItemClass;                                               // 0x0030(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ItemType;                                                // 0x0034(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       ShowInStorage;                                           // 0x0038(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IfUse;                                                   // 0x0039(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IfRecycle;                                               // 0x003A(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESolarTablesEnum_StackType                                 StackType;                                               // 0x003B(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZFA2[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<int32_t>                                            JumpLink;                                                // 0x0040(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    LoopTime;                                                // 0x0050(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8SFB[0x4];                                   // 0x0054(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              BlueprintPath;                                           // 0x0058(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ShopID;                                                  // 0x0068(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IfDefault;                                               // 0x006C(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IfShow;                                                  // 0x006D(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7GOK[0x2];                                   // 0x006E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              BeginTime;                                               // 0x0070(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarTables_Dance
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FSolarTables_Dance : public FSolarTablesDataBase
	{
	public:
		TMap<int32_t, struct FSolarTablesData_Dance>               Data;                                                    // 0x0010(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct Solarland.SolarTablesData_Emote
	 * Size -> 0x0098 (FullSize[0x00A8] - InheritedSize[0x0010])
	 */
	struct FSolarTablesData_Emote : public FSolarTablesDataBase
	{
	public:
		int32_t                                                    ID;                                                      // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSolarTablesLocalText                               Name;                                                    // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic
		class FString                                              Icon;                                                    // 0x0018(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSolarTablesLocalText                               Info;                                                    // 0x0028(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic
		int32_t                                                    Quality;                                                 // 0x002C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ItemClass;                                               // 0x0030(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ItemType;                                                // 0x0034(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       ShowInStorage;                                           // 0x0038(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IfUse;                                                   // 0x0039(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IfRecycle;                                               // 0x003A(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESolarTablesEnum_StackType                                 StackType;                                               // 0x003B(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_43MM[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<int32_t>                                            JumpLink;                                                // 0x0040(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    EmoteType;                                               // 0x0050(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QSX0[0x4];                                   // 0x0054(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              EmoteBlueprintPath;                                      // 0x0058(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              EmoteResourcePath;                                       // 0x0068(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      EmoteDuration;                                           // 0x0078(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NNX8[0x4];                                   // 0x007C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              EmoteAppearSound;                                        // 0x0080(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              EmoteSound;                                              // 0x0090(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ShopID;                                                  // 0x00A0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_P6P2[0x4];                                   // 0x00A4(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.SolarTables_Emote
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FSolarTables_Emote : public FSolarTablesDataBase
	{
	public:
		TMap<int32_t, struct FSolarTablesData_Emote>               Data;                                                    // 0x0010(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct Solarland.SolarTablesData_KillNotify
	 * Size -> 0x00B0 (FullSize[0x00C0] - InheritedSize[0x0010])
	 */
	struct FSolarTablesData_KillNotify : public FSolarTablesDataBase
	{
	public:
		int32_t                                                    ID;                                                      // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSolarTablesLocalText                               Name;                                                    // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic
		class FString                                              Icon;                                                    // 0x0018(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSolarTablesLocalText                               Info;                                                    // 0x0028(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic
		int32_t                                                    Quality;                                                 // 0x002C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ItemClass;                                               // 0x0030(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ItemType;                                                // 0x0034(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       ShowInStorage;                                           // 0x0038(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IfUse;                                                   // 0x0039(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IfRecycle;                                               // 0x003A(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESolarTablesEnum_StackType                                 StackType;                                               // 0x003B(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RKU7[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<int32_t>                                            JumpLink;                                                // 0x0040(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              KillNotifyPath;                                          // 0x0050(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              KillNotifySpecialPath;                                   // 0x0060(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              KillNotifyBackGroundPath;                                // 0x0070(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              KillNotifyBackground;                                    // 0x0080(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              TextColor;                                               // 0x0090(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              IconColor;                                               // 0x00A0(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Param;                                                   // 0x00B0(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarTables_KillNotify
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FSolarTables_KillNotify : public FSolarTablesDataBase
	{
	public:
		TMap<int32_t, struct FSolarTablesData_KillNotify>          Data;                                                    // 0x0010(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct Solarland.SolarTablesData_MaterialProperty
	 * Size -> 0x0058 (FullSize[0x0068] - InheritedSize[0x0010])
	 */
	struct FSolarTablesData_MaterialProperty : public FSolarTablesDataBase
	{
	public:
		int32_t                                                    ID;                                                      // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSolarTablesLocalText                               Name;                                                    // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic
		class FString                                              Icon;                                                    // 0x0018(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSolarTablesLocalText                               Info;                                                    // 0x0028(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic
		int32_t                                                    Quality;                                                 // 0x002C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ItemClass;                                               // 0x0030(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ItemType;                                                // 0x0034(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       ShowInStorage;                                           // 0x0038(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IfUse;                                                   // 0x0039(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IfRecycle;                                               // 0x003A(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESolarTablesEnum_StackType                                 StackType;                                               // 0x003B(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PO2A[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<int32_t>                                            JumpLink;                                                // 0x0040(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Prize;                                                   // 0x0050(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IfCollection;                                            // 0x0054(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KZH3[0x3];                                   // 0x0055(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    Level;                                                   // 0x0058(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSolarTablesLocalText                               CoverName;                                               // 0x005C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic
		int32_t                                                    Substitution;                                            // 0x0060(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_L6TJ[0x4];                                   // 0x0064(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.SolarTables_MaterialProperty
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FSolarTables_MaterialProperty : public FSolarTablesDataBase
	{
	public:
		TMap<int32_t, struct FSolarTablesData_MaterialProperty>    Data;                                                    // 0x0010(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct Solarland.SolarTablesData_VehicleSkinProperty
	 * Size -> 0x0068 (FullSize[0x0078] - InheritedSize[0x0010])
	 */
	struct FSolarTablesData_VehicleSkinProperty : public FSolarTablesDataBase
	{
	public:
		int32_t                                                    ID;                                                      // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSolarTablesLocalText                               Name;                                                    // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic
		class FString                                              Icon;                                                    // 0x0018(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSolarTablesLocalText                               Info;                                                    // 0x0028(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic
		int32_t                                                    Quality;                                                 // 0x002C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ItemClass;                                               // 0x0030(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ItemType;                                                // 0x0034(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       ShowInStorage;                                           // 0x0038(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IfUse;                                                   // 0x0039(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IfRecycle;                                               // 0x003A(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESolarTablesEnum_StackType                                 StackType;                                               // 0x003B(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_J6FZ[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<int32_t>                                            JumpLink;                                                // 0x0040(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    VehicleSkinId;                                           // 0x0050(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    VehicleSkinAquiredThre;                                  // 0x0054(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    JumpPage;                                                // 0x0058(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7S10[0x4];                                   // 0x005C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              KillBroadcast;                                           // 0x0060(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       DisplayInVehiclery;                                      // 0x0070(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HUDR[0x7];                                   // 0x0071(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.SolarTables_VehicleSkinProperty
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FSolarTables_VehicleSkinProperty : public FSolarTablesDataBase
	{
	public:
		TMap<int32_t, struct FSolarTablesData_VehicleSkinProperty> Data;                                                    // 0x0010(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct Solarland.SolarTablesData_Voice
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FSolarTablesData_Voice : public FSolarTablesDataBase
	{
	public:
		int32_t                                                    ID;                                                      // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSolarTablesLocalText                               Name;                                                    // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic
		class FString                                              Icon;                                                    // 0x0018(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSolarTablesLocalText                               Info;                                                    // 0x0028(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic
		int32_t                                                    Quality;                                                 // 0x002C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ItemClass;                                               // 0x0030(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ItemType;                                                // 0x0034(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       ShowInStorage;                                           // 0x0038(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IfUse;                                                   // 0x0039(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IfRecycle;                                               // 0x003A(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESolarTablesEnum_StackType                                 StackType;                                               // 0x003B(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MT94[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<int32_t>                                            JumpLink;                                                // 0x0040(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Type;                                                    // 0x0050(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    VoiceID;                                                 // 0x0054(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CharacterId;                                             // 0x0058(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IfBotUse;                                                // 0x005C(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IfDefault;                                               // 0x005D(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IfDefaultEquip;                                          // 0x005E(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9FOG[0x1];                                   // 0x005F(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.SolarTables_Voice
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FSolarTables_Voice : public FSolarTablesDataBase
	{
	public:
		TMap<int32_t, struct FSolarTablesData_Voice>               Data;                                                    // 0x0010(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct Solarland.SolarTablesData_WeaponSkinProperty
	 * Size -> 0x0058 (FullSize[0x0068] - InheritedSize[0x0010])
	 */
	struct FSolarTablesData_WeaponSkinProperty : public FSolarTablesDataBase
	{
	public:
		int32_t                                                    ID;                                                      // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSolarTablesLocalText                               Name;                                                    // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic
		class FString                                              Icon;                                                    // 0x0018(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSolarTablesLocalText                               Info;                                                    // 0x0028(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic
		int32_t                                                    Quality;                                                 // 0x002C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ItemClass;                                               // 0x0030(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ItemType;                                                // 0x0034(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       ShowInStorage;                                           // 0x0038(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IfUse;                                                   // 0x0039(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IfRecycle;                                               // 0x003A(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESolarTablesEnum_StackType                                 StackType;                                               // 0x003B(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_65OD[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<int32_t>                                            JumpLink;                                                // 0x0040(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    WeaponSkinID;                                            // 0x0050(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PH8V[0x4];                                   // 0x0054(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              WeaponIcon_M;                                            // 0x0058(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarTables_WeaponSkinProperty
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FSolarTables_WeaponSkinProperty : public FSolarTablesDataBase
	{
	public:
		TMap<int32_t, struct FSolarTablesData_WeaponSkinProperty>  Data;                                                    // 0x0010(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct Solarland.SolarTablesData_ItemCustomType
	 * Size -> 0x0018 (FullSize[0x0028] - InheritedSize[0x0010])
	 */
	struct FSolarTablesData_ItemCustomType : public FSolarTablesDataBase
	{
	public:
		int32_t                                                    ID;                                                      // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8W5K[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<int32_t>                                            ItemIDs;                                                 // 0x0018(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarTables_ItemCustomType
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FSolarTables_ItemCustomType : public FSolarTablesDataBase
	{
	public:
		TMap<int32_t, struct FSolarTablesData_ItemCustomType>      Data;                                                    // 0x0010(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct Solarland.SolarTablesData_ItemInBattle
	 * Size -> 0x0068 (FullSize[0x0078] - InheritedSize[0x0010])
	 */
	struct FSolarTablesData_ItemInBattle : public FSolarTablesDataBase
	{
	public:
		int32_t                                                    ID;                                                      // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSolarTablesLocalText                               Name;                                                    // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic
		class FString                                              Icon;                                                    // 0x0018(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSolarTablesLocalText                               Info;                                                    // 0x0028(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic
		int32_t                                                    Quality;                                                 // 0x002C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ItemType;                                                // 0x0030(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IfReplace;                                               // 0x0034(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QD20[0x3];                                   // 0x0035(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    Pile;                                                    // 0x0038(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_40OL[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              AbilityBP;                                               // 0x0040(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ItemBP;                                                  // 0x0050(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              AudioEventName;                                          // 0x0060(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       UseOnPickup;                                             // 0x0070(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QMUL[0x7];                                   // 0x0071(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.SolarTables_ItemInBattle
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FSolarTables_ItemInBattle : public FSolarTablesDataBase
	{
	public:
		TMap<int32_t, struct FSolarTablesData_ItemInBattle>        Data;                                                    // 0x0010(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct Solarland.SolarTablesData_ArmorProperty
	 * Size -> 0x0080 (FullSize[0x0090] - InheritedSize[0x0010])
	 */
	struct FSolarTablesData_ArmorProperty : public FSolarTablesDataBase
	{
	public:
		int32_t                                                    ID;                                                      // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSolarTablesLocalText                               Name;                                                    // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic
		class FString                                              Icon;                                                    // 0x0018(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSolarTablesLocalText                               Info;                                                    // 0x0028(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic
		int32_t                                                    Quality;                                                 // 0x002C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ItemType;                                                // 0x0030(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IfReplace;                                               // 0x0034(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YBQV[0x3];                                   // 0x0035(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    Pile;                                                    // 0x0038(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_B7TU[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              AbilityBP;                                               // 0x0040(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ItemBP;                                                  // 0x0050(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              AudioEventName;                                          // 0x0060(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       UseOnPickup;                                             // 0x0070(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VQZ2[0x3];                                   // 0x0071(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MaxValue;                                                // 0x0074(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RecoverySpeed;                                           // 0x0078(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      EnergyCost;                                              // 0x007C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaterialCost;                                            // 0x0080(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinMaterialCost;                                         // 0x0084(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ArmorWorth;                                              // 0x0088(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YMMX[0x4];                                   // 0x008C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.SolarTables_ArmorProperty
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FSolarTables_ArmorProperty : public FSolarTablesDataBase
	{
	public:
		TMap<int32_t, struct FSolarTablesData_ArmorProperty>       Data;                                                    // 0x0010(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct Solarland.SolarTablesData_Chest
	 * Size -> 0x0078 (FullSize[0x0088] - InheritedSize[0x0010])
	 */
	struct FSolarTablesData_Chest : public FSolarTablesDataBase
	{
	public:
		int32_t                                                    ID;                                                      // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSolarTablesLocalText                               Name;                                                    // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic
		class FString                                              Icon;                                                    // 0x0018(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSolarTablesLocalText                               Info;                                                    // 0x0028(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic
		int32_t                                                    Quality;                                                 // 0x002C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ItemType;                                                // 0x0030(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IfReplace;                                               // 0x0034(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_92FF[0x3];                                   // 0x0035(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    Pile;                                                    // 0x0038(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RUJ8[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              AbilityBP;                                               // 0x0040(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ItemBP;                                                  // 0x0050(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              AudioEventName;                                          // 0x0060(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       UseOnPickup;                                             // 0x0070(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NNV9[0x3];                                   // 0x0071(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    openType;                                                // 0x0074(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CostQuantity;                                            // 0x0078(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CostType;                                                // 0x007C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    OpenTime;                                                // 0x0080(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Drop;                                                    // 0x0084(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarTables_Chest
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FSolarTables_Chest : public FSolarTablesDataBase
	{
	public:
		TMap<int32_t, struct FSolarTablesData_Chest>               Data;                                                    // 0x0010(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct Solarland.SolarTablesData_Collect
	 * Size -> 0x0070 (FullSize[0x0080] - InheritedSize[0x0010])
	 */
	struct FSolarTablesData_Collect : public FSolarTablesDataBase
	{
	public:
		int32_t                                                    ID;                                                      // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSolarTablesLocalText                               Name;                                                    // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic
		class FString                                              Icon;                                                    // 0x0018(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSolarTablesLocalText                               Info;                                                    // 0x0028(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic
		int32_t                                                    Quality;                                                 // 0x002C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ItemType;                                                // 0x0030(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IfReplace;                                               // 0x0034(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6Q7T[0x3];                                   // 0x0035(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    Pile;                                                    // 0x0038(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GNH7[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              AbilityBP;                                               // 0x0040(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ItemBP;                                                  // 0x0050(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              AudioEventName;                                          // 0x0060(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       UseOnPickup;                                             // 0x0070(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SJ0C[0x3];                                   // 0x0071(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    lobbyCollectId;                                          // 0x0074(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Level;                                                   // 0x0078(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    EventId;                                                 // 0x007C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarTables_Collect
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FSolarTables_Collect : public FSolarTablesDataBase
	{
	public:
		TMap<int32_t, struct FSolarTablesData_Collect>             Data;                                                    // 0x0010(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct Solarland.SolarTablesData_EnergyProperty
	 * Size -> 0x0070 (FullSize[0x0080] - InheritedSize[0x0010])
	 */
	struct FSolarTablesData_EnergyProperty : public FSolarTablesDataBase
	{
	public:
		int32_t                                                    ID;                                                      // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSolarTablesLocalText                               Name;                                                    // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic
		class FString                                              Icon;                                                    // 0x0018(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSolarTablesLocalText                               Info;                                                    // 0x0028(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic
		int32_t                                                    Quality;                                                 // 0x002C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ItemType;                                                // 0x0030(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IfReplace;                                               // 0x0034(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ULPF[0x3];                                   // 0x0035(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    Pile;                                                    // 0x0038(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8XV4[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              AbilityBP;                                               // 0x0040(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ItemBP;                                                  // 0x0050(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              AudioEventName;                                          // 0x0060(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       UseOnPickup;                                             // 0x0070(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_P629[0x3];                                   // 0x0071(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      AddedEnergyMax;                                          // 0x0074(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    EnergyModuleWorth;                                       // 0x0078(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0QIQ[0x4];                                   // 0x007C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.SolarTables_EnergyProperty
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FSolarTables_EnergyProperty : public FSolarTablesDataBase
	{
	public:
		TMap<int32_t, struct FSolarTablesData_EnergyProperty>      Data;                                                    // 0x0010(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct Solarland.SolarTablesData_ExtraEnergyProperty
	 * Size -> 0x00A8 (FullSize[0x00B8] - InheritedSize[0x0010])
	 */
	struct FSolarTablesData_ExtraEnergyProperty : public FSolarTablesDataBase
	{
	public:
		int32_t                                                    ID;                                                      // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSolarTablesLocalText                               Name;                                                    // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic
		class FString                                              Icon;                                                    // 0x0018(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSolarTablesLocalText                               Info;                                                    // 0x0028(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic
		int32_t                                                    Quality;                                                 // 0x002C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ItemType;                                                // 0x0030(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IfReplace;                                               // 0x0034(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_T854[0x3];                                   // 0x0035(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    Pile;                                                    // 0x0038(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6ZF0[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              AbilityBP;                                               // 0x0040(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ItemBP;                                                  // 0x0050(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              AudioEventName;                                          // 0x0060(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       UseOnPickup;                                             // 0x0070(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QTAA[0x3];                                   // 0x0071(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    QualityColor;                                            // 0x0074(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ExtraEnergyMax;                                          // 0x0078(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ExtraEnergyCharge;                                       // 0x007C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ChargeCD;                                                // 0x0080(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ExtraEnergyWorth;                                        // 0x0084(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RechargeFrequencyFromSky;                                // 0x0088(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RechargeFrequencyFromDeathBox;                           // 0x008C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RechargeFrequencyFromPile;                               // 0x0090(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RechargeQuantityFromSky;                                 // 0x0094(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RechargeQuantityFromDeathBox;                            // 0x0098(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RechargeQuantityFromPile;                                // 0x009C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Sketch;                                                  // 0x00A0(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SketchLevel;                                             // 0x00B0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_77B1[0x4];                                   // 0x00B4(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.SolarTables_ExtraEnergyProperty
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FSolarTables_ExtraEnergyProperty : public FSolarTablesDataBase
	{
	public:
		TMap<int32_t, struct FSolarTablesData_ExtraEnergyProperty> Data;                                                    // 0x0010(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct Solarland.SolarTablesData_GunProperty
	 * Size -> 0x00A0 (FullSize[0x00B0] - InheritedSize[0x0010])
	 */
	struct FSolarTablesData_GunProperty : public FSolarTablesDataBase
	{
	public:
		int32_t                                                    ID;                                                      // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSolarTablesLocalText                               Name;                                                    // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic
		class FString                                              Icon;                                                    // 0x0018(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSolarTablesLocalText                               Info;                                                    // 0x0028(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic
		int32_t                                                    Quality;                                                 // 0x002C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ItemType;                                                // 0x0030(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IfReplace;                                               // 0x0034(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3SAG[0x3];                                   // 0x0035(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    Pile;                                                    // 0x0038(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_A53K[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              AbilityBP;                                               // 0x0040(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ItemBP;                                                  // 0x0050(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              AudioEventName;                                          // 0x0060(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       UseOnPickup;                                             // 0x0070(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JP30[0x3];                                   // 0x0071(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    weaponid;                                                // 0x0074(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       Disused;                                                 // 0x0078(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0FN2[0x7];                                   // 0x0079(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              BigIcon;                                                 // 0x0080(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    WeaponLv;                                                // 0x0090(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       UseWeaponAccessory;                                      // 0x0094(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GITC[0x3];                                   // 0x0095(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    WeaponAccessory1;                                        // 0x0098(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    WeaponAccessory2;                                        // 0x009C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    WeaponAccessory3;                                        // 0x00A0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    WeaponAccessory4;                                        // 0x00A4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    WeaponAccessory5;                                        // 0x00A8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FLNI[0x4];                                   // 0x00AC(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.SolarTables_GunProperty
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FSolarTables_GunProperty : public FSolarTablesDataBase
	{
	public:
		TMap<int32_t, struct FSolarTablesData_GunProperty>         Data;                                                    // 0x0010(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct Solarland.SolarTablesData_ItemBehavior
	 * Size -> 0x0068 (FullSize[0x0078] - InheritedSize[0x0010])
	 */
	struct FSolarTablesData_ItemBehavior : public FSolarTablesDataBase
	{
	public:
		int32_t                                                    ID;                                                      // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSolarTablesLocalText                               Name;                                                    // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic
		class FString                                              Icon;                                                    // 0x0018(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSolarTablesLocalText                               Info;                                                    // 0x0028(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic
		int32_t                                                    Quality;                                                 // 0x002C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ItemType;                                                // 0x0030(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IfReplace;                                               // 0x0034(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NXCU[0x3];                                   // 0x0035(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    Pile;                                                    // 0x0038(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WM5Y[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              AbilityBP;                                               // 0x0040(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ItemBP;                                                  // 0x0050(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              AudioEventName;                                          // 0x0060(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       UseOnPickup;                                             // 0x0070(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2U5F[0x3];                                   // 0x0071(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    BehaviorExpID;                                           // 0x0074(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarTables_ItemBehavior
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FSolarTables_ItemBehavior : public FSolarTablesDataBase
	{
	public:
		TMap<int32_t, struct FSolarTablesData_ItemBehavior>        Data;                                                    // 0x0010(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct Solarland.SolarTablesData_ItemWeaponParts
	 * Size -> 0x0080 (FullSize[0x0090] - InheritedSize[0x0010])
	 */
	struct FSolarTablesData_ItemWeaponParts : public FSolarTablesDataBase
	{
	public:
		int32_t                                                    ID;                                                      // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSolarTablesLocalText                               Name;                                                    // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic
		class FString                                              Icon;                                                    // 0x0018(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSolarTablesLocalText                               Info;                                                    // 0x0028(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic
		int32_t                                                    Quality;                                                 // 0x002C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ItemType;                                                // 0x0030(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IfReplace;                                               // 0x0034(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XTP6[0x3];                                   // 0x0035(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    Pile;                                                    // 0x0038(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HBIT[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              AbilityBP;                                               // 0x0040(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ItemBP;                                                  // 0x0050(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              AudioEventName;                                          // 0x0060(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       UseOnPickup;                                             // 0x0070(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UT9H[0x3];                                   // 0x0071(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    PartsType;                                               // 0x0074(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Level;                                                   // 0x0078(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ID22[0x4];                                   // 0x007C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              PreviewIcon;                                             // 0x0080(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarTables_ItemWeaponParts
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FSolarTables_ItemWeaponParts : public FSolarTablesDataBase
	{
	public:
		TMap<int32_t, struct FSolarTablesData_ItemWeaponParts>     Data;                                                    // 0x0010(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct Solarland.SolarTablesData_JetPackModuleProperty
	 * Size -> 0x00A8 (FullSize[0x00B8] - InheritedSize[0x0010])
	 */
	struct FSolarTablesData_JetPackModuleProperty : public FSolarTablesDataBase
	{
	public:
		int32_t                                                    ID;                                                      // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSolarTablesLocalText                               Name;                                                    // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic
		class FString                                              Icon;                                                    // 0x0018(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSolarTablesLocalText                               Info;                                                    // 0x0028(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic
		int32_t                                                    Quality;                                                 // 0x002C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ItemType;                                                // 0x0030(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IfReplace;                                               // 0x0034(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LEDV[0x3];                                   // 0x0035(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    Pile;                                                    // 0x0038(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_71WO[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              AbilityBP;                                               // 0x0040(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ItemBP;                                                  // 0x0050(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              AudioEventName;                                          // 0x0060(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       UseOnPickup;                                             // 0x0070(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ME0T[0x3];                                   // 0x0071(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    VerticalDashSpeedTimes;                                  // 0x0074(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    HorizontalDashSpeedTimes;                                // 0x0078(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      VerticalDashSpeedScale;                                  // 0x007C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HorizontalDashSpeedScale;                                // 0x0080(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      VerticalDashCoolDownScale;                               // 0x0084(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HorizontalDashCoolDownScale;                             // 0x0088(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      VerticalDashEnergyScale;                                 // 0x008C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HorizontalDashEnergyScale;                               // 0x0090(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      VerticalChargingScale;                                   // 0x0094(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HorizontalChargingScale;                                 // 0x0098(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    JetPackModuleWorth;                                      // 0x009C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Sketch;                                                  // 0x00A0(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SketchLevel;                                             // 0x00B0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JWYI[0x4];                                   // 0x00B4(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.SolarTables_JetPackModuleProperty
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FSolarTables_JetPackModuleProperty : public FSolarTablesDataBase
	{
	public:
		TMap<int32_t, struct FSolarTablesData_JetPackModuleProperty> Data;                                                    // 0x0010(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct Solarland.SolarTablesData_ShieldProperty
	 * Size -> 0x00C8 (FullSize[0x00D8] - InheritedSize[0x0010])
	 */
	struct FSolarTablesData_ShieldProperty : public FSolarTablesDataBase
	{
	public:
		int32_t                                                    ID;                                                      // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSolarTablesLocalText                               Name;                                                    // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic
		class FString                                              Icon;                                                    // 0x0018(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSolarTablesLocalText                               Info;                                                    // 0x0028(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic
		int32_t                                                    Quality;                                                 // 0x002C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ItemType;                                                // 0x0030(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IfReplace;                                               // 0x0034(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CWB1[0x3];                                   // 0x0035(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    Pile;                                                    // 0x0038(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_R04X[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              AbilityBP;                                               // 0x0040(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ItemBP;                                                  // 0x0050(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              AudioEventName;                                          // 0x0060(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       UseOnPickup;                                             // 0x0070(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RJ1B[0x3];                                   // 0x0071(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MaxValue;                                                // 0x0074(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RecoverySpeed;                                           // 0x0078(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      EnergyCost;                                              // 0x007C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CoolDownTime;                                            // 0x0080(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RecoveryDuration;                                        // 0x0084(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RecoveryDurationB;                                       // 0x0088(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RecoveryAmount;                                          // 0x008C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      EnergyConsumption;                                       // 0x0090(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ShieldWorth;                                             // 0x0094(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Sketch;                                                  // 0x0098(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SketchLevel;                                             // 0x00A8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    QualityColor;                                            // 0x00AC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    AutoRecharge;                                            // 0x00B0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LeaveCombatTime;                                         // 0x00B4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AutoRechargeInterval;                                    // 0x00B8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AutoRechargeValue;                                       // 0x00BC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    NextUpgradeCost;                                         // 0x00C0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    NextUpgradeItemID;                                       // 0x00C4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    UpgradeItemCost;                                         // 0x00C8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      UpgradeTimeCost;                                         // 0x00CC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ShieldRechargeDelayTime;                                 // 0x00D0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ShieldRecoveryTime;                                      // 0x00D4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarTables_ShieldProperty
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FSolarTables_ShieldProperty : public FSolarTablesDataBase
	{
	public:
		TMap<int32_t, struct FSolarTablesData_ShieldProperty>      Data;                                                    // 0x0010(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct Solarland.SolarTablesData_ItemQuality
	 * Size -> 0x00D8 (FullSize[0x00E8] - InheritedSize[0x0010])
	 */
	struct FSolarTablesData_ItemQuality : public FSolarTablesDataBase
	{
	public:
		int32_t                                                    ID;                                                      // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AX20[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<float>                                              Color;                                                   // 0x0018(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<float>                                              HUDColor;                                                // 0x0028(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<float>                                              OutsideColor;                                            // 0x0038(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<float>                                              InsideColor;                                             // 0x0048(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<float>                                              HighQualityColor;                                        // 0x0058(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<float>                                              LowQualityColor;                                         // 0x0068(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<float>                                              HUDBGColor;                                              // 0x0078(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<float>                                              HUDDecorateColor;                                        // 0x0088(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Qualitypic;                                              // 0x0098(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              QualityColor;                                            // 0x00A8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Qualitystr;                                              // 0x00B8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              QualityBG;                                               // 0x00C8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              QualityBG2;                                              // 0x00D8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarTables_ItemQuality
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FSolarTables_ItemQuality : public FSolarTablesDataBase
	{
	public:
		TMap<int32_t, struct FSolarTablesData_ItemQuality>         Data;                                                    // 0x0010(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct Solarland.SolarTablesData_ItemSound
	 * Size -> 0x0038 (FullSize[0x0048] - InheritedSize[0x0010])
	 */
	struct FSolarTablesData_ItemSound : public FSolarTablesDataBase
	{
	public:
		int32_t                                                    ID;                                                      // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XTFY[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              PickupSound;                                             // 0x0018(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              EquippedSound;                                           // 0x0028(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              PassiveSound;                                            // 0x0038(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarTables_ItemSound
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FSolarTables_ItemSound : public FSolarTablesDataBase
	{
	public:
		TMap<int32_t, struct FSolarTablesData_ItemSound>           Data;                                                    // 0x0010(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct Solarland.SolarTablesData_LobbyAutoDownload
	 * Size -> 0x0010 (FullSize[0x0020] - InheritedSize[0x0010])
	 */
	struct FSolarTablesData_LobbyAutoDownload : public FSolarTablesDataBase
	{
	public:
		int32_t                                                    ID;                                                      // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ChunkID;                                                 // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ChunkName;                                               // 0x0018(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IncludeMain;                                             // 0x001C(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IncludeOptional;                                         // 0x001D(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ETL9[0x2];                                   // 0x001E(0x0002) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.SolarTables_LobbyAutoDownload
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FSolarTables_LobbyAutoDownload : public FSolarTablesDataBase
	{
	public:
		TMap<int32_t, struct FSolarTablesData_LobbyAutoDownload>   Data;                                                    // 0x0010(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct Solarland.SolarTablesData_LanguageSwitcher
	 * Size -> 0x0048 (FullSize[0x0058] - InheritedSize[0x0010])
	 */
	struct FSolarTablesData_LanguageSwitcher : public FSolarTablesDataBase
	{
	public:
		class FString                                              ID;                                                      // 0x0010(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ButtonText;                                              // 0x0020(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IfOpened;                                                // 0x0030(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7BL0[0x3];                                   // 0x0031(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    LanguageIndex;                                           // 0x0034(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              MarqueeDirection;                                        // 0x0038(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              TextAbbr;                                                // 0x0048(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarTables_LanguageSwitcher
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FSolarTables_LanguageSwitcher : public FSolarTablesDataBase
	{
	public:
		TMap<class FString, struct FSolarTablesData_LanguageSwitcher> Data;                                                    // 0x0010(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct Solarland.SolarTablesData_Localization
	 * Size -> 0x0158 (FullSize[0x0168] - InheritedSize[0x0010])
	 */
	struct FSolarTablesData_Localization : public FSolarTablesDataBase
	{
	public:
		int32_t                                                    ID;                                                      // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1J97[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              zh_CN;                                                   // 0x0018(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              en;                                                      // 0x0028(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              pt;                                                      // 0x0038(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ind;                                                     // 0x0048(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              zh_TW;                                                   // 0x0058(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ja;                                                      // 0x0068(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ko;                                                      // 0x0078(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              fr;                                                      // 0x0088(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              de;                                                      // 0x0098(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ru;                                                      // 0x00A8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ar;                                                      // 0x00B8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              tr;                                                      // 0x00C8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              tl;                                                      // 0x00D8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              es;                                                      // 0x00E8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              hi;                                                      // 0x00F8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              vi;                                                      // 0x0108(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              th;                                                      // 0x0118(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              it;                                                      // 0x0128(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              pl;                                                      // 0x0138(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              po;                                                      // 0x0148(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Op;                                                      // 0x0158(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarTables_Localization
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FSolarTables_Localization : public FSolarTablesDataBase
	{
	public:
		TMap<int32_t, struct FSolarTablesData_Localization>        Data;                                                    // 0x0010(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct Solarland.SolarTablesData_Localization_BattleUI
	 * Size -> 0x0158 (FullSize[0x0168] - InheritedSize[0x0010])
	 */
	struct FSolarTablesData_Localization_BattleUI : public FSolarTablesDataBase
	{
	public:
		int32_t                                                    ID;                                                      // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4WL2[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              zh_CN;                                                   // 0x0018(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              en;                                                      // 0x0028(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              pt;                                                      // 0x0038(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ind;                                                     // 0x0048(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              zh_TW;                                                   // 0x0058(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ja;                                                      // 0x0068(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ko;                                                      // 0x0078(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              fr;                                                      // 0x0088(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              de;                                                      // 0x0098(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ru;                                                      // 0x00A8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ar;                                                      // 0x00B8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              tr;                                                      // 0x00C8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              tl;                                                      // 0x00D8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              es;                                                      // 0x00E8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              hi;                                                      // 0x00F8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              vi;                                                      // 0x0108(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              th;                                                      // 0x0118(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              it;                                                      // 0x0128(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              pl;                                                      // 0x0138(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              po;                                                      // 0x0148(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Op;                                                      // 0x0158(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarTables_Localization_BattleUI
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FSolarTables_Localization_BattleUI : public FSolarTablesDataBase
	{
	public:
		TMap<int32_t, struct FSolarTablesData_Localization_BattleUI> Data;                                                    // 0x0010(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct Solarland.SolarTablesData_Localization_EventSystem
	 * Size -> 0x0158 (FullSize[0x0168] - InheritedSize[0x0010])
	 */
	struct FSolarTablesData_Localization_EventSystem : public FSolarTablesDataBase
	{
	public:
		int32_t                                                    ID;                                                      // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_35DR[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              zh_CN;                                                   // 0x0018(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              en;                                                      // 0x0028(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              pt;                                                      // 0x0038(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ind;                                                     // 0x0048(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              zh_TW;                                                   // 0x0058(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ja;                                                      // 0x0068(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ko;                                                      // 0x0078(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              fr;                                                      // 0x0088(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              de;                                                      // 0x0098(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ru;                                                      // 0x00A8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ar;                                                      // 0x00B8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              tr;                                                      // 0x00C8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              tl;                                                      // 0x00D8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              es;                                                      // 0x00E8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              hi;                                                      // 0x00F8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              vi;                                                      // 0x0108(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              th;                                                      // 0x0118(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              it;                                                      // 0x0128(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              pl;                                                      // 0x0138(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              po;                                                      // 0x0148(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Op;                                                      // 0x0158(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarTables_Localization_EventSystem
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FSolarTables_Localization_EventSystem : public FSolarTablesDataBase
	{
	public:
		TMap<int32_t, struct FSolarTablesData_Localization_EventSystem> Data;                                                    // 0x0010(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct Solarland.SolarTablesData_Localization_General
	 * Size -> 0x0158 (FullSize[0x0168] - InheritedSize[0x0010])
	 */
	struct FSolarTablesData_Localization_General : public FSolarTablesDataBase
	{
	public:
		int32_t                                                    ID;                                                      // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MJLB[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              zh_CN;                                                   // 0x0018(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              en;                                                      // 0x0028(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              pt;                                                      // 0x0038(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ind;                                                     // 0x0048(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              zh_TW;                                                   // 0x0058(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ja;                                                      // 0x0068(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ko;                                                      // 0x0078(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              fr;                                                      // 0x0088(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              de;                                                      // 0x0098(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ru;                                                      // 0x00A8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ar;                                                      // 0x00B8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              tr;                                                      // 0x00C8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              tl;                                                      // 0x00D8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              es;                                                      // 0x00E8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              hi;                                                      // 0x00F8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              vi;                                                      // 0x0108(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              th;                                                      // 0x0118(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              it;                                                      // 0x0128(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              pl;                                                      // 0x0138(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              po;                                                      // 0x0148(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Op;                                                      // 0x0158(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarTables_Localization_General
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FSolarTables_Localization_General : public FSolarTablesDataBase
	{
	public:
		TMap<int32_t, struct FSolarTablesData_Localization_General> Data;                                                    // 0x0010(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct Solarland.SolarTablesData_Localization_Heroes
	 * Size -> 0x0158 (FullSize[0x0168] - InheritedSize[0x0010])
	 */
	struct FSolarTablesData_Localization_Heroes : public FSolarTablesDataBase
	{
	public:
		int32_t                                                    ID;                                                      // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FEL2[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              zh_CN;                                                   // 0x0018(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              en;                                                      // 0x0028(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              pt;                                                      // 0x0038(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ind;                                                     // 0x0048(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              zh_TW;                                                   // 0x0058(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ja;                                                      // 0x0068(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ko;                                                      // 0x0078(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              fr;                                                      // 0x0088(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              de;                                                      // 0x0098(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ru;                                                      // 0x00A8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ar;                                                      // 0x00B8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              tr;                                                      // 0x00C8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              tl;                                                      // 0x00D8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              es;                                                      // 0x00E8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              hi;                                                      // 0x00F8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              vi;                                                      // 0x0108(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              th;                                                      // 0x0118(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              it;                                                      // 0x0128(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              pl;                                                      // 0x0138(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              po;                                                      // 0x0148(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Op;                                                      // 0x0158(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarTables_Localization_Heroes
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FSolarTables_Localization_Heroes : public FSolarTablesDataBase
	{
	public:
		TMap<int32_t, struct FSolarTablesData_Localization_Heroes> Data;                                                    // 0x0010(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct Solarland.SolarTablesData_Localization_Item
	 * Size -> 0x0158 (FullSize[0x0168] - InheritedSize[0x0010])
	 */
	struct FSolarTablesData_Localization_Item : public FSolarTablesDataBase
	{
	public:
		int32_t                                                    ID;                                                      // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SNDP[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              zh_CN;                                                   // 0x0018(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              en;                                                      // 0x0028(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              pt;                                                      // 0x0038(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ind;                                                     // 0x0048(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              zh_TW;                                                   // 0x0058(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ja;                                                      // 0x0068(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ko;                                                      // 0x0078(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              fr;                                                      // 0x0088(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              de;                                                      // 0x0098(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ru;                                                      // 0x00A8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ar;                                                      // 0x00B8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              tr;                                                      // 0x00C8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              tl;                                                      // 0x00D8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              es;                                                      // 0x00E8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              hi;                                                      // 0x00F8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              vi;                                                      // 0x0108(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              th;                                                      // 0x0118(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              it;                                                      // 0x0128(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              pl;                                                      // 0x0138(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              po;                                                      // 0x0148(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Op;                                                      // 0x0158(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarTables_Localization_Item
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FSolarTables_Localization_Item : public FSolarTablesDataBase
	{
	public:
		TMap<int32_t, struct FSolarTablesData_Localization_Item>   Data;                                                    // 0x0010(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct Solarland.SolarTablesData_Localization_Tournament
	 * Size -> 0x0158 (FullSize[0x0168] - InheritedSize[0x0010])
	 */
	struct FSolarTablesData_Localization_Tournament : public FSolarTablesDataBase
	{
	public:
		int32_t                                                    ID;                                                      // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_09LO[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              zh_CN;                                                   // 0x0018(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              en;                                                      // 0x0028(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              pt;                                                      // 0x0038(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ind;                                                     // 0x0048(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              zh_TW;                                                   // 0x0058(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ja;                                                      // 0x0068(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ko;                                                      // 0x0078(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              fr;                                                      // 0x0088(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              de;                                                      // 0x0098(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ru;                                                      // 0x00A8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ar;                                                      // 0x00B8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              tr;                                                      // 0x00C8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              tl;                                                      // 0x00D8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              es;                                                      // 0x00E8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              hi;                                                      // 0x00F8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              vi;                                                      // 0x0108(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              th;                                                      // 0x0118(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              it;                                                      // 0x0128(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              pl;                                                      // 0x0138(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              po;                                                      // 0x0148(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Op;                                                      // 0x0158(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarTables_Localization_Tournament
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FSolarTables_Localization_Tournament : public FSolarTablesDataBase
	{
	public:
		TMap<int32_t, struct FSolarTablesData_Localization_Tournament> Data;                                                    // 0x0010(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct Solarland.SolarTablesData_Localization_Uncategorized
	 * Size -> 0x0158 (FullSize[0x0168] - InheritedSize[0x0010])
	 */
	struct FSolarTablesData_Localization_Uncategorized : public FSolarTablesDataBase
	{
	public:
		int32_t                                                    ID;                                                      // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LP2L[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              zh_CN;                                                   // 0x0018(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              en;                                                      // 0x0028(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              pt;                                                      // 0x0038(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ind;                                                     // 0x0048(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              zh_TW;                                                   // 0x0058(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ja;                                                      // 0x0068(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ko;                                                      // 0x0078(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              fr;                                                      // 0x0088(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              de;                                                      // 0x0098(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ru;                                                      // 0x00A8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ar;                                                      // 0x00B8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              tr;                                                      // 0x00C8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              tl;                                                      // 0x00D8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              es;                                                      // 0x00E8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              hi;                                                      // 0x00F8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              vi;                                                      // 0x0108(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              th;                                                      // 0x0118(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              it;                                                      // 0x0128(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              pl;                                                      // 0x0138(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              po;                                                      // 0x0148(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Op;                                                      // 0x0158(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarTables_Localization_Uncategorized
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FSolarTables_Localization_Uncategorized : public FSolarTablesDataBase
	{
	public:
		TMap<int32_t, struct FSolarTablesData_Localization_Uncategorized> Data;                                                    // 0x0010(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct Solarland.SolarTablesData_GameMap
	 * Size -> 0x00B0 (FullSize[0x00C0] - InheritedSize[0x0010])
	 */
	struct FSolarTablesData_GameMap : public FSolarTablesDataBase
	{
	public:
		int32_t                                                    ID;                                                      // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSolarTablesLocalText                               Name;                                                    // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic
		class FString                                              MapName;                                                 // 0x0018(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ResPath;                                                 // 0x0028(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MapImage;                                                // 0x0038(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JAZP[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<float>                                              MapImageSize;                                            // 0x0040(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<float>                                              MapTopLeftCoord;                                         // 0x0050(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<float>                                              MapRightBottomCoord;                                     // 0x0060(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<int32_t>                                            LocationIcon;                                            // 0x0070(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class FString>                                      ItemSubLevels;                                           // 0x0080(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HorizonLineZ;                                            // 0x0090(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TopZ;                                                    // 0x0094(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BottomZ;                                                 // 0x0098(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AverageZ;                                                // 0x009C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      InitFogZ;                                                // 0x00A0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TargetFogZ;                                              // 0x00A4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MapFOV;                                                  // 0x00A8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Speed1;                                                  // 0x00AC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Speed2;                                                  // 0x00B0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MapFOV1;                                                 // 0x00B4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MapFOV2;                                                 // 0x00B8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MJ4V[0x4];                                   // 0x00BC(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.SolarTables_GameMap
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FSolarTables_GameMap : public FSolarTablesDataBase
	{
	public:
		TMap<int32_t, struct FSolarTablesData_GameMap>             Data;                                                    // 0x0010(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct Solarland.SolarTablesData_MapMarkIcon
	 * Size -> 0x0028 (FullSize[0x0038] - InheritedSize[0x0010])
	 */
	struct FSolarTablesData_MapMarkIcon : public FSolarTablesDataBase
	{
	public:
		int32_t                                                    ID;                                                      // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_C0IJ[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              AtlasPath;                                               // 0x0018(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<float>                                              IconSize;                                                // 0x0028(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarTables_MapMarkIcon
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FSolarTables_MapMarkIcon : public FSolarTablesDataBase
	{
	public:
		TMap<int32_t, struct FSolarTablesData_MapMarkIcon>         Data;                                                    // 0x0010(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct Solarland.SolarTablesData_MatchRule
	 * Size -> 0x0060 (FullSize[0x0070] - InheritedSize[0x0010])
	 */
	struct FSolarTablesData_MatchRule : public FSolarTablesDataBase
	{
	public:
		int32_t                                                    ID;                                                      // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MatchType;                                               // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MinPlayer;                                               // 0x0018(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaxPlayer;                                               // 0x001C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    NumMode;                                                 // 0x0020(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    StopMatchTime;                                           // 0x0024(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<int32_t>                                            PlayerStructure;                                         // 0x0028(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MinGroup;                                                // 0x0038(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    EloSettleType;                                           // 0x003C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RankSettleType;                                          // 0x0040(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    groupid;                                                 // 0x0044(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RankGroupNameID;                                         // 0x0048(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       MatchSameBattle;                                         // 0x004C(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GMT8[0x3];                                   // 0x004D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    KeepMatchTimeID;                                         // 0x0050(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    OBNum;                                                   // 0x0054(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       MaxPlayerStopMatch;                                      // 0x0058(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_L687[0x3];                                   // 0x0059(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    StatisticsType;                                          // 0x005C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    HistoryModeType;                                         // 0x0060(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       HeroCombatAbility;                                       // 0x0064(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_61FI[0x3];                                   // 0x0065(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    RestartMatchTime;                                        // 0x0068(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UKLH[0x4];                                   // 0x006C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.SolarTables_MatchRule
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FSolarTables_MatchRule : public FSolarTablesDataBase
	{
	public:
		TMap<int32_t, struct FSolarTablesData_MatchRule>           Data;                                                    // 0x0010(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct Solarland.SolarTablesData_RankMatch
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FSolarTablesData_RankMatch : public FSolarTablesDataBase
	{
	public:
		int32_t                                                    ID;                                                      // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MatchType;                                               // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    NumOfAI;                                                 // 0x0018(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    AiLevel;                                                 // 0x001C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              AILevelConfig;                                           // 0x0020(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    AITeamPresetsID;                                         // 0x0030(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       EnableTeamManager;                                       // 0x0034(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4BGL[0x3];                                   // 0x0035(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<int32_t>                                            MLApplication;                                           // 0x0038(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MLApply;                                                 // 0x0048(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaxWait;                                                 // 0x004C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    StopMatchTime;                                           // 0x0050(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       HasAITeammate;                                           // 0x0054(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       AIAccompany;                                             // 0x0055(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KDJQ[0x2];                                   // 0x0056(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    AIAccompanyTimeline;                                     // 0x0058(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MinPlayer;                                               // 0x005C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarTables_RankMatch
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FSolarTables_RankMatch : public FSolarTablesDataBase
	{
	public:
		TMap<int32_t, struct FSolarTablesData_RankMatch>           Data;                                                    // 0x0010(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct Solarland.SolarTablesData_NameCardBackground
	 * Size -> 0x0038 (FullSize[0x0048] - InheritedSize[0x0010])
	 */
	struct FSolarTablesData_NameCardBackground : public FSolarTablesDataBase
	{
	public:
		int32_t                                                    ID;                                                      // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ItemID;                                                  // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSolarTablesLocalText                               Name;                                                    // 0x0018(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic
		int32_t                                                    ShopID;                                                  // 0x001C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Exclusive;                                               // 0x0020(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    IsAIEquiped;                                             // 0x0024(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              BackgroundPath;                                          // 0x0028(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              BackgroundTexturePath;                                   // 0x0038(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarTables_NameCardBackground
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FSolarTables_NameCardBackground : public FSolarTablesDataBase
	{
	public:
		TMap<int32_t, struct FSolarTablesData_NameCardBackground>  Data;                                                    // 0x0010(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct Solarland.SolarTablesData_NameCardPose
	 * Size -> 0x0068 (FullSize[0x0078] - InheritedSize[0x0010])
	 */
	struct FSolarTablesData_NameCardPose : public FSolarTablesDataBase
	{
	public:
		int32_t                                                    ID;                                                      // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ItemID;                                                  // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSolarTablesLocalText                               Name;                                                    // 0x0018(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic
		int32_t                                                    ShopID;                                                  // 0x001C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Exclusive;                                               // 0x0020(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    IsAIEquiped;                                             // 0x0024(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              PosePath;                                                // 0x0028(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              PosePath_M;                                              // 0x0038(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              PosePath_F;                                              // 0x0048(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              PosePath_MCP;                                            // 0x0058(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              PosePath_FFM;                                            // 0x0068(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarTables_NameCardPose
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FSolarTables_NameCardPose : public FSolarTablesDataBase
	{
	public:
		TMap<int32_t, struct FSolarTablesData_NameCardPose>        Data;                                                    // 0x0010(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct Solarland.SolarTablesData_ObGift
	 * Size -> 0x0060 (FullSize[0x0070] - InheritedSize[0x0010])
	 */
	struct FSolarTablesData_ObGift : public FSolarTablesDataBase
	{
	public:
		int32_t                                                    ID;                                                      // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    gift_type;                                               // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              item_name;                                               // 0x0018(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              item_back_res;                                           // 0x0028(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              item_text_res;                                           // 0x0038(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    gift_hot_num;                                            // 0x0048(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    currency_type;                                           // 0x004C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    item_price;                                              // 0x0050(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      item_back;                                               // 0x0054(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    item_show_time;                                          // 0x0058(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    item_id;                                                 // 0x005C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    small_time;                                              // 0x0060(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    interact_num;                                            // 0x0064(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CD;                                                      // 0x0068(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_R93B[0x4];                                   // 0x006C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.SolarTables_ObGift
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FSolarTables_ObGift : public FSolarTablesDataBase
	{
	public:
		TMap<int32_t, struct FSolarTablesData_ObGift>              Data;                                                    // 0x0010(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct Solarland.SolarTablesData_OBSubtitle_Action2Feature
	 * Size -> 0x0038 (FullSize[0x0048] - InheritedSize[0x0010])
	 */
	struct FSolarTablesData_OBSubtitle_Action2Feature : public FSolarTablesDataBase
	{
	public:
		int32_t                                                    ID;                                                      // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ITD0[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              ActionName;                                              // 0x0018(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Priority;                                                // 0x0028(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    DefualtEmotion;                                          // 0x002C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaxSuccessiveCount;                                      // 0x0030(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_L6GA[0x4];                                   // 0x0034(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<int32_t>                                            FeatureList;                                             // 0x0038(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarTables_OBSubtitle_Action2Feature
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FSolarTables_OBSubtitle_Action2Feature : public FSolarTablesDataBase
	{
	public:
		TMap<int32_t, struct FSolarTablesData_OBSubtitle_Action2Feature> Data;                                                    // 0x0010(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct Solarland.SolarTablesData_OBSubtitle_Feature2Emotion
	 * Size -> 0x0028 (FullSize[0x0038] - InheritedSize[0x0010])
	 */
	struct FSolarTablesData_OBSubtitle_Feature2Emotion : public FSolarTablesDataBase
	{
	public:
		int32_t                                                    ID;                                                      // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6NR7[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              FeatureName;                                             // 0x0018(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<int32_t>                                            EmotionList;                                             // 0x0028(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarTables_OBSubtitle_Feature2Emotion
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FSolarTables_OBSubtitle_Feature2Emotion : public FSolarTablesDataBase
	{
	public:
		TMap<int32_t, struct FSolarTablesData_OBSubtitle_Feature2Emotion> Data;                                                    // 0x0010(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct Solarland.SolarTablesData_OBSubtitle_Emotion2Pattern
	 * Size -> 0x0018 (FullSize[0x0028] - InheritedSize[0x0010])
	 */
	struct FSolarTablesData_OBSubtitle_Emotion2Pattern : public FSolarTablesDataBase
	{
	public:
		int32_t                                                    ID;                                                      // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    EmotionLevel;                                            // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<int32_t>                                            PatternList;                                             // 0x0018(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarTables_OBSubtitle_Emotion2Pattern
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FSolarTables_OBSubtitle_Emotion2Pattern : public FSolarTablesDataBase
	{
	public:
		TMap<int32_t, struct FSolarTablesData_OBSubtitle_Emotion2Pattern> Data;                                                    // 0x0010(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct Solarland.SolarTablesData_OBSubtitle_Pattern2Subtitle
	 * Size -> 0x0028 (FullSize[0x0038] - InheritedSize[0x0010])
	 */
	struct FSolarTablesData_OBSubtitle_Pattern2Subtitle : public FSolarTablesDataBase
	{
	public:
		int32_t                                                    ID;                                                      // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZJDQ[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSolarTablesLocalText>                       SubTitleList;                                            // 0x0018(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<int32_t>                                            ENLengthList;                                            // 0x0028(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarTables_OBSubtitle_Pattern2Subtitle
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FSolarTables_OBSubtitle_Pattern2Subtitle : public FSolarTablesDataBase
	{
	public:
		TMap<int32_t, struct FSolarTablesData_OBSubtitle_Pattern2Subtitle> Data;                                                    // 0x0010(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct Solarland.SolarTablesData_Outcome
	 * Size -> 0x0060 (FullSize[0x0070] - InheritedSize[0x0010])
	 */
	struct FSolarTablesData_Outcome : public FSolarTablesDataBase
	{
	public:
		int32_t                                                    ID;                                                      // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    OutcomeType;                                             // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaxTimes;                                                // 0x0018(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MinTimes;                                                // 0x001C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<int32_t>                                            Contents;                                                // 0x0020(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<int32_t>                                            LimitId;                                                 // 0x0030(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<int32_t>                                            LimitIdMax;                                              // 0x0040(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<int32_t>                                            LimitIdMin;                                              // 0x0050(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Refresh;                                                 // 0x0060(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarTables_Outcome
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FSolarTables_Outcome : public FSolarTablesDataBase
	{
	public:
		TMap<int32_t, struct FSolarTablesData_Outcome>             Data;                                                    // 0x0010(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct Solarland.SolarTablesData_OutcomeContent
	 * Size -> 0x0030 (FullSize[0x0040] - InheritedSize[0x0010])
	 */
	struct FSolarTablesData_OutcomeContent : public FSolarTablesDataBase
	{
	public:
		int32_t                                                    ID;                                                      // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ItemID;                                                  // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Weight;                                                  // 0x0018(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZS8B[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<int32_t>                                            RandomNum;                                               // 0x0020(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaxTimes;                                                // 0x0030(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MinTimes;                                                // 0x0034(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RelatedContentID;                                        // 0x0038(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9G24[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.SolarTables_OutcomeContent
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FSolarTables_OutcomeContent : public FSolarTablesDataBase
	{
	public:
		TMap<int32_t, struct FSolarTablesData_OutcomeContent>      Data;                                                    // 0x0010(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct Solarland.SolarTablesData_PickupPriorityItem
	 * Size -> 0x0010 (FullSize[0x0020] - InheritedSize[0x0010])
	 */
	struct FSolarTablesData_PickupPriorityItem : public FSolarTablesDataBase
	{
	public:
		int32_t                                                    ID;                                                      // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    PriorityValue;                                           // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MutiAutoPickup;                                          // 0x0018(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_R77M[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.SolarTables_PickupPriorityItem
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FSolarTables_PickupPriorityItem : public FSolarTablesDataBase
	{
	public:
		TMap<int32_t, struct FSolarTablesData_PickupPriorityItem>  Data;                                                    // 0x0010(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct Solarland.SolarTablesData_PickupPriorityWeaponPart
	 * Size -> 0x0008 (FullSize[0x0018] - InheritedSize[0x0010])
	 */
	struct FSolarTablesData_PickupPriorityWeaponPart : public FSolarTablesDataBase
	{
	public:
		int32_t                                                    ID;                                                      // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    PriorityValue;                                           // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarTables_PickupPriorityWeaponPart
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FSolarTables_PickupPriorityWeaponPart : public FSolarTablesDataBase
	{
	public:
		TMap<int32_t, struct FSolarTablesData_PickupPriorityWeaponPart> Data;                                                    // 0x0010(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct Solarland.SolarTablesData_CharacterVoiceover
	 * Size -> 0x0028 (FullSize[0x0038] - InheritedSize[0x0010])
	 */
	struct FSolarTablesData_CharacterVoiceover : public FSolarTablesDataBase
	{
	public:
		int32_t                                                    ID;                                                      // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    QuickVoiceID;                                            // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CharacterId;                                             // 0x0018(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SkinId;                                                  // 0x001C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              AudioEventName;                                          // 0x0020(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    LocalizationID;                                          // 0x0030(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_L124[0x4];                                   // 0x0034(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.SolarTables_CharacterVoiceover
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FSolarTables_CharacterVoiceover : public FSolarTablesDataBase
	{
	public:
		TMap<int32_t, struct FSolarTablesData_CharacterVoiceover>  Data;                                                    // 0x0010(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct Solarland.SolarTablesData_QuickChat
	 * Size -> 0x0148 (FullSize[0x0158] - InheritedSize[0x0010])
	 */
	struct FSolarTablesData_QuickChat : public FSolarTablesDataBase
	{
	public:
		int32_t                                                    ID;                                                      // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    LocalizationID;                                          // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              zh_CN;                                                   // 0x0018(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              en;                                                      // 0x0028(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              pt;                                                      // 0x0038(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ind;                                                     // 0x0048(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              fr;                                                      // 0x0058(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              de;                                                      // 0x0068(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ru;                                                      // 0x0078(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ar;                                                      // 0x0088(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              es;                                                      // 0x0098(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              hi;                                                      // 0x00A8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              it;                                                      // 0x00B8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ja;                                                      // 0x00C8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ko;                                                      // 0x00D8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ms;                                                      // 0x00E8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              pl;                                                      // 0x00F8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              th;                                                      // 0x0108(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              tl;                                                      // 0x0118(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              tr;                                                      // 0x0128(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              vi;                                                      // 0x0138(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              zh_TW;                                                   // 0x0148(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarTables_QuickChat
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FSolarTables_QuickChat : public FSolarTablesDataBase
	{
	public:
		TMap<int32_t, struct FSolarTablesData_QuickChat>           Data;                                                    // 0x0010(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct Solarland.SolarTablesData_QuickVoice
	 * Size -> 0x0060 (FullSize[0x0070] - InheritedSize[0x0010])
	 */
	struct FSolarTablesData_QuickVoice : public FSolarTablesDataBase
	{
	public:
		int32_t                                                    ID;                                                      // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FI0D[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              Icon;                                                    // 0x0018(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    LocalizationID;                                          // 0x0028(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GIEN[0x4];                                   // 0x002C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              AudioEventName;                                          // 0x0030(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              AudioEventNameFemale;                                    // 0x0040(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    IsMarkIcon;                                              // 0x0050(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    PassiveTriggeredCD;                                      // 0x0054(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    PassiveTriggeredProb;                                    // 0x0058(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AXAN[0x4];                                   // 0x005C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              ReplyMessageID;                                          // 0x0060(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarTables_QuickVoice
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FSolarTables_QuickVoice : public FSolarTablesDataBase
	{
	public:
		TMap<int32_t, struct FSolarTablesData_QuickVoice>          Data;                                                    // 0x0010(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct Solarland.SolarTablesData_VODownload
	 * Size -> 0x0048 (FullSize[0x0058] - InheritedSize[0x0010])
	 */
	struct FSolarTablesData_VODownload : public FSolarTablesDataBase
	{
	public:
		int32_t                                                    ID;                                                      // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MNMJ[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              ChunkDir;                                                // 0x0018(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ChunkID;                                                 // 0x0028(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_W861[0x4];                                   // 0x002C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              ButtonText;                                              // 0x0030(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    LanguageIndex;                                           // 0x0040(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    IsDefaultChunk;                                          // 0x0044(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              WwiseLanguageCode;                                       // 0x0048(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarTables_VODownload
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FSolarTables_VODownload : public FSolarTablesDataBase
	{
	public:
		TMap<int32_t, struct FSolarTablesData_VODownload>          Data;                                                    // 0x0010(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct Solarland.SolarTablesData_RankLevel
	 * Size -> 0x0070 (FullSize[0x0080] - InheritedSize[0x0010])
	 */
	struct FSolarTablesData_RankLevel : public FSolarTablesDataBase
	{
	public:
		int32_t                                                    ID;                                                      // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RankID;                                                  // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSolarTablesLocalText                               RankName;                                                // 0x0018(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic
		struct FSolarTablesLocalText                               Name;                                                    // 0x001C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic
		int32_t                                                    LevelID;                                                 // 0x0020(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RankStart;                                               // 0x0024(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RankEnd;                                                 // 0x0028(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RankProtect;                                             // 0x002C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    FrustrationValue;                                        // 0x0030(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RankReduce;                                              // 0x0034(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Icon;                                                    // 0x0038(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Icon_s;                                                  // 0x0048(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              IconWord;                                                // 0x0058(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              IconWord_s;                                              // 0x0068(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RandomLowerLimit;                                        // 0x0078(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RandomUpLimit;                                           // 0x007C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarTables_RankLevel
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FSolarTables_RankLevel : public FSolarTablesDataBase
	{
	public:
		TMap<int32_t, struct FSolarTablesData_RankLevel>           Data;                                                    // 0x0010(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct Solarland.SolarTablesData_AutoDirector
	 * Size -> 0x0020 (FullSize[0x0030] - InheritedSize[0x0010])
	 */
	struct FSolarTablesData_AutoDirector : public FSolarTablesDataBase
	{
	public:
		int32_t                                                    ID;                                                      // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SpectateAreaRadius;                                      // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CollectScoreWindow;                                      // 0x0018(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinFocusTime;                                            // 0x001C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxFocusTime;                                            // 0x0020(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      NewCutThreshold;                                         // 0x0024(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PreFreeCameraTime;                                       // 0x0028(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    AutoDirectorMinEnableTime;                               // 0x002C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarTables_AutoDirector
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FSolarTables_AutoDirector : public FSolarTablesDataBase
	{
	public:
		TMap<int32_t, struct FSolarTablesData_AutoDirector>        Data;                                                    // 0x0010(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct Solarland.SolarTablesData_AutoDirectorActivityScore
	 * Size -> 0x0008 (FullSize[0x0018] - InheritedSize[0x0010])
	 */
	struct FSolarTablesData_AutoDirectorActivityScore : public FSolarTablesDataBase
	{
	public:
		int32_t                                                    ID;                                                      // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Score;                                                   // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarTables_AutoDirectorActivityScore
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FSolarTables_AutoDirectorActivityScore : public FSolarTablesDataBase
	{
	public:
		TMap<int32_t, struct FSolarTablesData_AutoDirectorActivityScore> Data;                                                    // 0x0010(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct Solarland.SolarTablesData_CircularCameras
	 * Size -> 0x0020 (FullSize[0x0030] - InheritedSize[0x0010])
	 */
	struct FSolarTablesData_CircularCameras : public FSolarTablesDataBase
	{
	public:
		int32_t                                                    ID;                                                      // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MiniDistance;                                            // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BorderRatio;                                             // 0x0018(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    FOV;                                                     // 0x001C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Pitch;                                                   // 0x0020(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    InitAngleWithMainDir;                                    // 0x0024(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BlendAlpha;                                              // 0x0028(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AngularSpeed;                                            // 0x002C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarTables_CircularCameras
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FSolarTables_CircularCameras : public FSolarTablesDataBase
	{
	public:
		TMap<int32_t, struct FSolarTablesData_CircularCameras>     Data;                                                    // 0x0010(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct Solarland.SolarTablesData_HotSpot
	 * Size -> 0x0020 (FullSize[0x0030] - InheritedSize[0x0010])
	 */
	struct FSolarTablesData_HotSpot : public FSolarTablesDataBase
	{
	public:
		int32_t                                                    ID;                                                      // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_17Z6[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              UIResource;                                              // 0x0018(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      JumpTime;                                                // 0x0028(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KR7L[0x4];                                   // 0x002C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.SolarTables_HotSpot
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FSolarTables_HotSpot : public FSolarTablesDataBase
	{
	public:
		TMap<int32_t, struct FSolarTablesData_HotSpot>             Data;                                                    // 0x0010(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct Solarland.SolarTablesData_LookAtCameras
	 * Size -> 0x0020 (FullSize[0x0030] - InheritedSize[0x0010])
	 */
	struct FSolarTablesData_LookAtCameras : public FSolarTablesDataBase
	{
	public:
		int32_t                                                    ID;                                                      // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MiniDistance;                                            // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BorderRatio;                                             // 0x0018(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    FOV;                                                     // 0x001C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Pitch;                                                   // 0x0020(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    InitAngleWithMainDir;                                    // 0x0024(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BlendAlpha;                                              // 0x0028(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_B6R0[0x4];                                   // 0x002C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.SolarTables_LookAtCameras
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FSolarTables_LookAtCameras : public FSolarTablesDataBase
	{
	public:
		TMap<int32_t, struct FSolarTablesData_LookAtCameras>       Data;                                                    // 0x0010(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct Solarland.SolarTablesData_Rescue
	 * Size -> 0x0058 (FullSize[0x0068] - InheritedSize[0x0010])
	 */
	struct FSolarTablesData_Rescue : public FSolarTablesDataBase
	{
	public:
		int32_t                                                    ID;                                                      // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RescueMaxDistance;                                       // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FallenHp;                                                // 0x0018(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RescueRecoveryHp;                                        // 0x001C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RescueTime;                                              // 0x0020(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8YLS[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<float>                                              FallenLossHp;                                            // 0x0028(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<float>                                              FallenMoveLossHp;                                        // 0x0038(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FallenMoveSpeed;                                         // 0x0048(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RescueMoveSpeed;                                         // 0x004C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      InvincibleTime;                                          // 0x0050(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxRescueAngle;                                          // 0x0054(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RemindRescueCooldownTime;                                // 0x0058(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RemindRescueSoundCD;                                     // 0x005C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RemindRescueSoundIndex;                                  // 0x0060(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_H25V[0x4];                                   // 0x0064(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.SolarTables_Rescue
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FSolarTables_Rescue : public FSolarTablesDataBase
	{
	public:
		TMap<int32_t, struct FSolarTablesData_Rescue>              Data;                                                    // 0x0010(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct Solarland.SolarTablesData_Skin
	 * Size -> 0x00D8 (FullSize[0x00E8] - InheritedSize[0x0010])
	 */
	struct FSolarTablesData_Skin : public FSolarTablesDataBase
	{
	public:
		int32_t                                                    ID;                                                      // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CharaId;                                                 // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSolarTablesLocalText                               Name;                                                    // 0x0018(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       IfShow;                                                  // 0x001C(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9E5G[0x3];                                   // 0x001D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              BeginTime;                                               // 0x0020(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ShopPropertyid;                                          // 0x0030(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ItemID;                                                  // 0x0034(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              MVPDataAssetPath;                                        // 0x0038(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              MVPSequencePath;                                         // 0x0048(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SceneId;                                                 // 0x0058(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsMVP;                                                   // 0x005C(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QWXH[0x3];                                   // 0x005D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              CharacterSkinResource;                                   // 0x0060(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              CharacterLobbySkinResource;                              // 0x0070(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ChunkDir;                                                // 0x0080(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ChunkID;                                                 // 0x0090(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UU6T[0x4];                                   // 0x0094(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              CharacterLowSkinResource;                                // 0x0098(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<int32_t>                                            CharacterPrologue;                                       // 0x00A8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              CharacterProtrait;                                       // 0x00B8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SkinSort;                                                // 0x00C8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MVPSettlementStartFrame;                                 // 0x00CC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MVPSettlementEndFrame;                                   // 0x00D0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MVPAnchorPoint;                                          // 0x00D4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              IdleShowSequencePath;                                    // 0x00D8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarTables_Skin
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FSolarTables_Skin : public FSolarTablesDataBase
	{
	public:
		TMap<int32_t, struct FSolarTablesData_Skin>                Data;                                                    // 0x0010(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct Solarland.SolarTablesData_Achievement
	 * Size -> 0x0070 (FullSize[0x0080] - InheritedSize[0x0010])
	 */
	struct FSolarTablesData_Achievement : public FSolarTablesDataBase
	{
	public:
		int32_t                                                    ID;                                                      // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Order;                                                   // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSolarTablesLocalText                               AchieveName;                                             // 0x0018(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic
		int32_t                                                    AchieveTab;                                              // 0x001C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    AchieveType;                                             // 0x0020(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    AchieveScore;                                            // 0x0024(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<int32_t>                                            AwardList;                                               // 0x0028(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              AchieveIcon;                                             // 0x0038(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              AchieveIconS;                                            // 0x0048(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    AchieveTask;                                             // 0x0058(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_X4AS[0x4];                                   // 0x005C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<int32_t>                                            AchieveTV;                                               // 0x0060(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    AchieveTT;                                               // 0x0070(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ReportType;                                              // 0x0074(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSolarTablesLocalText                               AchieveTC;                                               // 0x0078(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8664[0x4];                                   // 0x007C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.SolarTables_Achievement
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FSolarTables_Achievement : public FSolarTablesDataBase
	{
	public:
		TMap<int32_t, struct FSolarTablesData_Achievement>         Data;                                                    // 0x0010(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct Solarland.SolarTablesData_TaskProgress
	 * Size -> 0x0008 (FullSize[0x0018] - InheritedSize[0x0010])
	 */
	struct FSolarTablesData_TaskProgress : public FSolarTablesDataBase
	{
	public:
		int32_t                                                    ID;                                                      // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    isRefresh;                                               // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarTables_TaskProgress
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FSolarTables_TaskProgress : public FSolarTablesDataBase
	{
	public:
		TMap<int32_t, struct FSolarTablesData_TaskProgress>        Data;                                                    // 0x0010(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct Solarland.SolarTablesData_TaskSystem
	 * Size -> 0x00A8 (FullSize[0x00B8] - InheritedSize[0x0010])
	 */
	struct FSolarTablesData_TaskSystem : public FSolarTablesDataBase
	{
	public:
		int32_t                                                    ID;                                                      // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    taskDesc;                                                // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Task;                                                    // 0x0018(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    TaskType;                                                // 0x001C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              cond1_sheet;                                             // 0x0020(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    cond1;                                                   // 0x0030(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5NM9[0x4];                                   // 0x0034(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              cond2_sheet;                                             // 0x0038(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    cond2;                                                   // 0x0048(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3E9B[0x4];                                   // 0x004C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              cond3_sheet;                                             // 0x0050(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    cond3;                                                   // 0x0060(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Target;                                                  // 0x0064(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<int32_t>                                            Item;                                                    // 0x0068(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MinLevel;                                                // 0x0078(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IA2Y[0x4];                                   // 0x007C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<int32_t>                                            link;                                                    // 0x0080(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Weight;                                                  // 0x0090(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    sort;                                                    // 0x0094(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       Progress;                                                // 0x0098(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       isCircle;                                                // 0x0099(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_S24I[0x2];                                   // 0x009A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    circleTimes;                                             // 0x009C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    resetType;                                               // 0x00A0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YY8M[0x4];                                   // 0x00A4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<int32_t>                                            taskTips;                                                // 0x00A8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarTables_TaskSystem
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FSolarTables_TaskSystem : public FSolarTablesDataBase
	{
	public:
		TMap<int32_t, struct FSolarTablesData_TaskSystem>          Data;                                                    // 0x0010(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct Solarland.SolarTablesData_PlayerOperationListLayout
	 * Size -> 0x0038 (FullSize[0x0048] - InheritedSize[0x0010])
	 */
	struct FSolarTablesData_PlayerOperationListLayout : public FSolarTablesDataBase
	{
	public:
		int32_t                                                    ID;                                                      // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OL18[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              UIName;                                                  // 0x0018(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Normal;                                                  // 0x0028(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Driver;                                                  // 0x002C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Passgner;                                                // 0x0030(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    EquipVehicleWeapon;                                      // 0x0034(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Cruising;                                                // 0x0038(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Parachuting;                                             // 0x003C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Swimming;                                                // 0x0040(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AOLL[0x4];                                   // 0x0044(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.SolarTables_PlayerOperationListLayout
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FSolarTables_PlayerOperationListLayout : public FSolarTablesDataBase
	{
	public:
		TMap<int32_t, struct FSolarTablesData_PlayerOperationListLayout> Data;                                                    // 0x0010(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct Solarland.SolarTablesData_Variables
	 * Size -> 0x0020 (FullSize[0x0030] - InheritedSize[0x0010])
	 */
	struct FSolarTablesData_Variables : public FSolarTablesDataBase
	{
	public:
		class FString                                              ID;                                                      // 0x0010(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Value;                                                   // 0x0020(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarTables_Variables
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FSolarTables_Variables : public FSolarTablesDataBase
	{
	public:
		TMap<class FString, struct FSolarTablesData_Variables>     Data;                                                    // 0x0010(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct Solarland.SolarTablesData_Vehicle
	 * Size -> 0x0020 (FullSize[0x0030] - InheritedSize[0x0010])
	 */
	struct FSolarTablesData_Vehicle : public FSolarTablesDataBase
	{
	public:
		int32_t                                                    ID;                                                      // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSolarTablesLocalText                               Name;                                                    // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic
		class FString                                              VehicleBP;                                               // 0x0018(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    groupid;                                                 // 0x0028(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    VehicleTypeID;                                           // 0x002C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarTables_Vehicle
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FSolarTables_Vehicle : public FSolarTablesDataBase
	{
	public:
		TMap<int32_t, struct FSolarTablesData_Vehicle>             Data;                                                    // 0x0010(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct Solarland.SolarTablesData_VehicleSkin
	 * Size -> 0x0080 (FullSize[0x0090] - InheritedSize[0x0010])
	 */
	struct FSolarTablesData_VehicleSkin : public FSolarTablesDataBase
	{
	public:
		int32_t                                                    ID;                                                      // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    VehicleTypeID;                                           // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ItemID;                                                  // 0x0018(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSolarTablesLocalText                               SkinName;                                                // 0x001C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       IfShow;                                                  // 0x0020(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8UKY[0x7];                                   // 0x0021(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              BeginTime;                                               // 0x0028(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<int32_t>                                            JumpLink;                                                // 0x0038(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              VehicleSkinBPPath;                                       // 0x0048(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              VehiclePreviewBP;                                        // 0x0058(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              VehicleIcon;                                             // 0x0068(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              VehicleSound;                                            // 0x0078(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    AIRandomWeight;                                          // 0x0088(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FB6U[0x4];                                   // 0x008C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.SolarTables_VehicleSkin
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FSolarTables_VehicleSkin : public FSolarTablesDataBase
	{
	public:
		TMap<int32_t, struct FSolarTablesData_VehicleSkin>         Data;                                                    // 0x0010(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct Solarland.SolarTablesData_VehicleType
	 * Size -> 0x00E8 (FullSize[0x00F8] - InheritedSize[0x0010])
	 */
	struct FSolarTablesData_VehicleType : public FSolarTablesDataBase
	{
	public:
		int32_t                                                    ID;                                                      // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    DefaultId;                                               // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSolarTablesLocalText                               Name;                                                    // 0x0018(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OM22[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              VehicleIcon;                                             // 0x0020(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              AudioEventName;                                          // 0x0030(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    VehicleClass;                                            // 0x0040(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LobbyDurability;                                         // 0x0044(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LobbySpeed;                                              // 0x0048(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LobbyFirepower;                                          // 0x004C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LobbyControl;                                            // 0x0050(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SeatNum;                                                 // 0x0054(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<int32_t>                                            Seat1WeaponID;                                           // 0x0058(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<int32_t>                                            Seat2WeaponID;                                           // 0x0068(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<int32_t>                                            Seat3WeaponID;                                           // 0x0078(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<int32_t>                                            Seat4WeaponID;                                           // 0x0088(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<int32_t>                                            Seat1SkillID;                                            // 0x0098(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<int32_t>                                            Seat2SkillID;                                            // 0x00A8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<int32_t>                                            Seat3SkillID;                                            // 0x00B8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<int32_t>                                            Seat4SkillID;                                            // 0x00C8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              VehicleLink;                                             // 0x00D8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              SilhouetteIcon;                                          // 0x00E8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarTables_VehicleType
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FSolarTables_VehicleType : public FSolarTablesDataBase
	{
	public:
		TMap<int32_t, struct FSolarTablesData_VehicleType>         Data;                                                    // 0x0010(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct Solarland.SolarTablesData_VehicleSpawn
	 * Size -> 0x0028 (FullSize[0x0038] - InheritedSize[0x0010])
	 */
	struct FSolarTablesData_VehicleSpawn : public FSolarTablesDataBase
	{
	public:
		int32_t                                                    ID;                                                      // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4D5J[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<int32_t>                                            VehicleSet;                                              // 0x0018(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<int32_t>                                            WeightSet;                                               // 0x0028(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarTables_VehicleSpawn
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FSolarTables_VehicleSpawn : public FSolarTablesDataBase
	{
	public:
		TMap<int32_t, struct FSolarTablesData_VehicleSpawn>        Data;                                                    // 0x0010(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct Solarland.SolarTablesData_VehicleSpawnGroup
	 * Size -> 0x0088 (FullSize[0x0098] - InheritedSize[0x0010])
	 */
	struct FSolarTablesData_VehicleSpawnGroup : public FSolarTablesDataBase
	{
	public:
		int32_t                                                    ID;                                                      // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_M9SV[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<int32_t>                                            VehicleIDs;                                              // 0x0018(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<int32_t>                                            VehicleCounts;                                           // 0x0028(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<int32_t>                                            VehicleSum;                                              // 0x0038(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              VehicleWeightSet;                                        // 0x0048(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<int32_t>                                            AlternateId;                                             // 0x0058(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              AlternateType;                                           // 0x0068(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              AlternateTime;                                           // 0x0078(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              AlternateDate;                                           // 0x0088(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarTables_VehicleSpawnGroup
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FSolarTables_VehicleSpawnGroup : public FSolarTablesDataBase
	{
	public:
		TMap<int32_t, struct FSolarTablesData_VehicleSpawnGroup>   Data;                                                    // 0x0010(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct Solarland.SolarTablesData_WarmGame
	 * Size -> 0x0070 (FullSize[0x0080] - InheritedSize[0x0010])
	 */
	struct FSolarTablesData_WarmGame : public FSolarTablesDataBase
	{
	public:
		int32_t                                                    ID;                                                      // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    WarmType;                                                // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MatchType;                                               // 0x0018(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    EloStart;                                                // 0x001C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    EloEnd;                                                  // 0x0020(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    NumStart;                                                // 0x0024(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    NumEnd;                                                  // 0x0028(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    KillStart;                                               // 0x002C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    KillEnd;                                                 // 0x0030(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AA9D[0x4];                                   // 0x0034(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              WarmSubType;                                             // 0x0038(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    UniqueId;                                                // 0x0048(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XKK3[0x4];                                   // 0x004C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              Abid;                                                    // 0x0050(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              WarmGameFillCheckBox;                                    // 0x0060(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              WarmGameFillTeammate;                                    // 0x0070(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarTables_WarmGame
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FSolarTables_WarmGame : public FSolarTablesDataBase
	{
	public:
		TMap<int32_t, struct FSolarTablesData_WarmGame>            Data;                                                    // 0x0010(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct Solarland.SolarTablesData_WarmGameMode
	 * Size -> 0x0058 (FullSize[0x0068] - InheritedSize[0x0010])
	 */
	struct FSolarTablesData_WarmGameMode : public FSolarTablesDataBase
	{
	public:
		int32_t                                                    ID;                                                      // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    UniqueId;                                                // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CCUStart;                                                // 0x0018(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CCUEnd;                                                  // 0x001C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    NumOfAI;                                                 // 0x0020(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    AiLevel;                                                 // 0x0024(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              AILevelConfig;                                           // 0x0028(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    AITeamPresetsID;                                         // 0x0038(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       EnableTeamManager;                                       // 0x003C(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_F3Q2[0x3];                                   // 0x003D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    MinPlayer;                                               // 0x0040(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaxRealGroup;                                            // 0x0044(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    LeastRealPlayer;                                         // 0x0048(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaxWait;                                                 // 0x004C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       HasMonster;                                              // 0x0050(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GSNF[0x3];                                   // 0x0051(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    ReadyStateTime;                                          // 0x0054(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    StopMatchTime;                                           // 0x0058(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       HasAITeammate;                                           // 0x005C(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       AIAccompany;                                             // 0x005D(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BCRE[0x2];                                   // 0x005E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    AIAccompanyTimeline;                                     // 0x0060(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JZYU[0x4];                                   // 0x0064(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.SolarTables_WarmGameMode
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FSolarTables_WarmGameMode : public FSolarTablesDataBase
	{
	public:
		TMap<int32_t, struct FSolarTablesData_WarmGameMode>        Data;                                                    // 0x0010(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct Solarland.SolarTablesData_WeaponDamage
	 * Size -> 0x0010 (FullSize[0x0020] - InheritedSize[0x0010])
	 */
	struct FSolarTablesData_WeaponDamage : public FSolarTablesDataBase
	{
	public:
		int32_t                                                    ID;                                                      // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      NpcDamageFactor;                                         // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BotDamageFactor;                                         // 0x0018(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_F27M[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.SolarTables_WeaponDamage
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FSolarTables_WeaponDamage : public FSolarTablesDataBase
	{
	public:
		TMap<int32_t, struct FSolarTablesData_WeaponDamage>        Data;                                                    // 0x0010(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct Solarland.SolarTablesData_Weapon
	 * Size -> 0x01E0 (FullSize[0x01F0] - InheritedSize[0x0010])
	 */
	struct FSolarTablesData_Weapon : public FSolarTablesDataBase
	{
	public:
		int32_t                                                    ID;                                                      // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSolarTablesLocalText                               Name;                                                    // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic
		ESolarTablesEnum_WeaponType                                WeaponType;                                              // 0x0018(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_03BO[0x3];                                   // 0x0019(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    WeaponBrand;                                             // 0x001C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       SupportSecondaryAmmo;                                    // 0x0020(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TKNO[0x7];                                   // 0x0021(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<int32_t>                                            AccessoryID;                                             // 0x0028(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              WeaponIcon;                                              // 0x0038(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       Single;                                                  // 0x0048(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       Burst;                                                   // 0x0049(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       Automatic;                                               // 0x004A(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       OneKeyScope;                                             // 0x004B(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HitHead;                                                 // 0x004C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SecModeLimitTypeID;                                      // 0x0050(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    BurstMaxCount;                                           // 0x0054(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              WeaponDamage;                                            // 0x0058(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxSpread;                                               // 0x0068(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinSpread;                                               // 0x006C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HipFireBaseSpread;                                       // 0x0070(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      VhADSBaseSpread;                                         // 0x0074(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ADSBaseSpread;                                           // 0x0078(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SpreadStatuSpeed;                                        // 0x007C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SpreadStatuIncreaseID;                                   // 0x0080(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SpreadStatuReduceID;                                     // 0x0084(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SpreadCOPID;                                             // 0x0088(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    PrimaryAmmo;                                             // 0x008C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    PrimaryAmmoCap;                                          // 0x0090(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SecondaryAmmo;                                           // 0x0094(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SecondaryAmmoCap;                                        // 0x0098(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       CanOverload;                                             // 0x009C(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SOM9[0x3];                                   // 0x009D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      OverloadMaxValue;                                        // 0x00A0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      NormalOverloadCoolingRate;                               // 0x00A4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      OverloadCoolingPeriod;                                   // 0x00A8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      OverloadWarningRate;                                     // 0x00AC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       CanAutoFire;                                             // 0x00B0(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YPAK[0x3];                                   // 0x00B1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      AutoFireDelayMs;                                         // 0x00B4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AutoFireEndDelayMs;                                      // 0x00B8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       CanAimAssist;                                            // 0x00BC(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_J8AU[0x3];                                   // 0x00BD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<float>                                              HipSoftZone;                                             // 0x00C0(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HipAimAssistStepRatio;                                   // 0x00D0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HipMinAssistStepRatio;                                   // 0x00D4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HipAimAssistStepSpeed;                                   // 0x00D8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LFMY[0x4];                                   // 0x00DC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<float>                                              AdsSoftZone;                                             // 0x00E0(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AdsAimAssistStepRatio;                                   // 0x00F0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AdsMinAssistStepRatio;                                   // 0x00F4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AdsAimAssistStepSpeed;                                   // 0x00F8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       CanOpenScopeAimAssist;                                   // 0x00FC(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MO79[0x3];                                   // 0x00FD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      OpenScopeAimAssistStepRatio;                             // 0x0100(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      OpenScopeMinAssistStepRatio;                             // 0x0104(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      OpenScopeAssistStepSpeed;                                // 0x0108(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      OnVehicleAssistStepRatio;                                // 0x010C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Weight;                                                  // 0x0110(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HipFireSpeed;                                            // 0x0114(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ADSFireSpeed;                                            // 0x0118(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_W1EI[0x4];                                   // 0x011C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<int32_t>                                            DefaultParts;                                            // 0x0120(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ScopeOpenTime;                                           // 0x0130(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FovFactor;                                               // 0x0134(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      WeaponSwitchTime;                                        // 0x0138(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      WeaponUnequipTime;                                       // 0x013C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<int32_t>                                            PartSlots;                                               // 0x0140(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TMap<class FString, class FString>                         EquipAttributeSub;                                       // 0x0150(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		TMap<class FString, class FString>                         HoldAttributeSub;                                        // 0x01A0(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarTables_Weapon
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FSolarTables_Weapon : public FSolarTablesDataBase
	{
	public:
		TMap<int32_t, struct FSolarTablesData_Weapon>              Data;                                                    // 0x0010(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct Solarland.SolarTablesData_WeaponAmmo
	 * Size -> 0x0158 (FullSize[0x0168] - InheritedSize[0x0010])
	 */
	struct FSolarTablesData_WeaponAmmo : public FSolarTablesDataBase
	{
	public:
		int32_t                                                    ID;                                                      // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    AmmoType;                                                // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    PropID;                                                  // 0x0018(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SoundID;                                                 // 0x001C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IfTimedExplode;                                          // 0x0020(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YVB7[0x3];                                   // 0x0021(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    BounceTimes;                                             // 0x0024(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LifeTime;                                                // 0x0028(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BaseReloadTime;                                          // 0x002C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ReloadBoltTime;                                          // 0x0030(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESolarTablesEnum_FireMethodType                            FireMethodType;                                          // 0x0034(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESolarTablesEnum_TrajectoryType                            TrajectoryType;                                          // 0x0035(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5UEQ[0x2];                                   // 0x0036(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      CustomValue;                                             // 0x0038(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESolarTablesEnum_TriggerType                               TriggerType;                                             // 0x003C(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4V5A[0x3];                                   // 0x003D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MaxRange;                                                // 0x0040(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      EffRange;                                                // 0x0044(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ProjectileMaxGravity;                                    // 0x0048(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DamageMaxRange;                                          // 0x004C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DamageEffRange;                                          // 0x0050(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Radius;                                                  // 0x0054(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PostFireOverload;                                        // 0x0058(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      InitSpeed;                                               // 0x005C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FireStreakBreakTime;                                     // 0x0060(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESolarTablesEnum_FireCostType                              FireCostType;                                            // 0x0064(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_33KL[0x3];                                   // 0x0065(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    FireCostPerAttack;                                       // 0x0068(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    FireSpeedChangeTime;                                     // 0x006C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FireSpeedChangeCOP;                                      // 0x0070(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FireIntervalRevertPreTime;                               // 0x0074(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FireIntervalReavertSpeed;                                // 0x0078(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FastestFireInterval;                                     // 0x007C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SlowestFireInterval;                                     // 0x0080(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BaseFireInterval;                                        // 0x0084(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BoltActionTime;                                          // 0x0088(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BurstShootInterval;                                      // 0x008C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BurstFireInterval;                                       // 0x0090(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      StartBoltDuration;                                       // 0x0094(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       UsePrimaryModeAmmoCap;                                   // 0x0098(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       UseBag;                                                  // 0x0099(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_II8Z[0x6];                                   // 0x009A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<float>                                              SkillCDDiscountArray;                                    // 0x00A0(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SkillType;                                               // 0x00B0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      VhADSSpreadCOP;                                          // 0x00B4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ADSSpreadCOP;                                            // 0x00B8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SpreadFirePreTime;                                       // 0x00BC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SpreadPostFireSpeed;                                     // 0x00C0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SpreadRestorePreTime;                                    // 0x00C4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SpreadRestoreSpeed;                                      // 0x00C8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      VRecoilCostTime;                                         // 0x00CC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    VRecoilAPoint;                                           // 0x00D0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      VRecoilAPointMax;                                        // 0x00D4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      VRecoilAPointMin;                                        // 0x00D8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    VRecoilBPoint;                                           // 0x00DC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      VRecoilBPointMax;                                        // 0x00E0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      VRecoilBPointMin;                                        // 0x00E4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HRecoilCostTime;                                         // 0x00E8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    HRecoilAPoint;                                           // 0x00EC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HRecoilAPointMax;                                        // 0x00F0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HRecoilAPointMin;                                        // 0x00F4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    HRecoilBPoint;                                           // 0x00F8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HRecoilBPointMax;                                        // 0x00FC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HRecoilBPointMin;                                        // 0x0100(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RecoilCOP;                                               // 0x0104(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ADSRecoilCOP;                                            // 0x0108(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RollCostTime;                                            // 0x010C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RollAPoint;                                              // 0x0110(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RollBPoint;                                              // 0x0114(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RollHightestPointMax;                                    // 0x0118(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RollHightestPointMin;                                    // 0x011C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RollLowesttPointMax;                                     // 0x0120(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RollLowesttPointMin;                                     // 0x0124(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ADSRollCOP;                                              // 0x0128(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ScopeRollCostTime;                                       // 0x012C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ScopeRollAPoint;                                         // 0x0130(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ScopeRollBPoint;                                         // 0x0134(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ScopeRollHightestPointMax;                               // 0x0138(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ScopeRollHightestPointMin;                               // 0x013C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ScopeRollLowesttPointMax;                                // 0x0140(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ScopeRollLowesttPointMin;                                // 0x0144(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ScopeVMaxDistanceOffSet;                                 // 0x0148(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ScopeHMaxDistanceOffSet;                                 // 0x014C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ScopeVVibrationDuration;                                 // 0x0150(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ScopeHVibrationDuration;                                 // 0x0154(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CrossHairVibrationScale;                                 // 0x0158(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ScopeVContinuousFallingDuration;                         // 0x015C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ScopeVContinuousFallingPointIndex;                       // 0x0160(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6JHX[0x4];                                   // 0x0164(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.SolarTables_WeaponAmmo
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FSolarTables_WeaponAmmo : public FSolarTablesDataBase
	{
	public:
		TMap<int32_t, struct FSolarTablesData_WeaponAmmo>          Data;                                                    // 0x0010(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct Solarland.SolarTablesData_WeaponBattleUpgrade
	 * Size -> 0x0010 (FullSize[0x0020] - InheritedSize[0x0010])
	 */
	struct FSolarTablesData_WeaponBattleUpgrade : public FSolarTablesDataBase
	{
	public:
		int32_t                                                    ID;                                                      // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Exp;                                                     // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Retrofit;                                                // 0x0018(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    UpgradeCost;                                             // 0x001C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarTables_WeaponBattleUpgrade
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FSolarTables_WeaponBattleUpgrade : public FSolarTablesDataBase
	{
	public:
		TMap<int32_t, struct FSolarTablesData_WeaponBattleUpgrade> Data;                                                    // 0x0010(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct Solarland.SolarTablesData_WeaponDefault
	 * Size -> 0x0080 (FullSize[0x0090] - InheritedSize[0x0010])
	 */
	struct FSolarTablesData_WeaponDefault : public FSolarTablesDataBase
	{
	public:
		int32_t                                                    ID;                                                      // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESolarTablesEnum_AccessoryType                             AccessoryType1;                                          // 0x0014(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PMEV[0x3];                                   // 0x0015(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<int32_t>                                            SlotSubtype1;                                            // 0x0018(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    AccessoryID1;                                            // 0x0028(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESolarTablesEnum_AccessoryType                             AccessoryType2;                                          // 0x002C(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TAOT[0x3];                                   // 0x002D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<int32_t>                                            SlotSubtype2;                                            // 0x0030(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    AccessoryID2;                                            // 0x0040(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESolarTablesEnum_AccessoryType                             AccessoryType3;                                          // 0x0044(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_E0ZF[0x3];                                   // 0x0045(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<int32_t>                                            SlotSubtype3;                                            // 0x0048(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    AccessoryID3;                                            // 0x0058(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESolarTablesEnum_AccessoryType                             AccessoryType4;                                          // 0x005C(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KD9A[0x3];                                   // 0x005D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<int32_t>                                            SlotSubtype4;                                            // 0x0060(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    AccessoryID4;                                            // 0x0070(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESolarTablesEnum_AccessoryType                             AccessoryType5;                                          // 0x0074(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CW5Z[0x3];                                   // 0x0075(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<int32_t>                                            SlotSubtype5;                                            // 0x0078(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    AccessoryID5;                                            // 0x0088(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9U82[0x4];                                   // 0x008C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.SolarTables_WeaponDefault
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FSolarTables_WeaponDefault : public FSolarTablesDataBase
	{
	public:
		TMap<int32_t, struct FSolarTablesData_WeaponDefault>       Data;                                                    // 0x0010(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct Solarland.SolarTablesData_WeaponKillTip
	 * Size -> 0x0028 (FullSize[0x0038] - InheritedSize[0x0010])
	 */
	struct FSolarTablesData_WeaponKillTip : public FSolarTablesDataBase
	{
	public:
		int32_t                                                    ID;                                                      // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    KillTipType;                                             // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    KillTipValue;                                            // 0x0018(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_17XL[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              KillTipIcon;                                             // 0x0020(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSolarTablesLocalText                               KillTipname;                                             // 0x0030(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_B6XG[0x4];                                   // 0x0034(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.SolarTables_WeaponKillTip
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FSolarTables_WeaponKillTip : public FSolarTablesDataBase
	{
	public:
		TMap<int32_t, struct FSolarTablesData_WeaponKillTip>       Data;                                                    // 0x0010(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct Solarland.SolarTablesData_WeaponParts
	 * Size -> 0x00F0 (FullSize[0x0100] - InheritedSize[0x0010])
	 */
	struct FSolarTablesData_WeaponParts : public FSolarTablesDataBase
	{
	public:
		int32_t                                                    ID;                                                      // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    WeaponLevel;                                             // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESolarTablesEnum_PartsType                                 PartsType;                                               // 0x0018(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1OVR[0x7];                                   // 0x0019(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<class FString, class FString>                         AttributeSub;                                            // 0x0020(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		int32_t                                                    PartsQuality;                                            // 0x0070(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_N5FZ[0x4];                                   // 0x0074(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              PartsBPResource;                                         // 0x0078(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              PartsIcon;                                               // 0x0088(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    EffectCondition;                                         // 0x0098(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OHC0[0x4];                                   // 0x009C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<int32_t>                                            PartsEffect;                                             // 0x00A0(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<float>                                              PartsValue;                                              // 0x00B0(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<int32_t>                                            PartsWeaponID;                                           // 0x00C0(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    PartsName;                                               // 0x00D0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CW3N[0x4];                                   // 0x00D4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class FString>                                      PartsDesc;                                               // 0x00D8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    WeaponPartDamage;                                        // 0x00E8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    WeaponPartRateOfFire;                                    // 0x00EC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    WeaponPartRecoil;                                        // 0x00F0(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    WeaponPartSpread;                                        // 0x00F4(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    WeaponPartRange;                                         // 0x00F8(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    WeaponPartMobility;                                      // 0x00FC(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarTables_WeaponParts
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FSolarTables_WeaponParts : public FSolarTablesDataBase
	{
	public:
		TMap<int32_t, struct FSolarTablesData_WeaponParts>         Data;                                                    // 0x0010(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct Solarland.SolarTablesData_WeaponPartsOp
	 * Size -> 0x0008 (FullSize[0x0018] - InheritedSize[0x0010])
	 */
	struct FSolarTablesData_WeaponPartsOp : public FSolarTablesDataBase
	{
	public:
		int32_t                                                    ID;                                                      // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    EffectOperator;                                          // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarTables_WeaponPartsOp
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FSolarTables_WeaponPartsOp : public FSolarTablesDataBase
	{
	public:
		TMap<int32_t, struct FSolarTablesData_WeaponPartsOp>       Data;                                                    // 0x0010(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct Solarland.SolarTablesData_WeaponQuality
	 * Size -> 0x0008 (FullSize[0x0018] - InheritedSize[0x0010])
	 */
	struct FSolarTablesData_WeaponQuality : public FSolarTablesDataBase
	{
	public:
		int32_t                                                    ID;                                                      // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Quality;                                                 // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarTables_WeaponQuality
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FSolarTables_WeaponQuality : public FSolarTablesDataBase
	{
	public:
		TMap<int32_t, struct FSolarTablesData_WeaponQuality>       Data;                                                    // 0x0010(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct Solarland.SolarTablesData_SecondMode
	 * Size -> 0x0018 (FullSize[0x0028] - InheritedSize[0x0010])
	 */
	struct FSolarTablesData_SecondMode : public FSolarTablesDataBase
	{
	public:
		int32_t                                                    ID;                                                      // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    UpperLimit;                                              // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RestoreProgressPerSec;                                   // 0x0018(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RestoreProgressPerKill;                                  // 0x001C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RestoreProgressPerDmg;                                   // 0x0020(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RFHV[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.SolarTables_SecondMode
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FSolarTables_SecondMode : public FSolarTablesDataBase
	{
	public:
		TMap<int32_t, struct FSolarTablesData_SecondMode>          Data;                                                    // 0x0010(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct Solarland.SolarTablesData_WeaponSkin
	 * Size -> 0x0070 (FullSize[0x0080] - InheritedSize[0x0010])
	 */
	struct FSolarTablesData_WeaponSkin : public FSolarTablesDataBase
	{
	public:
		int32_t                                                    ID;                                                      // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    WeaponSkinType;                                          // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              WeaponSkillQuality;                                      // 0x0018(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SortId;                                                  // 0x0028(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    weaponid;                                                // 0x002C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              WeaponSkinResource;                                      // 0x0030(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    WeaponSkinAquiredThru;                                   // 0x0040(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    JumpPage;                                                // 0x0044(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              KillBroadcast;                                           // 0x0048(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ShopPropertyid;                                          // 0x0058(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ItemID;                                                  // 0x005C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       DisplayInWeaponry;                                       // 0x0060(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AEF3[0x7];                                   // 0x0061(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              ChunkDir;                                                // 0x0068(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ChunkID;                                                 // 0x0078(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    AIRandomWeight;                                          // 0x007C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarTables_WeaponSkin
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FSolarTables_WeaponSkin : public FSolarTablesDataBase
	{
	public:
		TMap<int32_t, struct FSolarTablesData_WeaponSkin>          Data;                                                    // 0x0010(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct Solarland.SolarTablesData_WeaponSound
	 * Size -> 0x04E8 (FullSize[0x04F8] - InheritedSize[0x0010])
	 */
	struct FSolarTablesData_WeaponSound : public FSolarTablesDataBase
	{
	public:
		int32_t                                                    ID;                                                      // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SNOG[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              Play_Fire_Auto_1P;                                       // 0x0018(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Play_Fire_Auto_3P;                                       // 0x0028(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Play_Fire_Auto_3P_Enemy;                                 // 0x0038(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Stop_Fire_Auto_1P;                                       // 0x0048(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Stop_Fire_Auto_3P;                                       // 0x0058(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Stop_Fire_Auto_3P_Enemy;                                 // 0x0068(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Play_Fire_Sigle_1P;                                      // 0x0078(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Play_Fire_Sigle_3P;                                      // 0x0088(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Play_Fire_Sigle_3P_Enemy;                                // 0x0098(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Play_Fire_Burst_1P;                                      // 0x00A8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Play_Fire_Burst_3P;                                      // 0x00B8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Play_Fire_Burst_3P_Enemy;                                // 0x00C8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Stop_Fire_Burst_1P;                                      // 0x00D8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Stop_Fire_Burst_3P;                                      // 0x00E8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Stop_Fire_Burst_3P_Enemy;                                // 0x00F8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Play_FIRE_LAST_1P;                                       // 0x0108(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Play_FIRE_LAST_3P;                                       // 0x0118(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Play_FIRE_LAST_3P_Enemy;                                 // 0x0128(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Remain_Gun_RTPC_NAME;                                    // 0x0138(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Play_Skill_Cast_1P;                                      // 0x0148(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Play_Skill_Cast_3P;                                      // 0x0158(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Play_Skill_Cast_3P_Enemy;                                // 0x0168(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Play_Fire_Lay_Tl_1P;                                     // 0x0178(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Play_Fire_Lay_Tl_3P;                                     // 0x0188(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Play_Fire_Lay_Tl_3P_Enemy;                               // 0x0198(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Play_Land_Fly_Once_3P;                                   // 0x01A8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Play_Land_Fly_Once_3P_Enemy;                             // 0x01B8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Play_Land_Fly_Loop_1P;                                   // 0x01C8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Play_Land_Fly_Loop_3P;                                   // 0x01D8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Play_Land_Fly_Loop_3P_Enemy;                             // 0x01E8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Stop_Land_Fly_Loop_1P;                                   // 0x01F8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Stop_Land_Fly_Loop_3P;                                   // 0x0208(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Stop_Land_Fly_Loop_3P_Enemy;                             // 0x0218(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Play_Land_Common_Hit_1P;                                 // 0x0228(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Play_Land_Common_Hit_3P;                                 // 0x0238(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Play_Land_Common_Hit_3P_Enemy;                           // 0x0248(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Play_Fire_Overload_1P;                                   // 0x0258(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Play_Fire_Overload_3P;                                   // 0x0268(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Play_Fire_Overload_3P_Enemy;                             // 0x0278(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Play_Reload_01_1P;                                       // 0x0288(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Play_Reload_01_3P;                                       // 0x0298(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Play_Reload_01_3P_Enemy;                                 // 0x02A8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Play_Reload_02_1P;                                       // 0x02B8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Play_Reload_02_3P;                                       // 0x02C8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Play_Reload_02_3P_Enemy;                                 // 0x02D8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Play_Reload_03_1P;                                       // 0x02E8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Play_Reload_03_3P;                                       // 0x02F8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Play_Reload_03_3P_Enemy;                                 // 0x0308(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Play_Bolt_1P;                                            // 0x0318(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Play_Bolt_3P;                                            // 0x0328(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Play_Bolt_3P_Enemy;                                      // 0x0338(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Play_Vehicle_Gun_On_3P;                                  // 0x0348(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Play_Vehicle_Gun_On_3P_Enemy;                            // 0x0358(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Play_Vehicle_Gun_Loop_3P;                                // 0x0368(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Play_Vehicle_Gun_Loop_3P_Enemy;                          // 0x0378(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Play_Vehicle_Gun_Off_3P;                                 // 0x0388(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Play_Vehicle_Gun_Off_3P_Enemy;                           // 0x0398(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Play_Fire_Auto_1P_Mute;                                  // 0x03A8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Play_Fire_Auto_3P_Mute;                                  // 0x03B8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Play_Fire_Auto_3P_Enemy_Mute;                            // 0x03C8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Stop_Fire_Auto_1P_Mute;                                  // 0x03D8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Stop_Fire_Auto_3P_Mute;                                  // 0x03E8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Stop_Fire_Auto_3P_Enemy_Mute;                            // 0x03F8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Play_Fire_Sigle_1P_Mute;                                 // 0x0408(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Play_Fire_Sigle_3P_Mute;                                 // 0x0418(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Play_Fire_Sigle_3P_Enemy_Mute;                           // 0x0428(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Play_Fire_Burst_1P_Mute;                                 // 0x0438(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Play_Fire_Burst_3P_Mute;                                 // 0x0448(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Play_Fire_Burst_3P_Enemy_Mute;                           // 0x0458(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Stop_Fire_Burst_1P_Mute;                                 // 0x0468(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Stop_Fire_Burst_3P_Mute;                                 // 0x0478(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Stop_Fire_Burst_3P_Enemy_Mute;                           // 0x0488(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Play_Fire_Lay_Tl_1P_Mute;                                // 0x0498(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Play_Fire_Lay_Tl_3P_Mute;                                // 0x04A8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Play_Fire_Lay_Tl_3P_Enemy_Mute;                          // 0x04B8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Play_Fire_Empty_1p;                                      // 0x04C8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Play_Fire_Empty_3p;                                      // 0x04D8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Play_Fire_Empty_3p_Enemy;                                // 0x04E8(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarTables_WeaponSound
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FSolarTables_WeaponSound : public FSolarTablesDataBase
	{
	public:
		TMap<int32_t, struct FSolarTablesData_WeaponSound>         Data;                                                    // 0x0010(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct Solarland.SolarTablesData_WeaponStatu
	 * Size -> 0x0020 (FullSize[0x0030] - InheritedSize[0x0010])
	 */
	struct FSolarTablesData_WeaponStatu : public FSolarTablesDataBase
	{
	public:
		int32_t                                                    ID;                                                      // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Stand;                                                   // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CrouchDown;                                              // 0x0018(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Still;                                                   // 0x001C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Run;                                                     // 0x0020(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Spint;                                                   // 0x0024(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Jump;                                                    // 0x0028(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Fly;                                                     // 0x002C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarTables_WeaponStatu
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FSolarTables_WeaponStatu : public FSolarTablesDataBase
	{
	public:
		TMap<int32_t, struct FSolarTablesData_WeaponStatu>         Data;                                                    // 0x0010(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, Protected, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct Solarland.SolarTables_Tables
	 * Size -> 0x2E28
	 */
	struct FSolarTables_Tables
	{
	public:
		unsigned char                                              UnknownData_1EYB[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSolarTables_AccountFixedExp                        AccountFixedExp;                                         // 0x0008(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		struct FSolarTables_AccountFlag                            AccountFlag;                                             // 0x0068(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		struct FSolarTables_Airline                                Airline;                                                 // 0x00C8(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		struct FSolarTables_Armory                                 Armory;                                                  // 0x0128(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		struct FSolarTables_BattleUpgradeContent                   BattleUpgradeContent;                                    // 0x0188(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		struct FSolarTables_BattleUpgradeEffect                    BattleUpgradeEffect;                                     // 0x01E8(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		struct FSolarTables_BattleUpgradeEffectPool                BattleUpgradeEffectPool;                                 // 0x0248(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		struct FSolarTables_BattleEndRankSettlement                BattleEndRankSettlement;                                 // 0x02A8(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		struct FSolarTables_BpAward                                BpAward;                                                 // 0x0308(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		struct FSolarTables_Behavior                               Behavior;                                                // 0x0368(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		struct FSolarTables_EscapeExp                              EscapeExp;                                               // 0x03C8(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		struct FSolarTables_CaseToggleAlphabet                     CaseToggleAlphabet;                                      // 0x0428(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		struct FSolarTables_UnitCharacter                          UnitCharacter;                                           // 0x0488(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		struct FSolarTables_CharacterAbility                       CharacterAbility;                                        // 0x04E8(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		struct FSolarTables_CharacterPassiveAbility                CharacterPassiveAbility;                                 // 0x0548(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		struct FSolarTables_GetPoint                               GetPoint;                                                // 0x05A8(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		struct FSolarTables_ChestSpawn                             ChestSpawn;                                              // 0x0608(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		struct FSolarTables_ChestSpawnGroup                        ChestSpawnGroup;                                         // 0x0668(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		struct FSolarTables_ClanFlag                               ClanFlag;                                                // 0x06C8(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		struct FSolarTables_DayAndNight                            DayAndNight;                                             // 0x0728(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		struct FSolarTables_DsVariableRange                        DsVariableRange;                                         // 0x0788(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		struct FSolarTables_EShop                                  EShop;                                                   // 0x07E8(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		struct FSolarTables_EShopDemoModel                         EShopDemoModel;                                          // 0x0848(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		struct FSolarTables_EShopGoodsPool                         EShopGoodsPool;                                          // 0x08A8(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		struct FSolarTables_EShopGoodsPoolGroup                    EShopGoodsPoolGroup;                                     // 0x0908(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		struct FSolarTables_EShopSpawn                             EShopSpawn;                                              // 0x0968(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		struct FSolarTables_BattleRoyaleMode                       BattleRoyaleMode;                                        // 0x09C8(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		struct FSolarTables_GameModeGroup                          GameModeGroup;                                           // 0x0A28(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		struct FSolarTables_GameModeMain                           GameModeMain;                                            // 0x0A88(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		struct FSolarTables_OutcomeSet                             OutcomeSet;                                              // 0x0AE8(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		struct FSolarTables_GameTimeLine                           GameTimeLine;                                            // 0x0B48(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		struct FSolarTables_GlobalOutcome                          GlobalOutcome;                                           // 0x0BA8(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		struct FSolarTables_GlobalSensitivity                      GlobalSensitivity;                                       // 0x0C08(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		struct FSolarTables_HeroPowerFormula                       HeroPowerFormula;                                        // 0x0C68(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		struct FSolarTables_InputAction                            InputAction;                                             // 0x0CC8(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		struct FSolarTables_InputMapping                           InputMapping;                                            // 0x0D28(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		struct FSolarTables_Item                                   Item;                                                    // 0x0D88(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		struct FSolarTables_BackpackProperty                       BackpackProperty;                                        // 0x0DE8(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		struct FSolarTables_BackpackTrailProperty                  BackpackTrailProperty;                                   // 0x0E48(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		struct FSolarTables_CapsuleProperty                        CapsuleProperty;                                         // 0x0EA8(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		struct FSolarTables_Dance                                  Dance;                                                   // 0x0F08(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		struct FSolarTables_Emote                                  Emote;                                                   // 0x0F68(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		struct FSolarTables_KillNotify                             KillNotify;                                              // 0x0FC8(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		struct FSolarTables_MaterialProperty                       MaterialProperty;                                        // 0x1028(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		struct FSolarTables_VehicleSkinProperty                    VehicleSkinProperty;                                     // 0x1088(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		struct FSolarTables_Voice                                  Voice;                                                   // 0x10E8(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		struct FSolarTables_WeaponSkinProperty                     WeaponSkinProperty;                                      // 0x1148(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		struct FSolarTables_ItemCustomType                         ItemCustomType;                                          // 0x11A8(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		struct FSolarTables_ItemInBattle                           ItemInBattle;                                            // 0x1208(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		struct FSolarTables_ArmorProperty                          ArmorProperty;                                           // 0x1268(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		struct FSolarTables_Chest                                  Chest;                                                   // 0x12C8(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		struct FSolarTables_Collect                                Collect;                                                 // 0x1328(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		struct FSolarTables_EnergyProperty                         EnergyProperty;                                          // 0x1388(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		struct FSolarTables_ExtraEnergyProperty                    ExtraEnergyProperty;                                     // 0x13E8(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		struct FSolarTables_GunProperty                            GunProperty;                                             // 0x1448(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		struct FSolarTables_ItemBehavior                           ItemBehavior;                                            // 0x14A8(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		struct FSolarTables_ItemWeaponParts                        ItemWeaponParts;                                         // 0x1508(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		struct FSolarTables_JetPackModuleProperty                  JetPackModuleProperty;                                   // 0x1568(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		struct FSolarTables_ShieldProperty                         ShieldProperty;                                          // 0x15C8(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		struct FSolarTables_ItemQuality                            ItemQuality;                                             // 0x1628(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		struct FSolarTables_ItemSound                              ItemSound;                                               // 0x1688(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		struct FSolarTables_LobbyAutoDownload                      LobbyAutoDownload;                                       // 0x16E8(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		struct FSolarTables_LanguageSwitcher                       LanguageSwitcher;                                        // 0x1748(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		struct FSolarTables_Localization                           Localization;                                            // 0x17A8(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		struct FSolarTables_Localization_BattleUI                  Localization_BattleUI;                                   // 0x1808(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		struct FSolarTables_Localization_EventSystem               Localization_EventSystem;                                // 0x1868(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		struct FSolarTables_Localization_General                   Localization_General;                                    // 0x18C8(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		struct FSolarTables_Localization_Heroes                    Localization_Heroes;                                     // 0x1928(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		struct FSolarTables_Localization_Item                      Localization_Item;                                       // 0x1988(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		struct FSolarTables_Localization_Tournament                Localization_Tournament;                                 // 0x19E8(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		struct FSolarTables_Localization_Uncategorized             Localization_Uncategorized;                              // 0x1A48(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		struct FSolarTables_GameMap                                GameMap;                                                 // 0x1AA8(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		struct FSolarTables_MapMarkIcon                            MapMarkIcon;                                             // 0x1B08(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		struct FSolarTables_MatchRule                              MatchRule;                                               // 0x1B68(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		struct FSolarTables_RankMatch                              RankMatch;                                               // 0x1BC8(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		struct FSolarTables_NameCardBackground                     NameCardBackground;                                      // 0x1C28(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		struct FSolarTables_NameCardPose                           NameCardPose;                                            // 0x1C88(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		struct FSolarTables_ObGift                                 ObGift;                                                  // 0x1CE8(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		struct FSolarTables_OBSubtitle_Action2Feature              OBSubtitle_Action2Feature;                               // 0x1D48(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		struct FSolarTables_OBSubtitle_Feature2Emotion             OBSubtitle_Feature2Emotion;                              // 0x1DA8(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		struct FSolarTables_OBSubtitle_Emotion2Pattern             OBSubtitle_Emotion2Pattern;                              // 0x1E08(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		struct FSolarTables_OBSubtitle_Pattern2Subtitle            OBSubtitle_Pattern2Subtitle;                             // 0x1E68(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		struct FSolarTables_Outcome                                Outcome;                                                 // 0x1EC8(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		struct FSolarTables_OutcomeContent                         OutcomeContent;                                          // 0x1F28(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		struct FSolarTables_PickupPriorityItem                     PickupPriorityItem;                                      // 0x1F88(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		struct FSolarTables_PickupPriorityWeaponPart               PickupPriorityWeaponPart;                                // 0x1FE8(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		struct FSolarTables_CharacterVoiceover                     CharacterVoiceover;                                      // 0x2048(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		struct FSolarTables_QuickChat                              QuickChat;                                               // 0x20A8(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		struct FSolarTables_QuickVoice                             QuickVoice;                                              // 0x2108(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		struct FSolarTables_VODownload                             VODownload;                                              // 0x2168(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		struct FSolarTables_RankLevel                              RankLevel;                                               // 0x21C8(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		struct FSolarTables_AutoDirector                           AutoDirector;                                            // 0x2228(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		struct FSolarTables_AutoDirectorActivityScore              AutoDirectorActivityScore;                               // 0x2288(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		struct FSolarTables_CircularCameras                        CircularCameras;                                         // 0x22E8(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		struct FSolarTables_HotSpot                                HotSpot;                                                 // 0x2348(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		struct FSolarTables_LookAtCameras                          LookAtCameras;                                           // 0x23A8(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		struct FSolarTables_Rescue                                 Rescue;                                                  // 0x2408(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		struct FSolarTables_Skin                                   Skin;                                                    // 0x2468(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		struct FSolarTables_Achievement                            Achievement;                                             // 0x24C8(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		struct FSolarTables_TaskProgress                           TaskProgress;                                            // 0x2528(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		struct FSolarTables_TaskSystem                             TaskSystem;                                              // 0x2588(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		struct FSolarTables_PlayerOperationListLayout              PlayerOperationListLayout;                               // 0x25E8(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		struct FSolarTables_Variables                              Variables;                                               // 0x2648(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		struct FSolarTables_Vehicle                                Vehicle;                                                 // 0x26A8(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		struct FSolarTables_VehicleSkin                            VehicleSkin;                                             // 0x2708(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		struct FSolarTables_VehicleType                            VehicleType;                                             // 0x2768(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		struct FSolarTables_VehicleSpawn                           VehicleSpawn;                                            // 0x27C8(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		struct FSolarTables_VehicleSpawnGroup                      VehicleSpawnGroup;                                       // 0x2828(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		struct FSolarTables_WarmGame                               WarmGame;                                                // 0x2888(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		struct FSolarTables_WarmGameMode                           WarmGameMode;                                            // 0x28E8(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		struct FSolarTables_WeaponDamage                           WeaponDamage;                                            // 0x2948(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		struct FSolarTables_Weapon                                 Weapon;                                                  // 0x29A8(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		struct FSolarTables_WeaponAmmo                             WeaponAmmo;                                              // 0x2A08(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		struct FSolarTables_WeaponBattleUpgrade                    WeaponBattleUpgrade;                                     // 0x2A68(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		struct FSolarTables_WeaponDefault                          WeaponDefault;                                           // 0x2AC8(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		struct FSolarTables_WeaponKillTip                          WeaponKillTip;                                           // 0x2B28(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		struct FSolarTables_WeaponParts                            WeaponParts;                                             // 0x2B88(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		struct FSolarTables_WeaponPartsOp                          WeaponPartsOp;                                           // 0x2BE8(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		struct FSolarTables_WeaponQuality                          WeaponQuality;                                           // 0x2C48(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		struct FSolarTables_SecondMode                             SecondMode;                                              // 0x2CA8(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		struct FSolarTables_WeaponSkin                             WeaponSkin;                                              // 0x2D08(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		struct FSolarTables_WeaponSound                            WeaponSound;                                             // 0x2D68(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		struct FSolarTables_WeaponStatu                            WeaponStatu;                                             // 0x2DC8(0x0060) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.BattlePassTimeInfo
	 * Size -> 0x0018
	 */
	struct FBattlePassTimeInfo
	{
	public:
		int64_t                                                    BattlePassID;                                            // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int64_t                                                    currWeek;                                                // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int64_t                                                    maxWeek;                                                 // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.TaskBriefData
	 * Size -> 0x0040
	 */
	struct FTaskBriefData
	{
	public:
		int64_t                                                    TaskID;                                                  // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int64_t                                                    BaseValue;                                               // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int64_t                                                    CurValue;                                                // 0x0010(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DG16[0x8];                                   // 0x0018(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int64_t                                                    status;                                                  // 0x0020(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETaskPage                                                  page;                                                    // 0x0028(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4VCO[0x7];                                   // 0x0029(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int64_t                                                    week;                                                    // 0x0030(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsMarked;                                                // 0x0038(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_K2N6[0x7];                                   // 0x0039(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.SolarTeamAttribute
	 * Size -> 0x0018
	 */
	struct FSolarTeamAttribute
	{
	public:
		float                                                      Value;                                                   // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XL07[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class ASCMPlayerState*>                             Contributors;                                            // 0x0008(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarTeamAttributeSet
	 * Size -> 0x0078
	 */
	struct FSolarTeamAttributeSet
	{
	public:
		struct FSolarTeamAttribute                                 TeamTreatmentDurationReductionMultiple;                  // 0x0000(0x0018) BlueprintVisible, NativeAccessSpecifierPublic
		struct FSolarTeamAttribute                                 TeamShieldChargeDurationReductionMultiple;               // 0x0018(0x0018) BlueprintVisible, NativeAccessSpecifierPublic
		struct FSolarTeamAttribute                                 TeamBigShieldChargeDurationReductionMultiple;            // 0x0030(0x0018) BlueprintVisible, NativeAccessSpecifierPublic
		struct FSolarTeamAttribute                                 TeamItemDiscountMultiple;                                // 0x0048(0x0018) BlueprintVisible, NativeAccessSpecifierPublic
		struct FSolarTeamAttribute                                 TeamItemAdditionMultiple;                                // 0x0060(0x0018) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.WorldMarkDataDetails
	 * Size -> 0x0020 (FullSize[0x0128] - InheritedSize[0x0108])
	 */
	struct FWorldMarkDataDetails : public FFastArraySerializer
	{
	public:
		unsigned char                                              PlayerPosMax;                                            // 0x0108(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3IXJ[0x7];                                   // 0x0109(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FWorldMarkData>                              AllMarkDatas;                                            // 0x0110(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USolarTeamInfoComponent* Owner;                                                   // 0x0120(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.TitanWeaponSetting
	 * Size -> 0x0018
	 */
	struct FTitanWeaponSetting
	{
	public:
		class UClass* TitanWeaponClass;                                        // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                TitanWeaponSocket;                                       // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ASolarVehicleWeapon* TitanVehicleWeapon;                                      // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.TransformerSetting
	 * Size -> 0x0098
	 */
	struct FTransformerSetting
	{
	public:
		EVehicleControlUIType                                      ControlUIType;                                           // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Q3ZH[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass* AbilityClass;                                            // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass* WeaponClass;                                             // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass* SkinWeaponClass;                                         // 0x0018(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                WeaponSocketName;                                        // 0x0020(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UVehicleCameraDataAsset* CameraDataAsset;                                         // 0x0028(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UVehicleCameraDataAsset* PassengerOutShootCamera;                                 // 0x0030(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UVehicleCameraDataAsset* PassengerOutShootAimCamera;                              // 0x0038(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ASolarVehicleWeapon* VehicleWeapon;                                           // 0x0040(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              RaiseDustEffects[0x50];                                  // 0x0048(0x0050) UNKNOWN PROPERTY: MapProperty
	};

	/**
	 * ScriptStruct Solarland.SpawonTreasureBoxIdAndWeight
	 * Size -> 0x0008
	 */
	struct FSpawonTreasureBoxIdAndWeight
	{
	public:
		int32_t                                                    TreasureId;                                              // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Weight;                                                  // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.TutorialLevelConfigData
	 * Size -> 0x0020
	 */
	struct FTutorialLevelConfigData
	{
	public:
		class FString                                              LevelName;                                               // 0x0000(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<int32_t>                                            TutorialIds;                                             // 0x0010(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.TutorialLevelConfig
	 * Size -> 0x0038
	 */
	struct FTutorialLevelConfig
	{
	public:
		TArray<struct FTutorialLevelConfigData>                    LevelConfigDatas;                                        // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     MainMapPath;                                             // 0x0010(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    VeteranTutorialID;                                       // 0x0028(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RepeatOperationTime;                                     // 0x002C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      WaitToEndTime;                                           // 0x0030(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XKK0[0x4];                                   // 0x0034(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.TutorialTableRowBase
	 * Size -> 0x0008 (FullSize[0x0010] - InheritedSize[0x0008])
	 */
	struct FTutorialTableRowBase : public FTableRowBase
	{
	public:
		int32_t                                                    ID;                                                      // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_COCT[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.TutorialSoftCondition
	 * Size -> 0x0028
	 */
	struct FTutorialSoftCondition
	{
	public:
		class FString                                              ConditionStr;                                            // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     ConditionBP;                                             // 0x0010(0x0018) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.TutorialTableRow
	 * Size -> 0x0088 (FullSize[0x0098] - InheritedSize[0x0010])
	 */
	struct FTutorialTableRow : public FTutorialTableRowBase
	{
	public:
		class FString                                              Desc;                                                    // 0x0010(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETutorialType                                              Type;                                                    // 0x0020(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETutorialStage                                             TriggerStage;                                            // 0x0021(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_93CB[0x6];                                   // 0x0022(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTutorialSoftCondition                              TriggerCondition;                                        // 0x0028(0x0028) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
		int32_t                                                    EndNum;                                                  // 0x0050(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0249[0x4];                                   // 0x0054(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTutorialSoftCondition                              ForeverClosedCondition;                                  // 0x0058(0x0028) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
		TArray<int32_t>                                            ActionIDs;                                               // 0x0080(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUpload;                                                 // 0x0090(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bMandatory;                                              // 0x0091(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bStartUpload;                                            // 0x0092(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bWindows;                                                // 0x0093(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       biOS;                                                    // 0x0094(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAndroid;                                                // 0x0095(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OK93[0x2];                                   // 0x0096(0x0002) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.TutorialTipAndEffectUI
	 * Size -> 0x0070
	 */
	struct FTutorialTipAndEffectUI
	{
	public:
		class FString                                              LinkedComponent;                                         // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              LimitedListView;                                         // 0x0010(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     TutorialExpressionBPPath;                                // 0x0020(0x0018) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     TutorialEffectBPPath;                                    // 0x0038(0x0018) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           TutorialBPLocation;                                      // 0x0050(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       HorizontalDirection;                                     // 0x0058(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VJWZ[0x3];                                   // 0x0059(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    LocTextID;                                               // 0x005C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LocTextDuration;                                         // 0x0060(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DelayShowUITime;                                         // 0x0064(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      WaitUIShowTime;                                          // 0x0068(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETutorialUIParent                                          UIParent;                                                // 0x006C(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       OpenEffectSound;                                         // 0x006D(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       NeedMask;                                                // 0x006E(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GLW7[0x1];                                   // 0x006F(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.TutorialSpecialUI
	 * Size -> 0x0018
	 */
	struct FTutorialSpecialUI
	{
	public:
		struct FSoftObjectPath                                     TutorialSpecialUIBPPath;                                 // 0x0000(0x0018) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.TutorialSingleSubtitle
	 * Size -> 0x0020
	 */
	struct FTutorialSingleSubtitle
	{
	public:
		class FString                                              LocalTextId;                                             // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Voice;                                                   // 0x0010(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.TutorialSubtitle
	 * Size -> 0x0018
	 */
	struct FTutorialSubtitle
	{
	public:
		TArray<struct FTutorialSingleSubtitle>                     Subtitles;                                               // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DelayTime;                                               // 0x0010(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2TVA[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.TutorialRepeatTip
	 * Size -> 0x0018
	 */
	struct FTutorialRepeatTip
	{
	public:
		float                                                      StartTime;                                               // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QX6X[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FTutorialSingleSubtitle>                     Subtitles;                                               // 0x0008(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.TutorialBackgroundMusicTableRow
	 * Size -> 0x0020
	 */
	struct FTutorialBackgroundMusicTableRow
	{
	public:
		class FString                                              TutorialPlayMusicName;                                   // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              TutorialStopMusicName;                                   // 0x0010(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.TutorialActionTableRow
	 * Size -> 0x01C0 (FullSize[0x01D0] - InheritedSize[0x0010])
	 */
	struct FTutorialActionTableRow : public FTutorialTableRowBase
	{
	public:
		class FString                                              Desc;                                                    // 0x0010(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETutorialUIType                                            UIType;                                                  // 0x0020(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TVK0[0x7];                                   // 0x0021(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTutorialTipAndEffectUI                             TutorialTipAndEffectUI;                                  // 0x0028(0x0070) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FTutorialSpecialUI                                  TutorialSpecialUI;                                       // 0x0098(0x0018) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
		int32_t                                                    NoticeLocTextId;                                         // 0x00B0(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UN7Z[0x4];                                   // 0x00B4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTutorialSubtitle                                   TutorialSubtitle;                                        // 0x00B8(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		bool                                                       bRepeatTip;                                              // 0x00D0(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_75SK[0x7];                                   // 0x00D1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTutorialRepeatTip                                  RepeatTip;                                               // 0x00D8(0x0018) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FTutorialBackgroundMusicTableRow                    TutorialBackgroundMusic;                                 // 0x00F0(0x0020) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FTutorialSoftCondition                              EndCondition;                                            // 0x0110(0x0028) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FTutorialSoftCondition                              InterruptCondition;                                      // 0x0138(0x0028) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
		float                                                      WaitTime;                                                // 0x0160(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinExecuteTime;                                          // 0x0164(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<int32_t>                                            OpenBehaviors;                                           // 0x0168(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<int32_t>                                            CloseBehaviors;                                          // 0x0178(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    FixedTriggerAreaID;                                      // 0x0188(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZTWC[0x4];                                   // 0x018C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<int32_t>                                            BotAISpawnIDs;                                           // 0x0190(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<int32_t>                                            BotAIDeathIDs;                                           // 0x01A0(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<int32_t>                                            BotAIOnVehicleSpawnIDs;                                  // 0x01B0(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<int32_t>                                            BotAIOnVehicleDeathIDs;                                  // 0x01C0(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.TutorialConditionTableRow
	 * Size -> 0x0028 (FullSize[0x0038] - InheritedSize[0x0010])
	 */
	struct FTutorialConditionTableRow : public FTutorialTableRowBase
	{
	public:
		unsigned char                                              TriggerType;                                             // 0x0010(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_G2XB[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class FString>                                      Parameters;                                              // 0x0018(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Description;                                             // 0x0028(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.CacheConditionInfo
	 * Size -> 0x0020
	 */
	struct FCacheConditionInfo
	{
	public:
		unsigned char                                              UnknownData_XCV0[0x20];                                  // 0x0000(0x0020) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.MatAppearingData
	 * Size -> 0x0010
	 */
	struct FMatAppearingData
	{
	public:
		class UCurveFloat* MatCurve;                                                // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                MatParam;                                                // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.DetectorShapeParams
	 * Size -> 0x0018
	 */
	struct FDetectorShapeParams
	{
	public:
		struct FVector                                             Offset;                                                  // 0x0000(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             BoxExtent;                                               // 0x000C(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.BulletLandAreaData
	 * Size -> 0x0018
	 */
	struct FBulletLandAreaData
	{
	public:
		class UParticleSystemComponent* TargetParticleComponent;                                 // 0x0000(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UDecalComponent* TargetDecalComponent;                                    // 0x0008(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_H0AX[0x8];                                   // 0x0010(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.SolarWeaponHitAntiData
	 * Size -> 0x0040
	 */
	struct FSolarWeaponHitAntiData
	{
	public:
		struct FVector_NetQuantize                                 RelavantHitLocationWithCharacter;                        // 0x0000(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector_NetQuantize                                 HitBoneScale;                                            // 0x000C(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WWFY[0x8];                                   // 0x0018(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FQuat                                               HitBoneRotation;                                         // 0x0020(0x0010) IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FVector_NetQuantize                                 HitLoc;                                                  // 0x0030(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QNDO[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.SolarVirtualBulletHitParameter
	 * Size -> 0x0078
	 */
	struct FSolarVirtualBulletHitParameter
	{
	public:
		struct FFireUniqueID                                       FireUniqueID;                                            // 0x0000(0x0004) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FireTimeStamp;                                           // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HitTimeStamp;                                            // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector_NetQuantize                                 PlayerViewDir;                                           // 0x000C(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int8_t                                                     FireChargePhase;                                         // 0x0018(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OVS3[0x3];                                   // 0x0019(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      FireChargeTime;                                          // 0x001C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    HitStartIndex;                                           // 0x0020(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector_NetQuantize                                 StartLoc;                                                // 0x0024(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector_NetQuantize                                 TargetLoc;                                               // 0x0030(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_163L[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAmmoConfig* Ammo;                                                    // 0x0040(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FSolarWeaponHitAntiData>                     HitAntiDatas;                                            // 0x0048(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FHitResult>                                  Hits;                                                    // 0x0058(0x0010) ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class AActor*>                                      IgnoreHitedActors;                                       // 0x0068(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.ClusterBombBullet
	 * Size -> 0x0168
	 */
	struct FClusterBombBullet
	{
	public:
		struct FSolarVirtualBulletHitParameter                     CacheHitParam;                                           // 0x0000(0x0078) ContainsInstancedReference, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3W0K[0x98];                                  // 0x0078(0x0098) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UParticleSystemComponent* BulletEffectComponent;                                   // 0x0110(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USolarAirPlaneMissileConfig* MissileDataAsset;                                        // 0x0118(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USolarVirtualBulletAKComponent* BulletAkComponent;                                       // 0x0120(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9JX3[0x40];                                  // 0x0128(0x0040) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.VehicleEquipWeaponOverlapBox
	 * Size -> 0x0018
	 */
	struct FVehicleEquipWeaponOverlapBox
	{
	public:
		struct FVector                                             Postion;                                                 // 0x0000(0x000C) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             TraceBox;                                                // 0x000C(0x000C) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.VehicleEquipWeaponOverlapCapsule
	 * Size -> 0x0014
	 */
	struct FVehicleEquipWeaponOverlapCapsule
	{
	public:
		struct FVector                                             Postion;                                                 // 0x0000(0x000C) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HalfHeight;                                              // 0x000C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Radius;                                                  // 0x0010(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.WeakPointImgInfo
	 * Size -> 0x0060
	 */
	struct FWeakPointImgInfo
	{
	public:
		unsigned char                                              Texture2D[0x28];                                         // 0x0000(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		struct FAnchors                                            Anchors;                                                 // 0x0028(0x0010) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FVector2D                                           Postion;                                                 // 0x0038(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           Size;                                                    // 0x0040(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           Alignment;                                               // 0x0048(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAutoSize;                                               // 0x0050(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_W24Q[0x3];                                   // 0x0051(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      Angle;                                                   // 0x0054(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           Scale;                                                   // 0x0058(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.VehicleHealthResource
	 * Size -> 0x0060
	 */
	struct FVehicleHealthResource
	{
	public:
		unsigned char                                              BodyTexture2D[0x28];                                     // 0x0000(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		unsigned char                                              FillImageTexture2D[0x28];                                // 0x0028(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		TArray<struct FWeakPointImgInfo>                           WeakPointImgInfos;                                       // 0x0050(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.VehicleDamageLevelColor
	 * Size -> 0x0034
	 */
	struct FVehicleDamageLevelColor
	{
	public:
		struct FLinearColor                                        BackgroundColor;                                         // 0x0000(0x0010) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLinearColor                                        BackgroundLeftPartColor;                                 // 0x0010(0x0010) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLinearColor                                        OutlineColor;                                            // 0x0020(0x0010) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    DamageBonus;                                             // 0x0030(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarLavaBullet
	 * Size -> 0x00E8
	 */
	struct FSolarLavaBullet
	{
	public:
		class ASolarCharacter* CacheCharacter;                                          // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSolarVirtualBulletHitParameter                     CacheHitParam;                                           // 0x0008(0x0078) ContainsInstancedReference, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_25OG[0x50];                                  // 0x0080(0x0050) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UParticleSystemComponent* BulletEffectComponent;                                   // 0x00D0(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UParticleSystemComponent* TrajectoryEffectComponent;                               // 0x00D8(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class USolarVirtualBulletAKComponent* BulletAkComponent;                                       // 0x00E0(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
	};

	/**
	 * ScriptStruct Solarland.ZoneServerValidate
	 * Size -> 0x0040
	 */
	struct FZoneServerValidate
	{
	public:
		struct FFireUniqueID                                       FireUniqueID;                                            // 0x0000(0x0004) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector_NetQuantize                                 ServerSpawnLocation;                                     // 0x0004(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector_NetQuantizeNormal                           ServerSpawnDirection;                                    // 0x0010(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ServerTimeStamp;                                         // 0x001C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ASolarCharacter* LavaZoneOwner;                                           // 0x0020(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      OverlapInterval;                                         // 0x0028(0x0004) ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_H0HM[0x4];                                   // 0x002C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class AActor*>                                      OverlappedActors;                                        // 0x0030(0x0010) ZeroConstructor, RepSkip, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarLavaZone
	 * Size -> 0x0070
	 */
	struct FSolarLavaZone
	{
	public:
		unsigned char                                              UnknownData_UK6U[0x20];                                  // 0x0000(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FZoneServerValidate                                 ServerValidate;                                          // 0x0020(0x0040) NativeAccessSpecifierPublic
		class UParticleSystemComponent* LavaZoneParticleComponent;                               // 0x0060(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USolarVirtualBulletAKComponent* LavaZoneAkComponent;                                     // 0x0068(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.BoneIKPreset
	 * Size -> 0x0020
	 */
	struct FBoneIKPreset
	{
	public:
		struct FVector                                             LeftIKTarget;                                            // 0x0000(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             RightIKTarget;                                           // 0x000C(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           ChangeIKThreshold;                                       // 0x0018(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.BombingAreaData
	 * Size -> 0x0028
	 */
	struct FBombingAreaData
	{
	public:
		int32_t                                                    AreaIndex;                                               // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector_NetQuantize                                 CenterLocation;                                          // 0x0004(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ERocketFireMode                                            SpawnedFireMode;                                         // 0x0010(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5QD3[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ServerStartedTime;                                       // 0x0014(0x0004) ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              MaxRocketCounter;                                        // 0x0018(0x0001) ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              SpawnedRocketCounter;                                    // 0x0019(0x0001) ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_851P[0x2];                                   // 0x001A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector2D                                           LastLandLocation2D;                                      // 0x001C(0x0008) ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bTriggered;                                              // 0x0024(0x0001) ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PNVB[0x3];                                   // 0x0025(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.BombingAreaAsset
	 * Size -> 0x0060
	 */
	struct FBombingAreaAsset
	{
	public:
		unsigned char                                              BombingAreaMeshClass[0x28];                              // 0x0000(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		unsigned char                                              BombingDecalMaterialClass[0x28];                         // 0x0028(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		class UStaticMeshComponent* BombingAreaMeshComponent;                                // 0x0050(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UDecalComponent* BombingAreaDecalComponent;                               // 0x0058(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SpawnedRocketData
	 * Size -> 0x0028
	 */
	struct FSpawnedRocketData
	{
	public:
		struct FVector                                             RocketSpawnLocation;                                     // 0x0000(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RocketSpawnDelayTime;                                    // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AlertLineRemainTime;                                     // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SpawnedTime;                                             // 0x0014(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bRocketSpawned;                                          // 0x0018(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_M9C3[0x7];                                   // 0x0019(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UStaticMeshComponent* AlertLineBombingMesh;                                    // 0x0020(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.FireModeSetting
	 * Size -> 0x0038
	 */
	struct FFireModeSetting
	{
	public:
		float                                                      AreaMeshScale;                                           // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             BombingAreaDecalSize;                                    // 0x0004(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FirstRocketSpawnTimer;                                   // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RocketSpawnDelay;                                        // 0x0014(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AlertLineRemainTime;                                     // 0x0018(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RocketSpawnInterval;                                     // 0x001C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BombingAreaDisplayDelay;                                 // 0x0020(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    LaunchRocketNum;                                         // 0x0024(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BombingAreaRadius;                                       // 0x0028(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MiniSpawnDistance;                                       // 0x002C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           AimDistanceRange;                                        // 0x0030(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.VehicleSpawnRefreshInfo
	 * Size -> 0x0048
	 */
	struct FVehicleSpawnRefreshInfo
	{
	public:
		int32_t                                                    VehicleRefreshSecond;                                    // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bVehicleRefreshRand;                                     // 0x0004(0x0001) Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bVehicleRefreshWaitPreBroken;                            // 0x0005(0x0001) Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PD09[0x2];                                   // 0x0006(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int64_t                                                    VehicleRefreshCheckRoleDisSquared;                       // 0x0008(0x0008) Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             VehicleCheckBoxSize;                                     // 0x0010(0x000C) Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8ISF[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              VehicleSpawnEffectClass[0x28];                           // 0x0020(0x0028) UNKNOWN PROPERTY: SoftClassProperty
	};

	/**
	 * ScriptStruct Solarland.VehicleSpawner
	 * Size -> 0x00D0
	 */
	struct FVehicleSpawner
	{
	public:
		class ASolarVehicleSpawnerSets* SolarVehicleSpawnerSets;                                 // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8KAK[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTransform                                          VehicleSpawnerTransform;                                 // 0x0010(0x0030) Edit, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		EVehicleSpawnType                                          VehicleSpawnType;                                        // 0x0040(0x0001) Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_R7IH[0x3];                                   // 0x0041(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    SpawnerID;                                               // 0x0044(0x0004) Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bVehicleRefresh;                                         // 0x0048(0x0001) Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ATI8[0x7];                                   // 0x0049(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVehicleSpawnRefreshInfo                            VehicleSpawnRefreshInfo;                                 // 0x0050(0x0048) Edit, DisableEditOnTemplate, EditConst, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3SL6[0x8];                                   // 0x0098(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ASolarVehicleSpawnEffect* VehicleSpawnEffect;                                      // 0x00A0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_E2I8[0x28];                                  // 0x00A8(0x0028) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.SolarVirtualBullet
	 * Size -> 0x01A8
	 */
	struct FSolarVirtualBullet
	{
	public:
		struct FFireUniqueID                                       FireUniqueID;                                            // 0x0000(0x0004) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EVirtualBulletType                                         BulletType;                                              // 0x0004(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FC1F[0xB];                                   // 0x0005(0x000B) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UParticleSystemComponent* BulletEffect;                                            // 0x0010(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UParticleSystemComponent* TrajectoryEffect;                                        // 0x0018(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UParticleSystemComponent* TrajectoryBeamEffect;                                    // 0x0020(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USolarVirtualBulletAKComponent* AkComponent;                                             // 0x0028(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_APTL[0x140];                                 // 0x0030(0x0140) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector_NetQuantize                                 PlayerViewDir;                                           // 0x0170(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector_NetQuantize                                 PlayerViewLoc;                                           // 0x017C(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              IsScopeOpen;                                             // 0x0188(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RDT2[0x1F];                                  // 0x0189(0x001F) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.SolarBlackHoleTestActorInfo
	 * Size -> 0x0018
	 */
	struct FSolarBlackHoleTestActorInfo
	{
	public:
		unsigned char                                              UnknownData_04R2[0x18];                                  // 0x0000(0x0018) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.SolarBlackHoleParticleInfo
	 * Size -> 0x0080
	 */
	struct FSolarBlackHoleParticleInfo
	{
	public:
		struct FSoftObjectPath                                     ParticlePathForTeammate;                                 // 0x0000(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     ParticlePathForEnemy;                                    // 0x0018(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTransform                                          RelativeTransform;                                       // 0x0030(0x0030) Edit, BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       bAttachMode;                                             // 0x0060(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PV6O[0x3];                                   // 0x0061(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                AttachSocketName;                                        // 0x0064(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EAttachLocation                                            AttachLocationType;                                      // 0x006C(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAutoDestroy;                                            // 0x006D(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_11KN[0x2];                                   // 0x006E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      Duration;                                                // 0x0070(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EPSCPoolMethod                                             PoolMode;                                                // 0x0074(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OEDK[0xB];                                   // 0x0075(0x000B) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.WeaponFireLaserElement
	 * Size -> 0x0048
	 */
	struct FWeaponFireLaserElement
	{
	public:
		unsigned char                                              UnknownData_9JKX[0x38];                                  // 0x0000(0x0038) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UParticleSystemComponent* BeamEffect;                                              // 0x0038(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DO9H[0x8];                                   // 0x0040(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.WeaponMergeMeshStruct
	 * Size -> 0x0030
	 */
	struct FWeaponMergeMeshStruct
	{
	public:
		struct FGuid                                               Guid;                                                    // 0x0000(0x0010) Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    weaponid;                                                // 0x0010(0x0004) Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SkinId;                                                  // 0x0014(0x0004) Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<int32_t>                                            Parts;                                                   // 0x0018(0x0010) Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USkeletalMesh* MergeMesh;                                               // 0x0028(0x0008) Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarWeaponPartEffectDesc
	 * Size -> 0x0020
	 */
	struct FSolarWeaponPartEffectDesc
	{
	public:
		class FString                                              EffectValue;                                             // 0x0000(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    DescriptionLocalTextID;                                  // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Priority;                                                // 0x0014(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    PartID;                                                  // 0x0018(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    weaponid;                                                // 0x001C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.WheelData
	 * Size -> 0x0270
	 */
	struct FWheelData
	{
	public:
		bool                                                       bIsPowered;                                              // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsPoweredInDrift;                                       // 0x0001(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SXGG[0x2];                                   // 0x0002(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                BoneName;                                                // 0x0004(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             Offset;                                                  // 0x000C(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             WheelForceOffset;                                        // 0x0018(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Radius;                                                  // 0x0024(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RadiusAfterBroken;                                       // 0x0028(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Width;                                                   // 0x002C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxRaise;                                                // 0x0030(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxDrop;                                                 // 0x0034(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SpringStiffness;                                         // 0x0038(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DamperStiffness;                                         // 0x003C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LaterialFriction;                                        // 0x0040(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LaterialFrictionAfterBroken;                             // 0x0044(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LaterialFrictionInDrift;                                 // 0x0048(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DriftingLaterialFrictionLerpSpeed;                       // 0x004C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRuntimeFloatCurve                                  EndDriftFrictionCurve;                                   // 0x0050(0x0088) Edit, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_G7FQ[0x8];                                   // 0x00D8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVehicleVFX                                         DriftDecal;                                              // 0x00E0(0x0090) Edit, NativeAccessSpecifierPublic
		float                                                      RollingFriction;                                         // 0x0170(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BrakeDeceleration;                                       // 0x0174(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DustEffectScale;                                         // 0x0178(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DustEffectScaleAfterBroken;                              // 0x017C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DriftEffectScale;                                        // 0x0180(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0GX1[0xDC];                                  // 0x0184(0x00DC) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UParticleSystemComponent* RaiseDustParticleComponent;                              // 0x0260(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UParticleSystemComponent* DriftParticleComponent;                                  // 0x0268(0x0008) ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.GearSetting
	 * Size -> 0x0018
	 */
	struct FGearSetting
	{
	public:
		float                                                      MinSpeed;                                                // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxSpeed;                                                // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      StartRpm;                                                // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxRpm;                                                  // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RpmDescendSpeed;                                         // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinDescendRPM;                                           // 0x0014(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SidesOfZiplineData
	 * Size -> 0x0030
	 */
	struct FSidesOfZiplineData
	{
	public:
		struct FVector                                             BeginningLocation;                                       // 0x0000(0x000C) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             ArrivingLocation;                                        // 0x000C(0x000C) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             LandingLocation;                                         // 0x0018(0x000C) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ArrivingVelocity;                                        // 0x0024(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bLandingAfterArriving;                                   // 0x0028(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9WAP[0x3];                                   // 0x0029(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      LandingVelocity;                                         // 0x002C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.ZiplineObjData
	 * Size -> 0x0074
	 */
	struct FZiplineObjData
	{
	public:
		struct FSidesOfZiplineData                                 ASideData;                                               // 0x0000(0x0030) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		struct FSidesOfZiplineData                                 BSideData;                                               // 0x0030(0x0030) Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		EZiplineType                                               ZiplineType;                                             // 0x0060(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_C8GP[0x3];                                   // 0x0061(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      CableCollisionScale;                                     // 0x0064(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bLookAtTarget;                                           // 0x0068(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_R8Q7[0x3];                                   // 0x0069(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      SlidingVelocity;                                         // 0x006C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CancelledVelocity;                                       // 0x0070(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.WwiseSwitchParam
	 * Size -> 0x0020
	 */
	struct FWwiseSwitchParam
	{
	public:
		class FString                                              SwitchGroup;                                             // 0x0000(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              SwitchState;                                             // 0x0010(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.WwiseRTPCParam
	 * Size -> 0x0018
	 */
	struct FWwiseRTPCParam
	{
	public:
		class FString                                              RTPC;                                                    // 0x0000(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Value;                                                   // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_S264[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.SoundGroupWwiseParams
	 * Size -> 0x0020
	 */
	struct FSoundGroupWwiseParams
	{
	public:
		TArray<struct FWwiseSwitchParam>                           SwitchParams;                                            // 0x0000(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FWwiseRTPCParam>                             RTPCParams;                                              // 0x0010(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SoundGroupSoundEvent
	 * Size -> 0x0030
	 */
	struct FSoundGroupSoundEvent
	{
	public:
		class FString                                              SoundEvent;                                              // 0x0000(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoundGroupWwiseParams                              WwiseParams;                                             // 0x0010(0x0020) Edit, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SoundGroupContainer
	 * Size -> 0x0020
	 */
	struct FSoundGroupContainer
	{
	public:
		TArray<class USoundGroupDataAsset*>                        SoundGroupDataAssets;                                    // 0x0000(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class UDataTable*>                                  SoundGroupDataTables;                                    // 0x0010(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SoundPoolContainer
	 * Size -> 0x0010
	 */
	struct FSoundPoolContainer
	{
	public:
		TArray<class USoundPoolDataAsset*>                         SoundPoolDataAssets;                                     // 0x0000(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SpatializeItem
	 * Size -> 0x000C (FullSize[0x0018] - InheritedSize[0x000C])
	 */
	struct FSpatializeItem : public FFastArraySerializerItem
	{
	public:
		struct FVector                                             Location;                                                // 0x000C(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.TrackItem
	 * Size -> 0x0028 (FullSize[0x0040] - InheritedSize[0x0018])
	 */
	struct FTrackItem : public FSpatializeItem
	{
	public:
		float                                                      Time;                                                    // 0x0018(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RDUZ[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              PID;                                                     // 0x0020(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bValid;                                                  // 0x0030(0x0001) ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bProjected;                                              // 0x0031(0x0001) ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KV5L[0x2];                                   // 0x0032(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             FloorLocation;                                           // 0x0034(0x000C) ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.TrackArray
	 * Size -> 0x0028 (FullSize[0x0130] - InheritedSize[0x0108])
	 */
	struct FTrackArray : public FFastArraySerializer
	{
	public:
		TArray<struct FTrackItem>                                  Tracks;                                                  // 0x0108(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SDJ5[0x18];                                  // 0x0118(0x0018) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.AnimMsgData
	 * Size -> 0x0008
	 */
	struct FAnimMsgData
	{
	public:
		EWeaponAnimState                                           State;                                                   // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZWS1[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      Speed;                                                   // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.TutorialLevelSaveData
	 * Size -> 0x0028
	 */
	struct FTutorialLevelSaveData
	{
	public:
		class FString                                              LevelName;                                               // 0x0000(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              PlayerStartTag;                                          // 0x0010(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bTutorialHasFinished;                                    // 0x0020(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YVCK[0x3];                                   // 0x0021(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    TutorialID;                                              // 0x0024(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SplineMeshDetails
	 * Size -> 0x0050
	 */
	struct FSplineMeshDetails
	{
	public:
		class UStaticMesh* Mesh;                                                    // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESplineMeshAxis                                            ForwardAxis;                                             // 0x0008(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QVTT[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UMaterialInterface* FirstMaterial;                                           // 0x0010(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UMaterialInterface* SecondMaterial;                                          // 0x0018(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           StartScale;                                              // 0x0020(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      StartRoll;                                               // 0x0028(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           StartOffset;                                             // 0x002C(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           EndScale;                                                // 0x0034(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      EndRoll;                                                 // 0x003C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           EndOffset;                                               // 0x0040(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    TranslucencySortPriority;                                // 0x0048(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VCNL[0x4];                                   // 0x004C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.UITweenBaseStruct
	 * Size -> 0x0020
	 */
	struct FUITweenBaseStruct
	{
	public:
		unsigned char                                              UnknownData_UR04[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       IsValid;                                                 // 0x0008(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ETweenInterpolationType                                    InterpolationType;                                       // 0x0009(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EEasingFunc                                                EaseType;                                                // 0x000A(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DIU6[0x5];                                   // 0x000B(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UCurveFloat* InterpolationCurve;                                      // 0x0010(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UWidget* Widget;                                                  // 0x0018(0x0008) Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected
	};

	/**
	 * ScriptStruct Solarland.UIScaleTween
	 * Size -> 0x0020 (FullSize[0x0040] - InheritedSize[0x0020])
	 */
	struct FUIScaleTween : public FUITweenBaseStruct
	{
	public:
		struct FVector2D                                           OriginalScale;                                           // 0x0020(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           TargetScale;                                             // 0x0028(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bHandleAsMultiplier;                                     // 0x0030(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0GZY[0xF];                                   // 0x0031(0x000F) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.UIPositionTween
	 * Size -> 0x0020 (FullSize[0x0040] - InheritedSize[0x0020])
	 */
	struct FUIPositionTween : public FUITweenBaseStruct
	{
	public:
		struct FVector2D                                           OriginalPosition;                                        // 0x0020(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           TargetPosition;                                          // 0x0028(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bHandleAsRelativeChange;                                 // 0x0030(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SOP8[0xF];                                   // 0x0031(0x000F) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.ImageColorTween
	 * Size -> 0x0028 (FullSize[0x0048] - InheritedSize[0x0020])
	 */
	struct FImageColorTween : public FUITweenBaseStruct
	{
	public:
		struct FLinearColor                                        Original;                                                // 0x0020(0x0010) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLinearColor                                        TargetColor;                                             // 0x0030(0x0010) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UImage* Image;                                                   // 0x0040(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
	};

	/**
	 * ScriptStruct Solarland.UIRenderOpacityTween
	 * Size -> 0x0008 (FullSize[0x0028] - InheritedSize[0x0020])
	 */
	struct FUIRenderOpacityTween : public FUITweenBaseStruct
	{
	public:
		float                                                      OriginalOpacity;                                         // 0x0020(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TargetOpacity;                                           // 0x0024(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.TextColorTween
	 * Size -> 0x0028 (FullSize[0x0048] - InheritedSize[0x0020])
	 */
	struct FTextColorTween : public FUITweenBaseStruct
	{
	public:
		struct FLinearColor                                        Original;                                                // 0x0020(0x0010) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLinearColor                                        TargetColor;                                             // 0x0030(0x0010) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UTextBlock* TargetText;                                              // 0x0040(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
	};

	/**
	 * ScriptStruct Solarland.NoticeColorData
	 * Size -> 0x0030
	 */
	struct FNoticeColorData
	{
	public:
		struct FLinearColor                                        TextBg;                                                  // 0x0000(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLinearColor                                        IconBg;                                                  // 0x0010(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLinearColor                                        Icon;                                                    // 0x0020(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.TeamMemberColor
	 * Size -> 0x0020
	 */
	struct FTeamMemberColor
	{
	public:
		struct FLinearColor                                        Main;                                                    // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLinearColor                                        Vice;                                                    // 0x0010(0x0010) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.ItemQualityData
	 * Size -> 0x0088
	 */
	struct FItemQualityData
	{
	public:
		struct FLinearColor                                        BaseColor;                                               // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLinearColor                                        HUDColor;                                                // 0x0010(0x0010) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLinearColor                                        HighQualityColor;                                        // 0x0020(0x0010) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLinearColor                                        LowQualityColor;                                         // 0x0030(0x0010) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLinearColor                                        HUDBGColor;                                              // 0x0040(0x0010) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLinearColor                                        HUDDecorateColor;                                        // 0x0050(0x0010) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     QualityIcon;                                             // 0x0060(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              QualityChar;                                             // 0x0078(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.OBTeamColor
	 * Size -> 0x0030
	 */
	struct FOBTeamColor
	{
	public:
		class FString                                              Desc;                                                    // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLinearColor                                        Main;                                                    // 0x0010(0x0010) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLinearColor                                        Vice;                                                    // 0x0020(0x0010) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.DestroyObjectEntry
	 * Size -> 0x0018
	 */
	struct FDestroyObjectEntry
	{
	public:
		class UObject* Object;                                                  // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              FullPath;                                                // 0x0008(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.DestroyObjectStruct
	 * Size -> 0x0028
	 */
	struct FDestroyObjectStruct
	{
	public:
		class UUserWidget* RootWidget;                                              // 0x0000(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              FullPath;                                                // 0x0008(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FDestroyObjectEntry>                         Objects;                                                 // 0x0018(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.UIPanelConfigEntry
	 * Size -> 0x0038
	 */
	struct FUIPanelConfigEntry
	{
	public:
		struct FSoftClassPath                                      MobileUIPath;                                            // 0x0000(0x0018) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftClassPath                                      DesktopUIPath;                                           // 0x0018(0x0018) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EUIRoot                                                    UILayerRoot;                                             // 0x0030(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bPrecache;                                               // 0x0031(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_364O[0x6];                                   // 0x0032(0x0006) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.InteractionButtonSpec
	 * Size -> 0x0004
	 */
	struct FInteractionButtonSpec
	{
	public:
		int32_t                                                    Priority;                                                // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.VehicleSkinSeat
	 * Size -> 0x0058
	 */
	struct FVehicleSkinSeat
	{
	public:
		TArray<class UClass*>                                      VechicleSkinAbilities;                                   // 0x0000(0x0010) Edit, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass* VehicleSkinWeapon;                                       // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UVehicleCameraDataAsset* OutShootCameraData;                                      // 0x0018(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UVehicleCameraDataAsset* OutShootAimCameraData;                                   // 0x0020(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCurveFloat* OutShootPitchLimitCurve;                                 // 0x0028(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              SeatDisplayIcon[0x28];                                   // 0x0030(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	};

	/**
	 * ScriptStruct Solarland.VehicleSkinWeakPoint
	 * Size -> 0x0070
	 */
	struct FVehicleSkinWeakPoint
	{
	public:
		unsigned char                                              WeakPointStaticMesh[0x28];                               // 0x0000(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		bool                                                       bWeakPointOffset;                                        // 0x0028(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NXO2[0x3];                                   // 0x0029(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             WeakPointOffset;                                         // 0x002C(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bWeakPointTransform;                                     // 0x0038(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BZ56[0x7];                                   // 0x0039(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTransform                                          WeakPointRelativeTransform;                              // 0x0040(0x0030) Edit, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarVehicleSkinPreviewMeshInfo
	 * Size -> 0x00C0
	 */
	struct FSolarVehicleSkinPreviewMeshInfo
	{
	public:
		class USkeletalMesh* Mesh;                                                    // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FXCX[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTransform                                          Transform;                                               // 0x0010(0x0030) Edit, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		class UAnimationAsset* AnimToPlay;                                              // 0x0040(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimationAsset* PageAnimToPlay[0xA];                                     // 0x0048(0x0050) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class UMaterialInterface*>                          OverrideMaterials;                                       // 0x0098(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                SocketName;                                              // 0x00A8(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<float>                                              CustomData;                                              // 0x00B0(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarVehicleSkinPreviewPageInfo
	 * Size -> 0x0002
	 */
	struct FSolarVehicleSkinPreviewPageInfo
	{
	public:
		bool                                                       bMirror;                                                 // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bChangeAnim;                                             // 0x0001(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SwitchEffectInfo
	 * Size -> 0x0018
	 */
	struct FSwitchEffectInfo
	{
	public:
		class UMeshComponent* MeshComp;                                                // 0x0000(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class UMaterialInstanceDynamic*>                    EffectMat;                                               // 0x0008(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.StealthMaterialParams
	 * Size -> 0x00A0
	 */
	struct FStealthMaterialParams
	{
	public:
		TMap<class FName, float>                                   ScalarParams;                                            // 0x0000(0x0050) Edit, NativeAccessSpecifierPublic
		TMap<class FName, struct FLinearColor>                     VectorParams;                                            // 0x0050(0x0050) Edit, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.VibrateWeaponFactorDeviceMap
	 * Size -> 0x0050
	 */
	struct FVibrateWeaponFactorDeviceMap
	{
	public:
		TMap<EVibrateDeviceType, float>                            DeviceMap;                                               // 0x0000(0x0050) Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.VisualSoundTagData
	 * Size -> 0x0040
	 */
	struct FVisualSoundTagData
	{
	public:
		struct FGameplayTagContainer                               RequiredTagsAny;                                         // 0x0000(0x0020) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		struct FGameplayTagContainer                               BlockedTagsAny;                                          // 0x0020(0x0020) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.VisualSoundData
	 * Size -> 0x0058
	 */
	struct FVisualSoundData
	{
	public:
		struct FVisualSoundTagData                                 TagsCondition;                                           // 0x0000(0x0040) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		EVisualSoundDetectionRule                                  DetectionRule;                                           // 0x0040(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IWJD[0x3];                                   // 0x0041(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      DetectionDis;                                            // 0x0044(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DetectionZ;                                              // 0x0048(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      AliveTime;                                               // 0x004C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CanBreakTime;                                            // 0x0050(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_967S[0x4];                                   // 0x0054(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.BaseFollowSpeedByTag
	 * Size -> 0x00E8
	 */
	struct FBaseFollowSpeedByTag
	{
	public:
		struct FGameplayTagRequirements                            TagRequirements;                                         // 0x0000(0x0050) Edit, NativeAccessSpecifierPublic
		float                                                      SameTargetTriggerCooldown;                               // 0x0050(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HorizontalSpeed;                                         // 0x0054(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      VerticalSpeed;                                           // 0x0058(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_72HS[0x4];                                   // 0x005C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRuntimeFloatCurve                                  SpeedScaleByDistanceCurve;                               // 0x0060(0x0088) Edit, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.WeaponAssistAimByCharacterTag
	 * Size -> 0x0058
	 */
	struct FWeaponAssistAimByCharacterTag
	{
	public:
		struct FGameplayTagRequirements                            TagRequirements;                                         // 0x0000(0x0050) Edit, NativeAccessSpecifierPublic
		class UWeaponAssistAimWeaponConfig* AssistAimConfig;                                         // 0x0050(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarWeaponFireInputRespondConfig
	 * Size -> 0x000B
	 */
	struct FSolarWeaponFireInputRespondConfig
	{
	public:
		unsigned char                                              UnknownData_ZFZX[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       bAutoCloseScope;                                         // 0x0001(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bShootAtPress;                                           // 0x0002(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bShootAtPressAutoScope;                                  // 0x0003(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCanAutoShootWhilePress;                                 // 0x0004(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCanAutoShootWhilePressAutoScope;                        // 0x0005(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCanShootWhileScoping;                                   // 0x0006(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCanShootWhileScopingAutoScope;                          // 0x0007(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCanManuallyCanceled;                                    // 0x0008(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCanManuallyCanceledAutoScope;                           // 0x0009(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bOpenScopeWhileAutoFire;                                 // 0x000A(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.WeaponSkinExtraPS
	 * Size -> 0x0030
	 */
	struct FWeaponSkinExtraPS
	{
	public:
		bool                                                       bStimulatedShow;                                         // 0x0000(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CLN6[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FName                                                Socket;                                                  // 0x0004(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_EDR5[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UParticleSystem* ps;                                                      // 0x0010(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     PSPath;                                                  // 0x0018(0x0018) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.WeaponBodyData
	 * Size -> 0x00B0
	 */
	struct FWeaponBodyData
	{
	public:
		int32_t                                                    weaponid;                                                // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KJY0[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSoftObjectPath                                     WeaponMesh;                                              // 0x0008(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass* WeaponAnimBP;                                            // 0x0020(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TMap<ECharacterMontage, struct FSoftObjectPath>            OverrideWeaponAnimSequenceMap;                           // 0x0028(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     LodpMesh;                                                // 0x0078(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FSoftObjectPath>                             WeaponMaterials;                                         // 0x0090(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FWeaponSkinExtraPS>                          SkinPSArray;                                             // 0x00A0(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.WeaponSkinPartData
	 * Size -> 0x0040
	 */
	struct FWeaponSkinPartData
	{
	public:
		int32_t                                                    WeaponPartId;                                            // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7W9F[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              WeaponPartDesc;                                          // 0x0008(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     PartDataAsset;                                           // 0x0018(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FSoftObjectPath>                             WeaponMaterials;                                         // 0x0030(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.WeaponMeshEffectData
	 * Size -> 0x0060
	 */
	struct FWeaponMeshEffectData
	{
	public:
		struct FSoftObjectPath                                     EffectPath;                                              // 0x0000(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                SocketName;                                              // 0x0018(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTransform                                          RelativeTransform;                                       // 0x0020(0x0030) Edit, BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		class UCurveVector* ScaleCurveForFOV;                                        // 0x0050(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCurveVector* LocationCurveForFOV;                                     // 0x0058(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.WeaponAttributeParam
	 * Size -> 0x0008
	 */
	struct FWeaponAttributeParam
	{
	public:
		EWeaponAttributeParamType                                  ParamType;                                               // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QEN6[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      Value;                                                   // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.WeaponAttributeModifier
	 * Size -> 0x0018
	 */
	struct FWeaponAttributeModifier
	{
	public:
		struct FGameplayTag                                        AttributeTag;                                            // 0x0000(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FWeaponAttributeParam>                       Modifiers;                                               // 0x0008(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.WeaponAttributeModifierContainer
	 * Size -> 0x0010
	 */
	struct FWeaponAttributeModifierContainer
	{
	public:
		TArray<struct FWeaponAttributeModifier>                    Modifiers;                                               // 0x0000(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.WeaponPartWeaponAttributeByWeaponID
	 * Size -> 0x0018
	 */
	struct FWeaponPartWeaponAttributeByWeaponID
	{
	public:
		int32_t                                                    weaponid;                                                // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9F4U[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FWeaponAttributeModifierContainer                   AttributeModifiers;                                      // 0x0008(0x0010) Edit, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.WeaponPartWeaponAttributeByWeaponType
	 * Size -> 0x0028
	 */
	struct FWeaponPartWeaponAttributeByWeaponType
	{
	public:
		EWeaponType                                                WeaponType;                                              // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DXCA[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FWeaponAttributeModifierContainer                   AttributeModifiers;                                      // 0x0008(0x0010) Edit, NativeAccessSpecifierPublic
		TArray<struct FWeaponPartWeaponAttributeByWeaponID>        ModifiersByWeaponID;                                     // 0x0018(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.WeaponPartGripDataForCharacter
	 * Size -> 0x0138
	 */
	struct FWeaponPartGripDataForCharacter
	{
	public:
		struct FVector                                             LeftHandIkEffectLocation;                                // 0x0000(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             LeftHandIkJointLocation;                                 // 0x000C(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             LeftHandIkJointLocationForGunIdle;                       // 0x0018(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             LeftHandIkJointLocationForGunIdleWhenCrouch;             // 0x0024(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLeftHandGripConfig                                 LeftHandGripRotationConfig;                              // 0x0030(0x0084) Edit, NoDestructor, NativeAccessSpecifierPublic
		struct FLeftHandGripConfig                                 LeftHandGripRotationConfigForGunIdle;                    // 0x00B4(0x0084) Edit, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.PartScopeCorrect
	 * Size -> 0x0018
	 */
	struct FPartScopeCorrect
	{
	public:
		struct FVector                                             FPPLocation;                                             // 0x0000(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                            FPPRotation;                                             // 0x000C(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarAmmoMeshData
	 * Size -> 0x0048
	 */
	struct FSolarAmmoMeshData
	{
	public:
		int32_t                                                    MaterialIndex;                                           // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLinearColor                                        DefaultColor;                                            // 0x0004(0x0010) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLinearColor                                        WarningColor;                                            // 0x0014(0x0010) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FLinearColor                                        SeriousWarningColor;                                     // 0x0024(0x0010) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      WarningLine;                                             // 0x0034(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SeriousWarningLine;                                      // 0x0038(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SeriousWarningBlinkLine;                                 // 0x003C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SeriousWarningBlinkStrength;                             // 0x0040(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SeriousWarningBlinkFrequence;                            // 0x0044(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.WeaponRecoilVectorGenerator
	 * Size -> 0x0018
	 */
	struct FWeaponRecoilVectorGenerator
	{
	public:
		class UWeaponRecoilValueGenerator* XGenerator;                                              // 0x0000(0x0008) Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UWeaponRecoilValueGenerator* YGenerator;                                              // 0x0008(0x0008) Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UWeaponRecoilValueGenerator* ZGenerator;                                              // 0x0010(0x0008) Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.ValueCurveBySprayingTime
	 * Size -> 0x0018
	 */
	struct FValueCurveBySprayingTime
	{
	public:
		class UCurveVector* ValueCurve;                                              // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TimeScale;                                               // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             ValueScale;                                              // 0x000C(0x000C) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.WeaponRecoilRotatorGenerator
	 * Size -> 0x0018
	 */
	struct FWeaponRecoilRotatorGenerator
	{
	public:
		class UWeaponRecoilValueGenerator* PitchGenerator;                                          // 0x0000(0x0008) Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UWeaponRecoilValueGenerator* YawGenerator;                                            // 0x0008(0x0008) Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UWeaponRecoilValueGenerator* RollGenerator;                                           // 0x0010(0x0008) Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.FixedSectionInfo
	 * Size -> 0x0010
	 */
	struct FFixedSectionInfo
	{
	public:
		int32_t                                                    SprayingCount;                                           // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6Q03[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UWeaponRecoilValueGenerator* ValueGenerator;                                          // 0x0008(0x0008) Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.ScopeSliderData
	 * Size -> 0x0028
	 */
	struct FScopeSliderData
	{
	public:
		struct FVector2D                                           SliderPercentRange;                                      // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SliderAnimeTimer;                                        // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EVehicleWeaponScopeType                                    ScopeMagnifier;                                          // 0x000C(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_U6G7[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FText                                                DisplayText;                                             // 0x0010(0x0018) Edit, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.WeaponAttributeModifiersByTag
	 * Size -> 0x0050 (FullSize[0x0060] - InheritedSize[0x0010])
	 */
	struct FWeaponAttributeModifiersByTag : public FWeaponAttributeModifierContainer
	{
	public:
		struct FGameplayTagRequirements                            TagRequirements;                                         // 0x0010(0x0050) Edit, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.GunKickScale
	 * Size -> 0x0018
	 */
	struct FGunKickScale
	{
	public:
		float                                                      XOffsetScale;                                            // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      YOffsetScale;                                            // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ZOffsetScale;                                            // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PitchScale;                                              // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      YawScale;                                                // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RollScale;                                               // 0x0014(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.WeaponSkewAdjustment
	 * Size -> 0x0090
	 */
	struct FWeaponSkewAdjustment
	{
	public:
		EWeaponSkewInputType                                       InputType;                                               // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EWeaponSkewAdjustmentType                                  AdjustmentType;                                          // 0x0001(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Z1JG[0x6];                                   // 0x0002(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FRuntimeFloatCurve                                  AdjustmentCurve;                                         // 0x0008(0x0088) Edit, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.CrossHairShootConfig
	 * Size -> 0x0010
	 */
	struct FCrossHairShootConfig
	{
	public:
		float                                                      GunKickOffsetInheritRatio;                               // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SkewOffsetInheritRatio;                                  // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class URecoverableRecoilPattern* CrossHairKickPattern;                                    // 0x0008(0x0008) Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SpreadScaleIncrease
	 * Size -> 0x0014
	 */
	struct FSpreadScaleIncrease
	{
	public:
		int32_t                                                    SprayingCount;                                           // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinSpreadScale;                                          // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MaxSpreadScale;                                          // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRangeFloat                                         ScaleIncreaseRange;                                      // 0x000C(0x0008) Edit, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.WeaponSystemInteract
	 * Size -> 0x0050
	 */
	struct FWeaponSystemInteract
	{
	public:
		unsigned char                                              UnknownData_A35C[0x50];                                  // 0x0000(0x0050) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.WeaponAction
	 * Size -> 0x0008
	 */
	struct FWeaponAction
	{
	public:
		int32_t                                                    ActionCount;                                             // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ActionParameter;                                         // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SCMRankData
	 * Size -> 0x0018
	 */
	struct FSCMRankData
	{
	public:
		class FString                                              HostID;                                                  // 0x0000(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Rank;                                                    // 0x0010(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Value;                                                   // 0x0014(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SCMRankInfo
	 * Size -> 0x0018
	 */
	struct FSCMRankInfo
	{
	public:
		class FString                                              RankName;                                                // 0x0000(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESCMDataRankType                                           RankType;                                                // 0x0010(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESCMHostType                                               HostType;                                                // 0x0011(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_X07H[0x6];                                   // 0x0012(0x0006) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.StartRecordingParams
	 * Size -> 0x0010
	 */
	struct FStartRecordingParams
	{
	public:
		bool                                                       bWithLevelStreamingFixes;                                // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bEnableCheckpoint;                                       // 0x0001(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_E13P[0x2];                                   // 0x0002(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		uint32_t                                                   RecordHz;                                                // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CheckpointInterval;                                      // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ChunkInterval;                                           // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.InteractiveTaskConfig
	 * Size -> 0x0080 (FullSize[0x0088] - InheritedSize[0x0008])
	 */
	struct FInteractiveTaskConfig : public FTableRowBase
	{
	public:
		int32_t                                                    TaskID;                                                  // 0x0008(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    GiftID;                                                  // 0x000C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    TaskName;                                                // 0x0010(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SVRN[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              Describe;                                                // 0x0018(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    TaskUpgradeDescribe;                                     // 0x0028(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QSFS[0x4];                                   // 0x002C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSoftObjectPath                                     TaskIcon;                                                // 0x0030(0x0018) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESocialCurrencyType                                        CurrencyType;                                            // 0x0048(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_R0A3[0x3];                                   // 0x0049(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    MaxTaskLevel;                                            // 0x004C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<int32_t>                                            TaskTarget;                                              // 0x0050(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<int32_t>                                            UpgradePrice;                                            // 0x0060(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<int32_t>                                            TaskReward;                                              // 0x0070(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EInteractiveTaskType                                       TaskType;                                                // 0x0080(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VFON[0x3];                                   // 0x0081(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    Param;                                                   // 0x0084(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SpectateReportInfo
	 * Size -> 0x0028
	 */
	struct FSpectateReportInfo
	{
	public:
		uint32_t                                                   RankLevelID;                                             // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VSD3[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              TargetUserID;                                            // 0x0008(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              TargetType;                                              // 0x0018(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Q23O[0x3];                                   // 0x0019(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		uint32_t                                                   SpectateElapsedTime;                                     // 0x001C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              Type;                                                    // 0x0020(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_E5B4[0x7];                                   // 0x0021(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.SolarPointDamageEvent
	 * Size -> 0x0068 (FullSize[0x0110] - InheritedSize[0x00A8])
	 */
	struct FSolarPointDamageEvent : public FPointDamageEvent
	{
	public:
		bool                                                       bBreakShield;                                            // 0x00A8(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIgnoreShield;                                           // 0x00A9(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JD98[0x2];                                   // 0x00AA(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ActualShieldDamage;                                      // 0x00AC(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bBreakArmor;                                             // 0x00B0(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIgnoreArmor;                                            // 0x00B1(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AO66[0x2];                                   // 0x00B2(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ActualArmorDamage;                                       // 0x00B4(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESolarAttributeType                                        SolarAttributeType;                                      // 0x00B8(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bPreFakeInvincible;                                      // 0x00B9(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EHealthChangeType                                          HealthChangeType;                                        // 0x00BA(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QRMB[0x5];                                   // 0x00BB(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ASolarAbility* DamageAbility;                                           // 0x00C0(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USolarAbilityEffect* DamageAbilityEffect;                                     // 0x00C8(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EDamageResultType                                          ResultType;                                              // 0x00D0(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bJustForShield;                                          // 0x00D1(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCanDamageTeamate;                                       // 0x00D2(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_50CM[0x1];                                   // 0x00D3(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    UseWeaponID;                                             // 0x00D4(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESCMDamageType                                             DamageType;                                              // 0x00D8(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XM5L[0x3];                                   // 0x00D9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TWeakObjectPtr<class AActor>                               DamageCauser;                                            // 0x00DC(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_D5HS[0xC];                                   // 0x00E4(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              HitBoneName;                                             // 0x00F0(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bHitVehicleWeakPoint : 1;                                // 0x0100(0x0001) BIT_FIELD BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bHitHumanoidTargetHead : 1;                              // 0x0100(0x0001) BIT_FIELD BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_59AP[0xF];                                   // 0x0101(0x000F) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.PlayerWeaponMsg
	 * Size -> 0x0018
	 */
	struct FPlayerWeaponMsg
	{
	public:
		EPlayerWeaponMsgType                                       MsgType;                                                 // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QARX[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              MsgDetail;                                               // 0x0008(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.ScannedInfo_NetQuantize
	 * Size -> 0x0018
	 */
	struct FScannedInfo_NetQuantize
	{
	public:
		uint32_t                                                   UniqueId;                                                // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              TargetType;                                              // 0x0004(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NHH9[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		uint32_t                                                   VehicleID;                                               // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector_NetQuantize                                 TargetLocation;                                          // 0x000C(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.RestoreAbilityInfo
	 * Size -> 0x0020
	 */
	struct FRestoreAbilityInfo
	{
	public:
		struct FGameplayAbilitySpecHandle                          Handle;                                                  // 0x0000(0x0004) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QSJO[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FPredictionKey                                      ActivationPredictionKey;                                 // 0x0008(0x0018) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.BackpackStatisticsInfo
	 * Size -> 0x001C
	 */
	struct FBackpackStatisticsInfo
	{
	public:
		bool                                                       IsVertical;                                              // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6HTU[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             PlayerStartLocation;                                     // 0x0004(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             PlayerEndLocation;                                       // 0x0010(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SoundGroupPlayContext
	 * Size -> 0x0008
	 */
	struct FSoundGroupPlayContext
	{
	public:
		unsigned char                                              UnknownData_B6GJ[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.SoundGroupPlayContextByCharacter
	 * Size -> 0x0018 (FullSize[0x0020] - InheritedSize[0x0008])
	 */
	struct FSoundGroupPlayContextByCharacter : public FSoundGroupPlayContext
	{
	public:
		TWeakObjectPtr<class ASolarCharacter>                      Self;                                                    // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TWeakObjectPtr<class ASolarCharacter>                      Instigator;                                              // 0x0010(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TWeakObjectPtr<class ASolarCharacter>                      LocalCharacter;                                          // 0x0018(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.OrnamentCompAndVisibilityConfigPair
	 * Size -> 0x0010
	 */
	struct FOrnamentCompAndVisibilityConfigPair
	{
	public:
		TWeakObjectPtr<class USceneComponent>                      OrnamentComp;                                            // 0x0000(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		class UOrnamentComponentVisibilityConfig* VisibilityConfig;                                        // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
	};

	/**
	 * ScriptStruct Solarland.SolarGameModeInfo
	 * Size -> 0x0028
	 */
	struct FSolarGameModeInfo
	{
	public:
		int32_t                                                    GameModeId;                                              // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_J3CC[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              MapName;                                                 // 0x0008(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    NumMode;                                                 // 0x0018(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    PlayerCount;                                             // 0x001C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    TeamCount;                                               // 0x0020(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_M9I0[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.ScreenshotSetting
	 * Size -> 0x0040
	 */
	struct FScreenshotSetting
	{
	public:
		bool                                                       EnableOnCurrentReportGameCheating;                       // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_W7MD[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    MaxCountInRound;                                         // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<bool>                                               ScreenshotMoment;                                        // 0x0008(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ScreenshotInterval;                                      // 0x0018(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ScreenshotWidth;                                         // 0x001C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ScreenshotQuality;                                       // 0x0020(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BZYA[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              ImageSaveType;                                           // 0x0028(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EShotModeFlag                                              ScreenshotMode;                                          // 0x0038(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_CVFH[0x3];                                   // 0x0039(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    ImageMaxSize;                                            // 0x003C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarInputModeDataBase
	 * Size -> 0x0010
	 */
	struct FSolarInputModeDataBase
	{
	public:
		unsigned char                                              UnknownData_RPIV[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.LocTextParam
	 * Size -> 0x0018
	 */
	struct FLocTextParam
	{
	public:
		class FString                                              ParamName;                                               // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    LocTextID;                                               // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8VS7[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.SShotImageInfo
	 * Size -> 0x0078
	 */
	struct FSShotImageInfo
	{
	public:
		class FString                                              UserId;                                                  // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              PlayerId;                                                // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              BattleID;                                                // 0x0020(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int64_t                                                    ScreenshotTime;                                          // 0x0030(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ImageSize;                                               // 0x0038(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ImageWidth;                                              // 0x003C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ImageHeight;                                             // 0x0040(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VCTX[0x4];                                   // 0x0044(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              ImageType;                                               // 0x0048(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ImageBuffer;                                             // 0x0058(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JAUB[0x10];                                  // 0x0068(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.NoticeData
	 * Size -> 0x00A0
	 */
	struct FNoticeData
	{
	public:
		int32_t                                                    NoticeId;                                                // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ECustomNoticeType                                          NoticeType;                                              // 0x0004(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TRMW[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      ConfigShowTime;                                          // 0x0008(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Duration;                                                // 0x000C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              NoticeText;                                              // 0x0010(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ECustomNoticeColor                                         NoticeColor;                                             // 0x0020(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WK4M[0x7];                                   // 0x0021(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              NoticeClassPath;                                         // 0x0028(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              NoticeIconPath;                                          // 0x0038(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TWeakObjectPtr<class UUINoticeBase>                        NoticeWidget;                                            // 0x0048(0x0008) BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TMap<class FString, class FString>                         Param;                                                   // 0x0050(0x0050) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.BattlePassInfo
	 * Size -> 0x0028
	 */
	struct FBattlePassInfo
	{
	public:
		TArray<struct FTaskBriefData>                              tasks;                                                   // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int64_t                                                    BattlePassID;                                            // 0x0010(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int64_t                                                    currWeek;                                                // 0x0018(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int64_t                                                    maxWeek;                                                 // 0x0020(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.TaskUpdateInfo
	 * Size -> 0x0050
	 */
	struct FTaskUpdateInfo
	{
	public:
		bool                                                       delAllTask;                                              // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_V3F4[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<int64_t>                                            delIDs;                                                  // 0x0008(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FBattlePassInfo                                     Task;                                                    // 0x0018(0x0028) NativeAccessSpecifierPublic
		class FString                                              PlayerId;                                                // 0x0040(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.WeaponPartsData
	 * Size -> 0x0014
	 */
	struct FWeaponPartsData
	{
	public:
		int32_t                                                    ScopeId;                                                 // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    GripID;                                                  // 0x0004(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    GunStockID;                                              // 0x0008(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MuzzleID;                                                // 0x000C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ClipID;                                                  // 0x0010(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.LocalFileInfo
	 * Size -> 0x0020
	 */
	struct FLocalFileInfo
	{
	public:
		class FString                                              Dir;                                                     // 0x0000(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Filename;                                                // 0x0010(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.ItemCountsList
	 * Size -> 0x0050
	 */
	struct FItemCountsList
	{
	public:
		TMap<EPickupItemType, int32_t>                             Type2IntMap;                                             // 0x0000(0x0050) NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.InteractionTriggerInfo
	 * Size -> 0x0038
	 */
	struct FInteractionTriggerInfo
	{
	public:
		struct FGameplayTag                                        GameplayTag;                                             // 0x0000(0x0008) BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ETRY[0x30];                                  // 0x0008(0x0030) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.HUDNoticeParams
	 * Size -> 0x0050
	 */
	struct FHUDNoticeParams
	{
	public:
		TMap<class FString, class FString>                         Params;                                                  // 0x0000(0x0050) Edit, BlueprintVisible, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.CountDownInfo
	 * Size -> 0x0048
	 */
	struct FCountDownInfo
	{
	public:
		int32_t                                                    TextID;                                                  // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Time;                                                    // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RemainingTime;                                           // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bShowBtn;                                                // 0x000C(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_G4MH[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    PassiveTextID;                                           // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FGameplayTag                                        GameplayTag;                                             // 0x0014(0x0008) BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_S7M0[0x24];                                  // 0x001C(0x0024) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    ContributorCharacterId;                                  // 0x0040(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		ECountDownState                                            State;                                                   // 0x0044(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_EMXH[0x3];                                   // 0x0045(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.KillInfo
	 * Size -> 0x0098
	 */
	struct FKillInfo
	{
	public:
		class FString                                              KillerPlayerId;                                          // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    KillerSkinID;                                            // 0x0010(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    KillerTeamID;                                            // 0x0014(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              KillerName;                                              // 0x0018(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    KillerFlag;                                              // 0x0028(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JMVL[0x4];                                   // 0x002C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              VictimPlayerID;                                          // 0x0030(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    VictimSkinID;                                            // 0x0040(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    VictimTeamID;                                            // 0x0044(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              VictimName;                                              // 0x0048(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    VictimFlag;                                              // 0x0058(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_B2N2[0x4];                                   // 0x005C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              KillIcon;                                                // 0x0060(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              KillLeaderID;                                            // 0x0070(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EKillParamsCompressInfo                                    KillParamsCompressInfo;                                  // 0x0080(0x0001) ELEMENT_SIZE_MISMATCH BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RX4C[0x1];                                   // 0x0081(0x0001) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		unsigned char                                              UnknownData_DYL3[0x2];                                   // 0x0082(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    KillNum;                                                 // 0x0084(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    WeaponSkinID;                                            // 0x0088(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              KillerVipType;                                           // 0x008C(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              VictimVipType;                                           // 0x008D(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ECommonInputType                                           KillerInputType;                                         // 0x008E(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ECommonInputType                                           VictimInputType;                                         // 0x008F(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDown;                                                   // 0x0090(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bPlayComboKillSoundEffect;                               // 0x0091(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PE9I[0x2];                                   // 0x0092(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    KillReportID;                                            // 0x0094(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.MaterialFilter
	 * Size -> 0x0048
	 */
	struct FMaterialFilter
	{
	public:
		bool                                                       bIgnoreChangeability;                                    // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9SBL[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UMeshComponent*>                              IncludingMeshes;                                         // 0x0008(0x0010) Edit, BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<int32_t>                                            IncludingMaterialIndices;                                // 0x0018(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class UMeshComponent*>                              ExcludingMeshes;                                         // 0x0028(0x0010) Edit, BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<int32_t>                                            ExcludingMaterialIndices;                                // 0x0038(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.MaterialParameterFilter
	 * Size -> 0x0020
	 */
	struct FMaterialParameterFilter
	{
	public:
		TArray<class FName>                                        IncludingNames;                                          // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class FName>                                        ExcludingNames;                                          // 0x0010(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.ActorParticleEffectSpawnHandle
	 * Size -> 0x0008
	 */
	struct FActorParticleEffectSpawnHandle
	{
	public:
		unsigned char                                              UnknownData_PKNR[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.MapAirlineData
	 * Size -> 0x0020
	 */
	struct FMapAirlineData
	{
	public:
		int32_t                                                    MapId;                                                   // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Height;                                                  // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Speed;                                                   // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7F9M[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FAirlineData>                                AirlineDataList;                                         // 0x0010(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.BattlegroundWeaponData
	 * Size -> 0x0018
	 */
	struct FBattlegroundWeaponData
	{
	public:
		int32_t                                                    weaponid;                                                // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FWeaponPartsData                                    WeaponPartsData;                                         // 0x0004(0x0014) BlueprintVisible, BlueprintReadOnly, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.BattlePassLevelItem
	 * Size -> 0x000C
	 */
	struct FBattlePassLevelItem
	{
	public:
		unsigned char                                              UnknownData_XWFK[0xC];                                   // 0x0000(0x000C) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.BattleRoyalTimeLineDTRow
	 * Size -> 0x0010 (FullSize[0x0018] - InheritedSize[0x0008])
	 */
	struct FBattleRoyalTimeLineDTRow : public FTableRowBase
	{
	public:
		float                                                      StartTime;                                               // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EBattleRoyalTimeLineEnum                                   OperationType;                                           // 0x000C(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_S1EZ[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    Parameter;                                               // 0x0010(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8TER[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.BattleUpgradeEffectConfigParam
	 * Size -> 0x000C
	 */
	struct FBattleUpgradeEffectConfigParam
	{
	public:
		struct FGameplayTag                                        GameplayTag;                                             // 0x0000(0x0008) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Scale;                                                   // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.BattleUpgradeEffectConfig
	 * Size -> 0x0088 (FullSize[0x0090] - InheritedSize[0x0008])
	 */
	struct FBattleUpgradeEffectConfig : public FTableRowBase
	{
	public:
		ESolarTablesEnum_BattleUpgradeEffectType                   Type;                                                    // 0x0008(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EBattleUpgradeEffectCategory                               Category;                                                // 0x0009(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_L17Z[0x6];                                   // 0x000A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              EffectClass[0x28];                                       // 0x0010(0x0028) UNKNOWN PROPERTY: SoftClassProperty
		TArray<struct FBattleUpgradeEffectConfigParam>             Parameters;                                              // 0x0038(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FWrappedLocalTextID                                 DescriptionLocalText;                                    // 0x0048(0x0004) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_R0EY[0x4];                                   // 0x004C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              Icon[0x28];                                              // 0x0050(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		class FString                                              ShortNumberDisplayFormat;                                // 0x0078(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FWrappedLocalTextID                                 TitleLocalText;                                          // 0x0088(0x0004) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FWrappedLocalTextID                                 IntroductionLocalText;                                   // 0x008C(0x0004) Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.ScreenEffectConfig
	 * Size -> 0x0070 (FullSize[0x0078] - InheritedSize[0x0008])
	 */
	struct FScreenEffectConfig : public FTableRowBase
	{
	public:
		class FString                                              EffectType;                                              // 0x0008(0x0010) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              EffectName;                                              // 0x0018(0x0010) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              State;                                                   // 0x0028(0x0010) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EBuffEffectTagType                                         TagType;                                                 // 0x0038(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bMatReplace;                                             // 0x0039(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EBuffEffectDurationType                                    DurationType;                                            // 0x003A(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_29J5[0x1];                                   // 0x003B(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      DurationTime;                                            // 0x003C(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              ScreenWidgetPath[0x28];                                  // 0x0040(0x0028) UNKNOWN PROPERTY: SoftClassProperty
		ESameScreenEffectHandleType                                SameEffectHandleType;                                    // 0x0068(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_85E4[0x3];                                   // 0x0069(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      MinIntervalForSameScreenEffect;                          // 0x006C(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MinIntervalForSameScreenEffectLowLevelDevice;            // 0x0070(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_45CJ[0x4];                                   // 0x0074(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.BuffEffectActorParam
	 * Size -> 0x00D8
	 */
	struct FBuffEffectActorParam
	{
	public:
		unsigned char                                              ActorParticlePath[0x28];                                 // 0x0000(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		struct FSolarSkinnedParticleSystem                         ActorSkinnedParticlePath;                                // 0x0028(0x0070) Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic
		class FName                                                SocketName;                                              // 0x0098(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             LocationOffset;                                          // 0x00A0(0x000C) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                            RotationOffset;                                          // 0x00AC(0x000C) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FVector                                             Scale;                                                   // 0x00B8(0x000C) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EAttachLocation                                            LocationType;                                            // 0x00C4(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAutoActivate;                                           // 0x00C5(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       Attached;                                                // 0x00C6(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAbsoluteRotation;                                       // 0x00C7(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class FName>                                        ComponentTags;                                           // 0x00C8(0x0010) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.BuffEffectTableRow
	 * Size -> 0x0030 (FullSize[0x0038] - InheritedSize[0x0008])
	 */
	struct FBuffEffectTableRow : public FTableRowBase
	{
	public:
		class FName                                                EffectType;                                              // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                EffectName;                                              // 0x0010(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                State;                                                   // 0x0018(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bMatReplace;                                             // 0x0020(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EBuffEffectDurationType                                    DurationType;                                            // 0x0021(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZSZM[0x2];                                   // 0x0022(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      DurationTime;                                            // 0x0024(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FBuffEffectActorParam>                       ActorEffectParams;                                       // 0x0028(0x0010) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SettlePageParam
	 * Size -> 0x0008
	 */
	struct FSettlePageParam
	{
	public:
		int32_t                                                    WeaponExpSettlmentNum;                                   // 0x0000(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsRankFight;                                             // 0x0004(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VK50[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.DynamicGameplayEffectSpec
	 * Size -> 0x0010
	 */
	struct FDynamicGameplayEffectSpec
	{
	public:
		class UClass* EffectClass;                                             // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      EffectLevel;                                             // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bRemoveOnEnd;                                            // 0x000C(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_URVL[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.TacticalDodgeParams
	 * Size -> 0x0008 (FullSize[0x0010] - InheritedSize[0x0008])
	 */
	struct FTacticalDodgeParams : public FGameplayAbilityTargetData
	{
	public:
		int32_t                                                    MontageIndex;                                            // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FaceYaw;                                                 // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.MontageDataByCharacterSkin
	 * Size -> 0x0010
	 */
	struct FMontageDataByCharacterSkin
	{
	public:
		int32_t                                                    CharacterSkinID;                                         // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WIPW[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimMontage* Montage;                                                 // 0x0008(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.MontageDataByCharacter
	 * Size -> 0x0020
	 */
	struct FMontageDataByCharacter
	{
	public:
		int32_t                                                    CharacterId;                                             // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6IPO[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimMontage* Montage;                                                 // 0x0008(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FMontageDataByCharacterSkin>                 SkinSpecificData;                                        // 0x0010(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.CharacterMontageMappingData
	 * Size -> 0x0040 (FullSize[0x0048] - InheritedSize[0x0008])
	 */
	struct FCharacterMontageMappingData : public FTableRowBase
	{
	public:
		struct FGameplayTag                                        MontageTag;                                              // 0x0008(0x0008) Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimMontage* MaleMontage;                                             // 0x0010(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimMontage* FemaleMontage;                                           // 0x0018(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FMontageDataByCharacter>                     CharacterSpecificData;                                   // 0x0020(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UDataTable* WeaponSpecificDataTable;                                 // 0x0030(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3N4L[0x10];                                  // 0x0038(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.EmotionMontageMappingData
	 * Size -> 0x0008 (FullSize[0x0050] - InheritedSize[0x0048])
	 */
	struct FEmotionMontageMappingData : public FCharacterMontageMappingData
	{
	public:
		bool                                                       bShowWeapon;                                             // 0x0048(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_X1UW[0x3];                                   // 0x0049(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      CameraZOffset;                                           // 0x004C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.MontageDataByWeaponSkin
	 * Size -> 0x0018
	 */
	struct FMontageDataByWeaponSkin
	{
	public:
		int32_t                                                    WeaponSkinID;                                            // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RMC0[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimMontage* MaleMontage;                                             // 0x0008(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimMontage* FemaleMontage;                                           // 0x0010(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.MontageDataByWeapon
	 * Size -> 0x0028 (FullSize[0x0030] - InheritedSize[0x0008])
	 */
	struct FMontageDataByWeapon : public FTableRowBase
	{
	public:
		int32_t                                                    weaponid;                                                // 0x0008(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6H3Y[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UAnimMontage* MaleMontage;                                             // 0x0010(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UAnimMontage* FemaleMontage;                                           // 0x0018(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FMontageDataByWeaponSkin>                    SkinSpecificData;                                        // 0x0020(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SoundGroupDataByCharacter
	 * Size -> 0x0058
	 */
	struct FSoundGroupDataByCharacter
	{
	public:
		class FName                                                DestinationSoundGroup;                                   // 0x0000(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TMap<int32_t, class FName>                                 SkinSpecificData;                                        // 0x0008(0x0050) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SoundGroupMappingData
	 * Size -> 0x0050 (FullSize[0x0058] - InheritedSize[0x0008])
	 */
	struct FSoundGroupMappingData : public FTableRowBase
	{
	public:
		TMap<int32_t, struct FSoundGroupDataByCharacter>           CharacterSpecificData;                                   // 0x0008(0x0050) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.NodeElement
	 * Size -> 0x0010
	 */
	struct FNodeElement
	{
	public:
		class UWidget* Widget;                                                  // 0x0000(0x0008) Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESlateVisibility                                           Visible;                                                 // 0x0008(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsContainer;                                            // 0x0009(0x0001) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8BFP[0x6];                                   // 0x000A(0x0006) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.NodeContainer
	 * Size -> 0x0028
	 */
	struct FNodeContainer
	{
	public:
		struct FNodeElement                                        ThisNode;                                                // 0x0000(0x0010) Edit, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		bool                                                       bRoot;                                                   // 0x0010(0x0001) Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TFN1[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FNodeElement>                                ChildsNode;                                              // 0x0018(0x0010) Edit, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.NodeContainerItem
	 * Size -> 0x0018
	 */
	struct FNodeContainerItem
	{
	public:
		class UCanvasPanel* RootContainerPanel;                                      // 0x0000(0x0008) Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FNodeContainer>                              ContainerArray;                                          // 0x0008(0x0010) Edit, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.CustomNoticeImageRow
	 * Size -> 0x0018 (FullSize[0x0020] - InheritedSize[0x0008])
	 */
	struct FCustomNoticeImageRow : public FTableRowBase
	{
	public:
		class FString                                              Remark;                                                  // 0x0008(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UTexture2D* NoticeIcon;                                              // 0x0018(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.CustomNoticeRow
	 * Size -> 0x0038 (FullSize[0x0040] - InheritedSize[0x0008])
	 */
	struct FCustomNoticeRow : public FTableRowBase
	{
	public:
		class FString                                              Remark;                                                  // 0x0008(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    NoticeText;                                              // 0x0018(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ECustomNoticeType                                          NoticeType;                                              // 0x001C(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Y3RX[0x3];                                   // 0x001D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      NoticeTime;                                              // 0x0020(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ECustomNoticeColor                                         NoticeColor;                                             // 0x0024(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SOUX[0x3];                                   // 0x0025(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass* NoticeClass;                                             // 0x0028(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              NoticeIcon;                                              // 0x0030(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.CustomNoticeID
	 * Size -> 0x0001
	 */
	struct FCustomNoticeID
	{
	public:
		unsigned char                                              UnknownData_A0IF[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.EmojiBubbleConfig
	 * Size -> 0x0008 (FullSize[0x0010] - InheritedSize[0x0008])
	 */
	struct FEmojiBubbleConfig : public FTableRowBase
	{
	public:
		class UClass* EmojiClassType;                                          // 0x0008(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.BurstItemSplitConfig
	 * Size -> 0x0038 (FullSize[0x0040] - InheritedSize[0x0008])
	 */
	struct FBurstItemSplitConfig : public FTableRowBase
	{
	public:
		int32_t                                                    ID;                                                      // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SQ8U[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<int32_t>                                            Piles;                                                   // 0x0010(0x0010) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<float>                                              ModelScale;                                              // 0x0020(0x0010) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaxPileNum;                                              // 0x0030(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                            Rotator;                                                 // 0x0034(0x000C) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.ExpItemReduceRateConfig
	 * Size -> 0x0008 (FullSize[0x0010] - InheritedSize[0x0008])
	 */
	struct FExpItemReduceRateConfig : public FTableRowBase
	{
	public:
		int32_t                                                    DeathCount;                                              // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Rate;                                                    // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.ExpItemCountConfig
	 * Size -> 0x0010 (FullSize[0x0018] - InheritedSize[0x0008])
	 */
	struct FExpItemCountConfig : public FTableRowBase
	{
	public:
		int32_t                                                    Lv;                                                      // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ExpItemCount;                                            // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ShieldMatMaxCount;                                       // 0x0010(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8UBH[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.SElementLevelStreaming
	 * Size -> 0x0010
	 */
	struct FSElementLevelStreaming
	{
	public:
		bool                                                       LoadWithLevel;                                           // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ELevelLoadType                                             LoadType;                                                // 0x0001(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8V9G[0x6];                                   // 0x0002(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ULevelStreamingDynamic* LevelStreamingDynamic;                                   // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.ChargeVibratePlayParams
	 * Size -> 0x0018
	 */
	struct FChargeVibratePlayParams
	{
	public:
		float                                                      ChargingIntervalTime;                                    // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2EE6[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UCurveFloat* ChargingFactorCurve;                                     // 0x0008(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UCurveFloat* FireFactorCurve;                                         // 0x0010(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.WeaponVibrateDTRow
	 * Size -> 0x0078 (FullSize[0x0080] - InheritedSize[0x0008])
	 */
	struct FWeaponVibrateDTRow : public FTableRowBase
	{
	public:
		class FString                                              WeaponDesc;                                              // 0x0008(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TMap<EWeaponVibrateType, struct FVibrateDevicePlayParams>  WeaponVibrateMap;                                        // 0x0018(0x0050) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
		struct FChargeVibratePlayParams                            ChargeVibrateData;                                       // 0x0068(0x0018) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SCMRankEventHandle
	 * Size -> 0x001C
	 */
	struct FSCMRankEventHandle
	{
	public:
		int32_t                                                    BeginRank;                                               // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    EndRank;                                                 // 0x0004(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FScriptDelegate                                      RankListChangeEvent;                                     // 0x0008(0x0010) BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, NativeAccessSpecifierPublic
		int32_t                                                    Index;                                                   // 0x0018(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SCMDataBoardRow
	 * Size -> 0x0080 (FullSize[0x0088] - InheritedSize[0x0008])
	 */
	struct FSCMDataBoardRow : public FTableRowBase
	{
	public:
		ESCMDataType                                               Type;                                                    // 0x0008(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESCMDataSetType                                            DataSetType;                                             // 0x0009(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_B4NC[0x6];                                   // 0x000A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              Default;                                                 // 0x0010(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class FString>                                      DefaultArray;                                            // 0x0020(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TMap<class FString, class FString>                         DefaultMap;                                              // 0x0030(0x0050) Edit, NativeAccessSpecifierPublic
		ESCMHostType                                               HostType;                                                // 0x0080(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESCMDataReplicateType                                      ReplicateType;                                           // 0x0081(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESCMDataGatherType_Settle                                  SettleGatherType;                                        // 0x0082(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESCMDataRankType                                           Rank;                                                    // 0x0083(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GP4Q[0x4];                                   // 0x0084(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.SCMGeneralDataBoardRow
	 * Size -> 0x0010 (FullSize[0x0098] - InheritedSize[0x0088])
	 */
	struct FSCMGeneralDataBoardRow : public FSCMDataBoardRow
	{
	public:
		EStatisticsType                                            MapNameType;                                             // 0x0088(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0B8N[0xF];                                   // 0x0089(0x000F) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.GuidanceConditionTableRow
	 * Size -> 0x0028 (FullSize[0x0030] - InheritedSize[0x0008])
	 */
	struct FGuidanceConditionTableRow : public FTableRowBase
	{
	public:
		unsigned char                                              TriggerType;                                             // 0x0008(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_K4SE[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class FString>                                      Parameters;                                              // 0x0010(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Description;                                             // 0x0020(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.GyroscopeDeviceModel
	 * Size -> 0x0010 (FullSize[0x0018] - InheritedSize[0x0008])
	 */
	struct FGyroscopeDeviceModel : public FTableRowBase
	{
	public:
		class FString                                              NotHavingGyroscopeDeviceModelName;                       // 0x0008(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.GyroscopeSensitivity
	 * Size -> 0x0018 (FullSize[0x0020] - InheritedSize[0x0008])
	 */
	struct FGyroscopeSensitivity : public FTableRowBase
	{
	public:
		class FString                                              Axle;                                                    // 0x0008(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      GyroscopeSensitivityArray;                               // 0x0018(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OOD4[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.GyroscopeDTRow
	 * Size -> 0x0008 (FullSize[0x0010] - InheritedSize[0x0008])
	 */
	struct FGyroscopeDTRow : public FTableRowBase
	{
	public:
		int32_t                                                    ID;                                                      // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      GyroscopeFactor;                                         // 0x000C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.AIPickHeroInfo
	 * Size -> 0x0008
	 */
	struct FAIPickHeroInfo
	{
	public:
		int32_t                                                    CharacterId;                                             // 0x0000(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SkinId;                                                  // 0x0004(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SoundGroupTableDataBase
	 * Size -> 0x0000 (FullSize[0x0008] - InheritedSize[0x0008])
	 */
	struct FSoundGroupTableDataBase : public FTableRowBase
	{	};

	/**
	 * ScriptStruct Solarland.SoundGroupHitSoundTableData
	 * Size -> 0x0010 (FullSize[0x0018] - InheritedSize[0x0008])
	 */
	struct FSoundGroupHitSoundTableData : public FSoundGroupTableDataBase
	{
	public:
		class FString                                              SoundEvent;                                              // 0x0008(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.HitSoundTableData
	 * Size -> 0x0060 (FullSize[0x0068] - InheritedSize[0x0008])
	 */
	struct FHitSoundTableData : public FTableRowBase
	{
	public:
		class UDataTable* SubTableData;                                            // 0x0008(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                Default;                                                 // 0x0010(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                CharacterBody;                                           // 0x0018(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                CharacterHead;                                           // 0x0020(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                CharacterShieldBody;                                     // 0x0028(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                CharacterShieldHead;                                     // 0x0030(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                CharacterHitDown;                                        // 0x0038(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                CharacterKill;                                           // 0x0040(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                CharacterKill2;                                          // 0x0048(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                Vehicle;                                                 // 0x0050(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                SummonItemSolid;                                         // 0x0058(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                SummonItemVirtual;                                       // 0x0060(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.RichHlinkRow
	 * Size -> 0x0868 (FullSize[0x0870] - InheritedSize[0x0008])
	 */
	struct FRichHlinkRow : public FTableRowBase
	{
	public:
		unsigned char                                              UnknownData_DZHO[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FHyperlinkStyle                                     HlinkStyle;                                              // 0x0010(0x0860) Edit, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.InGameExpConifg
	 * Size -> 0x0008 (FullSize[0x0010] - InheritedSize[0x0008])
	 */
	struct FInGameExpConifg : public FTableRowBase
	{
	public:
		int32_t                                                    Lv;                                                      // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Exp;                                                     // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.JobManagerConfig
	 * Size -> 0x0008
	 */
	struct FJobManagerConfig
	{
	public:
		class UDataTable* JobTable;                                                // 0x0000(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.KeyMapDisplayRowInfo
	 * Size -> 0x0010 (FullSize[0x0018] - InheritedSize[0x0008])
	 */
	struct FKeyMapDisplayRowInfo : public FTableRowBase
	{
	public:
		class FString                                              DisplayName;                                             // 0x0008(0x0010) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.KeyMappingRowInfo
	 * Size -> 0x0090 (FullSize[0x0098] - InheritedSize[0x0008])
	 */
	struct FKeyMappingRowInfo : public FTableRowBase
	{
	public:
		class FString                                              Label;                                                   // 0x0008(0x0010) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ActionDisplayName;                                       // 0x0018(0x0010) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ActionName;                                              // 0x0028(0x0010) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       Continuity;                                              // 0x0038(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_H0YU[0x3];                                   // 0x0039(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      Scale;                                                   // 0x003C(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              RealAction;                                              // 0x0040(0x0010) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class FString>                                      FirstDefaultKeys;                                        // 0x0050(0x0010) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class FString>                                      SecondDefaultKeys;                                       // 0x0060(0x0010) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Description;                                             // 0x0070(0x0010) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class FString>                                      RelatedActions;                                          // 0x0080(0x0010) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       Stationary;                                              // 0x0090(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZCHZ[0x7];                                   // 0x0091(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.KeyMappingJsonData
	 * Size -> 0x0010
	 */
	struct FKeyMappingJsonData
	{
	public:
		TArray<struct FKeyMappingRowInfo>                          JsonData;                                                // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.KillInfoMessage
	 * Size -> 0x0038
	 */
	struct FKillInfoMessage
	{
	public:
		unsigned char                                              UnknownData_2L3Y[0x38];                                  // 0x0000(0x0038) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.KillEffectExtraInfo
	 * Size -> 0x000C
	 */
	struct FKillEffectExtraInfo
	{
	public:
		unsigned char                                              UnknownData_GWOC[0xC];                                   // 0x0000(0x000C) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.KillExtraInfo
	 * Size -> 0x0010
	 */
	struct FKillExtraInfo
	{
	public:
		unsigned char                                              UnknownData_W93S[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.EShopDisplayData
	 * Size -> 0x0058
	 */
	struct FEShopDisplayData
	{
	public:
		int32_t                                                    ItemID;                                                  // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Price;                                                   // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      UndiscountedPrice;                                       // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Num;                                                     // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ProductID;                                               // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CoolDown;                                                // 0x0014(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Generation;                                              // 0x0018(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsRecommend;                                            // 0x001C(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_R7W9[0x3];                                   // 0x001D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              Name;                                                    // 0x0020(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Icon;                                                    // 0x0030(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Info;                                                    // 0x0040(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Quality;                                                 // 0x0050(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ItemType;                                                // 0x0054(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.MatchResult_Player
	 * Size -> 0x0058
	 */
	struct FMatchResult_Player
	{
	public:
		class FString                                              PlayerId;                                                // 0x0000(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              playerName;                                              // 0x0010(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    AvatarID;                                                // 0x0020(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    fightCharacterID;                                        // 0x0024(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    fightCharacterSkinID;                                    // 0x0028(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7XP9[0x4];                                   // 0x002C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSoftObjectPath                                     SkinConfigPath;                                          // 0x0030(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              CharacterName;                                           // 0x0048(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.MatchResult_Group
	 * Size -> 0x0018
	 */
	struct FMatchResult_Group
	{
	public:
		int32_t                                                    groupid;                                                 // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_V8W9[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FMatchResult_Player>                         Players;                                                 // 0x0008(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.MatchResult
	 * Size -> 0x0080
	 */
	struct FMatchResult
	{
	public:
		class FString                                              BattleID;                                                // 0x0000(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              BattleAddr;                                              // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Token;                                                   // 0x0020(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ModeID;                                                  // 0x0030(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RuleID;                                                  // 0x0034(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              SelfPlayerID;                                            // 0x0038(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FMatchResult_Group>                          Groups;                                                  // 0x0048(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              MapName;                                                 // 0x0058(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     MapPath;                                                 // 0x0068(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.MissileBullet
	 * Size -> 0x0068
	 */
	struct FMissileBullet
	{
	public:
		unsigned char                                              UnknownData_QP11[0x40];                                  // 0x0000(0x0040) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UParticleSystemComponent* BulletEffect;                                            // 0x0040(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UParticleSystemComponent* RibbonTrajectoryEffect;                                  // 0x0048(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class AMissileSwarmLauncher* Launcher;                                                // 0x0050(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_28N6[0x10];                                  // 0x0058(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.MissileBulletSpawnParameter
	 * Size -> 0x0048
	 */
	struct FMissileBulletSpawnParameter
	{
	public:
		struct FFireUniqueID                                       FireUniqueID;                                            // 0x0000(0x0004) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             EjectLoc;                                                // 0x0004(0x000C) ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             EjectDir;                                                // 0x0010(0x000C) ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             TargetLoc;                                               // 0x001C(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      EjectTimeStamp;                                          // 0x0028(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      EjectDelayTime;                                          // 0x002C(0x0004) ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<int32_t>                                            TrailSpreadIndexArray;                                   // 0x0030(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SwarmIndex;                                              // 0x0040(0x0004) ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_J9Y5[0x4];                                   // 0x0044(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.ReplayPlayerOverviewData
	 * Size -> 0x0060
	 */
	struct FReplayPlayerOverviewData
	{
	public:
		class FString                                              playerName;                                              // 0x0000(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              HeroName;                                                // 0x0010(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              SkinResourcePtr[0x28];                                   // 0x0020(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		int32_t                                                    PlayerNum;                                               // 0x0048(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YFJD[0x4];                                   // 0x004C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              GameModeName;                                            // 0x0050(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.RookieGuidanceTableRow
	 * Size -> 0x00B8 (FullSize[0x00C0] - InheritedSize[0x0008])
	 */
	struct FRookieGuidanceTableRow : public FTableRowBase
	{
	public:
		unsigned char                                              groupid;                                                 // 0x0008(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              Tag;                                                     // 0x0009(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IfBindedWidget;                                          // 0x000A(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7FSC[0x5];                                   // 0x000B(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              TriggerCondition;                                        // 0x0010(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TriggerDelayTime;                                        // 0x0020(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              TriggerStage;                                            // 0x0024(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AMQ8[0x3];                                   // 0x0025(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              GuideBPName;                                             // 0x0028(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           GuideBPLocation;                                         // 0x0038(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    GuideBPScale;                                            // 0x0040(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RTVR[0x4];                                   // 0x0044(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              RelatedUI;                                               // 0x0048(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           RelatedUILocation;                                       // 0x0058(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RelatedUIScale;                                          // 0x0060(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    LocTextID;                                               // 0x0064(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           LocTextLocation;                                         // 0x0068(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LocTextDuration;                                         // 0x0070(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SYH2[0x4];                                   // 0x0074(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              EndCondition;                                            // 0x0078(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      EndDelayTime;                                            // 0x0088(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7S79[0x4];                                   // 0x008C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              InterruptCondition;                                      // 0x0090(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              SingleRoundTriggerMax;                                   // 0x00A0(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              TotalTriggerMax;                                         // 0x00A1(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BVA2[0x6];                                   // 0x00A2(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              FinishCondition;                                         // 0x00A8(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IfUpload;                                                // 0x00B8(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IfMandatory;                                             // 0x00B9(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_T0E1[0x6];                                   // 0x00BA(0x0006) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.BuildingData
	 * Size -> 0x0020
	 */
	struct FBuildingData
	{
	public:
		class FString                                              BuildingLocation;                                        // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              BuildingIconName;                                        // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.ChargingZone
	 * Size -> 0x0020
	 */
	struct FChargingZone
	{
	public:
		float                                                      Level1;                                                  // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Level2;                                                  // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Level3;                                                  // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Level4;                                                  // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BNP7[0x10];                                  // 0x0010(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.SCustomMode_PlayerReport
	 * Size -> 0x0050 (FullSize[0x04E8] - InheritedSize[0x0498])
	 */
	struct FSCustomMode_PlayerReport : public FSolarPlayerReport
	{
	public:
		TMap<int32_t, int32_t>                                     RewardItems;                                             // 0x0498(0x0050) NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SettlementStageConfig
	 * Size -> 0x0040
	 */
	struct FSettlementStageConfig
	{
	public:
		unsigned char                                              Page_Die[0x28];                                          // 0x0000(0x0028) UNKNOWN PROPERTY: SoftClassProperty
		int32_t                                                    Page_SkipIndex;                                          // 0x0028(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XW3G[0x4];                                   // 0x002C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              SettlementStage[0x10];                                   // 0x0030(0x0010) UNKNOWN PROPERTY: ArrayProperty
	};

	/**
	 * ScriptStruct Solarland.SettlementConfig
	 * Size -> 0x0078 (FullSize[0x0080] - InheritedSize[0x0008])
	 */
	struct FSettlementConfig : public FTableRowBase
	{
	public:
		int32_t                                                    SettlementID;                                            // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8URB[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSettlementStageConfig                              StageConfig;                                             // 0x0010(0x0040) Edit, NativeAccessSpecifierPublic
		unsigned char                                              Formula[0x28];                                           // 0x0050(0x0028) UNKNOWN PROPERTY: SoftClassProperty
		bool                                                       IsValidData;                                             // 0x0078(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SN8O[0x7];                                   // 0x0079(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.SettlementParam_Zomborg
	 * Size -> 0x0018
	 */
	struct FSettlementParam_Zomborg
	{
	public:
		class ASolarPlayerState* ps;                                                      // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LifeTime;                                                // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    PlayerRank;                                              // 0x000C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      GoldPunishRate;                                          // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NJD4[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.SettlementParam_PageParam
	 * Size -> 0x000C
	 */
	struct FSettlementParam_PageParam
	{
	public:
		bool                                                       IsMVP;                                                   // 0x0000(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsAce;                                                   // 0x0001(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsVictory;                                               // 0x0002(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8T3U[0x1];                                   // 0x0003(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    WeaponExpSettlmentNum;                                   // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsRankFight;                                             // 0x0008(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UYC5[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.SettlementParam_KDA
	 * Size -> 0x0018
	 */
	struct FSettlementParam_KDA
	{
	public:
		class ASolarPlayerState* ps;                                                      // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    KillNum;                                                 // 0x0008(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    DeathNum;                                                // 0x000C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    AssitNum;                                                // 0x0010(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0AGB[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.SettlementParam_MVP
	 * Size -> 0x0028
	 */
	struct FSettlementParam_MVP
	{
	public:
		class ASolarPlayerState* ps;                                                      // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    KillNum;                                                 // 0x0008(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    DownNum;                                                 // 0x000C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    AssitNum;                                                // 0x0010(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SaveNum;                                                 // 0x0014(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LifeTime;                                                // 0x0018(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DamageValue;                                             // 0x001C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Rank;                                                    // 0x0020(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_H5G6[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.SettlementParam_WeaponExp
	 * Size -> 0x0020
	 */
	struct FSettlementParam_WeaponExp
	{
	public:
		class ASolarPlayerState* ps;                                                      // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      UseTime;                                                 // 0x0008(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    WeaponKillNum;                                           // 0x000C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    WeaponAssitNum;                                          // 0x0010(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ExpRatio;                                                // 0x0014(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      EXPPunishRatio;                                          // 0x0018(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PCCE[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.SettlementParam_CommonExp
	 * Size -> 0x0038
	 */
	struct FSettlementParam_CommonExp
	{
	public:
		class ASolarPlayerState* ps;                                                      // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    KillNum;                                                 // 0x0008(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    DownNum;                                                 // 0x000C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    AssitNum;                                                // 0x0010(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SaveNum;                                                 // 0x0014(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LifeTime;                                                // 0x0018(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DamageValue;                                             // 0x001C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Rank;                                                    // 0x0020(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      EXPPunishRatio;                                          // 0x0024(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CoinPunishRatio;                                         // 0x0028(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    RankCorePunish;                                          // 0x002C(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    BaseExp;                                                 // 0x0030(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ExpRatio;                                                // 0x0034(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.AchievementContext
	 * Size -> 0x0028
	 */
	struct FAchievementContext
	{
	public:
		unsigned char                                              UnknownData_PESL[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              TargetValueName;                                         // 0x0008(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              HandleFunctionName;                                      // 0x0018(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.AchievementHandle
	 * Size -> 0x0038 (FullSize[0x0040] - InheritedSize[0x0008])
	 */
	struct FAchievementHandle : public FTableRowBase
	{
	public:
		EAchievementCondition                                      ConditionType;                                           // 0x0008(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_L1GV[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              TargetValueName;                                         // 0x0010(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              HandleFunctionName;                                      // 0x0020(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Desc;                                                    // 0x0030(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarAkBankInfo
	 * Size -> 0x0058
	 */
	struct FSolarAkBankInfo
	{
	public:
		unsigned char                                              UnknownData_84OL[0x58];                                  // 0x0000(0x0058) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.AkEventLocation
	 * Size -> 0x0040
	 */
	struct FAkEventLocation
	{
	public:
		unsigned char                                              UnknownData_2HRW[0x40];                                  // 0x0000(0x0040) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.AkEventData
	 * Size -> 0x0018
	 */
	struct FAkEventData
	{
	public:
		unsigned char                                              UnknownData_HVB0[0x18];                                  // 0x0000(0x0018) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.SolarAttributeSubModifierData
	 * Size -> 0x0018
	 */
	struct FSolarAttributeSubModifierData
	{
	public:
		EGameplayModOp                                             ModifierOp;                                              // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5CU7[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      Magnitude;                                               // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsEnabled;                                              // 0x0008(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UUFM[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    ModifierID;                                              // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                ModifierName;                                            // 0x0010(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.BackpackTrailAssemblingParams
	 * Size -> 0x00A0 (FullSize[0x00A8] - InheritedSize[0x0008])
	 */
	struct FBackpackTrailAssemblingParams : public FTableRowBase
	{
	public:
		unsigned char                                              TrailParticle[0x28];                                     // 0x0008(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		unsigned char                                              WallRunTrailParticle[0x28];                              // 0x0030(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		unsigned char                                              OffgasParticle[0x28];                                    // 0x0058(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		unsigned char                                              WallRunOffgasParticle[0x28];                             // 0x0080(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
	};

	/**
	 * ScriptStruct Solarland.BackpackFXDataDTRow
	 * Size -> 0x0050 (FullSize[0x0058] - InheritedSize[0x0008])
	 */
	struct FBackpackFXDataDTRow : public FTableRowBase
	{
	public:
		TMap<class FName, struct FSoftObjectPath>                  FXPathMap;                                               // 0x0008(0x0050) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarBotMemberInfo
	 * Size -> 0x00B0
	 */
	struct FSolarBotMemberInfo
	{
	public:
		TWeakObjectPtr<class ASolarBotAIController>                BotController;                                           // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESolarBotMemberState                                       MemberState;                                             // 0x0008(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BQFL[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<EBotInteractCondition, float>                         MemberEmojiTimeStamp;                                    // 0x0010(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		TMap<EBotInteractCondition, float>                         MemberResponseTimeStamp;                                 // 0x0060(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarBotTeamInfo
	 * Size -> 0x00D0
	 */
	struct FSolarBotTeamInfo
	{
	public:
		bool                                                       bIsActive;                                               // 0x0000(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_28CW[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    TeamID;                                                  // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             TeamPosition;                                            // 0x0008(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SeparateDistance;                                        // 0x0014(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ReturnDistance;                                          // 0x0018(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bPlayerNeedPraise;                                       // 0x001C(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bHasInitByTeamConfig;                                    // 0x001D(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NV0Z[0x2];                                   // 0x001E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FSolarBotMemberInfo>                         MemberInfos;                                             // 0x0020(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TMap<EBotInteractCondition, float>                         TeamEmojiTimeStamp;                                      // 0x0030(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
		TMap<EBotInteractCondition, float>                         TeamResponseTimeStamp;                                   // 0x0080(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, EditConst, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarFuncBotSpawnParam
	 * Size -> 0x0050
	 */
	struct FSolarFuncBotSpawnParam
	{
	public:
		class UClass* CtrlSubClass;                                            // 0x0000(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UClass* CharacterSubClass;                                       // 0x0008(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CharacterId;                                             // 0x0010(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SkinId;                                                  // 0x0014(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USolarBotAIConfig* ConfigPreset;                                            // 0x0018(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FTransform                                          SpawnTrans;                                              // 0x0020(0x0030) BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.BotFocusInfo
	 * Size -> 0x0018
	 */
	struct FBotFocusInfo
	{
	public:
		unsigned char                                              UnknownData_M69E[0x18];                                  // 0x0000(0x0018) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.FeedBotStrategyInfo
	 * Size -> 0x0018
	 */
	struct FFeedBotStrategyInfo
	{
	public:
		class FString                                              PlayerId;                                                // 0x0000(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FeedPriority;                                            // 0x0010(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Difficulty;                                              // 0x0014(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.TraceRecord
	 * Size -> 0x0010
	 */
	struct FTraceRecord
	{
	public:
		TArray<struct FVector>                                     TargetTrace;                                             // 0x0000(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.PopParameter
	 * Size -> 0x0040
	 */
	struct FPopParameter
	{
	public:
		TArray<class ASolarPlayerState*>                           WarmTargets;                                             // 0x0000(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             PopLocation;                                             // 0x0010(0x000C) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KP0B[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FTraceRecord>                                TargetTraces;                                            // 0x0020(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UEnvQuery* TeleportLocEQS;                                          // 0x0030(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EEnvQueryRunMode                                           TeleportLocEQSRunMode;                                   // 0x0038(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bPopVehicle;                                             // 0x0039(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bForcePop;                                               // 0x003A(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BNCR[0x5];                                   // 0x003B(0x0005) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.PopTask
	 * Size -> 0x0060
	 */
	struct FPopTask
	{
	public:
		TArray<class ASolarPlayerState*>                           WarmBots;                                                // 0x0000(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UEnvQuery* SeparateLocEQS;                                          // 0x0010(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EEnvQueryRunMode                                           SeparateLocEQSRunMode;                                   // 0x0018(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_V7NJ[0x7];                                   // 0x0019(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FPopParameter                                       PreSetting;                                              // 0x0020(0x0040) Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.RangeInteger
	 * Size -> 0x0008
	 */
	struct FRangeInteger
	{
	public:
		int32_t                                                    Min;                                                     // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Max;                                                     // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarItemProgressionBaseline
	 * Size -> 0x00B8 (FullSize[0x00C0] - InheritedSize[0x0008])
	 */
	struct FSolarItemProgressionBaseline : public FTableRowBase
	{
	public:
		float                                                      KeyTime;                                                 // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4TW2[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<ESpecialItemID, struct FRangeInteger>                 ConsumeableItemCountSetting;                             // 0x0010(0x0050) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		struct FRangeInteger                                       PlayerLevel;                                             // 0x0060(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FRangeInteger                                       ShieldLevel;                                             // 0x0068(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		TMap<int32_t, struct FRangeInteger>                        WeaponPartsLevel;                                        // 0x0070(0x0050) Edit, BlueprintVisible, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarBotTimelineDownsizingTrigger
	 * Size -> 0x0010 (FullSize[0x0018] - InheritedSize[0x0008])
	 */
	struct FSolarBotTimelineDownsizingTrigger : public FTableRowBase
	{
	public:
		int32_t                                                    StartTime;                                               // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    EndTime;                                                 // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Min;                                                     // 0x0010(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Max;                                                     // 0x0014(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarBotTimelineUpdateItemTrigger
	 * Size -> 0x00F8 (FullSize[0x0100] - InheritedSize[0x0008])
	 */
	struct FSolarBotTimelineUpdateItemTrigger : public FTableRowBase
	{
	public:
		int32_t                                                    StartTime;                                               // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0MWX[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSolarBotTimelineAIItemSetting                      AIItemSetting;                                           // 0x0010(0x00F0) Edit, BlueprintVisible, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarBotTimelineFilterItem
	 * Size -> 0x0058
	 */
	struct FSolarBotTimelineFilterItem
	{
	public:
		ESolarBotTimelineFilterType                                Type;                                                    // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_P4XE[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TMap<ESolarBotTimelineFilterParameterType, class FString>  Parameter;                                               // 0x0008(0x0050) Edit, BlueprintVisible, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarBotTimelineFilterGroup
	 * Size -> 0x0010
	 */
	struct FSolarBotTimelineFilterGroup
	{
	public:
		TArray<struct FSolarBotTimelineFilterItem>                 FilterItem;                                              // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarBotTimelineFilter
	 * Size -> 0x0010
	 */
	struct FSolarBotTimelineFilter
	{
	public:
		TArray<struct FSolarBotTimelineFilterGroup>                FilterGroup;                                             // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarBotTimelineVehicleSetting
	 * Size -> 0x0018
	 */
	struct FSolarBotTimelineVehicleSetting
	{
	public:
		bool                                                       bHasVehicle;                                             // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5NW1[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<int32_t>                                            VehicleIDs;                                              // 0x0008(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarBotAISetting
	 * Size -> 0x0170
	 */
	struct FSolarBotAISetting
	{
	public:
		class USolarBotAIConfig* BotConfigPreset;                                         // 0x0000(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSolarBotTimelineVehicleSetting                     VehicleInfo;                                             // 0x0008(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		int32_t                                                    CharacterId;                                             // 0x0020(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SkinId;                                                  // 0x0024(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TMap<ESolarBotTimelineAIDataSettingType, struct FIntPoint> AIDataSetting;                                           // 0x0028(0x0050) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		struct FSolarBotTimelineAIItemSetting                      AIItemSetting;                                           // 0x0078(0x00F0) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		bool                                                       bSetWarmTarget;                                          // 0x0168(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_EJFF[0x7];                                   // 0x0169(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.SolarBotTimelineAIGroupSetting
	 * Size -> 0x0018
	 */
	struct FSolarBotTimelineAIGroupSetting
	{
	public:
		TArray<struct FSolarBotAISetting>                          Group;                                                   // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bGetBestChoice;                                          // 0x0010(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_QGDN[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.SolarBotTimelineWave
	 * Size -> 0x0018
	 */
	struct FSolarBotTimelineWave
	{
	public:
		TArray<struct FSolarBotTimelineAIGroupSetting>             AIGroupSetting;                                          // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EPopLocationType                                           PopLocationType;                                         // 0x0010(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ZDXD[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    Timeout;                                                 // 0x0014(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarBotTimelineTrigger
	 * Size -> 0x0048 (FullSize[0x0050] - InheritedSize[0x0008])
	 */
	struct FSolarBotTimelineTrigger : public FTableRowBase
	{
	public:
		ESolarBotTimelineTriggerType                               TriggerType;                                             // 0x0008(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              instanceID;                                              // 0x0009(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WJRW[0x2];                                   // 0x000A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      AbsoluteTriggerTime;                                     // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RelativeTriggerTime;                                     // 0x0010(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MinNumSurvivalBots;                                      // 0x0014(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ForceStartTime;                                          // 0x0018(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ForceEndTime;                                            // 0x001C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSolarBotTimelineFilter                             Filter;                                                  // 0x0020(0x0010) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		int32_t                                                    MaxNumRetry;                                             // 0x0030(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      IntervalRetry;                                           // 0x0034(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FSolarBotTimelineWave>                       Waves;                                                   // 0x0038(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_X0X0[0x8];                                   // 0x0048(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.SolarBotWavePopSetting
	 * Size -> 0x0002
	 */
	struct FSolarBotWavePopSetting
	{
	public:
		EPopLocationType                                           PopLocationType;                                         // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUsingWarmTargetForward;                                 // 0x0001(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarBotTimelineTeleCenterSetting
	 * Size -> 0x0014
	 */
	struct FSolarBotTimelineTeleCenterSetting
	{
	public:
		bool                                                       SetTeleCenter;                                           // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_I7FO[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FIntPoint                                           TeleportRadius;                                          // 0x0004(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FIntPoint                                           TeleportAngle;                                           // 0x000C(0x0008) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarBotGameTeamSetting
	 * Size -> 0x0060 (FullSize[0x0068] - InheritedSize[0x0008])
	 */
	struct FSolarBotGameTeamSetting : public FTableRowBase
	{
	public:
		TMap<class USolarBotTeamConfig*, float>                    TeamConfigWeightMap;                                     // 0x0008(0x0050) Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
		TArray<class USolarBotAIConfig*>                           CandidateBotConfigs;                                     // 0x0058(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarScoringItemStruct
	 * Size -> 0x0014
	 */
	struct FSolarScoringItemStruct
	{
	public:
		TWeakObjectPtr<class ASolarBotAIController>                BotController;                                           // 0x0000(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TWeakObjectPtr<class AActor>                               RelativeActor;                                           // 0x0008(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Score;                                                   // 0x0010(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.ByteBuffer
	 * Size -> 0x0028
	 */
	struct FByteBuffer
	{
	public:
		unsigned char                                              UnknownData_2RWQ[0x28];                                  // 0x0000(0x0028) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.CameraShakeDuration
	 * Size -> 0x0008
	 */
	struct FCameraShakeDuration
	{
	public:
		float                                                      Duration;                                                // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		ECameraShakeDurationType                                   Type;                                                    // 0x0004(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_7T3U[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.CameraShakeInfo
	 * Size -> 0x0010
	 */
	struct FCameraShakeInfo
	{
	public:
		struct FCameraShakeDuration                                Duration;                                                // 0x0000(0x0008) NoDestructor, NativeAccessSpecifierPublic
		float                                                      BlendIn;                                                 // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BlendOut;                                                // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.CameraShakeStopParams
	 * Size -> 0x0001
	 */
	struct FCameraShakeStopParams
	{
	public:
		bool                                                       bImmediately;                                            // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.CameraShakeUpdateResult
	 * Size -> 0x05F0
	 */
	struct FCameraShakeUpdateResult
	{
	public:
		unsigned char                                              UnknownData_9EM3[0x5F0];                                 // 0x0000(0x05F0) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.CameraShakeScrubParams
	 * Size -> 0x0660
	 */
	struct FCameraShakeScrubParams
	{
	public:
		float                                                      AbsoluteTime;                                            // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ShakeScale;                                              // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DynamicScale;                                            // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BlendingWeight;                                          // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FMinimalViewInfo                                    POV;                                                     // 0x0010(0x0650) Edit, BlueprintVisible, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.CameraShakeUpdateParams
	 * Size -> 0x0660
	 */
	struct FCameraShakeUpdateParams
	{
	public:
		float                                                      DeltaTime;                                               // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ShakeScale;                                              // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DynamicScale;                                            // 0x0008(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BlendingWeight;                                          // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FMinimalViewInfo                                    POV;                                                     // 0x0010(0x0650) Edit, BlueprintVisible, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.CameraShakeStartParams
	 * Size -> 0x0001
	 */
	struct FCameraShakeStartParams
	{
	public:
		bool                                                       bIsRestarting;                                           // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.HotFixAntiCheatData
	 * Size -> 0x0004
	 */
	struct FHotFixAntiCheatData
	{
	public:
		float                                                      BulletSpread;                                            // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SoundEventRow
	 * Size -> 0x0028 (FullSize[0x0030] - InheritedSize[0x0008])
	 */
	struct FSoundEventRow : public FTableRowBase
	{
	public:
		ECharacterSoundOpt                                         SoundOpt;                                                // 0x0008(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_V7JA[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              SoundName;                                               // 0x0010(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              EventName;                                               // 0x0020(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarTacticalSkillDamageEvent
	 * Size -> 0x0000 (FullSize[0x0110] - InheritedSize[0x0110])
	 */
	struct FSolarTacticalSkillDamageEvent : public FSolarPointDamageEvent
	{	};

	/**
	 * ScriptStruct Solarland.SolarClassSkillDamageEvent
	 * Size -> 0x0000 (FullSize[0x0110] - InheritedSize[0x0110])
	 */
	struct FSolarClassSkillDamageEvent : public FSolarPointDamageEvent
	{	};

	/**
	 * ScriptStruct Solarland.WeaponAbilityDamageEvent
	 * Size -> 0x0000 (FullSize[0x0110] - InheritedSize[0x0110])
	 */
	struct FWeaponAbilityDamageEvent : public FSolarPointDamageEvent
	{	};

	/**
	 * ScriptStruct Solarland.VehicleAbilityDamageEvent
	 * Size -> 0x0020 (FullSize[0x0130] - InheritedSize[0x0110])
	 */
	struct FVehicleAbilityDamageEvent : public FSolarPointDamageEvent
	{
	public:
		class FString                                              AbilityName;                                             // 0x0110(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              AbilityTextType;                                         // 0x0120(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SummonWeaponDamageEvent
	 * Size -> 0x0008 (FullSize[0x0118] - InheritedSize[0x0110])
	 */
	struct FSummonWeaponDamageEvent : public FSolarPointDamageEvent
	{
	public:
		TWeakObjectPtr<class ASolarCharacter>                      SourceWeaponHolder;                                      // 0x0110(0x0008) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarWeaponDamageEvent
	 * Size -> 0x0010 (FullSize[0x0120] - InheritedSize[0x0110])
	 */
	struct FSolarWeaponDamageEvent : public FSolarPointDamageEvent
	{
	public:
		int32_t                                                    weaponid;                                                // 0x0110(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    WeaponSkinID;                                            // 0x0114(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    WeaponLv;                                                // 0x0118(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    ItemID;                                                  // 0x011C(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.VehicleWeaponDamageEvent
	 * Size -> 0x0008 (FullSize[0x0128] - InheritedSize[0x0120])
	 */
	struct FVehicleWeaponDamageEvent : public FSolarWeaponDamageEvent
	{
	public:
		int32_t                                                    VehicleID;                                               // 0x0120(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PWGM[0x4];                                   // 0x0124(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.UnarmWeaponDamageEvent
	 * Size -> 0x0000 (FullSize[0x0110] - InheritedSize[0x0110])
	 */
	struct FUnarmWeaponDamageEvent : public FSolarPointDamageEvent
	{	};

	/**
	 * ScriptStruct Solarland.VhicleExplosionDamageEvent
	 * Size -> 0x0008 (FullSize[0x0118] - InheritedSize[0x0110])
	 */
	struct FVhicleExplosionDamageEvent : public FSolarPointDamageEvent
	{
	public:
		int32_t                                                    VehicleID;                                               // 0x0110(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KOWQ[0x4];                                   // 0x0114(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.VehicleHitDamageEvent
	 * Size -> 0x0008 (FullSize[0x0118] - InheritedSize[0x0110])
	 */
	struct FVehicleHitDamageEvent : public FSolarPointDamageEvent
	{
	public:
		int32_t                                                    VehicleID;                                               // 0x0110(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1T84[0x4];                                   // 0x0114(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.SolarSystemDamage
	 * Size -> 0x0000 (FullSize[0x0110] - InheritedSize[0x0110])
	 */
	struct FSolarSystemDamage : public FSolarPointDamageEvent
	{	};

	/**
	 * ScriptStruct Solarland.GMCmdDamageEvent
	 * Size -> 0x0000 (FullSize[0x0110] - InheritedSize[0x0110])
	 */
	struct FGMCmdDamageEvent : public FSolarSystemDamage
	{	};

	/**
	 * ScriptStruct Solarland.DeathVergeInWaterDamageEvent
	 * Size -> 0x0000 (FullSize[0x0110] - InheritedSize[0x0110])
	 */
	struct FDeathVergeInWaterDamageEvent : public FSolarSystemDamage
	{	};

	/**
	 * ScriptStruct Solarland.HelplessDeathVergeDamageEvent
	 * Size -> 0x0000 (FullSize[0x0110] - InheritedSize[0x0110])
	 */
	struct FHelplessDeathVergeDamageEvent : public FSolarSystemDamage
	{	};

	/**
	 * ScriptStruct Solarland.DyingDamageEvent
	 * Size -> 0x0000 (FullSize[0x0110] - InheritedSize[0x0110])
	 */
	struct FDyingDamageEvent : public FSolarSystemDamage
	{	};

	/**
	 * ScriptStruct Solarland.SolarAirDropDamageEvent
	 * Size -> 0x0000 (FullSize[0x0110] - InheritedSize[0x0110])
	 */
	struct FSolarAirDropDamageEvent : public FSolarSystemDamage
	{	};

	/**
	 * ScriptStruct Solarland.SolarBombDamageEvent
	 * Size -> 0x0000 (FullSize[0x0110] - InheritedSize[0x0110])
	 */
	struct FSolarBombDamageEvent : public FSolarSystemDamage
	{	};

	/**
	 * ScriptStruct Solarland.SolarPoisonDamageEvent
	 * Size -> 0x0000 (FullSize[0x0110] - InheritedSize[0x0110])
	 */
	struct FSolarPoisonDamageEvent : public FSolarSystemDamage
	{	};

	/**
	 * ScriptStruct Solarland.SoundGroupClothSoundTableData
	 * Size -> 0x0010 (FullSize[0x0018] - InheritedSize[0x0008])
	 */
	struct FSoundGroupClothSoundTableData : public FSoundGroupTableDataBase
	{
	public:
		class FString                                              SoundEvent;                                              // 0x0008(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SoundGroupStepSoundTableData
	 * Size -> 0x0010 (FullSize[0x0018] - InheritedSize[0x0008])
	 */
	struct FSoundGroupStepSoundTableData : public FSoundGroupTableDataBase
	{
	public:
		class FString                                              SoundEvent;                                              // 0x0008(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.TempUndesignedAttributeMap
	 * Size -> 0x0050
	 */
	struct FTempUndesignedAttributeMap
	{
	public:
		TMap<class FName, float>                                   Value;                                                   // 0x0000(0x0050) NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.BagRequirementData
	 * Size -> 0x0008
	 */
	struct FBagRequirementData
	{
	public:
		int32_t                                                    ItemID;                                                  // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    count;                                                   // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.ReplicateBagGridData
	 * Size -> 0x00C8
	 */
	struct FReplicateBagGridData
	{
	public:
		struct FSolarItemData                                      ItemData;                                                // 0x0000(0x00B8) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		EBagGridType                                               GridType;                                                // 0x00B8(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_41AG[0x3];                                   // 0x00B9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    BagGrade;                                                // 0x00BC(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Index;                                                   // 0x00C0(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsRequirementTag;                                        // 0x00C4(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4YEQ[0x3];                                   // 0x00C5(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.ReplicateBagGradeData
	 * Size -> 0x0018
	 */
	struct FReplicateBagGradeData
	{
	public:
		int32_t                                                    BagGrade;                                                // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_OTMX[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FReplicateBagGridData>                       BagGridDataArray;                                        // 0x0008(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.ShieldEffect
	 * Size -> 0x0038
	 */
	struct FShieldEffect
	{
	public:
		unsigned char                                              ShieldEffect[0x28];                                      // 0x0000(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		struct FVector                                             EffectScale;                                             // 0x0028(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AQ23[0x4];                                   // 0x0034(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.CharacterHitInfo
	 * Size -> 0x00B4
	 */
	struct FCharacterHitInfo
	{
	public:
		ESolarHitType                                              HitType;                                                 // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_B7OW[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TWeakObjectPtr<class AActor>                               Instigator;                                              // 0x0004(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FHitResult                                          HitResult;                                               // 0x000C(0x0088) IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		struct FVector                                             RelativeHitLocation;                                     // 0x0094(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TWeakObjectPtr<class ASolarWeapon>                         WeaponCauser;                                            // 0x00A0(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CauserWeaponID;                                          // 0x00A8(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    CauserWeaponSkinID;                                      // 0x00AC(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Damage;                                                  // 0x00B0(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.CharacterMovementSimulationOptions
	 * Size -> 0x0010
	 */
	struct FCharacterMovementSimulationOptions
	{
	public:
		bool                                                       bEnabled;                                                // 0x0000(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9DLY[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      NetworkMaxSmoothUpdateDistance;                          // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      NetworkNoSmoothUpdateDistance;                           // 0x0008(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      NetworkSimulatedSmoothLocationTime;                      // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SideDataParams
	 * Size -> 0x0018 (FullSize[0x0020] - InheritedSize[0x0008])
	 */
	struct FSideDataParams : public FGameplayAbilityTargetData
	{
	public:
		class FString                                              SideName;                                                // 0x0008(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              TeamID;                                                  // 0x0018(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_09HV[0x7];                                   // 0x0019(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.CelebrateWinnerTargetData
	 * Size -> 0x0020 (FullSize[0x0028] - InheritedSize[0x0008])
	 */
	struct FCelebrateWinnerTargetData : public FGameplayAbilityTargetData
	{
	public:
		class UObject* FocusCharacter;                                          // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FocusRange;                                              // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bValidReviveCenter;                                      // 0x0014(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AD6L[0x3];                                   // 0x0015(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             ReviveCenter;                                            // 0x0018(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8Q6D[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.RadarSpawnParams
	 * Size -> 0x0010 (FullSize[0x0018] - InheritedSize[0x0008])
	 */
	struct FRadarSpawnParams : public FGameplayAbilityTargetData
	{
	public:
		struct FVector                                             SpawnLocation;                                           // 0x0008(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_IYR0[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.VehicleHitchingParams
	 * Size -> 0x0008 (FullSize[0x0010] - InheritedSize[0x0008])
	 */
	struct FVehicleHitchingParams : public FGameplayAbilityTargetData
	{
	public:
		int32_t                                                    VehicleTypeID;                                           // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9K42[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.SingleCruiseData
	 * Size -> 0x0020 (FullSize[0x0028] - InheritedSize[0x0008])
	 */
	struct FSingleCruiseData : public FGameplayAbilityTargetData
	{
	public:
		struct FVector                                             StartLocation;                                           // 0x0008(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             EndLocation;                                             // 0x0014(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      During;                                                  // 0x0020(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DL9D[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.ZiplineData
	 * Size -> 0x0010 (FullSize[0x0018] - InheritedSize[0x0008])
	 */
	struct FZiplineData : public FGameplayAbilityTargetData
	{
	public:
		class ASolarZiplineObj* ZiplineObj;                                              // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EZiplineSide                                               BeginningSide;                                           // 0x0010(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_H62B[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.CustomJetFlyParams
	 * Size -> 0x0020 (FullSize[0x0028] - InheritedSize[0x0008])
	 */
	struct FCustomJetFlyParams : public FGameplayAbilityTargetData
	{
	public:
		struct FVector_NetQuantizeNormal                           DashDirection;                                           // 0x0008(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DashTime;                                                // 0x0014(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DashDistance;                                            // 0x0018(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DashBreakableTime;                                       // 0x001C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DashCameraFadeOutTime;                                   // 0x0020(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XMFN[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.DanceData
	 * Size -> 0x0008 (FullSize[0x0010] - InheritedSize[0x0008])
	 */
	struct FDanceData : public FGameplayAbilityTargetData
	{
	public:
		int32_t                                                    DanceID;                                                 // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WZZG[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.HitRecoverData
	 * Size -> 0x0020 (FullSize[0x0028] - InheritedSize[0x0008])
	 */
	struct FHitRecoverData : public FGameplayAbilityTargetData
	{
	public:
		float                                                      StartTime;                                               // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             StartLocation;                                           // 0x000C(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             Direction;                                               // 0x0018(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EHitRecoverType                                            Type;                                                    // 0x0024(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_K2KJ[0x3];                                   // 0x0025(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.GrapplingHookData
	 * Size -> 0x0010 (FullSize[0x0018] - InheritedSize[0x0008])
	 */
	struct FGrapplingHookData : public FGameplayAbilityTargetData
	{
	public:
		unsigned char                                              UnknownData_GRVM[0x10];                                  // 0x0008(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.WallRunJumpData
	 * Size -> 0x0020 (FullSize[0x0028] - InheritedSize[0x0008])
	 */
	struct FWallRunJumpData : public FGameplayAbilityTargetData
	{
	public:
		struct FVector                                             EndLocation;                                             // 0x0008(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                            EndRotation;                                             // 0x0014(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       bWallRunFailed;                                          // 0x0020(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HC8Z[0x7];                                   // 0x0021(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.VaultData
	 * Size -> 0x0038 (FullSize[0x0040] - InheritedSize[0x0008])
	 */
	struct FVaultData : public FGameplayAbilityTargetData
	{
	public:
		struct FVector                                             AnchorLocation;                                          // 0x0008(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                            AnchorRotation;                                          // 0x0014(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FVector                                             LandLocation;                                            // 0x0020(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EVaultType                                                 VaultType;                                               // 0x002C(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_D8HT[0x3];                                   // 0x002D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      CameraAngle;                                             // 0x0030(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CharacterAngle;                                          // 0x0034(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAuto;                                                   // 0x0038(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VD5I[0x7];                                   // 0x0039(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.WallRunData
	 * Size -> 0x0000 (FullSize[0x0040] - InheritedSize[0x0040])
	 */
	struct FWallRunData : public FVaultData
	{	};

	/**
	 * ScriptStruct Solarland.VectorParams
	 * Size -> 0x0010 (FullSize[0x0018] - InheritedSize[0x0008])
	 */
	struct FVectorParams : public FGameplayAbilityTargetData
	{
	public:
		struct FVector                                             VectorParam;                                             // 0x0008(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RL29[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.BlinkParams
	 * Size -> 0x0020 (FullSize[0x0028] - InheritedSize[0x0008])
	 */
	struct FBlinkParams : public FGameplayAbilityTargetData
	{
	public:
		struct FVector                                             ThrowLoc;                                                // 0x0008(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             ThrowDir;                                                // 0x0014(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PredictTime;                                             // 0x0020(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_J2BT[0x4];                                   // 0x0024(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.MissileSwarmParams
	 * Size -> 0x0018 (FullSize[0x0020] - InheritedSize[0x0008])
	 */
	struct FMissileSwarmParams : public FGameplayAbilityTargetData
	{
	public:
		struct FVector                                             AimStart;                                                // 0x0008(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                            ViewRot;                                                 // 0x0014(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SkywardDiveParams
	 * Size -> 0x0008 (FullSize[0x0010] - InheritedSize[0x0008])
	 */
	struct FSkywardDiveParams : public FGameplayAbilityTargetData
	{
	public:
		TWeakObjectPtr<class AActor>                               SkywardDiveLauncherActor;                                // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.LaunchParams
	 * Size -> 0x0018 (FullSize[0x0020] - InheritedSize[0x0008])
	 */
	struct FLaunchParams : public FGameplayAbilityTargetData
	{
	public:
		struct FVector                                             LaunchVelocity;                                          // 0x0008(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bXYOverride;                                             // 0x0014(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bZOverride;                                              // 0x0015(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WNZ0[0x2];                                   // 0x0016(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class AActor* JumpPadActor;                                            // 0x0018(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.CrouchData
	 * Size -> 0x0008 (FullSize[0x0010] - InheritedSize[0x0008])
	 */
	struct FCrouchData : public FGameplayAbilityTargetData
	{
	public:
		bool                                                       bCanCrouchOnFalling;                                     // 0x0008(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ENW1[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.MeleeAttackParams
	 * Size -> 0x0008 (FullSize[0x0010] - InheritedSize[0x0008])
	 */
	struct FMeleeAttackParams : public FGameplayAbilityTargetData
	{
	public:
		int32_t                                                    MeleeIndex;                                              // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bFullBody;                                               // 0x000C(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_XRVH[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.BoltParams
	 * Size -> 0x0008 (FullSize[0x0010] - InheritedSize[0x0008])
	 */
	struct FBoltParams : public FGameplayAbilityTargetData
	{
	public:
		int32_t                                                    FireMode;                                                // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_H7MV[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.FireParams
	 * Size -> 0x0008 (FullSize[0x0010] - InheritedSize[0x0008])
	 */
	struct FFireParams : public FGameplayAbilityTargetData
	{
	public:
		int32_t                                                    FireMode;                                                // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PNDQ[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.EquipParams
	 * Size -> 0x0008 (FullSize[0x0010] - InheritedSize[0x0008])
	 */
	struct FEquipParams : public FGameplayAbilityTargetData
	{
	public:
		int32_t                                                    WeaponSlot;                                              // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SwitchTime;                                              // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.PickUpAbilityParams
	 * Size -> 0x0018 (FullSize[0x0020] - InheritedSize[0x0008])
	 */
	struct FPickUpAbilityParams : public FGameplayAbilityTargetData
	{
	public:
		float                                                      HeightDifferenceToItem;                                  // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ESEN[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              SoundEventName;                                          // 0x0010(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.ClassLevelUpPropertyRewardConfig
	 * Size -> 0x0008
	 */
	struct FClassLevelUpPropertyRewardConfig
	{
	public:
		ESolarTablesEnum_BattleUpgradeEffectType                   EffectType;                                              // 0x0000(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FCGU[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    EffectValue;                                             // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.ClassLevelUpRewardConfig
	 * Size -> 0x0038
	 */
	struct FClassLevelUpRewardConfig
	{
	public:
		int32_t                                                    TargetLevel;                                             // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EClassLevelUpRewardType                                    RewardType;                                              // 0x0004(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_9YD8[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              TargetPassiveSkill[0x28];                                // 0x0008(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		struct FClassLevelUpPropertyRewardConfig                   PropertyReward;                                          // 0x0030(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.ClassInfo
	 * Size -> 0x0068 (FullSize[0x0070] - InheritedSize[0x0008])
	 */
	struct FClassInfo : public FTableRowBase
	{
	public:
		EClassType                                                 ClassType;                                               // 0x0008(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WLOK[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    ClassName;                                               // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     ClassIcon;                                               // 0x0010(0x0018) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USkillConfig* SkillOne;                                                // 0x0028(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USkillConfig* SkillTwo;                                                // 0x0030(0x0008) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              InitPassiveSkill[0x28];                                  // 0x0038(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		TArray<struct FClassLevelUpRewardConfig>                   LevelUpBonus;                                            // 0x0060(0x0010) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarDamageTextSlotInfo
	 * Size -> 0x0118
	 */
	struct FSolarDamageTextSlotInfo
	{
	public:
		int32_t                                                    Damage;                                                  // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JG6Q[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSolarDamageTextStyle                               DamageTextStyle;                                         // 0x0008(0x00A0) NativeAccessSpecifierPublic
		ESolarDamageTextType                                       DamageTextType;                                          // 0x00A8(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_EQJ0[0x7];                                   // 0x00A9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSolarDamageTextColor                               DamageTextColor;                                         // 0x00B0(0x0068) NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.VehicleSeatWidgets
	 * Size -> 0x0018
	 */
	struct FVehicleSeatWidgets
	{
	public:
		class USolarCheckBox* CheckBox_Seat;                                           // 0x0000(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USolarCheckBox* CheckBox_SeatExpand;                                     // 0x0008(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UImage* Img_SwitchIcon;                                          // 0x0010(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.VehicleWeaponFireWidgets
	 * Size -> 0x0038
	 */
	struct FVehicleWeaponFireWidgets
	{
	public:
		class USolarMovablePad* VehicleFirePad;                                          // 0x0000(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UImage* VehicleFireIcon;                                         // 0x0008(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USolarTextBlock* Txt_FireType;                                            // 0x0010(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UProgressBar* VehicleFireCDProgress;                                   // 0x0018(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USolarTextBlock* Txt_VehicleFireCD;                                       // 0x0020(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USolarMovablePad* QuickAdsFirePad;                                         // 0x0028(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class UImage* QuickAdsFireIcon;                                        // 0x0030(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.ElectricShopItemDemoRow
	 * Size -> 0x0028 (FullSize[0x0030] - InheritedSize[0x0008])
	 */
	struct FElectricShopItemDemoRow : public FTableRowBase
	{
	public:
		unsigned char                                              ItemDemoBP[0x28];                                        // 0x0008(0x0028) UNKNOWN PROPERTY: SoftClassProperty
	};

	/**
	 * ScriptStruct Solarland.ElectricShopMeshRow
	 * Size -> 0x0018 (FullSize[0x0020] - InheritedSize[0x0008])
	 */
	struct FElectricShopMeshRow : public FTableRowBase
	{
	public:
		struct FSoftObjectPath                                     Mesh;                                                    // 0x0008(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.AntiCheatData
	 * Size -> 0x0070
	 */
	struct FAntiCheatData
	{
	public:
		unsigned char                                              UnknownData_QE9S[0x70];                                  // 0x0000(0x0070) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.SolarGameMode_DropItemData
	 * Size -> 0x0008
	 */
	struct FSolarGameMode_DropItemData
	{
	public:
		int32_t                                                    ID;                                                      // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    count;                                                   // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.GameMode_ElementStruct
	 * Size -> 0x0218 (FullSize[0x0220] - InheritedSize[0x0008])
	 */
	struct FGameMode_ElementStruct : public FTableRowBase
	{
	public:
		class FString                                              ElementID;                                               // 0x0008(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Description;                                             // 0x0018(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Side;                                                    // 0x0028(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Job;                                                     // 0x0038(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class FName>                                        Tags;                                                    // 0x0048(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TMap<class FString, bool>                                  PropertiesBool;                                          // 0x0058(0x0050) Edit, NativeAccessSpecifierPublic
		TMap<class FString, int32_t>                               PropertiesInt;                                           // 0x00A8(0x0050) Edit, NativeAccessSpecifierPublic
		TMap<class FString, float>                                 PropertiesFloat;                                         // 0x00F8(0x0050) Edit, NativeAccessSpecifierPublic
		TMap<class FString, class FString>                         PropertiesString;                                        // 0x0148(0x0050) Edit, NativeAccessSpecifierPublic
		class FName                                                ElementTypeName;                                         // 0x0198(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              BP_Path;                                                 // 0x01A0(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             Location;                                                // 0x01B0(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_73A1[0x4];                                   // 0x01BC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FQuat                                               Rotation;                                                // 0x01C0(0x0010) IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FVector                                             Scale;                                                   // 0x01D0(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EElementStateType                                          State;                                                   // 0x01DC(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EElementVisibilityType                                     Visibility;                                              // 0x01DD(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_FMHR[0x2];                                   // 0x01DE(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    OutcomeID;                                               // 0x01E0(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FBox                                                SpawnerBox;                                              // 0x01E4(0x001C) ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		bool                                                       bRefresh;                                                // 0x0200(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_O7K6[0x3];                                   // 0x0201(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      RefreshTime;                                             // 0x0204(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bUseSpawnerTransform;                                    // 0x0208(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bToTheGround;                                            // 0x0209(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3AI3[0x2];                                   // 0x020A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    SpawnID;                                                 // 0x020C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Zone;                                                    // 0x0210(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESGameMode_ElementType                                     Type;                                                    // 0x0214(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LJ2A[0xB];                                   // 0x0215(0x000B) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.SolarElementGroup
	 * Size -> 0x0020
	 */
	struct FSolarElementGroup
	{
	public:
		class FString                                              GroupKey;                                                // 0x0000(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bIsDefault;                                              // 0x0010(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_06X7[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UDataTable* ElementTable;                                            // 0x0018(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.StatDataValue
	 * Size -> 0x0098
	 */
	struct FStatDataValue
	{
	public:
		float                                                      FloatValue;                                              // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       BoolValue;                                               // 0x0004(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5Y7P[0x3];                                   // 0x0005(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              StringValue;                                             // 0x0008(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TMap<int32_t, float>                                       IntfloatValue;                                           // 0x0018(0x0050) NativeAccessSpecifierPublic
		TArray<int32_t>                                            IntArrayValue;                                           // 0x0068(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<float>                                              FloatArrayValue;                                         // 0x0078(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             Vector;                                                  // 0x0088(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_86OH[0x4];                                   // 0x0094(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.PlayerStatesInTeam
	 * Size -> 0x0010
	 */
	struct FPlayerStatesInTeam
	{
	public:
		TArray<class ASolarPlayerState*>                           PlayerStates;                                            // 0x0000(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarGameStatisticsData
	 * Size -> 0x0028
	 */
	struct FSolarGameStatisticsData
	{
	public:
		unsigned char                                              UnknownData_0JC5[0x28];                                  // 0x0000(0x0028) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.ShadowDetailLevelData
	 * Size -> 0x0010 (FullSize[0x0018] - InheritedSize[0x0008])
	 */
	struct FShadowDetailLevelData : public FTableRowBase
	{
	public:
		ESolarSunlightShadowDetailLevel                            SunlightShadowDetailLevelEnum;                           // 0x0008(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_A48F[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    ShadowQualityValue;                                      // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MaxCSMResolution;                                        // 0x0010(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ShadowDistanceScale;                                     // 0x0014(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.ResolutionData
	 * Size -> 0x0010 (FullSize[0x0018] - InheritedSize[0x0008])
	 */
	struct FResolutionData : public FTableRowBase
	{
	public:
		ESolarResolution                                           ResolutionEnum;                                          // 0x0008(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7MV5[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    Width;                                                   // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Height;                                                  // 0x0010(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_BWJQ[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.HomeActorQueueData
	 * Size -> 0x0078
	 */
	struct FHomeActorQueueData
	{
	public:
		EHomeOperationType                                         Type;                                                    // 0x0000(0x0001) ELEMENT_SIZE_MISMATCH Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_X5RA[0x3];                                   // 0x0001(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		unsigned char                                              UnknownData_X618[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FHomeActorServerData                                Data;                                                    // 0x0008(0x0068) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		EHomeLoadingChangeType                                     LoadingType;                                             // 0x0070(0x0001) ELEMENT_SIZE_MISMATCH Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LMKG[0x3];                                   // 0x0071(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
		bool                                                       bOnConstruct;                                            // 0x0074(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6NUO[0x3];                                   // 0x0075(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.HomeBuildReqData
	 * Size -> 0x0048
	 */
	struct FHomeBuildReqData
	{
	public:
		int32_t                                                    ItemID;                                                  // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             Location;                                                // 0x0004(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                            Rotation;                                                // 0x0010(0x000C) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DJ90[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FBuildMeshSlotData>                          MatDataArr;                                              // 0x0020(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              ParentThisID;                                            // 0x0030(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsSelected;                                              // 0x0040(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UY7H[0x7];                                   // 0x0041(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.HomeCameraMoveData
	 * Size -> 0x00A0
	 */
	struct FHomeCameraMoveData
	{
	public:
		unsigned char                                              UnknownData_9NLS[0xA0];                                  // 0x0000(0x00A0) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.CameraTransitionData
	 * Size -> 0x000C
	 */
	struct FCameraTransitionData
	{
	public:
		unsigned char                                              UnknownData_NNEU[0xC];                                   // 0x0000(0x000C) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.HomeCameraModeData
	 * Size -> 0x0040
	 */
	struct FHomeCameraModeData
	{
	public:
		unsigned char                                              UnknownData_TD58[0x40];                                  // 0x0000(0x0040) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.HomeIcon
	 * Size -> 0x0030 (FullSize[0x0038] - InheritedSize[0x0008])
	 */
	struct FHomeIcon : public FTableRowBase
	{
	public:
		struct FSoftObjectPath                                     NormalIconPath;                                          // 0x0008(0x0018) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     SelectedIconPath;                                        // 0x0020(0x0018) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.HomeObject
	 * Size -> 0x00B8 (FullSize[0x00C0] - InheritedSize[0x0008])
	 */
	struct FHomeObject : public FTableRowBase
	{
	public:
		class FString                                              HomeObjectDesc;                                          // 0x0008(0x0010) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     BpPath;                                                  // 0x0018(0x0018) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     PreviewBpPath;                                           // 0x0030(0x0018) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FBuildMeshSlotData>                          DefaultMat;                                              // 0x0048(0x0010) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsFocusCenter;                                           // 0x0058(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsDrawable;                                              // 0x0059(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsRotate;                                                // 0x005A(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsBrace;                                                 // 0x005B(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsRotateHandle;                                          // 0x005C(0x0001) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_70AC[0x3];                                   // 0x005D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    RotateAngleSingle;                                       // 0x0060(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SXOP[0x4];                                   // 0x0064(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSoftObjectPath                                     Build_SFPath;                                            // 0x0068(0x0018) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     Remove_SFXPath;                                          // 0x0080(0x0018) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FRemove_SFXTime;                                         // 0x0098(0x0004) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_77Y1[0x4];                                   // 0x009C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              FSBuild_Audio;                                           // 0x00A0(0x0010) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              FSRemove_Audio;                                          // 0x00B0(0x0010) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.HomePic
	 * Size -> 0x0018 (FullSize[0x0020] - InheritedSize[0x0008])
	 */
	struct FHomePic : public FTableRowBase
	{
	public:
		struct FSoftObjectPath                                     PicPath;                                                 // 0x0008(0x0018) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.HomeObjectTexture
	 * Size -> 0x0070 (FullSize[0x0078] - InheritedSize[0x0008])
	 */
	struct FHomeObjectTexture : public FTableRowBase
	{
	public:
		class FString                                              TextureDesc;                                             // 0x0008(0x0010) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     BaseColorPath;                                           // 0x0018(0x0018) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     MetalPath;                                               // 0x0030(0x0018) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     LightmapPath;                                            // 0x0048(0x0018) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     NormalPath;                                              // 0x0060(0x0018) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarClientPerformance
	 * Size -> 0x0001
	 */
	struct FSolarClientPerformance
	{
	public:
		unsigned char                                              UnknownData_8U2P[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.CountDownInfoDeprecated
	 * Size -> 0x0030
	 */
	struct FCountDownInfoDeprecated
	{
	public:
		int32_t                                                    TextID;                                                  // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Time;                                                    // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bShowBtn;                                                // 0x0008(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Z8RA[0x27];                                  // 0x0009(0x0027) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.SolarInputModeUIOnly
	 * Size -> 0x0020 (FullSize[0x0030] - InheritedSize[0x0010])
	 */
	struct FSolarInputModeUIOnly : public FSolarInputModeDataBase
	{
	public:
		unsigned char                                              UnknownData_1R1K[0x20];                                  // 0x0010(0x0020) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.SolarInputModeGameAndUI
	 * Size -> 0x0020 (FullSize[0x0030] - InheritedSize[0x0010])
	 */
	struct FSolarInputModeGameAndUI : public FSolarInputModeDataBase
	{
	public:
		unsigned char                                              UnknownData_4B9T[0x20];                                  // 0x0010(0x0020) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.SolarInputModeGameOnly
	 * Size -> 0x0010 (FullSize[0x0020] - InheritedSize[0x0010])
	 */
	struct FSolarInputModeGameOnly : public FSolarInputModeDataBase
	{
	public:
		unsigned char                                              UnknownData_4AAU[0x10];                                  // 0x0010(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.ItemActorDTRow
	 * Size -> 0x0098 (FullSize[0x00A0] - InheritedSize[0x0008])
	 */
	struct FItemActorDTRow : public FTableRowBase
	{
	public:
		struct FSoftObjectPath                                     MeshPath;                                                // 0x0008(0x0018) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     FXPath;                                                  // 0x0020(0x0018) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FSoftObjectPath>                             MaterialPath;                                            // 0x0038(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FSoftObjectPath>                             OutLineMaterialPath;                                     // 0x0048(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MBNP[0x8];                                   // 0x0058(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTransform                                          Transform;                                               // 0x0060(0x0030) Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		float                                                      SpawnOffset;                                             // 0x0090(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      NoneMeshFxOffset;                                        // 0x0094(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2KNB[0x8];                                   // 0x0098(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.ItemResReference
	 * Size -> 0x0040 (FullSize[0x0048] - InheritedSize[0x0008])
	 */
	struct FItemResReference : public FTableRowBase
	{
	public:
		class FString                                              Description;                                             // 0x0008(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     Icon;                                                    // 0x0018(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     AbilityBP;                                               // 0x0030(0x0018) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.LoadedItemInfo
	 * Size -> 0x00D0
	 */
	struct FLoadedItemInfo
	{
	public:
		struct FSoftClassPath                                      SClassPath;                                              // 0x0000(0x0018) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSolarItemData                                      ItemData;                                                // 0x0018(0x00B8) NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.GlobalOutcomeData
	 * Size -> 0x0080
	 */
	struct FGlobalOutcomeData
	{
	public:
		int32_t                                                    ID;                                                      // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SingleMaxTimes;                                          // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    TotalMaxTimes;                                           // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    TotalMinTimes;                                           // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    NetSetTimes;                                             // 0x0010(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    DropedTimes;                                             // 0x0014(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TMap<int32_t, int32_t>                                     ItemIDNumMap;                                            // 0x0018(0x0050) NativeAccessSpecifierPublic
		TArray<int32_t>                                            AffectedOutcomes;                                        // 0x0068(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsValid;                                                 // 0x0078(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0LWN[0x7];                                   // 0x0079(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.SolarVehicleData
	 * Size -> 0x0018
	 */
	struct FSolarVehicleData
	{
	public:
		int32_t                                                    VehicleID;                                               // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_3LGW[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              VehicleBP;                                               // 0x0008(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.ItemResourceTableRow
	 * Size -> 0x0048 (FullSize[0x0050] - InheritedSize[0x0008])
	 */
	struct FItemResourceTableRow : public FTableRowBase
	{
	public:
		struct FSoftObjectPath                                     Icon;                                                    // 0x0008(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     BigIcon;                                                 // 0x0020(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     PreviewIcon;                                             // 0x0038(0x0018) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.GateAddress
	 * Size -> 0x0020
	 */
	struct FGateAddress
	{
	public:
		class FString                                              GateTCPAddr;                                             // 0x0000(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              GateUDPAddr;                                             // 0x0010(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.ServerInfo
	 * Size -> 0x0050
	 */
	struct FServerInfo
	{
	public:
		TArray<struct FGateAddress>                                GateList;                                                // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class FString>                                      CDNList;                                                 // 0x0010(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              LatestBuildVersion;                                      // 0x0020(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              SourceBuildVersion;                                      // 0x0030(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Name;                                                    // 0x0040(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.VehicleFootIKState
	 * Size -> 0x01A0
	 */
	struct FVehicleFootIKState
	{
	public:
		unsigned char                                              UnknownData_YDZI[0x1A0];                                 // 0x0000(0x01A0) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.VehicleIKGroupData
	 * Size -> 0x0008
	 */
	struct FVehicleIKGroupData
	{
	public:
		unsigned char                                              UnknownData_8MBW[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.SolarMapElementProperty
	 * Size -> 0x0028
	 */
	struct FSolarMapElementProperty
	{
	public:
		class FString                                              Name;                                                    // 0x0000(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		ESolarMapElementPropertyType                               Type;                                                    // 0x0010(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_UFTV[0x7];                                   // 0x0011(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              Value;                                                   // 0x0018(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SkydivingMapDataElem
	 * Size -> 0x0034
	 */
	struct FSkydivingMapDataElem
	{
	public:
		unsigned char                                              UnknownData_YS55[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             CacheLoc;                                                // 0x0008(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector2D                                           MapLoc;                                                  // 0x0014(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                            Rotate;                                                  // 0x001C(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FVector2D                                           Position;                                                // 0x0028(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RotationOffset;                                          // 0x0030(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SafeAreaMapInfo
	 * Size -> 0x0038
	 */
	struct FSafeAreaMapInfo
	{
	public:
		struct FVector                                             CurrentLocation;                                         // 0x0000(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CurrentRadius;                                           // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             NextLocation;                                            // 0x0010(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      NextRadius;                                              // 0x001C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      BeginShrinkTime;                                         // 0x0020(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      TargetShrinkTime;                                        // 0x0024(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CurrentConfigRadius;                                     // 0x0028(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             CurrentAreaBeginLocation;                                // 0x002C(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.MapDarkData
	 * Size -> 0x0030
	 */
	struct FMapDarkData
	{
	public:
		int32_t                                                    SrcMapID;                                                // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_59ZK[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              SrcImagePath;                                            // 0x0008(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SizeX;                                                   // 0x0018(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    SizeY;                                                   // 0x001C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_MTL4[0x10];                                  // 0x0020(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.MapSelectPointCellAddress
	 * Size -> 0x0008
	 */
	struct FMapSelectPointCellAddress
	{
	public:
		int32_t                                                    X;                                                       // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Y;                                                       // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.MetaAttributeProduceEffect
	 * Size -> 0x0048
	 */
	struct FMetaAttributeProduceEffect
	{
	public:
		class USolarAttributeSet* EffectAttributeSet;                                      // 0x0000(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FGameplayAttribute                                  EffectAttribute;                                         // 0x0008(0x0038) BlueprintVisible, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      EffectValue;                                             // 0x0040(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7W5L[0x4];                                   // 0x0044(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.MetaAttributeUpdateEvent_Character
	 * Size -> 0x0003
	 */
	struct FMetaAttributeUpdateEvent_Character
	{
	public:
		bool                                                       bHitHead;                                                // 0x0000(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bBreakShield;                                            // 0x0001(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bDead;                                                   // 0x0002(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.MetaAttributeUpdateEvent
	 * Size -> 0x0078
	 */
	struct FMetaAttributeUpdateEvent
	{
	public:
		unsigned char                                              UnknownData_ZPVZ[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    TypeID;                                                  // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_SEYN[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class USolarAbilitySystemComponent* TargetASC;                                               // 0x0010(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USolarMetaAttributeSet* MetaAttributeSet;                                        // 0x0018(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FGameplayAttribute                                  MetaAttribute;                                           // 0x0020(0x0038) BlueprintVisible, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      MetaAttributeValue;                                      // 0x0058(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_ANKX[0x4];                                   // 0x005C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<struct FMetaAttributeProduceEffect>                 Effects;                                                 // 0x0060(0x0010) BlueprintVisible, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FMetaAttributeUpdateEvent_Character                 CharacterEventData;                                      // 0x0070(0x0003) BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RE48[0x5];                                   // 0x0073(0x0005) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.SolarNetMovementState
	 * Size -> 0x00A0
	 */
	struct FSolarNetMovementState
	{
	public:
		unsigned char                                              UnknownData_NRE2[0xA0];                                  // 0x0000(0x00A0) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.OBTeamInfo
	 * Size -> 0x0030
	 */
	struct FOBTeamInfo
	{
	public:
		unsigned char                                              UnknownData_0YP1[0x30];                                  // 0x0000(0x0030) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.PerceivableEffectArea
	 * Size -> 0x002C
	 */
	struct FPerceivableEffectArea
	{
	public:
		EPerceivableEffectAreaType                                 AreaType;                                                // 0x0000(0x0001) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4N2P[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             EffectLocation;                                          // 0x0004(0x000C) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      EffectRadius;                                            // 0x0010(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TWeakObjectPtr<class AActor>                               EffectActor;                                             // 0x0014(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TWeakObjectPtr<class AActor>                               Instigator;                                              // 0x001C(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5V3M[0x8];                                   // 0x0024(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.PlayerActivityHeatKillDetail
	 * Size -> 0x0040
	 */
	struct FPlayerActivityHeatKillDetail
	{
	public:
		float                                                      KillTime;                                                // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             VictimPosition;                                          // 0x0004(0x000C) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              KillerID;                                                // 0x0010(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              VictimID;                                                // 0x0020(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsAbilityKill;                                           // 0x0030(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsScopedKill;                                            // 0x0031(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsVehicleKill;                                           // 0x0032(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsHeadShot;                                              // 0x0033(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsAbilityActivated;                                      // 0x0034(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_NX9I[0x3];                                   // 0x0035(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    weaponid;                                                // 0x0038(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_T4U7[0x4];                                   // 0x003C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.PlayerActivityHeatRawData
	 * Size -> 0x0050
	 */
	struct FPlayerActivityHeatRawData
	{
	public:
		EPlayerActivityHeatType                                    PlayerActivityHeatType;                                  // 0x0000(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_LBSI[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      HeatDataTimeStamp;                                       // 0x0004(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ActivityHeatTimeOffset;                                  // 0x0008(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_E49W[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FPlayerActivityHeatKillDetail                       KillDetail;                                              // 0x0010(0x0040) BlueprintVisible, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.ScreenshotManager
	 * Size -> 0x0050
	 */
	struct FScreenshotManager
	{
	public:
		unsigned char                                              UnknownData_5IAX[0x50];                                  // 0x0000(0x0050) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.BagItemInfo
	 * Size -> 0x00C0
	 */
	struct FBagItemInfo
	{
	public:
		struct FSolarItemData                                      ItemData;                                                // 0x0000(0x00B8) NativeAccessSpecifierPublic
		int32_t                                                    Grade;                                                   // 0x00B8(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TFYG[0x4];                                   // 0x00BC(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.ScannedVehicleDisplayRow
	 * Size -> 0x0038 (FullSize[0x0040] - InheritedSize[0x0008])
	 */
	struct FScannedVehicleDisplayRow : public FTableRowBase
	{
	public:
		int32_t                                                    VehicleID;                                               // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TWF3[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              Icon[0x28];                                              // 0x0010(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		struct FVector2D                                           IconSize;                                                // 0x0038(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.StreamingDistanceScaleParam
	 * Size -> 0x0010 (FullSize[0x0018] - InheritedSize[0x0008])
	 */
	struct FStreamingDistanceScaleParam : public FTableRowBase
	{
	public:
		ESolarGraphicsQualityLevel                                 GraphicsQualityLevel;                                    // 0x0008(0x0001) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7VXG[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      RelativeStreamingDistanceScaleParam;                     // 0x000C(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      RelativeStreamingDistanceScaleParam_PC;                  // 0x0010(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_4Q47[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.AutoDirectorNodeInfo
	 * Size -> 0x0048
	 */
	struct FAutoDirectorNodeInfo
	{
	public:
		unsigned char                                              UnknownData_L441[0x48];                                  // 0x0000(0x0048) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.AutoDirectorActivityEventScoresInfo
	 * Size -> 0x0028
	 */
	struct FAutoDirectorActivityEventScoresInfo
	{
	public:
		float                                                      ScoreSum;                                                // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_KGCU[0x4];                                   // 0x0004(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<float>                                              PlayerScores;                                            // 0x0008(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<bool>                                               PlayerMakeFollow;                                        // 0x0018(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SubGraphInfo
	 * Size -> 0x0060
	 */
	struct FSubGraphInfo
	{
	public:
		unsigned char                                              TeamIndex;                                               // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HAXD[0x7];                                   // 0x0001(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		unsigned char                                              AllPlayerStates[0x50];                                   // 0x0008(0x0050) UNKNOWN PROPERTY: SetProperty
		float                                                      ScoreSum;                                                // 0x0058(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TM9N[0x4];                                   // 0x005C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.PlayerHighlightOverview
	 * Size -> 0x0020
	 */
	struct FPlayerHighlightOverview
	{
	public:
		int32_t                                                    KillNum;                                                 // 0x0000(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    AssistNum;                                               // 0x0004(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Damage;                                                  // 0x0008(0x0004) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_VSTL[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class FString                                              PlayerId;                                                // 0x0010(0x0010) BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SkeletalMeshMergeParams
	 * Size -> 0x0020
	 */
	struct FSkeletalMeshMergeParams
	{
	public:
		TArray<class USkeletalMesh*>                               MeshesToMerge;                                           // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    StripTopLODS;                                            // 0x0010(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bNeedsCpuAccess : 1;                                     // 0x0014(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bSkeletonBefore : 1;                                     // 0x0014(0x0001) BIT_FIELD Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_RIFW[0x3];                                   // 0x0015(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class USkeleton* Skeleton;                                                // 0x0018(0x0008) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SkeletalMeshMergeUVTransforms_BP
	 * Size -> 0x0010
	 */
	struct FSkeletalMeshMergeUVTransforms_BP
	{
	public:
		TArray<struct FTransform>                                  UVTransforms;                                            // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SkeletalMeshMergeUVTransformMapping_BP
	 * Size -> 0x0010
	 */
	struct FSkeletalMeshMergeUVTransformMapping_BP
	{
	public:
		TArray<struct FSkeletalMeshMergeUVTransforms_BP>           UVTransformsPerMesh;                                     // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SkeletalMeshMergeSectionMapping_BP
	 * Size -> 0x0010
	 */
	struct FSkeletalMeshMergeSectionMapping_BP
	{
	public:
		TArray<int32_t>                                            SectionIDs;                                              // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarSkinnedSkeletalMesh
	 * Size -> 0x0068 (FullSize[0x0070] - InheritedSize[0x0008])
	 */
	struct FSolarSkinnedSkeletalMesh : public FSolarSkinnedAsset
	{
	public:
		struct FSoftObjectPath                                     DefaultSkinnedSkeletalMesh;                              // 0x0008(0x0018) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TMap<int32_t, struct FSoftObjectPath>                      SkinnedSkeletalMeshes;                                   // 0x0020(0x0050) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarSkinnedStaticMesh
	 * Size -> 0x0068 (FullSize[0x0070] - InheritedSize[0x0008])
	 */
	struct FSolarSkinnedStaticMesh : public FSolarSkinnedAsset
	{
	public:
		struct FSoftObjectPath                                     DefaultSkinnedStaticMesh;                                // 0x0008(0x0018) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TMap<int32_t, struct FSoftObjectPath>                      SkinnedStaticMeshes;                                     // 0x0020(0x0050) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarSoftObjectReference
	 * Size -> 0x0018 (FullSize[0x0020] - InheritedSize[0x0008])
	 */
	struct FSolarSoftObjectReference : public FTableRowBase
	{
	public:
		struct FSoftObjectPath                                     ObjectReference;                                         // 0x0008(0x0018) Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarSyncMoveMessageParams
	 * Size -> 0x0010
	 */
	struct FSolarSyncMoveMessageParams
	{
	public:
		float                                                      Value;                                                   // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             Location;                                                // 0x0004(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarLocaleInfo
	 * Size -> 0x0020
	 */
	struct FSolarLocaleInfo
	{
	public:
		class FString                                              Language;                                                // 0x0000(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              Region;                                                  // 0x0010(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarTablesDeviceRes
	 * Size -> 0x0010
	 */
	struct FSolarTablesDeviceRes
	{
	public:
		class FString                                              res;                                                     // 0x0000(0x0010) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarTablesRangeFloat
	 * Size -> 0x0008
	 */
	struct FSolarTablesRangeFloat
	{
	public:
		float                                                      Left;                                                    // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Right;                                                   // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarTablesRangeInt
	 * Size -> 0x0008
	 */
	struct FSolarTablesRangeInt
	{
	public:
		int32_t                                                    Left;                                                    // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Right;                                                   // 0x0004(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.TaskHandleFuncConfig
	 * Size -> 0x0038 (FullSize[0x0040] - InheritedSize[0x0008])
	 */
	struct FTaskHandleFuncConfig : public FTableRowBase
	{
	public:
		int64_t                                                    TaskType;                                                // 0x0008(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              taskDesc;                                                // 0x0010(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              TargetValueName;                                         // 0x0020(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              FuncName;                                                // 0x0030(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.TaskHandleFuncInfo
	 * Size -> 0x0018
	 */
	struct FTaskHandleFuncInfo
	{
	public:
		int64_t                                                    TaskID;                                                  // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              FuncName;                                                // 0x0008(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.TeamInfoRow
	 * Size -> 0x0020 (FullSize[0x0028] - InheritedSize[0x0008])
	 */
	struct FTeamInfoRow : public FTableRowBase
	{
	public:
		class FText                                                TeamName;                                                // 0x0008(0x0018) Edit, BlueprintVisible, NativeAccessSpecifierPublic
		unsigned char                                              MemberLimit;                                             // 0x0020(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              MatchCount;                                              // 0x0021(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_JLW9[0x6];                                   // 0x0022(0x0006) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.ConditionReturnInfo_NoParams
	 * Size -> 0x0001
	 */
	struct FConditionReturnInfo_NoParams
	{
	public:
		unsigned char                                              UnknownData_UH99[0x1];                                   // 0x0000(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.ConditionReturnInfo
	 * Size -> 0x0018
	 */
	struct FConditionReturnInfo
	{
	public:
		unsigned char                                              UnknownData_Z6MO[0x18];                                  // 0x0000(0x0018) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.ObstacleInitialPosParams
	 * Size -> 0x0008
	 */
	struct FObstacleInitialPosParams
	{
	public:
		float                                                      Scale;                                                   // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Offset;                                                  // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SpawnClusterBombParam
	 * Size -> 0x0020
	 */
	struct FSpawnClusterBombParam
	{
	public:
		struct FFireUniqueID                                       FireUniqueID;                                            // 0x0000(0x0004) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FireTimeStamp;                                           // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector_NetQuantize                                 StartLoc;                                                // 0x0008(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector_NetQuantizeNormal                           StartDir;                                                // 0x0014(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.FlameHitData
	 * Size -> 0x0048
	 */
	struct FFlameHitData
	{
	public:
		struct FFireUniqueID                                       FireUniqueID;                                            // 0x0000(0x0004) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FireTimeStamp;                                           // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FVector_NetQuantize>                         FireStartLocations;                                      // 0x0008(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FVector_NetQuantize>                         FireEndLocations;                                        // 0x0018(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FHitResult>                                  HitResultDatas;                                          // 0x0028(0x0010) ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FSolarWeaponHitAntiData>                     HitAntiDatas;                                            // 0x0038(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.CacheDecalComponent
	 * Size -> 0x0010
	 */
	struct FCacheDecalComponent
	{
	public:
		unsigned char                                              UnknownData_OK0B[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.CacheQueryActor
	 * Size -> 0x0010
	 */
	struct FCacheQueryActor
	{
	public:
		unsigned char                                              UnknownData_R1UN[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.VehicleCollisionInfo
	 * Size -> 0x0050
	 */
	struct FVehicleCollisionInfo
	{
	public:
		class UPrimitiveComponent* CollidedPrimitive;                                       // 0x0000(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector_NetQuantize                                 SelfPreVelocity;                                         // 0x0008(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector_NetQuantize                                 SelfCurrentVelocity;                                     // 0x0014(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector_NetQuantize                                 OtherVehicleLinearVelocity;                              // 0x0020(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector_NetQuantize                                 OtherVehicleAngularVelocity;                             // 0x002C(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector_NetQuantize                                 OtherVehicleLocation;                                    // 0x0038(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector_NetQuantizeNormal                           OtherVehicleRotation;                                    // 0x0044(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.CarPadSpeedData
	 * Size -> 0x0014
	 */
	struct FCarPadSpeedData
	{
	public:
		unsigned char                                              UnknownData_LPYR[0x14];                                  // 0x0000(0x0014) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.VehicleStateTransition
	 * Size -> 0x0018
	 */
	struct FVehicleStateTransition
	{
	public:
		unsigned char                                              UnknownData_3J68[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class ASolarVehiclePawn* Owner;                                                   // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USolarLeggedVehicleMovement* MovementComponent;                                       // 0x0010(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.VehicleState
	 * Size -> 0x0078
	 */
	struct FVehicleState
	{
	public:
		unsigned char                                              UnknownData_JI1B[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class USolarVehicleStateMachine* StateMachine;                                            // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class ASolarVehiclePawn* Owner;                                                   // 0x0010(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USolarLeggedVehicleMovement* MovementComponent;                                       // 0x0018(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HXL9[0x58];                                  // 0x0020(0x0058) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.SolarVirtualBulletHomingTarget
	 * Size -> 0x0018
	 */
	struct FSolarVirtualBulletHomingTarget
	{
	public:
		bool                                                       bSet;                                                    // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		bool                                                       bLocalCharacterLock;                                     // 0x0001(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_30WX[0x2];                                   // 0x0002(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TWeakObjectPtr<class AActor>                               HomingTargetActor;                                       // 0x0004(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		struct FVector                                             CurrentLoc;                                              // 0x000C(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate
	};

	/**
	 * ScriptStruct Solarland.SolarVirtualBulletSpawnParameter
	 * Size -> 0x00A8
	 */
	struct FSolarVirtualBulletSpawnParameter
	{
	public:
		struct FFireUniqueID                                       FireUniqueID;                                            // 0x0000(0x0004) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FireTimeStamp;                                           // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      PreElapsedTime;                                          // 0x0008(0x0004) ZeroConstructor, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             PlayerViewDir;                                           // 0x000C(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector_NetQuantize                                 PlayerViewLoc;                                           // 0x0018(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              IsScopeOpen;                                             // 0x0024(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int8_t                                                     FireChargePhase;                                         // 0x0025(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1DJ2[0x2];                                   // 0x0026(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      FireChargeTime;                                          // 0x0028(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector_NetQuantize                                 StartLoc;                                                // 0x002C(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector_NetQuantize                                 TargetLoc;                                               // 0x0038(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector_NetQuantizeNormal                           Dir;                                                     // 0x0044(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector_NetQuantize                                 MuzzleFxLoc;                                             // 0x0050(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CurveOffsetAngle;                                        // 0x005C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSolarVirtualBulletHomingTarget                     HomingTarget;                                            // 0x0060(0x0018) NoDestructor, NativeAccessSpecifierPublic
		class UAmmoConfig* Ammo;                                                    // 0x0078(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              AntiData;                                                // 0x0080(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TWeakObjectPtr<class AActor>                               Target;                                                  // 0x0090(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector_NetQuantize                                 HitTargetRelativeLocation;                               // 0x0098(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_132B[0x4];                                   // 0x00A4(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.SolarWeaponExpData
	 * Size -> 0x0008
	 */
	struct FSolarWeaponExpData
	{
	public:
		unsigned char                                              UnknownData_3LT7[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.PlaySoundParams
	 * Size -> 0x000C
	 */
	struct FPlaySoundParams
	{
	public:
		bool                                                       HasSilencer;                                             // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       InSameTeam;                                              // 0x0001(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       IsInRoom;                                                // 0x0002(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Q5A1[0x1];                                   // 0x0003(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    SoundFireAutoCount;                                      // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bTriggerSoundFireBurst;                                  // 0x0008(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_59QV[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.MultiHitResult
	 * Size -> 0x001C (FullSize[0x00A4] - InheritedSize[0x0088])
	 */
	struct FMultiHitResult : public FHitResult
	{
	public:
		unsigned char                                              Num;                                                     // 0x0088(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              Seed;                                                    // 0x0089(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              Mode;                                                    // 0x008A(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_03MG[0x1];                                   // 0x008B(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector_NetQuantize                                 Start;                                                   // 0x008C(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector_NetQuantize                                 End;                                                     // 0x0098(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarBlackHoleParticleData
	 * Size -> 0x0018
	 */
	struct FSolarBlackHoleParticleData
	{
	public:
		unsigned char                                              UnknownData_72G3[0x18];                                  // 0x0000(0x0018) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.SolarBulletWidgetState
	 * Size -> 0x0010
	 */
	struct FSolarBulletWidgetState
	{
	public:
		class UWidget* BulletWidget;                                            // 0x0000(0x0008) BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bReloadState;                                            // 0x0008(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_HOG1[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.WeaponShotHitResult
	 * Size -> 0x003C
	 */
	struct FWeaponShotHitResult
	{
	public:
		TWeakObjectPtr<class AActor>                               Actor;                                                   // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector_NetQuantize                                 Location;                                                // 0x0008(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                BoneName;                                                // 0x0014(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector_NetQuantizeNormal                           ImpactNormal;                                            // 0x001C(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bBlockingHit : 1;                                        // 0x0028(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_R6AL[0x3];                                   // 0x0029(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TWeakObjectPtr<class UPrimitiveComponent>                  Component;                                               // 0x002C(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TWeakObjectPtr<class UPhysicalMaterial>                    PhysMaterial;                                            // 0x0034(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SpawnProjParam
	 * Size -> 0x0050
	 */
	struct FSpawnProjParam
	{
	public:
		struct FVector_NetQuantize                                 Start;                                                   // 0x0000(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             Velocity;                                                // 0x000C(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              Mode;                                                    // 0x0018(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              CurRocketNum;                                            // 0x0019(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bTriggerAnim : 1;                                        // 0x001A(0x0001) BIT_FIELD NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_AQS5[0x1];                                   // 0x001B(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      Scale;                                                   // 0x001C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SpeedScale;                                              // 0x0020(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TWeakObjectPtr<class AActor>                               Target;                                                  // 0x0024(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		uint32_t                                                   SpawnID;                                                 // 0x002C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      Timestamp;                                               // 0x0030(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TWeakObjectPtr<class ASolarPlayerController>               InstigatorController;                                    // 0x0034(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector_NetQuantize                                 RelativeLocation;                                        // 0x003C(0x000C) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_8SVY[0x8];                                   // 0x0048(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.AmmoExtraAbilityStruct
	 * Size -> 0x0020
	 */
	struct FAmmoExtraAbilityStruct
	{
	public:
		TArray<class UClass*>                                      PrimaryExtraAbilies;                                     // 0x0000(0x0010) ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<class UClass*>                                      SecondaryExtraAbilies;                                   // 0x0010(0x0010) ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.LocationEffectParam
	 * Size -> 0x001C
	 */
	struct FLocationEffectParam
	{
	public:
		struct FRotator                                            Rotation;                                                // 0x0000(0x000C) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FVector                                             Scale;                                                   // 0x000C(0x000C) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAutoDestroy;                                            // 0x0018(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EPSCPoolMethod                                             PoolingMethod;                                           // 0x0019(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAutoActivateSystem;                                     // 0x001A(0x0001) BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_P6OU[0x1];                                   // 0x001B(0x0001) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.AttachedEffectParam
	 * Size -> 0x0028
	 */
	struct FAttachedEffectParam
	{
	public:
		struct FVector                                             Location;                                                // 0x0000(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FRotator                                            Rotation;                                                // 0x000C(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FVector                                             Scale;                                                   // 0x0018(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EAttachLocation                                            LocationType;                                            // 0x0024(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAutoDestroy;                                            // 0x0025(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EPSCPoolMethod                                             PoolingMethod;                                           // 0x0026(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bAutoActivate;                                           // 0x0027(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SpawnBulletParam
	 * Size -> 0x0034
	 */
	struct FSpawnBulletParam
	{
	public:
		struct FVector                                             Start;                                                   // 0x0000(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             Velocity;                                                // 0x000C(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      SpeedScale;                                              // 0x0018(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    Mode;                                                    // 0x001C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       TriggerAnim;                                             // 0x0020(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_0WWN[0x3];                                   // 0x0021(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		float                                                      Scale;                                                   // 0x0024(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    LastClipAmmo;                                            // 0x0028(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LastFireTime;                                            // 0x002C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bStartBlocked;                                           // 0x0030(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_5RIK[0x3];                                   // 0x0031(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.BulletHitDetailData
	 * Size -> 0x004C
	 */
	struct FBulletHitDetailData
	{
	public:
		TWeakObjectPtr<class APawn>                                SourcePawn;                                              // 0x0000(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TWeakObjectPtr<class AActor>                               HitActor;                                                // 0x0008(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TWeakObjectPtr<class UPrimitiveComponent>                  HitComponent;                                            // 0x0010(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             HitActorLocation;                                        // 0x0018(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             HitLocation;                                             // 0x0024(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             HitNormal;                                               // 0x0030(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FName                                                HitBone;                                                 // 0x003C(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TWeakObjectPtr<class UPhysicalMaterial>                    PhysMaterial;                                            // 0x0044(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.MutiBulletHitData
	 * Size -> 0x0050
	 */
	struct FMutiBulletHitData
	{
	public:
		struct FFireUniqueID                                       FireUniqueID;                                            // 0x0000(0x0004) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int8_t                                                     FireMode;                                                // 0x0004(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int8_t                                                     IsScopeOpen;                                             // 0x0005(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bValidHit;                                               // 0x0006(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DXZY[0x1];                                   // 0x0007(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             StartLocation;                                           // 0x0008(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             WeaponLocation;                                          // 0x0014(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ServerTimeSeconds;                                       // 0x0020(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DamageScale;                                             // 0x0024(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    LastClipAmmo;                                            // 0x0028(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LastFireTime;                                            // 0x002C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FSolarWeaponHitAntiData>                     HitAntiDatas;                                            // 0x0030(0x0010) ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FBulletHitDetailData>                        HitDetailDataArray;                                      // 0x0040(0x0010) ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.BulletHitData
	 * Size -> 0x00C0
	 */
	struct FBulletHitData
	{
	public:
		struct FFireUniqueID                                       FireUniqueID;                                            // 0x0000(0x0004) NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int8_t                                                     FireMode;                                                // 0x0004(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bValidHit;                                               // 0x0005(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_R7ZI[0x2];                                   // 0x0006(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector                                             StartLocation;                                           // 0x0008(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FVector                                             WeaponLocation;                                          // 0x0014(0x000C) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ServerTimeSeconds;                                       // 0x0020(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      DamageScale;                                             // 0x0024(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    LastClipAmmo;                                            // 0x0028(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      LastFireTime;                                            // 0x002C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSolarWeaponHitAntiData                             HitAntiData;                                             // 0x0030(0x0040) NoDestructor, NativeAccessSpecifierPublic
		struct FBulletHitDetailData                                HitDetailData;                                           // 0x0070(0x004C) NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_Q9XX[0x4];                                   // 0x00BC(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.SolarWeaponPartDescRow
	 * Size -> 0x0010 (FullSize[0x0018] - InheritedSize[0x0008])
	 */
	struct FSolarWeaponPartDescRow : public FTableRowBase
	{
	public:
		TArray<struct FSolarWeaponPartEffectDesc>                  DescriptionArray;                                        // 0x0008(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.GearData
	 * Size -> 0x001C
	 */
	struct FGearData
	{
	public:
		unsigned char                                              UnknownData_3FDU[0x1C];                                  // 0x0000(0x001C) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.SoundGroupByBattleAdvancedTableData
	 * Size -> 0x0090 (FullSize[0x0098] - InheritedSize[0x0008])
	 */
	struct FSoundGroupByBattleAdvancedTableData : public FSoundGroupTableDataBase
	{
	public:
		struct FSoundGroupSoundEvent                               IAttackOtherEvent;                                       // 0x0008(0x0030) Edit, NativeAccessSpecifierPublic
		struct FSoundGroupSoundEvent                               OtherAttackMeEvent;                                      // 0x0038(0x0030) Edit, NativeAccessSpecifierPublic
		struct FSoundGroupSoundEvent                               OtherEvent;                                              // 0x0068(0x0030) Edit, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SoundGroupByTeammateAdvancedTableData
	 * Size -> 0x0090 (FullSize[0x0098] - InheritedSize[0x0008])
	 */
	struct FSoundGroupByTeammateAdvancedTableData : public FSoundGroupTableDataBase
	{
	public:
		struct FSoundGroupSoundEvent                               SelfEvent;                                               // 0x0008(0x0030) Edit, NativeAccessSpecifierPublic
		struct FSoundGroupSoundEvent                               TeammateEvent;                                           // 0x0038(0x0030) Edit, NativeAccessSpecifierPublic
		struct FSoundGroupSoundEvent                               OtherEvent;                                              // 0x0068(0x0030) Edit, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SoundGroupSimpleAdvancedTableData
	 * Size -> 0x0030 (FullSize[0x0038] - InheritedSize[0x0008])
	 */
	struct FSoundGroupSimpleAdvancedTableData : public FSoundGroupTableDataBase
	{
	public:
		struct FSoundGroupSoundEvent                               SoundEvent;                                              // 0x0008(0x0030) Edit, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SoundGroupShareParamsTableDataBase
	 * Size -> 0x0020 (FullSize[0x0028] - InheritedSize[0x0008])
	 */
	struct FSoundGroupShareParamsTableDataBase : public FSoundGroupTableDataBase
	{
	public:
		struct FSoundGroupWwiseParams                              WwiseParams;                                             // 0x0008(0x0020) Edit, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SoundGroupByBattleTableData
	 * Size -> 0x0030 (FullSize[0x0058] - InheritedSize[0x0028])
	 */
	struct FSoundGroupByBattleTableData : public FSoundGroupShareParamsTableDataBase
	{
	public:
		class FString                                              IAttackOtherEvent;                                       // 0x0028(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              OtherAttackMeEvent;                                      // 0x0038(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              OtherEvent;                                              // 0x0048(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SoundGroupByTeammateTableData
	 * Size -> 0x0030 (FullSize[0x0058] - InheritedSize[0x0028])
	 */
	struct FSoundGroupByTeammateTableData : public FSoundGroupShareParamsTableDataBase
	{
	public:
		class FString                                              SelfEvent;                                               // 0x0028(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              TeammateEvent;                                           // 0x0038(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              OtherEvent;                                              // 0x0048(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SoundGroupSimpleTableData
	 * Size -> 0x0010 (FullSize[0x0038] - InheritedSize[0x0028])
	 */
	struct FSoundGroupSimpleTableData : public FSoundGroupShareParamsTableDataBase
	{
	public:
		class FString                                              SoundEvent;                                              // 0x0028(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SoundGroupPlayContextSimple
	 * Size -> 0x0008 (FullSize[0x0010] - InheritedSize[0x0008])
	 */
	struct FSoundGroupPlayContextSimple : public FSoundGroupPlayContext
	{
	public:
		ESoundGroupPlayContextEnum                                 Context;                                                 // 0x0008(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7I2F[0x7];                                   // 0x0009(0x0007) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.PlatformParams
	 * Size -> 0x0018
	 */
	struct FPlatformParams
	{
	public:
		int64_t                                                    UserId;                                                  // 0x0000(0x0008) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class FString                                              OpenId;                                                  // 0x0008(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.PlayerBattleRequestInfo
	 * Size -> 0x0030
	 */
	struct FPlayerBattleRequestInfo
	{
	public:
		class FString                                              NickName;                                                // 0x0000(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    AccountLevel;                                            // 0x0010(0x0004) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_GH64[0x4];                                   // 0x0014(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FPlatformParams                                     PlatformParams;                                          // 0x0018(0x0018) BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.StartBattleRequestInfo
	 * Size -> 0x0008
	 */
	struct FStartBattleRequestInfo
	{
	public:
		int32_t                                                    aiNum;                                                   // 0x0000(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    AiLevel;                                                 // 0x0004(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarSummonSoundData
	 * Size -> 0x0010
	 */
	struct FSolarSummonSoundData
	{
	public:
		TArray<class FString>                                      SoundNames;                                              // 0x0000(0x0010) Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.CustomWidget_TableRow
	 * Size -> 0x0090 (FullSize[0x0098] - InheritedSize[0x0008])
	 */
	struct FCustomWidget_TableRow : public FTableRowBase
	{
	public:
		struct FSoftObjectPath                                     TeammateState;                                           // 0x0008(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     BattleScore;                                             // 0x0020(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     SpectatorListPath;                                       // 0x0038(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     SafeAreaProgress;                                        // 0x0050(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     JobEffectListPath;                                       // 0x0068(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     JobEffectSelectPanelPath;                                // 0x0080(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.KillTotalNoticeWidget
	 * Size -> 0x0018
	 */
	struct FKillTotalNoticeWidget
	{
	public:
		TArray<class UImage*>                                      Img_KillTotals;                                          // 0x0000(0x0010) ExportObject, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USolarTextBlock* Txt_KillTotal;                                           // 0x0010(0x0008) ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.StarterUIInfo
	 * Size -> 0x0088
	 */
	struct FStarterUIInfo
	{
	public:
		unsigned char                                              UnknownData_SYTO[0x10];                                  // 0x0000(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		class UClass* UIClass;                                                 // 0x0010(0x0008) ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              MobileUIClass[0x28];                                     // 0x0018(0x0028) UNKNOWN PROPERTY: SoftClassProperty
		unsigned char                                              DesktopUIClass[0x28];                                    // 0x0040(0x0028) UNKNOWN PROPERTY: SoftClassProperty
		bool                                                       bCreateForEachDisplay;                                   // 0x0068(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_PQ33[0x3];                                   // 0x0069(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    OrderFromTopOverride;                                    // 0x006C(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bFullScreen;                                             // 0x0070(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_WW88[0x17];                                  // 0x0071(0x0017) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.LruWidgetPool
	 * Size -> 0x0080
	 */
	struct FLruWidgetPool
	{
	public:
		unsigned char                                              UnknownData_GNVM[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		TArray<class UUserWidget*>                                 ActiveWidgetStack;                                       // 0x0008(0x0010) ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate
		unsigned char                                              UnknownData_E7VV[0x68];                                  // 0x0018(0x0068) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.VehicleStateAir
	 * Size -> 0x0008 (FullSize[0x0080] - InheritedSize[0x0078])
	 */
	struct FVehicleStateAir : public FVehicleState
	{
	public:
		unsigned char                                              UnknownData_MDWQ[0x8];                                   // 0x0078(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.VehicleAirToGround
	 * Size -> 0x0000 (FullSize[0x0018] - InheritedSize[0x0018])
	 */
	struct FVehicleAirToGround : public FVehicleStateTransition
	{	};

	/**
	 * ScriptStruct Solarland.VehicleStateGround
	 * Size -> 0x0018 (FullSize[0x0090] - InheritedSize[0x0078])
	 */
	struct FVehicleStateGround : public FVehicleState
	{
	public:
		unsigned char                                              UnknownData_DA2G[0x18];                                  // 0x0078(0x0018) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.VehicleGroundToSliding
	 * Size -> 0x0000 (FullSize[0x0018] - InheritedSize[0x0018])
	 */
	struct FVehicleGroundToSliding : public FVehicleStateTransition
	{	};

	/**
	 * ScriptStruct Solarland.VehicleStateSliding
	 * Size -> 0x0000 (FullSize[0x0078] - InheritedSize[0x0078])
	 */
	struct FVehicleStateSliding : public FVehicleState
	{	};

	/**
	 * ScriptStruct Solarland.VehicleSlidingToGround
	 * Size -> 0x0000 (FullSize[0x0018] - InheritedSize[0x0018])
	 */
	struct FVehicleSlidingToGround : public FVehicleStateTransition
	{	};

	/**
	 * ScriptStruct Solarland.VehicleWeaponCrossHairInfo
	 * Size -> 0x0024
	 */
	struct FVehicleWeaponCrossHairInfo
	{
	public:
		bool                                                       bShowCrossHair;                                          // 0x0000(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_R2AM[0x3];                                   // 0x0001(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector2D                                           CrossHairPosition;                                       // 0x0004(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      CrossHairOpacity;                                        // 0x000C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bShowReticleDirection;                                   // 0x0010(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_6KYY[0x3];                                   // 0x0011(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FVector2D                                           ReticleDirectionPosition;                                // 0x0014(0x0008) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      ReticleDirectionAngle;                                   // 0x001C(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       bCrossHairForbid;                                        // 0x0020(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_C1M6[0x3];                                   // 0x0021(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.VibrateDataDTRow
	 * Size -> 0x0018 (FullSize[0x0020] - InheritedSize[0x0008])
	 */
	struct FVibrateDataDTRow : public FTableRowBase
	{
	public:
		struct FSoftObjectPath                                     ClipPath;                                                // 0x0008(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.PlayerWeaponSoundGroupMappingData
	 * Size -> 0x00F8 (FullSize[0x0100] - InheritedSize[0x0008])
	 */
	struct FPlayerWeaponSoundGroupMappingData : public FTableRowBase
	{
	public:
		TMap<int32_t, class FName>                                 SkinMapping;                                             // 0x0008(0x0050) Edit, NativeAccessSpecifierPublic
		TMap<int32_t, class FName>                                 IDMapping;                                               // 0x0058(0x0050) Edit, NativeAccessSpecifierPublic
		TMap<EWeaponType, class FName>                             TypeMapping;                                             // 0x00A8(0x0050) Edit, NativeAccessSpecifierPublic
		class FName                                                Default;                                                 // 0x00F8(0x0008) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.WeaponAttachTransformData
	 * Size -> 0x0060
	 */
	struct FWeaponAttachTransformData
	{
	public:
		struct FTransform                                          RelativeTransformIdle;                                   // 0x0000(0x0030) Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
		struct FTransform                                          RelativeTransformCrouch;                                 // 0x0030(0x0030) Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.WeaponAttachDataByCharacter
	 * Size -> 0x00B0
	 */
	struct FWeaponAttachDataByCharacter
	{
	public:
		struct FWeaponAttachTransformData                          DefaultRelativeTransform;                                // 0x0000(0x0060) Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		TMap<int32_t, struct FWeaponAttachTransformData>           SkinSpecificData;                                        // 0x0060(0x0050) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.WeaponAttachData
	 * Size -> 0x0100
	 */
	struct FWeaponAttachData
	{
	public:
		struct FWeaponAttachTransformData                          DefaultRelativeTransform;                                // 0x0000(0x0060) Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPublic
		TMap<ECharacterBodyScaleType, struct FWeaponAttachTransformData> TransformByBodyScale;                                    // 0x0060(0x0050) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
		TMap<int32_t, struct FWeaponAttachDataByCharacter>         CharacterSpecificData;                                   // 0x00B0(0x0050) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarWeaponAttachDataTableRow
	 * Size -> 0x0158 (FullSize[0x0160] - InheritedSize[0x0008])
	 */
	struct FSolarWeaponAttachDataTableRow : public FTableRowBase
	{
	public:
		unsigned char                                              UnknownData_GOQC[0x8];                                   // 0x0008(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FWeaponAttachData                                   DefaultAttachData;                                       // 0x0010(0x0100) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
		TMap<int32_t, struct FWeaponAttachData>                    WeaponSkinSpecificData;                                  // 0x0110(0x0050) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarWeaponLODData
	 * Size -> 0x0008
	 */
	struct FSolarWeaponLODData
	{
	public:
		int32_t                                                    ForcedLOD;                                               // 0x0000(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    MinLOD;                                                  // 0x0004(0x0004) Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarWeaponLODTableRow
	 * Size -> 0x0140 (FullSize[0x0148] - InheritedSize[0x0008])
	 */
	struct FSolarWeaponLODTableRow : public FTableRowBase
	{
	public:
		TMap<ESolarWeaponLODState, struct FSolarWeaponLODData>     WeaponDefaultLODMap;                                     // 0x0008(0x0050) Edit, NativeAccessSpecifierPublic
		TMap<ESolarWeaponLODState, struct FSolarWeaponLODData>     WeaponFocusedLODMap;                                     // 0x0058(0x0050) Edit, NativeAccessSpecifierPublic
		TMap<ESolarWeaponLODState, struct FSolarWeaponLODData>     WeaponPartDefaultLODMap;                                 // 0x00A8(0x0050) Edit, NativeAccessSpecifierPublic
		TMap<ESolarWeaponLODState, struct FSolarWeaponLODData>     WeaponPartFocusedLODMap;                                 // 0x00F8(0x0050) Edit, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.SolarWeaponSkinTableRow
	 * Size -> 0x0018 (FullSize[0x0020] - InheritedSize[0x0008])
	 */
	struct FSolarWeaponSkinTableRow : public FTableRowBase
	{
	public:
		struct FSoftObjectPath                                     WeaponSkinDataPath;                                      // 0x0008(0x0018) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.WeaponScopeSensitivityRow
	 * Size -> 0x0040 (FullSize[0x0048] - InheritedSize[0x0008])
	 */
	struct FWeaponScopeSensitivityRow : public FTableRowBase
	{
	public:
		class FName                                                TypeName;                                                // 0x0008(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      FovValue;                                                // 0x0010(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		float                                                      HipToAdsTime;                                            // 0x0014(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              FovChangeCurve[0x28];                                    // 0x0018(0x0028) UNKNOWN PROPERTY: SoftObjectProperty
		float                                                      HitEffectScale;                                          // 0x0040(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_DZBY[0x4];                                   // 0x0044(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.WeaponAppearanceDTRow
	 * Size -> 0x0248 (FullSize[0x0250] - InheritedSize[0x0008])
	 */
	struct FWeaponAppearanceDTRow : public FTableRowBase
	{
	public:
		struct FSoftObjectPath                                     MeshPath;                                                // 0x0008(0x0018) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftObjectPath                                     MaterialPath;                                            // 0x0020(0x0018) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EWeaponType                                                WPType;                                                  // 0x0038(0x0001) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_N3QQ[0x3];                                   // 0x0039(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    FireModeNameLocalizationID;                              // 0x003C(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSlateBrush                                         TriggerIcon;                                             // 0x0040(0x00E0) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
		int32_t                                                    UpgradeFireModeNameLocalizationID;                       // 0x0120(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_2J2F[0xC];                                   // 0x0124(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSlateBrush                                         UpgradeTriggerIcon;                                      // 0x0130(0x00E0) Edit, DisableEditOnInstance, NativeAccessSpecifierPublic
		float                                                      Radius;                                                  // 0x0210(0x0004) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_L6PV[0xC];                                   // 0x0214(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FTransform                                          SphereTransform;                                         // 0x0220(0x0030) Edit, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.WeaponDTRow
	 * Size -> 0x0048 (FullSize[0x0050] - InheritedSize[0x0008])
	 */
	struct FWeaponDTRow : public FTableRowBase
	{
	public:
		class FString                                              WeaponDesc;                                              // 0x0008(0x0010) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftClassPath                                      FightWeaponBPPath;                                       // 0x0018(0x0018) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		struct FSoftClassPath                                      PreviewWeaponBPPath;                                     // 0x0030(0x0018) Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic
		class USingleWeaponConfig* WeaponConfig;                                            // 0x0048(0x0008) Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.WeaponFireTPPAnimUtility
	 * Size -> 0x0040
	 */
	struct FWeaponFireTPPAnimUtility
	{
	public:
		unsigned char                                              UnknownData_UY7S[0x40];                                  // 0x0000(0x0040) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.WeaponFireFPPAnimUtility
	 * Size -> 0x00C8
	 */
	struct FWeaponFireFPPAnimUtility
	{
	public:
		unsigned char                                              UnknownData_NWSK[0xC8];                                  // 0x0000(0x00C8) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.UpgradeSlotStruct
	 * Size -> 0x0100
	 */
	struct FUpgradeSlotStruct
	{
	public:
		int32_t                                                    SlotID;                                                  // 0x0000(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		bool                                                       Unlock;                                                  // 0x0004(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		EWeaponUpgradeType                                         AccessoryType;                                           // 0x0005(0x0001) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_7FJT[0x2];                                   // 0x0006(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    AccessoryID;                                             // 0x0008(0x0004) Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_1CUR[0x4];                                   // 0x000C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		struct FSlateBrush                                         IconOverride;                                            // 0x0010(0x00E0) BlueprintVisible, BlueprintReadOnly, Transient, RepSkip, NativeAccessSpecifierPublic
		struct FLinearColor                                        IconColorOverride;                                       // 0x00F0(0x0010) BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

	/**
	 * ScriptStruct Solarland.WeaponUpgradeNetData
	 * Size -> 0x0020
	 */
	struct FWeaponUpgradeNetData
	{
	public:
		int32_t                                                    TotalScore;                                              // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    LevelScore;                                              // 0x0004(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		TArray<struct FUpgradeSlotStruct>                          UpgradeSlots;                                            // 0x0008(0x0010) Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		int32_t                                                    UpgradeCount;                                            // 0x0018(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_81QU[0x4];                                   // 0x001C(0x0004) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.WeaponSysBolt
	 * Size -> 0x0014
	 */
	struct FWeaponSysBolt
	{
	public:
		unsigned char                                              UnknownData_328J[0x14];                                  // 0x0000(0x0014) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.WeaponSysInput
	 * Size -> 0x0003
	 */
	struct FWeaponSysInput
	{
	public:
		unsigned char                                              UnknownData_TR2S[0x3];                                   // 0x0000(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.WeaponSysStateStruct
	 * Size -> 0x0010
	 */
	struct FWeaponSysStateStruct
	{
	public:
		int32_t                                                    State;                                                   // 0x0000(0x0004) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_75CX[0x8];                                   // 0x0004(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		bool                                                       bPost;                                                   // 0x000C(0x0001) ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_YIK5[0x3];                                   // 0x000D(0x0003) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.WeaponSysPostStateStruct
	 * Size -> 0x0000 (FullSize[0x0010] - InheritedSize[0x0010])
	 */
	struct FWeaponSysPostStateStruct : public FWeaponSysStateStruct
	{	};

	/**
	 * ScriptStruct Solarland.WeaponRealAttachInfo
	 * Size -> 0x0008
	 */
	struct FWeaponRealAttachInfo
	{
	public:
		unsigned char                                              UnknownData_UANT[0x8];                                   // 0x0000(0x0008) MISSED OFFSET (PADDING)
	};

	/**
	 * ScriptStruct Solarland.WeaponUIStyleSheetRow
	 * Size -> 0x0008 (FullSize[0x0010] - InheritedSize[0x0008])
	 */
	struct FWeaponUIStyleSheetRow : public FTableRowBase
	{
	public:
		bool                                                       bSameQualityPlus;                                        // 0x0008(0x0001) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
		unsigned char                                              UnknownData_TOGN[0x3];                                   // 0x0009(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
		int32_t                                                    Quality;                                                 // 0x000C(0x0004) Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic
	};

}

#ifdef _MSC_VER
#pragma pack(pop)
#endif
